<?xml version="1.0" encoding="UTF-8"?>
  <project name="Ant for TOM" default="buildstable" basedir=".">
    <description>
      Build script using Ant offering checks, dists,
      installation, and so on.
      it aims at offering the same functionality as the
      automake files included in the TOM source
      distribution.
      
      To use this build file, install ant,
      and just run ant in the current directory.
      
      You can modify certain default settings via
      ant -Ddist="/home/yourdirectory"
      for the various properties listed below.
      
      Author: Julien GUYON, LORIA
      Created: August 06, 2003.
    </description>
    
    <!-- set local properties for this build -->
		<property file="local.properties"/>

    <!-- current version of TOM -->
    <property name="version" value="2.0beta"/>
    <!-- place to find the stable sources -->
    <property name="test" location="test"/>
		<property name="utils" location="utils"/>
		<property name="lib" location="lib"/>

    <!-- place to find the stable sources -->
    <property name="stable.src" location="stable"/>
  	<property name="stable.build" location="stable/build"/>
  	<property name="stable.adt" location="stable/adt"/>

   	<!-- place to find the stable sources -->
    <property name="src.src" location="src"/>
  	<property name="src.build" location="src/build"/>
  	<property name="src.adt" location="src/adt"/>
  	
  	<property name="src.runtime" location="src/jtom/runtime/"/>
  	<property name="stable.runtime" location="stable/jtom/runtime/"/>

  		<!--
				<property name="javacFailOnError" value="false"/>
				<property name="javacDebugInfo" value="on"/>
				<property name="javacSource" value="1.3"/>
				<property name="javacTarget" value="1.2"/>
			-->
			
  	<property name="javacVerbose" value="false"/>
  	
  	<target name="preparesrc">
  		<mkdir dir="${src.build}"/>
  	</target>
  	<target name="preparestable">
  		<mkdir dir="${stable.build}"/>
  	</target>
  		
  	<path id="stable.classpath">
		<pathelement location="${atermjavajar}"/>
		<pathelement location="${sharedobjectjar}"/>
		<pathelement location="${jjtravelerjar}"/>
		<pathelement location="${apigenjar}"/>
  		<fileset dir="${src.runtime}">
  			<include name="*.jar"/>
  		</fileset>
  		<fileset dir="${stable.adt}">
  			<include name="*.jar"/>
  		</fileset>
  		<fileset dir="${lib}">
  			<include name="*.jar"/>
  		</fileset>
  	</path>
  	
  	<path id="src.classpath">
		<pathelement location="${atermjavajar}"/>
		<pathelement location="${sharedobjectjar}"/>
		<pathelement location="${jjtravelerjar}"/>
		<pathelement location="${apigenjar}"/>
  		<fileset dir="${src.runtime}">
  			<include name="*.jar"/>
  		</fileset>
  		<!--<fileset dir="${src.adt}">
  			<include name="*.jar"/>
  		</fileset>-->
  		<fileset dir="${lib}">
  			<include name="*.jar"/>
  		</fileset>
  	</path>

		<!-- builds the custom tasks -->
		<target name="init">
			<javac srcdir="${utils}" destdir="${utils}"/>

			<taskdef name="adt" classname="ApigenAntTask">
				<classpath>
					<pathelement location="${utils}"/>
				</classpath>
			</taskdef>
			<taskdef name="tom" classname="TomAntTask">
				<classpath>
					<pathelement location="${utils}"/>
				</classpath>
			</taskdef>
		</target>

		<target name="buildtom" depends="init, buildadt">
			<tom srcdir="${src.src}" destdir="${src.src}" options="-I ${stable.runtime}/mapping --noDeclaration">
				<exclude name="**/TomBase.t"/>
				<exclude name="**/TomBackQuoteParser.t"/>
				<exclude name="**/runtime/**/*.t"/>	
			</tom>
			<tom srcdir="${src.src}" destdir="${src.src}" options="-I ${stable.runtime}/mapping">
				<include name="**/runtime/**/*.t"/>	
				<include name="**/TomBase.t"/>
				<include name="**/TomBackQuoteParser.t"/>	
			</tom>
		</target>

		<target name="buildparser">
			<javacc 
			 target="${src.src}/jtom/parser/TomParser.jj"
			 javacchome="${javaccdir}" /> 
		</target>

		<target name="check.newer.adt">
			<uptodate targetfile="${src.adt}/TomSignature.adt" srcfile="${src.adt}/jtom/adt/" property="newer.adt"/>
			<uptodate targetfile="${src.adt}/TNode.adt" srcfile="${src.adt}/jtom/adt/" property="newer.adt"/>
			<uptodate targetfile="${src.adt}/Set.adt" srcfile="${src.adt}/jtom/adt/" property="newer.adt"/>
			<echo>check new ${newer.adt}</echo>
		</target>
  		
		<!--
			<target name="buildadt" depends="init, preparesrc" if="newer.adt">
		-->
  	<target name="buildadt" depends="init, preparesrc">
			<adt file="${src.adt}/TomSignature.adt" factory="TomSignature" package="jtom.adt" destdir="${src.adt}"/>
			<adt file="${src.adt}/TNode.adt" factory="TNode" package="jtom.adt" destdir="${src.adt}"/>
			<adt file="${src.adt}/Set.adt" factory="Set" package="jtom.adt" destdir="${src.adt}"/>
	</target>
  	
  	<target name="buildsrc" description="compile the TOM development sources" depends="preparesrc">
			<antcall target="check.newer.adt"/>
  		<antcall target="buildadt"/>
  		<antcall target="buildtom"/>
			<antcall target="buildparser"/>
  		<javac srcdir="${src.src}" destdir="${src.build}" verbose="${javacVerbose}">
			<classpath refid="src.classpath"/>
		</javac>
  	</target>
	
  	<target name="buildstable" description="compile the TOM stable sources" depends="preparestable">
		<tstamp/>
		<!--<pathconvert targetos="windows" property="windowspath" refid="stable.classpath">
		</pathconvert>
		<echo>classpath = ${windowspath}</echo>-->
		<!-- Compile the java code from ${stable} into ${stable} -->
		<javac srcdir="${stable.src}" destdir="${stable.build}" verbose="${javacVerbose}">
			<classpath refid="stable.classpath"/>
		</javac>
	</target>  

	<target name="cleanstable" description="Purges stable files" >
		<delete dir="${stable.build}"/>
	</target>
	
	<target name="cleansrc" description="Purges src files" >
		<delete dir="${src.build}"/>
		<delete dir="${src.adt}/jtom"/>
		<delete> <fileset dir="${src.adt}" includes="**/*.tom"/></delete>
		<delete> 
			<fileset dir="${src.src}/jtom/parser">
				<include name="Token.java"/>
				<include name="ParseException.java"/>
				<include name="TokenMgrError.java"/>
				<include name="TomParser.java"/>
				<include name="TomParserConstants.java"/>
				<include name="TomParserTokenManager.java"/>
			</fileset>
		</delete>
	</target>
	

</project>

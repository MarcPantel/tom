/* Generated by TOM (version 2.5alpha): Do not edit this file *//*
 * Gom
 *
 * Copyright (C) 2006-2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.compiler;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.gom.GomMessage;
import tom.gom.tools.GomEnvironment;
import tom.gom.adt.gom.*;
import tom.gom.adt.gom.types.*;
import tom.gom.tools.error.GomRuntimeException;

import tom.gom.adt.objects.*;
import tom.gom.adt.objects.types.*;
import tom.library.sl.VisitFailure;

public class Compiler {

  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  private static boolean tom_equal_term_Hook(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Hook(Object t) { return  t instanceof tom.gom.adt.objects.types.Hook ;}private static boolean tom_equal_term_SlotField(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotField(Object t) { return  t instanceof tom.gom.adt.objects.types.SlotField ;}private static boolean tom_equal_term_SlotFieldList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotFieldList(Object t) { return  t instanceof tom.gom.adt.objects.types.SlotFieldList ;}private static boolean tom_equal_term_GomClass(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomClass(Object t) { return  t instanceof tom.gom.adt.objects.types.GomClass ;}private static boolean tom_equal_term_ClassName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ClassName(Object t) { return  t instanceof tom.gom.adt.objects.types.ClassName ;}private static boolean tom_equal_term_GomClassList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomClassList(Object t) { return  t instanceof tom.gom.adt.objects.types.GomClassList ;}private static boolean tom_equal_term_ClassNameList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ClassNameList(Object t) { return  t instanceof tom.gom.adt.objects.types.ClassNameList ;}private static boolean tom_equal_term_HookList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_HookList(Object t) { return  t instanceof tom.gom.adt.objects.types.HookList ;}private static boolean tom_equal_term_Slot(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Slot(Object t) { return  t instanceof tom.gom.adt.gom.types.Slot ;}private static boolean tom_equal_term_TypedProduction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TypedProduction(Object t) { return  t instanceof tom.gom.adt.gom.types.TypedProduction ;}private static boolean tom_equal_term_OperatorDeclList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OperatorDeclList(Object t) { return  t instanceof tom.gom.adt.gom.types.OperatorDeclList ;}private static boolean tom_equal_term_OperatorDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OperatorDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.OperatorDecl ;}private static boolean tom_equal_term_Sort(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Sort(Object t) { return  t instanceof tom.gom.adt.gom.types.Sort ;}private static boolean tom_equal_term_SortDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SortDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.SortDecl ;}private static boolean tom_equal_term_Module(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Module(Object t) { return  t instanceof tom.gom.adt.gom.types.Module ;}private static boolean tom_equal_term_SlotList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotList(Object t) { return  t instanceof tom.gom.adt.gom.types.SlotList ;}private static boolean tom_equal_term_SortList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SortList(Object t) { return  t instanceof tom.gom.adt.gom.types.SortList ;}private static boolean tom_equal_term_GomModuleName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomModuleName(Object t) { return  t instanceof tom.gom.adt.gom.types.GomModuleName ;}private static boolean tom_equal_term_ModuleDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ModuleDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.ModuleDecl ;}private static boolean tom_equal_term_ModuleList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ModuleList(Object t) { return  t instanceof tom.gom.adt.gom.types.ModuleList ;}private static  tom.gom.adt.objects.types.SlotField  tom_make_SlotField( String  t0,  tom.gom.adt.objects.types.ClassName  t1) { return  tom.gom.adt.objects.types.slotfield.SlotField.make(t0, t1) ; }private static  tom.gom.adt.objects.types.GomClass  tom_make_VisitableFwdClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.GomClass  t1) { return  tom.gom.adt.objects.types.gomclass.VisitableFwdClass.make(t0, t1) ; }private static  tom.gom.adt.objects.types.GomClass  tom_make_AbstractTypeClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.ClassName  t2,  tom.gom.adt.objects.types.ClassNameList  t3,  tom.gom.adt.objects.types.HookList  t4) { return  tom.gom.adt.objects.types.gomclass.AbstractTypeClass.make(t0, t1, t2, t3, t4) ; }private static  tom.gom.adt.objects.types.GomClass  tom_make_SortClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.ClassName  t2,  tom.gom.adt.objects.types.ClassName  t3,  tom.gom.adt.objects.types.ClassName  t4,  tom.gom.adt.objects.types.ClassNameList  t5,  tom.gom.adt.objects.types.ClassNameList  t6,  tom.gom.adt.objects.types.SlotFieldList  t7,  tom.gom.adt.objects.types.HookList  t8) { return  tom.gom.adt.objects.types.gomclass.SortClass.make(t0, t1, t2, t3, t4, t5, t6, t7, t8) ; }private static  tom.gom.adt.objects.types.GomClass  tom_make_OperatorClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.ClassName  t2,  tom.gom.adt.objects.types.ClassName  t3,  tom.gom.adt.objects.types.ClassName  t4,  tom.gom.adt.objects.types.ClassName  t5,  tom.gom.adt.objects.types.SlotFieldList  t6,  tom.gom.adt.objects.types.HookList  t7) { return  tom.gom.adt.objects.types.gomclass.OperatorClass.make(t0, t1, t2, t3, t4, t5, t6, t7) ; }private static boolean tom_is_fun_sym_VariadicOperatorClass( tom.gom.adt.objects.types.GomClass  t) { return  t instanceof tom.gom.adt.objects.types.gomclass.VariadicOperatorClass ;}private static  tom.gom.adt.objects.types.GomClass  tom_make_VariadicOperatorClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.ClassName  t2,  tom.gom.adt.objects.types.ClassName  t3,  tom.gom.adt.objects.types.GomClass  t4,  tom.gom.adt.objects.types.GomClass  t5,  tom.gom.adt.objects.types.HookList  t6) { return  tom.gom.adt.objects.types.gomclass.VariadicOperatorClass.make(t0, t1, t2, t3, t4, t5, t6) ; }private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_ClassName( tom.gom.adt.objects.types.GomClass  t) { return  t.getClassName() ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_AbstractType( tom.gom.adt.objects.types.GomClass  t) { return  t.getAbstractType() ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_Mapping( tom.gom.adt.objects.types.GomClass  t) { return  t.getMapping() ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_SortName( tom.gom.adt.objects.types.GomClass  t) { return  t.getSortName() ;}private static  tom.gom.adt.objects.types.GomClass  tom_get_slot_VariadicOperatorClass_Empty( tom.gom.adt.objects.types.GomClass  t) { return  t.getEmpty() ;}private static  tom.gom.adt.objects.types.GomClass  tom_get_slot_VariadicOperatorClass_Cons( tom.gom.adt.objects.types.GomClass  t) { return  t.getCons() ;}private static  tom.gom.adt.objects.types.HookList  tom_get_slot_VariadicOperatorClass_Hooks( tom.gom.adt.objects.types.GomClass  t) { return  t.getHooks() ;}private static  tom.gom.adt.objects.types.GomClass  tom_make_VisitorClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.GomClassList  t1,  tom.gom.adt.objects.types.GomClassList  t2) { return  tom.gom.adt.objects.types.gomclass.VisitorClass.make(t0, t1, t2) ; }private static  tom.gom.adt.objects.types.GomClass  tom_make_FwdClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.ClassNameList  t2,  tom.gom.adt.objects.types.ClassName  t3,  tom.gom.adt.objects.types.ClassNameList  t4,  tom.gom.adt.objects.types.GomClassList  t5,  tom.gom.adt.objects.types.GomClassList  t6) { return  tom.gom.adt.objects.types.gomclass.FwdClass.make(t0, t1, t2, t3, t4, t5, t6) ; }private static  tom.gom.adt.objects.types.GomClass  tom_make_TomMapping( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.GomClassList  t2,  tom.gom.adt.objects.types.GomClassList  t3) { return  tom.gom.adt.objects.types.gomclass.TomMapping.make(t0, t1, t2, t3) ; }private static  tom.gom.adt.objects.types.ClassName  tom_make_ClassName( String  t0,  String  t1) { return  tom.gom.adt.objects.types.classname.ClassName.make(t0, t1) ; }private static boolean tom_is_fun_sym_Slot( tom.gom.adt.gom.types.Slot  t) { return  t instanceof tom.gom.adt.gom.types.slot.Slot ;}private static  String  tom_get_slot_Slot_Name( tom.gom.adt.gom.types.Slot  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Slot_Sort( tom.gom.adt.gom.types.Slot  t) { return  t.getSort() ;}private static boolean tom_is_fun_sym_Slots( tom.gom.adt.gom.types.TypedProduction  t) { return  t instanceof tom.gom.adt.gom.types.typedproduction.Slots ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_slot_Slots_Slots( tom.gom.adt.gom.types.TypedProduction  t) { return  t.getSlots() ;}private static boolean tom_is_fun_sym_Variadic( tom.gom.adt.gom.types.TypedProduction  t) { return  t instanceof tom.gom.adt.gom.types.typedproduction.Variadic ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Variadic_Sort( tom.gom.adt.gom.types.TypedProduction  t) { return  t.getSort() ;}private static boolean tom_is_fun_sym_OperatorDecl( tom.gom.adt.gom.types.OperatorDecl  t) { return  t instanceof tom.gom.adt.gom.types.operatordecl.OperatorDecl ;}private static  String  tom_get_slot_OperatorDecl_Name( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_OperatorDecl_Sort( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getSort() ;}private static  tom.gom.adt.gom.types.TypedProduction  tom_get_slot_OperatorDecl_Prod( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getProd() ;}private static boolean tom_is_fun_sym_Sort( tom.gom.adt.gom.types.Sort  t) { return  t instanceof tom.gom.adt.gom.types.sort.Sort ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Sort_Decl( tom.gom.adt.gom.types.Sort  t) { return  t.getDecl() ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_slot_Sort_Operators( tom.gom.adt.gom.types.Sort  t) { return  t.getOperators() ;}private static boolean tom_is_fun_sym_SortDecl( tom.gom.adt.gom.types.SortDecl  t) { return  t instanceof tom.gom.adt.gom.types.sortdecl.SortDecl ;}private static  String  tom_get_slot_SortDecl_Name( tom.gom.adt.gom.types.SortDecl  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_SortDecl_ModuleDecl( tom.gom.adt.gom.types.SortDecl  t) { return  t.getModuleDecl() ;}private static boolean tom_is_fun_sym_Module( tom.gom.adt.gom.types.Module  t) { return  t instanceof tom.gom.adt.gom.types.module.Module ;}private static  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_Module_MDecl( tom.gom.adt.gom.types.Module  t) { return  t.getMDecl() ;}private static  tom.gom.adt.gom.types.SortList  tom_get_slot_Module_Sorts( tom.gom.adt.gom.types.Module  t) { return  t.getSorts() ;}private static boolean tom_is_fun_sym_GomModuleName( tom.gom.adt.gom.types.GomModuleName  t) { return  t instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName ;}private static  String  tom_get_slot_GomModuleName_Name( tom.gom.adt.gom.types.GomModuleName  t) { return  t.getName() ;}private static boolean tom_is_fun_sym_ModuleDecl( tom.gom.adt.gom.types.ModuleDecl  t) { return  t instanceof tom.gom.adt.gom.types.moduledecl.ModuleDecl ;}private static  tom.gom.adt.gom.types.GomModuleName  tom_get_slot_ModuleDecl_ModuleName( tom.gom.adt.gom.types.ModuleDecl  t) { return  t.getModuleName() ;}private static  String  tom_get_slot_ModuleDecl_Pkg( tom.gom.adt.gom.types.ModuleDecl  t) { return  t.getPkg() ;}private static boolean tom_is_fun_sym_concSlotField( tom.gom.adt.objects.types.SlotFieldList  t) { return  t instanceof tom.gom.adt.objects.types.slotfieldlist.ConsconcSlotField || t instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyconcSlotField ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_empty_list_concSlotField() { return  tom.gom.adt.objects.types.slotfieldlist.EmptyconcSlotField.make() ; }private static  tom.gom.adt.objects.types.SlotFieldList  tom_cons_list_concSlotField( tom.gom.adt.objects.types.SlotField  e,  tom.gom.adt.objects.types.SlotFieldList  l) { return  tom.gom.adt.objects.types.slotfieldlist.ConsconcSlotField.make(e,l) ; }private static  tom.gom.adt.objects.types.SlotField  tom_get_head_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) { return  l.getHeadconcSlotField() ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_get_tail_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) { return  l.getTailconcSlotField() ;}private static boolean tom_is_empty_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) { return  l.isEmptyconcSlotField() ;}   private static   tom.gom.adt.objects.types.SlotFieldList  tom_append_list_concSlotField( tom.gom.adt.objects.types.SlotFieldList l1,  tom.gom.adt.objects.types.SlotFieldList  l2) {     if(tom_is_empty_concSlotField_SlotFieldList(l1)) {       return l2;     } else if(tom_is_empty_concSlotField_SlotFieldList(l2)) {       return l1;     } else if(tom_is_empty_concSlotField_SlotFieldList(tom_get_tail_concSlotField_SlotFieldList(l1))) {       return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(tom_get_head_concSlotField_SlotFieldList(l1),l2);     } else {       return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(tom_get_head_concSlotField_SlotFieldList(l1),tom_append_list_concSlotField(tom_get_tail_concSlotField_SlotFieldList(l1),l2));     }   }   private static   tom.gom.adt.objects.types.SlotFieldList  tom_get_slice_concSlotField( tom.gom.adt.objects.types.SlotFieldList  begin,  tom.gom.adt.objects.types.SlotFieldList  end, tom.gom.adt.objects.types.SlotFieldList  tail) {     if(tom_equal_term_SlotFieldList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(tom_get_head_concSlotField_SlotFieldList(begin),( tom.gom.adt.objects.types.SlotFieldList )tom_get_slice_concSlotField(tom_get_tail_concSlotField_SlotFieldList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concGomClass( tom.gom.adt.objects.types.GomClassList  t) { return  t instanceof tom.gom.adt.objects.types.gomclasslist.ConsconcGomClass || t instanceof tom.gom.adt.objects.types.gomclasslist.EmptyconcGomClass ;}private static  tom.gom.adt.objects.types.GomClassList  tom_empty_list_concGomClass() { return  tom.gom.adt.objects.types.gomclasslist.EmptyconcGomClass.make() ; }private static  tom.gom.adt.objects.types.GomClassList  tom_cons_list_concGomClass( tom.gom.adt.objects.types.GomClass  e,  tom.gom.adt.objects.types.GomClassList  l) { return  tom.gom.adt.objects.types.gomclasslist.ConsconcGomClass.make(e,l) ; }private static  tom.gom.adt.objects.types.GomClass  tom_get_head_concGomClass_GomClassList( tom.gom.adt.objects.types.GomClassList  l) { return  l.getHeadconcGomClass() ;}private static  tom.gom.adt.objects.types.GomClassList  tom_get_tail_concGomClass_GomClassList( tom.gom.adt.objects.types.GomClassList  l) { return  l.getTailconcGomClass() ;}private static boolean tom_is_empty_concGomClass_GomClassList( tom.gom.adt.objects.types.GomClassList  l) { return  l.isEmptyconcGomClass() ;}   private static   tom.gom.adt.objects.types.GomClassList  tom_append_list_concGomClass( tom.gom.adt.objects.types.GomClassList l1,  tom.gom.adt.objects.types.GomClassList  l2) {     if(tom_is_empty_concGomClass_GomClassList(l1)) {       return l2;     } else if(tom_is_empty_concGomClass_GomClassList(l2)) {       return l1;     } else if(tom_is_empty_concGomClass_GomClassList(tom_get_tail_concGomClass_GomClassList(l1))) {       return ( tom.gom.adt.objects.types.GomClassList )tom_cons_list_concGomClass(tom_get_head_concGomClass_GomClassList(l1),l2);     } else {       return ( tom.gom.adt.objects.types.GomClassList )tom_cons_list_concGomClass(tom_get_head_concGomClass_GomClassList(l1),tom_append_list_concGomClass(tom_get_tail_concGomClass_GomClassList(l1),l2));     }   }   private static   tom.gom.adt.objects.types.GomClassList  tom_get_slice_concGomClass( tom.gom.adt.objects.types.GomClassList  begin,  tom.gom.adt.objects.types.GomClassList  end, tom.gom.adt.objects.types.GomClassList  tail) {     if(tom_equal_term_GomClassList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.objects.types.GomClassList )tom_cons_list_concGomClass(tom_get_head_concGomClass_GomClassList(begin),( tom.gom.adt.objects.types.GomClassList )tom_get_slice_concGomClass(tom_get_tail_concGomClass_GomClassList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concClassName( tom.gom.adt.objects.types.ClassNameList  t) { return  t instanceof tom.gom.adt.objects.types.classnamelist.ConsconcClassName || t instanceof tom.gom.adt.objects.types.classnamelist.EmptyconcClassName ;}private static  tom.gom.adt.objects.types.ClassNameList  tom_empty_list_concClassName() { return  tom.gom.adt.objects.types.classnamelist.EmptyconcClassName.make() ; }private static  tom.gom.adt.objects.types.ClassNameList  tom_cons_list_concClassName( tom.gom.adt.objects.types.ClassName  e,  tom.gom.adt.objects.types.ClassNameList  l) { return  tom.gom.adt.objects.types.classnamelist.ConsconcClassName.make(e,l) ; }private static  tom.gom.adt.objects.types.ClassName  tom_get_head_concClassName_ClassNameList( tom.gom.adt.objects.types.ClassNameList  l) { return  l.getHeadconcClassName() ;}private static  tom.gom.adt.objects.types.ClassNameList  tom_get_tail_concClassName_ClassNameList( tom.gom.adt.objects.types.ClassNameList  l) { return  l.getTailconcClassName() ;}private static boolean tom_is_empty_concClassName_ClassNameList( tom.gom.adt.objects.types.ClassNameList  l) { return  l.isEmptyconcClassName() ;}   private static   tom.gom.adt.objects.types.ClassNameList  tom_append_list_concClassName( tom.gom.adt.objects.types.ClassNameList l1,  tom.gom.adt.objects.types.ClassNameList  l2) {     if(tom_is_empty_concClassName_ClassNameList(l1)) {       return l2;     } else if(tom_is_empty_concClassName_ClassNameList(l2)) {       return l1;     } else if(tom_is_empty_concClassName_ClassNameList(tom_get_tail_concClassName_ClassNameList(l1))) {       return ( tom.gom.adt.objects.types.ClassNameList )tom_cons_list_concClassName(tom_get_head_concClassName_ClassNameList(l1),l2);     } else {       return ( tom.gom.adt.objects.types.ClassNameList )tom_cons_list_concClassName(tom_get_head_concClassName_ClassNameList(l1),tom_append_list_concClassName(tom_get_tail_concClassName_ClassNameList(l1),l2));     }   }   private static   tom.gom.adt.objects.types.ClassNameList  tom_get_slice_concClassName( tom.gom.adt.objects.types.ClassNameList  begin,  tom.gom.adt.objects.types.ClassNameList  end, tom.gom.adt.objects.types.ClassNameList  tail) {     if(tom_equal_term_ClassNameList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.objects.types.ClassNameList )tom_cons_list_concClassName(tom_get_head_concClassName_ClassNameList(begin),( tom.gom.adt.objects.types.ClassNameList )tom_get_slice_concClassName(tom_get_tail_concClassName_ClassNameList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concHook( tom.gom.adt.objects.types.HookList  t) { return  t instanceof tom.gom.adt.objects.types.hooklist.ConsconcHook || t instanceof tom.gom.adt.objects.types.hooklist.EmptyconcHook ;}private static  tom.gom.adt.objects.types.HookList  tom_empty_list_concHook() { return  tom.gom.adt.objects.types.hooklist.EmptyconcHook.make() ; }private static  tom.gom.adt.objects.types.HookList  tom_cons_list_concHook( tom.gom.adt.objects.types.Hook  e,  tom.gom.adt.objects.types.HookList  l) { return  tom.gom.adt.objects.types.hooklist.ConsconcHook.make(e,l) ; }private static  tom.gom.adt.objects.types.Hook  tom_get_head_concHook_HookList( tom.gom.adt.objects.types.HookList  l) { return  l.getHeadconcHook() ;}private static  tom.gom.adt.objects.types.HookList  tom_get_tail_concHook_HookList( tom.gom.adt.objects.types.HookList  l) { return  l.getTailconcHook() ;}private static boolean tom_is_empty_concHook_HookList( tom.gom.adt.objects.types.HookList  l) { return  l.isEmptyconcHook() ;}   private static   tom.gom.adt.objects.types.HookList  tom_append_list_concHook( tom.gom.adt.objects.types.HookList l1,  tom.gom.adt.objects.types.HookList  l2) {     if(tom_is_empty_concHook_HookList(l1)) {       return l2;     } else if(tom_is_empty_concHook_HookList(l2)) {       return l1;     } else if(tom_is_empty_concHook_HookList(tom_get_tail_concHook_HookList(l1))) {       return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(tom_get_head_concHook_HookList(l1),l2);     } else {       return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(tom_get_head_concHook_HookList(l1),tom_append_list_concHook(tom_get_tail_concHook_HookList(l1),l2));     }   }   private static   tom.gom.adt.objects.types.HookList  tom_get_slice_concHook( tom.gom.adt.objects.types.HookList  begin,  tom.gom.adt.objects.types.HookList  end, tom.gom.adt.objects.types.HookList  tail) {     if(tom_equal_term_HookList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(tom_get_head_concHook_HookList(begin),( tom.gom.adt.objects.types.HookList )tom_get_slice_concHook(tom_get_tail_concHook_HookList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concOperator( tom.gom.adt.gom.types.OperatorDeclList  t) { return  t instanceof tom.gom.adt.gom.types.operatordecllist.ConsconcOperator || t instanceof tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_empty_list_concOperator() { return  tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator.make() ; }private static  tom.gom.adt.gom.types.OperatorDeclList  tom_cons_list_concOperator( tom.gom.adt.gom.types.OperatorDecl  e,  tom.gom.adt.gom.types.OperatorDeclList  l) { return  tom.gom.adt.gom.types.operatordecllist.ConsconcOperator.make(e,l) ; }private static  tom.gom.adt.gom.types.OperatorDecl  tom_get_head_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) { return  l.getHeadconcOperator() ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_tail_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) { return  l.getTailconcOperator() ;}private static boolean tom_is_empty_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) { return  l.isEmptyconcOperator() ;}   private static   tom.gom.adt.gom.types.OperatorDeclList  tom_append_list_concOperator( tom.gom.adt.gom.types.OperatorDeclList l1,  tom.gom.adt.gom.types.OperatorDeclList  l2) {     if(tom_is_empty_concOperator_OperatorDeclList(l1)) {       return l2;     } else if(tom_is_empty_concOperator_OperatorDeclList(l2)) {       return l1;     } else if(tom_is_empty_concOperator_OperatorDeclList(tom_get_tail_concOperator_OperatorDeclList(l1))) {       return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(tom_get_head_concOperator_OperatorDeclList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(tom_get_head_concOperator_OperatorDeclList(l1),tom_append_list_concOperator(tom_get_tail_concOperator_OperatorDeclList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.OperatorDeclList  tom_get_slice_concOperator( tom.gom.adt.gom.types.OperatorDeclList  begin,  tom.gom.adt.gom.types.OperatorDeclList  end, tom.gom.adt.gom.types.OperatorDeclList  tail) {     if(tom_equal_term_OperatorDeclList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(tom_get_head_concOperator_OperatorDeclList(begin),( tom.gom.adt.gom.types.OperatorDeclList )tom_get_slice_concOperator(tom_get_tail_concOperator_OperatorDeclList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concSlot( tom.gom.adt.gom.types.SlotList  t) { return  t instanceof tom.gom.adt.gom.types.slotlist.ConsconcSlot || t instanceof tom.gom.adt.gom.types.slotlist.EmptyconcSlot ;}private static  tom.gom.adt.gom.types.SlotList  tom_empty_list_concSlot() { return  tom.gom.adt.gom.types.slotlist.EmptyconcSlot.make() ; }private static  tom.gom.adt.gom.types.SlotList  tom_cons_list_concSlot( tom.gom.adt.gom.types.Slot  e,  tom.gom.adt.gom.types.SlotList  l) { return  tom.gom.adt.gom.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.gom.adt.gom.types.Slot  tom_get_head_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.getHeadconcSlot() ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_tail_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.getTailconcSlot() ;}private static boolean tom_is_empty_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.isEmptyconcSlot() ;}   private static   tom.gom.adt.gom.types.SlotList  tom_append_list_concSlot( tom.gom.adt.gom.types.SlotList l1,  tom.gom.adt.gom.types.SlotList  l2) {     if(tom_is_empty_concSlot_SlotList(l1)) {       return l2;     } else if(tom_is_empty_concSlot_SlotList(l2)) {       return l1;     } else if(tom_is_empty_concSlot_SlotList(tom_get_tail_concSlot_SlotList(l1))) {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(tom_get_tail_concSlot_SlotList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.SlotList  tom_get_slice_concSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end, tom.gom.adt.gom.types.SlotList  tail) {     if(tom_equal_term_SlotList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(begin),( tom.gom.adt.gom.types.SlotList )tom_get_slice_concSlot(tom_get_tail_concSlot_SlotList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concSort( tom.gom.adt.gom.types.SortList  t) { return  t instanceof tom.gom.adt.gom.types.sortlist.ConsconcSort || t instanceof tom.gom.adt.gom.types.sortlist.EmptyconcSort ;}private static  tom.gom.adt.gom.types.SortList  tom_empty_list_concSort() { return  tom.gom.adt.gom.types.sortlist.EmptyconcSort.make() ; }private static  tom.gom.adt.gom.types.SortList  tom_cons_list_concSort( tom.gom.adt.gom.types.Sort  e,  tom.gom.adt.gom.types.SortList  l) { return  tom.gom.adt.gom.types.sortlist.ConsconcSort.make(e,l) ; }private static  tom.gom.adt.gom.types.Sort  tom_get_head_concSort_SortList( tom.gom.adt.gom.types.SortList  l) { return  l.getHeadconcSort() ;}private static  tom.gom.adt.gom.types.SortList  tom_get_tail_concSort_SortList( tom.gom.adt.gom.types.SortList  l) { return  l.getTailconcSort() ;}private static boolean tom_is_empty_concSort_SortList( tom.gom.adt.gom.types.SortList  l) { return  l.isEmptyconcSort() ;}   private static   tom.gom.adt.gom.types.SortList  tom_append_list_concSort( tom.gom.adt.gom.types.SortList l1,  tom.gom.adt.gom.types.SortList  l2) {     if(tom_is_empty_concSort_SortList(l1)) {       return l2;     } else if(tom_is_empty_concSort_SortList(l2)) {       return l1;     } else if(tom_is_empty_concSort_SortList(tom_get_tail_concSort_SortList(l1))) {       return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(tom_get_head_concSort_SortList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(tom_get_head_concSort_SortList(l1),tom_append_list_concSort(tom_get_tail_concSort_SortList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.SortList  tom_get_slice_concSort( tom.gom.adt.gom.types.SortList  begin,  tom.gom.adt.gom.types.SortList  end, tom.gom.adt.gom.types.SortList  tail) {     if(tom_equal_term_SortList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(tom_get_head_concSort_SortList(begin),( tom.gom.adt.gom.types.SortList )tom_get_slice_concSort(tom_get_tail_concSort_SortList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concModule( tom.gom.adt.gom.types.ModuleList  t) { return  t instanceof tom.gom.adt.gom.types.modulelist.ConsconcModule || t instanceof tom.gom.adt.gom.types.modulelist.EmptyconcModule ;}private static  tom.gom.adt.gom.types.ModuleList  tom_empty_list_concModule() { return  tom.gom.adt.gom.types.modulelist.EmptyconcModule.make() ; }private static  tom.gom.adt.gom.types.ModuleList  tom_cons_list_concModule( tom.gom.adt.gom.types.Module  e,  tom.gom.adt.gom.types.ModuleList  l) { return  tom.gom.adt.gom.types.modulelist.ConsconcModule.make(e,l) ; }private static  tom.gom.adt.gom.types.Module  tom_get_head_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) { return  l.getHeadconcModule() ;}private static  tom.gom.adt.gom.types.ModuleList  tom_get_tail_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) { return  l.getTailconcModule() ;}private static boolean tom_is_empty_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) { return  l.isEmptyconcModule() ;}   private static   tom.gom.adt.gom.types.ModuleList  tom_append_list_concModule( tom.gom.adt.gom.types.ModuleList l1,  tom.gom.adt.gom.types.ModuleList  l2) {     if(tom_is_empty_concModule_ModuleList(l1)) {       return l2;     } else if(tom_is_empty_concModule_ModuleList(l2)) {       return l1;     } else if(tom_is_empty_concModule_ModuleList(tom_get_tail_concModule_ModuleList(l1))) {       return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(tom_get_head_concModule_ModuleList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(tom_get_head_concModule_ModuleList(l1),tom_append_list_concModule(tom_get_tail_concModule_ModuleList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.ModuleList  tom_get_slice_concModule( tom.gom.adt.gom.types.ModuleList  begin,  tom.gom.adt.gom.types.ModuleList  end, tom.gom.adt.gom.types.ModuleList  tail) {     if(tom_equal_term_ModuleList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(tom_get_head_concModule_ModuleList(begin),( tom.gom.adt.gom.types.ModuleList )tom_get_slice_concModule(tom_get_tail_concModule_ModuleList(begin),end,tail));     }   }    

  private GomEnvironment environment() {
    return GomEnvironment.getInstance();
  }

  Map sortClassNameForSortDecl = environment().builtinSortClassMap();

  public GomClassList compile(ModuleList moduleList, HookDeclList hookDecls) {
    GomClassList classList = tom_empty_list_concGomClass();

    /* ModuleDecl -> (AbstractType) ClassName */
    Map abstractTypeNameForModule = new HashMap();
    Map visitorNameForModule = new HashMap();
    Map visitableForwardNameForModule = new HashMap();
    Map tomMappingNameForModule = new HashMap();
    /* SortDecl -> SortClass */
    Map sortGomClassForSortDecl = new HashMap();
    /* OperatorDecl -> OperatorClass */
    Map classForOperatorDecl = new HashMap();
    /* For each module */
    if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch200NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch200NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch200NameNumber_freshVar_0=tomMatch200NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch200NameNumber_begin_2=tomMatch200NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch200NameNumber_end_3=tomMatch200NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch200NameNumber_freshVar_1=tomMatch200NameNumber_end_3;if (!(tom_is_empty_concModule_ModuleList(tomMatch200NameNumber_freshVar_1))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch200NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch200NameNumber_freshVar_6=tom_get_slot_Module_MDecl(tom_get_head_concModule_ModuleList(tomMatch200NameNumber_freshVar_1));{  tom.gom.adt.gom.types.ModuleDecl  tom_moduleDecl=tomMatch200NameNumber_freshVar_6;{  tom.gom.adt.gom.types.ModuleList  tomMatch200NameNumber_freshVar_4=tom_get_tail_concModule_ModuleList(tomMatch200NameNumber_freshVar_1);if ( true ) {

        String moduleName = tom_moduleDecl.getModuleName().getName();

        /* create an AbstractType class */
        ClassName abstractTypeName = tom_make_ClassName(packagePrefix(tom_moduleDecl),moduleName+"AbstractType")

;

        ClassName visitorName = tom_make_ClassName(packagePrefix(tom_moduleDecl),moduleName+"Visitor")

;
        visitorNameForModule.put(tom_moduleDecl,visitorName);

        ClassName visitablefwdName = tom_make_ClassName(packagePrefix(tom_moduleDecl),moduleName+"BasicStrategy")

;
        visitableForwardNameForModule.put(tom_moduleDecl,visitablefwdName);

        ClassName tomMappingName = tom_make_ClassName(packagePrefix(tom_moduleDecl),moduleName)

;
        tomMappingNameForModule.put(tom_moduleDecl,tomMappingName);

        abstractTypeNameForModule.put(tom_moduleDecl,abstractTypeName);
      }}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch200NameNumber_end_3)) {tomMatch200NameNumber_end_3=tomMatch200NameNumber_begin_2;} else {tomMatch200NameNumber_end_3=tom_get_tail_concModule_ModuleList(tomMatch200NameNumber_end_3);}}} while(!(tom_equal_term_ModuleList(tomMatch200NameNumber_end_3, tomMatch200NameNumber_begin_2)));}}}}}}


    /* For each sort, create a sort implementation, and operator implementations
       (we don't need to do that per module, since each operator and sort knows
       to which module it belongs) */
    if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch201NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch201NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch201NameNumber_freshVar_3=tomMatch201NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch201NameNumber_begin_5=tomMatch201NameNumber_freshVar_3;{  tom.gom.adt.gom.types.ModuleList  tomMatch201NameNumber_end_6=tomMatch201NameNumber_freshVar_3;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch201NameNumber_freshVar_4=tomMatch201NameNumber_end_6;if (!(tom_is_empty_concModule_ModuleList(tomMatch201NameNumber_freshVar_4))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch201NameNumber_freshVar_4))) {{  tom.gom.adt.gom.types.SortList  tomMatch201NameNumber_freshVar_9=tom_get_slot_Module_Sorts(tom_get_head_concModule_ModuleList(tomMatch201NameNumber_freshVar_4));if (tom_is_fun_sym_concSort(tomMatch201NameNumber_freshVar_9)) {{  tom.gom.adt.gom.types.SortList  tomMatch201NameNumber_freshVar_10=tomMatch201NameNumber_freshVar_9;{  tom.gom.adt.gom.types.SortList  tomMatch201NameNumber_begin_12=tomMatch201NameNumber_freshVar_10;{  tom.gom.adt.gom.types.SortList  tomMatch201NameNumber_end_13=tomMatch201NameNumber_freshVar_10;do {{{  tom.gom.adt.gom.types.SortList  tomMatch201NameNumber_freshVar_11=tomMatch201NameNumber_end_13;if (!(tom_is_empty_concSort_SortList(tomMatch201NameNumber_freshVar_11))) {if (tom_is_fun_sym_Sort(tom_get_head_concSort_SortList(tomMatch201NameNumber_freshVar_11))) {{  tom.gom.adt.gom.types.SortDecl  tomMatch201NameNumber_freshVar_16=tom_get_slot_Sort_Decl(tom_get_head_concSort_SortList(tomMatch201NameNumber_freshVar_11));{  tom.gom.adt.gom.types.SortDecl  tomMatch201NameNumber_freshVar_0=tomMatch201NameNumber_freshVar_16;{  tom.gom.adt.gom.types.SortList  tomMatch201NameNumber_freshVar_14=tom_get_tail_concSort_SortList(tomMatch201NameNumber_freshVar_11);{  tom.gom.adt.gom.types.ModuleList  tomMatch201NameNumber_freshVar_7=tom_get_tail_concModule_ModuleList(tomMatch201NameNumber_freshVar_4);if (tom_is_fun_sym_SortDecl(tomMatch201NameNumber_freshVar_0)) {{  String  tomMatch201NameNumber_freshVar_1=tom_get_slot_SortDecl_Name(tomMatch201NameNumber_freshVar_0);{  tom.gom.adt.gom.types.ModuleDecl  tomMatch201NameNumber_freshVar_2=tom_get_slot_SortDecl_ModuleDecl(tomMatch201NameNumber_freshVar_0);if ( true ) {





        // get the class name for the sort
        ClassName sortClassName = tom_make_ClassName(packagePrefix(tomMatch201NameNumber_freshVar_2)+".types",tomMatch201NameNumber_freshVar_1);
        sortClassNameForSortDecl.put(tomMatch201NameNumber_freshVar_0,sortClassName);
      }}}}}}}}}}}if (tom_is_empty_concSort_SortList(tomMatch201NameNumber_end_13)) {tomMatch201NameNumber_end_13=tomMatch201NameNumber_begin_12;} else {tomMatch201NameNumber_end_13=tom_get_tail_concSort_SortList(tomMatch201NameNumber_end_13);}}} while(!(tom_equal_term_SortList(tomMatch201NameNumber_end_13, tomMatch201NameNumber_begin_12)));}}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch201NameNumber_end_6)) {tomMatch201NameNumber_end_6=tomMatch201NameNumber_begin_5;} else {tomMatch201NameNumber_end_6=tom_get_tail_concModule_ModuleList(tomMatch201NameNumber_end_6);}}} while(!(tom_equal_term_ModuleList(tomMatch201NameNumber_end_6, tomMatch201NameNumber_begin_5)));}}}}}}if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch204NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch204NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch204NameNumber_freshVar_2=tomMatch204NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch204NameNumber_begin_4=tomMatch204NameNumber_freshVar_2;{  tom.gom.adt.gom.types.ModuleList  tomMatch204NameNumber_end_5=tomMatch204NameNumber_freshVar_2;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch204NameNumber_freshVar_3=tomMatch204NameNumber_end_5;if (!(tom_is_empty_concModule_ModuleList(tomMatch204NameNumber_freshVar_3))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch204NameNumber_freshVar_3))) {{  tom.gom.adt.gom.types.SortList  tomMatch204NameNumber_freshVar_8=tom_get_slot_Module_Sorts(tom_get_head_concModule_ModuleList(tomMatch204NameNumber_freshVar_3));if (tom_is_fun_sym_concSort(tomMatch204NameNumber_freshVar_8)) {{  tom.gom.adt.gom.types.SortList  tomMatch204NameNumber_freshVar_9=tomMatch204NameNumber_freshVar_8;{  tom.gom.adt.gom.types.SortList  tomMatch204NameNumber_begin_11=tomMatch204NameNumber_freshVar_9;{  tom.gom.adt.gom.types.SortList  tomMatch204NameNumber_end_12=tomMatch204NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.SortList  tomMatch204NameNumber_freshVar_10=tomMatch204NameNumber_end_12;if (!(tom_is_empty_concSort_SortList(tomMatch204NameNumber_freshVar_10))) {if (tom_is_fun_sym_Sort(tom_get_head_concSort_SortList(tomMatch204NameNumber_freshVar_10))) {{  tom.gom.adt.gom.types.SortDecl  tomMatch204NameNumber_freshVar_15=tom_get_slot_Sort_Decl(tom_get_head_concSort_SortList(tomMatch204NameNumber_freshVar_10));{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch204NameNumber_freshVar_16=tom_get_slot_Sort_Operators(tom_get_head_concSort_SortList(tomMatch204NameNumber_freshVar_10));{  tom.gom.adt.gom.types.SortDecl  tomMatch204NameNumber_freshVar_0=tomMatch204NameNumber_freshVar_15;{  tom.gom.adt.gom.types.OperatorDeclList  tom_oplist=tomMatch204NameNumber_freshVar_16;{  tom.gom.adt.gom.types.SortList  tomMatch204NameNumber_freshVar_13=tom_get_tail_concSort_SortList(tomMatch204NameNumber_freshVar_10);{  tom.gom.adt.gom.types.ModuleList  tomMatch204NameNumber_freshVar_6=tom_get_tail_concModule_ModuleList(tomMatch204NameNumber_freshVar_3);if (tom_is_fun_sym_SortDecl(tomMatch204NameNumber_freshVar_0)) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch204NameNumber_freshVar_1=tom_get_slot_SortDecl_ModuleDecl(tomMatch204NameNumber_freshVar_0);{  tom.gom.adt.gom.types.ModuleDecl  tom_moduleDecl=tomMatch204NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SortDecl  tom_sortDecl=tomMatch204NameNumber_freshVar_0;if ( true ) {








        // get the class name for the sort
        ClassName sortClassName = (ClassName)sortClassNameForSortDecl.get(tom_sortDecl);
        ClassName abstracttypeName = (ClassName)abstractTypeNameForModule.get(tom_moduleDecl);
        ClassName visitorName = (ClassName)visitorNameForModule.get(tom_moduleDecl);
        ClassName visitableforwardName = (ClassName)visitableForwardNameForModule.get(tom_moduleDecl);
        ClassName mappingName = (ClassName)tomMappingNameForModule.get(tom_moduleDecl);
        // create operator classes. Also, store a list of all operators for the sort class
        // use a Set to collect slots and avoid duplicates
        Set allSortSlots = new HashSet();
        ClassNameList allOperators = tom_empty_list_concClassName();
        ClassNameList allVariadicOperators = tom_empty_list_concClassName();
        if (tom_is_sort_OperatorDeclList(tom_oplist)) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch203NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.OperatorDeclList )tom_oplist);if (tom_is_fun_sym_concOperator(tomMatch203NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch203NameNumber_freshVar_5=tomMatch203NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch203NameNumber_begin_7=tomMatch203NameNumber_freshVar_5;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch203NameNumber_end_8=tomMatch203NameNumber_freshVar_5;do {{{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch203NameNumber_freshVar_6=tomMatch203NameNumber_end_8;if (!(tom_is_empty_concOperator_OperatorDeclList(tomMatch203NameNumber_freshVar_6))) {{  tom.gom.adt.gom.types.OperatorDecl  tomMatch203NameNumber_freshVar_0=tom_get_head_concOperator_OperatorDeclList(tomMatch203NameNumber_freshVar_6);{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch203NameNumber_freshVar_9=tom_get_tail_concOperator_OperatorDeclList(tomMatch203NameNumber_freshVar_6);if (tom_is_fun_sym_OperatorDecl(tomMatch203NameNumber_freshVar_0)) {{  String  tomMatch203NameNumber_freshVar_1=tom_get_slot_OperatorDecl_Name(tomMatch203NameNumber_freshVar_0);{  tom.gom.adt.gom.types.SortDecl  tomMatch203NameNumber_freshVar_2=tom_get_slot_OperatorDecl_Sort(tomMatch203NameNumber_freshVar_0);{  tom.gom.adt.gom.types.TypedProduction  tomMatch203NameNumber_freshVar_3=tom_get_slot_OperatorDecl_Prod(tomMatch203NameNumber_freshVar_0);{  String  tom_opname=tomMatch203NameNumber_freshVar_1;if (tom_is_fun_sym_SortDecl(tomMatch203NameNumber_freshVar_2)) {{  String  tomMatch203NameNumber_freshVar_4=tom_get_slot_SortDecl_Name(tomMatch203NameNumber_freshVar_2);{  tom.gom.adt.gom.types.TypedProduction  tom_typedproduction=tomMatch203NameNumber_freshVar_3;if ( true ) {





            String sortNamePackage = tomMatch203NameNumber_freshVar_4.toLowerCase();
            ClassName operatorClassName =
              tom_make_ClassName(packagePrefix(tom_moduleDecl)+".types."+sortNamePackage,tom_opname);
            SlotFieldList slots = tom_empty_list_concSlotField();
            ClassName variadicOpClassName = null;
            ClassName empty = null;
            if (tom_is_sort_TypedProduction(tom_typedproduction)) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch202NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.TypedProduction )tom_typedproduction);if (tom_is_fun_sym_Variadic(tomMatch202NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SortDecl  tomMatch202NameNumber_freshVar_0=tom_get_slot_Variadic_Sort(tomMatch202NameNumberfreshSubject_1);if ( true ) {

                ClassName clsName = (ClassName)sortClassNameForSortDecl.get(tomMatch202NameNumber_freshVar_0);
                SlotField slotHead = tom_make_SlotField("Head"+tom_opname,clsName);
                SlotField slotTail = tom_make_SlotField("Tail"+tom_opname,sortClassName);
                allSortSlots.add(slotHead);
                allSortSlots.add(slotTail);
                slots = tom_cons_list_concSlotField(slotHead,tom_cons_list_concSlotField(slotTail,tom_empty_list_concSlotField()));
                // as the operator is variadic, add a Cons and an Empty
                variadicOpClassName =
                  tom_make_ClassName(packagePrefix(tom_moduleDecl)+".types."+sortNamePackage,tom_opname);
                allVariadicOperators = tom_cons_list_concClassName(variadicOpClassName,tom_append_list_concClassName(allVariadicOperators,tom_empty_list_concClassName()));
                empty =
                  tom_make_ClassName(packagePrefix(tom_moduleDecl)+".types."+sortNamePackage,"Empty"+tom_opname);
                operatorClassName =
                  tom_make_ClassName(packagePrefix(tom_moduleDecl)+".types."+sortNamePackage,"Cons"+tom_opname);

                allOperators = tom_cons_list_concClassName(empty,tom_append_list_concClassName(allOperators,tom_empty_list_concClassName()));
              }}}if (tom_is_fun_sym_Slots(tomMatch202NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SlotList  tomMatch202NameNumber_freshVar_1=tom_get_slot_Slots_Slots(tomMatch202NameNumberfreshSubject_1);if (tom_is_fun_sym_concSlot(tomMatch202NameNumber_freshVar_1)) {{  tom.gom.adt.gom.types.SlotList  tomMatch202NameNumber_freshVar_2=tomMatch202NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SlotList  tomMatch202NameNumber_begin_4=tomMatch202NameNumber_freshVar_2;{  tom.gom.adt.gom.types.SlotList  tomMatch202NameNumber_end_5=tomMatch202NameNumber_freshVar_2;do {{{  tom.gom.adt.gom.types.SlotList  tomMatch202NameNumber_freshVar_3=tomMatch202NameNumber_end_5;if (!(tom_is_empty_concSlot_SlotList(tomMatch202NameNumber_freshVar_3))) {if (tom_is_fun_sym_Slot(tom_get_head_concSlot_SlotList(tomMatch202NameNumber_freshVar_3))) {{  String  tomMatch202NameNumber_freshVar_8=tom_get_slot_Slot_Name(tom_get_head_concSlot_SlotList(tomMatch202NameNumber_freshVar_3));{  tom.gom.adt.gom.types.SortDecl  tomMatch202NameNumber_freshVar_9=tom_get_slot_Slot_Sort(tom_get_head_concSlot_SlotList(tomMatch202NameNumber_freshVar_3));{  tom.gom.adt.gom.types.SlotList  tomMatch202NameNumber_freshVar_6=tom_get_tail_concSlot_SlotList(tomMatch202NameNumber_freshVar_3);if ( true ) {

                ClassName clsName = (ClassName)sortClassNameForSortDecl.get(tomMatch202NameNumber_freshVar_9);
                SlotField slotfield = tom_make_SlotField(tomMatch202NameNumber_freshVar_8,clsName);
                allSortSlots.add(slotfield);
                slots = tom_append_list_concSlotField(slots,tom_cons_list_concSlotField(slotfield,tom_empty_list_concSlotField()));
              }}}}}}}if (tom_is_empty_concSlot_SlotList(tomMatch202NameNumber_end_5)) {tomMatch202NameNumber_end_5=tomMatch202NameNumber_begin_4;} else {tomMatch202NameNumber_end_5=tom_get_tail_concSlot_SlotList(tomMatch202NameNumber_end_5);}}} while(!(tom_equal_term_SlotList(tomMatch202NameNumber_end_5, tomMatch202NameNumber_begin_4)));}}}}}}}}

            GomClass operatorClass;
            allOperators = tom_cons_list_concClassName(operatorClassName,tom_append_list_concClassName(allOperators,tom_empty_list_concClassName()));
            if (variadicOpClassName != null) {
              /* We just processed a variadic operator */
              GomClass cons = tom_make_OperatorClass(operatorClassName,abstracttypeName,variadicOpClassName,mappingName,sortClassName,visitorName,slots,tom_empty_list_concHook())





;

              GomClass emptyClass = tom_make_OperatorClass(empty,abstracttypeName,variadicOpClassName,mappingName,sortClassName,visitorName,tom_empty_list_concSlotField(),tom_empty_list_concHook())






;

              operatorClass = tom_make_VariadicOperatorClass(variadicOpClassName,abstracttypeName,mappingName,sortClassName,emptyClass,cons,tom_empty_list_concHook())





;
            } else {
              operatorClass = tom_make_OperatorClass(operatorClassName,abstracttypeName,sortClassName,mappingName,sortClassName,visitorName,slots,tom_empty_list_concHook())





;
            }
            classForOperatorDecl.put(tomMatch203NameNumber_freshVar_0,operatorClass);
            classList = tom_cons_list_concGomClass(operatorClass,tom_append_list_concGomClass(classList,tom_empty_list_concGomClass()));
          }}}}}}}}}}}}}if (tom_is_empty_concOperator_OperatorDeclList(tomMatch203NameNumber_end_8)) {tomMatch203NameNumber_end_8=tomMatch203NameNumber_begin_7;} else {tomMatch203NameNumber_end_8=tom_get_tail_concOperator_OperatorDeclList(tomMatch203NameNumber_end_8);}}} while(!(tom_equal_term_OperatorDeclList(tomMatch203NameNumber_end_8, tomMatch203NameNumber_begin_7)));}}}}}}

        // create the sort class and add it to the list
        GomClass sortClass = tom_make_SortClass(sortClassName,abstracttypeName,mappingName,visitorName,visitableforwardName,allOperators,allVariadicOperators,slotFieldListFromSet(allSortSlots),tom_empty_list_concHook())







;
        sortGomClassForSortDecl.put(tom_sortDecl,sortClass);
        classList = tom_cons_list_concGomClass(sortClass,tom_append_list_concGomClass(classList,tom_empty_list_concGomClass()));
      }}}}}}}}}}}}}}if (tom_is_empty_concSort_SortList(tomMatch204NameNumber_end_12)) {tomMatch204NameNumber_end_12=tomMatch204NameNumber_begin_11;} else {tomMatch204NameNumber_end_12=tom_get_tail_concSort_SortList(tomMatch204NameNumber_end_12);}}} while(!(tom_equal_term_SortList(tomMatch204NameNumber_end_12, tomMatch204NameNumber_begin_11)));}}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch204NameNumber_end_5)) {tomMatch204NameNumber_end_5=tomMatch204NameNumber_begin_4;} else {tomMatch204NameNumber_end_5=tom_get_tail_concModule_ModuleList(tomMatch204NameNumber_end_5);}}} while(!(tom_equal_term_ModuleList(tomMatch204NameNumber_end_5, tomMatch204NameNumber_begin_4)));}}}}}}if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch208NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch208NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch208NameNumber_freshVar_2=tomMatch208NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch208NameNumber_begin_4=tomMatch208NameNumber_freshVar_2;{  tom.gom.adt.gom.types.ModuleList  tomMatch208NameNumber_end_5=tomMatch208NameNumber_freshVar_2;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch208NameNumber_freshVar_3=tomMatch208NameNumber_end_5;if (!(tom_is_empty_concModule_ModuleList(tomMatch208NameNumber_freshVar_3))) {{  tom.gom.adt.gom.types.Module  tomMatch208NameNumber_freshVar_0=tom_get_head_concModule_ModuleList(tomMatch208NameNumber_freshVar_3);{  tom.gom.adt.gom.types.ModuleList  tomMatch208NameNumber_freshVar_6=tom_get_tail_concModule_ModuleList(tomMatch208NameNumber_freshVar_3);if (tom_is_fun_sym_Module(tomMatch208NameNumber_freshVar_0)) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch208NameNumber_freshVar_1=tom_get_slot_Module_MDecl(tomMatch208NameNumber_freshVar_0);{  tom.gom.adt.gom.types.ModuleDecl  tom_moduleDecl=tomMatch208NameNumber_freshVar_1;if ( true ) {




        String moduleName = tom_moduleDecl.getModuleName().getName();

        GomClassList allOperatorClasses = tom_empty_list_concGomClass();
        GomClassList allSortClasses = tom_empty_list_concGomClass();
        /* TODO improve this part : just for test */
        ModuleDeclList modlist = environment().getModuleDependency(tom_moduleDecl);
        while(!modlist.isEmptyconcModuleDecl()) {
          ModuleDecl imported = modlist.getHeadconcModuleDecl();
          modlist = modlist.getTailconcModuleDecl();
          SortList moduleSorts = getSortsForModule(imported,moduleList);
          SortList sortconsum = moduleSorts;
          while(!sortconsum.isEmptyconcSort()) {
            Sort sort = sortconsum.getHeadconcSort();
            sortconsum = sortconsum.getTailconcSort();
            if (tom_is_sort_Sort(sort)) {{  tom.gom.adt.gom.types.Sort  tomMatch205NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Sort )sort);if (tom_is_fun_sym_Sort(tomMatch205NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SortDecl  tomMatch205NameNumber_freshVar_0=tom_get_slot_Sort_Decl(tomMatch205NameNumberfreshSubject_1);if ( true ) {

                GomClass sortClass = (GomClass) sortGomClassForSortDecl.get(tomMatch205NameNumber_freshVar_0);
                allSortClasses = tom_cons_list_concGomClass(sortClass,tom_append_list_concGomClass(allSortClasses,tom_empty_list_concGomClass()));
              }}}}}

          }
          if (tom_is_sort_SortList(moduleSorts)) {{  tom.gom.adt.gom.types.SortList  tomMatch207NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SortList )moduleSorts);if (tom_is_fun_sym_concSort(tomMatch207NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SortList  tomMatch207NameNumber_freshVar_0=tomMatch207NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.SortList  tomMatch207NameNumber_begin_2=tomMatch207NameNumber_freshVar_0;{  tom.gom.adt.gom.types.SortList  tomMatch207NameNumber_end_3=tomMatch207NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.SortList  tomMatch207NameNumber_freshVar_1=tomMatch207NameNumber_end_3;if (!(tom_is_empty_concSort_SortList(tomMatch207NameNumber_freshVar_1))) {if (tom_is_fun_sym_Sort(tom_get_head_concSort_SortList(tomMatch207NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch207NameNumber_freshVar_6=tom_get_slot_Sort_Operators(tom_get_head_concSort_SortList(tomMatch207NameNumber_freshVar_1));if (tom_is_fun_sym_concOperator(tomMatch207NameNumber_freshVar_6)) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch207NameNumber_freshVar_7=tomMatch207NameNumber_freshVar_6;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch207NameNumber_begin_9=tomMatch207NameNumber_freshVar_7;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch207NameNumber_end_10=tomMatch207NameNumber_freshVar_7;do {{{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch207NameNumber_freshVar_8=tomMatch207NameNumber_end_10;if (!(tom_is_empty_concOperator_OperatorDeclList(tomMatch207NameNumber_freshVar_8))) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch207NameNumber_freshVar_11=tom_get_tail_concOperator_OperatorDeclList(tomMatch207NameNumber_freshVar_8);{  tom.gom.adt.gom.types.SortList  tomMatch207NameNumber_freshVar_4=tom_get_tail_concSort_SortList(tomMatch207NameNumber_freshVar_1);if ( true ) {

              GomClass opClass = (GomClass) classForOperatorDecl.get(tom_get_head_concOperator_OperatorDeclList(tomMatch207NameNumber_freshVar_8));
              allOperatorClasses = tom_cons_list_concGomClass(opClass,tom_append_list_concGomClass(allOperatorClasses,tom_empty_list_concGomClass()));
              if (tom_is_sort_GomClass(opClass)) {{  tom.gom.adt.objects.types.GomClass  tomMatch206NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.GomClass )opClass);if (tom_is_fun_sym_VariadicOperatorClass(tomMatch206NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.GomClass  tomMatch206NameNumber_freshVar_0=tom_get_slot_VariadicOperatorClass_Empty(tomMatch206NameNumberfreshSubject_1);{  tom.gom.adt.objects.types.GomClass  tomMatch206NameNumber_freshVar_1=tom_get_slot_VariadicOperatorClass_Cons(tomMatch206NameNumberfreshSubject_1);if ( true ) {

                  allOperatorClasses = tom_cons_list_concGomClass(tomMatch206NameNumber_freshVar_0,tom_cons_list_concGomClass(tomMatch206NameNumber_freshVar_1,tom_append_list_concGomClass(allOperatorClasses,tom_empty_list_concGomClass())));
                }}}}}}

            }}}}}if (tom_is_empty_concOperator_OperatorDeclList(tomMatch207NameNumber_end_10)) {tomMatch207NameNumber_end_10=tomMatch207NameNumber_begin_9;} else {tomMatch207NameNumber_end_10=tom_get_tail_concOperator_OperatorDeclList(tomMatch207NameNumber_end_10);}}} while(!(tom_equal_term_OperatorDeclList(tomMatch207NameNumber_end_10, tomMatch207NameNumber_begin_9)));}}}}}}}}if (tom_is_empty_concSort_SortList(tomMatch207NameNumber_end_3)) {tomMatch207NameNumber_end_3=tomMatch207NameNumber_begin_2;} else {tomMatch207NameNumber_end_3=tom_get_tail_concSort_SortList(tomMatch207NameNumber_end_3);}}} while(!(tom_equal_term_SortList(tomMatch207NameNumber_end_3, tomMatch207NameNumber_begin_2)));}}}}}}

        }

        ClassName abstractTypeClassName = (ClassName)
          abstractTypeNameForModule.get(tom_moduleDecl);

        // late creation of the visitors, since it has to know all operators
        ClassName visitorName = (ClassName)
          visitorNameForModule.get(tom_moduleDecl);
        GomClass visitorclass = tom_make_VisitorClass(visitorName,allSortClasses,allOperatorClasses);
        classList = tom_cons_list_concGomClass(visitorclass,tom_append_list_concGomClass(classList,tom_empty_list_concGomClass()));

        /* create a Fwd class */
        ClassNameList importedVisitors = allClassForImports(visitorNameForModule,tom_moduleDecl);
        ClassName fwdName = tom_make_ClassName(packagePrefix(tom_moduleDecl),moduleName+"Forward");
        ClassNameList importedAbstractType = allClassForImports(abstractTypeNameForModule,tom_moduleDecl);
        GomClass fwdclass = tom_make_FwdClass(fwdName,visitorName,importedVisitors,abstractTypeClassName,importedAbstractType,allSortClasses,allOperatorClasses);
        classList = tom_cons_list_concGomClass(fwdclass,tom_append_list_concGomClass(classList,tom_empty_list_concGomClass()));

        /* create a VisitableFwd class */
        ClassName visitablefwdName = (ClassName)
          visitableForwardNameForModule.get(tom_moduleDecl);
        GomClass visitablefwdclass = tom_make_VisitableFwdClass(visitablefwdName,fwdclass);
        classList = tom_cons_list_concGomClass(visitablefwdclass,tom_append_list_concGomClass(classList,tom_empty_list_concGomClass()));

        /* create a TomMapping */
        ClassName tomMappingName = (ClassName)
          tomMappingNameForModule.get(tom_moduleDecl);
        GomClass tommappingclass = tom_make_TomMapping(tomMappingName,visitablefwdName,allSortClasses,allOperatorClasses)


;
        classList = tom_cons_list_concGomClass(tommappingclass,tom_append_list_concGomClass(classList,tom_empty_list_concGomClass()));

        /* create the abstractType */
        ClassNameList classSortList = sortClassNames(moduleList);
        ClassName abstractTypeName = (ClassName)
          abstractTypeNameForModule.get(tom_moduleDecl);
        GomClass abstracttype =
          tom_make_AbstractTypeClass(abstractTypeName,tomMappingName,visitorName,classSortList,tom_empty_list_concHook())



;
        classList = tom_cons_list_concGomClass(abstracttype,tom_append_list_concGomClass(classList,tom_empty_list_concGomClass()));

      }}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch208NameNumber_end_5)) {tomMatch208NameNumber_end_5=tomMatch208NameNumber_begin_4;} else {tomMatch208NameNumber_end_5=tom_get_tail_concModule_ModuleList(tomMatch208NameNumber_end_5);}}} while(!(tom_equal_term_ModuleList(tomMatch208NameNumber_end_5, tomMatch208NameNumber_begin_4)));}}}}}}

    /* Call the hook processor here, to attach hooks to the correct classes */
    /* fist compute the mapping "Decl" -> "ClassName" */
    Map declToClassName = new HashMap();
    /* for ModuleDecl */
    declToClassName.putAll(abstractTypeNameForModule);
    /* for SortDecl */
    Iterator it = sortGomClassForSortDecl.entrySet().iterator();
    while(it.hasNext()) {
      Map.Entry entry = (Map.Entry) it.next();
      GomClass sortClass = (GomClass) entry.getValue();
      declToClassName.put(entry.getKey(),sortClass.getClassName());
    }
    /* for OperatorDecl */
    it = classForOperatorDecl.entrySet().iterator();
    while(it.hasNext()) {
      Map.Entry entry = (Map.Entry) it.next();
      GomClass sortClass = (GomClass) entry.getValue();
      declToClassName.put(entry.getKey(),sortClass.getClassName());
    }
    HookCompiler hcompiler = new HookCompiler(sortClassNameForSortDecl);
    classList = hcompiler.compile(hookDecls,classList,declToClassName);
    return classList;
  }

  private ClassNameList sortClassNames(ModuleList moduleList) {
    ClassNameList classNames = tom_empty_list_concClassName();
    if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch209NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch209NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch209NameNumber_freshVar_0=tomMatch209NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch209NameNumber_begin_2=tomMatch209NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch209NameNumber_end_3=tomMatch209NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch209NameNumber_freshVar_1=tomMatch209NameNumber_end_3;if (!(tom_is_empty_concModule_ModuleList(tomMatch209NameNumber_freshVar_1))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch209NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.SortList  tomMatch209NameNumber_freshVar_6=tom_get_slot_Module_Sorts(tom_get_head_concModule_ModuleList(tomMatch209NameNumber_freshVar_1));if (tom_is_fun_sym_concSort(tomMatch209NameNumber_freshVar_6)) {{  tom.gom.adt.gom.types.SortList  tomMatch209NameNumber_freshVar_7=tomMatch209NameNumber_freshVar_6;{  tom.gom.adt.gom.types.SortList  tomMatch209NameNumber_begin_9=tomMatch209NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch209NameNumber_end_10=tomMatch209NameNumber_freshVar_7;do {{{  tom.gom.adt.gom.types.SortList  tomMatch209NameNumber_freshVar_8=tomMatch209NameNumber_end_10;if (!(tom_is_empty_concSort_SortList(tomMatch209NameNumber_freshVar_8))) {if (tom_is_fun_sym_Sort(tom_get_head_concSort_SortList(tomMatch209NameNumber_freshVar_8))) {{  tom.gom.adt.gom.types.SortDecl  tomMatch209NameNumber_freshVar_13=tom_get_slot_Sort_Decl(tom_get_head_concSort_SortList(tomMatch209NameNumber_freshVar_8));if (tom_is_fun_sym_SortDecl(tomMatch209NameNumber_freshVar_13)) {{  String  tomMatch209NameNumber_freshVar_14=tom_get_slot_SortDecl_Name(tomMatch209NameNumber_freshVar_13);{  tom.gom.adt.gom.types.ModuleDecl  tomMatch209NameNumber_freshVar_15=tom_get_slot_SortDecl_ModuleDecl(tomMatch209NameNumber_freshVar_13);{  tom.gom.adt.gom.types.SortList  tomMatch209NameNumber_freshVar_11=tom_get_tail_concSort_SortList(tomMatch209NameNumber_freshVar_8);{  tom.gom.adt.gom.types.ModuleList  tomMatch209NameNumber_freshVar_4=tom_get_tail_concModule_ModuleList(tomMatch209NameNumber_freshVar_1);if ( true ) {





        classNames = tom_cons_list_concClassName(tom_make_ClassName(packagePrefix(tomMatch209NameNumber_freshVar_15)+".types",tomMatch209NameNumber_freshVar_14),tom_append_list_concClassName(classNames,tom_empty_list_concClassName()));
      }}}}}}}}}}if (tom_is_empty_concSort_SortList(tomMatch209NameNumber_end_10)) {tomMatch209NameNumber_end_10=tomMatch209NameNumber_begin_9;} else {tomMatch209NameNumber_end_10=tom_get_tail_concSort_SortList(tomMatch209NameNumber_end_10);}}} while(!(tom_equal_term_SortList(tomMatch209NameNumber_end_10, tomMatch209NameNumber_begin_9)));}}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch209NameNumber_end_3)) {tomMatch209NameNumber_end_3=tomMatch209NameNumber_begin_2;} else {tomMatch209NameNumber_end_3=tom_get_tail_concModule_ModuleList(tomMatch209NameNumber_end_3);}}} while(!(tom_equal_term_ModuleList(tomMatch209NameNumber_end_3, tomMatch209NameNumber_begin_2)));}}}}}}

    return classNames;
  }

  /*
   * Get all sort definitions for a given module
   */
  private SortList getSortsForModule(ModuleDecl module, ModuleList moduleList) {
    if (tom_is_sort_ModuleDecl(module)) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch210NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleDecl )module);if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch210NameNumberfreshSubject_2=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch210NameNumberfreshSubject_2)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch210NameNumber_freshVar_1=tomMatch210NameNumberfreshSubject_2;{  tom.gom.adt.gom.types.ModuleList  tomMatch210NameNumber_begin_3=tomMatch210NameNumber_freshVar_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch210NameNumber_end_4=tomMatch210NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch210NameNumber_freshVar_2=tomMatch210NameNumber_end_4;if (!(tom_is_empty_concModule_ModuleList(tomMatch210NameNumber_freshVar_2))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch210NameNumber_freshVar_2))) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch210NameNumber_freshVar_7=tom_get_slot_Module_MDecl(tom_get_head_concModule_ModuleList(tomMatch210NameNumber_freshVar_2));{  tom.gom.adt.gom.types.SortList  tomMatch210NameNumber_freshVar_8=tom_get_slot_Module_Sorts(tom_get_head_concModule_ModuleList(tomMatch210NameNumber_freshVar_2));{  tom.gom.adt.gom.types.ModuleList  tomMatch210NameNumber_freshVar_5=tom_get_tail_concModule_ModuleList(tomMatch210NameNumber_freshVar_2);{  tom.gom.adt.gom.types.ModuleDecl  tomMatch210NameNumber_freshVar_0=tomMatch210NameNumberfreshSubject_1;if (tom_is_fun_sym_ModuleDecl(tomMatch210NameNumber_freshVar_0)) {if (tom_equal_term_ModuleDecl(tomMatch210NameNumber_freshVar_7, tomMatch210NameNumber_freshVar_0)) {if ( true ) {


        return tomMatch210NameNumber_freshVar_8;
      }}}}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch210NameNumber_end_4)) {tomMatch210NameNumber_end_4=tomMatch210NameNumber_begin_3;} else {tomMatch210NameNumber_end_4=tom_get_tail_concModule_ModuleList(tomMatch210NameNumber_end_4);}}} while(!(tom_equal_term_ModuleList(tomMatch210NameNumber_end_4, tomMatch210NameNumber_begin_3)));}}}}}}}}

    throw new RuntimeException("Module " + module + " not found");
  }

  public static String packagePrefix(ModuleDecl moduleDecl) {
    String pkgPrefix = "";
    if (tom_is_sort_ModuleDecl(moduleDecl)) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch211NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleDecl )moduleDecl);if (tom_is_fun_sym_ModuleDecl(tomMatch211NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch211NameNumber_freshVar_0=tom_get_slot_ModuleDecl_ModuleName(tomMatch211NameNumberfreshSubject_1);{  String  tomMatch211NameNumber_freshVar_1=tom_get_slot_ModuleDecl_Pkg(tomMatch211NameNumberfreshSubject_1);if (tom_is_fun_sym_GomModuleName(tomMatch211NameNumber_freshVar_0)) {{  String  tomMatch211NameNumber_freshVar_2=tom_get_slot_GomModuleName_Name(tomMatch211NameNumber_freshVar_0);{  String  tom_name=tomMatch211NameNumber_freshVar_2;{  String  tom_pkgopt=tomMatch211NameNumber_freshVar_1;if ( true ) {

        if(!tom_pkgopt.equals("")) {
          pkgPrefix = tom_pkgopt+ "." + tom_name;
        } else {
          pkgPrefix = tom_name;
        }
      }}}}}}}}}}

    return pkgPrefix.toLowerCase();
  }

  private SlotFieldList slotFieldListFromSet(Set slotFieldSet) {
    Iterator it = slotFieldSet.iterator();
    SlotFieldList list = tom_empty_list_concSlotField();
    while(it.hasNext()) {
      SlotField slot = (SlotField) it.next();
      list = tom_append_list_concSlotField(list,tom_cons_list_concSlotField(slot,tom_empty_list_concSlotField()));
    }
    return list;
  }

  private ClassNameList allClassForImports(
      Map classMap,
      ModuleDecl moduleDecl) {
    ClassNameList importedList = tom_empty_list_concClassName();
    ModuleDeclList importedModulelist = environment().getModuleDependency(moduleDecl);
    while(!importedModulelist.isEmptyconcModuleDecl()) {
      ModuleDecl imported = importedModulelist.getHeadconcModuleDecl();
      importedModulelist = importedModulelist.getTailconcModuleDecl();
      if (!imported.equals(moduleDecl)) {
        ClassName importedclass = (ClassName)classMap.get(imported);
        importedList = tom_cons_list_concClassName(importedclass,tom_append_list_concClassName(importedList,tom_empty_list_concClassName()));
      }
    }
    return importedList;
  }
}

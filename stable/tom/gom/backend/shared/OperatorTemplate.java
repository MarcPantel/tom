/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 * Gom
 *
 * Copyright (C) 2006-2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.backend.shared;

import java.io.*;
import java.util.*;
import java.util.logging.*;
import tom.gom.backend.TemplateHookedClass;
import tom.gom.backend.TemplateClass;
import tom.gom.backend.CodeGen;
import tom.gom.tools.GomEnvironment;
import tom.gom.tools.error.GomRuntimeException;
import tom.gom.adt.objects.types.*;
import tom.platform.OptionManager;

public class OperatorTemplate extends TemplateHookedClass {
  ClassName abstractType;
  ClassName extendsType;
  ClassName sortName;
  ClassName visitor;
  SlotFieldList slotList;
  boolean multithread;

  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.gom.adt.objects.types.HookList  tom_append_list_ConcHook( tom.gom.adt.objects.types.HookList l1,  tom.gom.adt.objects.types.HookList  l2) {     if( l1.isEmptyConcHook() ) {       return l2;     } else if( l2.isEmptyConcHook() ) {       return l1;     } else if(  l1.getTailConcHook() .isEmptyConcHook() ) {       return  tom.gom.adt.objects.types.hooklist.ConsConcHook.make( l1.getHeadConcHook() ,l2) ;     } else {       return  tom.gom.adt.objects.types.hooklist.ConsConcHook.make( l1.getHeadConcHook() ,tom_append_list_ConcHook( l1.getTailConcHook() ,l2)) ;     }   }   private static   tom.gom.adt.objects.types.HookList  tom_get_slice_ConcHook( tom.gom.adt.objects.types.HookList  begin,  tom.gom.adt.objects.types.HookList  end, tom.gom.adt.objects.types.HookList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.objects.types.hooklist.ConsConcHook.make( begin.getHeadConcHook() ,( tom.gom.adt.objects.types.HookList )tom_get_slice_ConcHook( begin.getTailConcHook() ,end,tail)) ;     }   }      private static   tom.gom.adt.objects.types.SlotFieldList  tom_append_list_ConcSlotField( tom.gom.adt.objects.types.SlotFieldList l1,  tom.gom.adt.objects.types.SlotFieldList  l2) {     if( l1.isEmptyConcSlotField() ) {       return l2;     } else if( l2.isEmptyConcSlotField() ) {       return l1;     } else if(  l1.getTailConcSlotField() .isEmptyConcSlotField() ) {       return  tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField.make( l1.getHeadConcSlotField() ,l2) ;     } else {       return  tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField.make( l1.getHeadConcSlotField() ,tom_append_list_ConcSlotField( l1.getTailConcSlotField() ,l2)) ;     }   }   private static   tom.gom.adt.objects.types.SlotFieldList  tom_get_slice_ConcSlotField( tom.gom.adt.objects.types.SlotFieldList  begin,  tom.gom.adt.objects.types.SlotFieldList  end, tom.gom.adt.objects.types.SlotFieldList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField.make( begin.getHeadConcSlotField() ,( tom.gom.adt.objects.types.SlotFieldList )tom_get_slice_ConcSlotField( begin.getTailConcSlotField() ,end,tail)) ;     }   }    

  public OperatorTemplate(File tomHomePath,
                          OptionManager manager,
                          List importList, 	
                          GomClass gomClass,
                          TemplateClass mapping,
                          boolean multithread) {
    super(gomClass,manager,tomHomePath,importList,mapping);
    this.multithread = multithread;
    {if ( (gomClass instanceof tom.gom.adt.objects.types.GomClass) ) {{  tom.gom.adt.objects.types.GomClass  tomMatch373NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.GomClass )gomClass);if ( (tomMatch373NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.gomclass.OperatorClass) ) {{  tom.gom.adt.objects.types.ClassName  tomMatch373NameNumber_freshVar_0= tomMatch373NameNumberfreshSubject_1.getAbstractType() ;{  tom.gom.adt.objects.types.ClassName  tomMatch373NameNumber_freshVar_1= tomMatch373NameNumberfreshSubject_1.getExtendsType() ;{  tom.gom.adt.objects.types.ClassName  tomMatch373NameNumber_freshVar_2= tomMatch373NameNumberfreshSubject_1.getSortName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch373NameNumber_freshVar_3= tomMatch373NameNumberfreshSubject_1.getVisitor() ;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch373NameNumber_freshVar_4= tomMatch373NameNumberfreshSubject_1.getSlotFields() ;if ( true ) {





        this.abstractType = tomMatch373NameNumber_freshVar_0;
        this.extendsType = tomMatch373NameNumber_freshVar_1;;
        this.sortName = tomMatch373NameNumber_freshVar_2;
        this.visitor = tomMatch373NameNumber_freshVar_3;
        this.slotList = tomMatch373NameNumber_freshVar_4;
        return;
      }}}}}}}}}}

    throw new GomRuntimeException(
        "Bad argument for OperatorTemplate: " + gomClass);
  }

  public void generate(java.io.Writer writer) throws java.io.IOException {

writer.write(
"\npackage "/* Generated by TOM (version 2.6alpha): Do not edit this file */+getPackage()+";\n"/* Generated by TOM (version 2.6alpha): Do not edit this file */+generateImport()+"\n\npublic final class "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+" extends "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(extendsType)+" implements tom.library.sl.Visitable "/* Generated by TOM (version 2.6alpha): Do not edit this file */+generateInterface()+" {\n"/* Generated by TOM (version 2.6alpha): Do not edit this file */+generateBlock()+"\n  private "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+"() {}\n"






);
  if(slotList.length() > 0) {
    writer.write("\n  private int hashCode;\n  private static "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+" proto = new "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+"();\n  "


);
  } else {
    writer.write("\n  private static int hashCode = hashFunction();\n  private static "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+" proto = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+") factory.build(new "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+"());\n  "


);
  }
  if (!hooks.isEmptyConcHook()) {
    mapping.generate(writer); 
  }
  generateMembers(writer);
  generateBody(writer);
  writer.write("\n}\n"

);
  }

  private void generateBody(java.io.Writer writer) throws java.io.IOException {
    writer.write("\n    /* static constructor */\n"

);
generateConstructor(writer);
if(slotList.length()>0) {
writer.write("\n  private void init("/* Generated by TOM (version 2.6alpha): Do not edit this file */+childListWithType(slotList) + (slotList.isEmptyConcSlotField()?"":", ") +"int hashCode) {\n"

);
generateMembersInit(writer);
writer.write("\n    this.hashCode = hashCode;\n  }\n\n  private void initHashCode("/* Generated by TOM (version 2.6alpha): Do not edit this file */+childListWithType(slotList)+") {\n"




);
generateMembersInit(writer);
writer.write("\n  this.hashCode = hashFunction();\n  }\n\n  /* name and arity */\n  @Override\n  public String symbolName() {\n    return \""/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+"\";\n  }\n\n  private int getArity() {\n    return "/* Generated by TOM (version 2.6alpha): Do not edit this file */+slotList.length()+";\n  }\n"












);

if(multithread) {
  writer.write("\n  public shared.SharedObject duplicate() {\n    // the proto is a fresh object: no need to clone it again\n    return this;\n  }\n  "




);
} else {
  writer.write("\n  public shared.SharedObject duplicate() {\n    "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+" clone = new "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+"();\n    clone.init("/* Generated by TOM (version 2.6alpha): Do not edit this file */+childList(slotList) + (slotList.isEmptyConcSlotField()?"":", ") +"hashCode);\n    return clone;\n  }\n  "





);
 }
} else {
    // case: constant
writer.write("\n  /* name and arity */\n  @Override\n  public String symbolName() {\n    return \""/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+"\";\n  }\n\n  private static int getArity() {\n    return 0;\n  }\n\n  public shared.SharedObject duplicate() {\n    // the proto is a constant object: no need to clone it\n    return this;\n    //return new "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+"();\n  }\n\n"
















);
  }

  /*
   * Generate a toStringBuilder method if the operator is not associative
   */
  if (sortName == extendsType) {
writer.write("\n  @Override\n  public void toStringBuilder(java.lang.StringBuilder buffer) {\n    buffer.append(\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+"(\");\n    "/* Generated by TOM (version 2.6alpha): Do not edit this file */+toStringChilds("buffer")+"\n    buffer.append(\")\");\n  }\n"






);
  }

writer.write("\n\n  /**\n    * This method implements a lexicographic order\n    */\n  @Override\n  public int compareToLPO(Object o) {\n    /*\n     * We do not want to compare with any object, only members of the module\n     * In case of invalid argument, throw a ClassCastException, as the java api\n     * asks for it\n     */\n    "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" ao = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") o;\n    /* return 0 for equality */\n    if (ao == this)\n      return 0;\n    /* compare the symbols */\n    int symbCmp = this.symbolName().compareTo(ao.symbolName());\n    if (symbCmp != 0)\n      return symbCmp;\n    /* compare the childs */\n    "/* Generated by TOM (version 2.6alpha): Do not edit this file */+genCompareChilds("ao","compareToLPO")+"\n    throw new RuntimeException(\"Unable to compare\");\n  }\n\n  @Override\n  public int compareTo(Object o) {\n    /*\n     * We do not want to compare with any object, only members of the module\n     * In case of invalid argument, throw a ClassCastException, as the java api\n     * asks for it\n     */\n    "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" ao = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") o;\n    /* return 0 for equality */\n    if (ao == this)\n      return 0;\n    /* use the hash values to discriminate */\n    \n    if(hashCode != ao.hashCode())\n      return (hashCode < ao.hashCode())?-1:1;\n\n    /* If not, compare the symbols : back to the normal order */\n    int symbCmp = this.symbolName().compareTo(ao.symbolName());\n    if (symbCmp != 0)\n      return symbCmp;\n    /* last resort: compare the childs */\n    "/* Generated by TOM (version 2.6alpha): Do not edit this file */+genCompareChilds("ao","compareTo")+"\n    throw new RuntimeException(\"Unable to compare\");\n  }\n\n  /* shared.SharedObject */\n  @Override\n  public final int hashCode() {\n    return hashCode;\n  }\n\n  public final boolean equivalent(shared.SharedObject obj) {\n    if(obj instanceof "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+") {\n"/* Generated by TOM (version 2.6alpha): Do not edit this file */+generateMembersEqualityTest("peer")+"\n    }\n    return false;\n  }\n\n  /* "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className(sortName)+" interface */\n  @Override\n  public boolean "/* Generated by TOM (version 2.6alpha): Do not edit this file */+isOperatorMethod(className)+"() {\n    return true;\n  }\n"



































































);
generateGetters(writer);

    writer.write("\n  /* AbstractType */\n  @Override\n  public aterm.ATerm toATerm() {\n    return atermFactory.makeAppl(\n      atermFactory.makeAFun(symbolName(),getArity(),false),\n      new aterm.ATerm[] {"/* Generated by TOM (version 2.6alpha): Do not edit this file */+generateToATermChilds()+"});\n  }\n\n  public static "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(sortName)+" fromTerm(aterm.ATerm trm) {\n    if(trm instanceof aterm.ATermAppl) {\n      aterm.ATermAppl appl = (aterm.ATermAppl) trm;\n      if(proto.symbolName().equals(appl.getName())) {\n        return make(\n"/* Generated by TOM (version 2.6alpha): Do not edit this file */+generatefromATermChilds("appl")+"\n        );\n      }\n    }\n    return null;\n  }\n\n"




















);


    writer.write("\n  /* Visitable */\n  public int getChildCount() {\n    return "/* Generated by TOM (version 2.6alpha): Do not edit this file */+visitableCount()+";\n  }\n\n  public tom.library.sl.Visitable getChildAt(int index) {\n    switch(index) {\n"/* Generated by TOM (version 2.6alpha): Do not edit this file */+getCases()+"\n      default: throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable v) {\n    switch(index) {\n"/* Generated by TOM (version 2.6alpha): Do not edit this file */+makeCases("v")+"\n      default: throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] childs) {\n    if (childs.length == "/* Generated by TOM (version 2.6alpha): Do not edit this file */+slotList.length()+") {\n      return "/* Generated by TOM (version 2.6alpha): Do not edit this file */+arrayMake("childs")+";\n    } else {\n      throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public tom.library.sl.Visitable[] getChildren() {\n    return new tom.library.sl.Visitable[] { "/* Generated by TOM (version 2.6alpha): Do not edit this file */+visitableList(slotList)+" };\n  }\n"






























);

    writer.write("\n    /* internal use */\n  protected "/* Generated by TOM (version 2.6alpha): Do not edit this file */+((slotList.length()==0)?"static":"")+" int hashFunction() {\n    int a, b, c;\n    /* Set up the internal state */\n    a = 0x9e3779b9; /* the golden ratio; an arbitrary value */\n    b = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+shared.HashFunctions.stringHashFunction(fullClassName(),slotList.length())+"<<8);\n    c = getArity();\n    /* -------------------------------------- handle most of the key */\n    /* ------------------------------------ handle the last 11 bytes */\n"









);
generateHashArgs(writer);
writer.write("\n    a -= b; a -= c; a ^= (c >> 13);\n    b -= c; b -= a; b ^= (a << 8);\n    c -= a; c -= b; c ^= (b >> 13);\n    a -= b; a -= c; a ^= (c >> 12);\n    b -= c; b -= a; b ^= (a << 16);\n    c -= a; c -= b; c ^= (b >> 5);\n    a -= b; a -= c; a ^= (c >> 3);\n    b -= c; b -= a; b ^= (a << 10);\n    c -= a; c -= b; c ^= (b >> 15);\n    /* ------------------------------------------- report the result */\n    return c;\n  }\n"












);
  }

  private void generateMembers(java.io.Writer writer) throws java.io.IOException {
    {if ( (slotList instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch374NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if ( ((tomMatch374NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch374NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch374NameNumber_freshVar_0=tomMatch374NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch374NameNumber_begin_2=tomMatch374NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch374NameNumber_end_3=tomMatch374NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch374NameNumber_freshVar_1=tomMatch374NameNumber_end_3;if (!( tomMatch374NameNumber_freshVar_1.isEmptyConcSlotField() )) {if ( ( tomMatch374NameNumber_freshVar_1.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch374NameNumber_freshVar_6=  tomMatch374NameNumber_freshVar_1.getHeadConcSlotField() .getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch374NameNumber_freshVar_7=  tomMatch374NameNumber_freshVar_1.getHeadConcSlotField() .getDomain() ;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch374NameNumber_freshVar_4= tomMatch374NameNumber_freshVar_1.getTailConcSlotField() ;if ( true ) {

        writer.write("  private ");
        writer.write(fullClassName(tomMatch374NameNumber_freshVar_7));
        writer.write(" ");
        writer.write(fieldName(tomMatch374NameNumber_freshVar_6));
        writer.write(";\n");
      }}}}}}}if ( tomMatch374NameNumber_end_3.isEmptyConcSlotField() ) {tomMatch374NameNumber_end_3=tomMatch374NameNumber_begin_2;} else {tomMatch374NameNumber_end_3= tomMatch374NameNumber_end_3.getTailConcSlotField() ;}}} while(!( tomMatch374NameNumber_end_3.equals(tomMatch374NameNumber_begin_2) ));}}}}}}}

  }

  private void generateMembersInit(java.io.Writer writer) throws java.io.IOException {
    {if ( (slotList instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch375NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if ( ((tomMatch375NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch375NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch375NameNumber_freshVar_0=tomMatch375NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch375NameNumber_begin_2=tomMatch375NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch375NameNumber_end_3=tomMatch375NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch375NameNumber_freshVar_1=tomMatch375NameNumber_end_3;if (!( tomMatch375NameNumber_freshVar_1.isEmptyConcSlotField() )) {if ( ( tomMatch375NameNumber_freshVar_1.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch375NameNumber_freshVar_6=  tomMatch375NameNumber_freshVar_1.getHeadConcSlotField() .getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch375NameNumber_freshVar_7=  tomMatch375NameNumber_freshVar_1.getHeadConcSlotField() .getDomain() ;{  String  tom_fieldName=tomMatch375NameNumber_freshVar_6;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch375NameNumber_freshVar_7;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch375NameNumber_freshVar_4= tomMatch375NameNumber_freshVar_1.getTailConcSlotField() ;if ( true ) {

        writer.write("    this.");
        writer.write(fieldName(tom_fieldName));
        writer.write(" = ");
        writer.write(fieldName(tom_fieldName));
        if (GomEnvironment.getInstance().isBuiltinClass(tom_domain) && tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "String") )) {
          writer.write(".intern()");
        }
        writer.write(";\n");
      }}}}}}}}}if ( tomMatch375NameNumber_end_3.isEmptyConcSlotField() ) {tomMatch375NameNumber_end_3=tomMatch375NameNumber_begin_2;} else {tomMatch375NameNumber_end_3= tomMatch375NameNumber_end_3.getTailConcSlotField() ;}}} while(!( tomMatch375NameNumber_end_3.equals(tomMatch375NameNumber_begin_2) ));}}}}}}}

  }

  private void generateGetters(java.io.Writer writer) throws java.io.IOException {
    SlotFieldList slots = slotList;
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      writer.write("\n  @Override\n  public "/* Generated by TOM (version 2.6alpha): Do not edit this file */+slotDomain(head)+" "/* Generated by TOM (version 2.6alpha): Do not edit this file */+getMethod(head)+"() {\n    return "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(head.getName())+";\n  }\n      \n  @Override\n  public "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(sortName)+" "/* Generated by TOM (version 2.6alpha): Do not edit this file */+setMethod(head)+"("/* Generated by TOM (version 2.6alpha): Do not edit this file */+slotDomain(head)+" set_arg) {\n    return make("/* Generated by TOM (version 2.6alpha): Do not edit this file */+generateMakeArgsFor(head,"set_arg")+");\n  }"








);
    }
  }

  private String generateToATermChilds() {
    StringBuilder res = new StringBuilder();
    SlotFieldList slots = slotList;
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      if (res.length()!=0) {
        res.append(", ");
      }
      toATermSlotField(res,head);
    }
    return res.toString();
  }

  private String generatefromATermChilds(String appl) {
    StringBuilder res = new StringBuilder();
    int index = 0;
    SlotFieldList slots = slotList;
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      if (res.length()!=0) {
        res.append(", ");
      }
      fromATermSlotField(res,head, appl+".getArgument("+index+")");
      index++;
    }
    return res.toString();
  }

  private String fieldName(String fieldName) {
    return "_"+fieldName;
  }

  private String childListWithType(SlotFieldList slots) {
    StringBuilder res = new StringBuilder();
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      {if ( (head instanceof tom.gom.adt.objects.types.SlotField) ) {{  tom.gom.adt.objects.types.SlotField  tomMatch376NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotField )head);if ( (tomMatch376NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch376NameNumber_freshVar_0= tomMatch376NameNumberfreshSubject_1.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch376NameNumber_freshVar_1= tomMatch376NameNumberfreshSubject_1.getDomain() ;if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(fullClassName(tomMatch376NameNumber_freshVar_1));
          res.append(" ");
          res.append(fieldName(tomMatch376NameNumber_freshVar_0));
        }}}}}}}

    }
    return res.toString();
  }
  private String unprotectedChildListWithType(SlotFieldList slots) {
    StringBuilder res = new StringBuilder();
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      {if ( (head instanceof tom.gom.adt.objects.types.SlotField) ) {{  tom.gom.adt.objects.types.SlotField  tomMatch377NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotField )head);if ( (tomMatch377NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch377NameNumber_freshVar_0= tomMatch377NameNumberfreshSubject_1.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch377NameNumber_freshVar_1= tomMatch377NameNumberfreshSubject_1.getDomain() ;if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(fullClassName(tomMatch377NameNumber_freshVar_1));
          res.append(" ");
          res.append(tomMatch377NameNumber_freshVar_0);
        }}}}}}}

    }
    return res.toString();
  }
  private String childList(SlotFieldList slots) {
    StringBuilder res = new StringBuilder();
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      {if ( (head instanceof tom.gom.adt.objects.types.SlotField) ) {{  tom.gom.adt.objects.types.SlotField  tomMatch378NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotField )head);if ( (tomMatch378NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch378NameNumber_freshVar_0= tomMatch378NameNumberfreshSubject_1.getName() ;if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
          res.append(fieldName(tomMatch378NameNumber_freshVar_0));
        }}}}}}

    }
    return res.toString();
  }
  private String unprotectedChildList(SlotFieldList slots) {
    StringBuilder res = new StringBuilder();
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      {if ( (head instanceof tom.gom.adt.objects.types.SlotField) ) {{  tom.gom.adt.objects.types.SlotField  tomMatch379NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotField )head);if ( (tomMatch379NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch379NameNumber_freshVar_0= tomMatch379NameNumberfreshSubject_1.getName() ;if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
          res.append(tomMatch379NameNumber_freshVar_0);
        }}}}}}

    }
    return res.toString();
  }
  private String generateMembersEqualityTest(String peer) {
    StringBuilder res = new StringBuilder();
    if(!slotList.isEmptyConcSlotField()) {
      res.append("\n      "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+" peer = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+") obj;"
);;
    }
    res.append("\n      return "
);
    {if ( (slotList instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch380NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if ( ((tomMatch380NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch380NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch380NameNumber_freshVar_0=tomMatch380NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch380NameNumber_begin_2=tomMatch380NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch380NameNumber_end_3=tomMatch380NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch380NameNumber_freshVar_1=tomMatch380NameNumber_end_3;if (!( tomMatch380NameNumber_freshVar_1.isEmptyConcSlotField() )) {if ( ( tomMatch380NameNumber_freshVar_1.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch380NameNumber_freshVar_6=  tomMatch380NameNumber_freshVar_1.getHeadConcSlotField() .getName() ;{  String  tom_fieldName=tomMatch380NameNumber_freshVar_6;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch380NameNumber_freshVar_4= tomMatch380NameNumber_freshVar_1.getTailConcSlotField() ;if ( true ) {

        res.append(fieldName(tom_fieldName));
        res.append("==");
        res.append(peer);
        res.append(".");
        res.append(fieldName(tom_fieldName));
        res.append(" && ");
      }}}}}}}if ( tomMatch380NameNumber_end_3.isEmptyConcSlotField() ) {tomMatch380NameNumber_end_3=tomMatch380NameNumber_begin_2;} else {tomMatch380NameNumber_end_3= tomMatch380NameNumber_end_3.getTailConcSlotField() ;}}} while(!( tomMatch380NameNumber_end_3.equals(tomMatch380NameNumber_begin_2) ));}}}}}}}

    res.append("true;"); // to handle the "no childs" case
    return res.toString();
  }

  private String getCases() {
    StringBuilder res = new StringBuilder();
    int index = 0;
    {if ( (slotList instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch381NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if ( ((tomMatch381NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch381NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch381NameNumber_freshVar_0=tomMatch381NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch381NameNumber_begin_2=tomMatch381NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch381NameNumber_end_3=tomMatch381NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch381NameNumber_freshVar_1=tomMatch381NameNumber_end_3;if (!( tomMatch381NameNumber_freshVar_1.isEmptyConcSlotField() )) {if ( ( tomMatch381NameNumber_freshVar_1.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch381NameNumber_freshVar_6=  tomMatch381NameNumber_freshVar_1.getHeadConcSlotField() .getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch381NameNumber_freshVar_7=  tomMatch381NameNumber_freshVar_1.getHeadConcSlotField() .getDomain() ;{  String  tom_fieldName=tomMatch381NameNumber_freshVar_6;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch381NameNumber_freshVar_7;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch381NameNumber_freshVar_4= tomMatch381NameNumber_freshVar_1.getTailConcSlotField() ;if ( true ) {

        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          res.append("      case ");
          res.append(index);
          res.append(": return ");
          res.append(fieldName(tom_fieldName));
          res.append(";\n");
          index++;
        } else {
          res.append("      case ");
          res.append(index);
          res.append(": return new tom.library.sl.VisitableBuiltin<");
          res.append(primitiveToReferenceType(fullClassName(tom_domain)));
          res.append(">(");
          res.append(fieldName(tom_fieldName));
          res.append(");\n");
          index++;
        }
      }}}}}}}}}if ( tomMatch381NameNumber_end_3.isEmptyConcSlotField() ) {tomMatch381NameNumber_end_3=tomMatch381NameNumber_begin_2;} else {tomMatch381NameNumber_end_3= tomMatch381NameNumber_end_3.getTailConcSlotField() ;}}} while(!( tomMatch381NameNumber_end_3.equals(tomMatch381NameNumber_begin_2) ));}}}}}}}

    return res.toString();
  }

  private String visitableList(SlotFieldList slots) {
    StringBuilder res = new StringBuilder();
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      {if ( (head instanceof tom.gom.adt.objects.types.SlotField) ) {{  tom.gom.adt.objects.types.SlotField  tomMatch382NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotField )head);if ( (tomMatch382NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  tom.gom.adt.objects.types.ClassName  tomMatch382NameNumber_freshVar_0= tomMatch382NameNumberfreshSubject_1.getDomain() ;{  String  tomMatch382NameNumber_freshVar_1= tomMatch382NameNumberfreshSubject_1.getName() ;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch382NameNumber_freshVar_0;{  String  tom_name=tomMatch382NameNumber_freshVar_1;if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          res.append(fieldName(tom_name));
        } else {
          res.append("new tom.library.sl.VisitableBuiltin<");
          res.append(primitiveToReferenceType(fullClassName(tom_domain)));
          res.append(">(");
          res.append(fieldName(tom_name));
          res.append(")");
        }
        }}}}}}}}}

    }
    return res.toString();
  }


  private String visitableCount() {
    if(className().equals("ConsPath"+sortName.getName())) { 
      return "0";
    } else {
      return ""+slotList.length();
    }
  }

  private String arrayMake(String arrayName) {
    StringBuilder res = new StringBuilder("make(");
    int index = 0;
    {if ( (slotList instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch383NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if ( ((tomMatch383NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch383NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch383NameNumber_freshVar_0=tomMatch383NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch383NameNumber_begin_2=tomMatch383NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch383NameNumber_end_3=tomMatch383NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch383NameNumber_freshVar_1=tomMatch383NameNumber_end_3;if (!( tomMatch383NameNumber_freshVar_1.isEmptyConcSlotField() )) {if ( ( tomMatch383NameNumber_freshVar_1.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  tom.gom.adt.objects.types.ClassName  tomMatch383NameNumber_freshVar_6=  tomMatch383NameNumber_freshVar_1.getHeadConcSlotField() .getDomain() ;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch383NameNumber_freshVar_6;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch383NameNumber_freshVar_4= tomMatch383NameNumber_freshVar_1.getTailConcSlotField() ;if ( true ) {

        if(index>0) { res.append(", "); }
       if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
         res.append("(");
         res.append(fullClassName(tom_domain));
         res.append(") ");
         res.append(arrayName);
         res.append("[");
         res.append(index);
         res.append("]");
       } else {
         res.append("((tom.library.sl.VisitableBuiltin<");
         res.append(primitiveToReferenceType(fullClassName(tom_domain)));
         res.append(">)");
         res.append(arrayName);
         res.append("[");
         res.append(index);
         res.append("])");
         res.append(".getBuiltin()");
       }
       index++;
      }}}}}}}if ( tomMatch383NameNumber_end_3.isEmptyConcSlotField() ) {tomMatch383NameNumber_end_3=tomMatch383NameNumber_begin_2;} else {tomMatch383NameNumber_end_3= tomMatch383NameNumber_end_3.getTailConcSlotField() ;}}} while(!( tomMatch383NameNumber_end_3.equals(tomMatch383NameNumber_begin_2) ));}}}}}}}

    res.append(")");
    return res.toString();
  }
private String makeCases(String argName) {
  StringBuilder res = new StringBuilder();
  int index = 0;
  {if ( (slotList instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch384NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if ( ((tomMatch384NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch384NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch384NameNumber_freshVar_0=tomMatch384NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch384NameNumber_begin_2=tomMatch384NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch384NameNumber_end_3=tomMatch384NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch384NameNumber_freshVar_1=tomMatch384NameNumber_end_3;if (!( tomMatch384NameNumber_freshVar_1.isEmptyConcSlotField() )) {if ( ( tomMatch384NameNumber_freshVar_1.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch384NameNumber_freshVar_4= tomMatch384NameNumber_freshVar_1.getTailConcSlotField() ;if ( true ) {

      res.append("      case "+index+": return make("+generateMakeArgsFor(index, argName)+");\n");
      index++;
    }}}}}if ( tomMatch384NameNumber_end_3.isEmptyConcSlotField() ) {tomMatch384NameNumber_end_3=tomMatch384NameNumber_begin_2;} else {tomMatch384NameNumber_end_3= tomMatch384NameNumber_end_3.getTailConcSlotField() ;}}} while(!( tomMatch384NameNumber_end_3.equals(tomMatch384NameNumber_begin_2) ));}}}}}}}

  return res.toString();
}
private String generateMakeArgsFor(int argIndex, String argName) {
  StringBuilder res = new StringBuilder();
  int index = 0;
  {if ( (slotList instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch385NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if ( ((tomMatch385NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch385NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch385NameNumber_freshVar_0=tomMatch385NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch385NameNumber_begin_2=tomMatch385NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch385NameNumber_end_3=tomMatch385NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch385NameNumber_freshVar_1=tomMatch385NameNumber_end_3;if (!( tomMatch385NameNumber_freshVar_1.isEmptyConcSlotField() )) {if ( ( tomMatch385NameNumber_freshVar_1.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch385NameNumber_freshVar_6=  tomMatch385NameNumber_freshVar_1.getHeadConcSlotField() .getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch385NameNumber_freshVar_7=  tomMatch385NameNumber_freshVar_1.getHeadConcSlotField() .getDomain() ;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch385NameNumber_freshVar_7;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch385NameNumber_freshVar_4= tomMatch385NameNumber_freshVar_1.getTailConcSlotField() ;if ( true ) {

      if(index>0) { res.append(", "); }
      if (GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
        res.append(getMethod( tomMatch385NameNumber_freshVar_1.getHeadConcSlotField() ));
        res.append("()");
      } else {
        if (index != argIndex) {
          res.append(fieldName(tomMatch385NameNumber_freshVar_6));
        } else {
          res.append("(");
          res.append(fullClassName(tom_domain));
          res.append(") ");
          res.append(argName);
        }
      }
      index++;
    }}}}}}}}if ( tomMatch385NameNumber_end_3.isEmptyConcSlotField() ) {tomMatch385NameNumber_end_3=tomMatch385NameNumber_begin_2;} else {tomMatch385NameNumber_end_3= tomMatch385NameNumber_end_3.getTailConcSlotField() ;}}} while(!( tomMatch385NameNumber_end_3.equals(tomMatch385NameNumber_begin_2) ));}}}}}}}

  return res.toString();
}
private String generateMakeArgsFor(SlotField slot, String argName) {
  StringBuilder res = new StringBuilder();
  int fullindex = 0;
  {if ( (slotList instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch386NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if ( ((tomMatch386NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch386NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch386NameNumber_freshVar_0=tomMatch386NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch386NameNumber_begin_2=tomMatch386NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch386NameNumber_end_3=tomMatch386NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch386NameNumber_freshVar_1=tomMatch386NameNumber_end_3;if (!( tomMatch386NameNumber_freshVar_1.isEmptyConcSlotField() )) {if ( ( tomMatch386NameNumber_freshVar_1.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch386NameNumber_freshVar_6=  tomMatch386NameNumber_freshVar_1.getHeadConcSlotField() .getName() ;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch386NameNumber_freshVar_4= tomMatch386NameNumber_freshVar_1.getTailConcSlotField() ;if ( true ) {

      if(fullindex>0) { res.append(", "); }
      if ( tomMatch386NameNumber_freshVar_1.getHeadConcSlotField() == slot) {
        res.append(argName);
      } else {
        res.append(fieldName(tomMatch386NameNumber_freshVar_6));
      }
      fullindex++;
    }}}}}}if ( tomMatch386NameNumber_end_3.isEmptyConcSlotField() ) {tomMatch386NameNumber_end_3=tomMatch386NameNumber_begin_2;} else {tomMatch386NameNumber_end_3= tomMatch386NameNumber_end_3.getTailConcSlotField() ;}}} while(!( tomMatch386NameNumber_end_3.equals(tomMatch386NameNumber_begin_2) ));}}}}}}}

  return res.toString();
}

  private String toStringChilds(String buffer) {
    if (0 == slotList.length()) {
      return "";
    }
    StringBuilder res = new StringBuilder();
    SlotFieldList slots = slotList;
		while(!slots.isEmptyConcSlotField()) {
			if(res.length()!=0) {
				res.append(""/* Generated by TOM (version 2.6alpha): Do not edit this file */+buffer+".append(\",\");\n    "
);
			}
			SlotField head = slots.getHeadConcSlotField();
			slots = slots.getTailConcSlotField();
      toStringSlotField(res, head, fieldName(head.getName()), buffer);
		}
    return res.toString();
  }

  private String genCompareChilds(String oldOther, String compareFun) {
    StringBuilder res = new StringBuilder();
    String other = "tco";
    if(!slotList.isEmptyConcSlotField()) {
    res.append(""/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+" "/* Generated by TOM (version 2.6alpha): Do not edit this file */+other+" = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+") "/* Generated by TOM (version 2.6alpha): Do not edit this file */+oldOther+";");
    }
    {if ( (slotList instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch387NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if ( ((tomMatch387NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch387NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch387NameNumber_freshVar_0=tomMatch387NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch387NameNumber_begin_2=tomMatch387NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch387NameNumber_end_3=tomMatch387NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch387NameNumber_freshVar_1=tomMatch387NameNumber_end_3;if (!( tomMatch387NameNumber_freshVar_1.isEmptyConcSlotField() )) {if ( ( tomMatch387NameNumber_freshVar_1.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch387NameNumber_freshVar_6=  tomMatch387NameNumber_freshVar_1.getHeadConcSlotField() .getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch387NameNumber_freshVar_7=  tomMatch387NameNumber_freshVar_1.getHeadConcSlotField() .getDomain() ;{  String  tom_slotName=tomMatch387NameNumber_freshVar_6;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch387NameNumber_freshVar_7;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch387NameNumber_freshVar_4= tomMatch387NameNumber_freshVar_1.getTailConcSlotField() ;if ( true ) {

        if (GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
         if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "int") )
             || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "long") )
             || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "double") )
             || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "float") )
             || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "char") )) { 
           res.append("\n    if( this."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+" != "/* Generated by TOM (version 2.6alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+")\n      return (this."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+" < "/* Generated by TOM (version 2.6alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+")?-1:1;\n"


);
         } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "boolean") )) {
           res.append("\n    if( this."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+" != "/* Generated by TOM (version 2.6alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+")\n      return (!this."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+" && "/* Generated by TOM (version 2.6alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+")?-1:1;\n"


);
         } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "String") )) {
           res.append("\n    int "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp = (this."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+").compareTo("/* Generated by TOM (version 2.6alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+");\n    if("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n             \n"




);
         } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("aterm", "ATerm") )
             ||tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("aterm", "ATermList") )) {
           res.append("\n    /* Inefficient total order on ATerm */\n    int "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp = ((this."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+").toString()).compareTo(("/* Generated by TOM (version 2.6alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+").toString());\n    if("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n"




);
         } else {
            throw new GomRuntimeException("Builtin "+tom_domain+" not supported");
         }
        } else {
          res.append("\n    int "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp = (this."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+")."/* Generated by TOM (version 2.6alpha): Do not edit this file */+compareFun+"("/* Generated by TOM (version 2.6alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+");\n    if("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n"



); 
        }
      }}}}}}}}}if ( tomMatch387NameNumber_end_3.isEmptyConcSlotField() ) {tomMatch387NameNumber_end_3=tomMatch387NameNumber_begin_2;} else {tomMatch387NameNumber_end_3= tomMatch387NameNumber_end_3.getTailConcSlotField() ;}}} while(!( tomMatch387NameNumber_end_3.equals(tomMatch387NameNumber_begin_2) ));}}}}}}}

    return res.toString();
  }

  private void generateHashArgs(java.io.Writer writer) throws java.io.IOException {
    int index = slotList.length() - 1;
    {if ( (slotList instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch388NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if ( ((tomMatch388NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch388NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch388NameNumber_freshVar_0=tomMatch388NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch388NameNumber_begin_2=tomMatch388NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch388NameNumber_end_3=tomMatch388NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch388NameNumber_freshVar_1=tomMatch388NameNumber_end_3;if (!( tomMatch388NameNumber_freshVar_1.isEmptyConcSlotField() )) {if ( ( tomMatch388NameNumber_freshVar_1.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch388NameNumber_freshVar_6=  tomMatch388NameNumber_freshVar_1.getHeadConcSlotField() .getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch388NameNumber_freshVar_7=  tomMatch388NameNumber_freshVar_1.getHeadConcSlotField() .getDomain() ;{  String  tom_slotName=tomMatch388NameNumber_freshVar_6;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch388NameNumber_freshVar_7;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch388NameNumber_freshVar_4= tomMatch388NameNumber_freshVar_1.getTailConcSlotField() ;if ( true ) {

        int shift = (index % 4) * 8;
        String accum = ""+"aaaabbbbcccc".toCharArray()[index % 12];
        writer.write("    "+accum+" += (");
        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          writer.write(fieldName(tom_slotName)+".hashCode()");
        } else {
          if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "int") )
              || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "long") )
              || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "double") )
              || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "float") )
              || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "char") )) {
            writer.write(fieldName(tom_slotName));
          } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "boolean") )) {
            writer.write("("+fieldName(tom_slotName)+"?1:0)");
          } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "String") )) {
            // Use the string hashFunction for Strings, and pass index as arity
            writer.write("shared.HashFunctions.stringHashFunction("+fieldName(tom_slotName)+", "+index+")");
          } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("aterm", "ATerm") )||tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("aterm", "ATermList") )) {
            // Use the string hashFunction for Strings, and pass index as arity
            writer.write(fieldName(tom_slotName)+".hashCode()");
          }  else {
            throw new GomRuntimeException("generateHashArgs: Builtin " + tom_domain+ " not supported");
          }
        }
        if (shift!=0) { writer.write(" << "+(shift)); }
        writer.write(");\n");
        index--;
      }}}}}}}}}if ( tomMatch388NameNumber_end_3.isEmptyConcSlotField() ) {tomMatch388NameNumber_end_3=tomMatch388NameNumber_begin_2;} else {tomMatch388NameNumber_end_3= tomMatch388NameNumber_end_3.getTailConcSlotField() ;}}} while(!( tomMatch388NameNumber_end_3.equals(tomMatch388NameNumber_begin_2) ));}}}}}}}

  }

  public void generateConstructor(java.io.Writer writer) throws java.io.IOException {
    boolean hasHooks = false;
    {lbl: {if ( (hooks instanceof tom.gom.adt.objects.types.HookList) ) {{  tom.gom.adt.objects.types.HookList  tomMatch389NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.HookList )hooks);if ( ((tomMatch389NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.hooklist.ConsConcHook) || (tomMatch389NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.hooklist.EmptyConcHook)) ) {{  tom.gom.adt.objects.types.HookList  tomMatch389NameNumber_freshVar_0=tomMatch389NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.HookList  tomMatch389NameNumber_begin_2=tomMatch389NameNumber_freshVar_0;{  tom.gom.adt.objects.types.HookList  tomMatch389NameNumber_end_3=tomMatch389NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.HookList  tomMatch389NameNumber_freshVar_1=tomMatch389NameNumber_end_3;if (!( tomMatch389NameNumber_freshVar_1.isEmptyConcHook() )) {if ( ( tomMatch389NameNumber_freshVar_1.getHeadConcHook()  instanceof tom.gom.adt.objects.types.hook.MakeHook) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch389NameNumber_freshVar_6=  tomMatch389NameNumber_freshVar_1.getHeadConcHook() .getHookArguments() ;{  tom.gom.adt.objects.types.HookList  tomMatch389NameNumber_freshVar_4= tomMatch389NameNumber_freshVar_1.getTailConcHook() ;if ( true ) {


      hasHooks = true;
      writer.write("\n    public static "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(sortName)+" make("/* Generated by TOM (version 2.6alpha): Do not edit this file */+unprotectedChildListWithType(tomMatch389NameNumber_freshVar_6)+") {\n  "

);
        SlotFieldList bargs = generateMakeHooks(hooks,null,writer);
        writer.write("\n      return realMake("/* Generated by TOM (version 2.6alpha): Do not edit this file */+unprotectedChildList(bargs)+");\n    }\n  "


);
        break lbl;
      }}}}}}if ( tomMatch389NameNumber_end_3.isEmptyConcHook() ) {tomMatch389NameNumber_end_3=tomMatch389NameNumber_begin_2;} else {tomMatch389NameNumber_end_3= tomMatch389NameNumber_end_3.getTailConcHook() ;}}} while(!( tomMatch389NameNumber_end_3.equals(tomMatch389NameNumber_begin_2) ));}}}}}}}}

    
    String makeName = "make";
    String visibility = "public";
    if (hasHooks) {
      makeName = "realMake";
      visibility = "private";
    }
    writer.write("\n  "/* Generated by TOM (version 2.6alpha): Do not edit this file */+visibility+" static "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+" "/* Generated by TOM (version 2.6alpha): Do not edit this file */+makeName+"("/* Generated by TOM (version 2.6alpha): Do not edit this file */+childListWithType(slotList)+") {\n"

);
    if(slotList.length()>0) {
      if(multithread) {
        writer.write("\n    // allocate and object and make duplicate equal identity\n    "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+" newProto = new "/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+"();\n    newProto.initHashCode("/* Generated by TOM (version 2.6alpha): Do not edit this file */+childList(slotList)+");\n    return ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+") factory.build(newProto);\n"




);
      } else {
        writer.write("\n    // use the proto as a model\n    proto.initHashCode("/* Generated by TOM (version 2.6alpha): Do not edit this file */+childList(slotList)+");\n    return ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+className()+") factory.build(proto);\n"



);
      }
    } else {
        writer.write("\n    return proto;\n"

);
    }
    writer.write("\n  }\n"

);
}

  public SlotFieldList generateMakeHooks(
      HookList other,
      SlotFieldList oArgs, /* will be null if it is the first hook */
      java.io.Writer writer)
    throws java.io.IOException {
    {if ( (other instanceof tom.gom.adt.objects.types.HookList) ) {{  tom.gom.adt.objects.types.HookList  tomMatch390NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.HookList )other);if ( ((tomMatch390NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.hooklist.ConsConcHook) || (tomMatch390NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.hooklist.EmptyConcHook)) ) {{  tom.gom.adt.objects.types.HookList  tomMatch390NameNumber_freshVar_0=tomMatch390NameNumberfreshSubject_1;if (!( tomMatch390NameNumber_freshVar_0.isEmptyConcHook() )) {{  tom.gom.adt.objects.types.HookList  tomMatch390NameNumber_freshVar_1= tomMatch390NameNumber_freshVar_0.getTailConcHook() ;{ boolean tomMatch390NameNumber_freshVar_3= false ;if ( ( tomMatch390NameNumber_freshVar_0.getHeadConcHook()  instanceof tom.gom.adt.objects.types.hook.MakeHook) ) {tomMatch390NameNumber_freshVar_3= true ;}if ((tomMatch390NameNumber_freshVar_3 ==  false )) {if ( true ) {

        /* skip non Make hooks */
        return generateMakeHooks(tomMatch390NameNumber_freshVar_1, oArgs, writer);
      }}}}}}}}}if ( (other instanceof tom.gom.adt.objects.types.HookList) ) {{  tom.gom.adt.objects.types.HookList  tomMatch390NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.HookList )other);if ( ((tomMatch390NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.hooklist.ConsConcHook) || (tomMatch390NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.hooklist.EmptyConcHook)) ) {{  tom.gom.adt.objects.types.HookList  tomMatch390NameNumber_freshVar_4=tomMatch390NameNumberfreshSubject_1;if (!( tomMatch390NameNumber_freshVar_4.isEmptyConcHook() )) {if ( ( tomMatch390NameNumber_freshVar_4.getHeadConcHook()  instanceof tom.gom.adt.objects.types.hook.MakeHook) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch390NameNumber_freshVar_7=  tomMatch390NameNumber_freshVar_4.getHeadConcHook() .getHookArguments() ;{  tom.gom.adt.code.types.Code  tomMatch390NameNumber_freshVar_8=  tomMatch390NameNumber_freshVar_4.getHeadConcHook() .getCode() ;{  tom.gom.adt.objects.types.SlotFieldList  tom_args=tomMatch390NameNumber_freshVar_7;{  tom.gom.adt.objects.types.HookList  tomMatch390NameNumber_freshVar_5= tomMatch390NameNumber_freshVar_4.getTailConcHook() ;if ( true ) {

        /* Rename the previous arguments according to new, if needed */
        if(oArgs != null && oArgs != tom_args) {
          recVarNameRemap(oArgs,tom_args, writer);
        }
        /* Make sure we defeat java dead code detection */
        writer.write("if (true) {");
        CodeGen.generateCode(tomMatch390NameNumber_freshVar_8,writer);
        writer.write("}");
        return generateMakeHooks(tomMatch390NameNumber_freshVar_5, tom_args, writer);
      }}}}}}}}}}}}

    return oArgs;
  }

  private void recVarNameRemap(
      SlotFieldList oargs,
      SlotFieldList nargs,
      java.io.Writer writer)
  throws java.io.IOException {
    {if ( (oargs instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch391NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )oargs);if ( ((tomMatch391NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch391NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch391NameNumber_freshVar_0=tomMatch391NameNumberfreshSubject_1;if ( tomMatch391NameNumber_freshVar_0.isEmptyConcSlotField() ) {if ( (nargs instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch391NameNumberfreshSubject_2=(( tom.gom.adt.objects.types.SlotFieldList )nargs);if ( ((tomMatch391NameNumberfreshSubject_2 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch391NameNumberfreshSubject_2 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch391NameNumber_freshVar_1=tomMatch391NameNumberfreshSubject_2;if ( tomMatch391NameNumber_freshVar_1.isEmptyConcSlotField() ) {if ( true ) {

        return ;
      }}}}}}}}}}}if ( (oargs instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch391NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )oargs);if ( ((tomMatch391NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch391NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch391NameNumber_freshVar_2=tomMatch391NameNumberfreshSubject_1;if (!( tomMatch391NameNumber_freshVar_2.isEmptyConcSlotField() )) {if ( ( tomMatch391NameNumber_freshVar_2.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch391NameNumber_freshVar_8=  tomMatch391NameNumber_freshVar_2.getHeadConcSlotField() .getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch391NameNumber_freshVar_9=  tomMatch391NameNumber_freshVar_2.getHeadConcSlotField() .getDomain() ;{  String  tom_oargName=tomMatch391NameNumber_freshVar_8;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch391NameNumber_freshVar_3= tomMatch391NameNumber_freshVar_2.getTailConcSlotField() ;if ( (nargs instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch391NameNumberfreshSubject_2=(( tom.gom.adt.objects.types.SlotFieldList )nargs);if ( ((tomMatch391NameNumberfreshSubject_2 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch391NameNumberfreshSubject_2 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch391NameNumber_freshVar_5=tomMatch391NameNumberfreshSubject_2;if (!( tomMatch391NameNumber_freshVar_5.isEmptyConcSlotField() )) {if ( ( tomMatch391NameNumber_freshVar_5.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch391NameNumber_freshVar_10=  tomMatch391NameNumber_freshVar_5.getHeadConcSlotField() .getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch391NameNumber_freshVar_11=  tomMatch391NameNumber_freshVar_5.getHeadConcSlotField() .getDomain() ;{  String  tom_nargName=tomMatch391NameNumber_freshVar_10;{  tom.gom.adt.objects.types.ClassName  tom_ndomain=tomMatch391NameNumber_freshVar_11;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch391NameNumber_freshVar_6= tomMatch391NameNumber_freshVar_5.getTailConcSlotField() ;if ( true ) {


        if (!(tomMatch391NameNumber_freshVar_9==tom_ndomain)) {
          throw new GomRuntimeException(
              "OperatorTemplate: incompatible args "+
              "should be rejected by typechecker");
        } else if (!tom_oargName.equals(tom_nargName)) {
          /* XXX: the declaration should be omitted if nargName was previously
           * used */
          writer.write("\n    "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(tom_ndomain)+" "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_nargName+" = "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_oargName+";\n"

);
        } /* else nothing to rename */
        recVarNameRemap(tomMatch391NameNumber_freshVar_3,tomMatch391NameNumber_freshVar_6, writer);
        return;
      }}}}}}}}}}}}}}}}}}}}}}}

    throw new GomRuntimeException(
        "OperatorTemplate:recVarNameRemap failed " + oargs + " " + nargs);
  }

  public void generateTomMapping(Writer writer, ClassName basicStrategy)
      throws java.io.IOException {
    {if ( (hooks instanceof tom.gom.adt.objects.types.HookList) ) {{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.HookList )hooks);{ boolean tomMatch392NameNumber_freshVar_6= false ;if ( ((tomMatch392NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.hooklist.ConsConcHook) || (tomMatch392NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.hooklist.EmptyConcHook)) ) {{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumber_freshVar_0=tomMatch392NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumber_begin_2=tomMatch392NameNumber_freshVar_0;{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumber_end_3=tomMatch392NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumber_freshVar_1=tomMatch392NameNumber_end_3;if (!( tomMatch392NameNumber_freshVar_1.isEmptyConcHook() )) {if ( ( tomMatch392NameNumber_freshVar_1.getHeadConcHook()  instanceof tom.gom.adt.objects.types.hook.MappingHook) ) {{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumber_freshVar_4= tomMatch392NameNumber_freshVar_1.getTailConcHook() ;tomMatch392NameNumber_freshVar_6= true ;}}}}if ( tomMatch392NameNumber_end_3.isEmptyConcHook() ) {tomMatch392NameNumber_end_3=tomMatch392NameNumber_begin_2;} else {tomMatch392NameNumber_end_3= tomMatch392NameNumber_end_3.getTailConcHook() ;}}} while(!( tomMatch392NameNumber_end_3.equals(tomMatch392NameNumber_begin_2) ));}}}}if ((tomMatch392NameNumber_freshVar_6 ==  false )) {if ( true ) {

        writer.write("%op "+className(sortName)+" "+className()+"(");
        slotDecl(writer,slotList);
        writer.write(") {\n");
        writer.write("  is_fsym(t) { ($t instanceof "+fullClassName()+") }\n");
        {if ( (slotList instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch393NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if ( ((tomMatch393NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch393NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch393NameNumber_freshVar_0=tomMatch393NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch393NameNumber_begin_2=tomMatch393NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch393NameNumber_end_3=tomMatch393NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch393NameNumber_freshVar_1=tomMatch393NameNumber_end_3;if (!( tomMatch393NameNumber_freshVar_1.isEmptyConcSlotField() )) {if ( ( tomMatch393NameNumber_freshVar_1.getHeadConcSlotField()  instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch393NameNumber_freshVar_6=  tomMatch393NameNumber_freshVar_1.getHeadConcSlotField() .getName() ;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch393NameNumber_freshVar_4= tomMatch393NameNumber_freshVar_1.getTailConcSlotField() ;if ( true ) {

            writer.write("  get_slot("+tomMatch393NameNumber_freshVar_6+", t) ");
            writer.write("{ $t."+getMethod( tomMatch393NameNumber_freshVar_1.getHeadConcSlotField() )+"() }\n");
          }}}}}}if ( tomMatch393NameNumber_end_3.isEmptyConcSlotField() ) {tomMatch393NameNumber_end_3=tomMatch393NameNumber_begin_2;} else {tomMatch393NameNumber_end_3= tomMatch393NameNumber_end_3.getTailConcSlotField() ;}}} while(!( tomMatch393NameNumber_end_3.equals(tomMatch393NameNumber_begin_2) ));}}}}}}}

        writer.write("  make(");
        slotArgs(writer,slotList);
        writer.write(") { ");
        writer.write(fullClassName());
        writer.write(".make(");
        slotArgsWithDollar(writer,slotList);
        writer.write(") }\n");
        writer.write("}\n");
        writer.write("\n");
        return;
      }}}}}if ( (hooks instanceof tom.gom.adt.objects.types.HookList) ) {{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.HookList )hooks);if ( ((tomMatch392NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.hooklist.ConsConcHook) || (tomMatch392NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.hooklist.EmptyConcHook)) ) {{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumber_freshVar_7=tomMatch392NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumber_begin_9=tomMatch392NameNumber_freshVar_7;{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumber_end_10=tomMatch392NameNumber_freshVar_7;do {{{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumber_freshVar_8=tomMatch392NameNumber_end_10;if (!( tomMatch392NameNumber_freshVar_8.isEmptyConcHook() )) {if ( ( tomMatch392NameNumber_freshVar_8.getHeadConcHook()  instanceof tom.gom.adt.objects.types.hook.MappingHook) ) {{  tom.gom.adt.code.types.Code  tomMatch392NameNumber_freshVar_13=  tomMatch392NameNumber_freshVar_8.getHeadConcHook() .getCode() ;{  tom.gom.adt.objects.types.HookList  tomMatch392NameNumber_freshVar_11= tomMatch392NameNumber_freshVar_8.getTailConcHook() ;if ( true ) {

        CodeGen.generateCode(tomMatch392NameNumber_freshVar_13,writer);
      }}}}}}if ( tomMatch392NameNumber_end_10.isEmptyConcHook() ) {tomMatch392NameNumber_end_10=tomMatch392NameNumber_begin_9;} else {tomMatch392NameNumber_end_10= tomMatch392NameNumber_end_10.getTailConcHook() ;}}} while(!( tomMatch392NameNumber_end_10.equals(tomMatch392NameNumber_begin_9) ));}}}}}}}

    return;
  }
}

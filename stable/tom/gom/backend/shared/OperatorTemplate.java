/* Generated by TOM (version 2.5alpha): Do not edit this file *//*
 * Gom
 *
 * Copyright (C) 2006-2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.backend.shared;

import java.io.*;
import java.util.*;
import java.util.logging.*;
import tom.gom.backend.TemplateHookedClass;
import tom.gom.backend.TemplateClass;
import tom.gom.backend.CodeGen;
import tom.gom.tools.GomEnvironment;
import tom.gom.tools.error.GomRuntimeException;
import tom.gom.adt.objects.types.*;

public class OperatorTemplate extends TemplateHookedClass {
  ClassName abstractType;
  ClassName extendsType;
  ClassName sortName;
  ClassName visitor;
  SlotFieldList slotList;

  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  private static boolean tom_equal_term_Code(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Code(Object t) { return  t instanceof tom.gom.adt.code.types.Code ;}private static boolean tom_equal_term_Hook(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Hook(Object t) { return  t instanceof tom.gom.adt.objects.types.Hook ;}private static boolean tom_equal_term_SlotField(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotField(Object t) { return  t instanceof tom.gom.adt.objects.types.SlotField ;}private static boolean tom_equal_term_SlotFieldList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotFieldList(Object t) { return  t instanceof tom.gom.adt.objects.types.SlotFieldList ;}private static boolean tom_equal_term_GomClass(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomClass(Object t) { return  t instanceof tom.gom.adt.objects.types.GomClass ;}private static boolean tom_equal_term_ClassName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ClassName(Object t) { return  t instanceof tom.gom.adt.objects.types.ClassName ;}private static boolean tom_equal_term_HookList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_HookList(Object t) { return  t instanceof tom.gom.adt.objects.types.HookList ;}private static boolean tom_is_fun_sym_MakeHook( tom.gom.adt.objects.types.Hook  t) { return  t instanceof tom.gom.adt.objects.types.hook.MakeHook ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_MakeHook_HookArguments( tom.gom.adt.objects.types.Hook  t) { return  t.getHookArguments() ;}private static  tom.gom.adt.code.types.Code  tom_get_slot_MakeHook_Code( tom.gom.adt.objects.types.Hook  t) { return  t.getCode() ;}private static boolean tom_is_fun_sym_MappingHook( tom.gom.adt.objects.types.Hook  t) { return  t instanceof tom.gom.adt.objects.types.hook.MappingHook ;}private static  tom.gom.adt.code.types.Code  tom_get_slot_MappingHook_Code( tom.gom.adt.objects.types.Hook  t) { return  t.getCode() ;}private static boolean tom_is_fun_sym_SlotField( tom.gom.adt.objects.types.SlotField  t) { return  t instanceof tom.gom.adt.objects.types.slotfield.SlotField ;}private static  String  tom_get_slot_SlotField_Name( tom.gom.adt.objects.types.SlotField  t) { return  t.getName() ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_SlotField_Domain( tom.gom.adt.objects.types.SlotField  t) { return  t.getDomain() ;}private static boolean tom_is_fun_sym_OperatorClass( tom.gom.adt.objects.types.GomClass  t) { return  t instanceof tom.gom.adt.objects.types.gomclass.OperatorClass ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_ClassName( tom.gom.adt.objects.types.GomClass  t) { return  t.getClassName() ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_AbstractType( tom.gom.adt.objects.types.GomClass  t) { return  t.getAbstractType() ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_ExtendsType( tom.gom.adt.objects.types.GomClass  t) { return  t.getExtendsType() ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_Mapping( tom.gom.adt.objects.types.GomClass  t) { return  t.getMapping() ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_SortName( tom.gom.adt.objects.types.GomClass  t) { return  t.getSortName() ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_Visitor( tom.gom.adt.objects.types.GomClass  t) { return  t.getVisitor() ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_OperatorClass_Slots( tom.gom.adt.objects.types.GomClass  t) { return  t.getSlots() ;}private static  tom.gom.adt.objects.types.HookList  tom_get_slot_OperatorClass_Hooks( tom.gom.adt.objects.types.GomClass  t) { return  t.getHooks() ;}private static  tom.gom.adt.objects.types.ClassName  tom_make_ClassName( String  t0,  String  t1) { return  tom.gom.adt.objects.types.classname.ClassName.make(t0, t1) ; }private static boolean tom_is_fun_sym_concSlotField( tom.gom.adt.objects.types.SlotFieldList  t) { return  t instanceof tom.gom.adt.objects.types.slotfieldlist.ConsconcSlotField || t instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyconcSlotField ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_empty_list_concSlotField() { return  tom.gom.adt.objects.types.slotfieldlist.EmptyconcSlotField.make() ; }private static  tom.gom.adt.objects.types.SlotFieldList  tom_cons_list_concSlotField( tom.gom.adt.objects.types.SlotField  e,  tom.gom.adt.objects.types.SlotFieldList  l) { return  tom.gom.adt.objects.types.slotfieldlist.ConsconcSlotField.make(e,l) ; }private static  tom.gom.adt.objects.types.SlotField  tom_get_head_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) { return  l.getHeadconcSlotField() ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_get_tail_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) { return  l.getTailconcSlotField() ;}private static boolean tom_is_empty_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) { return  l.isEmptyconcSlotField() ;}   private static   tom.gom.adt.objects.types.SlotFieldList  tom_append_list_concSlotField( tom.gom.adt.objects.types.SlotFieldList l1,  tom.gom.adt.objects.types.SlotFieldList  l2) {     if(tom_is_empty_concSlotField_SlotFieldList(l1)) {       return l2;     } else if(tom_is_empty_concSlotField_SlotFieldList(l2)) {       return l1;     } else if(tom_is_empty_concSlotField_SlotFieldList(tom_get_tail_concSlotField_SlotFieldList(l1))) {       return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(tom_get_head_concSlotField_SlotFieldList(l1),l2);     } else {       return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(tom_get_head_concSlotField_SlotFieldList(l1),tom_append_list_concSlotField(tom_get_tail_concSlotField_SlotFieldList(l1),l2));     }   }   private static   tom.gom.adt.objects.types.SlotFieldList  tom_get_slice_concSlotField( tom.gom.adt.objects.types.SlotFieldList  begin,  tom.gom.adt.objects.types.SlotFieldList  end, tom.gom.adt.objects.types.SlotFieldList  tail) {     if(tom_equal_term_SlotFieldList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(tom_get_head_concSlotField_SlotFieldList(begin),( tom.gom.adt.objects.types.SlotFieldList )tom_get_slice_concSlotField(tom_get_tail_concSlotField_SlotFieldList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concHook( tom.gom.adt.objects.types.HookList  t) { return  t instanceof tom.gom.adt.objects.types.hooklist.ConsconcHook || t instanceof tom.gom.adt.objects.types.hooklist.EmptyconcHook ;}private static  tom.gom.adt.objects.types.HookList  tom_empty_list_concHook() { return  tom.gom.adt.objects.types.hooklist.EmptyconcHook.make() ; }private static  tom.gom.adt.objects.types.HookList  tom_cons_list_concHook( tom.gom.adt.objects.types.Hook  e,  tom.gom.adt.objects.types.HookList  l) { return  tom.gom.adt.objects.types.hooklist.ConsconcHook.make(e,l) ; }private static  tom.gom.adt.objects.types.Hook  tom_get_head_concHook_HookList( tom.gom.adt.objects.types.HookList  l) { return  l.getHeadconcHook() ;}private static  tom.gom.adt.objects.types.HookList  tom_get_tail_concHook_HookList( tom.gom.adt.objects.types.HookList  l) { return  l.getTailconcHook() ;}private static boolean tom_is_empty_concHook_HookList( tom.gom.adt.objects.types.HookList  l) { return  l.isEmptyconcHook() ;}   private static   tom.gom.adt.objects.types.HookList  tom_append_list_concHook( tom.gom.adt.objects.types.HookList l1,  tom.gom.adt.objects.types.HookList  l2) {     if(tom_is_empty_concHook_HookList(l1)) {       return l2;     } else if(tom_is_empty_concHook_HookList(l2)) {       return l1;     } else if(tom_is_empty_concHook_HookList(tom_get_tail_concHook_HookList(l1))) {       return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(tom_get_head_concHook_HookList(l1),l2);     } else {       return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(tom_get_head_concHook_HookList(l1),tom_append_list_concHook(tom_get_tail_concHook_HookList(l1),l2));     }   }   private static   tom.gom.adt.objects.types.HookList  tom_get_slice_concHook( tom.gom.adt.objects.types.HookList  begin,  tom.gom.adt.objects.types.HookList  end, tom.gom.adt.objects.types.HookList  tail) {     if(tom_equal_term_HookList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(tom_get_head_concHook_HookList(begin),( tom.gom.adt.objects.types.HookList )tom_get_slice_concHook(tom_get_tail_concHook_HookList(begin),end,tail));     }   }    

  public OperatorTemplate(File tomHomePath,
                          List importList, 	
                          GomClass gomClass,
                          TemplateClass mapping) {
    super(gomClass,tomHomePath,importList,mapping);
    if (tom_is_sort_GomClass(gomClass)) {{  tom.gom.adt.objects.types.GomClass  tomMatch336NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.GomClass )gomClass);if (tom_is_fun_sym_OperatorClass(tomMatch336NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.ClassName  tomMatch336NameNumber_freshVar_0=tom_get_slot_OperatorClass_AbstractType(tomMatch336NameNumberfreshSubject_1);{  tom.gom.adt.objects.types.ClassName  tomMatch336NameNumber_freshVar_1=tom_get_slot_OperatorClass_ExtendsType(tomMatch336NameNumberfreshSubject_1);{  tom.gom.adt.objects.types.ClassName  tomMatch336NameNumber_freshVar_2=tom_get_slot_OperatorClass_Mapping(tomMatch336NameNumberfreshSubject_1);{  tom.gom.adt.objects.types.ClassName  tomMatch336NameNumber_freshVar_3=tom_get_slot_OperatorClass_SortName(tomMatch336NameNumberfreshSubject_1);{  tom.gom.adt.objects.types.ClassName  tomMatch336NameNumber_freshVar_4=tom_get_slot_OperatorClass_Visitor(tomMatch336NameNumberfreshSubject_1);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch336NameNumber_freshVar_5=tom_get_slot_OperatorClass_Slots(tomMatch336NameNumberfreshSubject_1);{  tom.gom.adt.objects.types.HookList  tomMatch336NameNumber_freshVar_6=tom_get_slot_OperatorClass_Hooks(tomMatch336NameNumberfreshSubject_1);if ( true ) {







        this.abstractType = tomMatch336NameNumber_freshVar_0;
        this.extendsType = tomMatch336NameNumber_freshVar_1;;
        this.sortName = tomMatch336NameNumber_freshVar_3;
        this.visitor = tomMatch336NameNumber_freshVar_4;
        this.slotList = tomMatch336NameNumber_freshVar_5;
        return;
      }}}}}}}}}}}

    throw new GomRuntimeException(
        "Bad argument for OperatorTemplate: " + gomClass);
  }

  public void generate(java.io.Writer writer) throws java.io.IOException {

writer.write(
"\npackage "/* Generated by TOM (version 2.5alpha): Do not edit this file */+getPackage()+";\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateImport()+"\nimport tom.library.sl.*;\n\npublic final class "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" extends "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(extendsType)+" implements tom.library.sl.Visitable "/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateInterface()+" {\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateBlock()+"\n  private "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"() {}\n"







);
if(slotList.length()>0) {
writer.write("\n  private int hashCode;\n  private static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" proto = new "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"();\n"


);
} else { 
writer.write("\n  private static int hashCode = hashFunction();\n  private static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" proto = ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+") factory.build(new "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"());\n"


);
}
generateMembers(writer);
generateBody(writer);
writer.write("\n}\n"

);
  }

  private void generateBody(java.io.Writer writer) throws java.io.IOException {
    writer.write("\n    /* static constructor */\n"

);
generateConstructor(writer);
if(slotList.length()>0) {
writer.write("\n  private void init("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList) + (slotList.isEmptyconcSlotField()?"":", ") +"int hashCode) {\n"

);
generateMembersInit(writer);
writer.write("\n    this.hashCode = hashCode;\n  }\n\n  private void initHashCode("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList)+") {\n"




);
generateMembersInit(writer);
writer.write("\n  this.hashCode = hashFunction();\n  }\n\n  /* name and arity */\n  public String symbolName() {\n    return \""/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"\";\n  }\n\n  private int getArity() {\n    return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+slotList.length()+";\n  }\n"











);
  } else {
writer.write("\n  private void init("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList) + (slotList.isEmptyconcSlotField()?"":", ") +"int hashCode) {\n"

);
generateMembersInit(writer);
    /* generate a specialized version for constants */
writer.write("\n  }\n  private void initHashCode("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList)+") { }\n  /* name and arity */\n  public String symbolName() {\n    return \""/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"\";\n  }\n\n  private static int getArity() {\n    return 0;\n  }\n"










);
  }

  /*
   * Generate a toStringBuffer method if the operator is not associative
   */
  if (sortName == extendsType) {
writer.write("\n  public void toStringBuffer(java.lang.StringBuffer buffer) {\n    buffer.append(\""/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"(\");\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+toStringChilds("buffer")+"\n    buffer.append(\")\");\n  }\n"





);
  }

writer.write("\n\n  /**\n    * This method implements a lexicographic order\n    */\n  public int compareToLPO(Object o) {\n    /*\n     * We do not want to compare with any object, only members of the module\n     * In case of invalid argument, throw a ClassCastException, as the java api\n     * asks for it\n     */\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(abstractType)+" ao = ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(abstractType)+") o;\n    /* return 0 for equality */\n    if (ao == this)\n      return 0;\n    /* compare the symbols */\n    int symbCmp = this.symbolName().compareTo(ao.symbolName());\n    if (symbCmp != 0)\n      return symbCmp;\n    /* compare the childs */\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+genCompareChilds("ao","compareToLPO")+"\n    throw new RuntimeException(\"Unable to compare\");\n  }\n\n  public int compareTo(Object o) {\n    /*\n     * We do not want to compare with any object, only members of the module\n     * In case of invalid argument, throw a ClassCastException, as the java api\n     * asks for it\n     */\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(abstractType)+" ao = ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(abstractType)+") o;\n    /* return 0 for equality */\n    if (ao == this)\n      return 0;\n    /* use the hash values to discriminate */\n    \n    if(this.hashCode != ao.hashCode())\n      return  (this.hashCode < ao.hashCode())?-1:1;\n\n    /* If not, compare the symbols : back to the normal order */\n    int symbCmp = this.symbolName().compareTo(ao.symbolName());\n    if (symbCmp != 0)\n      return symbCmp;\n    /* last resort: compare the childs */\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+genCompareChilds("ao","compareTo")+"\n    throw new RuntimeException(\"Unable to compare\");\n  }\n\n  /* shared.SharedObject */\n  public final int hashCode() {\n    return hashCode;\n  }\n\n  public shared.SharedObject duplicate() {\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" clone = new "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"();\n    clone.init("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childList(slotList) + (slotList.isEmptyconcSlotField()?"":", ") +"hashCode);\n    return clone;\n  }\n\n  public final boolean equivalent(shared.SharedObject obj) {\n    if(obj instanceof "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+") {\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateMembersEqualityTest("peer")+"\n    }\n    return false;\n  }\n\n  /* "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className(sortName)+" interface */\n  public boolean "/* Generated by TOM (version 2.5alpha): Do not edit this file */+isOperatorMethod(className)+"() {\n    return true;\n  }\n"





































































);
generateGetters(writer);

    writer.write("\n  /* AbstractType */\n  public aterm.ATerm toATerm() {\n    return atermFactory.makeAppl(\n      atermFactory.makeAFun(symbolName(),getArity(),false),\n      new aterm.ATerm[] {"/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateToATermChilds()+"});\n  }\n\n  public static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(sortName)+" fromTerm(aterm.ATerm trm) {\n    if(trm instanceof aterm.ATermAppl) {\n      aterm.ATermAppl appl = (aterm.ATermAppl) trm;\n      if(proto.symbolName().equals(appl.getName())) {\n        return make(\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+generatefromATermChilds("appl")+"\n        );\n      }\n    }\n    return null;\n  }\n\n"



















);

    writer.write("\n  /* Visitable */\n  public int getChildCount() {\n    return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinChildCount()+";\n  }\n\n  public Visitable getChildAt(int index) {\n    switch(index) {\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinsGetCases()+"\n      default: throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public Visitable setChildAt(int index, Visitable v) {\n    switch(index) {\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinMakeCases("v")+"\n      default: throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public Visitable setChildren(Visitable[] childs) {\n    if (childs.length == "/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinChildCount()+") {\n      return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinArrayMake("childs")+";\n    } else {\n      throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public Visitable[] getChildren() {\n    return new Visitable[] { "/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinChildList(slotList)+" };\n  }\n"






























);

    writer.write("\n    /* internal use */\n  protected "/* Generated by TOM (version 2.5alpha): Do not edit this file */+((slotList.length()==0)?"static":"")+" int hashFunction() {\n    int a, b, c;\n    /* Set up the internal state */\n    a = 0x9e3779b9; /* the golden ratio; an arbitrary value */\n    b = ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+shared.HashFunctions.stringHashFunction(fullClassName(),slotList.length())+"<<8);\n    c = getArity();\n    /* -------------------------------------- handle most of the key */\n    /* ------------------------------------ handle the last 11 bytes */\n"









);
generateHashArgs(writer);
writer.write("\n    a -= b; a -= c; a ^= (c >> 13);\n    b -= c; b -= a; b ^= (a << 8);\n    c -= a; c -= b; c ^= (b >> 13);\n    a -= b; a -= c; a ^= (c >> 12);\n    b -= c; b -= a; b ^= (a << 16);\n    c -= a; c -= b; c ^= (b >> 5);\n    a -= b; a -= c; a ^= (c >> 3);\n    b -= c; b -= a; b ^= (a << 10);\n    c -= a; c -= b; c ^= (b >> 15);\n    /* ------------------------------------------- report the result */\n    return c;\n  }\n"












);
  }

  private void generateMembers(java.io.Writer writer) throws java.io.IOException {
    if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch337NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch337NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch337NameNumber_freshVar_0=tomMatch337NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch337NameNumber_begin_2=tomMatch337NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch337NameNumber_end_3=tomMatch337NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch337NameNumber_freshVar_1=tomMatch337NameNumber_end_3;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch337NameNumber_freshVar_1))) {if (tom_is_fun_sym_SlotField(tom_get_head_concSlotField_SlotFieldList(tomMatch337NameNumber_freshVar_1))) {{  String  tomMatch337NameNumber_freshVar_6=tom_get_slot_SlotField_Name(tom_get_head_concSlotField_SlotFieldList(tomMatch337NameNumber_freshVar_1));{  tom.gom.adt.objects.types.ClassName  tomMatch337NameNumber_freshVar_7=tom_get_slot_SlotField_Domain(tom_get_head_concSlotField_SlotFieldList(tomMatch337NameNumber_freshVar_1));{  tom.gom.adt.objects.types.SlotFieldList  tomMatch337NameNumber_freshVar_4=tom_get_tail_concSlotField_SlotFieldList(tomMatch337NameNumber_freshVar_1);if ( true ) {

        writer.write("  private ");
        writer.write(fullClassName(tomMatch337NameNumber_freshVar_7));
        writer.write(" ");
        writer.write(fieldName(tomMatch337NameNumber_freshVar_6));
        writer.write(";\n");
      }}}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch337NameNumber_end_3)) {tomMatch337NameNumber_end_3=tomMatch337NameNumber_begin_2;} else {tomMatch337NameNumber_end_3=tom_get_tail_concSlotField_SlotFieldList(tomMatch337NameNumber_end_3);}}} while(!(tom_equal_term_SlotFieldList(tomMatch337NameNumber_end_3, tomMatch337NameNumber_begin_2)));}}}}}}

  }

  private void generateMembersInit(java.io.Writer writer) throws java.io.IOException {
    if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch338NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch338NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch338NameNumber_freshVar_0=tomMatch338NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch338NameNumber_begin_2=tomMatch338NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch338NameNumber_end_3=tomMatch338NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch338NameNumber_freshVar_1=tomMatch338NameNumber_end_3;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch338NameNumber_freshVar_1))) {if (tom_is_fun_sym_SlotField(tom_get_head_concSlotField_SlotFieldList(tomMatch338NameNumber_freshVar_1))) {{  String  tomMatch338NameNumber_freshVar_6=tom_get_slot_SlotField_Name(tom_get_head_concSlotField_SlotFieldList(tomMatch338NameNumber_freshVar_1));{  tom.gom.adt.objects.types.ClassName  tomMatch338NameNumber_freshVar_7=tom_get_slot_SlotField_Domain(tom_get_head_concSlotField_SlotFieldList(tomMatch338NameNumber_freshVar_1));{  String  tom_fieldName=tomMatch338NameNumber_freshVar_6;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch338NameNumber_freshVar_7;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch338NameNumber_freshVar_4=tom_get_tail_concSlotField_SlotFieldList(tomMatch338NameNumber_freshVar_1);if ( true ) {

        writer.write("    this.");
        writer.write(fieldName(tom_fieldName));
        writer.write(" = ");
        writer.write(fieldName(tom_fieldName));
        if (GomEnvironment.getInstance().isBuiltinClass(tom_domain) && tom_domain.equals(tom_make_ClassName("","String"))) {
          writer.write(".intern()");
        }
        writer.write(";\n");
      }}}}}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch338NameNumber_end_3)) {tomMatch338NameNumber_end_3=tomMatch338NameNumber_begin_2;} else {tomMatch338NameNumber_end_3=tom_get_tail_concSlotField_SlotFieldList(tomMatch338NameNumber_end_3);}}} while(!(tom_equal_term_SlotFieldList(tomMatch338NameNumber_end_3, tomMatch338NameNumber_begin_2)));}}}}}}

  }

  private void generateGetters(java.io.Writer writer) throws java.io.IOException {
    SlotFieldList slots = slotList;
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
      writer.write("\n  public "/* Generated by TOM (version 2.5alpha): Do not edit this file */+slotDomain(head)+" "/* Generated by TOM (version 2.5alpha): Do not edit this file */+getMethod(head)+"() {\n    return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(head.getName())+";\n  }\n      \n  public "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(sortName)+" "/* Generated by TOM (version 2.5alpha): Do not edit this file */+setMethod(head)+"("/* Generated by TOM (version 2.5alpha): Do not edit this file */+slotDomain(head)+" set_arg) {\n    return make("/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateMakeArgsFor(head,"set_arg")+");\n  }"






);
    }
  }

  private String generateToATermChilds() {
    StringBuffer res = new StringBuffer();
    SlotFieldList slots = slotList;
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
      if (res.length()!=0) {
        res.append(", ");
      }
      toATermSlotField(res,head);
    }
    return res.toString();
  }

  private String generatefromATermChilds(String appl) {
    StringBuffer res = new StringBuffer();
    int index = 0;
    SlotFieldList slots = slotList;
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
      if (res.length()!=0) {
        res.append(", ");
      }
      fromATermSlotField(res,head, appl+".getArgument("+index+")");
      index++;
    }
    return res.toString();
  }

  private String fieldName(String fieldName) {
    return "_"+fieldName;
  }

  private String childListWithType(SlotFieldList slots) {
    StringBuffer res = new StringBuffer();
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
      if (tom_is_sort_SlotField(head)) {{  tom.gom.adt.objects.types.SlotField  tomMatch339NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotField )head);if (tom_is_fun_sym_SlotField(tomMatch339NameNumberfreshSubject_1)) {{  String  tomMatch339NameNumber_freshVar_0=tom_get_slot_SlotField_Name(tomMatch339NameNumberfreshSubject_1);{  tom.gom.adt.objects.types.ClassName  tomMatch339NameNumber_freshVar_1=tom_get_slot_SlotField_Domain(tomMatch339NameNumberfreshSubject_1);if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(fullClassName(tomMatch339NameNumber_freshVar_1));
          res.append(" ");
          res.append(fieldName(tomMatch339NameNumber_freshVar_0));
        }}}}}}

    }
    return res.toString();
  }
  private String unprotectedChildListWithType(SlotFieldList slots) {
    StringBuffer res = new StringBuffer();
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
      if (tom_is_sort_SlotField(head)) {{  tom.gom.adt.objects.types.SlotField  tomMatch340NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotField )head);if (tom_is_fun_sym_SlotField(tomMatch340NameNumberfreshSubject_1)) {{  String  tomMatch340NameNumber_freshVar_0=tom_get_slot_SlotField_Name(tomMatch340NameNumberfreshSubject_1);{  tom.gom.adt.objects.types.ClassName  tomMatch340NameNumber_freshVar_1=tom_get_slot_SlotField_Domain(tomMatch340NameNumberfreshSubject_1);if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(fullClassName(tomMatch340NameNumber_freshVar_1));
          res.append(" ");
          res.append(tomMatch340NameNumber_freshVar_0);
        }}}}}}

    }
    return res.toString();
  }
  private String childList(SlotFieldList slots) {
    StringBuffer res = new StringBuffer();
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
      if (tom_is_sort_SlotField(head)) {{  tom.gom.adt.objects.types.SlotField  tomMatch341NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotField )head);if (tom_is_fun_sym_SlotField(tomMatch341NameNumberfreshSubject_1)) {{  String  tomMatch341NameNumber_freshVar_0=tom_get_slot_SlotField_Name(tomMatch341NameNumberfreshSubject_1);if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
          res.append(fieldName(tomMatch341NameNumber_freshVar_0));
        }}}}}

    }
    return res.toString();
  }
  private String unprotectedChildList(SlotFieldList slots) {
    StringBuffer res = new StringBuffer();
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
      if (tom_is_sort_SlotField(head)) {{  tom.gom.adt.objects.types.SlotField  tomMatch342NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotField )head);if (tom_is_fun_sym_SlotField(tomMatch342NameNumberfreshSubject_1)) {{  String  tomMatch342NameNumber_freshVar_0=tom_get_slot_SlotField_Name(tomMatch342NameNumberfreshSubject_1);if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
          res.append(tomMatch342NameNumber_freshVar_0);
        }}}}}

    }
    return res.toString();
  }
  private String generateMembersEqualityTest(String peer) {
    StringBuffer res = new StringBuffer();
    if(!slotList.isEmptyconcSlotField()) {
      res.append("\n      "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" peer = ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+") obj;"
);;
    }
    res.append("\n      return "
);
    if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch343NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch343NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch343NameNumber_freshVar_0=tomMatch343NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch343NameNumber_begin_2=tomMatch343NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch343NameNumber_end_3=tomMatch343NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch343NameNumber_freshVar_1=tomMatch343NameNumber_end_3;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch343NameNumber_freshVar_1))) {if (tom_is_fun_sym_SlotField(tom_get_head_concSlotField_SlotFieldList(tomMatch343NameNumber_freshVar_1))) {{  String  tomMatch343NameNumber_freshVar_6=tom_get_slot_SlotField_Name(tom_get_head_concSlotField_SlotFieldList(tomMatch343NameNumber_freshVar_1));{  String  tom_fieldName=tomMatch343NameNumber_freshVar_6;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch343NameNumber_freshVar_4=tom_get_tail_concSlotField_SlotFieldList(tomMatch343NameNumber_freshVar_1);if ( true ) {

        res.append(fieldName(tom_fieldName));
        res.append("==");
        res.append(peer);
        res.append(".");
        res.append(fieldName(tom_fieldName));
        res.append(" && ");
      }}}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch343NameNumber_end_3)) {tomMatch343NameNumber_end_3=tomMatch343NameNumber_begin_2;} else {tomMatch343NameNumber_end_3=tom_get_tail_concSlotField_SlotFieldList(tomMatch343NameNumber_end_3);}}} while(!(tom_equal_term_SlotFieldList(tomMatch343NameNumber_end_3, tomMatch343NameNumber_begin_2)));}}}}}}

    res.append("true;"); // to handle the "no childs" case
    return res.toString();
  }
  private int nonBuiltinChildCount() {
    int count = 0;
    //in case of reference, paths are considered as constants
    //to avoid traversal inside a path
    //TODO: in the future Gom replace this code by a hook
    if(className().equals("Conspath"+sortName.getName())) return count;
    if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch344NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch344NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch344NameNumber_freshVar_0=tomMatch344NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch344NameNumber_begin_2=tomMatch344NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch344NameNumber_end_3=tomMatch344NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch344NameNumber_freshVar_1=tomMatch344NameNumber_end_3;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch344NameNumber_freshVar_1))) {if (tom_is_fun_sym_SlotField(tom_get_head_concSlotField_SlotFieldList(tomMatch344NameNumber_freshVar_1))) {{  tom.gom.adt.objects.types.ClassName  tomMatch344NameNumber_freshVar_6=tom_get_slot_SlotField_Domain(tom_get_head_concSlotField_SlotFieldList(tomMatch344NameNumber_freshVar_1));{  tom.gom.adt.objects.types.SlotFieldList  tomMatch344NameNumber_freshVar_4=tom_get_tail_concSlotField_SlotFieldList(tomMatch344NameNumber_freshVar_1);if ( true ) {

        if (!GomEnvironment.getInstance().isBuiltinClass(tomMatch344NameNumber_freshVar_6)) {
          count++;
        }
      }}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch344NameNumber_end_3)) {tomMatch344NameNumber_end_3=tomMatch344NameNumber_begin_2;} else {tomMatch344NameNumber_end_3=tom_get_tail_concSlotField_SlotFieldList(tomMatch344NameNumber_end_3);}}} while(!(tom_equal_term_SlotFieldList(tomMatch344NameNumber_end_3, tomMatch344NameNumber_begin_2)));}}}}}}

    return count;
  }

  private String nonBuiltinsGetCases() {
    StringBuffer res = new StringBuffer();
    int index = 0;
    if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch345NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch345NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch345NameNumber_freshVar_0=tomMatch345NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch345NameNumber_begin_2=tomMatch345NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch345NameNumber_end_3=tomMatch345NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch345NameNumber_freshVar_1=tomMatch345NameNumber_end_3;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch345NameNumber_freshVar_1))) {if (tom_is_fun_sym_SlotField(tom_get_head_concSlotField_SlotFieldList(tomMatch345NameNumber_freshVar_1))) {{  String  tomMatch345NameNumber_freshVar_6=tom_get_slot_SlotField_Name(tom_get_head_concSlotField_SlotFieldList(tomMatch345NameNumber_freshVar_1));{  tom.gom.adt.objects.types.ClassName  tomMatch345NameNumber_freshVar_7=tom_get_slot_SlotField_Domain(tom_get_head_concSlotField_SlotFieldList(tomMatch345NameNumber_freshVar_1));{  tom.gom.adt.objects.types.SlotFieldList  tomMatch345NameNumber_freshVar_4=tom_get_tail_concSlotField_SlotFieldList(tomMatch345NameNumber_freshVar_1);if ( true ) {

        if (!GomEnvironment.getInstance().isBuiltinClass(tomMatch345NameNumber_freshVar_7)) {
          res.append("      case ");
          res.append(index);
          res.append(": return ");
          res.append(fieldName(tomMatch345NameNumber_freshVar_6));
          res.append(";\n");
          index++;
        }
      }}}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch345NameNumber_end_3)) {tomMatch345NameNumber_end_3=tomMatch345NameNumber_begin_2;} else {tomMatch345NameNumber_end_3=tom_get_tail_concSlotField_SlotFieldList(tomMatch345NameNumber_end_3);}}} while(!(tom_equal_term_SlotFieldList(tomMatch345NameNumber_end_3, tomMatch345NameNumber_begin_2)));}}}}}}

    return res.toString();
  }

  private String nonBuiltinChildList(SlotFieldList slots) {
    StringBuffer res = new StringBuffer();
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
      if (tom_is_sort_SlotField(head)) {{  tom.gom.adt.objects.types.SlotField  tomMatch346NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotField )head);if (tom_is_fun_sym_SlotField(tomMatch346NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.ClassName  tomMatch346NameNumber_freshVar_0=tom_get_slot_SlotField_Domain(tomMatch346NameNumberfreshSubject_1);{  String  tomMatch346NameNumber_freshVar_1=tom_get_slot_SlotField_Name(tomMatch346NameNumberfreshSubject_1);if ( true ) {

        if (!GomEnvironment.getInstance().isBuiltinClass(tomMatch346NameNumber_freshVar_0)) {
          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
          res.append(fieldName(tomMatch346NameNumber_freshVar_1));
        }
        }}}}}}

    }
    return res.toString();
  }

  private String nonBuiltinArrayMake(String arrayName) {
    StringBuffer res = new StringBuffer("make(");
    int index = 0;
    int fullindex = 0;
    if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch347NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch347NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch347NameNumber_freshVar_2=tomMatch347NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch347NameNumber_begin_4=tomMatch347NameNumber_freshVar_2;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch347NameNumber_end_5=tomMatch347NameNumber_freshVar_2;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch347NameNumber_freshVar_3=tomMatch347NameNumber_end_5;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch347NameNumber_freshVar_3))) {{  tom.gom.adt.objects.types.SlotField  tomMatch347NameNumber_freshVar_0=tom_get_head_concSlotField_SlotFieldList(tomMatch347NameNumber_freshVar_3);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch347NameNumber_freshVar_6=tom_get_tail_concSlotField_SlotFieldList(tomMatch347NameNumber_freshVar_3);if (tom_is_fun_sym_SlotField(tomMatch347NameNumber_freshVar_0)) {{  tom.gom.adt.objects.types.ClassName  tomMatch347NameNumber_freshVar_1=tom_get_slot_SlotField_Domain(tomMatch347NameNumber_freshVar_0);{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch347NameNumber_freshVar_1;if ( true ) {

        if(fullindex>0) { res.append(", "); }
        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          res.append("(");
          res.append(fullClassName(tom_domain));
          res.append(") ");
          res.append(arrayName);
          res.append("[");
          res.append(index);
          res.append("]");
          index++;
        } else {
          res.append(getMethod(tomMatch347NameNumber_freshVar_0));
          res.append("()");
        }
        fullindex++;
      }}}}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch347NameNumber_end_5)) {tomMatch347NameNumber_end_5=tomMatch347NameNumber_begin_4;} else {tomMatch347NameNumber_end_5=tom_get_tail_concSlotField_SlotFieldList(tomMatch347NameNumber_end_5);}}} while(!(tom_equal_term_SlotFieldList(tomMatch347NameNumber_end_5, tomMatch347NameNumber_begin_4)));}}}}}}

    res.append(")");
    return res.toString();
  }
  private String nonBuiltinMakeCases(String argName) {
    StringBuffer res = new StringBuffer();
    int index = 0;
    if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch348NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch348NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch348NameNumber_freshVar_0=tomMatch348NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch348NameNumber_begin_2=tomMatch348NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch348NameNumber_end_3=tomMatch348NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch348NameNumber_freshVar_1=tomMatch348NameNumber_end_3;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch348NameNumber_freshVar_1))) {if (tom_is_fun_sym_SlotField(tom_get_head_concSlotField_SlotFieldList(tomMatch348NameNumber_freshVar_1))) {{  tom.gom.adt.objects.types.ClassName  tomMatch348NameNumber_freshVar_6=tom_get_slot_SlotField_Domain(tom_get_head_concSlotField_SlotFieldList(tomMatch348NameNumber_freshVar_1));{  tom.gom.adt.objects.types.SlotFieldList  tomMatch348NameNumber_freshVar_4=tom_get_tail_concSlotField_SlotFieldList(tomMatch348NameNumber_freshVar_1);if ( true ) {

        if (!GomEnvironment.getInstance().isBuiltinClass(tomMatch348NameNumber_freshVar_6)) {
          res.append("      case "+index+": return make("+generateMakeArgsFor(index, argName)+");\n");
          index++;
        }
      }}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch348NameNumber_end_3)) {tomMatch348NameNumber_end_3=tomMatch348NameNumber_begin_2;} else {tomMatch348NameNumber_end_3=tom_get_tail_concSlotField_SlotFieldList(tomMatch348NameNumber_end_3);}}} while(!(tom_equal_term_SlotFieldList(tomMatch348NameNumber_end_3, tomMatch348NameNumber_begin_2)));}}}}}}

    return res.toString();
  }
  private String generateMakeArgsFor(int argIndex, String argName) {
    StringBuffer res = new StringBuffer();
    int index = 0;
    int fullindex = 0;
    if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch349NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch349NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch349NameNumber_freshVar_3=tomMatch349NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch349NameNumber_begin_5=tomMatch349NameNumber_freshVar_3;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch349NameNumber_end_6=tomMatch349NameNumber_freshVar_3;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch349NameNumber_freshVar_4=tomMatch349NameNumber_end_6;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch349NameNumber_freshVar_4))) {{  tom.gom.adt.objects.types.SlotField  tomMatch349NameNumber_freshVar_0=tom_get_head_concSlotField_SlotFieldList(tomMatch349NameNumber_freshVar_4);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch349NameNumber_freshVar_7=tom_get_tail_concSlotField_SlotFieldList(tomMatch349NameNumber_freshVar_4);if (tom_is_fun_sym_SlotField(tomMatch349NameNumber_freshVar_0)) {{  String  tomMatch349NameNumber_freshVar_1=tom_get_slot_SlotField_Name(tomMatch349NameNumber_freshVar_0);{  tom.gom.adt.objects.types.ClassName  tomMatch349NameNumber_freshVar_2=tom_get_slot_SlotField_Domain(tomMatch349NameNumber_freshVar_0);{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch349NameNumber_freshVar_2;if ( true ) {

        if(fullindex>0) { res.append(", "); }
        if (GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          res.append(getMethod(tomMatch349NameNumber_freshVar_0));
          res.append("()");
        } else {
          if (index != argIndex) {
            res.append(fieldName(tomMatch349NameNumber_freshVar_1));
          } else {
            res.append("(");
            res.append(fullClassName(tom_domain));
            res.append(") ");
            res.append(argName);
          }
          index++;
        }
        fullindex++;
      }}}}}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch349NameNumber_end_6)) {tomMatch349NameNumber_end_6=tomMatch349NameNumber_begin_5;} else {tomMatch349NameNumber_end_6=tom_get_tail_concSlotField_SlotFieldList(tomMatch349NameNumber_end_6);}}} while(!(tom_equal_term_SlotFieldList(tomMatch349NameNumber_end_6, tomMatch349NameNumber_begin_5)));}}}}}}

    return res.toString();
  }
  private String generateMakeArgsFor(SlotField slot, String argName) {
    StringBuffer res = new StringBuffer();
    int fullindex = 0;
    if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch350NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch350NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch350NameNumber_freshVar_3=tomMatch350NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch350NameNumber_begin_5=tomMatch350NameNumber_freshVar_3;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch350NameNumber_end_6=tomMatch350NameNumber_freshVar_3;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch350NameNumber_freshVar_4=tomMatch350NameNumber_end_6;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch350NameNumber_freshVar_4))) {{  tom.gom.adt.objects.types.SlotField  tomMatch350NameNumber_freshVar_0=tom_get_head_concSlotField_SlotFieldList(tomMatch350NameNumber_freshVar_4);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch350NameNumber_freshVar_7=tom_get_tail_concSlotField_SlotFieldList(tomMatch350NameNumber_freshVar_4);if (tom_is_fun_sym_SlotField(tomMatch350NameNumber_freshVar_0)) {{  String  tomMatch350NameNumber_freshVar_1=tom_get_slot_SlotField_Name(tomMatch350NameNumber_freshVar_0);{  tom.gom.adt.objects.types.ClassName  tomMatch350NameNumber_freshVar_2=tom_get_slot_SlotField_Domain(tomMatch350NameNumber_freshVar_0);if ( true ) {

        if(fullindex>0) { res.append(", "); }
        if (tomMatch350NameNumber_freshVar_0== slot) {
          res.append(argName);
        } else {
          res.append(fieldName(tomMatch350NameNumber_freshVar_1));
        }
        fullindex++;
      }}}}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch350NameNumber_end_6)) {tomMatch350NameNumber_end_6=tomMatch350NameNumber_begin_5;} else {tomMatch350NameNumber_end_6=tom_get_tail_concSlotField_SlotFieldList(tomMatch350NameNumber_end_6);}}} while(!(tom_equal_term_SlotFieldList(tomMatch350NameNumber_end_6, tomMatch350NameNumber_begin_5)));}}}}}}

    return res.toString();
  }

  private String toStringChilds(String buffer) {
    if (0 == slotList.length()) {
      return "";
    }
    StringBuffer res = new StringBuffer();
    SlotFieldList slots = slotList;
		while(!slots.isEmptyconcSlotField()) {
			if(res.length()!=0) {
				res.append(""/* Generated by TOM (version 2.5alpha): Do not edit this file */+buffer+".append(\",\");\n    "
);
			}
			SlotField head = slots.getHeadconcSlotField();
			slots = slots.getTailconcSlotField();
      toStringSlotField(res, head, fieldName(head.getName()), buffer);
		}
    return res.toString();
  }

  private String genCompareChilds(String oldOther, String compareFun) {
    StringBuffer res = new StringBuffer();
    String other = "tco";
    if(!slotList.isEmptyconcSlotField()) {
    res.append(""/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" "/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+" = ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+") "/* Generated by TOM (version 2.5alpha): Do not edit this file */+oldOther+";");
    }
    if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch351NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch351NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch351NameNumber_freshVar_0=tomMatch351NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch351NameNumber_begin_2=tomMatch351NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch351NameNumber_end_3=tomMatch351NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch351NameNumber_freshVar_1=tomMatch351NameNumber_end_3;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch351NameNumber_freshVar_1))) {if (tom_is_fun_sym_SlotField(tom_get_head_concSlotField_SlotFieldList(tomMatch351NameNumber_freshVar_1))) {{  String  tomMatch351NameNumber_freshVar_6=tom_get_slot_SlotField_Name(tom_get_head_concSlotField_SlotFieldList(tomMatch351NameNumber_freshVar_1));{  tom.gom.adt.objects.types.ClassName  tomMatch351NameNumber_freshVar_7=tom_get_slot_SlotField_Domain(tom_get_head_concSlotField_SlotFieldList(tomMatch351NameNumber_freshVar_1));{  String  tom_slotName=tomMatch351NameNumber_freshVar_6;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch351NameNumber_freshVar_7;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch351NameNumber_freshVar_4=tom_get_tail_concSlotField_SlotFieldList(tomMatch351NameNumber_freshVar_1);if ( true ) {

        if (GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
         if (tom_domain.equals(tom_make_ClassName("","int"))
             || tom_domain.equals(tom_make_ClassName("","long"))
             || tom_domain.equals(tom_make_ClassName("","double"))
             || tom_domain.equals(tom_make_ClassName("","float"))
             || tom_domain.equals(tom_make_ClassName("","char"))) { 
           res.append("\n    if( this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+" != "/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+")\n      return (this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+" < "/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+")?-1:1;\n"


);
         } else if (tom_domain.equals(tom_make_ClassName("","boolean"))) {
           res.append("\n    if( this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+" != "/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+")\n      return (!this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+" && "/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+")?-1:1;\n"


);
         } else if (tom_domain.equals(tom_make_ClassName("","String"))) {
           res.append("\n    int "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp = (this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+").compareTo("/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+");\n    if("/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n             \n"




);
         } else if (tom_domain.equals(tom_make_ClassName("aterm","ATerm"))
             ||tom_domain.equals(tom_make_ClassName("aterm","ATermList"))) {
           res.append("\n    /* Inefficient total order on ATerm */\n    int "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp = ((this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+").toString()).compareTo(("/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+").toString());\n    if("/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n"




);
         } else {
            throw new GomRuntimeException("Builtin "+tom_domain+" not supported");
         }
        } else {
          res.append("\n    int "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp = (this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+")."/* Generated by TOM (version 2.5alpha): Do not edit this file */+compareFun+"("/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+");\n    if("/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n"



); 
        }
      }}}}}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch351NameNumber_end_3)) {tomMatch351NameNumber_end_3=tomMatch351NameNumber_begin_2;} else {tomMatch351NameNumber_end_3=tom_get_tail_concSlotField_SlotFieldList(tomMatch351NameNumber_end_3);}}} while(!(tom_equal_term_SlotFieldList(tomMatch351NameNumber_end_3, tomMatch351NameNumber_begin_2)));}}}}}}

    return res.toString();
  }

  private void generateHashArgs(java.io.Writer writer) throws java.io.IOException {
    int index = slotList.length() - 1;
    if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch352NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch352NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch352NameNumber_freshVar_0=tomMatch352NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch352NameNumber_begin_2=tomMatch352NameNumber_freshVar_0;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch352NameNumber_end_3=tomMatch352NameNumber_freshVar_0;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch352NameNumber_freshVar_1=tomMatch352NameNumber_end_3;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch352NameNumber_freshVar_1))) {if (tom_is_fun_sym_SlotField(tom_get_head_concSlotField_SlotFieldList(tomMatch352NameNumber_freshVar_1))) {{  String  tomMatch352NameNumber_freshVar_6=tom_get_slot_SlotField_Name(tom_get_head_concSlotField_SlotFieldList(tomMatch352NameNumber_freshVar_1));{  tom.gom.adt.objects.types.ClassName  tomMatch352NameNumber_freshVar_7=tom_get_slot_SlotField_Domain(tom_get_head_concSlotField_SlotFieldList(tomMatch352NameNumber_freshVar_1));{  String  tom_slotName=tomMatch352NameNumber_freshVar_6;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch352NameNumber_freshVar_7;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch352NameNumber_freshVar_4=tom_get_tail_concSlotField_SlotFieldList(tomMatch352NameNumber_freshVar_1);if ( true ) {

        int shift = (index % 4) * 8;
        String accum = ""+"aaaabbbbcccc".toCharArray()[index % 12];
        writer.write("    "+accum+" += (");
        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          writer.write(fieldName(tom_slotName)+".hashCode()");
        } else {
          if (tom_domain.equals(tom_make_ClassName("","int"))
              || tom_domain.equals(tom_make_ClassName("","long"))
              || tom_domain.equals(tom_make_ClassName("","double"))
              || tom_domain.equals(tom_make_ClassName("","float"))
              || tom_domain.equals(tom_make_ClassName("","char"))) {
            writer.write(fieldName(tom_slotName));
          } else if (tom_domain.equals(tom_make_ClassName("","boolean"))) {
            writer.write("("+fieldName(tom_slotName)+"?1:0)");
          } else if (tom_domain.equals(tom_make_ClassName("","String"))) {
            // Use the string hashFunction for Strings, and pass index as arity
            writer.write("shared.HashFunctions.stringHashFunction("+fieldName(tom_slotName)+", "+index+")");
          } else if (tom_domain.equals(tom_make_ClassName("aterm","ATerm"))||tom_domain.equals(tom_make_ClassName("aterm","ATermList"))) {
            // Use the string hashFunction for Strings, and pass index as arity
            writer.write(fieldName(tom_slotName)+".hashCode()");
          }  else {
            throw new GomRuntimeException("generateHashArgs: Builtin " + tom_domain+ " not supported");
          }
        }
        if (shift!=0) { writer.write(" << "+(shift)); }
        writer.write(");\n");
        index--;
      }}}}}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch352NameNumber_end_3)) {tomMatch352NameNumber_end_3=tomMatch352NameNumber_begin_2;} else {tomMatch352NameNumber_end_3=tom_get_tail_concSlotField_SlotFieldList(tomMatch352NameNumber_end_3);}}} while(!(tom_equal_term_SlotFieldList(tomMatch352NameNumber_end_3, tomMatch352NameNumber_begin_2)));}}}}}}

  }

  public void generateConstructor(java.io.Writer writer)
    throws java.io.IOException {

    if (tom_is_sort_HookList(hooks)) {{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.HookList )hooks);{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumber_freshVar_0=tomMatch353NameNumberfreshSubject_1;{ boolean tomMatch353NameNumber_freshVar_7= false ;if (tom_is_fun_sym_concHook(tomMatch353NameNumber_freshVar_0)) {{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumber_freshVar_1=tomMatch353NameNumber_freshVar_0;{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumber_begin_3=tomMatch353NameNumber_freshVar_1;{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumber_end_4=tomMatch353NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumber_freshVar_2=tomMatch353NameNumber_end_4;if (!(tom_is_empty_concHook_HookList(tomMatch353NameNumber_freshVar_2))) {if (tom_is_fun_sym_MakeHook(tom_get_head_concHook_HookList(tomMatch353NameNumber_freshVar_2))) {{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumber_freshVar_5=tom_get_tail_concHook_HookList(tomMatch353NameNumber_freshVar_2);tomMatch353NameNumber_freshVar_7= true ;}}}}if (tom_is_empty_concHook_HookList(tomMatch353NameNumber_end_4)) {tomMatch353NameNumber_end_4=tomMatch353NameNumber_begin_3;} else {tomMatch353NameNumber_end_4=tom_get_tail_concHook_HookList(tomMatch353NameNumber_end_4);}}} while(!(tom_equal_term_HookList(tomMatch353NameNumber_end_4, tomMatch353NameNumber_begin_3)));}}}}if ((tomMatch353NameNumber_freshVar_7 ==  false )) {if ( true ) {


        if(slotList.length()>0) {
        writer.write("\n    public static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" make("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList)+") {\n      proto.initHashCode("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childList(slotList)+");\n      return ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+") factory.build(proto);\n    }\n  "




);
        } else {
        writer.write("\n    public static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" make("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList)+") {\n      return proto;\n    }\n  "



);
        }
      }}}}lbl: {if (tom_is_fun_sym_concHook(tomMatch353NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumber_freshVar_8=tomMatch353NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumber_begin_10=tomMatch353NameNumber_freshVar_8;{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumber_end_11=tomMatch353NameNumber_freshVar_8;do {{{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumber_freshVar_9=tomMatch353NameNumber_end_11;if (!(tom_is_empty_concHook_HookList(tomMatch353NameNumber_freshVar_9))) {if (tom_is_fun_sym_MakeHook(tom_get_head_concHook_HookList(tomMatch353NameNumber_freshVar_9))) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch353NameNumber_freshVar_14=tom_get_slot_MakeHook_HookArguments(tom_get_head_concHook_HookList(tomMatch353NameNumber_freshVar_9));{  tom.gom.adt.objects.types.HookList  tomMatch353NameNumber_freshVar_12=tom_get_tail_concHook_HookList(tomMatch353NameNumber_freshVar_9);if ( true ) {



        if(slotList.length()>0) {
        writer.write("\n    private static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" realMake("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList)+") {\n      proto.initHashCode("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childList(slotList)+");\n      return ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+") factory.build(proto);\n    }\n  "




);
      } else {
        writer.write("\n    public static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" realMake("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList)+") {\n      return proto;\n    }\n  "



);
      }
        writer.write("\n    public static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(sortName)+" make("/* Generated by TOM (version 2.5alpha): Do not edit this file */+unprotectedChildListWithType(tomMatch353NameNumber_freshVar_14)+") {\n  "

);
        SlotFieldList bargs = generateMakeHooks(hooks,null,writer);
        writer.write("\n      return realMake("/* Generated by TOM (version 2.5alpha): Do not edit this file */+unprotectedChildList(bargs)+");\n    }\n  "


);
        mapping.generate(writer); 
        break lbl;
      }}}}}}if (tom_is_empty_concHook_HookList(tomMatch353NameNumber_end_11)) {tomMatch353NameNumber_end_11=tomMatch353NameNumber_begin_10;} else {tomMatch353NameNumber_end_11=tom_get_tail_concHook_HookList(tomMatch353NameNumber_end_11);}}} while(!(tom_equal_term_HookList(tomMatch353NameNumber_end_11, tomMatch353NameNumber_begin_10)));}}}}}}}

  }

  public SlotFieldList generateMakeHooks(
      HookList other,
      SlotFieldList oArgs, /* will be null if it is the first hook */
      java.io.Writer writer)
    throws java.io.IOException {
    if (tom_is_sort_HookList(other)) {{  tom.gom.adt.objects.types.HookList  tomMatch354NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.HookList )other);if (tom_is_fun_sym_concHook(tomMatch354NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.HookList  tomMatch354NameNumber_freshVar_0=tomMatch354NameNumberfreshSubject_1;if (!(tom_is_empty_concHook_HookList(tomMatch354NameNumber_freshVar_0))) {{  tom.gom.adt.objects.types.Hook  tomMatch354NameNumber_freshVar_13=tom_get_head_concHook_HookList(tomMatch354NameNumber_freshVar_0);{  tom.gom.adt.objects.types.HookList  tomMatch354NameNumber_freshVar_1=tom_get_tail_concHook_HookList(tomMatch354NameNumber_freshVar_0);{ boolean tomMatch354NameNumber_freshVar_26= false ;if (tom_is_fun_sym_MakeHook(tomMatch354NameNumber_freshVar_13)) {tomMatch354NameNumber_freshVar_26= true ;}if ((tomMatch354NameNumber_freshVar_26 ==  false )) {if ( true ) {

        /* skip non Make hooks */
        return generateMakeHooks(tomMatch354NameNumber_freshVar_1, oArgs, writer);
      }}}}}}}}if (tom_is_fun_sym_concHook(tomMatch354NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.HookList  tomMatch354NameNumber_freshVar_27=tomMatch354NameNumberfreshSubject_1;if (!(tom_is_empty_concHook_HookList(tomMatch354NameNumber_freshVar_27))) {if (tom_is_fun_sym_MakeHook(tom_get_head_concHook_HookList(tomMatch354NameNumber_freshVar_27))) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch354NameNumber_freshVar_40=tom_get_slot_MakeHook_HookArguments(tom_get_head_concHook_HookList(tomMatch354NameNumber_freshVar_27));{  tom.gom.adt.code.types.Code  tomMatch354NameNumber_freshVar_41=tom_get_slot_MakeHook_Code(tom_get_head_concHook_HookList(tomMatch354NameNumber_freshVar_27));{  tom.gom.adt.objects.types.SlotFieldList  tom_args=tomMatch354NameNumber_freshVar_40;{  tom.gom.adt.objects.types.HookList  tomMatch354NameNumber_freshVar_28=tom_get_tail_concHook_HookList(tomMatch354NameNumber_freshVar_27);if ( true ) {

        /* Rename the previous arguments according to new, if needed */
        if(oArgs != null && oArgs != tom_args) {
          recVarNameRemap(oArgs,tom_args, writer);
        }
        /* Make sure we defeat java dead code detection */
        writer.write("if (true) {");
        CodeGen.generateCode(tomMatch354NameNumber_freshVar_41,writer);
        writer.write("}");
        return generateMakeHooks(tomMatch354NameNumber_freshVar_28, tom_args, writer);
      }}}}}}}}}}}

    return oArgs;
  }

  private void recVarNameRemap(
      SlotFieldList oargs,
      SlotFieldList nargs,
      java.io.Writer writer)
  throws java.io.IOException {
    if (tom_is_sort_SlotFieldList(oargs)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch355NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )oargs);if (tom_is_sort_SlotFieldList(nargs)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch355NameNumberfreshSubject_2=(( tom.gom.adt.objects.types.SlotFieldList )nargs);if (tom_is_fun_sym_concSlotField(tomMatch355NameNumberfreshSubject_2)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch355NameNumber_freshVar_0=tomMatch355NameNumberfreshSubject_2;if (tom_is_empty_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_0)) {if (tom_is_fun_sym_concSlotField(tomMatch355NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch355NameNumber_freshVar_1=tomMatch355NameNumberfreshSubject_1;if (tom_is_empty_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_1)) {if ( true ) {

        return ;
      }}}}}}}if (tom_is_fun_sym_concSlotField(tomMatch355NameNumberfreshSubject_2)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch355NameNumber_freshVar_2=tomMatch355NameNumberfreshSubject_2;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_2))) {if (tom_is_fun_sym_SlotField(tom_get_head_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_2))) {{  String  tomMatch355NameNumber_freshVar_37=tom_get_slot_SlotField_Name(tom_get_head_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_2));{  tom.gom.adt.objects.types.ClassName  tomMatch355NameNumber_freshVar_38=tom_get_slot_SlotField_Domain(tom_get_head_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_2));{  String  tom_nargName=tomMatch355NameNumber_freshVar_37;{  tom.gom.adt.objects.types.ClassName  tom_ndomain=tomMatch355NameNumber_freshVar_38;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch355NameNumber_freshVar_3=tom_get_tail_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_2);if (tom_is_fun_sym_concSlotField(tomMatch355NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch355NameNumber_freshVar_10=tomMatch355NameNumberfreshSubject_1;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_10))) {if (tom_is_fun_sym_SlotField(tom_get_head_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_10))) {{  String  tomMatch355NameNumber_freshVar_39=tom_get_slot_SlotField_Name(tom_get_head_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_10));{  tom.gom.adt.objects.types.ClassName  tomMatch355NameNumber_freshVar_40=tom_get_slot_SlotField_Domain(tom_get_head_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_10));{  String  tom_oargName=tomMatch355NameNumber_freshVar_39;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch355NameNumber_freshVar_11=tom_get_tail_concSlotField_SlotFieldList(tomMatch355NameNumber_freshVar_10);if ( true ) {


        if (!(tomMatch355NameNumber_freshVar_40==tom_ndomain)) {
          throw new GomRuntimeException(
              "OperatorTemplate: incompatible args "+
              "should be rejected by typechecker");
        } else if (!tom_oargName.equals(tom_nargName)) {
          /* XXX: the declaration should be omitted if nargName was previously
           * used */
          writer.write("\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(tom_ndomain)+" "/* Generated by TOM (version 2.5alpha): Do not edit this file */+tom_nargName+" = "/* Generated by TOM (version 2.5alpha): Do not edit this file */+tom_oargName+";\n"

);
        } /* else nothing to rename */
        recVarNameRemap(tomMatch355NameNumber_freshVar_11,tomMatch355NameNumber_freshVar_3, writer);
        return;
      }}}}}}}}}}}}}}}}}}}}}}

    throw new GomRuntimeException(
        "OperatorTemplate:recVarNameRemap failed " + oargs + " " + nargs);
  }

  public void generateTomMapping(Writer writer, ClassName basicStrategy)
      throws java.io.IOException {
    if (tom_is_sort_HookList(hooks)) {{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.HookList )hooks);{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumber_freshVar_0=tomMatch357NameNumberfreshSubject_1;{ boolean tomMatch357NameNumber_freshVar_7= false ;if (tom_is_fun_sym_concHook(tomMatch357NameNumber_freshVar_0)) {{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumber_freshVar_1=tomMatch357NameNumber_freshVar_0;{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumber_begin_3=tomMatch357NameNumber_freshVar_1;{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumber_end_4=tomMatch357NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumber_freshVar_2=tomMatch357NameNumber_end_4;if (!(tom_is_empty_concHook_HookList(tomMatch357NameNumber_freshVar_2))) {if (tom_is_fun_sym_MappingHook(tom_get_head_concHook_HookList(tomMatch357NameNumber_freshVar_2))) {{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumber_freshVar_5=tom_get_tail_concHook_HookList(tomMatch357NameNumber_freshVar_2);tomMatch357NameNumber_freshVar_7= true ;}}}}if (tom_is_empty_concHook_HookList(tomMatch357NameNumber_end_4)) {tomMatch357NameNumber_end_4=tomMatch357NameNumber_begin_3;} else {tomMatch357NameNumber_end_4=tom_get_tail_concHook_HookList(tomMatch357NameNumber_end_4);}}} while(!(tom_equal_term_HookList(tomMatch357NameNumber_end_4, tomMatch357NameNumber_begin_3)));}}}}if ((tomMatch357NameNumber_freshVar_7 ==  false )) {if ( true ) {

        writer.write("%op "+className(sortName)+" "+className()+"(");
        slotDecl(writer,slotList);
        writer.write(") {\n");
        writer.write("  is_fsym(t) { t instanceof "+fullClassName()+" }\n");
        if (tom_is_sort_SlotFieldList(slotList)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch356NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )slotList);if (tom_is_fun_sym_concSlotField(tomMatch356NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch356NameNumber_freshVar_2=tomMatch356NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch356NameNumber_begin_4=tomMatch356NameNumber_freshVar_2;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch356NameNumber_end_5=tomMatch356NameNumber_freshVar_2;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch356NameNumber_freshVar_3=tomMatch356NameNumber_end_5;if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch356NameNumber_freshVar_3))) {{  tom.gom.adt.objects.types.SlotField  tomMatch356NameNumber_freshVar_0=tom_get_head_concSlotField_SlotFieldList(tomMatch356NameNumber_freshVar_3);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch356NameNumber_freshVar_6=tom_get_tail_concSlotField_SlotFieldList(tomMatch356NameNumber_freshVar_3);if (tom_is_fun_sym_SlotField(tomMatch356NameNumber_freshVar_0)) {{  String  tomMatch356NameNumber_freshVar_1=tom_get_slot_SlotField_Name(tomMatch356NameNumber_freshVar_0);if ( true ) {

            writer.write("  get_slot("+tomMatch356NameNumber_freshVar_1+", t) ");
            writer.write("{ t."+getMethod(tomMatch356NameNumber_freshVar_0)+"() }\n");
          }}}}}}}if (tom_is_empty_concSlotField_SlotFieldList(tomMatch356NameNumber_end_5)) {tomMatch356NameNumber_end_5=tomMatch356NameNumber_begin_4;} else {tomMatch356NameNumber_end_5=tom_get_tail_concSlotField_SlotFieldList(tomMatch356NameNumber_end_5);}}} while(!(tom_equal_term_SlotFieldList(tomMatch356NameNumber_end_5, tomMatch356NameNumber_begin_4)));}}}}}}

        writer.write("  make(");
        slotArgs(writer,slotList);
        writer.write(") { ");
        writer.write(fullClassName());
        writer.write(".make(");
        slotArgs(writer,slotList);
        writer.write(") }\n");
        writer.write("}\n");
        writer.write("\n");
        return;
      }}}}if (tom_is_fun_sym_concHook(tomMatch357NameNumberfreshSubject_1)) {{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumber_freshVar_8=tomMatch357NameNumberfreshSubject_1;{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumber_begin_10=tomMatch357NameNumber_freshVar_8;{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumber_end_11=tomMatch357NameNumber_freshVar_8;do {{{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumber_freshVar_9=tomMatch357NameNumber_end_11;if (!(tom_is_empty_concHook_HookList(tomMatch357NameNumber_freshVar_9))) {if (tom_is_fun_sym_MappingHook(tom_get_head_concHook_HookList(tomMatch357NameNumber_freshVar_9))) {{  tom.gom.adt.code.types.Code  tomMatch357NameNumber_freshVar_14=tom_get_slot_MappingHook_Code(tom_get_head_concHook_HookList(tomMatch357NameNumber_freshVar_9));{  tom.gom.adt.objects.types.HookList  tomMatch357NameNumber_freshVar_12=tom_get_tail_concHook_HookList(tomMatch357NameNumber_freshVar_9);if ( true ) {

        CodeGen.generateCode(tomMatch357NameNumber_freshVar_14,writer);
      }}}}}}if (tom_is_empty_concHook_HookList(tomMatch357NameNumber_end_11)) {tomMatch357NameNumber_end_11=tomMatch357NameNumber_begin_10;} else {tomMatch357NameNumber_end_11=tom_get_tail_concHook_HookList(tomMatch357NameNumber_end_11);}}} while(!(tom_equal_term_HookList(tomMatch357NameNumber_end_11, tomMatch357NameNumber_begin_10)));}}}}}}

    return;
  }
}

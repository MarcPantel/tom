/* Generated by TOM (version 2.5alpha): Do not edit this file *//*
 * Gom
 *
 * Copyright (C) 2006-2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.backend.shared;

import java.io.*;
import java.util.*;
import java.util.logging.*;
import tom.gom.backend.TemplateHookedClass;
import tom.gom.backend.TemplateClass;
import tom.gom.backend.CodeGen;
import tom.gom.tools.GomEnvironment;
import tom.gom.tools.error.GomRuntimeException;
import tom.gom.adt.objects.types.*;

public class OperatorTemplate extends TemplateHookedClass {
  ClassName abstractType;
  ClassName extendsType;
  ClassName sortName;
  ClassName visitor;
  SlotFieldList slotList;

  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_terms_equal_String(String t1, String t2) {  return  (t1.equals(t2))  ;}  private static boolean tom_terms_equal_Code(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Hook(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SlotField(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SlotFieldList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomClass(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ClassName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_HookList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_fun_sym_MakeHook( tom.gom.adt.objects.types.Hook  t) {  return  t instanceof tom.gom.adt.objects.types.hook.MakeHook  ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_MakeHook_HookArguments( tom.gom.adt.objects.types.Hook  t) {  return  t.getHookArguments()  ;}private static  tom.gom.adt.code.types.Code  tom_get_slot_MakeHook_Code( tom.gom.adt.objects.types.Hook  t) {  return  t.getCode()  ;}private static boolean tom_is_fun_sym_MappingHook( tom.gom.adt.objects.types.Hook  t) {  return  t instanceof tom.gom.adt.objects.types.hook.MappingHook  ;}private static  tom.gom.adt.code.types.Code  tom_get_slot_MappingHook_Code( tom.gom.adt.objects.types.Hook  t) {  return  t.getCode()  ;}private static boolean tom_is_fun_sym_SlotField( tom.gom.adt.objects.types.SlotField  t) {  return  t instanceof tom.gom.adt.objects.types.slotfield.SlotField  ;}private static  String  tom_get_slot_SlotField_Name( tom.gom.adt.objects.types.SlotField  t) {  return  t.getName()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_SlotField_Domain( tom.gom.adt.objects.types.SlotField  t) {  return  t.getDomain()  ;}private static boolean tom_is_fun_sym_OperatorClass( tom.gom.adt.objects.types.GomClass  t) {  return  t instanceof tom.gom.adt.objects.types.gomclass.OperatorClass  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_ClassName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getClassName()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_AbstractType( tom.gom.adt.objects.types.GomClass  t) {  return  t.getAbstractType()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_ExtendsType( tom.gom.adt.objects.types.GomClass  t) {  return  t.getExtendsType()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_Mapping( tom.gom.adt.objects.types.GomClass  t) {  return  t.getMapping()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_SortName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getSortName()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_Visitor( tom.gom.adt.objects.types.GomClass  t) {  return  t.getVisitor()  ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_OperatorClass_Slots( tom.gom.adt.objects.types.GomClass  t) {  return  t.getSlots()  ;}private static  tom.gom.adt.objects.types.HookList  tom_get_slot_OperatorClass_Hooks( tom.gom.adt.objects.types.GomClass  t) {  return  t.getHooks()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_make_ClassName( String  t0,  String  t1) { return  tom.gom.adt.objects.types.classname.ClassName.make(t0, t1); }private static boolean tom_is_fun_sym_concSlotField( tom.gom.adt.objects.types.SlotFieldList  t) {  return  t instanceof tom.gom.adt.objects.types.slotfieldlist.ConsconcSlotField || t instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyconcSlotField  ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_empty_list_concSlotField() { return  tom.gom.adt.objects.types.slotfieldlist.EmptyconcSlotField.make() ; }private static  tom.gom.adt.objects.types.SlotFieldList  tom_cons_list_concSlotField( tom.gom.adt.objects.types.SlotField  e,  tom.gom.adt.objects.types.SlotFieldList  l) { return  tom.gom.adt.objects.types.slotfieldlist.ConsconcSlotField.make(e,l) ; }private static  tom.gom.adt.objects.types.SlotField  tom_get_head_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) {  return  l.getHeadconcSlotField()  ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_get_tail_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) {  return  l.getTailconcSlotField()  ;}private static boolean tom_is_empty_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) {  return  l.isEmptyconcSlotField()  ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_append_list_concSlotField( tom.gom.adt.objects.types.SlotFieldList  l1,  tom.gom.adt.objects.types.SlotFieldList  l2) {    if(tom_is_empty_concSlotField_SlotFieldList(l1)) {     return l2;    } else if(tom_is_empty_concSlotField_SlotFieldList(l2)) {     return l1;    } else if(tom_is_empty_concSlotField_SlotFieldList(( tom.gom.adt.objects.types.SlotFieldList )tom_get_tail_concSlotField_SlotFieldList(l1))) {     return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(( tom.gom.adt.objects.types.SlotField )tom_get_head_concSlotField_SlotFieldList(l1),l2);    } else {      return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(( tom.gom.adt.objects.types.SlotField )tom_get_head_concSlotField_SlotFieldList(l1),tom_append_list_concSlotField(( tom.gom.adt.objects.types.SlotFieldList )tom_get_tail_concSlotField_SlotFieldList(l1),l2));    }   }  private static  tom.gom.adt.objects.types.SlotFieldList  tom_get_slice_concSlotField( tom.gom.adt.objects.types.SlotFieldList  begin,  tom.gom.adt.objects.types.SlotFieldList  end) {    if(tom_terms_equal_SlotFieldList(begin,end)) {      return ( tom.gom.adt.objects.types.SlotFieldList )tom_empty_list_concSlotField();    } else {      return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(( tom.gom.adt.objects.types.SlotField )tom_get_head_concSlotField_SlotFieldList(begin),( tom.gom.adt.objects.types.SlotFieldList )tom_get_slice_concSlotField(( tom.gom.adt.objects.types.SlotFieldList )tom_get_tail_concSlotField_SlotFieldList(begin),end));    }   }  private static boolean tom_is_fun_sym_concHook( tom.gom.adt.objects.types.HookList  t) {  return  t instanceof tom.gom.adt.objects.types.hooklist.ConsconcHook || t instanceof tom.gom.adt.objects.types.hooklist.EmptyconcHook  ;}private static  tom.gom.adt.objects.types.HookList  tom_empty_list_concHook() { return  tom.gom.adt.objects.types.hooklist.EmptyconcHook.make() ; }private static  tom.gom.adt.objects.types.HookList  tom_cons_list_concHook( tom.gom.adt.objects.types.Hook  e,  tom.gom.adt.objects.types.HookList  l) { return  tom.gom.adt.objects.types.hooklist.ConsconcHook.make(e,l) ; }private static  tom.gom.adt.objects.types.Hook  tom_get_head_concHook_HookList( tom.gom.adt.objects.types.HookList  l) {  return  l.getHeadconcHook()  ;}private static  tom.gom.adt.objects.types.HookList  tom_get_tail_concHook_HookList( tom.gom.adt.objects.types.HookList  l) {  return  l.getTailconcHook()  ;}private static boolean tom_is_empty_concHook_HookList( tom.gom.adt.objects.types.HookList  l) {  return  l.isEmptyconcHook()  ;}private static  tom.gom.adt.objects.types.HookList  tom_append_list_concHook( tom.gom.adt.objects.types.HookList  l1,  tom.gom.adt.objects.types.HookList  l2) {    if(tom_is_empty_concHook_HookList(l1)) {     return l2;    } else if(tom_is_empty_concHook_HookList(l2)) {     return l1;    } else if(tom_is_empty_concHook_HookList(( tom.gom.adt.objects.types.HookList )tom_get_tail_concHook_HookList(l1))) {     return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(( tom.gom.adt.objects.types.Hook )tom_get_head_concHook_HookList(l1),l2);    } else {      return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(( tom.gom.adt.objects.types.Hook )tom_get_head_concHook_HookList(l1),tom_append_list_concHook(( tom.gom.adt.objects.types.HookList )tom_get_tail_concHook_HookList(l1),l2));    }   }  private static  tom.gom.adt.objects.types.HookList  tom_get_slice_concHook( tom.gom.adt.objects.types.HookList  begin,  tom.gom.adt.objects.types.HookList  end) {    if(tom_terms_equal_HookList(begin,end)) {      return ( tom.gom.adt.objects.types.HookList )tom_empty_list_concHook();    } else {      return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(( tom.gom.adt.objects.types.Hook )tom_get_head_concHook_HookList(begin),( tom.gom.adt.objects.types.HookList )tom_get_slice_concHook(( tom.gom.adt.objects.types.HookList )tom_get_tail_concHook_HookList(begin),end));    }   }   

  public OperatorTemplate(File tomHomePath,
                          List importList, 	
                          GomClass gomClass,
                          TemplateClass mapping) {
    super(gomClass,tomHomePath,importList,mapping);
     if(gomClass instanceof  tom.gom.adt.objects.types.GomClass ) { { tom.gom.adt.objects.types.GomClass  tomMatch1Position1=(( tom.gom.adt.objects.types.GomClass )gomClass); if ( ( tom_is_fun_sym_OperatorClass(tomMatch1Position1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_abstractType=tom_get_slot_OperatorClass_AbstractType(tomMatch1Position1); { tom.gom.adt.objects.types.ClassName  tom_extendsType=tom_get_slot_OperatorClass_ExtendsType(tomMatch1Position1); { tom.gom.adt.objects.types.ClassName  tom_sortName=tom_get_slot_OperatorClass_SortName(tomMatch1Position1); { tom.gom.adt.objects.types.ClassName  tom_visitorName=tom_get_slot_OperatorClass_Visitor(tomMatch1Position1); { tom.gom.adt.objects.types.SlotFieldList  tom_slots=tom_get_slot_OperatorClass_Slots(tomMatch1Position1); if ( true ) {







        this.abstractType = tom_abstractType;
        this.extendsType = tom_extendsType;;
        this.sortName = tom_sortName;
        this.visitor = tom_visitorName;
        this.slotList = tom_slots;
        return;
       } } } } } } } } }

    throw new GomRuntimeException(
        "Bad argument for OperatorTemplate: " + gomClass);
  }

  public void generate(java.io.Writer writer) throws java.io.IOException {

writer.write(
"\npackage "/* Generated by TOM (version 2.5alpha): Do not edit this file */+getPackage()+";\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateImport()+"\npublic final class "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" extends "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(extendsType)+" implements tom.library.strategy.mutraveler.MuVisitable, tom.library.sl.Visitable "/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateInterface()+" {\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateBlock()+"\n  private static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" proto = new "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"();\n  private int hashCode;\n  private "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"() {}\n"







);
generateMembers(writer);
generateBody(writer);
writer.write("\n}\n"

);
  }

  private void generateBody(java.io.Writer writer) throws java.io.IOException {
    writer.write("\n    /* static constructor */\n"

);
generateConstructor(writer);
writer.write("\n  private void init("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList) + (slotList.isEmptyconcSlotField()?"":", ") +"int hashCode) {\n"

);
generateMembersInit(writer);
writer.write("\n    this.hashCode = hashCode;\n  }\n\n  private void initHashCode("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList)+") {\n"




);
generateMembersInit(writer);
writer.write("\n  this.hashCode = hashFunction();\n  }\n\n  /* name and arity */\n  public String symbolName() {\n    return \""/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"\";\n  }\n\n  private int getArity() {\n    return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+slotList.length()+";\n  }\n"











);

  /*
   * Generate a toStringBuffer method if the operator is not associative
   */
  if (sortName == extendsType) {
writer.write("\n  public void toStringBuffer(java.lang.StringBuffer buffer) {\n    buffer.append(\""/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"(\");\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+toStringChilds("buffer")+"\n    buffer.append(\")\");\n  }\n"





);
  }

writer.write("\n\n  /**\n    * This method implements a lexicographic order\n    */\n  public int compareToLPO(Object o) {\n    /*\n     * We do not want to compare with any object, only members of the module\n     * In case of invalid argument, throw a ClassCastException, as the java api\n     * asks for it\n     */\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(abstractType)+" ao = ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(abstractType)+") o;\n    /* return 0 for equality */\n    if (ao == this)\n      return 0;\n    /* compare the symbols */\n    int symbCmp = this.symbolName().compareTo(ao.symbolName());\n    if (symbCmp != 0)\n      return symbCmp;\n    /* compare the childs */\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+genCompareChilds("ao","compareToLPO")+"\n    throw new RuntimeException(\"Unable to compare\");\n  }\n\n  public int compareTo(Object o) {\n    /*\n     * We do not want to compare with any object, only members of the module\n     * In case of invalid argument, throw a ClassCastException, as the java api\n     * asks for it\n     */\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(abstractType)+" ao = ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(abstractType)+") o;\n    /* return 0 for equality */\n    if (ao == this)\n      return 0;\n    /* use the hash values to discriminate */\n    \n    if(this.hashCode != ao.hashCode())\n      return  (this.hashCode < ao.hashCode())?-1:1;\n\n    /* If not, compare the symbols : back to the normal order */\n    int symbCmp = this.symbolName().compareTo(ao.symbolName());\n    if (symbCmp != 0)\n      return symbCmp;\n    /* last resort: compare the childs */\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+genCompareChilds("ao","compareTo")+"\n    throw new RuntimeException(\"Unable to compare\");\n  }\n\n  /* shared.SharedObject */\n  public final int hashCode() {\n    return hashCode;\n  }\n\n  public shared.SharedObject duplicate() {\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" clone = new "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+"();\n    clone.init("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childList(slotList) + (slotList.isEmptyconcSlotField()?"":", ") +"hashCode);\n    return clone;\n  }\n\n  public final boolean equivalent(shared.SharedObject obj) {\n    if(obj instanceof "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+") {\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateMembersEqualityTest("peer")+"\n    }\n    return false;\n  }\n\n  /* "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className(sortName)+" interface */\n  public boolean "/* Generated by TOM (version 2.5alpha): Do not edit this file */+isOperatorMethod(className)+"() {\n    return true;\n  }\n"





































































);
generateGetters(writer);

    writer.write("\n  /* AbstractType */\n  public aterm.ATerm toATerm() {\n    return aterm.pure.SingletonFactory.getInstance().makeAppl(\n      aterm.pure.SingletonFactory.getInstance().makeAFun(symbolName(),getArity(),false),\n      new aterm.ATerm[] {"/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateToATermChilds()+"});\n  }\n\n  public static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(sortName)+" fromTerm(aterm.ATerm trm) {\n    if(trm instanceof aterm.ATermAppl) {\n      aterm.ATermAppl appl = (aterm.ATermAppl) trm;\n      if(proto.symbolName().equals(appl.getName())) {\n        return make(\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+generatefromATermChilds("appl")+"\n        );\n      }\n    }\n    return null;\n  }\n\n"



















);

    writer.write("\n  /* jjtraveler.Visitable */\n  public int getChildCount() {\n    return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinChildCount()+";\n  }\n\n  public jjtraveler.Visitable getChildAt(int index) {\n    switch(index) {\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinsGetCases()+"\n      default: throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public jjtraveler.Visitable setChildAt(int index, jjtraveler.Visitable v) {\n    switch(index) {\n"/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinMakeCases("v")+"\n      default: throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public jjtraveler.Visitable setChilds(jjtraveler.Visitable[] childs) {\n    if (childs.length == "/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinChildCount()+") {\n      return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinArrayMake("childs")+";\n    } else {\n      throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public jjtraveler.Visitable setChildren(jjtraveler.Visitable[] childs) {\n    if (childs.length == "/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinChildCount()+") {\n      return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinArrayMake("childs")+";\n    } else {\n      throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public jjtraveler.Visitable[] getChilds() {\n    return new jjtraveler.Visitable[] { "/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinChildList(slotList)+" };\n  }\n\n  public jjtraveler.Visitable[] getChildren() {\n    return new jjtraveler.Visitable[] { "/* Generated by TOM (version 2.5alpha): Do not edit this file */+nonBuiltinChildList(slotList)+" };\n  }\n"










































);

    writer.write("\n      /* internal use */\n  protected int hashFunction() {\n    int a, b, c;\n\n    /* Set up the internal state */\n    a = 0x9e3779b9; /* the golden ratio; an arbitrary value */\n    b = ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+shared.HashFunctions.stringHashFunction(fullClassName(),slotList.length())+"<<8);\n    c = getArity();\n    /*---------------------------------------- handle most of the key */\n\n    /*------------------------------------- handle the last 11 bytes */\n"











);
generateHashArgs(writer);
writer.write("\n    a -= b;\n    a -= c;\n    a ^= (c >> 13);\n    b -= c;\n    b -= a;\n    b ^= (a << 8);\n    c -= a;\n    c -= b;\n    c ^= (b >> 13);\n    a -= b;\n    a -= c;\n    a ^= (c >> 12);\n    b -= c;\n    b -= a;\n    b ^= (a << 16);\n    c -= a;\n    c -= b;\n    c ^= (b >> 5);\n    a -= b;\n    a -= c;\n    a ^= (c >> 3);\n    b -= c;\n    b -= a;\n    b ^= (a << 10);\n    c -= a;\n    c -= b;\n    c ^= (b >> 15);\n\n    /*-------------------------------------------- report the result */\n    return c;\n  }\n"































);
  }

  private void generateMembers(java.io.Writer writer) throws java.io.IOException {
     if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch2Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch2Position1) ||  false  ) ) { {int tomMatch2Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch2Position1List1=tomMatch2Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch2Position1Begin1=tomMatch2Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch2Position1End1=tomMatch2Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch2Position1End1))) {tomMatch2Position1List1=tomMatch2Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch2Position1Save2=tomMatch2Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch2Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch2Position1List1);tomMatch2Position1Index1=tomMatch2Position1Index1 + 1;tomMatch2Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch2Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch2Position1Position2) ||  false  ) ) { { String  tom_fieldName=tom_get_slot_SlotField_Name(tomMatch2Position1Position2); { tom.gom.adt.objects.types.ClassName  tom_domainClass=tom_get_slot_SlotField_Domain(tomMatch2Position1Position2); if ( true ) {

        writer.write("  private ");
        writer.write(fullClassName(tom_domainClass));
        writer.write(" ");
        writer.write(fieldName(tom_fieldName));
        writer.write(";\n");
       } } } } }tomMatch2Position1List1=tomMatch2Position1Save2; } }tomMatch2Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch2Position1End1); } }tomMatch2Position1List1=tomMatch2Position1Begin1; } } } } } } } }

  }

  private void generateMembersInit(java.io.Writer writer) throws java.io.IOException {
     if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch3Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch3Position1) ||  false  ) ) { {int tomMatch3Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch3Position1List1=tomMatch3Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch3Position1Begin1=tomMatch3Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch3Position1End1=tomMatch3Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch3Position1End1))) {tomMatch3Position1List1=tomMatch3Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch3Position1Save2=tomMatch3Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch3Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch3Position1List1);tomMatch3Position1Index1=tomMatch3Position1Index1 + 1;tomMatch3Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch3Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch3Position1Position2) ||  false  ) ) { { String  tom_fieldName=tom_get_slot_SlotField_Name(tomMatch3Position1Position2); { tom.gom.adt.objects.types.ClassName  tom_domain=tom_get_slot_SlotField_Domain(tomMatch3Position1Position2); if ( true ) {

        writer.write("    this.");
        writer.write(fieldName(tom_fieldName));
        writer.write(" = ");
        writer.write(fieldName(tom_fieldName));
        if (GomEnvironment.getInstance().isBuiltinClass(tom_domain) && tom_domain.equals(tom_make_ClassName("","String"))) {
          writer.write(".intern()");
        }
        writer.write(";\n");
       } } } } }tomMatch3Position1List1=tomMatch3Position1Save2; } }tomMatch3Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch3Position1End1); } }tomMatch3Position1List1=tomMatch3Position1Begin1; } } } } } } } }

  }

  private void generateGetters(java.io.Writer writer) throws java.io.IOException {
    SlotFieldList slots = slotList;
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
      writer.write("\n  public "/* Generated by TOM (version 2.5alpha): Do not edit this file */+slotDomain(head)+" "/* Generated by TOM (version 2.5alpha): Do not edit this file */+getMethod(head)+"() {\n    return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(head.getName())+";\n  }\n      \n  public "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(sortName)+" "/* Generated by TOM (version 2.5alpha): Do not edit this file */+setMethod(head)+"("/* Generated by TOM (version 2.5alpha): Do not edit this file */+slotDomain(head)+" set_arg) {\n    return make("/* Generated by TOM (version 2.5alpha): Do not edit this file */+generateMakeArgsFor(head,"set_arg")+");\n  }"






);
    }
  }

  private String generateToATermChilds() {
    StringBuffer res = new StringBuffer();
    SlotFieldList slots = slotList;
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
      if (res.length()!=0) {
        res.append(", ");
      }
      toATermSlotField(res,head);
    }
    return res.toString();
  }

  private String generatefromATermChilds(String appl) {
    StringBuffer res = new StringBuffer();
    int index = 0;
    SlotFieldList slots = slotList;
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
      if (res.length()!=0) {
        res.append(", ");
      }
      fromATermSlotField(res,head, appl+".getArgument("+index+")");
      index++;
    }
    return res.toString();
  }

  private String fieldName(String fieldName) {
    return "_"+fieldName;
  }

  private String childListWithType(SlotFieldList slots) {
    StringBuffer res = new StringBuffer();
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
       if(head instanceof  tom.gom.adt.objects.types.SlotField ) { { tom.gom.adt.objects.types.SlotField  tomMatch4Position1=(( tom.gom.adt.objects.types.SlotField )head); if ( ( tom_is_fun_sym_SlotField(tomMatch4Position1) ||  false  ) ) { { String  tom_name=tom_get_slot_SlotField_Name(tomMatch4Position1); { tom.gom.adt.objects.types.ClassName  tom_domain=tom_get_slot_SlotField_Domain(tomMatch4Position1); if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(fullClassName(tom_domain));
          res.append(" ");
          res.append(fieldName(tom_name));
         } } } } } }

    }
    return res.toString();
  }
  private String unprotectedChildListWithType(SlotFieldList slots) {
    StringBuffer res = new StringBuffer();
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
       if(head instanceof  tom.gom.adt.objects.types.SlotField ) { { tom.gom.adt.objects.types.SlotField  tomMatch5Position1=(( tom.gom.adt.objects.types.SlotField )head); if ( ( tom_is_fun_sym_SlotField(tomMatch5Position1) ||  false  ) ) { { String  tom_name=tom_get_slot_SlotField_Name(tomMatch5Position1); { tom.gom.adt.objects.types.ClassName  tom_domain=tom_get_slot_SlotField_Domain(tomMatch5Position1); if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(fullClassName(tom_domain));
          res.append(" ");
          res.append(tom_name);
         } } } } } }

    }
    return res.toString();
  }
  private String childList(SlotFieldList slots) {
    StringBuffer res = new StringBuffer();
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
       if(head instanceof  tom.gom.adt.objects.types.SlotField ) { { tom.gom.adt.objects.types.SlotField  tomMatch6Position1=(( tom.gom.adt.objects.types.SlotField )head); if ( ( tom_is_fun_sym_SlotField(tomMatch6Position1) ||  false  ) ) { { String  tom_name=tom_get_slot_SlotField_Name(tomMatch6Position1); if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
          res.append(fieldName(tom_name));
         } } } } }

    }
    return res.toString();
  }
  private String unprotectedChildList(SlotFieldList slots) {
    StringBuffer res = new StringBuffer();
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
       if(head instanceof  tom.gom.adt.objects.types.SlotField ) { { tom.gom.adt.objects.types.SlotField  tomMatch7Position1=(( tom.gom.adt.objects.types.SlotField )head); if ( ( tom_is_fun_sym_SlotField(tomMatch7Position1) ||  false  ) ) { { String  tom_name=tom_get_slot_SlotField_Name(tomMatch7Position1); if ( true ) {

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
          res.append(tom_name);
         } } } } }

    }
    return res.toString();
  }
  private String generateMembersEqualityTest(String peer) {
    StringBuffer res = new StringBuffer();
    if(!slotList.isEmptyconcSlotField()) {
      res.append("\n      "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" peer = ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+") obj;"
);;
    }
    res.append("\n      return "
);
     if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch8Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch8Position1) ||  false  ) ) { {int tomMatch8Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch8Position1List1=tomMatch8Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch8Position1Begin1=tomMatch8Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch8Position1End1=tomMatch8Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch8Position1End1))) {tomMatch8Position1List1=tomMatch8Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch8Position1Save2=tomMatch8Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch8Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch8Position1List1);tomMatch8Position1Index1=tomMatch8Position1Index1 + 1;tomMatch8Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch8Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch8Position1Position2) ||  false  ) ) { { String  tom_fieldName=tom_get_slot_SlotField_Name(tomMatch8Position1Position2); if ( true ) {

        res.append(fieldName(tom_fieldName));
        res.append("==");
        res.append(peer);
        res.append(".");
        res.append(fieldName(tom_fieldName));
        res.append(" && ");
       } } } }tomMatch8Position1List1=tomMatch8Position1Save2; } }tomMatch8Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch8Position1End1); } }tomMatch8Position1List1=tomMatch8Position1Begin1; } } } } } } } }

    res.append("true;"); // to handle the "no childs" case
    return res.toString();
  }
  private int nonBuiltinChildCount() {
    int count = 0;
    //in case of reference, conspos are considered as constants
    //to avoid traversal inside a position
    //TODO: in the future Gom replace this code by a hook
    if(className().equals("Conspos"+sortName.getName())) return count;
     if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch9Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch9Position1) ||  false  ) ) { {int tomMatch9Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch9Position1List1=tomMatch9Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch9Position1Begin1=tomMatch9Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch9Position1End1=tomMatch9Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch9Position1End1))) {tomMatch9Position1List1=tomMatch9Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch9Position1Save2=tomMatch9Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch9Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch9Position1List1);tomMatch9Position1Index1=tomMatch9Position1Index1 + 1;tomMatch9Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch9Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch9Position1Position2) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_domain=tom_get_slot_SlotField_Domain(tomMatch9Position1Position2); if ( true ) {

        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          count++;
        }
       } } } }tomMatch9Position1List1=tomMatch9Position1Save2; } }tomMatch9Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch9Position1End1); } }tomMatch9Position1List1=tomMatch9Position1Begin1; } } } } } } } }

    return count;
  }

  private String nonBuiltinsGetCases() {
    StringBuffer res = new StringBuffer();
    int index = 0;
     if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch10Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch10Position1) ||  false  ) ) { {int tomMatch10Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch10Position1List1=tomMatch10Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch10Position1Begin1=tomMatch10Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch10Position1End1=tomMatch10Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch10Position1End1))) {tomMatch10Position1List1=tomMatch10Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch10Position1Save2=tomMatch10Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch10Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch10Position1List1);tomMatch10Position1Index1=tomMatch10Position1Index1 + 1;tomMatch10Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch10Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch10Position1Position2) ||  false  ) ) { { String  tom_fieldName=tom_get_slot_SlotField_Name(tomMatch10Position1Position2); { tom.gom.adt.objects.types.ClassName  tom_domain=tom_get_slot_SlotField_Domain(tomMatch10Position1Position2); if ( true ) {

        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          res.append("      case ");
          res.append(index);
          res.append(": return ");
          res.append(fieldName(tom_fieldName));
          res.append(";\n");
          index++;
        }
       } } } } }tomMatch10Position1List1=tomMatch10Position1Save2; } }tomMatch10Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch10Position1End1); } }tomMatch10Position1List1=tomMatch10Position1Begin1; } } } } } } } }

    return res.toString();
  }

  private String nonBuiltinChildList(SlotFieldList slots) {
    StringBuffer res = new StringBuffer();
    while(!slots.isEmptyconcSlotField()) {
      SlotField head = slots.getHeadconcSlotField();
      slots = slots.getTailconcSlotField();
       if(head instanceof  tom.gom.adt.objects.types.SlotField ) { { tom.gom.adt.objects.types.SlotField  tomMatch11Position1=(( tom.gom.adt.objects.types.SlotField )head); if ( ( tom_is_fun_sym_SlotField(tomMatch11Position1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_domain=tom_get_slot_SlotField_Domain(tomMatch11Position1); { String  tom_name=tom_get_slot_SlotField_Name(tomMatch11Position1); if ( true ) {

        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
          res.append(fieldName(tom_name));
        }
         } } } } } }

    }
    return res.toString();
  }

  private String nonBuiltinArrayMake(String arrayName) {
    StringBuffer res = new StringBuffer("make(");
    int index = 0;
    int fullindex = 0;
     if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch12Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch12Position1) ||  false  ) ) { {int tomMatch12Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch12Position1List1=tomMatch12Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch12Position1Begin1=tomMatch12Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch12Position1End1=tomMatch12Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch12Position1End1))) {tomMatch12Position1List1=tomMatch12Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch12Position1Save2=tomMatch12Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch12Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch12Position1List1);tomMatch12Position1Index1=tomMatch12Position1Index1 + 1;tomMatch12Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch12Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch12Position1Position2) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_domain=tom_get_slot_SlotField_Domain(tomMatch12Position1Position2); { tom.gom.adt.objects.types.SlotField  tom_slot=tomMatch12Position1Position2; if ( true ) {

        if(fullindex>0) { res.append(", "); }
        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          res.append("(");
          res.append(fullClassName(tom_domain));
          res.append(") ");
          res.append(arrayName);
          res.append("[");
          res.append(index);
          res.append("]");
          index++;
        } else {
          res.append(getMethod(tom_slot));
          res.append("()");
        }
        fullindex++;
       } } } } }tomMatch12Position1List1=tomMatch12Position1Save2; } }tomMatch12Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch12Position1End1); } }tomMatch12Position1List1=tomMatch12Position1Begin1; } } } } } } } }

    res.append(")");
    return res.toString();
  }
  private String nonBuiltinMakeCases(String argName) {
    StringBuffer res = new StringBuffer();
    int index = 0;
     if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch13Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch13Position1) ||  false  ) ) { {int tomMatch13Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch13Position1List1=tomMatch13Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch13Position1Begin1=tomMatch13Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch13Position1End1=tomMatch13Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch13Position1End1))) {tomMatch13Position1List1=tomMatch13Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch13Position1Save2=tomMatch13Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch13Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch13Position1List1);tomMatch13Position1Index1=tomMatch13Position1Index1 + 1;tomMatch13Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch13Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch13Position1Position2) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_domain=tom_get_slot_SlotField_Domain(tomMatch13Position1Position2); if ( true ) {

        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          res.append("      case "+index+": return make("+generateMakeArgsFor(index, argName)+");\n");
          index++;
        }
       } } } }tomMatch13Position1List1=tomMatch13Position1Save2; } }tomMatch13Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch13Position1End1); } }tomMatch13Position1List1=tomMatch13Position1Begin1; } } } } } } } }

    return res.toString();
  }
  private String generateMakeArgsFor(int argIndex, String argName) {
    StringBuffer res = new StringBuffer();
    int index = 0;
    int fullindex = 0;
     if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch14Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch14Position1) ||  false  ) ) { {int tomMatch14Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch14Position1List1=tomMatch14Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch14Position1Begin1=tomMatch14Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch14Position1End1=tomMatch14Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch14Position1End1))) {tomMatch14Position1List1=tomMatch14Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch14Position1Save2=tomMatch14Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch14Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch14Position1List1);tomMatch14Position1Index1=tomMatch14Position1Index1 + 1;tomMatch14Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch14Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch14Position1Position2) ||  false  ) ) { { String  tom_fieldName=tom_get_slot_SlotField_Name(tomMatch14Position1Position2); { tom.gom.adt.objects.types.ClassName  tom_domain=tom_get_slot_SlotField_Domain(tomMatch14Position1Position2); { tom.gom.adt.objects.types.SlotField  tom_slot=tomMatch14Position1Position2; if ( true ) {

        if(fullindex>0) { res.append(", "); }
        if (GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          res.append(getMethod(tom_slot));
          res.append("()");
        } else {
          if (index != argIndex) {
            res.append(fieldName(tom_fieldName));
          } else {
            res.append("(");
            res.append(fullClassName(tom_domain));
            res.append(") ");
            res.append(argName);
          }
          index++;
        }
        fullindex++;
       } } } } } }tomMatch14Position1List1=tomMatch14Position1Save2; } }tomMatch14Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch14Position1End1); } }tomMatch14Position1List1=tomMatch14Position1Begin1; } } } } } } } }

    return res.toString();
  }
  private String generateMakeArgsFor(SlotField slot, String argName) {
    StringBuffer res = new StringBuffer();
    int fullindex = 0;
     if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch15Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch15Position1) ||  false  ) ) { {int tomMatch15Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch15Position1List1=tomMatch15Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch15Position1Begin1=tomMatch15Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch15Position1End1=tomMatch15Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch15Position1End1))) {tomMatch15Position1List1=tomMatch15Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch15Position1Save2=tomMatch15Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch15Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch15Position1List1);tomMatch15Position1Index1=tomMatch15Position1Index1 + 1;tomMatch15Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch15Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch15Position1Position2) ||  false  ) ) { { String  tom_fieldName=tom_get_slot_SlotField_Name(tomMatch15Position1Position2); { tom.gom.adt.objects.types.SlotField  tom_itslot=tomMatch15Position1Position2; if ( true ) {

        if(fullindex>0) { res.append(", "); }
        if (tom_itslot== slot) {
          res.append(argName);
        } else {
          res.append(fieldName(tom_fieldName));
        }
        fullindex++;
       } } } } }tomMatch15Position1List1=tomMatch15Position1Save2; } }tomMatch15Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch15Position1End1); } }tomMatch15Position1List1=tomMatch15Position1Begin1; } } } } } } } }

    return res.toString();
  }

  private String toStringChilds(String buffer) {
    if (0 == slotList.length()) {
      return "";
    }
    StringBuffer res = new StringBuffer();
    SlotFieldList slots = slotList;
		while(!slots.isEmptyconcSlotField()) {
			if(res.length()!=0) {
				res.append(""/* Generated by TOM (version 2.5alpha): Do not edit this file */+buffer+".append(\",\");\n    "
);
			}
			SlotField head = slots.getHeadconcSlotField();
			slots = slots.getTailconcSlotField();
      toStringSlotField(res, head, fieldName(head.getName()), buffer);
		}
    return res.toString();
  }

  private String genCompareChilds(String oldOther, String compareFun) {
    StringBuffer res = new StringBuffer();
    String other = "tco";
    if(!slotList.isEmptyconcSlotField()) {
    res.append(""/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" "/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+" = ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+") "/* Generated by TOM (version 2.5alpha): Do not edit this file */+oldOther+";");
    }
     if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch16Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch16Position1) ||  false  ) ) { {int tomMatch16Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch16Position1List1=tomMatch16Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch16Position1Begin1=tomMatch16Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch16Position1End1=tomMatch16Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch16Position1End1))) {tomMatch16Position1List1=tomMatch16Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch16Position1Save2=tomMatch16Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch16Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch16Position1List1);tomMatch16Position1Index1=tomMatch16Position1Index1 + 1;tomMatch16Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch16Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch16Position1Position2) ||  false  ) ) { { String  tom_slotName=tom_get_slot_SlotField_Name(tomMatch16Position1Position2); { tom.gom.adt.objects.types.ClassName  tom_domain=tom_get_slot_SlotField_Domain(tomMatch16Position1Position2); if ( true ) {

        if (GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
         if (tom_domain.equals(tom_make_ClassName("","int"))
             || tom_domain.equals(tom_make_ClassName("","long"))
             || tom_domain.equals(tom_make_ClassName("","double"))
             || tom_domain.equals(tom_make_ClassName("","float"))
             || tom_domain.equals(tom_make_ClassName("","char"))) { 
           res.append("\n    if( this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+" != "/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+")\n      return (this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+" < "/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+")?-1:1;\n"


);
         } else if (tom_domain.equals(tom_make_ClassName("","boolean"))) {
           res.append("\n    if( this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+" != "/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+")\n      return (!this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+" && "/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+")?-1:1;\n"


);
         } else if (tom_domain.equals(tom_make_ClassName("","String"))) {
           res.append("\n    int "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp = (this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+").compareTo("/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+");\n    if("/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n             \n"




);
         } else if (tom_domain.equals(tom_make_ClassName("aterm","ATerm"))
             ||tom_domain.equals(tom_make_ClassName("aterm","ATermList"))) {
           res.append("\n    /* Inefficient total order on ATerm */\n    int "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp = ((this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+").toString()).compareTo(("/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+").toString());\n    if("/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n"




);
         } else {
            throw new GomRuntimeException("Builtin "+tom_domain+" not supported");
         }
        } else {
          res.append("\n    int "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp = (this."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+")."/* Generated by TOM (version 2.5alpha): Do not edit this file */+compareFun+"("/* Generated by TOM (version 2.5alpha): Do not edit this file */+other+"."/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+");\n    if("/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n"



); 
        }
       } } } } }tomMatch16Position1List1=tomMatch16Position1Save2; } }tomMatch16Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch16Position1End1); } }tomMatch16Position1List1=tomMatch16Position1Begin1; } } } } } } } }

    return res.toString();
  }

  private void generateHashArgs(java.io.Writer writer) throws java.io.IOException {
    int index = slotList.length() - 1;
     if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch17Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch17Position1) ||  false  ) ) { {int tomMatch17Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch17Position1List1=tomMatch17Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch17Position1Begin1=tomMatch17Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch17Position1End1=tomMatch17Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch17Position1End1))) {tomMatch17Position1List1=tomMatch17Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch17Position1Save2=tomMatch17Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch17Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch17Position1List1);tomMatch17Position1Index1=tomMatch17Position1Index1 + 1;tomMatch17Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch17Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch17Position1Position2) ||  false  ) ) { { String  tom_slotName=tom_get_slot_SlotField_Name(tomMatch17Position1Position2); { tom.gom.adt.objects.types.ClassName  tom_domain=tom_get_slot_SlotField_Domain(tomMatch17Position1Position2); if ( true ) {

        int shift = (index % 4) * 8;
        String accum = ""+"aaaabbbbcccc".toCharArray()[index % 12];
        writer.write("    "+accum+" += (");
        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          writer.write(fieldName(tom_slotName)+".hashCode()");
        } else {
          if (tom_domain.equals(tom_make_ClassName("","int"))
              || tom_domain.equals(tom_make_ClassName("","long"))
              || tom_domain.equals(tom_make_ClassName("","double"))
              || tom_domain.equals(tom_make_ClassName("","float"))
              || tom_domain.equals(tom_make_ClassName("","char"))) {
            writer.write(fieldName(tom_slotName));
          } else if (tom_domain.equals(tom_make_ClassName("","boolean"))) {
            writer.write("("+fieldName(tom_slotName)+"?1:0)");
          } else if (tom_domain.equals(tom_make_ClassName("","String"))) {
            // Use the string hashFunction for Strings, and pass index as arity
            writer.write("shared.HashFunctions.stringHashFunction("+fieldName(tom_slotName)+", "+index+")");
          } else if (tom_domain.equals(tom_make_ClassName("aterm","ATerm"))||tom_domain.equals(tom_make_ClassName("aterm","ATermList"))) {
            // Use the string hashFunction for Strings, and pass index as arity
            writer.write(fieldName(tom_slotName)+".hashCode()");
          }  else {
            throw new GomRuntimeException("generateHashArgs: Builtin " + tom_domain+ " not supported");
          }
        }
        if (shift!=0) { writer.write(" << "+(shift)); }
        writer.write(");\n");
        index--;
       } } } } }tomMatch17Position1List1=tomMatch17Position1Save2; } }tomMatch17Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch17Position1End1); } }tomMatch17Position1List1=tomMatch17Position1Begin1; } } } } } } } }

  }

  public void generateConstructor(java.io.Writer writer)
    throws java.io.IOException {

     if(hooks instanceof  tom.gom.adt.objects.types.HookList ) { { tom.gom.adt.objects.types.HookList  tomMatch18Position1=(( tom.gom.adt.objects.types.HookList )hooks); {boolean tomMatch18NameNumbertom_anti_constraints_status= true ; { tom.gom.adt.objects.types.HookList  _tom_fresh_var_0=tomMatch18Position1; { if ( ( tom_is_fun_sym_concHook(_tom_fresh_var_0) ||  false  ) ) { {int tomMatch19NameNumberANTIIndex1=0; { tom.gom.adt.objects.types.HookList  tomMatch19NameNumberANTIList1=_tom_fresh_var_0; { tom.gom.adt.objects.types.HookList  tomMatch19NameNumberANTIBegin1=tomMatch19NameNumberANTIList1; { tom.gom.adt.objects.types.HookList  tomMatch19NameNumberANTIEnd1=tomMatch19NameNumberANTIList1; { while (!(tom_is_empty_concHook_HookList(tomMatch19NameNumberANTIEnd1))) {tomMatch19NameNumberANTIList1=tomMatch19NameNumberANTIEnd1; { { tom.gom.adt.objects.types.HookList  tomMatch19NameNumberANTISave2=tomMatch19NameNumberANTIList1; { { tom.gom.adt.objects.types.Hook  tomMatch19NameNumberANTIPosition2=tom_get_head_concHook_HookList(tomMatch19NameNumberANTIList1);tomMatch19NameNumberANTIIndex1=tomMatch19NameNumberANTIIndex1 + 1;tomMatch19NameNumberANTIList1=tom_get_tail_concHook_HookList(tomMatch19NameNumberANTIList1); if ( ( tom_is_fun_sym_MakeHook(tomMatch19NameNumberANTIPosition2) ||  false  ) ) {tomMatch18NameNumbertom_anti_constraints_status= (  false  && tomMatch18NameNumbertom_anti_constraints_status ) ; } else {tomMatch18NameNumbertom_anti_constraints_status= (  true  && tomMatch18NameNumbertom_anti_constraints_status ) ; } }tomMatch19NameNumberANTIList1=tomMatch19NameNumberANTISave2; } }tomMatch19NameNumberANTIEnd1=tom_get_tail_concHook_HookList(tomMatch19NameNumberANTIEnd1); } }tomMatch19NameNumberANTIList1=tomMatch19NameNumberANTIBegin1; } } } } } } else {tomMatch18NameNumbertom_anti_constraints_status= (  true  && tomMatch18NameNumbertom_anti_constraints_status ) ; } if ((tomMatch18NameNumbertom_anti_constraints_status ==  true )) { if ( true ) {


        writer.write("\n        public static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" make("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList)+") {\n          proto.initHashCode("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childList(slotList)+");\n          return ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+") shared.SingletonSharedObjectFactory.getInstance().build(proto);\n        }\n  "




);
       } }tomMatch18NameNumbertom_anti_constraints_status= true ; } } }lbl: { if ( ( tom_is_fun_sym_concHook(tomMatch18Position1) ||  false  ) ) { {int tomMatch18Position1Index1=0; { tom.gom.adt.objects.types.HookList  tomMatch18Position1List1=tomMatch18Position1; { tom.gom.adt.objects.types.HookList  tomMatch18Position1Begin1=tomMatch18Position1List1; { tom.gom.adt.objects.types.HookList  tomMatch18Position1End1=tomMatch18Position1List1; { while (!(tom_is_empty_concHook_HookList(tomMatch18Position1End1))) {tomMatch18Position1List1=tomMatch18Position1End1; { { tom.gom.adt.objects.types.HookList  tomMatch18Position1Save2=tomMatch18Position1List1; { { tom.gom.adt.objects.types.Hook  tomMatch18Position1Position2=tom_get_head_concHook_HookList(tomMatch18Position1List1);tomMatch18Position1Index1=tomMatch18Position1Index1 + 1;tomMatch18Position1List1=tom_get_tail_concHook_HookList(tomMatch18Position1List1); if ( ( tom_is_fun_sym_MakeHook(tomMatch18Position1Position2) ||  false  ) ) { { tom.gom.adt.objects.types.SlotFieldList  tom_args=tom_get_slot_MakeHook_HookArguments(tomMatch18Position1Position2); if ( true ) {



        writer.write("\n      private static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+" realMake("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childListWithType(slotList)+") {\n        proto.initHashCode("/* Generated by TOM (version 2.5alpha): Do not edit this file */+childList(slotList)+");\n        return ("/* Generated by TOM (version 2.5alpha): Do not edit this file */+className()+") shared.SingletonSharedObjectFactory.getInstance().build(proto);\n      }\n      public static "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(sortName)+" make("/* Generated by TOM (version 2.5alpha): Do not edit this file */+unprotectedChildListWithType(tom_args)+") {\n  "





);
        SlotFieldList bargs = generateMakeHooks(hooks,null,writer);
        writer.write("\n        return realMake("/* Generated by TOM (version 2.5alpha): Do not edit this file */+unprotectedChildList(bargs)+");\n      }\n  "


);
        mapping.generate(writer); 
        break lbl;
       } } } }tomMatch18Position1List1=tomMatch18Position1Save2; } }tomMatch18Position1End1=tom_get_tail_concHook_HookList(tomMatch18Position1End1); } }tomMatch18Position1List1=tomMatch18Position1Begin1; } } } } } }} } }

  }

  public SlotFieldList generateMakeHooks(
      HookList other,
      SlotFieldList oArgs, /* will be null if it is the first hook */
      java.io.Writer writer)
    throws java.io.IOException {
     if(other instanceof  tom.gom.adt.objects.types.HookList ) { { tom.gom.adt.objects.types.HookList  tomMatch20Position1=(( tom.gom.adt.objects.types.HookList )other); {boolean tomMatch20NameNumbertom_anti_constraints_status= true ; if ( ( tom_is_fun_sym_concHook(tomMatch20Position1) ||  false  ) ) { {int tomMatch20Position1Index1=0; { tom.gom.adt.objects.types.HookList  tomMatch20Position1List1=tomMatch20Position1; { tom.gom.adt.objects.types.HookList  tomMatch20Position1Save1=tomMatch20Position1List1; { if (!(tom_is_empty_concHook_HookList(tomMatch20Position1List1))) { { tom.gom.adt.objects.types.Hook  _tom_fresh_var_0=tom_get_head_concHook_HookList(tomMatch20Position1List1);tomMatch20Position1Index1=tomMatch20Position1Index1 + 1;tomMatch20Position1List1=tom_get_tail_concHook_HookList(tomMatch20Position1List1); { tom.gom.adt.objects.types.HookList  tom_tail=tomMatch20Position1List1; { if ( ( tom_is_fun_sym_MakeHook(_tom_fresh_var_0) ||  false  ) ) {tomMatch20NameNumbertom_anti_constraints_status= (  false  && tomMatch20NameNumbertom_anti_constraints_status ) ; } else {tomMatch20NameNumbertom_anti_constraints_status= (  true  && tomMatch20NameNumbertom_anti_constraints_status ) ; } if ((tomMatch20NameNumbertom_anti_constraints_status ==  true )) { if ( true ) {

        /* skip non Make hooks */
        return generateMakeHooks(tom_tail, oArgs, writer);
       } }tomMatch20NameNumbertom_anti_constraints_status= true ; } } } }tomMatch20Position1List1=tomMatch20Position1Save1; } } } } } } if ( ( tom_is_fun_sym_concHook(tomMatch20Position1) ||  false  ) ) { {int tomMatch20Position1Index1=0; { tom.gom.adt.objects.types.HookList  tomMatch20Position1List1=tomMatch20Position1; { tom.gom.adt.objects.types.HookList  tomMatch20Position1Save1=tomMatch20Position1List1; { if (!(tom_is_empty_concHook_HookList(tomMatch20Position1List1))) { { tom.gom.adt.objects.types.Hook  tomMatch20Position1Position1=tom_get_head_concHook_HookList(tomMatch20Position1List1);tomMatch20Position1Index1=tomMatch20Position1Index1 + 1;tomMatch20Position1List1=tom_get_tail_concHook_HookList(tomMatch20Position1List1); if ( ( tom_is_fun_sym_MakeHook(tomMatch20Position1Position1) ||  false  ) ) { { tom.gom.adt.objects.types.SlotFieldList  tom_args=tom_get_slot_MakeHook_HookArguments(tomMatch20Position1Position1); { tom.gom.adt.code.types.Code  tom_code=tom_get_slot_MakeHook_Code(tomMatch20Position1Position1); { tom.gom.adt.objects.types.HookList  tom_tail=tomMatch20Position1List1; if ( true ) {

        /* Rename the previous arguments according to new, if needed */
        if(oArgs != null && oArgs != tom_args) {
          recVarNameRemap(oArgs,tom_args, writer);
        }
        /* Make sure we defeat java dead code detection */
        writer.write("if (true) {");
        CodeGen.generateCode(tom_code,writer);
        writer.write("}");
        return generateMakeHooks(tom_tail, tom_args, writer);
       } } } } } } }tomMatch20Position1List1=tomMatch20Position1Save1; } } } } } } }

    return oArgs;
  }

  private void recVarNameRemap(
      SlotFieldList oargs,
      SlotFieldList nargs,
      java.io.Writer writer)
  throws java.io.IOException {
     if(oargs instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch22Position1=(( tom.gom.adt.objects.types.SlotFieldList )oargs); if(nargs instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch22Position2=(( tom.gom.adt.objects.types.SlotFieldList )nargs); if ( ( tom_is_fun_sym_concSlotField(tomMatch22Position1) ||  false  ) ) { {int tomMatch22Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch22Position1List1=tomMatch22Position1; if (tom_is_empty_concSlotField_SlotFieldList(tomMatch22Position1List1)) { if ( ( tom_is_fun_sym_concSlotField(tomMatch22Position2) ||  false  ) ) { {int tomMatch22Position2Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch22Position2List1=tomMatch22Position2; if (tom_is_empty_concSlotField_SlotFieldList(tomMatch22Position2List1)) { if ( true ) {

        return ;
       } } } } } } } } } if ( ( tom_is_fun_sym_concSlotField(tomMatch22Position1) ||  false  ) ) { {int tomMatch22Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch22Position1List1=tomMatch22Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch22Position1Save1=tomMatch22Position1List1; { if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch22Position1List1))) { { tom.gom.adt.objects.types.SlotField  tomMatch22Position1Position1=tom_get_head_concSlotField_SlotFieldList(tomMatch22Position1List1);tomMatch22Position1Index1=tomMatch22Position1Index1 + 1;tomMatch22Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch22Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch22Position1Position1) ||  false  ) ) { { String  tom_oargName=tom_get_slot_SlotField_Name(tomMatch22Position1Position1); { tom.gom.adt.objects.types.ClassName  tom_odomain=tom_get_slot_SlotField_Domain(tomMatch22Position1Position1); { tom.gom.adt.objects.types.SlotFieldList  tom_to=tomMatch22Position1List1; if ( ( tom_is_fun_sym_concSlotField(tomMatch22Position2) ||  false  ) ) { {int tomMatch22Position2Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch22Position2List1=tomMatch22Position2; { tom.gom.adt.objects.types.SlotFieldList  tomMatch22Position2Save1=tomMatch22Position2List1; { if (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch22Position2List1))) { { tom.gom.adt.objects.types.SlotField  tomMatch22Position2Position1=tom_get_head_concSlotField_SlotFieldList(tomMatch22Position2List1);tomMatch22Position2Index1=tomMatch22Position2Index1 + 1;tomMatch22Position2List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch22Position2List1); if ( ( tom_is_fun_sym_SlotField(tomMatch22Position2Position1) ||  false  ) ) { { String  tom_nargName=tom_get_slot_SlotField_Name(tomMatch22Position2Position1); { tom.gom.adt.objects.types.ClassName  tom_ndomain=tom_get_slot_SlotField_Domain(tomMatch22Position2Position1); { tom.gom.adt.objects.types.SlotFieldList  tom_tn=tomMatch22Position2List1; if ( true ) {


        if (!(tom_odomain==tom_ndomain)) {
          throw new GomRuntimeException(
              "OperatorTemplate: incompatible args "+
              "should be rejected by typechecker");
        } else if (!tom_oargName.equals(tom_nargName)) {
          /* XXX: the declaration should be omitted if nargName was previously
           * used */
          writer.write("\n    "/* Generated by TOM (version 2.5alpha): Do not edit this file */+fullClassName(tom_ndomain)+" "/* Generated by TOM (version 2.5alpha): Do not edit this file */+tom_nargName+" = "/* Generated by TOM (version 2.5alpha): Do not edit this file */+tom_oargName+";\n"

);
        } /* else nothing to rename */
        recVarNameRemap(tom_to,tom_tn, writer);
        return;
       } } } } } } }tomMatch22Position2List1=tomMatch22Position2Save1; } } } } } } } } } } }tomMatch22Position1List1=tomMatch22Position1Save1; } } } } } } } } }

    throw new GomRuntimeException(
        "OperatorTemplate:recVarNameRemap failed " + oargs + " " + nargs);
  }

  public void generateTomMapping(Writer writer, ClassName basicStrategy)
      throws java.io.IOException {
     if(hooks instanceof  tom.gom.adt.objects.types.HookList ) { { tom.gom.adt.objects.types.HookList  tomMatch23Position1=(( tom.gom.adt.objects.types.HookList )hooks); {boolean tomMatch23NameNumbertom_anti_constraints_status= true ; { tom.gom.adt.objects.types.HookList  _tom_fresh_var_0=tomMatch23Position1; { if ( ( tom_is_fun_sym_concHook(_tom_fresh_var_0) ||  false  ) ) { {int tomMatch25NameNumberANTIIndex1=0; { tom.gom.adt.objects.types.HookList  tomMatch25NameNumberANTIList1=_tom_fresh_var_0; { tom.gom.adt.objects.types.HookList  tomMatch25NameNumberANTIBegin1=tomMatch25NameNumberANTIList1; { tom.gom.adt.objects.types.HookList  tomMatch25NameNumberANTIEnd1=tomMatch25NameNumberANTIList1; { while (!(tom_is_empty_concHook_HookList(tomMatch25NameNumberANTIEnd1))) {tomMatch25NameNumberANTIList1=tomMatch25NameNumberANTIEnd1; { { tom.gom.adt.objects.types.HookList  tomMatch25NameNumberANTISave2=tomMatch25NameNumberANTIList1; { { tom.gom.adt.objects.types.Hook  tomMatch25NameNumberANTIPosition2=tom_get_head_concHook_HookList(tomMatch25NameNumberANTIList1);tomMatch25NameNumberANTIIndex1=tomMatch25NameNumberANTIIndex1 + 1;tomMatch25NameNumberANTIList1=tom_get_tail_concHook_HookList(tomMatch25NameNumberANTIList1); if ( ( tom_is_fun_sym_MappingHook(tomMatch25NameNumberANTIPosition2) ||  false  ) ) {tomMatch23NameNumbertom_anti_constraints_status= (  false  && tomMatch23NameNumbertom_anti_constraints_status ) ; } else {tomMatch23NameNumbertom_anti_constraints_status= (  true  && tomMatch23NameNumbertom_anti_constraints_status ) ; } }tomMatch25NameNumberANTIList1=tomMatch25NameNumberANTISave2; } }tomMatch25NameNumberANTIEnd1=tom_get_tail_concHook_HookList(tomMatch25NameNumberANTIEnd1); } }tomMatch25NameNumberANTIList1=tomMatch25NameNumberANTIBegin1; } } } } } } else {tomMatch23NameNumbertom_anti_constraints_status= (  true  && tomMatch23NameNumbertom_anti_constraints_status ) ; } if ((tomMatch23NameNumbertom_anti_constraints_status ==  true )) { if ( true ) {

        writer.write("%op "+className(sortName)+" "+className()+"(");
        slotDecl(writer,slotList);
        writer.write(") {\n");
        writer.write("  is_fsym(t) { t instanceof "+fullClassName()+" }\n");
         if(slotList instanceof  tom.gom.adt.objects.types.SlotFieldList ) { { tom.gom.adt.objects.types.SlotFieldList  tomMatch24Position1=(( tom.gom.adt.objects.types.SlotFieldList )slotList); if ( ( tom_is_fun_sym_concSlotField(tomMatch24Position1) ||  false  ) ) { {int tomMatch24Position1Index1=0; { tom.gom.adt.objects.types.SlotFieldList  tomMatch24Position1List1=tomMatch24Position1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch24Position1Begin1=tomMatch24Position1List1; { tom.gom.adt.objects.types.SlotFieldList  tomMatch24Position1End1=tomMatch24Position1List1; { while (!(tom_is_empty_concSlotField_SlotFieldList(tomMatch24Position1End1))) {tomMatch24Position1List1=tomMatch24Position1End1; { { tom.gom.adt.objects.types.SlotFieldList  tomMatch24Position1Save2=tomMatch24Position1List1; { { tom.gom.adt.objects.types.SlotField  tomMatch24Position1Position2=tom_get_head_concSlotField_SlotFieldList(tomMatch24Position1List1);tomMatch24Position1Index1=tomMatch24Position1Index1 + 1;tomMatch24Position1List1=tom_get_tail_concSlotField_SlotFieldList(tomMatch24Position1List1); if ( ( tom_is_fun_sym_SlotField(tomMatch24Position1Position2) ||  false  ) ) { { String  tom_slotName=tom_get_slot_SlotField_Name(tomMatch24Position1Position2); { tom.gom.adt.objects.types.SlotField  tom_slot=tomMatch24Position1Position2; if ( true ) {

            writer.write("  get_slot("+tom_slotName+", t) ");
            writer.write("{ t."+getMethod(tom_slot)+"() }\n");
           } } } } }tomMatch24Position1List1=tomMatch24Position1Save2; } }tomMatch24Position1End1=tom_get_tail_concSlotField_SlotFieldList(tomMatch24Position1End1); } }tomMatch24Position1List1=tomMatch24Position1Begin1; } } } } } } } }

        writer.write("  make(");
        slotArgs(writer,slotList);
        writer.write(") { ");
        writer.write(fullClassName());
        writer.write(".make(");
        slotArgs(writer,slotList);
        writer.write(")}\n");
        writer.write("}\n");
        writer.write("\n");
        return;
       } }tomMatch23NameNumbertom_anti_constraints_status= true ; } } } if ( ( tom_is_fun_sym_concHook(tomMatch23Position1) ||  false  ) ) { {int tomMatch23Position1Index1=0; { tom.gom.adt.objects.types.HookList  tomMatch23Position1List1=tomMatch23Position1; { tom.gom.adt.objects.types.HookList  tomMatch23Position1Begin1=tomMatch23Position1List1; { tom.gom.adt.objects.types.HookList  tomMatch23Position1End1=tomMatch23Position1List1; { while (!(tom_is_empty_concHook_HookList(tomMatch23Position1End1))) {tomMatch23Position1List1=tomMatch23Position1End1; { { tom.gom.adt.objects.types.HookList  tomMatch23Position1Save2=tomMatch23Position1List1; { { tom.gom.adt.objects.types.Hook  tomMatch23Position1Position2=tom_get_head_concHook_HookList(tomMatch23Position1List1);tomMatch23Position1Index1=tomMatch23Position1Index1 + 1;tomMatch23Position1List1=tom_get_tail_concHook_HookList(tomMatch23Position1List1); if ( ( tom_is_fun_sym_MappingHook(tomMatch23Position1Position2) ||  false  ) ) { { tom.gom.adt.code.types.Code  tom_code=tom_get_slot_MappingHook_Code(tomMatch23Position1Position2); if ( true ) {

        CodeGen.generateCode(tom_code,writer);
       } } } }tomMatch23Position1List1=tomMatch23Position1Save2; } }tomMatch23Position1End1=tom_get_tail_concHook_HookList(tomMatch23Position1End1); } }tomMatch23Position1List1=tomMatch23Position1Begin1; } } } } } } } }

    return;
  }
}

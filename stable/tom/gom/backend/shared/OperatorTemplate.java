/* Generated by TOM (version 2.6): Do not edit this file *//*
 * Gom
 *
 * Copyright (c) 2006-2008, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.backend.shared;

import java.io.*;
import java.util.*;
import java.util.logging.*;
import tom.gom.backend.TemplateHookedClass;
import tom.gom.backend.TemplateClass;
import tom.gom.backend.CodeGen;
import tom.gom.tools.GomEnvironment;
import tom.gom.tools.error.GomRuntimeException;
import tom.gom.adt.objects.types.*;
import tom.platform.OptionManager;

public class OperatorTemplate extends TemplateHookedClass {
  ClassName abstractType;
  ClassName extendsType;
  ClassName sortName;
  SlotFieldList slotList;
  boolean multithread;
  boolean maximalsharing;

  /* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file */  /* Generated by TOM (version 2.6): Do not edit this file */    public static   tom.gom.adt.objects.types.SlotFieldList  tom_append_list_ConcSlotField( tom.gom.adt.objects.types.SlotFieldList l1,  tom.gom.adt.objects.types.SlotFieldList  l2) {     if( l1.isEmptyConcSlotField() ) {       return l2;     } else if( l2.isEmptyConcSlotField() ) {       return l1;     } else if(  l1.getTailConcSlotField() .isEmptyConcSlotField() ) {       return  tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField.make( l1.getHeadConcSlotField() ,l2) ;     } else {       return  tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField.make( l1.getHeadConcSlotField() ,tom_append_list_ConcSlotField( l1.getTailConcSlotField() ,l2)) ;     }   }   public static   tom.gom.adt.objects.types.SlotFieldList  tom_get_slice_ConcSlotField( tom.gom.adt.objects.types.SlotFieldList  begin,  tom.gom.adt.objects.types.SlotFieldList  end, tom.gom.adt.objects.types.SlotFieldList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcSlotField()  ||  (end== tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField.make( begin.getHeadConcSlotField() ,( tom.gom.adt.objects.types.SlotFieldList )tom_get_slice_ConcSlotField( begin.getTailConcSlotField() ,end,tail)) ;   }      public static   tom.gom.adt.objects.types.HookList  tom_append_list_ConcHook( tom.gom.adt.objects.types.HookList l1,  tom.gom.adt.objects.types.HookList  l2) {     if( l1.isEmptyConcHook() ) {       return l2;     } else if( l2.isEmptyConcHook() ) {       return l1;     } else if(  l1.getTailConcHook() .isEmptyConcHook() ) {       return  tom.gom.adt.objects.types.hooklist.ConsConcHook.make( l1.getHeadConcHook() ,l2) ;     } else {       return  tom.gom.adt.objects.types.hooklist.ConsConcHook.make( l1.getHeadConcHook() ,tom_append_list_ConcHook( l1.getTailConcHook() ,l2)) ;     }   }   public static   tom.gom.adt.objects.types.HookList  tom_get_slice_ConcHook( tom.gom.adt.objects.types.HookList  begin,  tom.gom.adt.objects.types.HookList  end, tom.gom.adt.objects.types.HookList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcHook()  ||  (end== tom.gom.adt.objects.types.hooklist.EmptyConcHook.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.objects.types.hooklist.ConsConcHook.make( begin.getHeadConcHook() ,( tom.gom.adt.objects.types.HookList )tom_get_slice_ConcHook( begin.getTailConcHook() ,end,tail)) ;   }    

  public OperatorTemplate(File tomHomePath,
                          OptionManager manager,
                          List importList, 	
                          GomClass gomClass,
                          TemplateClass mapping,
                          boolean multithread,
                          boolean maximalsharing) {
    super(gomClass,manager,tomHomePath,importList,mapping);
    this.multithread = multithread;
    this.maximalsharing = maximalsharing;
    {{ Object tomMatch424NameNumber_freshVar_0=gomClass;if ( (tomMatch424NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.GomClass) ) {{  tom.gom.adt.objects.types.GomClass  tomMatch424NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.GomClass )tomMatch424NameNumber_freshVar_0);{  tom.gom.adt.objects.types.GomClass  tomMatch424NameNumber_freshVar_5=tomMatch424NameNumber_freshSubject_1;if ( (tomMatch424NameNumber_freshVar_5 instanceof tom.gom.adt.objects.types.gomclass.OperatorClass) ) {{  tom.gom.adt.objects.types.ClassName  tomMatch424NameNumber_freshVar_1= tomMatch424NameNumber_freshVar_5.getAbstractType() ;{  tom.gom.adt.objects.types.ClassName  tomMatch424NameNumber_freshVar_2= tomMatch424NameNumber_freshVar_5.getExtendsType() ;{  tom.gom.adt.objects.types.ClassName  tomMatch424NameNumber_freshVar_3= tomMatch424NameNumber_freshVar_5.getSortName() ;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch424NameNumber_freshVar_4= tomMatch424NameNumber_freshVar_5.getSlotFields() ;




        this.abstractType = tomMatch424NameNumber_freshVar_1;
        this.extendsType = tomMatch424NameNumber_freshVar_2;;
        this.sortName = tomMatch424NameNumber_freshVar_3;
        this.slotList = tomMatch424NameNumber_freshVar_4;
        return;
      }}}}}}}}}}

    throw new GomRuntimeException(
        "Bad argument for OperatorTemplate: " + gomClass);
  }

  public void generate(java.io.Writer writer) throws java.io.IOException {

writer.write(
"\npackage "/* Generated by TOM (version 2.6): Do not edit this file */+getPackage()+";\n"/* Generated by TOM (version 2.6): Do not edit this file */+generateImport()+"\n"


);

if (maximalsharing) {
  writer.write(
"\npublic final class "/* Generated by TOM (version 2.6): Do not edit this file */+className()+" extends "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(extendsType)+" implements tom.library.sl.Visitable "/* Generated by TOM (version 2.6): Do not edit this file */+generateInterface()+" {\n  "/* Generated by TOM (version 2.6): Do not edit this file */+generateBlock()+"\n  private static String symbolName = \""/* Generated by TOM (version 2.6): Do not edit this file */+className()+"\";\n"



);


  if(slotList.length() > 0) {
    writer.write("\n\n  private "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"() {}\n  private int hashCode;\n  private static "/* Generated by TOM (version 2.6): Do not edit this file */+className()+" proto = new "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"();\n  "




);
  } else {
    writer.write("\n\n  private "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"() {}\n  private static int hashCode = hashFunction();\n  private static "/* Generated by TOM (version 2.6): Do not edit this file */+className()+" proto = ("/* Generated by TOM (version 2.6): Do not edit this file */+className()+") factory.build(new "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"());\n  "




);
  }
} else {
  writer.write(
"\npublic final class "/* Generated by TOM (version 2.6): Do not edit this file */+className()+" extends "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(extendsType)+" implements Cloneable, tom.library.sl.Visitable "/* Generated by TOM (version 2.6): Do not edit this file */+generateInterface()+" {\n  "/* Generated by TOM (version 2.6): Do not edit this file */+generateBlock()+"\n  private static String symbolName = \""/* Generated by TOM (version 2.6): Do not edit this file */+className()+"\";\n"



);


// generate a private constructor that takes as arguments the operator arguments
  writer.write("\n\n  private "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"("/* Generated by TOM (version 2.6): Do not edit this file */+childListWithType(slotList)+") {\n  "


);
  generateMembersInit(writer);
  writer.write("\n  }\n  "

);
}

  if (!hooks.isEmptyConcHook()) {
    mapping.generate(writer); 
  }
  generateMembers(writer);
  generateBody(writer);
  writer.write("\n}\n"

);
  }

  private void generateBody(java.io.Writer writer) throws java.io.IOException {
    writer.write("\n    /* static constructor */\n"

);
generateConstructor(writer);

if(slotList.length()>0) {

if (maximalsharing) {
writer.write("\n  private void init("/* Generated by TOM (version 2.6): Do not edit this file */+childListWithType(slotList) + (slotList.isEmptyConcSlotField()?"":", ") +"int hashCode) {\n"

);
generateMembersInit(writer);
writer.write("\n    this.hashCode = hashCode;\n  }\n\n  private void initHashCode("/* Generated by TOM (version 2.6): Do not edit this file */+childListWithType(slotList)+") {\n"




);
generateMembersInit(writer);
writer.write("\n  this.hashCode = hashFunction();\n  }\n"


);
}

writer.write("\n  /* name and arity */\n  @Override\n  public String symbolName() {\n    return \""/* Generated by TOM (version 2.6): Do not edit this file */+className()+"\";\n  }\n\n  private int getArity() {\n    return "/* Generated by TOM (version 2.6): Do not edit this file */+slotList.length()+";\n  }\n"









);


if (maximalsharing) {
if(multithread) {
  writer.write("\n  public shared.SharedObject duplicate() {\n    // the proto is a fresh object: no need to clone it again\n    return this;\n  }\n  "




);
} else {
  writer.write("\n  public shared.SharedObject duplicate() {\n    "/* Generated by TOM (version 2.6): Do not edit this file */+className()+" clone = new "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"();\n    clone.init("/* Generated by TOM (version 2.6): Do not edit this file */+childList(slotList) + (slotList.isEmptyConcSlotField()?"":", ") +"hashCode);\n    return clone;\n  }\n  "





);
 }
}

} else {
    // case: constant
writer.write("\n  /* name and arity */\n  @Override\n  public String symbolName() {\n    return \""/* Generated by TOM (version 2.6): Do not edit this file */+className()+"\";\n  }\n\n  private static int getArity() {\n    return 0;\n  }\n\n"










);

if (maximalsharing) {
writer.write("\n  public shared.SharedObject duplicate() {\n    // the proto is a constant object: no need to clone it\n    return this;\n    //return new "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"();\n  }\n"





);
}

  }

  /*
   * Generate a toStringBuilder method if the operator is not associative
   */
  if (sortName == extendsType) {
writer.write("\n  @Override\n  public void toStringBuilder(java.lang.StringBuilder buffer) {\n    buffer.append(\""/* Generated by TOM (version 2.6): Do not edit this file */+className()+"(\");\n    "/* Generated by TOM (version 2.6): Do not edit this file */+toStringChilds("buffer")+"\n    buffer.append(\")\");\n  }\n"






);
  }

writer.write("\n\n  /**\n    * This method implements a lexicographic order\n    */\n  @Override\n  public int compareToLPO(Object o) {\n    /*\n     * We do not want to compare with any object, only members of the module\n     * In case of invalid argument, throw a ClassCastException, as the java api\n     * asks for it\n     */\n    "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" ao = ("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+") o;\n    /* return 0 for equality */\n    if (ao == this)\n      return 0;\n    /* compare the symbols */\n    int symbCmp = this.symbolName().compareTo(ao.symbolName());\n    if (symbCmp != 0)\n      return symbCmp;\n    /* compare the childs */\n    "/* Generated by TOM (version 2.6): Do not edit this file */+genCompareChilds("ao","compareToLPO")+"\n    throw new RuntimeException(\"Unable to compare\");\n  }\n"























);

if (maximalsharing) {
writer.write("\n  @Override\n  public int compareTo(Object o) {\n    /*\n     * We do not want to compare with any object, only members of the module\n     * In case of invalid argument, throw a ClassCastException, as the java api\n     * asks for it\n     */\n    "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" ao = ("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+") o;\n    /* return 0 for equality */\n    if (ao == this)\n      return 0;\n    /* use the hash values to discriminate */\n    \n    if(hashCode != ao.hashCode())\n      return (hashCode < ao.hashCode())?-1:1;\n\n    /* If not, compare the symbols : back to the normal order */\n    int symbCmp = this.symbolName().compareTo(ao.symbolName());\n    if (symbCmp != 0)\n      return symbCmp;\n    /* last resort: compare the childs */\n    "/* Generated by TOM (version 2.6): Do not edit this file */+genCompareChilds("ao","compareTo")+"\n    throw new RuntimeException(\"Unable to compare\");\n  }\n\n //shared.SharedObject\n  @Override\n  public final int hashCode() {\n    return hashCode;\n  }\n\n  public final boolean equivalent(shared.SharedObject obj) {\n    if(obj instanceof "/* Generated by TOM (version 2.6): Do not edit this file */+className()+") {\n"/* Generated by TOM (version 2.6): Do not edit this file */+generateMembersEqualityTest("peer")+"\n    }\n    return false;\n  }\n\n"






































);
} else {
  //XXX: compareTo must be correctly implemented
writer.write("\n  @Override\n  public int compareTo(Object o) {\n    throw new UnsupportedOperationException(\"Unable to compare\"); \n  }\n\n  @Override\n  public Object clone() {\n"







);

SlotFieldList slots = slotList;
if(slots.isEmptyConcSlotField()) {
  writer.write("\n      return new "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"();\n  }\n      "


);
} else {

SlotField head = slots.getHeadConcSlotField();
slots = slots.getTailConcSlotField();

if (GomEnvironment.getInstance().isBuiltinClass(head.getDomain())) {
  writer.write("\n      return new "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"("/* Generated by TOM (version 2.6): Do not edit this file */+getMethod(head)+"()"
);

} else {
  writer.write("\n      return new "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"( ("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(head.getDomain())+") "/* Generated by TOM (version 2.6): Do not edit this file */+getMethod(head)+"().clone()"
);
}

while(!slots.isEmptyConcSlotField()) {
  head = slots.getHeadConcSlotField();
  slots = slots.getTailConcSlotField();
  if (GomEnvironment.getInstance().isBuiltinClass(head.getDomain())) {
   writer.write(","/* Generated by TOM (version 2.6): Do not edit this file */+getMethod(head)+"()");
  } else {
  writer.write(",("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(head.getDomain())+") "/* Generated by TOM (version 2.6): Do not edit this file */+getMethod(head)+"().clone()");
  }
}
writer.write(");\n}");
}

writer.write("\n  @Override\n  public final boolean deepEquals(Object o) {\n    if (o instanceof "/* Generated by TOM (version 2.6): Do not edit this file */+className()+") {\n      "/* Generated by TOM (version 2.6): Do not edit this file */+className()+" typed_o = ("/* Generated by TOM (version 2.6): Do not edit this file */+className()+") o;\n"




);

slots = slotList;
if(slots.isEmptyConcSlotField()) {
  writer.write("\n      return true;\n      "

);
} else {
SlotField head = slots.getHeadConcSlotField();
slots = slots.getTailConcSlotField();
if (GomEnvironment.getInstance().isBuiltinClass(head.getDomain())) {
  writer.write("\n      return "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(head.getName())+" == typed_o."/* Generated by TOM (version 2.6): Do not edit this file */+getMethod(head)+"()\n      "

);

} else {
  writer.write("\n      return "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(head.getName())+".deepEquals(typed_o."/* Generated by TOM (version 2.6): Do not edit this file */+getMethod(head)+"())\n      "

);
}

while(!slots.isEmptyConcSlotField()) {
  head = slots.getHeadConcSlotField();
  slots = slots.getTailConcSlotField();
  if (GomEnvironment.getInstance().isBuiltinClass(head.getDomain())) {
    writer.write("\n        && "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(head.getName())+" == typed_o."/* Generated by TOM (version 2.6): Do not edit this file */+getMethod(head)+"()\n        "

);

  } else {
    writer.write("\n      && "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(head.getName())+".deepEquals(typed_o."/* Generated by TOM (version 2.6): Do not edit this file */+getMethod(head)+"())\n      "

);
  }
}
writer.write(";");
}
writer.write("\n    }\n    return false;\n    }\n  "



);
}

writer.write("\n   //"/* Generated by TOM (version 2.6): Do not edit this file */+className(sortName)+" interface\n  @Override\n  public boolean "/* Generated by TOM (version 2.6): Do not edit this file */+isOperatorMethod(className)+"() {\n    return true;\n  }\n  "





);

generateGetters(writer);

    writer.write("\n  /* AbstractType */\n  @Override\n  public aterm.ATerm toATerm() {\n    return atermFactory.makeAppl(\n      atermFactory.makeAFun(symbolName(),getArity(),false),\n      new aterm.ATerm[] {"/* Generated by TOM (version 2.6): Do not edit this file */+generateToATermChilds()+"});\n  }\n\n  public static "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(sortName)+" fromTerm(aterm.ATerm trm) {\n    if(trm instanceof aterm.ATermAppl) {\n      aterm.ATermAppl appl = (aterm.ATermAppl) trm;\n      if(symbolName.equals(appl.getName())) {\n        return make(\n"/* Generated by TOM (version 2.6): Do not edit this file */+generatefromATermChilds("appl")+"\n        );\n      }\n    }\n    return null;\n  }\n\n"




















);


    writer.write("\n  /* Visitable */\n  public int getChildCount() {\n    return "/* Generated by TOM (version 2.6): Do not edit this file */+visitableCount()+";\n  }\n\n  public tom.library.sl.Visitable getChildAt(int index) {\n    switch(index) {\n"/* Generated by TOM (version 2.6): Do not edit this file */+getCases()+"\n      default: throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable v) {\n    switch(index) {\n"/* Generated by TOM (version 2.6): Do not edit this file */+makeCases("v")+"\n      default: throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] childs) {\n    if (childs.length == "/* Generated by TOM (version 2.6): Do not edit this file */+slotList.length()+") {\n      return "/* Generated by TOM (version 2.6): Do not edit this file */+arrayMake("childs")+";\n    } else {\n      throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public tom.library.sl.Visitable[] getChildren() {\n    return new tom.library.sl.Visitable[] { "/* Generated by TOM (version 2.6): Do not edit this file */+visitableList(slotList)+" };\n  }\n"






























);

if (maximalsharing) {
    writer.write("\n    /* internal use */\n  protected"/* Generated by TOM (version 2.6): Do not edit this file */+((slotList.length()==0)?" static":"")+" int hashFunction() {\n    int a, b, c;\n    /* Set up the internal state */\n    a = 0x9e3779b9; /* the golden ratio; an arbitrary value */\n    b = ("/* Generated by TOM (version 2.6): Do not edit this file */+shared.HashFunctions.stringHashFunction(fullClassName(),slotList.length())+"<<8);\n    c = getArity();\n    /* -------------------------------------- handle most of the key */\n    /* ------------------------------------ handle the last 11 bytes */\n"









);
generateHashArgs(writer);
writer.write("\n    a -= b; a -= c; a ^= (c >> 13);\n    b -= c; b -= a; b ^= (a << 8);\n    c -= a; c -= b; c ^= (b >> 13);\n    a -= b; a -= c; a ^= (c >> 12);\n    b -= c; b -= a; b ^= (a << 16);\n    c -= a; c -= b; c ^= (b >> 5);\n    a -= b; a -= c; a ^= (c >> 3);\n    b -= c; b -= a; b ^= (a << 10);\n    c -= a; c -= b; c ^= (b >> 15);\n    /* ------------------------------------------- report the result */\n    return c;\n  }\n"












);
}

}

  private void generateMembers(java.io.Writer writer) throws java.io.IOException {
    {{ Object tomMatch425NameNumber_freshVar_0=slotList;if ( (tomMatch425NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch425NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch425NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch425NameNumber_freshVar_1=tomMatch425NameNumber_freshSubject_1;if ( ((tomMatch425NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch425NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch425NameNumber_begin_3=tomMatch425NameNumber_freshVar_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch425NameNumber_end_4=tomMatch425NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch425NameNumber_freshVar_2=tomMatch425NameNumber_end_4;if (!( tomMatch425NameNumber_freshVar_2.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch425NameNumber_freshVar_9= tomMatch425NameNumber_freshVar_2.getHeadConcSlotField() ;if ( (tomMatch425NameNumber_freshVar_9 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch425NameNumber_freshVar_7= tomMatch425NameNumber_freshVar_9.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch425NameNumber_freshVar_8= tomMatch425NameNumber_freshVar_9.getDomain() ;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch425NameNumber_freshVar_5= tomMatch425NameNumber_freshVar_2.getTailConcSlotField() ;

        writer.write("  private ");
        writer.write(fullClassName(tomMatch425NameNumber_freshVar_8));
        writer.write(" ");
        writer.write(fieldName(tomMatch425NameNumber_freshVar_7));
        writer.write(";\n");
      }}}}}}}if ( tomMatch425NameNumber_end_4.isEmptyConcSlotField() ) {tomMatch425NameNumber_end_4=tomMatch425NameNumber_begin_3;} else {tomMatch425NameNumber_end_4= tomMatch425NameNumber_end_4.getTailConcSlotField() ;}}} while(!( (tomMatch425NameNumber_end_4==tomMatch425NameNumber_begin_3) ));}}}}}}}}

  }

  private void generateMembersInit(java.io.Writer writer) throws java.io.IOException {
    {{ Object tomMatch426NameNumber_freshVar_0=slotList;if ( (tomMatch426NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch426NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch426NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch426NameNumber_freshVar_1=tomMatch426NameNumber_freshSubject_1;if ( ((tomMatch426NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch426NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch426NameNumber_begin_3=tomMatch426NameNumber_freshVar_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch426NameNumber_end_4=tomMatch426NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch426NameNumber_freshVar_2=tomMatch426NameNumber_end_4;if (!( tomMatch426NameNumber_freshVar_2.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch426NameNumber_freshVar_9= tomMatch426NameNumber_freshVar_2.getHeadConcSlotField() ;if ( (tomMatch426NameNumber_freshVar_9 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch426NameNumber_freshVar_7= tomMatch426NameNumber_freshVar_9.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch426NameNumber_freshVar_8= tomMatch426NameNumber_freshVar_9.getDomain() ;{  String  tom_fieldName=tomMatch426NameNumber_freshVar_7;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch426NameNumber_freshVar_8;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch426NameNumber_freshVar_5= tomMatch426NameNumber_freshVar_2.getTailConcSlotField() ;

        writer.write("    this.");
        writer.write(fieldName(tom_fieldName));
        writer.write(" = ");
        writer.write(fieldName(tom_fieldName));
        if (GomEnvironment.getInstance().isBuiltinClass(tom_domain) && tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "String") )) {
          writer.write(".intern()");
        }
        writer.write(";\n");
      }}}}}}}}}if ( tomMatch426NameNumber_end_4.isEmptyConcSlotField() ) {tomMatch426NameNumber_end_4=tomMatch426NameNumber_begin_3;} else {tomMatch426NameNumber_end_4= tomMatch426NameNumber_end_4.getTailConcSlotField() ;}}} while(!( (tomMatch426NameNumber_end_4==tomMatch426NameNumber_begin_3) ));}}}}}}}}

  }

  private void generateGetters(java.io.Writer writer) throws java.io.IOException {
    SlotFieldList slots = slotList;
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      writer.write("\n  @Override\n  public "/* Generated by TOM (version 2.6): Do not edit this file */+slotDomain(head)+" "/* Generated by TOM (version 2.6): Do not edit this file */+getMethod(head)+"() {\n    return "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(head.getName())+";\n  }\n  "




);
      if (maximalsharing) {
      writer.write("\n  @Override\n  public "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(sortName)+" "/* Generated by TOM (version 2.6): Do not edit this file */+setMethod(head)+"("/* Generated by TOM (version 2.6): Do not edit this file */+slotDomain(head)+" set_arg) {\n    return make("/* Generated by TOM (version 2.6): Do not edit this file */+generateMakeArgsFor(head,"set_arg")+");\n  }"



);
      } else {
      writer.write("\n  @Override\n  public "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(sortName)+" "/* Generated by TOM (version 2.6): Do not edit this file */+setMethod(head)+"("/* Generated by TOM (version 2.6): Do not edit this file */+slotDomain(head)+" set_arg) {\n    "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(head.getName())+" = set_arg; \n    return this;\n  }"




);
      }
    }
  }

  private String generateToATermChilds() {
    StringBuilder res = new StringBuilder();
    SlotFieldList slots = slotList;
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      if (res.length()!=0) {
        res.append(", ");
      }
      toATermSlotField(res,head);
    }
    return res.toString();
  }

  private String generatefromATermChilds(String appl) {
    StringBuilder res = new StringBuilder();
    int index = 0;
    SlotFieldList slots = slotList;
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      if (res.length()!=0) {
        res.append(", ");
      }
      fromATermSlotField(res,head, appl+".getArgument("+index+")");
      index++;
    }
    return res.toString();
  }

  private String fieldName(String fieldName) {
    return "_"+fieldName;
  }

  private String childListWithType(SlotFieldList slots) {
    StringBuilder res = new StringBuilder();
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      {{ Object tomMatch427NameNumber_freshVar_0=head;if ( (tomMatch427NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotField) ) {{  tom.gom.adt.objects.types.SlotField  tomMatch427NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotField )tomMatch427NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotField  tomMatch427NameNumber_freshVar_3=tomMatch427NameNumber_freshSubject_1;if ( (tomMatch427NameNumber_freshVar_3 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch427NameNumber_freshVar_1= tomMatch427NameNumber_freshVar_3.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch427NameNumber_freshVar_2= tomMatch427NameNumber_freshVar_3.getDomain() ;

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(fullClassName(tomMatch427NameNumber_freshVar_2));
          res.append(" ");
          res.append(fieldName(tomMatch427NameNumber_freshVar_1));
        }}}}}}}}

    }
    return res.toString();
  }
  private String unprotectedChildListWithType(SlotFieldList slots) {
    StringBuilder res = new StringBuilder();
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      {{ Object tomMatch428NameNumber_freshVar_0=head;if ( (tomMatch428NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotField) ) {{  tom.gom.adt.objects.types.SlotField  tomMatch428NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotField )tomMatch428NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotField  tomMatch428NameNumber_freshVar_3=tomMatch428NameNumber_freshSubject_1;if ( (tomMatch428NameNumber_freshVar_3 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch428NameNumber_freshVar_1= tomMatch428NameNumber_freshVar_3.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch428NameNumber_freshVar_2= tomMatch428NameNumber_freshVar_3.getDomain() ;

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(fullClassName(tomMatch428NameNumber_freshVar_2));
          res.append(" ");
          res.append(tomMatch428NameNumber_freshVar_1);
        }}}}}}}}

    }
    return res.toString();
  }
  private String childList(SlotFieldList slots) {
    StringBuilder res = new StringBuilder();
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      {{ Object tomMatch429NameNumber_freshVar_0=head;if ( (tomMatch429NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotField) ) {{  tom.gom.adt.objects.types.SlotField  tomMatch429NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotField )tomMatch429NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotField  tomMatch429NameNumber_freshVar_2=tomMatch429NameNumber_freshSubject_1;if ( (tomMatch429NameNumber_freshVar_2 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch429NameNumber_freshVar_1= tomMatch429NameNumber_freshVar_2.getName() ;

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
          res.append(fieldName(tomMatch429NameNumber_freshVar_1));
        }}}}}}}

    }
    return res.toString();
  }
  private String unprotectedChildList(SlotFieldList slots) {
    StringBuilder res = new StringBuilder();
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      {{ Object tomMatch430NameNumber_freshVar_0=head;if ( (tomMatch430NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotField) ) {{  tom.gom.adt.objects.types.SlotField  tomMatch430NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotField )tomMatch430NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotField  tomMatch430NameNumber_freshVar_2=tomMatch430NameNumber_freshSubject_1;if ( (tomMatch430NameNumber_freshVar_2 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch430NameNumber_freshVar_1= tomMatch430NameNumber_freshVar_2.getName() ;

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
          res.append(tomMatch430NameNumber_freshVar_1);
        }}}}}}}

    }
    return res.toString();
  }
  private String generateMembersEqualityTest(String peer) {
    StringBuilder res = new StringBuilder();
    if(!slotList.isEmptyConcSlotField()) {
      res.append("\n      "/* Generated by TOM (version 2.6): Do not edit this file */+className()+" peer = ("/* Generated by TOM (version 2.6): Do not edit this file */+className()+") obj;"
);;
    }
    res.append("\n      return "
);
    {{ Object tomMatch431NameNumber_freshVar_0=slotList;if ( (tomMatch431NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch431NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch431NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch431NameNumber_freshVar_1=tomMatch431NameNumber_freshSubject_1;if ( ((tomMatch431NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch431NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch431NameNumber_begin_3=tomMatch431NameNumber_freshVar_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch431NameNumber_end_4=tomMatch431NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch431NameNumber_freshVar_2=tomMatch431NameNumber_end_4;if (!( tomMatch431NameNumber_freshVar_2.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch431NameNumber_freshVar_8= tomMatch431NameNumber_freshVar_2.getHeadConcSlotField() ;if ( (tomMatch431NameNumber_freshVar_8 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch431NameNumber_freshVar_7= tomMatch431NameNumber_freshVar_8.getName() ;{  String  tom_fieldName=tomMatch431NameNumber_freshVar_7;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch431NameNumber_freshVar_5= tomMatch431NameNumber_freshVar_2.getTailConcSlotField() ;

        res.append(fieldName(tom_fieldName));
        res.append("==");
        res.append(peer);
        res.append(".");
        res.append(fieldName(tom_fieldName));
        res.append(" && ");
      }}}}}}}if ( tomMatch431NameNumber_end_4.isEmptyConcSlotField() ) {tomMatch431NameNumber_end_4=tomMatch431NameNumber_begin_3;} else {tomMatch431NameNumber_end_4= tomMatch431NameNumber_end_4.getTailConcSlotField() ;}}} while(!( (tomMatch431NameNumber_end_4==tomMatch431NameNumber_begin_3) ));}}}}}}}}

    res.append("true;"); // to handle the "no childs" case
    return res.toString();
  }

  private String getCases() {
    StringBuilder res = new StringBuilder();
    int index = 0;
    {{ Object tomMatch432NameNumber_freshVar_0=slotList;if ( (tomMatch432NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch432NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch432NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch432NameNumber_freshVar_1=tomMatch432NameNumber_freshSubject_1;if ( ((tomMatch432NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch432NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch432NameNumber_begin_3=tomMatch432NameNumber_freshVar_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch432NameNumber_end_4=tomMatch432NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch432NameNumber_freshVar_2=tomMatch432NameNumber_end_4;if (!( tomMatch432NameNumber_freshVar_2.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch432NameNumber_freshVar_9= tomMatch432NameNumber_freshVar_2.getHeadConcSlotField() ;if ( (tomMatch432NameNumber_freshVar_9 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch432NameNumber_freshVar_7= tomMatch432NameNumber_freshVar_9.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch432NameNumber_freshVar_8= tomMatch432NameNumber_freshVar_9.getDomain() ;{  String  tom_fieldName=tomMatch432NameNumber_freshVar_7;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch432NameNumber_freshVar_8;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch432NameNumber_freshVar_5= tomMatch432NameNumber_freshVar_2.getTailConcSlotField() ;

        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          res.append("      case ");
          res.append(index);
          res.append(": return ");
          res.append(fieldName(tom_fieldName));
          res.append(";\n");
          index++;
        } else {
          res.append("      case ");
          res.append(index);
          res.append(": return new tom.library.sl.VisitableBuiltin<");
          res.append(primitiveToReferenceType(fullClassName(tom_domain)));
          res.append(">(");
          res.append(fieldName(tom_fieldName));
          res.append(");\n");
          index++;
        }
      }}}}}}}}}if ( tomMatch432NameNumber_end_4.isEmptyConcSlotField() ) {tomMatch432NameNumber_end_4=tomMatch432NameNumber_begin_3;} else {tomMatch432NameNumber_end_4= tomMatch432NameNumber_end_4.getTailConcSlotField() ;}}} while(!( (tomMatch432NameNumber_end_4==tomMatch432NameNumber_begin_3) ));}}}}}}}}

    return res.toString();
  }

  private String visitableList(SlotFieldList slots) {
    StringBuilder res = new StringBuilder();
    while(!slots.isEmptyConcSlotField()) {
      SlotField head = slots.getHeadConcSlotField();
      slots = slots.getTailConcSlotField();
      {{ Object tomMatch433NameNumber_freshVar_0=head;if ( (tomMatch433NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotField) ) {{  tom.gom.adt.objects.types.SlotField  tomMatch433NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotField )tomMatch433NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotField  tomMatch433NameNumber_freshVar_3=tomMatch433NameNumber_freshSubject_1;if ( (tomMatch433NameNumber_freshVar_3 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  tom.gom.adt.objects.types.ClassName  tomMatch433NameNumber_freshVar_1= tomMatch433NameNumber_freshVar_3.getDomain() ;{  String  tomMatch433NameNumber_freshVar_2= tomMatch433NameNumber_freshVar_3.getName() ;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch433NameNumber_freshVar_1;{  String  tom_name=tomMatch433NameNumber_freshVar_2;

          if (res.length()!=0) {
            res.append(", ");
          }
          res.append(" ");
        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          res.append(fieldName(tom_name));
        } else {
          res.append("new tom.library.sl.VisitableBuiltin<");
          res.append(primitiveToReferenceType(fullClassName(tom_domain)));
          res.append(">(");
          res.append(fieldName(tom_name));
          res.append(")");
        }
        }}}}}}}}}}

    }
    return res.toString();
  }


  private String visitableCount() {
    if(className().equals("ConsPath"+sortName.getName())) { 
      return "0";
    } else {
      return ""+slotList.length();
    }
  }

  private String arrayMake(String arrayName) {
    StringBuilder res = new StringBuilder("make(");
    int index = 0;
    {{ Object tomMatch434NameNumber_freshVar_0=slotList;if ( (tomMatch434NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch434NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch434NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch434NameNumber_freshVar_1=tomMatch434NameNumber_freshSubject_1;if ( ((tomMatch434NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch434NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch434NameNumber_begin_3=tomMatch434NameNumber_freshVar_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch434NameNumber_end_4=tomMatch434NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch434NameNumber_freshVar_2=tomMatch434NameNumber_end_4;if (!( tomMatch434NameNumber_freshVar_2.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch434NameNumber_freshVar_8= tomMatch434NameNumber_freshVar_2.getHeadConcSlotField() ;if ( (tomMatch434NameNumber_freshVar_8 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  tom.gom.adt.objects.types.ClassName  tomMatch434NameNumber_freshVar_7= tomMatch434NameNumber_freshVar_8.getDomain() ;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch434NameNumber_freshVar_7;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch434NameNumber_freshVar_5= tomMatch434NameNumber_freshVar_2.getTailConcSlotField() ;

        if(index>0) { res.append(", "); }
       if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
         res.append("(");
         res.append(fullClassName(tom_domain));
         res.append(") ");
         res.append(arrayName);
         res.append("[");
         res.append(index);
         res.append("]");
       } else {
         res.append("((tom.library.sl.VisitableBuiltin<");
         res.append(primitiveToReferenceType(fullClassName(tom_domain)));
         res.append(">)");
         res.append(arrayName);
         res.append("[");
         res.append(index);
         res.append("])");
         res.append(".getBuiltin()");
       }
       index++;
      }}}}}}}if ( tomMatch434NameNumber_end_4.isEmptyConcSlotField() ) {tomMatch434NameNumber_end_4=tomMatch434NameNumber_begin_3;} else {tomMatch434NameNumber_end_4= tomMatch434NameNumber_end_4.getTailConcSlotField() ;}}} while(!( (tomMatch434NameNumber_end_4==tomMatch434NameNumber_begin_3) ));}}}}}}}}

    res.append(")");
    return res.toString();
  }
private String makeCases(String argName) {
  StringBuilder res = new StringBuilder();
  int index = 0;
  {{ Object tomMatch435NameNumber_freshVar_0=slotList;if ( (tomMatch435NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch435NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch435NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch435NameNumber_freshVar_1=tomMatch435NameNumber_freshSubject_1;if ( ((tomMatch435NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch435NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch435NameNumber_begin_3=tomMatch435NameNumber_freshVar_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch435NameNumber_end_4=tomMatch435NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch435NameNumber_freshVar_2=tomMatch435NameNumber_end_4;if (!( tomMatch435NameNumber_freshVar_2.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch435NameNumber_freshVar_7= tomMatch435NameNumber_freshVar_2.getHeadConcSlotField() ;if ( (tomMatch435NameNumber_freshVar_7 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch435NameNumber_freshVar_5= tomMatch435NameNumber_freshVar_2.getTailConcSlotField() ;

      res.append("      case "+index+": return make("+generateMakeArgsFor(index, argName)+");\n");
      index++;
    }}}}}if ( tomMatch435NameNumber_end_4.isEmptyConcSlotField() ) {tomMatch435NameNumber_end_4=tomMatch435NameNumber_begin_3;} else {tomMatch435NameNumber_end_4= tomMatch435NameNumber_end_4.getTailConcSlotField() ;}}} while(!( (tomMatch435NameNumber_end_4==tomMatch435NameNumber_begin_3) ));}}}}}}}}

  return res.toString();
}
private String generateMakeArgsFor(int argIndex, String argName) {
  StringBuilder res = new StringBuilder();
  int index = 0;
  {{ Object tomMatch436NameNumber_freshVar_0=slotList;if ( (tomMatch436NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch436NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch436NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch436NameNumber_freshVar_1=tomMatch436NameNumber_freshSubject_1;if ( ((tomMatch436NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch436NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch436NameNumber_begin_3=tomMatch436NameNumber_freshVar_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch436NameNumber_end_4=tomMatch436NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch436NameNumber_freshVar_2=tomMatch436NameNumber_end_4;if (!( tomMatch436NameNumber_freshVar_2.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch436NameNumber_freshVar_9= tomMatch436NameNumber_freshVar_2.getHeadConcSlotField() ;if ( (tomMatch436NameNumber_freshVar_9 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch436NameNumber_freshVar_7= tomMatch436NameNumber_freshVar_9.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch436NameNumber_freshVar_8= tomMatch436NameNumber_freshVar_9.getDomain() ;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch436NameNumber_freshVar_8;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch436NameNumber_freshVar_5= tomMatch436NameNumber_freshVar_2.getTailConcSlotField() ;

      if(index>0) { res.append(", "); }
      if (GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
        res.append(getMethod( tomMatch436NameNumber_freshVar_2.getHeadConcSlotField() ));
        res.append("()");
      } else {
        if (index != argIndex) {
          res.append(fieldName(tomMatch436NameNumber_freshVar_7));
        } else {
          res.append("(");
          res.append(fullClassName(tom_domain));
          res.append(") ");
          res.append(argName);
        }
      }
      index++;
    }}}}}}}}if ( tomMatch436NameNumber_end_4.isEmptyConcSlotField() ) {tomMatch436NameNumber_end_4=tomMatch436NameNumber_begin_3;} else {tomMatch436NameNumber_end_4= tomMatch436NameNumber_end_4.getTailConcSlotField() ;}}} while(!( (tomMatch436NameNumber_end_4==tomMatch436NameNumber_begin_3) ));}}}}}}}}

  return res.toString();
}
private String generateMakeArgsFor(SlotField slot, String argName) {
  StringBuilder res = new StringBuilder();
  int fullindex = 0;
  {{ Object tomMatch437NameNumber_freshVar_0=slotList;if ( (tomMatch437NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch437NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch437NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch437NameNumber_freshVar_1=tomMatch437NameNumber_freshSubject_1;if ( ((tomMatch437NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch437NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch437NameNumber_begin_3=tomMatch437NameNumber_freshVar_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch437NameNumber_end_4=tomMatch437NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch437NameNumber_freshVar_2=tomMatch437NameNumber_end_4;if (!( tomMatch437NameNumber_freshVar_2.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch437NameNumber_freshVar_8= tomMatch437NameNumber_freshVar_2.getHeadConcSlotField() ;if ( (tomMatch437NameNumber_freshVar_8 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch437NameNumber_freshVar_7= tomMatch437NameNumber_freshVar_8.getName() ;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch437NameNumber_freshVar_5= tomMatch437NameNumber_freshVar_2.getTailConcSlotField() ;

      if(fullindex>0) { res.append(", "); }
      if ( tomMatch437NameNumber_freshVar_2.getHeadConcSlotField() == slot) {
        res.append(argName);
      } else {
        res.append(fieldName(tomMatch437NameNumber_freshVar_7));
      }
      fullindex++;
    }}}}}}if ( tomMatch437NameNumber_end_4.isEmptyConcSlotField() ) {tomMatch437NameNumber_end_4=tomMatch437NameNumber_begin_3;} else {tomMatch437NameNumber_end_4= tomMatch437NameNumber_end_4.getTailConcSlotField() ;}}} while(!( (tomMatch437NameNumber_end_4==tomMatch437NameNumber_begin_3) ));}}}}}}}}

  return res.toString();
}

  private String toStringChilds(String buffer) {
    if (0 == slotList.length()) {
      return "";
    }
    StringBuilder res = new StringBuilder();
    SlotFieldList slots = slotList;
		while(!slots.isEmptyConcSlotField()) {
			if(res.length()!=0) {
				res.append(""/* Generated by TOM (version 2.6): Do not edit this file */+buffer+".append(\",\");\n    "
);
			}
			SlotField head = slots.getHeadConcSlotField();
			slots = slots.getTailConcSlotField();
      toStringSlotField(res, head, fieldName(head.getName()), buffer);
		}
    return res.toString();
  }

  private String genCompareChilds(String oldOther, String compareFun) {
    StringBuilder res = new StringBuilder();
    String other = "tco";
    if(!slotList.isEmptyConcSlotField()) {
    res.append(""/* Generated by TOM (version 2.6): Do not edit this file */+className()+" "/* Generated by TOM (version 2.6): Do not edit this file */+other+" = ("/* Generated by TOM (version 2.6): Do not edit this file */+className()+") "/* Generated by TOM (version 2.6): Do not edit this file */+oldOther+";");
    }
    {{ Object tomMatch438NameNumber_freshVar_0=slotList;if ( (tomMatch438NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch438NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch438NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch438NameNumber_freshVar_1=tomMatch438NameNumber_freshSubject_1;if ( ((tomMatch438NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch438NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch438NameNumber_begin_3=tomMatch438NameNumber_freshVar_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch438NameNumber_end_4=tomMatch438NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch438NameNumber_freshVar_2=tomMatch438NameNumber_end_4;if (!( tomMatch438NameNumber_freshVar_2.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch438NameNumber_freshVar_9= tomMatch438NameNumber_freshVar_2.getHeadConcSlotField() ;if ( (tomMatch438NameNumber_freshVar_9 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch438NameNumber_freshVar_7= tomMatch438NameNumber_freshVar_9.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch438NameNumber_freshVar_8= tomMatch438NameNumber_freshVar_9.getDomain() ;{  String  tom_slotName=tomMatch438NameNumber_freshVar_7;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch438NameNumber_freshVar_8;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch438NameNumber_freshVar_5= tomMatch438NameNumber_freshVar_2.getTailConcSlotField() ;

        if (GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
         if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "int") )
             || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "long") )
             || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "double") )
             || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "float") )
             || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "char") )) { 
           res.append("\n    if( this."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+" != "/* Generated by TOM (version 2.6): Do not edit this file */+other+"."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+")\n      return (this."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+" < "/* Generated by TOM (version 2.6): Do not edit this file */+other+"."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+")?-1:1;\n"


);
         } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "boolean") )) {
           res.append("\n    if( this."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+" != "/* Generated by TOM (version 2.6): Do not edit this file */+other+"."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+")\n      return (!this."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+" && "/* Generated by TOM (version 2.6): Do not edit this file */+other+"."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+")?-1:1;\n"


);
         } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "String") )) {
           res.append("\n    int "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+"Cmp = (this."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+").compareTo("/* Generated by TOM (version 2.6): Do not edit this file */+other+"."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+");\n    if("/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n             \n"




);
         } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("aterm", "ATerm") )
             ||tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("aterm", "ATermList") )) {
           res.append("\n    /* Inefficient total order on ATerm */\n    int "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+"Cmp = ((this."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+").toString()).compareTo(("/* Generated by TOM (version 2.6): Do not edit this file */+other+"."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+").toString());\n    if("/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n"




);
         } else {
            throw new GomRuntimeException("Builtin "+tom_domain+" not supported");
         }
        } else {
          res.append("\n    int "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+"Cmp = (this."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+")."/* Generated by TOM (version 2.6): Do not edit this file */+compareFun+"("/* Generated by TOM (version 2.6): Do not edit this file */+other+"."/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+");\n    if("/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+"Cmp != 0)\n      return "/* Generated by TOM (version 2.6): Do not edit this file */+fieldName(tom_slotName)+"Cmp;\n"



); 
        }
      }}}}}}}}}if ( tomMatch438NameNumber_end_4.isEmptyConcSlotField() ) {tomMatch438NameNumber_end_4=tomMatch438NameNumber_begin_3;} else {tomMatch438NameNumber_end_4= tomMatch438NameNumber_end_4.getTailConcSlotField() ;}}} while(!( (tomMatch438NameNumber_end_4==tomMatch438NameNumber_begin_3) ));}}}}}}}}

    return res.toString();
  }

  private void generateHashArgs(java.io.Writer writer) throws java.io.IOException {
    int index = slotList.length() - 1;
    {{ Object tomMatch439NameNumber_freshVar_0=slotList;if ( (tomMatch439NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch439NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch439NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch439NameNumber_freshVar_1=tomMatch439NameNumber_freshSubject_1;if ( ((tomMatch439NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch439NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch439NameNumber_begin_3=tomMatch439NameNumber_freshVar_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch439NameNumber_end_4=tomMatch439NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch439NameNumber_freshVar_2=tomMatch439NameNumber_end_4;if (!( tomMatch439NameNumber_freshVar_2.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch439NameNumber_freshVar_9= tomMatch439NameNumber_freshVar_2.getHeadConcSlotField() ;if ( (tomMatch439NameNumber_freshVar_9 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch439NameNumber_freshVar_7= tomMatch439NameNumber_freshVar_9.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch439NameNumber_freshVar_8= tomMatch439NameNumber_freshVar_9.getDomain() ;{  String  tom_slotName=tomMatch439NameNumber_freshVar_7;{  tom.gom.adt.objects.types.ClassName  tom_domain=tomMatch439NameNumber_freshVar_8;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch439NameNumber_freshVar_5= tomMatch439NameNumber_freshVar_2.getTailConcSlotField() ;

        int shift = (index % 4) * 8;
        String accum = ""+"aaaabbbbcccc".toCharArray()[index % 12];
        writer.write("    "+accum+" += (");
        if (!GomEnvironment.getInstance().isBuiltinClass(tom_domain)) {
          writer.write(fieldName(tom_slotName)+".hashCode()");
        } else {
          if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "int") )
              || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "long") )
              || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "float") )
              || tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "char") )) {
            writer.write(fieldName(tom_slotName));
          } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "boolean") )) {
            writer.write("("+fieldName(tom_slotName)+"?1:0)");
          } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "String") )) {
            // Use the string hashFunction for Strings, and pass index as arity
            writer.write("shared.HashFunctions.stringHashFunction("+fieldName(tom_slotName)+", "+index+")");
          } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("", "double") )) {
            writer.write("(int)(java.lang.Double.doubleToLongBits(");
            writer.write(fieldName(tom_slotName));
            writer.write(")^(java.lang.Double.doubleToLongBits(");
            writer.write(fieldName(tom_slotName));
            writer.write(")>>>32");
            writer.write("))");
          } else if (tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("aterm", "ATerm") )||tom_domain.equals( tom.gom.adt.objects.types.classname.ClassName.make("aterm", "ATermList") )) {
            // Use the string hashFunction for Strings, and pass index as arity
            writer.write(fieldName(tom_slotName)+".hashCode()");
          }  else {
            throw new GomRuntimeException("generateHashArgs: Builtin " + tom_domain+ " not supported");
          }
        }
        if (shift!=0) { writer.write(" << "+(shift)); }
        writer.write(");\n");
        index--;
      }}}}}}}}}if ( tomMatch439NameNumber_end_4.isEmptyConcSlotField() ) {tomMatch439NameNumber_end_4=tomMatch439NameNumber_begin_3;} else {tomMatch439NameNumber_end_4= tomMatch439NameNumber_end_4.getTailConcSlotField() ;}}} while(!( (tomMatch439NameNumber_end_4==tomMatch439NameNumber_begin_3) ));}}}}}}}}

  }

  public void generateConstructor(java.io.Writer writer) throws java.io.IOException {
    boolean hasHooks = false;
    {lbl: {{ Object tomMatch440NameNumber_freshVar_0=hooks;if ( (tomMatch440NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.HookList) ) {{  tom.gom.adt.objects.types.HookList  tomMatch440NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.HookList )tomMatch440NameNumber_freshVar_0);{  tom.gom.adt.objects.types.HookList  tomMatch440NameNumber_freshVar_1=tomMatch440NameNumber_freshSubject_1;if ( ((tomMatch440NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.hooklist.ConsConcHook) || (tomMatch440NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.hooklist.EmptyConcHook)) ) {{  tom.gom.adt.objects.types.HookList  tomMatch440NameNumber_begin_3=tomMatch440NameNumber_freshVar_1;{  tom.gom.adt.objects.types.HookList  tomMatch440NameNumber_end_4=tomMatch440NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.HookList  tomMatch440NameNumber_freshVar_2=tomMatch440NameNumber_end_4;if (!( tomMatch440NameNumber_freshVar_2.isEmptyConcHook() )) {{  tom.gom.adt.objects.types.Hook  tomMatch440NameNumber_freshVar_8= tomMatch440NameNumber_freshVar_2.getHeadConcHook() ;if ( (tomMatch440NameNumber_freshVar_8 instanceof tom.gom.adt.objects.types.hook.MakeHook) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch440NameNumber_freshVar_7= tomMatch440NameNumber_freshVar_8.getHookArguments() ;{  tom.gom.adt.objects.types.HookList  tomMatch440NameNumber_freshVar_5= tomMatch440NameNumber_freshVar_2.getTailConcHook() ;


      hasHooks = true;
      writer.write("\n    public static "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(sortName)+" make("/* Generated by TOM (version 2.6): Do not edit this file */+unprotectedChildListWithType(tomMatch440NameNumber_freshVar_7)+") {\n  "

);
        SlotFieldList bargs = generateMakeHooks(hooks,null,writer);
        writer.write("\n      return realMake("/* Generated by TOM (version 2.6): Do not edit this file */+unprotectedChildList(bargs)+");\n    }\n  "


);
        break lbl;
      }}}}}}if ( tomMatch440NameNumber_end_4.isEmptyConcHook() ) {tomMatch440NameNumber_end_4=tomMatch440NameNumber_begin_3;} else {tomMatch440NameNumber_end_4= tomMatch440NameNumber_end_4.getTailConcHook() ;}}} while(!( (tomMatch440NameNumber_end_4==tomMatch440NameNumber_begin_3) ));}}}}}}}}}

    
    String makeName = "make";
    String visibility = "public";
    if (hasHooks) {
      makeName = "realMake";
      visibility = "private";
    }
    writer.write("\n  "/* Generated by TOM (version 2.6): Do not edit this file */+visibility+" static "/* Generated by TOM (version 2.6): Do not edit this file */+className()+" "/* Generated by TOM (version 2.6): Do not edit this file */+makeName+"("/* Generated by TOM (version 2.6): Do not edit this file */+childListWithType(slotList)+") {\n"

);
    
    if (! maximalsharing) {
        writer.write("\n    return new "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"("/* Generated by TOM (version 2.6): Do not edit this file */+childList(slotList)+");\n    "

);
    } else {
    if(slotList.length()>0) {
      if(multithread) {
        writer.write("\n    // allocate and object and make duplicate equal identity\n    "/* Generated by TOM (version 2.6): Do not edit this file */+className()+" newProto = new "/* Generated by TOM (version 2.6): Do not edit this file */+className()+"();\n    newProto.initHashCode("/* Generated by TOM (version 2.6): Do not edit this file */+childList(slotList)+");\n    return ("/* Generated by TOM (version 2.6): Do not edit this file */+className()+") factory.build(newProto);\n"




);
      } else {
        writer.write("\n    // use the proto as a model\n    proto.initHashCode("/* Generated by TOM (version 2.6): Do not edit this file */+childList(slotList)+");\n    return ("/* Generated by TOM (version 2.6): Do not edit this file */+className()+") factory.build(proto);\n"



);
      }
    } else {
        writer.write("\n    return proto;\n"

);
    }
    }
    writer.write("\n  }\n"

);
}

  public SlotFieldList generateMakeHooks(
      HookList other,
      SlotFieldList oArgs, /* will be null if it is the first hook */
      java.io.Writer writer)
    throws java.io.IOException {
    {{ Object tomMatch441NameNumber_freshVar_0=other;if ( (tomMatch441NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.HookList) ) {{  tom.gom.adt.objects.types.HookList  tomMatch441NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.HookList )tomMatch441NameNumber_freshVar_0);{  tom.gom.adt.objects.types.HookList  tomMatch441NameNumber_freshVar_1=tomMatch441NameNumber_freshSubject_1;if ( ((tomMatch441NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.hooklist.ConsConcHook) || (tomMatch441NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.hooklist.EmptyConcHook)) ) {if (!( tomMatch441NameNumber_freshVar_1.isEmptyConcHook() )) {{  tom.gom.adt.objects.types.HookList  tomMatch441NameNumber_freshVar_2= tomMatch441NameNumber_freshVar_1.getTailConcHook() ;{ boolean tomMatch441NameNumber_freshVar_5= false ;{  tom.gom.adt.objects.types.Hook  tomMatch441NameNumber_freshVar_4= tomMatch441NameNumber_freshVar_1.getHeadConcHook() ;if ( (tomMatch441NameNumber_freshVar_4 instanceof tom.gom.adt.objects.types.hook.MakeHook) ) {tomMatch441NameNumber_freshVar_5= true ;}}if ((tomMatch441NameNumber_freshVar_5 ==  false )) {

        /* skip non Make hooks */
        return generateMakeHooks(tomMatch441NameNumber_freshVar_2, oArgs, writer);
      }}}}}}}}}{ Object tomMatch441NameNumber_freshVar_6=other;if ( (tomMatch441NameNumber_freshVar_6 instanceof tom.gom.adt.objects.types.HookList) ) {{  tom.gom.adt.objects.types.HookList  tomMatch441NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.HookList )tomMatch441NameNumber_freshVar_6);{  tom.gom.adt.objects.types.HookList  tomMatch441NameNumber_freshVar_7=tomMatch441NameNumber_freshSubject_1;if ( ((tomMatch441NameNumber_freshVar_7 instanceof tom.gom.adt.objects.types.hooklist.ConsConcHook) || (tomMatch441NameNumber_freshVar_7 instanceof tom.gom.adt.objects.types.hooklist.EmptyConcHook)) ) {if (!( tomMatch441NameNumber_freshVar_7.isEmptyConcHook() )) {{  tom.gom.adt.objects.types.Hook  tomMatch441NameNumber_freshVar_12= tomMatch441NameNumber_freshVar_7.getHeadConcHook() ;if ( (tomMatch441NameNumber_freshVar_12 instanceof tom.gom.adt.objects.types.hook.MakeHook) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch441NameNumber_freshVar_10= tomMatch441NameNumber_freshVar_12.getHookArguments() ;{  tom.gom.adt.code.types.Code  tomMatch441NameNumber_freshVar_11= tomMatch441NameNumber_freshVar_12.getCode() ;{  tom.gom.adt.objects.types.SlotFieldList  tom_args=tomMatch441NameNumber_freshVar_10;{  tom.gom.adt.objects.types.HookList  tomMatch441NameNumber_freshVar_8= tomMatch441NameNumber_freshVar_7.getTailConcHook() ;

        /* Rename the previous arguments according to new, if needed */
        if(oArgs != null && oArgs != tom_args) {
          recVarNameRemap(oArgs,tom_args, writer);
        }
        /* Make sure we defeat java dead code detection */
        writer.write("if (true) {");
        CodeGen.generateCode(tomMatch441NameNumber_freshVar_11,writer);
        writer.write("}");
        return generateMakeHooks(tomMatch441NameNumber_freshVar_8, tom_args, writer);
      }}}}}}}}}}}}}

    return oArgs;
  }

  private void recVarNameRemap(
      SlotFieldList oargs,
      SlotFieldList nargs,
      java.io.Writer writer)
  throws java.io.IOException {
    {{ Object tomMatch442NameNumber_freshVar_0=oargs;if ( (tomMatch442NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch442NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch442NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch442NameNumber_freshVar_2=tomMatch442NameNumber_freshSubject_1;if ( ((tomMatch442NameNumber_freshVar_2 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch442NameNumber_freshVar_2 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {if ( tomMatch442NameNumber_freshVar_2.isEmptyConcSlotField() ) {{ Object tomMatch442NameNumber_freshVar_1=nargs;if ( (tomMatch442NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch442NameNumber_freshSubject_2=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch442NameNumber_freshVar_1);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch442NameNumber_freshVar_3=tomMatch442NameNumber_freshSubject_2;if ( ((tomMatch442NameNumber_freshVar_3 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch442NameNumber_freshVar_3 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {if ( tomMatch442NameNumber_freshVar_3.isEmptyConcSlotField() ) {

        return ;
      }}}}}}}}}}}}{ Object tomMatch442NameNumber_freshVar_4=oargs;if ( (tomMatch442NameNumber_freshVar_4 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch442NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch442NameNumber_freshVar_4);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch442NameNumber_freshVar_6=tomMatch442NameNumber_freshSubject_1;if ( ((tomMatch442NameNumber_freshVar_6 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch442NameNumber_freshVar_6 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {if (!( tomMatch442NameNumber_freshVar_6.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch442NameNumber_freshVar_14= tomMatch442NameNumber_freshVar_6.getHeadConcSlotField() ;if ( (tomMatch442NameNumber_freshVar_14 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch442NameNumber_freshVar_12= tomMatch442NameNumber_freshVar_14.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch442NameNumber_freshVar_13= tomMatch442NameNumber_freshVar_14.getDomain() ;{  String  tom_oargName=tomMatch442NameNumber_freshVar_12;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch442NameNumber_freshVar_7= tomMatch442NameNumber_freshVar_6.getTailConcSlotField() ;{ Object tomMatch442NameNumber_freshVar_5=nargs;if ( (tomMatch442NameNumber_freshVar_5 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch442NameNumber_freshSubject_2=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch442NameNumber_freshVar_5);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch442NameNumber_freshVar_9=tomMatch442NameNumber_freshSubject_2;if ( ((tomMatch442NameNumber_freshVar_9 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch442NameNumber_freshVar_9 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {if (!( tomMatch442NameNumber_freshVar_9.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch442NameNumber_freshVar_17= tomMatch442NameNumber_freshVar_9.getHeadConcSlotField() ;if ( (tomMatch442NameNumber_freshVar_17 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch442NameNumber_freshVar_15= tomMatch442NameNumber_freshVar_17.getName() ;{  tom.gom.adt.objects.types.ClassName  tomMatch442NameNumber_freshVar_16= tomMatch442NameNumber_freshVar_17.getDomain() ;{  String  tom_nargName=tomMatch442NameNumber_freshVar_15;{  tom.gom.adt.objects.types.ClassName  tom_ndomain=tomMatch442NameNumber_freshVar_16;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch442NameNumber_freshVar_10= tomMatch442NameNumber_freshVar_9.getTailConcSlotField() ;


        if (!(tomMatch442NameNumber_freshVar_13==tom_ndomain)) {
          throw new GomRuntimeException(
              "OperatorTemplate: incompatible args "+
              "should be rejected by typechecker");
        } else if (!tom_oargName.equals(tom_nargName)) {
          /* XXX: the declaration should be omitted if nargName was previously
           * used */
          writer.write("\n    "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(tom_ndomain)+" "/* Generated by TOM (version 2.6): Do not edit this file */+tom_nargName+" = "/* Generated by TOM (version 2.6): Do not edit this file */+tom_oargName+";\n"

);
        } /* else nothing to rename */
        recVarNameRemap(tomMatch442NameNumber_freshVar_7,tomMatch442NameNumber_freshVar_10, writer);
        return;
      }}}}}}}}}}}}}}}}}}}}}}}}}}

    throw new GomRuntimeException(
        "OperatorTemplate:recVarNameRemap failed " + oargs + " " + nargs);
  }

  public void generateTomMapping(Writer writer)
      throws java.io.IOException {
    {{ Object tomMatch443NameNumber_freshVar_0=hooks;if ( (tomMatch443NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.HookList) ) {{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.HookList )tomMatch443NameNumber_freshVar_0);{ boolean tomMatch443NameNumber_freshVar_8= false ;{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_freshVar_1=tomMatch443NameNumber_freshSubject_1;if ( ((tomMatch443NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.hooklist.ConsConcHook) || (tomMatch443NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.hooklist.EmptyConcHook)) ) {{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_begin_3=tomMatch443NameNumber_freshVar_1;{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_end_4=tomMatch443NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_freshVar_2=tomMatch443NameNumber_end_4;if (!( tomMatch443NameNumber_freshVar_2.isEmptyConcHook() )) {{  tom.gom.adt.objects.types.Hook  tomMatch443NameNumber_freshVar_7= tomMatch443NameNumber_freshVar_2.getHeadConcHook() ;if ( (tomMatch443NameNumber_freshVar_7 instanceof tom.gom.adt.objects.types.hook.MappingHook) ) {{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_freshVar_5= tomMatch443NameNumber_freshVar_2.getTailConcHook() ;tomMatch443NameNumber_freshVar_8= true ;}}}}}if ( tomMatch443NameNumber_end_4.isEmptyConcHook() ) {tomMatch443NameNumber_end_4=tomMatch443NameNumber_begin_3;} else {tomMatch443NameNumber_end_4= tomMatch443NameNumber_end_4.getTailConcHook() ;}}} while(!( (tomMatch443NameNumber_end_4==tomMatch443NameNumber_begin_3) ));}}}}if ((tomMatch443NameNumber_freshVar_8 ==  false )) {

        writer.write("%op "+className(sortName)+" "+className()+"(");
        slotDecl(writer,slotList);
        writer.write(") {\n");
        writer.write("  is_fsym(t) { ($t instanceof "+fullClassName()+") }\n");
        {{ Object tomMatch444NameNumber_freshVar_0=slotList;if ( (tomMatch444NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.SlotFieldList) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch444NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.SlotFieldList )tomMatch444NameNumber_freshVar_0);{  tom.gom.adt.objects.types.SlotFieldList  tomMatch444NameNumber_freshVar_1=tomMatch444NameNumber_freshSubject_1;if ( ((tomMatch444NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.ConsConcSlotField) || (tomMatch444NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyConcSlotField)) ) {{  tom.gom.adt.objects.types.SlotFieldList  tomMatch444NameNumber_begin_3=tomMatch444NameNumber_freshVar_1;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch444NameNumber_end_4=tomMatch444NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.SlotFieldList  tomMatch444NameNumber_freshVar_2=tomMatch444NameNumber_end_4;if (!( tomMatch444NameNumber_freshVar_2.isEmptyConcSlotField() )) {{  tom.gom.adt.objects.types.SlotField  tomMatch444NameNumber_freshVar_8= tomMatch444NameNumber_freshVar_2.getHeadConcSlotField() ;if ( (tomMatch444NameNumber_freshVar_8 instanceof tom.gom.adt.objects.types.slotfield.SlotField) ) {{  String  tomMatch444NameNumber_freshVar_7= tomMatch444NameNumber_freshVar_8.getName() ;{  tom.gom.adt.objects.types.SlotFieldList  tomMatch444NameNumber_freshVar_5= tomMatch444NameNumber_freshVar_2.getTailConcSlotField() ;

            writer.write("  get_slot("+tomMatch444NameNumber_freshVar_7+", t) ");
            writer.write("{ $t."+getMethod( tomMatch444NameNumber_freshVar_2.getHeadConcSlotField() )+"() }\n");
          }}}}}}if ( tomMatch444NameNumber_end_4.isEmptyConcSlotField() ) {tomMatch444NameNumber_end_4=tomMatch444NameNumber_begin_3;} else {tomMatch444NameNumber_end_4= tomMatch444NameNumber_end_4.getTailConcSlotField() ;}}} while(!( (tomMatch444NameNumber_end_4==tomMatch444NameNumber_begin_3) ));}}}}}}}}

        writer.write("  make(");
        slotArgs(writer,slotList);
        writer.write(") { ");
        writer.write(fullClassName());
        writer.write(".make(");
        slotArgsWithDollar(writer,slotList);
        writer.write(") }\n");
        writer.write("}\n");
        writer.write("\n");
        return;
      }}}}}{ Object tomMatch443NameNumber_freshVar_9=hooks;if ( (tomMatch443NameNumber_freshVar_9 instanceof tom.gom.adt.objects.types.HookList) ) {{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.HookList )tomMatch443NameNumber_freshVar_9);{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_freshVar_10=tomMatch443NameNumber_freshSubject_1;if ( ((tomMatch443NameNumber_freshVar_10 instanceof tom.gom.adt.objects.types.hooklist.ConsConcHook) || (tomMatch443NameNumber_freshVar_10 instanceof tom.gom.adt.objects.types.hooklist.EmptyConcHook)) ) {{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_begin_12=tomMatch443NameNumber_freshVar_10;{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_end_13=tomMatch443NameNumber_freshVar_10;do {{{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_freshVar_11=tomMatch443NameNumber_end_13;if (!( tomMatch443NameNumber_freshVar_11.isEmptyConcHook() )) {{  tom.gom.adt.objects.types.Hook  tomMatch443NameNumber_freshVar_17= tomMatch443NameNumber_freshVar_11.getHeadConcHook() ;if ( (tomMatch443NameNumber_freshVar_17 instanceof tom.gom.adt.objects.types.hook.MappingHook) ) {{  tom.gom.adt.code.types.Code  tomMatch443NameNumber_freshVar_16= tomMatch443NameNumber_freshVar_17.getCode() ;{  tom.gom.adt.objects.types.HookList  tomMatch443NameNumber_freshVar_14= tomMatch443NameNumber_freshVar_11.getTailConcHook() ;

        CodeGen.generateCode(tomMatch443NameNumber_freshVar_16,writer);
      }}}}}}if ( tomMatch443NameNumber_end_13.isEmptyConcHook() ) {tomMatch443NameNumber_end_13=tomMatch443NameNumber_begin_12;} else {tomMatch443NameNumber_end_13= tomMatch443NameNumber_end_13.getTailConcHook() ;}}} while(!( (tomMatch443NameNumber_end_13==tomMatch443NameNumber_begin_12) ));}}}}}}}}

    return;
  }
}

/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 * Gom
 *
 * Copyright (c) 2006-2008, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.backend.shared;

import tom.gom.GomStreamManager;
import tom.gom.tools.GomEnvironment;
import tom.gom.backend.TemplateClass;
import tom.gom.backend.MappingTemplateClass;
import java.io.*;
import tom.gom.adt.objects.types.*;
import tom.gom.tools.error.GomRuntimeException;

public class MappingTemplate extends MappingTemplateClass {
  GomClassList sortClasses;
  GomClassList operatorClasses;
  TemplateClass strategyMapping;

  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.gom.adt.objects.types.GomClassList  tom_append_list_ConcGomClass( tom.gom.adt.objects.types.GomClassList l1,  tom.gom.adt.objects.types.GomClassList  l2) {     if( l1.isEmptyConcGomClass() ) {       return l2;     } else if( l2.isEmptyConcGomClass() ) {       return l1;     } else if(  l1.getTailConcGomClass() .isEmptyConcGomClass() ) {       return  tom.gom.adt.objects.types.gomclasslist.ConsConcGomClass.make( l1.getHeadConcGomClass() ,l2) ;     } else {       return  tom.gom.adt.objects.types.gomclasslist.ConsConcGomClass.make( l1.getHeadConcGomClass() ,tom_append_list_ConcGomClass( l1.getTailConcGomClass() ,l2)) ;     }   }   private static   tom.gom.adt.objects.types.GomClassList  tom_get_slice_ConcGomClass( tom.gom.adt.objects.types.GomClassList  begin,  tom.gom.adt.objects.types.GomClassList  end, tom.gom.adt.objects.types.GomClassList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcGomClass()  ||  (end== tom.gom.adt.objects.types.gomclasslist.EmptyConcGomClass.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.objects.types.gomclasslist.ConsConcGomClass.make( begin.getHeadConcGomClass() ,( tom.gom.adt.objects.types.GomClassList )tom_get_slice_ConcGomClass( begin.getTailConcGomClass() ,end,tail)) ;   }    

  public MappingTemplate(GomClass gomClass, TemplateClass strategyMapping) {
    super(gomClass);
    {{ Object tomMatch376NameNumber_freshVar_0=gomClass;if ( (tomMatch376NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.GomClass) ) {{  tom.gom.adt.objects.types.GomClass  tomMatch376NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.GomClass )tomMatch376NameNumber_freshVar_0);{  tom.gom.adt.objects.types.GomClass  tomMatch376NameNumber_freshVar_3=tomMatch376NameNumberfreshSubject_1;if ( (tomMatch376NameNumber_freshVar_3 instanceof tom.gom.adt.objects.types.gomclass.TomMapping) ) {{  tom.gom.adt.objects.types.GomClassList  tomMatch376NameNumber_freshVar_1= tomMatch376NameNumber_freshVar_3.getSortClasses() ;{  tom.gom.adt.objects.types.GomClassList  tomMatch376NameNumber_freshVar_2= tomMatch376NameNumber_freshVar_3.getOperatorClasses() ;if ( true ) {


        this.sortClasses = tomMatch376NameNumber_freshVar_1;
        this.operatorClasses = tomMatch376NameNumber_freshVar_2;
        this.strategyMapping = strategyMapping;
        return;
      }}}}}}}}}

    throw new GomRuntimeException(
        "Wrong argument for MappingTemplate: " + gomClass);
  }

  public void generate(java.io.Writer writer) throws java.io.IOException {
    if(GomEnvironment.getInstance().isBuiltinSort("boolean")) {
      writer.write("\n%include { boolean.tom }\n"

);
    }
    if(GomEnvironment.getInstance().isBuiltinSort("String")) {
      writer.write("\n%include { string.tom }\n"

);
    }
    if(GomEnvironment.getInstance().isBuiltinSort("int")) {
      writer.write("\n%include { int.tom }\n"

);
    }
    if(GomEnvironment.getInstance().isBuiltinSort("char")) {
      writer.write("\n%include { char.tom }\n"

);
    }
    if (GomEnvironment.getInstance().isBuiltinSort("double")) {
      writer.write("\n%include { double.tom }\n"

);
    }
    if (GomEnvironment.getInstance().isBuiltinSort("long")) {
      writer.write("\n%include { long.tom }\n"

);
    }
    if (GomEnvironment.getInstance().isBuiltinSort("float")) {
      writer.write("\n%include { float.tom }\n"

);
    }
    if (GomEnvironment.getInstance().isBuiltinSort("ATerm")) {
      writer.write("\n%include { aterm.tom }\n"

);
    }
    if (GomEnvironment.getInstance().isBuiltinSort("ATermList")) {
      writer.write("\n%include { aterm.tom }\n"

);
    }

    // generate a %typeterm for each class
    {{ Object tomMatch377NameNumber_freshVar_0=sortClasses;if ( (tomMatch377NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.GomClassList) ) {{  tom.gom.adt.objects.types.GomClassList  tomMatch377NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.GomClassList )tomMatch377NameNumber_freshVar_0);{  tom.gom.adt.objects.types.GomClassList  tomMatch377NameNumber_freshVar_1=tomMatch377NameNumberfreshSubject_1;if ( ((tomMatch377NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.gomclasslist.ConsConcGomClass) || (tomMatch377NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.gomclasslist.EmptyConcGomClass)) ) {{  tom.gom.adt.objects.types.GomClassList  tomMatch377NameNumber_begin_3=tomMatch377NameNumber_freshVar_1;{  tom.gom.adt.objects.types.GomClassList  tomMatch377NameNumber_end_4=tomMatch377NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.GomClassList  tomMatch377NameNumber_freshVar_2=tomMatch377NameNumber_end_4;if (!( tomMatch377NameNumber_freshVar_2.isEmptyConcGomClass() )) {{  tom.gom.adt.objects.types.GomClass  tomMatch377NameNumber_freshVar_8= tomMatch377NameNumber_freshVar_2.getHeadConcGomClass() ;if ( (tomMatch377NameNumber_freshVar_8 instanceof tom.gom.adt.objects.types.gomclass.SortClass) ) {{  tom.gom.adt.objects.types.ClassName  tomMatch377NameNumber_freshVar_7= tomMatch377NameNumber_freshVar_8.getClassName() ;{  tom.gom.adt.objects.types.GomClassList  tomMatch377NameNumber_freshVar_5= tomMatch377NameNumber_freshVar_2.getTailConcGomClass() ;if ( true ) {



        ((TemplateClass) templates.get(tomMatch377NameNumber_freshVar_7))
          .generateTomMapping(writer);
      }}}}}}}if ( tomMatch377NameNumber_end_4.isEmptyConcGomClass() ) {tomMatch377NameNumber_end_4=tomMatch377NameNumber_begin_3;} else {tomMatch377NameNumber_end_4= tomMatch377NameNumber_end_4.getTailConcGomClass() ;}}} while(!( (tomMatch377NameNumber_end_4==tomMatch377NameNumber_begin_3) ));}}}}}}}}


    // generate a %op for each operator
    {{ Object tomMatch378NameNumber_freshVar_0=operatorClasses;if ( (tomMatch378NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.GomClassList) ) {{  tom.gom.adt.objects.types.GomClassList  tomMatch378NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.GomClassList )tomMatch378NameNumber_freshVar_0);{  tom.gom.adt.objects.types.GomClassList  tomMatch378NameNumber_freshVar_1=tomMatch378NameNumberfreshSubject_1;if ( ((tomMatch378NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.gomclasslist.ConsConcGomClass) || (tomMatch378NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.gomclasslist.EmptyConcGomClass)) ) {{  tom.gom.adt.objects.types.GomClassList  tomMatch378NameNumber_begin_3=tomMatch378NameNumber_freshVar_1;{  tom.gom.adt.objects.types.GomClassList  tomMatch378NameNumber_end_4=tomMatch378NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.GomClassList  tomMatch378NameNumber_freshVar_2=tomMatch378NameNumber_end_4;if (!( tomMatch378NameNumber_freshVar_2.isEmptyConcGomClass() )) {{  tom.gom.adt.objects.types.GomClass  tomMatch378NameNumber_freshVar_8= tomMatch378NameNumber_freshVar_2.getHeadConcGomClass() ;if ( (tomMatch378NameNumber_freshVar_8 instanceof tom.gom.adt.objects.types.gomclass.OperatorClass) ) {{  tom.gom.adt.objects.types.ClassName  tomMatch378NameNumber_freshVar_7= tomMatch378NameNumber_freshVar_8.getClassName() ;{  tom.gom.adt.objects.types.GomClassList  tomMatch378NameNumber_freshVar_5= tomMatch378NameNumber_freshVar_2.getTailConcGomClass() ;if ( true ) {



        ((TemplateClass) templates.get(tomMatch378NameNumber_freshVar_7))
          .generateTomMapping(writer);
      }}}}}}}if ( tomMatch378NameNumber_end_4.isEmptyConcGomClass() ) {tomMatch378NameNumber_end_4=tomMatch378NameNumber_begin_3;} else {tomMatch378NameNumber_end_4= tomMatch378NameNumber_end_4.getTailConcGomClass() ;}}} while(!( (tomMatch378NameNumber_end_4==tomMatch378NameNumber_begin_3) ));}}}}}}}}


    // generate a %oplist for each variadic operator
    {{ Object tomMatch379NameNumber_freshVar_0=operatorClasses;if ( (tomMatch379NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.GomClassList) ) {{  tom.gom.adt.objects.types.GomClassList  tomMatch379NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.GomClassList )tomMatch379NameNumber_freshVar_0);{  tom.gom.adt.objects.types.GomClassList  tomMatch379NameNumber_freshVar_1=tomMatch379NameNumberfreshSubject_1;if ( ((tomMatch379NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.gomclasslist.ConsConcGomClass) || (tomMatch379NameNumber_freshVar_1 instanceof tom.gom.adt.objects.types.gomclasslist.EmptyConcGomClass)) ) {{  tom.gom.adt.objects.types.GomClassList  tomMatch379NameNumber_begin_3=tomMatch379NameNumber_freshVar_1;{  tom.gom.adt.objects.types.GomClassList  tomMatch379NameNumber_end_4=tomMatch379NameNumber_freshVar_1;do {{{  tom.gom.adt.objects.types.GomClassList  tomMatch379NameNumber_freshVar_2=tomMatch379NameNumber_end_4;if (!( tomMatch379NameNumber_freshVar_2.isEmptyConcGomClass() )) {{  tom.gom.adt.objects.types.GomClass  tomMatch379NameNumber_freshVar_8= tomMatch379NameNumber_freshVar_2.getHeadConcGomClass() ;if ( (tomMatch379NameNumber_freshVar_8 instanceof tom.gom.adt.objects.types.gomclass.VariadicOperatorClass) ) {{  tom.gom.adt.objects.types.ClassName  tomMatch379NameNumber_freshVar_7= tomMatch379NameNumber_freshVar_8.getClassName() ;{  tom.gom.adt.objects.types.GomClassList  tomMatch379NameNumber_freshVar_5= tomMatch379NameNumber_freshVar_2.getTailConcGomClass() ;if ( true ) {



        ((TemplateClass) templates.get(tomMatch379NameNumber_freshVar_7))
          .generateTomMapping(writer);
      }}}}}}}if ( tomMatch379NameNumber_end_4.isEmptyConcGomClass() ) {tomMatch379NameNumber_end_4=tomMatch379NameNumber_begin_3;} else {tomMatch379NameNumber_end_4= tomMatch379NameNumber_end_4.getTailConcGomClass() ;}}} while(!( (tomMatch379NameNumber_end_4==tomMatch379NameNumber_begin_3) ));}}}}}}}}

    /* Include the strategy mapping if needed */
    if (strategyMapping != null) {
      strategyMapping.generateTomMapping(writer);
    }
  }

  protected String fileName() {
    return fullClassName().replace('.',File.separatorChar)+".tom";
  }

  protected File fileToGenerate() {
    GomStreamManager stream = GomEnvironment.getInstance().getStreamManager();
    File output = new File(stream.getDestDir(),fileName());
    // log the generated mapping file name
    try {
      GomEnvironment.getInstance()
        .setLastGeneratedMapping(output.getCanonicalPath());
    } catch(Exception e) {
      e.printStackTrace();
    }
    return output;
  }
}

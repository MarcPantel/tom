/* Generated by TOM (version 2.4alpha): Do not edit this file *//*
 * Gom
 *
 * Copyright (C) 2006 INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.backend;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.gom.GomMessage;
import tom.gom.tools.GomEnvironment;
import tom.gom.tools.error.GomRuntimeException;

import tom.gom.adt.objects.*;
import tom.gom.adt.objects.types.*;

import tom.library.strategy.mutraveler.MuTraveler;
import jjtraveler.reflective.VisitableVisitor;
import jjtraveler.VisitFailure;

public class GomBackend {
  TemplateFactory templatefactory;
  private File tomHomePath;
  private List importList = null;

  /* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file */ private static boolean tom_terms_equal_String( String  t1,  String  t2) {  return  (t1.equals(t2))  ;}  /* Generated by TOM (version 2.4alpha): Do not edit this file */ /* Generated by TOM (version 2.4alpha): Do not edit this file */ /* Generated by TOM (version 2.4alpha): Do not edit this file */ /* Generated by TOM (version 2.4alpha): Do not edit this file */ /* Generated by TOM (version 2.4alpha): Do not edit this file */ private static boolean tom_terms_equal_ClassNameList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_HookList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ClassName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomClass(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomClassList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SlotFieldList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_fun_sym_ClassName( tom.gom.adt.objects.types.ClassName  t) {  return  t instanceof tom.gom.adt.objects.types.classname.ClassName  ;}private static  tom.gom.adt.objects.types.ClassName  tom_make_ClassName( String  t0,  String  t1) { return  tom.gom.adt.objects.types.classname.ClassName.make(t0, t1); }private static  String  tom_get_slot_ClassName_Pkg( tom.gom.adt.objects.types.ClassName  t) {  return  t.getPkg()  ;}private static  String  tom_get_slot_ClassName_Name( tom.gom.adt.objects.types.ClassName  t) {  return  t.getName()  ;}private static boolean tom_is_fun_sym_VisitableFwdClass( tom.gom.adt.objects.types.GomClass  t) {  return  t instanceof tom.gom.adt.objects.types.gomclass.VisitableFwdClass  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_VisitableFwdClass_ClassName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getClassName()  ;}private static  tom.gom.adt.objects.types.GomClass  tom_get_slot_VisitableFwdClass_Fwd( tom.gom.adt.objects.types.GomClass  t) {  return  t.getFwd()  ;}private static boolean tom_is_fun_sym_AbstractTypeClass( tom.gom.adt.objects.types.GomClass  t) {  return  t instanceof tom.gom.adt.objects.types.gomclass.AbstractTypeClass  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_AbstractTypeClass_ClassName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getClassName()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_AbstractTypeClass_Visitor( tom.gom.adt.objects.types.GomClass  t) {  return  t.getVisitor()  ;}private static  tom.gom.adt.objects.types.ClassNameList  tom_get_slot_AbstractTypeClass_SortList( tom.gom.adt.objects.types.GomClass  t) {  return  t.getSortList()  ;}private static  tom.gom.adt.objects.types.HookList  tom_get_slot_AbstractTypeClass_Hooks( tom.gom.adt.objects.types.GomClass  t) {  return  t.getHooks()  ;}private static boolean tom_is_fun_sym_SortClass( tom.gom.adt.objects.types.GomClass  t) {  return  t instanceof tom.gom.adt.objects.types.gomclass.SortClass  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_SortClass_ClassName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getClassName()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_SortClass_AbstractType( tom.gom.adt.objects.types.GomClass  t) {  return  t.getAbstractType()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_SortClass_Visitor( tom.gom.adt.objects.types.GomClass  t) {  return  t.getVisitor()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_SortClass_Forward( tom.gom.adt.objects.types.GomClass  t) {  return  t.getForward()  ;}private static  tom.gom.adt.objects.types.ClassNameList  tom_get_slot_SortClass_Operators( tom.gom.adt.objects.types.GomClass  t) {  return  t.getOperators()  ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_SortClass_Slots( tom.gom.adt.objects.types.GomClass  t) {  return  t.getSlots()  ;}private static  tom.gom.adt.objects.types.HookList  tom_get_slot_SortClass_Hooks( tom.gom.adt.objects.types.GomClass  t) {  return  t.getHooks()  ;}private static boolean tom_is_fun_sym_OperatorClass( tom.gom.adt.objects.types.GomClass  t) {  return  t instanceof tom.gom.adt.objects.types.gomclass.OperatorClass  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_ClassName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getClassName()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_AbstractType( tom.gom.adt.objects.types.GomClass  t) {  return  t.getAbstractType()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_ExtendsType( tom.gom.adt.objects.types.GomClass  t) {  return  t.getExtendsType()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_Mapping( tom.gom.adt.objects.types.GomClass  t) {  return  t.getMapping()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_SortName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getSortName()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_Visitor( tom.gom.adt.objects.types.GomClass  t) {  return  t.getVisitor()  ;}private static  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_OperatorClass_Slots( tom.gom.adt.objects.types.GomClass  t) {  return  t.getSlots()  ;}private static  tom.gom.adt.objects.types.HookList  tom_get_slot_OperatorClass_Hooks( tom.gom.adt.objects.types.GomClass  t) {  return  t.getHooks()  ;}private static boolean tom_is_fun_sym_VariadicOperatorClass( tom.gom.adt.objects.types.GomClass  t) {  return  t instanceof tom.gom.adt.objects.types.gomclass.VariadicOperatorClass  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_ClassName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getClassName()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_AbstractType( tom.gom.adt.objects.types.GomClass  t) {  return  t.getAbstractType()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_SortName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getSortName()  ;}private static  tom.gom.adt.objects.types.GomClass  tom_get_slot_VariadicOperatorClass_Empty( tom.gom.adt.objects.types.GomClass  t) {  return  t.getEmpty()  ;}private static  tom.gom.adt.objects.types.GomClass  tom_get_slot_VariadicOperatorClass_Cons( tom.gom.adt.objects.types.GomClass  t) {  return  t.getCons()  ;}private static  tom.gom.adt.objects.types.HookList  tom_get_slot_VariadicOperatorClass_Hooks( tom.gom.adt.objects.types.GomClass  t) {  return  t.getHooks()  ;}private static boolean tom_is_fun_sym_VisitorClass( tom.gom.adt.objects.types.GomClass  t) {  return  t instanceof tom.gom.adt.objects.types.gomclass.VisitorClass  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_VisitorClass_ClassName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getClassName()  ;}private static  tom.gom.adt.objects.types.GomClassList  tom_get_slot_VisitorClass_SortClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getSortClasses()  ;}private static  tom.gom.adt.objects.types.GomClassList  tom_get_slot_VisitorClass_OperatorClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getOperatorClasses()  ;}private static boolean tom_is_fun_sym_FwdClass( tom.gom.adt.objects.types.GomClass  t) {  return  t instanceof tom.gom.adt.objects.types.gomclass.FwdClass  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_FwdClass_ClassName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getClassName()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_FwdClass_Visitor( tom.gom.adt.objects.types.GomClass  t) {  return  t.getVisitor()  ;}private static  tom.gom.adt.objects.types.ClassNameList  tom_get_slot_FwdClass_ImportedVisitors( tom.gom.adt.objects.types.GomClass  t) {  return  t.getImportedVisitors()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_FwdClass_AbstractType( tom.gom.adt.objects.types.GomClass  t) {  return  t.getAbstractType()  ;}private static  tom.gom.adt.objects.types.ClassNameList  tom_get_slot_FwdClass_ImportedAbstractTypes( tom.gom.adt.objects.types.GomClass  t) {  return  t.getImportedAbstractTypes()  ;}private static  tom.gom.adt.objects.types.GomClassList  tom_get_slot_FwdClass_SortClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getSortClasses()  ;}private static  tom.gom.adt.objects.types.GomClassList  tom_get_slot_FwdClass_OperatorClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getOperatorClasses()  ;}private static boolean tom_is_fun_sym_TomMapping( tom.gom.adt.objects.types.GomClass  t) {  return  t instanceof tom.gom.adt.objects.types.gomclass.TomMapping  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_TomMapping_ClassName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getClassName()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_TomMapping_BasicStrategy( tom.gom.adt.objects.types.GomClass  t) {  return  t.getBasicStrategy()  ;}private static  tom.gom.adt.objects.types.GomClassList  tom_get_slot_TomMapping_SortClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getSortClasses()  ;}private static  tom.gom.adt.objects.types.GomClassList  tom_get_slot_TomMapping_OperatorClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getOperatorClasses()  ;}private static boolean tom_is_fun_sym_concGomClass( tom.gom.adt.objects.types.GomClassList  t) {  return  t instanceof tom.gom.adt.objects.types.gomclasslist.ConsconcGomClass || t instanceof tom.gom.adt.objects.types.gomclasslist.EmptyconcGomClass  ;}private static  tom.gom.adt.objects.types.GomClassList  tom_empty_list_concGomClass() { return  tom.gom.adt.objects.types.gomclasslist.EmptyconcGomClass.make() ; }private static  tom.gom.adt.objects.types.GomClassList  tom_cons_list_concGomClass( tom.gom.adt.objects.types.GomClass  e,  tom.gom.adt.objects.types.GomClassList  l) { return  tom.gom.adt.objects.types.gomclasslist.ConsconcGomClass.make(e,l) ; }private static  tom.gom.adt.objects.types.GomClass  tom_get_head_concGomClass_GomClassList( tom.gom.adt.objects.types.GomClassList  l) {  return  l.getHeadconcGomClass()  ;}private static  tom.gom.adt.objects.types.GomClassList  tom_get_tail_concGomClass_GomClassList( tom.gom.adt.objects.types.GomClassList  l) {  return  l.getTailconcGomClass()  ;}private static boolean tom_is_empty_concGomClass_GomClassList( tom.gom.adt.objects.types.GomClassList  l) {  return  l.isEmptyconcGomClass()  ;}private static  tom.gom.adt.objects.types.GomClassList  tom_append_list_concGomClass( tom.gom.adt.objects.types.GomClassList  l1,  tom.gom.adt.objects.types.GomClassList  l2) {    if(tom_is_empty_concGomClass_GomClassList(l1)) {     return l2;    } else if(tom_is_empty_concGomClass_GomClassList(l2)) {     return l1;    } else if(tom_is_empty_concGomClass_GomClassList(( tom.gom.adt.objects.types.GomClassList )tom_get_tail_concGomClass_GomClassList(l1))) {     return ( tom.gom.adt.objects.types.GomClassList )tom_cons_list_concGomClass(( tom.gom.adt.objects.types.GomClass )tom_get_head_concGomClass_GomClassList(l1),l2);    } else {      return ( tom.gom.adt.objects.types.GomClassList )tom_cons_list_concGomClass(( tom.gom.adt.objects.types.GomClass )tom_get_head_concGomClass_GomClassList(l1),tom_append_list_concGomClass(( tom.gom.adt.objects.types.GomClassList )tom_get_tail_concGomClass_GomClassList(l1),l2));    }   }  private static  tom.gom.adt.objects.types.GomClassList  tom_get_slice_concGomClass( tom.gom.adt.objects.types.GomClassList  begin,  tom.gom.adt.objects.types.GomClassList  end) {    if(tom_terms_equal_GomClassList(begin,end)) {      return ( tom.gom.adt.objects.types.GomClassList )tom_empty_list_concGomClass();    } else {      return ( tom.gom.adt.objects.types.GomClassList )tom_cons_list_concGomClass(( tom.gom.adt.objects.types.GomClass )tom_get_head_concGomClass_GomClassList(begin),( tom.gom.adt.objects.types.GomClassList )tom_get_slice_concGomClass(( tom.gom.adt.objects.types.GomClassList )tom_get_tail_concGomClass_GomClassList(begin),end));    }   }   /* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file */  


  GomBackend(TemplateFactory templatefactory, File tomHomePath, List importList) {
    this.templatefactory = templatefactory;
    this.tomHomePath = tomHomePath;
    this.importList = importList;
  }

  private GomEnvironment environment() {
    return GomEnvironment.getInstance();
  }

  private Map mappingForMappingName = new HashMap();

  public int generate(GomClassList classList) {
    int errno = 0;
    // populate the mappingForMappingName Map
     if(classList instanceof  tom.gom.adt.objects.types.GomClassList ) { { tom.gom.adt.objects.types.GomClassList  tom_match1_1=(( tom.gom.adt.objects.types.GomClassList )classList); if ( ( tom_is_fun_sym_concGomClass(tom_match1_1) ||  false  ) ) { { tom.gom.adt.objects.types.GomClassList  tom_match1_1_list1=tom_match1_1; { tom.gom.adt.objects.types.GomClassList  tom_match1_1_begin1=tom_match1_1_list1; { tom.gom.adt.objects.types.GomClassList  tom_match1_1_end1=tom_match1_1_list1; { while (!(tom_is_empty_concGomClass_GomClassList(tom_match1_1_end1))) {tom_match1_1_list1=tom_match1_1_end1; { { tom.gom.adt.objects.types.GomClass  tom_match1_1_2=tom_get_head_concGomClass_GomClassList(tom_match1_1_list1);tom_match1_1_list1=tom_get_tail_concGomClass_GomClassList(tom_match1_1_list1); if ( ( tom_is_fun_sym_TomMapping(tom_match1_1_2) ||  false  ) ) { { tom.gom.adt.objects.types.GomClass  tom_mapping=tom_match1_1_2; { tom.gom.adt.objects.types.ClassName  tom_match1_1_2_ClassName=tom_get_slot_TomMapping_ClassName(tom_match1_1_2); { tom.gom.adt.objects.types.ClassName  tom_mappingName=tom_match1_1_2_ClassName; if ( true ) {

        mappingForMappingName.put(tom_mappingName,tom_mapping);
       } } } } } }tom_match1_1_end1=tom_get_tail_concGomClass_GomClassList(tom_match1_1_end1); } }tom_match1_1_list1=tom_match1_1_begin1; } } } } } } }

    // generate a class for each element of the list
    while (!classList.isEmptyconcGomClass()) {
      GomClass gomclass = classList.getHeadconcGomClass();
      classList = classList.getTailconcGomClass();
      errno += generateClass(gomclass);
    }
    return 1;
  }

  /*
   * Create template classes for the different classes to generate
   */
  public int generateClass(GomClass gomclass) {
     if(gomclass instanceof  tom.gom.adt.objects.types.GomClass ) { { tom.gom.adt.objects.types.GomClass  tom_match2_1=(( tom.gom.adt.objects.types.GomClass )gomclass); if ( ( tom_is_fun_sym_TomMapping(tom_match2_1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_match2_1_ClassName=tom_get_slot_TomMapping_ClassName(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_BasicStrategy=tom_get_slot_TomMapping_BasicStrategy(tom_match2_1); { tom.gom.adt.objects.types.GomClassList  tom_match2_1_SortClasses=tom_get_slot_TomMapping_SortClasses(tom_match2_1); { tom.gom.adt.objects.types.GomClassList  tom_match2_1_OperatorClasses=tom_get_slot_TomMapping_OperatorClasses(tom_match2_1); if ( ( tom_is_fun_sym_ClassName(tom_match2_1_ClassName) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_className=tom_match2_1_ClassName; { String  tom_match2_1_ClassName_Pkg=tom_get_slot_ClassName_Pkg(tom_match2_1_ClassName); { String  tom_match2_1_ClassName_Name=tom_get_slot_ClassName_Name(tom_match2_1_ClassName); { String  tom_pkg=tom_match2_1_ClassName_Pkg; { String  tom_name=tom_match2_1_ClassName_Name; { tom.gom.adt.objects.types.ClassName  tom_basicStrategy=tom_match2_1_BasicStrategy; { tom.gom.adt.objects.types.GomClassList  tom_sortClasses=tom_match2_1_SortClasses; { tom.gom.adt.objects.types.GomClassList  tom_ops=tom_match2_1_OperatorClasses; if ( true ) {

        TemplateClass mapping = templatefactory.makeTomMappingTemplate(tom_className,tom_basicStrategy,tom_sortClasses,tom_ops);
        mapping.generateFile();

        TemplateClass stratMapping = 
          new tom.gom.backend.strategy.StratMappingTemplate(tom_make_ClassName(tom_pkg,"_"+tom_name),tom_ops);
        stratMapping.generateFile();
        return 1;
       } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_FwdClass(tom_match2_1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_match2_1_ClassName=tom_get_slot_FwdClass_ClassName(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_Visitor=tom_get_slot_FwdClass_Visitor(tom_match2_1); { tom.gom.adt.objects.types.ClassNameList  tom_match2_1_ImportedVisitors=tom_get_slot_FwdClass_ImportedVisitors(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_AbstractType=tom_get_slot_FwdClass_AbstractType(tom_match2_1); { tom.gom.adt.objects.types.ClassNameList  tom_match2_1_ImportedAbstractTypes=tom_get_slot_FwdClass_ImportedAbstractTypes(tom_match2_1); { tom.gom.adt.objects.types.GomClassList  tom_match2_1_SortClasses=tom_get_slot_FwdClass_SortClasses(tom_match2_1); { tom.gom.adt.objects.types.GomClassList  tom_match2_1_OperatorClasses=tom_get_slot_FwdClass_OperatorClasses(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_className=tom_match2_1_ClassName; { tom.gom.adt.objects.types.ClassName  tom_visitorClass=tom_match2_1_Visitor; { tom.gom.adt.objects.types.ClassNameList  tom_importedVisitors=tom_match2_1_ImportedVisitors; { tom.gom.adt.objects.types.ClassName  tom_abstractType=tom_match2_1_AbstractType; { tom.gom.adt.objects.types.ClassNameList  tom_imported=tom_match2_1_ImportedAbstractTypes; { tom.gom.adt.objects.types.GomClassList  tom_sortClasses=tom_match2_1_SortClasses; { tom.gom.adt.objects.types.GomClassList  tom_ops=tom_match2_1_OperatorClasses; if ( true ) {







        TemplateClass fwd = templatefactory.makeForwardTemplate(tom_className,tom_visitorClass,tom_importedVisitors,tom_abstractType,tom_imported,tom_sortClasses,tom_ops);
        fwd.generateFile();
        return 1;
       } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_VisitableFwdClass(tom_match2_1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_match2_1_ClassName=tom_get_slot_VisitableFwdClass_ClassName(tom_match2_1); { tom.gom.adt.objects.types.GomClass  tom_match2_1_Fwd=tom_get_slot_VisitableFwdClass_Fwd(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_className=tom_match2_1_ClassName; if ( ( tom_is_fun_sym_FwdClass(tom_match2_1_Fwd) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_match2_1_Fwd_ClassName=tom_get_slot_FwdClass_ClassName(tom_match2_1_Fwd); { tom.gom.adt.objects.types.ClassName  tom_fwdClass=tom_match2_1_Fwd_ClassName; if ( true ) {

        TemplateClass visitablefwd = templatefactory.makeVisitableForwardTemplate(tom_className,tom_fwdClass);
        visitablefwd.generateFile();
        return 1;
       } } } } } } } } if ( ( tom_is_fun_sym_VisitorClass(tom_match2_1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_match2_1_ClassName=tom_get_slot_VisitorClass_ClassName(tom_match2_1); { tom.gom.adt.objects.types.GomClassList  tom_match2_1_SortClasses=tom_get_slot_VisitorClass_SortClasses(tom_match2_1); { tom.gom.adt.objects.types.GomClassList  tom_match2_1_OperatorClasses=tom_get_slot_VisitorClass_OperatorClasses(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_className=tom_match2_1_ClassName; { tom.gom.adt.objects.types.GomClassList  tom_sortClasses=tom_match2_1_SortClasses; { tom.gom.adt.objects.types.GomClassList  tom_ops=tom_match2_1_OperatorClasses; if ( true ) {

        TemplateClass visitor = templatefactory.makeVisitorTemplate(tom_className,tom_sortClasses,tom_ops);
        visitor.generateFile();
        return 1;
       } } } } } } } } if ( ( tom_is_fun_sym_AbstractTypeClass(tom_match2_1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_match2_1_ClassName=tom_get_slot_AbstractTypeClass_ClassName(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_Visitor=tom_get_slot_AbstractTypeClass_Visitor(tom_match2_1); { tom.gom.adt.objects.types.ClassNameList  tom_match2_1_SortList=tom_get_slot_AbstractTypeClass_SortList(tom_match2_1); { tom.gom.adt.objects.types.HookList  tom_match2_1_Hooks=tom_get_slot_AbstractTypeClass_Hooks(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_className=tom_match2_1_ClassName; { tom.gom.adt.objects.types.ClassName  tom_visitorName=tom_match2_1_Visitor; { tom.gom.adt.objects.types.ClassNameList  tom_sortList=tom_match2_1_SortList; { tom.gom.adt.objects.types.HookList  tom_hooks=tom_match2_1_Hooks; if ( true ) {




        TemplateClass abstracttype = templatefactory.makeAbstractTypeTemplate(tom_className,tom_visitorName,tom_sortList,tom_hooks);
        abstracttype.generateFile();
        return 1;
       } } } } } } } } } } if ( ( tom_is_fun_sym_SortClass(tom_match2_1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_match2_1_ClassName=tom_get_slot_SortClass_ClassName(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_AbstractType=tom_get_slot_SortClass_AbstractType(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_Visitor=tom_get_slot_SortClass_Visitor(tom_match2_1); { tom.gom.adt.objects.types.ClassNameList  tom_match2_1_Operators=tom_get_slot_SortClass_Operators(tom_match2_1); { tom.gom.adt.objects.types.SlotFieldList  tom_match2_1_Slots=tom_get_slot_SortClass_Slots(tom_match2_1); { tom.gom.adt.objects.types.HookList  tom_match2_1_Hooks=tom_get_slot_SortClass_Hooks(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_className=tom_match2_1_ClassName; { tom.gom.adt.objects.types.ClassName  tom_abstracttype=tom_match2_1_AbstractType; { tom.gom.adt.objects.types.ClassName  tom_visitorName=tom_match2_1_Visitor; { tom.gom.adt.objects.types.ClassNameList  tom_ops=tom_match2_1_Operators; { tom.gom.adt.objects.types.SlotFieldList  tom_slots=tom_match2_1_Slots; { tom.gom.adt.objects.types.HookList  tom_hooks=tom_match2_1_Hooks; if ( true ) {






        TemplateClass sort = templatefactory.makeSortTemplate(tom_className,tom_abstracttype,tom_visitorName,tom_ops,tom_slots,tom_hooks);
        sort.generateFile();
        return 1;
       } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_OperatorClass(tom_match2_1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_match2_1_ClassName=tom_get_slot_OperatorClass_ClassName(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_AbstractType=tom_get_slot_OperatorClass_AbstractType(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_ExtendsType=tom_get_slot_OperatorClass_ExtendsType(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_Mapping=tom_get_slot_OperatorClass_Mapping(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_SortName=tom_get_slot_OperatorClass_SortName(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_Visitor=tom_get_slot_OperatorClass_Visitor(tom_match2_1); { tom.gom.adt.objects.types.SlotFieldList  tom_match2_1_Slots=tom_get_slot_OperatorClass_Slots(tom_match2_1); { tom.gom.adt.objects.types.HookList  tom_match2_1_Hooks=tom_get_slot_OperatorClass_Hooks(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_className=tom_match2_1_ClassName; { tom.gom.adt.objects.types.ClassName  tom_abstracttype=tom_match2_1_AbstractType; { tom.gom.adt.objects.types.ClassName  tom_extendstype=tom_match2_1_ExtendsType; { tom.gom.adt.objects.types.ClassName  tom_mapping=tom_match2_1_Mapping; { tom.gom.adt.objects.types.ClassName  tom_sort=tom_match2_1_SortName; { tom.gom.adt.objects.types.ClassName  tom_visitorName=tom_match2_1_Visitor; { tom.gom.adt.objects.types.SlotFieldList  tom_slots=tom_match2_1_Slots; { tom.gom.adt.objects.types.HookList  tom_hooks=tom_match2_1_Hooks; if ( true ) {








        GomClass mappingClass = (GomClass)mappingForMappingName.get(tom_mapping);
        TemplateClass operator = templatefactory.makeOperatorTemplate(
            tomHomePath,
            importList,
            tom_className,
            tom_abstracttype,
            tom_extendstype,
            tom_sort,
            tom_visitorName,
            tom_slots,
            tom_hooks,
            getMappingTemplate(mappingClass));
        operator.generateFile();

        TemplateClass isOpStrat = new tom.gom.backend.strategy.IsOpTemplate(tom_className);
        isOpStrat.generateFile();

        TemplateClass sOpStrat = new tom.gom.backend.strategy.SOpTemplate(tom_className,tom_slots);
        sOpStrat.generateFile();

        TemplateClass makeOpStrat = new tom.gom.backend.strategy.MakeOpTemplate(tom_className,tom_slots);
        makeOpStrat.generateFile();
        return 1;
       } } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_VariadicOperatorClass(tom_match2_1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_match2_1_ClassName=tom_get_slot_VariadicOperatorClass_ClassName(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_AbstractType=tom_get_slot_VariadicOperatorClass_AbstractType(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_match2_1_SortName=tom_get_slot_VariadicOperatorClass_SortName(tom_match2_1); { tom.gom.adt.objects.types.GomClass  tom_match2_1_Empty=tom_get_slot_VariadicOperatorClass_Empty(tom_match2_1); { tom.gom.adt.objects.types.GomClass  tom_match2_1_Cons=tom_get_slot_VariadicOperatorClass_Cons(tom_match2_1); { tom.gom.adt.objects.types.HookList  tom_match2_1_Hooks=tom_get_slot_VariadicOperatorClass_Hooks(tom_match2_1); { tom.gom.adt.objects.types.ClassName  tom_className=tom_match2_1_ClassName; { tom.gom.adt.objects.types.ClassName  tom_abstracttype=tom_match2_1_AbstractType; { tom.gom.adt.objects.types.ClassName  tom_sort=tom_match2_1_SortName; { tom.gom.adt.objects.types.GomClass  tom_empty=tom_match2_1_Empty; { tom.gom.adt.objects.types.GomClass  tom_cons=tom_match2_1_Cons; { tom.gom.adt.objects.types.HookList  tom_hooks=tom_match2_1_Hooks; if ( true ) {






        TemplateClass operator = templatefactory.makeVariadicOperatorTemplate(tom_className,tom_abstracttype,tom_sort,tom_empty,tom_cons,tom_hooks);
        operator.generateFile();
        return 1;
       } } } } } } } } } } } } } } } }

    throw new GomRuntimeException("Trying to generate code for a strange class: "+gomclass);
  }

  public TemplateClass getMappingTemplate(GomClass mapping) {
    TemplateClass mappingTemplate = null;
     if(mapping instanceof  tom.gom.adt.objects.types.GomClass ) { { tom.gom.adt.objects.types.GomClass  tom_match3_1=(( tom.gom.adt.objects.types.GomClass )mapping); if ( ( tom_is_fun_sym_TomMapping(tom_match3_1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_match3_1_ClassName=tom_get_slot_TomMapping_ClassName(tom_match3_1); { tom.gom.adt.objects.types.ClassName  tom_match3_1_BasicStrategy=tom_get_slot_TomMapping_BasicStrategy(tom_match3_1); { tom.gom.adt.objects.types.GomClassList  tom_match3_1_SortClasses=tom_get_slot_TomMapping_SortClasses(tom_match3_1); { tom.gom.adt.objects.types.GomClassList  tom_match3_1_OperatorClasses=tom_get_slot_TomMapping_OperatorClasses(tom_match3_1); { tom.gom.adt.objects.types.ClassName  tom_mappingName=tom_match3_1_ClassName; { tom.gom.adt.objects.types.ClassName  tom_basicStrategy=tom_match3_1_BasicStrategy; { tom.gom.adt.objects.types.GomClassList  tom_sortClasses=tom_match3_1_SortClasses; { tom.gom.adt.objects.types.GomClassList  tom_ops=tom_match3_1_OperatorClasses; if ( true ) {




        mappingTemplate = templatefactory.makeTomMappingTemplate(tom_mappingName,tom_basicStrategy,tom_sortClasses,tom_ops);
       } } } } } } } } } } } }

    return mappingTemplate;
  }
}

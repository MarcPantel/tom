/* Generated by TOM (version 2.4rc2): Do not edit this file *//*
 * Gom
 *
 * Copyright (C) 2006 INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.backend;

import tom.gom.GomStreamManager;
import tom.gom.tools.GomEnvironment;
import tom.gom.adt.objects.*;
import tom.gom.adt.objects.types.*;
import tom.gom.tools.error.GomRuntimeException;
import java.io.*;

public abstract class TemplateClass {
  protected ClassName className;

  public TemplateClass(ClassName className) {
    this.className = className;
  }

  /* Generated by TOM (version 2.4rc2): Do not edit this file *//* Generated by TOM (version 2.4rc2): Do not edit this file *//* Generated by TOM (version 2.4rc2): Do not edit this file */ private static boolean tom_terms_equal_String(String t1, String t2) {  return  (t1.equals(t2))  ;}  private static boolean tom_terms_equal_ClassName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SlotField(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_fun_sym_ClassName( tom.gom.adt.objects.types.ClassName  t) {  return  t instanceof tom.gom.adt.objects.types.classname.ClassName  ;}private static  String  tom_get_slot_ClassName_Pkg( tom.gom.adt.objects.types.ClassName  t) {  return  t.getPkg()  ;}private static  String  tom_get_slot_ClassName_Name( tom.gom.adt.objects.types.ClassName  t) {  return  t.getName()  ;}private static boolean tom_is_fun_sym_SlotField( tom.gom.adt.objects.types.SlotField  t) {  return  t instanceof tom.gom.adt.objects.types.slotfield.SlotField  ;}private static  String  tom_get_slot_SlotField_Name( tom.gom.adt.objects.types.SlotField  t) {  return  t.getName()  ;}private static  tom.gom.adt.objects.types.ClassName  tom_get_slot_SlotField_Domain( tom.gom.adt.objects.types.SlotField  t) {  return  t.getDomain()  ;} 

  public abstract void generate(Writer writer) throws java.io.IOException;

  public String className() {
    return className(this.className);
  }
  public String className(ClassName clsName) {
     if(clsName instanceof  tom.gom.adt.objects.types.ClassName ) { { tom.gom.adt.objects.types.ClassName  tom_match1_1=(( tom.gom.adt.objects.types.ClassName )clsName); if ( ( tom_is_fun_sym_ClassName(tom_match1_1) ||  false  ) ) { { String  tom_match1_1_Name=tom_get_slot_ClassName_Name(tom_match1_1); { String  tom_name=tom_match1_1_Name; {boolean tom_match1_tom_anti_constraints_status= true ; if ((tom_match1_tom_anti_constraints_status ==  true )) { if ( true ) {

        return tom_name;
       } } } } } } } }

    throw new GomRuntimeException("TemplateClass:className got a strange ClassName");
  }
  public String fullClassName() {
    return fullClassName(this.className);
  }
  public String fullClassName(ClassName clsName) {
     if(clsName instanceof  tom.gom.adt.objects.types.ClassName ) { { tom.gom.adt.objects.types.ClassName  tom_match2_1=(( tom.gom.adt.objects.types.ClassName )clsName); if ( ( tom_is_fun_sym_ClassName(tom_match2_1) ||  false  ) ) { { String  tom_match2_1_Pkg=tom_get_slot_ClassName_Pkg(tom_match2_1); { String  tom_match2_1_Name=tom_get_slot_ClassName_Name(tom_match2_1); { String  tom_pkgPrefix=tom_match2_1_Pkg; { String  tom_name=tom_match2_1_Name; {boolean tom_match2_tom_anti_constraints_status= true ; if ((tom_match2_tom_anti_constraints_status ==  true )) { if ( true ) {

        if(tom_pkgPrefix.length()==0) {
          return tom_name;
        } else {
          return tom_pkgPrefix+"."+tom_name;
        }
       } } } } } } } } } }

    throw new GomRuntimeException("TemplateClass:fullClassName got a strange ClassName "+clsName);
  }

  public String getPackage() {
    return getPackage(this.className);
  }
  public String getPackage(ClassName clsName) {
     if(clsName instanceof  tom.gom.adt.objects.types.ClassName ) { { tom.gom.adt.objects.types.ClassName  tom_match3_1=(( tom.gom.adt.objects.types.ClassName )clsName); if ( ( tom_is_fun_sym_ClassName(tom_match3_1) ||  false  ) ) { { String  tom_match3_1_Pkg=tom_get_slot_ClassName_Pkg(tom_match3_1); { String  tom_pkg=tom_match3_1_Pkg; {boolean tom_match3_tom_anti_constraints_status= true ; if ((tom_match3_tom_anti_constraints_status ==  true )) { if ( true ) {

        return tom_pkg;
       } } } } } } } }

    throw new GomRuntimeException("TemplateClass:getPackage got a strange ClassName");
  }

  public String hasMethod(SlotField slot) {
     if(slot instanceof  tom.gom.adt.objects.types.SlotField ) { { tom.gom.adt.objects.types.SlotField  tom_match4_1=(( tom.gom.adt.objects.types.SlotField )slot); if ( ( tom_is_fun_sym_SlotField(tom_match4_1) ||  false  ) ) { { String  tom_match4_1_Name=tom_get_slot_SlotField_Name(tom_match4_1); { String  tom_name=tom_match4_1_Name; {boolean tom_match4_tom_anti_constraints_status= true ; if ((tom_match4_tom_anti_constraints_status ==  true )) { if ( true ) {

        return "has"+tom_name;
       } } } } } } } }

    throw new GomRuntimeException("TemplateClass:hasMethod got a strange SlotField");
  }
  public String getMethod(SlotField slot) {
     if(slot instanceof  tom.gom.adt.objects.types.SlotField ) { { tom.gom.adt.objects.types.SlotField  tom_match5_1=(( tom.gom.adt.objects.types.SlotField )slot); if ( ( tom_is_fun_sym_SlotField(tom_match5_1) ||  false  ) ) { { String  tom_match5_1_Name=tom_get_slot_SlotField_Name(tom_match5_1); { String  tom_name=tom_match5_1_Name; {boolean tom_match5_tom_anti_constraints_status= true ; if ((tom_match5_tom_anti_constraints_status ==  true )) { if ( true ) {

        return "get"+tom_name;
       } } } } } } } }

    throw new GomRuntimeException("TemplateClass:getMethod got a strange SlotField");
  }
  public String setMethod(SlotField slot) {
     if(slot instanceof  tom.gom.adt.objects.types.SlotField ) { { tom.gom.adt.objects.types.SlotField  tom_match6_1=(( tom.gom.adt.objects.types.SlotField )slot); if ( ( tom_is_fun_sym_SlotField(tom_match6_1) ||  false  ) ) { { String  tom_match6_1_Name=tom_get_slot_SlotField_Name(tom_match6_1); { String  tom_name=tom_match6_1_Name; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {

        return "set"+tom_name;
       } } } } } } } }

    throw new GomRuntimeException("TemplateClass:getMethod got a strange SlotField");
  }
  public String index(SlotField slot) {
     if(slot instanceof  tom.gom.adt.objects.types.SlotField ) { { tom.gom.adt.objects.types.SlotField  tom_match7_1=(( tom.gom.adt.objects.types.SlotField )slot); if ( ( tom_is_fun_sym_SlotField(tom_match7_1) ||  false  ) ) { { String  tom_match7_1_Name=tom_get_slot_SlotField_Name(tom_match7_1); { String  tom_name=tom_match7_1_Name; {boolean tom_match7_tom_anti_constraints_status= true ; if ((tom_match7_tom_anti_constraints_status ==  true )) { if ( true ) {

        return "index_"+tom_name;
       } } } } } } } }

    throw new GomRuntimeException("TemplateClass:index got a strange SlotField");
  }
  public String slotDomain(SlotField slot) {
     if(slot instanceof  tom.gom.adt.objects.types.SlotField ) { { tom.gom.adt.objects.types.SlotField  tom_match8_1=(( tom.gom.adt.objects.types.SlotField )slot); if ( ( tom_is_fun_sym_SlotField(tom_match8_1) ||  false  ) ) { { tom.gom.adt.objects.types.ClassName  tom_match8_1_Domain=tom_get_slot_SlotField_Domain(tom_match8_1); { tom.gom.adt.objects.types.ClassName  tom_domain=tom_match8_1_Domain; {boolean tom_match8_tom_anti_constraints_status= true ; if ((tom_match8_tom_anti_constraints_status ==  true )) { if ( true ) {

        return fullClassName(tom_domain);
       } } } } } } } }

    throw new GomRuntimeException("TemplateClass:slotDomain got a strange SlotField");
  }
  public String fieldName(ClassName clsName) {
     if(clsName instanceof  tom.gom.adt.objects.types.ClassName ) { { tom.gom.adt.objects.types.ClassName  tom_match9_1=(( tom.gom.adt.objects.types.ClassName )clsName); if ( ( tom_is_fun_sym_ClassName(tom_match9_1) ||  false  ) ) { { String  tom_match9_1_Name=tom_get_slot_ClassName_Name(tom_match9_1); { String  tom_name=tom_match9_1_Name; {boolean tom_match9_tom_anti_constraints_status= true ; if ((tom_match9_tom_anti_constraints_status ==  true )) { if ( true ) {

        return tom_name.toLowerCase();
       } } } } } } } }

    throw new GomRuntimeException("TemplateClass:className got a strange ClassName");
  }

  protected String fileName() {
    return fullClassName().replace('.',File.separatorChar)+".java";
  }

  protected File fileToGenerate() {
    GomStreamManager stream = GomEnvironment.getInstance().getStreamManager();
    File output = new File(stream.getDestDir(),fileName());
    return output;
  }

  public int generateFile() {
    try {
       File output = fileToGenerate();
       // make sure the directory exists
       output.getParentFile().mkdirs();
       Writer writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(output)));
       generate(writer);
       writer.flush();
       writer.close();
    } catch(Exception e) {
      e.printStackTrace();
      return 1;
    }
    return 0;
  }

  public String visitMethod(ClassName sortName) {
    return "visit_"+className(sortName);
  }
  public String isOperatorMethod(ClassName opName) {
    return "is"+className(opName);
  }
}

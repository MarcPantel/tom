/* Generated by TOM (version 2.5alpha): Do not edit this file *//*
 *
 * GOM
 *
 * Copyright (C) 2006-2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.expander;

import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.gom.GomMessage;
import tom.gom.GomStreamManager;
import tom.gom.tools.GomEnvironment;
import tom.gom.adt.gom.*;
import tom.gom.adt.gom.types.*;
import tom.gom.tools.error.GomRuntimeException;

public class HookTypeExpander {

  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_terms_equal_String(String t1, String t2) {  return  (t1.equals(t2))  ;}  private static boolean tom_terms_equal_Code(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Slot(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ArgList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_IdKind(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomModuleList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GrammarList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TypedProduction(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SectionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_OperatorDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_HookDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_OperatorDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomModule(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Section(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ProductionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Decl(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Sort(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SortDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_HookDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Module(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Grammar(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SlotList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SortList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Arg(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomModuleName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Production(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ModuleDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ModuleList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_HookKind(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static  tom.gom.adt.code.types.Code  tom_make_Code( String  t0) { return  tom.gom.adt.code.types.code.Code.make(t0); }private static  tom.gom.adt.code.types.Code  tom_make_IsEmpty( String  t0,  tom.gom.adt.gom.types.OperatorDecl  t1) { return  tom.gom.adt.code.types.code.IsEmpty.make(t0, t1); }private static  tom.gom.adt.code.types.Code  tom_make_IsCons( String  t0,  tom.gom.adt.gom.types.OperatorDecl  t1) { return  tom.gom.adt.code.types.code.IsCons.make(t0, t1); }private static  tom.gom.adt.code.types.Code  tom_make_Empty( tom.gom.adt.gom.types.OperatorDecl  t0) { return  tom.gom.adt.code.types.code.Empty.make(t0); }private static  tom.gom.adt.code.types.Code  tom_make_Cons( tom.gom.adt.gom.types.OperatorDecl  t0) { return  tom.gom.adt.code.types.code.Cons.make(t0); }private static  tom.gom.adt.code.types.Code  tom_make_FullSortClass( tom.gom.adt.gom.types.SortDecl  t0) { return  tom.gom.adt.code.types.code.FullSortClass.make(t0); }private static  tom.gom.adt.code.types.Code  tom_make_Compare( tom.gom.adt.code.types.Code  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.code.types.code.Compare.make(t0, t1); }private static boolean tom_is_fun_sym_Slot( tom.gom.adt.gom.types.Slot  t) {  return  t instanceof tom.gom.adt.gom.types.slot.Slot  ;}private static  tom.gom.adt.gom.types.Slot  tom_make_Slot( String  t0,  tom.gom.adt.gom.types.SortDecl  t1) { return  tom.gom.adt.gom.types.slot.Slot.make(t0, t1); }private static  String  tom_get_slot_Slot_Name( tom.gom.adt.gom.types.Slot  t) {  return  t.getName()  ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Slot_Sort( tom.gom.adt.gom.types.Slot  t) {  return  t.getSort()  ;}private static boolean tom_is_fun_sym_KindModule( tom.gom.adt.gom.types.IdKind  t) {  return  t instanceof tom.gom.adt.gom.types.idkind.KindModule  ;}private static boolean tom_is_fun_sym_KindSort( tom.gom.adt.gom.types.IdKind  t) {  return  t instanceof tom.gom.adt.gom.types.idkind.KindSort  ;}private static boolean tom_is_fun_sym_KindOperator( tom.gom.adt.gom.types.IdKind  t) {  return  t instanceof tom.gom.adt.gom.types.idkind.KindOperator  ;}private static boolean tom_is_fun_sym_Slots( tom.gom.adt.gom.types.TypedProduction  t) {  return  t instanceof tom.gom.adt.gom.types.typedproduction.Slots  ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_slot_Slots_Slots( tom.gom.adt.gom.types.TypedProduction  t) {  return  t.getSlots()  ;}private static boolean tom_is_fun_sym_Variadic( tom.gom.adt.gom.types.TypedProduction  t) {  return  t instanceof tom.gom.adt.gom.types.typedproduction.Variadic  ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Variadic_Sort( tom.gom.adt.gom.types.TypedProduction  t) {  return  t.getSort()  ;}private static boolean tom_is_fun_sym_OperatorDecl( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t instanceof tom.gom.adt.gom.types.operatordecl.OperatorDecl  ;}private static  String  tom_get_slot_OperatorDecl_Name( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t.getName()  ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_OperatorDecl_Sort( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t.getSort()  ;}private static  tom.gom.adt.gom.types.TypedProduction  tom_get_slot_OperatorDecl_Prod( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t.getProd()  ;}private static boolean tom_is_fun_sym_GomModule( tom.gom.adt.gom.types.GomModule  t) {  return  t instanceof tom.gom.adt.gom.types.gommodule.GomModule  ;}private static  tom.gom.adt.gom.types.GomModuleName  tom_get_slot_GomModule_ModuleName( tom.gom.adt.gom.types.GomModule  t) {  return  t.getModuleName()  ;}private static  tom.gom.adt.gom.types.SectionList  tom_get_slot_GomModule_SectionList( tom.gom.adt.gom.types.GomModule  t) {  return  t.getSectionList()  ;}private static boolean tom_is_fun_sym_Public( tom.gom.adt.gom.types.Section  t) {  return  t instanceof tom.gom.adt.gom.types.section.Public  ;}private static  tom.gom.adt.gom.types.GrammarList  tom_get_slot_Public_GrammarList( tom.gom.adt.gom.types.Section  t) {  return  t.getGrammarList()  ;}private static  tom.gom.adt.gom.types.Decl  tom_make_CutModule( tom.gom.adt.gom.types.ModuleDecl  t0) { return  tom.gom.adt.gom.types.decl.CutModule.make(t0); }private static  tom.gom.adt.gom.types.Decl  tom_make_CutSort( tom.gom.adt.gom.types.SortDecl  t0) { return  tom.gom.adt.gom.types.decl.CutSort.make(t0); }private static boolean tom_is_fun_sym_CutOperator( tom.gom.adt.gom.types.Decl  t) {  return  t instanceof tom.gom.adt.gom.types.decl.CutOperator  ;}private static  tom.gom.adt.gom.types.Decl  tom_make_CutOperator( tom.gom.adt.gom.types.OperatorDecl  t0) { return  tom.gom.adt.gom.types.decl.CutOperator.make(t0); }private static  tom.gom.adt.gom.types.OperatorDecl  tom_get_slot_CutOperator_ODecl( tom.gom.adt.gom.types.Decl  t) {  return  t.getODecl()  ;}private static boolean tom_is_fun_sym_Sort( tom.gom.adt.gom.types.Sort  t) {  return  t instanceof tom.gom.adt.gom.types.sort.Sort  ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Sort_Decl( tom.gom.adt.gom.types.Sort  t) {  return  t.getDecl()  ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_slot_Sort_Operators( tom.gom.adt.gom.types.Sort  t) {  return  t.getOperators()  ;}private static boolean tom_is_fun_sym_SortDecl( tom.gom.adt.gom.types.SortDecl  t) {  return  t instanceof tom.gom.adt.gom.types.sortdecl.SortDecl  ;}private static  String  tom_get_slot_SortDecl_Name( tom.gom.adt.gom.types.SortDecl  t) {  return  t.getName()  ;}private static  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_SortDecl_ModuleDecl( tom.gom.adt.gom.types.SortDecl  t) {  return  t.getModuleDecl()  ;}private static  tom.gom.adt.gom.types.HookDecl  tom_make_MakeHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.gom.types.SlotList  t1,  tom.gom.adt.code.types.Code  t2) { return  tom.gom.adt.gom.types.hookdecl.MakeHookDecl.make(t0, t1, t2); }private static  tom.gom.adt.gom.types.HookDecl  tom_make_BlockHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.gom.types.hookdecl.BlockHookDecl.make(t0, t1); }private static  tom.gom.adt.gom.types.HookDecl  tom_make_InterfaceHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.gom.types.hookdecl.InterfaceHookDecl.make(t0, t1); }private static  tom.gom.adt.gom.types.HookDecl  tom_make_ImportHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.gom.types.hookdecl.ImportHookDecl.make(t0, t1); }private static  tom.gom.adt.gom.types.HookDecl  tom_make_MappingHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.gom.types.hookdecl.MappingHookDecl.make(t0, t1); }private static boolean tom_is_fun_sym_Module( tom.gom.adt.gom.types.Module  t) {  return  t instanceof tom.gom.adt.gom.types.module.Module  ;}private static  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_Module_MDecl( tom.gom.adt.gom.types.Module  t) {  return  t.getMDecl()  ;}private static  tom.gom.adt.gom.types.SortList  tom_get_slot_Module_Sorts( tom.gom.adt.gom.types.Module  t) {  return  t.getSorts()  ;}private static boolean tom_is_fun_sym_Grammar( tom.gom.adt.gom.types.Grammar  t) {  return  t instanceof tom.gom.adt.gom.types.grammar.Grammar  ;}private static  tom.gom.adt.gom.types.ProductionList  tom_get_slot_Grammar_ProductionList( tom.gom.adt.gom.types.Grammar  t) {  return  t.getProductionList()  ;}private static boolean tom_is_fun_sym_Arg( tom.gom.adt.gom.types.Arg  t) {  return  t instanceof tom.gom.adt.gom.types.arg.Arg  ;}private static  String  tom_get_slot_Arg_Name( tom.gom.adt.gom.types.Arg  t) {  return  t.getName()  ;}private static boolean tom_is_fun_sym_GomModuleName( tom.gom.adt.gom.types.GomModuleName  t) {  return  t instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName  ;}private static  String  tom_get_slot_GomModuleName_Name( tom.gom.adt.gom.types.GomModuleName  t) {  return  t.getName()  ;}private static boolean tom_is_fun_sym_Hook( tom.gom.adt.gom.types.Production  t) {  return  t instanceof tom.gom.adt.gom.types.production.Hook  ;}private static  tom.gom.adt.gom.types.IdKind  tom_get_slot_Hook_NameType( tom.gom.adt.gom.types.Production  t) {  return  t.getNameType()  ;}private static  String  tom_get_slot_Hook_Name( tom.gom.adt.gom.types.Production  t) {  return  t.getName()  ;}private static  tom.gom.adt.gom.types.HookKind  tom_get_slot_Hook_HookType( tom.gom.adt.gom.types.Production  t) {  return  t.getHookType()  ;}private static  tom.gom.adt.gom.types.ArgList  tom_get_slot_Hook_Args( tom.gom.adt.gom.types.Production  t) {  return  t.getArgs()  ;}private static  String  tom_get_slot_Hook_StringCode( tom.gom.adt.gom.types.Production  t) {  return  t.getStringCode()  ;}private static boolean tom_is_fun_sym_ModuleDecl( tom.gom.adt.gom.types.ModuleDecl  t) {  return  t instanceof tom.gom.adt.gom.types.moduledecl.ModuleDecl  ;}private static  tom.gom.adt.gom.types.GomModuleName  tom_get_slot_ModuleDecl_ModuleName( tom.gom.adt.gom.types.ModuleDecl  t) {  return  t.getModuleName()  ;}private static  String  tom_get_slot_ModuleDecl_Pkg( tom.gom.adt.gom.types.ModuleDecl  t) {  return  t.getPkg()  ;}private static boolean tom_is_fun_sym_HookKind( tom.gom.adt.gom.types.HookKind  t) {  return  t instanceof tom.gom.adt.gom.types.hookkind.HookKind  ;}private static  String  tom_get_slot_HookKind_kind( tom.gom.adt.gom.types.HookKind  t) {  return  t.getkind()  ;}private static boolean tom_is_fun_sym_CodeList( tom.gom.adt.code.types.Code  t) {  return  t instanceof tom.gom.adt.code.types.code.ConsCodeList || t instanceof tom.gom.adt.code.types.code.EmptyCodeList  ;}private static  tom.gom.adt.code.types.Code  tom_empty_list_CodeList() { return  tom.gom.adt.code.types.code.EmptyCodeList.make() ; }private static  tom.gom.adt.code.types.Code  tom_cons_list_CodeList( tom.gom.adt.code.types.Code  e,  tom.gom.adt.code.types.Code  l) { return  tom.gom.adt.code.types.code.ConsCodeList.make(e,l) ; }private static  tom.gom.adt.code.types.Code  tom_get_head_CodeList_Code( tom.gom.adt.code.types.Code  l) {  return  l.getHeadCodeList()  ;}private static  tom.gom.adt.code.types.Code  tom_get_tail_CodeList_Code( tom.gom.adt.code.types.Code  l) {  return  l.getTailCodeList()  ;}private static boolean tom_is_empty_CodeList_Code( tom.gom.adt.code.types.Code  l) {  return  l.isEmptyCodeList()  ;}private static  tom.gom.adt.code.types.Code  tom_append_list_CodeList( tom.gom.adt.code.types.Code  l1,  tom.gom.adt.code.types.Code  l2) {    if(tom_is_empty_CodeList_Code(l1)) {     return l2;    } else if(tom_is_empty_CodeList_Code(l2)) {     return l1;    } else if(tom_is_empty_CodeList_Code(( tom.gom.adt.code.types.Code )tom_get_tail_CodeList_Code(l1))) {     return ( tom.gom.adt.code.types.Code )tom_cons_list_CodeList(( tom.gom.adt.code.types.Code )tom_get_head_CodeList_Code(l1),l2);    } else {      return ( tom.gom.adt.code.types.Code )tom_cons_list_CodeList(( tom.gom.adt.code.types.Code )tom_get_head_CodeList_Code(l1),tom_append_list_CodeList(( tom.gom.adt.code.types.Code )tom_get_tail_CodeList_Code(l1),l2));    }   }  private static  tom.gom.adt.code.types.Code  tom_get_slice_CodeList( tom.gom.adt.code.types.Code  begin,  tom.gom.adt.code.types.Code  end) {    if(tom_terms_equal_Code(begin,end)) {      return ( tom.gom.adt.code.types.Code )tom_empty_list_CodeList();    } else {      return ( tom.gom.adt.code.types.Code )tom_cons_list_CodeList(( tom.gom.adt.code.types.Code )tom_get_head_CodeList_Code(begin),( tom.gom.adt.code.types.Code )tom_get_slice_CodeList(( tom.gom.adt.code.types.Code )tom_get_tail_CodeList_Code(begin),end));    }   }  private static boolean tom_is_fun_sym_concArg( tom.gom.adt.gom.types.ArgList  t) {  return  t instanceof tom.gom.adt.gom.types.arglist.ConsconcArg || t instanceof tom.gom.adt.gom.types.arglist.EmptyconcArg  ;}private static  tom.gom.adt.gom.types.ArgList  tom_empty_list_concArg() { return  tom.gom.adt.gom.types.arglist.EmptyconcArg.make() ; }private static  tom.gom.adt.gom.types.ArgList  tom_cons_list_concArg( tom.gom.adt.gom.types.Arg  e,  tom.gom.adt.gom.types.ArgList  l) { return  tom.gom.adt.gom.types.arglist.ConsconcArg.make(e,l) ; }private static  tom.gom.adt.gom.types.Arg  tom_get_head_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) {  return  l.getHeadconcArg()  ;}private static  tom.gom.adt.gom.types.ArgList  tom_get_tail_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) {  return  l.getTailconcArg()  ;}private static boolean tom_is_empty_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) {  return  l.isEmptyconcArg()  ;}private static  tom.gom.adt.gom.types.ArgList  tom_append_list_concArg( tom.gom.adt.gom.types.ArgList  l1,  tom.gom.adt.gom.types.ArgList  l2) {    if(tom_is_empty_concArg_ArgList(l1)) {     return l2;    } else if(tom_is_empty_concArg_ArgList(l2)) {     return l1;    } else if(tom_is_empty_concArg_ArgList(( tom.gom.adt.gom.types.ArgList )tom_get_tail_concArg_ArgList(l1))) {     return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(( tom.gom.adt.gom.types.Arg )tom_get_head_concArg_ArgList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(( tom.gom.adt.gom.types.Arg )tom_get_head_concArg_ArgList(l1),tom_append_list_concArg(( tom.gom.adt.gom.types.ArgList )tom_get_tail_concArg_ArgList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.ArgList  tom_get_slice_concArg( tom.gom.adt.gom.types.ArgList  begin,  tom.gom.adt.gom.types.ArgList  end) {    if(tom_terms_equal_ArgList(begin,end)) {      return ( tom.gom.adt.gom.types.ArgList )tom_empty_list_concArg();    } else {      return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(( tom.gom.adt.gom.types.Arg )tom_get_head_concArg_ArgList(begin),( tom.gom.adt.gom.types.ArgList )tom_get_slice_concArg(( tom.gom.adt.gom.types.ArgList )tom_get_tail_concArg_ArgList(begin),end));    }   }  private static boolean tom_is_fun_sym_concGomModule( tom.gom.adt.gom.types.GomModuleList  t) {  return  t instanceof tom.gom.adt.gom.types.gommodulelist.ConsconcGomModule || t instanceof tom.gom.adt.gom.types.gommodulelist.EmptyconcGomModule  ;}private static  tom.gom.adt.gom.types.GomModuleList  tom_empty_list_concGomModule() { return  tom.gom.adt.gom.types.gommodulelist.EmptyconcGomModule.make() ; }private static  tom.gom.adt.gom.types.GomModuleList  tom_cons_list_concGomModule( tom.gom.adt.gom.types.GomModule  e,  tom.gom.adt.gom.types.GomModuleList  l) { return  tom.gom.adt.gom.types.gommodulelist.ConsconcGomModule.make(e,l) ; }private static  tom.gom.adt.gom.types.GomModule  tom_get_head_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) {  return  l.getHeadconcGomModule()  ;}private static  tom.gom.adt.gom.types.GomModuleList  tom_get_tail_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) {  return  l.getTailconcGomModule()  ;}private static boolean tom_is_empty_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) {  return  l.isEmptyconcGomModule()  ;}private static  tom.gom.adt.gom.types.GomModuleList  tom_append_list_concGomModule( tom.gom.adt.gom.types.GomModuleList  l1,  tom.gom.adt.gom.types.GomModuleList  l2) {    if(tom_is_empty_concGomModule_GomModuleList(l1)) {     return l2;    } else if(tom_is_empty_concGomModule_GomModuleList(l2)) {     return l1;    } else if(tom_is_empty_concGomModule_GomModuleList(( tom.gom.adt.gom.types.GomModuleList )tom_get_tail_concGomModule_GomModuleList(l1))) {     return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule(( tom.gom.adt.gom.types.GomModule )tom_get_head_concGomModule_GomModuleList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule(( tom.gom.adt.gom.types.GomModule )tom_get_head_concGomModule_GomModuleList(l1),tom_append_list_concGomModule(( tom.gom.adt.gom.types.GomModuleList )tom_get_tail_concGomModule_GomModuleList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.GomModuleList  tom_get_slice_concGomModule( tom.gom.adt.gom.types.GomModuleList  begin,  tom.gom.adt.gom.types.GomModuleList  end) {    if(tom_terms_equal_GomModuleList(begin,end)) {      return ( tom.gom.adt.gom.types.GomModuleList )tom_empty_list_concGomModule();    } else {      return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule(( tom.gom.adt.gom.types.GomModule )tom_get_head_concGomModule_GomModuleList(begin),( tom.gom.adt.gom.types.GomModuleList )tom_get_slice_concGomModule(( tom.gom.adt.gom.types.GomModuleList )tom_get_tail_concGomModule_GomModuleList(begin),end));    }   }  private static boolean tom_is_fun_sym_concGrammar( tom.gom.adt.gom.types.GrammarList  t) {  return  t instanceof tom.gom.adt.gom.types.grammarlist.ConsconcGrammar || t instanceof tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar  ;}private static  tom.gom.adt.gom.types.GrammarList  tom_empty_list_concGrammar() { return  tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar.make() ; }private static  tom.gom.adt.gom.types.GrammarList  tom_cons_list_concGrammar( tom.gom.adt.gom.types.Grammar  e,  tom.gom.adt.gom.types.GrammarList  l) { return  tom.gom.adt.gom.types.grammarlist.ConsconcGrammar.make(e,l) ; }private static  tom.gom.adt.gom.types.Grammar  tom_get_head_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.getHeadconcGrammar()  ;}private static  tom.gom.adt.gom.types.GrammarList  tom_get_tail_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.getTailconcGrammar()  ;}private static boolean tom_is_empty_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.isEmptyconcGrammar()  ;}private static  tom.gom.adt.gom.types.GrammarList  tom_append_list_concGrammar( tom.gom.adt.gom.types.GrammarList  l1,  tom.gom.adt.gom.types.GrammarList  l2) {    if(tom_is_empty_concGrammar_GrammarList(l1)) {     return l2;    } else if(tom_is_empty_concGrammar_GrammarList(l2)) {     return l1;    } else if(tom_is_empty_concGrammar_GrammarList(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(l1))) {     return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(l1),tom_append_list_concGrammar(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.GrammarList  tom_get_slice_concGrammar( tom.gom.adt.gom.types.GrammarList  begin,  tom.gom.adt.gom.types.GrammarList  end) {    if(tom_terms_equal_GrammarList(begin,end)) {      return ( tom.gom.adt.gom.types.GrammarList )tom_empty_list_concGrammar();    } else {      return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(begin),( tom.gom.adt.gom.types.GrammarList )tom_get_slice_concGrammar(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSection( tom.gom.adt.gom.types.SectionList  t) {  return  t instanceof tom.gom.adt.gom.types.sectionlist.ConsconcSection || t instanceof tom.gom.adt.gom.types.sectionlist.EmptyconcSection  ;}private static  tom.gom.adt.gom.types.SectionList  tom_empty_list_concSection() { return  tom.gom.adt.gom.types.sectionlist.EmptyconcSection.make() ; }private static  tom.gom.adt.gom.types.SectionList  tom_cons_list_concSection( tom.gom.adt.gom.types.Section  e,  tom.gom.adt.gom.types.SectionList  l) { return  tom.gom.adt.gom.types.sectionlist.ConsconcSection.make(e,l) ; }private static  tom.gom.adt.gom.types.Section  tom_get_head_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.getHeadconcSection()  ;}private static  tom.gom.adt.gom.types.SectionList  tom_get_tail_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.getTailconcSection()  ;}private static boolean tom_is_empty_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.isEmptyconcSection()  ;}private static  tom.gom.adt.gom.types.SectionList  tom_append_list_concSection( tom.gom.adt.gom.types.SectionList  l1,  tom.gom.adt.gom.types.SectionList  l2) {    if(tom_is_empty_concSection_SectionList(l1)) {     return l2;    } else if(tom_is_empty_concSection_SectionList(l2)) {     return l1;    } else if(tom_is_empty_concSection_SectionList(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(l1))) {     return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(l1),tom_append_list_concSection(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.SectionList  tom_get_slice_concSection( tom.gom.adt.gom.types.SectionList  begin,  tom.gom.adt.gom.types.SectionList  end) {    if(tom_terms_equal_SectionList(begin,end)) {      return ( tom.gom.adt.gom.types.SectionList )tom_empty_list_concSection();    } else {      return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(begin),( tom.gom.adt.gom.types.SectionList )tom_get_slice_concSection(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(begin),end));    }   }  private static boolean tom_is_fun_sym_concOperator( tom.gom.adt.gom.types.OperatorDeclList  t) {  return  t instanceof tom.gom.adt.gom.types.operatordecllist.ConsconcOperator || t instanceof tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator  ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_empty_list_concOperator() { return  tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator.make() ; }private static  tom.gom.adt.gom.types.OperatorDeclList  tom_cons_list_concOperator( tom.gom.adt.gom.types.OperatorDecl  e,  tom.gom.adt.gom.types.OperatorDeclList  l) { return  tom.gom.adt.gom.types.operatordecllist.ConsconcOperator.make(e,l) ; }private static  tom.gom.adt.gom.types.OperatorDecl  tom_get_head_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) {  return  l.getHeadconcOperator()  ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_tail_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) {  return  l.getTailconcOperator()  ;}private static boolean tom_is_empty_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) {  return  l.isEmptyconcOperator()  ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_append_list_concOperator( tom.gom.adt.gom.types.OperatorDeclList  l1,  tom.gom.adt.gom.types.OperatorDeclList  l2) {    if(tom_is_empty_concOperator_OperatorDeclList(l1)) {     return l2;    } else if(tom_is_empty_concOperator_OperatorDeclList(l2)) {     return l1;    } else if(tom_is_empty_concOperator_OperatorDeclList(( tom.gom.adt.gom.types.OperatorDeclList )tom_get_tail_concOperator_OperatorDeclList(l1))) {     return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(( tom.gom.adt.gom.types.OperatorDecl )tom_get_head_concOperator_OperatorDeclList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(( tom.gom.adt.gom.types.OperatorDecl )tom_get_head_concOperator_OperatorDeclList(l1),tom_append_list_concOperator(( tom.gom.adt.gom.types.OperatorDeclList )tom_get_tail_concOperator_OperatorDeclList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_slice_concOperator( tom.gom.adt.gom.types.OperatorDeclList  begin,  tom.gom.adt.gom.types.OperatorDeclList  end) {    if(tom_terms_equal_OperatorDeclList(begin,end)) {      return ( tom.gom.adt.gom.types.OperatorDeclList )tom_empty_list_concOperator();    } else {      return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(( tom.gom.adt.gom.types.OperatorDecl )tom_get_head_concOperator_OperatorDeclList(begin),( tom.gom.adt.gom.types.OperatorDeclList )tom_get_slice_concOperator(( tom.gom.adt.gom.types.OperatorDeclList )tom_get_tail_concOperator_OperatorDeclList(begin),end));    }   }  private static boolean tom_is_fun_sym_concHookDecl( tom.gom.adt.gom.types.HookDeclList  t) {  return  t instanceof tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl || t instanceof tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl  ;}private static  tom.gom.adt.gom.types.HookDeclList  tom_empty_list_concHookDecl() { return  tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl.make() ; }private static  tom.gom.adt.gom.types.HookDeclList  tom_cons_list_concHookDecl( tom.gom.adt.gom.types.HookDecl  e,  tom.gom.adt.gom.types.HookDeclList  l) { return  tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make(e,l) ; }private static  tom.gom.adt.gom.types.HookDecl  tom_get_head_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) {  return  l.getHeadconcHookDecl()  ;}private static  tom.gom.adt.gom.types.HookDeclList  tom_get_tail_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) {  return  l.getTailconcHookDecl()  ;}private static boolean tom_is_empty_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) {  return  l.isEmptyconcHookDecl()  ;}private static  tom.gom.adt.gom.types.HookDeclList  tom_append_list_concHookDecl( tom.gom.adt.gom.types.HookDeclList  l1,  tom.gom.adt.gom.types.HookDeclList  l2) {    if(tom_is_empty_concHookDecl_HookDeclList(l1)) {     return l2;    } else if(tom_is_empty_concHookDecl_HookDeclList(l2)) {     return l1;    } else if(tom_is_empty_concHookDecl_HookDeclList(( tom.gom.adt.gom.types.HookDeclList )tom_get_tail_concHookDecl_HookDeclList(l1))) {     return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl(( tom.gom.adt.gom.types.HookDecl )tom_get_head_concHookDecl_HookDeclList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl(( tom.gom.adt.gom.types.HookDecl )tom_get_head_concHookDecl_HookDeclList(l1),tom_append_list_concHookDecl(( tom.gom.adt.gom.types.HookDeclList )tom_get_tail_concHookDecl_HookDeclList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.HookDeclList  tom_get_slice_concHookDecl( tom.gom.adt.gom.types.HookDeclList  begin,  tom.gom.adt.gom.types.HookDeclList  end) {    if(tom_terms_equal_HookDeclList(begin,end)) {      return ( tom.gom.adt.gom.types.HookDeclList )tom_empty_list_concHookDecl();    } else {      return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl(( tom.gom.adt.gom.types.HookDecl )tom_get_head_concHookDecl_HookDeclList(begin),( tom.gom.adt.gom.types.HookDeclList )tom_get_slice_concHookDecl(( tom.gom.adt.gom.types.HookDeclList )tom_get_tail_concHookDecl_HookDeclList(begin),end));    }   }  private static boolean tom_is_fun_sym_concProduction( tom.gom.adt.gom.types.ProductionList  t) {  return  t instanceof tom.gom.adt.gom.types.productionlist.ConsconcProduction || t instanceof tom.gom.adt.gom.types.productionlist.EmptyconcProduction  ;}private static  tom.gom.adt.gom.types.ProductionList  tom_empty_list_concProduction() { return  tom.gom.adt.gom.types.productionlist.EmptyconcProduction.make() ; }private static  tom.gom.adt.gom.types.ProductionList  tom_cons_list_concProduction( tom.gom.adt.gom.types.Production  e,  tom.gom.adt.gom.types.ProductionList  l) { return  tom.gom.adt.gom.types.productionlist.ConsconcProduction.make(e,l) ; }private static  tom.gom.adt.gom.types.Production  tom_get_head_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.getHeadconcProduction()  ;}private static  tom.gom.adt.gom.types.ProductionList  tom_get_tail_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.getTailconcProduction()  ;}private static boolean tom_is_empty_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.isEmptyconcProduction()  ;}private static  tom.gom.adt.gom.types.ProductionList  tom_append_list_concProduction( tom.gom.adt.gom.types.ProductionList  l1,  tom.gom.adt.gom.types.ProductionList  l2) {    if(tom_is_empty_concProduction_ProductionList(l1)) {     return l2;    } else if(tom_is_empty_concProduction_ProductionList(l2)) {     return l1;    } else if(tom_is_empty_concProduction_ProductionList(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(l1))) {     return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(l1),tom_append_list_concProduction(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.ProductionList  tom_get_slice_concProduction( tom.gom.adt.gom.types.ProductionList  begin,  tom.gom.adt.gom.types.ProductionList  end) {    if(tom_terms_equal_ProductionList(begin,end)) {      return ( tom.gom.adt.gom.types.ProductionList )tom_empty_list_concProduction();    } else {      return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(begin),( tom.gom.adt.gom.types.ProductionList )tom_get_slice_concProduction(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSlot( tom.gom.adt.gom.types.SlotList  t) {  return  t instanceof tom.gom.adt.gom.types.slotlist.ConsconcSlot || t instanceof tom.gom.adt.gom.types.slotlist.EmptyconcSlot  ;}private static  tom.gom.adt.gom.types.SlotList  tom_empty_list_concSlot() { return  tom.gom.adt.gom.types.slotlist.EmptyconcSlot.make() ; }private static  tom.gom.adt.gom.types.SlotList  tom_cons_list_concSlot( tom.gom.adt.gom.types.Slot  e,  tom.gom.adt.gom.types.SlotList  l) { return  tom.gom.adt.gom.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.gom.adt.gom.types.Slot  tom_get_head_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) {  return  l.getHeadconcSlot()  ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_tail_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) {  return  l.getTailconcSlot()  ;}private static boolean tom_is_empty_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) {  return  l.isEmptyconcSlot()  ;}private static  tom.gom.adt.gom.types.SlotList  tom_append_list_concSlot( tom.gom.adt.gom.types.SlotList  l1,  tom.gom.adt.gom.types.SlotList  l2) {    if(tom_is_empty_concSlot_SlotList(l1)) {     return l2;    } else if(tom_is_empty_concSlot_SlotList(l2)) {     return l1;    } else if(tom_is_empty_concSlot_SlotList(( tom.gom.adt.gom.types.SlotList )tom_get_tail_concSlot_SlotList(l1))) {     return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(( tom.gom.adt.gom.types.Slot )tom_get_head_concSlot_SlotList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(( tom.gom.adt.gom.types.Slot )tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(( tom.gom.adt.gom.types.SlotList )tom_get_tail_concSlot_SlotList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.SlotList  tom_get_slice_concSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end) {    if(tom_terms_equal_SlotList(begin,end)) {      return ( tom.gom.adt.gom.types.SlotList )tom_empty_list_concSlot();    } else {      return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(( tom.gom.adt.gom.types.Slot )tom_get_head_concSlot_SlotList(begin),( tom.gom.adt.gom.types.SlotList )tom_get_slice_concSlot(( tom.gom.adt.gom.types.SlotList )tom_get_tail_concSlot_SlotList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSort( tom.gom.adt.gom.types.SortList  t) {  return  t instanceof tom.gom.adt.gom.types.sortlist.ConsconcSort || t instanceof tom.gom.adt.gom.types.sortlist.EmptyconcSort  ;}private static  tom.gom.adt.gom.types.SortList  tom_empty_list_concSort() { return  tom.gom.adt.gom.types.sortlist.EmptyconcSort.make() ; }private static  tom.gom.adt.gom.types.SortList  tom_cons_list_concSort( tom.gom.adt.gom.types.Sort  e,  tom.gom.adt.gom.types.SortList  l) { return  tom.gom.adt.gom.types.sortlist.ConsconcSort.make(e,l) ; }private static  tom.gom.adt.gom.types.Sort  tom_get_head_concSort_SortList( tom.gom.adt.gom.types.SortList  l) {  return  l.getHeadconcSort()  ;}private static  tom.gom.adt.gom.types.SortList  tom_get_tail_concSort_SortList( tom.gom.adt.gom.types.SortList  l) {  return  l.getTailconcSort()  ;}private static boolean tom_is_empty_concSort_SortList( tom.gom.adt.gom.types.SortList  l) {  return  l.isEmptyconcSort()  ;}private static  tom.gom.adt.gom.types.SortList  tom_append_list_concSort( tom.gom.adt.gom.types.SortList  l1,  tom.gom.adt.gom.types.SortList  l2) {    if(tom_is_empty_concSort_SortList(l1)) {     return l2;    } else if(tom_is_empty_concSort_SortList(l2)) {     return l1;    } else if(tom_is_empty_concSort_SortList(( tom.gom.adt.gom.types.SortList )tom_get_tail_concSort_SortList(l1))) {     return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(( tom.gom.adt.gom.types.Sort )tom_get_head_concSort_SortList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(( tom.gom.adt.gom.types.Sort )tom_get_head_concSort_SortList(l1),tom_append_list_concSort(( tom.gom.adt.gom.types.SortList )tom_get_tail_concSort_SortList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.SortList  tom_get_slice_concSort( tom.gom.adt.gom.types.SortList  begin,  tom.gom.adt.gom.types.SortList  end) {    if(tom_terms_equal_SortList(begin,end)) {      return ( tom.gom.adt.gom.types.SortList )tom_empty_list_concSort();    } else {      return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(( tom.gom.adt.gom.types.Sort )tom_get_head_concSort_SortList(begin),( tom.gom.adt.gom.types.SortList )tom_get_slice_concSort(( tom.gom.adt.gom.types.SortList )tom_get_tail_concSort_SortList(begin),end));    }   }  private static boolean tom_is_fun_sym_concModule( tom.gom.adt.gom.types.ModuleList  t) {  return  t instanceof tom.gom.adt.gom.types.modulelist.ConsconcModule || t instanceof tom.gom.adt.gom.types.modulelist.EmptyconcModule  ;}private static  tom.gom.adt.gom.types.ModuleList  tom_empty_list_concModule() { return  tom.gom.adt.gom.types.modulelist.EmptyconcModule.make() ; }private static  tom.gom.adt.gom.types.ModuleList  tom_cons_list_concModule( tom.gom.adt.gom.types.Module  e,  tom.gom.adt.gom.types.ModuleList  l) { return  tom.gom.adt.gom.types.modulelist.ConsconcModule.make(e,l) ; }private static  tom.gom.adt.gom.types.Module  tom_get_head_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) {  return  l.getHeadconcModule()  ;}private static  tom.gom.adt.gom.types.ModuleList  tom_get_tail_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) {  return  l.getTailconcModule()  ;}private static boolean tom_is_empty_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) {  return  l.isEmptyconcModule()  ;}private static  tom.gom.adt.gom.types.ModuleList  tom_append_list_concModule( tom.gom.adt.gom.types.ModuleList  l1,  tom.gom.adt.gom.types.ModuleList  l2) {    if(tom_is_empty_concModule_ModuleList(l1)) {     return l2;    } else if(tom_is_empty_concModule_ModuleList(l2)) {     return l1;    } else if(tom_is_empty_concModule_ModuleList(( tom.gom.adt.gom.types.ModuleList )tom_get_tail_concModule_ModuleList(l1))) {     return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(( tom.gom.adt.gom.types.Module )tom_get_head_concModule_ModuleList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(( tom.gom.adt.gom.types.Module )tom_get_head_concModule_ModuleList(l1),tom_append_list_concModule(( tom.gom.adt.gom.types.ModuleList )tom_get_tail_concModule_ModuleList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.ModuleList  tom_get_slice_concModule( tom.gom.adt.gom.types.ModuleList  begin,  tom.gom.adt.gom.types.ModuleList  end) {    if(tom_terms_equal_ModuleList(begin,end)) {      return ( tom.gom.adt.gom.types.ModuleList )tom_empty_list_concModule();    } else {      return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(( tom.gom.adt.gom.types.Module )tom_get_head_concModule_ModuleList(begin),( tom.gom.adt.gom.types.ModuleList )tom_get_slice_concModule(( tom.gom.adt.gom.types.ModuleList )tom_get_tail_concModule_ModuleList(begin),end));    }   }   

  private ModuleList moduleList;
  private GomEnvironment environment() {
    return GomEnvironment.getInstance();
  }

  public HookTypeExpander(ModuleList moduleList) {
    this.moduleList = moduleList;
  }
  /**
    * Get the correct types for hooks, and attach them the correct Decl
    */
  public HookDeclList expand(GomModuleList gomModuleList) {
    HookDeclList hookList = tom_empty_list_concHookDecl();
    /* For each hook in the GomModuleList */
     if(gomModuleList instanceof  tom.gom.adt.gom.types.GomModuleList ) { { tom.gom.adt.gom.types.GomModuleList  tomMatch1Position1=(( tom.gom.adt.gom.types.GomModuleList )gomModuleList); if ( ( tom_is_fun_sym_concGomModule(tomMatch1Position1) ||  false  ) ) { {int tomMatch1Position1Index1=0; { tom.gom.adt.gom.types.GomModuleList  tomMatch1Position1List1=tomMatch1Position1; { tom.gom.adt.gom.types.GomModuleList  tomMatch1Position1Begin1=tomMatch1Position1List1; { tom.gom.adt.gom.types.GomModuleList  tomMatch1Position1End1=tomMatch1Position1List1; { while (!(tom_is_empty_concGomModule_GomModuleList(tomMatch1Position1End1))) {tomMatch1Position1List1=tomMatch1Position1End1; { { tom.gom.adt.gom.types.GomModuleList  tomMatch1Position1Save2=tomMatch1Position1List1; { { tom.gom.adt.gom.types.GomModule  tomMatch1Position1Position2=tom_get_head_concGomModule_GomModuleList(tomMatch1Position1List1);tomMatch1Position1Index1=tomMatch1Position1Index1 + 1;tomMatch1Position1List1=tom_get_tail_concGomModule_GomModuleList(tomMatch1Position1List1); if ( ( tom_is_fun_sym_GomModule(tomMatch1Position1Position2) ||  false  ) ) { { tom.gom.adt.gom.types.GomModuleName  tomMatch1Position1Position2NameNumberModuleName=tom_get_slot_GomModule_ModuleName(tomMatch1Position1Position2); { tom.gom.adt.gom.types.SectionList  tomMatch1Position1Position2NameNumberSectionList=tom_get_slot_GomModule_SectionList(tomMatch1Position1Position2); if ( ( tom_is_fun_sym_GomModuleName(tomMatch1Position1Position2NameNumberModuleName) ||  false  ) ) { { String  tom_moduleName=tom_get_slot_GomModuleName_Name(tomMatch1Position1Position2NameNumberModuleName); if ( ( tom_is_fun_sym_concSection(tomMatch1Position1Position2NameNumberSectionList) ||  false  ) ) { {int tomMatch1Position1Position2NameNumberSectionListIndex1=0; { tom.gom.adt.gom.types.SectionList  tomMatch1Position1Position2NameNumberSectionListList1=tomMatch1Position1Position2NameNumberSectionList; { tom.gom.adt.gom.types.SectionList  tomMatch1Position1Position2NameNumberSectionListBegin1=tomMatch1Position1Position2NameNumberSectionListList1; { tom.gom.adt.gom.types.SectionList  tomMatch1Position1Position2NameNumberSectionListEnd1=tomMatch1Position1Position2NameNumberSectionListList1; { while (!(tom_is_empty_concSection_SectionList(tomMatch1Position1Position2NameNumberSectionListEnd1))) {tomMatch1Position1Position2NameNumberSectionListList1=tomMatch1Position1Position2NameNumberSectionListEnd1; { { tom.gom.adt.gom.types.SectionList  tomMatch1Position1Position2NameNumberSectionListSave2=tomMatch1Position1Position2NameNumberSectionListList1; { { tom.gom.adt.gom.types.Section  tomMatch1Position1Position2NameNumberSectionListPosition2=tom_get_head_concSection_SectionList(tomMatch1Position1Position2NameNumberSectionListList1);tomMatch1Position1Position2NameNumberSectionListIndex1=tomMatch1Position1Position2NameNumberSectionListIndex1 + 1;tomMatch1Position1Position2NameNumberSectionListList1=tom_get_tail_concSection_SectionList(tomMatch1Position1Position2NameNumberSectionListList1); if ( ( tom_is_fun_sym_Public(tomMatch1Position1Position2NameNumberSectionListPosition2) ||  false  ) ) { { tom.gom.adt.gom.types.GrammarList  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarList=tom_get_slot_Public_GrammarList(tomMatch1Position1Position2NameNumberSectionListPosition2); if ( ( tom_is_fun_sym_concGrammar(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarList) ||  false  ) ) { {int tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListIndex1=0; { tom.gom.adt.gom.types.GrammarList  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListList1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarList; { tom.gom.adt.gom.types.GrammarList  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListBegin1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListList1; { tom.gom.adt.gom.types.GrammarList  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListEnd1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListList1; { while (!(tom_is_empty_concGrammar_GrammarList(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListEnd1))) {tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListList1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListEnd1; { { tom.gom.adt.gom.types.GrammarList  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListSave2=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListList1; { { tom.gom.adt.gom.types.Grammar  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2=tom_get_head_concGrammar_GrammarList(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListList1);tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListIndex1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListIndex1 + 1;tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListList1=tom_get_tail_concGrammar_GrammarList(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListList1); if ( ( tom_is_fun_sym_Grammar(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2) ||  false  ) ) { { tom.gom.adt.gom.types.ProductionList  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionList=tom_get_slot_Grammar_ProductionList(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2); if ( ( tom_is_fun_sym_concProduction(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionList) ||  false  ) ) { {int tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListIndex1=0; { tom.gom.adt.gom.types.ProductionList  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListList1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionList; { tom.gom.adt.gom.types.ProductionList  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListBegin1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListList1; { tom.gom.adt.gom.types.ProductionList  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListEnd1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListList1; { while (!(tom_is_empty_concProduction_ProductionList(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListEnd1))) {tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListList1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListEnd1; { { tom.gom.adt.gom.types.ProductionList  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListSave2=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListList1; { { tom.gom.adt.gom.types.Production  tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListPosition2=tom_get_head_concProduction_ProductionList(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListList1);tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListIndex1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListIndex1 + 1;tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListList1=tom_get_tail_concProduction_ProductionList(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListList1); if ( ( tom_is_fun_sym_Hook(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListPosition2) ||  false  ) ) { { tom.gom.adt.gom.types.Production  tom_hook=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListPosition2; if ( true ) { if(tom_hook instanceof  tom.gom.adt.gom.types.Production ) { { tom.gom.adt.gom.types.Production  tomMatch2Position1=(( tom.gom.adt.gom.types.Production )tom_hook); if ( ( tom_is_fun_sym_Hook(tomMatch2Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_KindModule(tom_get_slot_Hook_NameType(tomMatch2Position1)) ||  false  ) ) { { String  tom_mname=tom_get_slot_Hook_Name(tomMatch2Position1); if ( true ) {











            if(tom_mname.equals(tom_moduleName)) {
              ModuleDecl mdecl = getModuleDecl(tom_mname,moduleList);
              HookDeclList newDeclList =
                makeHookDeclList(tom_hook,tom_make_CutModule(mdecl));
              hookList = tom_append_list_concHookDecl(newDeclList,tom_append_list_concHookDecl(hookList,tom_empty_list_concHookDecl()));
            } else {
              getLogger().log(Level.SEVERE,
                  "Hooks on module are authorised only on the current module");
            }
           } } } } if ( ( tom_is_fun_sym_Hook(tomMatch2Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_KindSort(tom_get_slot_Hook_NameType(tomMatch2Position1)) ||  false  ) ) { { String  tom_sname=tom_get_slot_Hook_Name(tomMatch2Position1); if ( true ) {

            SortDecl sdecl = getSortDecl(tom_sname,tom_moduleName,moduleList);
            HookDeclList newDeclList = makeHookDeclList(tom_hook,tom_make_CutSort(sdecl));
            hookList = tom_append_list_concHookDecl(newDeclList,tom_append_list_concHookDecl(hookList,tom_empty_list_concHookDecl()));
           } } } } if ( ( tom_is_fun_sym_Hook(tomMatch2Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_KindOperator(tom_get_slot_Hook_NameType(tomMatch2Position1)) ||  false  ) ) { { String  tom_oname=tom_get_slot_Hook_Name(tomMatch2Position1); if ( true ) {

            OperatorDecl odecl = getOperatorDecl(tom_oname,tom_moduleName,moduleList);
            HookDeclList newDeclList = makeHookDeclList(tom_hook,tom_make_CutOperator(odecl));
            hookList = tom_append_list_concHookDecl(newDeclList,tom_append_list_concHookDecl(hookList,tom_empty_list_concHookDecl()));
           } } } } } }

       } } } }tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListList1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListSave2; } }tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListEnd1=tom_get_tail_concProduction_ProductionList(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListEnd1); } }tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListList1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListPosition2NameNumberProductionListBegin1; } } } } } } } } }tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListList1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListSave2; } }tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListEnd1=tom_get_tail_concGrammar_GrammarList(tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListEnd1); } }tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListList1=tomMatch1Position1Position2NameNumberSectionListPosition2NameNumberGrammarListBegin1; } } } } } } } } }tomMatch1Position1Position2NameNumberSectionListList1=tomMatch1Position1Position2NameNumberSectionListSave2; } }tomMatch1Position1Position2NameNumberSectionListEnd1=tom_get_tail_concSection_SectionList(tomMatch1Position1Position2NameNumberSectionListEnd1); } }tomMatch1Position1Position2NameNumberSectionListList1=tomMatch1Position1Position2NameNumberSectionListBegin1; } } } } } } } } } } } }tomMatch1Position1List1=tomMatch1Position1Save2; } }tomMatch1Position1End1=tom_get_tail_concGomModule_GomModuleList(tomMatch1Position1End1); } }tomMatch1Position1List1=tomMatch1Position1Begin1; } } } } } } } }

    return hookList;
  }

  HookDeclList makeHookDeclList(Production hook, Decl mdecl) {
     if(hook instanceof  tom.gom.adt.gom.types.Production ) { { tom.gom.adt.gom.types.Production  tomMatch3Position1=(( tom.gom.adt.gom.types.Production )hook); if ( ( tom_is_fun_sym_Hook(tomMatch3Position1) ||  false  ) ) { { tom.gom.adt.gom.types.HookKind  tom_hkind=tom_get_slot_Hook_HookType(tomMatch3Position1); { String  tom_hName=tom_get_slot_Hook_Name(tomMatch3Position1); { tom.gom.adt.gom.types.ArgList  tom_hookArgs=tom_get_slot_Hook_Args(tomMatch3Position1); { String  tom_scode=tom_get_slot_Hook_StringCode(tomMatch3Position1); if ( true ) {




        HookDeclList newHookList = tom_empty_list_concHookDecl();
         if(tom_hkind instanceof  tom.gom.adt.gom.types.HookKind ) { { tom.gom.adt.gom.types.HookKind  tomMatch4Position1=(( tom.gom.adt.gom.types.HookKind )tom_hkind); if ( ( tom_is_fun_sym_HookKind(tomMatch4Position1) ||  false  ) ) { if ( ( tom_terms_equal_String("block", tom_get_slot_HookKind_kind(tomMatch4Position1)) ||  false  ) ) { if ( true ) {

            newHookList = tom_cons_list_concHookDecl(tom_make_BlockHookDecl(mdecl,tom_make_Code(trimBracket(tom_scode))),tom_empty_list_concHookDecl())
;
           } } } if ( ( tom_is_fun_sym_HookKind(tomMatch4Position1) ||  false  ) ) { if ( ( tom_terms_equal_String("interface", tom_get_slot_HookKind_kind(tomMatch4Position1)) ||  false  ) ) { if ( true ) {

            newHookList = tom_cons_list_concHookDecl(tom_make_InterfaceHookDecl(mdecl,tom_make_Code(trimBracket(tom_scode))),tom_empty_list_concHookDecl())
;
           } } } if ( ( tom_is_fun_sym_HookKind(tomMatch4Position1) ||  false  ) ) { if ( ( tom_terms_equal_String("import", tom_get_slot_HookKind_kind(tomMatch4Position1)) ||  false  ) ) { if ( true ) {

            newHookList = tom_cons_list_concHookDecl(tom_make_ImportHookDecl(mdecl,tom_make_Code(trimBracket(tom_scode))),tom_empty_list_concHookDecl())
;
           } } } if ( ( tom_is_fun_sym_HookKind(tomMatch4Position1) ||  false  ) ) { if ( ( tom_terms_equal_String("mapping", tom_get_slot_HookKind_kind(tomMatch4Position1)) ||  false  ) ) { if ( true ) {

            newHookList = tom_cons_list_concHookDecl(tom_make_MappingHookDecl(mdecl,tom_make_Code(trimBracket(tom_scode))),tom_empty_list_concHookDecl())
;
           } } } if ( ( tom_is_fun_sym_HookKind(tomMatch4Position1) ||  false  ) ) { { String  tomMatch4Position1NameNumberkind=tom_get_slot_HookKind_kind(tomMatch4Position1); if ( ( tom_terms_equal_String("make_empty", tomMatch4Position1NameNumberkind) ||  ( tom_terms_equal_String("make_insert", tomMatch4Position1NameNumberkind) ||  ( tom_terms_equal_String("make", tomMatch4Position1NameNumberkind) ||  false  )  )  ) ) { if ( true ) {

            SlotList typedArgs = typeArguments(tom_hookArgs,tom_hkind,mdecl);
            if (typedArgs == null) {
              getLogger().log(Level.SEVERE,
                  GomMessage.discardedHook.getMessage(),
                  new Object[]{ (tom_hName) });
              return tom_empty_list_concHookDecl();
            }
            newHookList = tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,typedArgs,tom_make_Code(tom_scode)),tom_empty_list_concHookDecl())
;
           } } } } if ( ( tom_is_fun_sym_HookKind(tomMatch4Position1) ||  false  ) ) { if ( ( tom_terms_equal_String("AU", tom_get_slot_HookKind_kind(tomMatch4Position1)) ||  false  ) ) { if ( true ) {

            return makeAUHookList(tom_hName,mdecl,tom_scode);

           } } } if ( ( tom_is_fun_sym_HookKind(tomMatch4Position1) ||  false  ) ) { if ( ( tom_terms_equal_String("AC", tom_get_slot_HookKind_kind(tomMatch4Position1)) ||  false  ) ) { if ( true ) {

            return makeACHookList(tom_hName,mdecl,tom_scode);

           } } } } }

        if (newHookList == tom_empty_list_concHookDecl()) {
          throw new GomRuntimeException(
              "GomTypeExpander:typeModuleHook unknown HookKind: "+tom_hkind);
        }
        return newHookList;
       } } } } } } } }

    throw new GomRuntimeException(
        "HookTypeExpander: this hook is not a hook: "+hook);
  }

  /**
    * Finds the ModuleDecl corresponding to a module name.
    *
    * @param mname the module name
    * @param moduleList the queried ModuleList
    * @return the ModuleDecl for mname
    */
  ModuleDecl getModuleDecl(String mname, ModuleList moduleList) {
     if(moduleList instanceof  tom.gom.adt.gom.types.ModuleList ) { { tom.gom.adt.gom.types.ModuleList  tomMatch5Position1=(( tom.gom.adt.gom.types.ModuleList )moduleList); if ( ( tom_is_fun_sym_concModule(tomMatch5Position1) ||  false  ) ) { {int tomMatch5Position1Index1=0; { tom.gom.adt.gom.types.ModuleList  tomMatch5Position1List1=tomMatch5Position1; { tom.gom.adt.gom.types.ModuleList  tomMatch5Position1Begin1=tomMatch5Position1List1; { tom.gom.adt.gom.types.ModuleList  tomMatch5Position1End1=tomMatch5Position1List1; { while (!(tom_is_empty_concModule_ModuleList(tomMatch5Position1End1))) {tomMatch5Position1List1=tomMatch5Position1End1; { { tom.gom.adt.gom.types.ModuleList  tomMatch5Position1Save2=tomMatch5Position1List1; { { tom.gom.adt.gom.types.Module  tomMatch5Position1Position2=tom_get_head_concModule_ModuleList(tomMatch5Position1List1);tomMatch5Position1Index1=tomMatch5Position1Index1 + 1;tomMatch5Position1List1=tom_get_tail_concModule_ModuleList(tomMatch5Position1List1); if ( ( tom_is_fun_sym_Module(tomMatch5Position1Position2) ||  false  ) ) { { tom.gom.adt.gom.types.ModuleDecl  tomMatch5Position1Position2NameNumberMDecl=tom_get_slot_Module_MDecl(tomMatch5Position1Position2); if ( ( tom_is_fun_sym_ModuleDecl(tomMatch5Position1Position2NameNumberMDecl) ||  false  ) ) { { tom.gom.adt.gom.types.GomModuleName  tomMatch5Position1Position2NameNumberMDeclNameNumberModuleName=tom_get_slot_ModuleDecl_ModuleName(tomMatch5Position1Position2NameNumberMDecl); if ( ( tom_is_fun_sym_GomModuleName(tomMatch5Position1Position2NameNumberMDeclNameNumberModuleName) ||  false  ) ) { { String  tom_moduleName=tom_get_slot_GomModuleName_Name(tomMatch5Position1Position2NameNumberMDeclNameNumberModuleName); { tom.gom.adt.gom.types.ModuleDecl  tom_mdecl=tomMatch5Position1Position2NameNumberMDecl; if ( true ) {




        if (tom_moduleName.equals(mname)) {
          return tom_mdecl;
        }
       } } } } } } } } }tomMatch5Position1List1=tomMatch5Position1Save2; } }tomMatch5Position1End1=tom_get_tail_concModule_ModuleList(tomMatch5Position1End1); } }tomMatch5Position1List1=tomMatch5Position1Begin1; } } } } } } } }

    throw new GomRuntimeException(
        "HookTypeExpander: Module not found: "+mname);
  }

  /**
    * Finds the SortDecl corresponding to a sort name.
    *
    * @param sname the sort name
    * @param modName the module name that should contain the sort
    * @param moduleList the queried ModuleList
    * @return the SortDecl for sname
    */
  SortDecl getSortDecl(String sname, String modName, ModuleList moduleList) {
     { String  tomMatch6Position1=(( String )modName); if(moduleList instanceof  tom.gom.adt.gom.types.ModuleList ) { { tom.gom.adt.gom.types.ModuleList  tomMatch6Position2=(( tom.gom.adt.gom.types.ModuleList )moduleList); { String  tom_mname=tomMatch6Position1; if ( ( tom_is_fun_sym_concModule(tomMatch6Position2) ||  false  ) ) { {int tomMatch6Position2Index1=0; { tom.gom.adt.gom.types.ModuleList  tomMatch6Position2List1=tomMatch6Position2; { tom.gom.adt.gom.types.ModuleList  tomMatch6Position2Begin1=tomMatch6Position2List1; { tom.gom.adt.gom.types.ModuleList  tomMatch6Position2End1=tomMatch6Position2List1; { while (!(tom_is_empty_concModule_ModuleList(tomMatch6Position2End1))) {tomMatch6Position2List1=tomMatch6Position2End1; { { tom.gom.adt.gom.types.ModuleList  tomMatch6Position2Save2=tomMatch6Position2List1; { { tom.gom.adt.gom.types.Module  tomMatch6Position2Position2=tom_get_head_concModule_ModuleList(tomMatch6Position2List1);tomMatch6Position2Index1=tomMatch6Position2Index1 + 1;tomMatch6Position2List1=tom_get_tail_concModule_ModuleList(tomMatch6Position2List1); if ( ( tom_is_fun_sym_Module(tomMatch6Position2Position2) ||  false  ) ) { { tom.gom.adt.gom.types.ModuleDecl  tomMatch6Position2Position2NameNumberMDecl=tom_get_slot_Module_MDecl(tomMatch6Position2Position2); { tom.gom.adt.gom.types.SortList  tomMatch6Position2Position2NameNumberSorts=tom_get_slot_Module_Sorts(tomMatch6Position2Position2); if ( ( tom_is_fun_sym_ModuleDecl(tomMatch6Position2Position2NameNumberMDecl) ||  false  ) ) { { tom.gom.adt.gom.types.GomModuleName  tomMatch6Position2Position2NameNumberMDeclNameNumberModuleName=tom_get_slot_ModuleDecl_ModuleName(tomMatch6Position2Position2NameNumberMDecl); if ( ( tom_is_fun_sym_GomModuleName(tomMatch6Position2Position2NameNumberMDeclNameNumberModuleName) ||  false  ) ) { if (tom_terms_equal_String(tom_mname, tom_get_slot_GomModuleName_Name(tomMatch6Position2Position2NameNumberMDeclNameNumberModuleName))) { if ( ( tom_is_fun_sym_concSort(tomMatch6Position2Position2NameNumberSorts) ||  false  ) ) { {int tomMatch6Position2Position2NameNumberSortsIndex1=0; { tom.gom.adt.gom.types.SortList  tomMatch6Position2Position2NameNumberSortsList1=tomMatch6Position2Position2NameNumberSorts; { tom.gom.adt.gom.types.SortList  tomMatch6Position2Position2NameNumberSortsBegin1=tomMatch6Position2Position2NameNumberSortsList1; { tom.gom.adt.gom.types.SortList  tomMatch6Position2Position2NameNumberSortsEnd1=tomMatch6Position2Position2NameNumberSortsList1; { while (!(tom_is_empty_concSort_SortList(tomMatch6Position2Position2NameNumberSortsEnd1))) {tomMatch6Position2Position2NameNumberSortsList1=tomMatch6Position2Position2NameNumberSortsEnd1; { { tom.gom.adt.gom.types.SortList  tomMatch6Position2Position2NameNumberSortsSave2=tomMatch6Position2Position2NameNumberSortsList1; { { tom.gom.adt.gom.types.Sort  tomMatch6Position2Position2NameNumberSortsPosition2=tom_get_head_concSort_SortList(tomMatch6Position2Position2NameNumberSortsList1);tomMatch6Position2Position2NameNumberSortsIndex1=tomMatch6Position2Position2NameNumberSortsIndex1 + 1;tomMatch6Position2Position2NameNumberSortsList1=tom_get_tail_concSort_SortList(tomMatch6Position2Position2NameNumberSortsList1); if ( ( tom_is_fun_sym_Sort(tomMatch6Position2Position2NameNumberSortsPosition2) ||  false  ) ) { { tom.gom.adt.gom.types.SortDecl  tomMatch6Position2Position2NameNumberSortsPosition2NameNumberDecl=tom_get_slot_Sort_Decl(tomMatch6Position2Position2NameNumberSortsPosition2); if ( ( tom_is_fun_sym_SortDecl(tomMatch6Position2Position2NameNumberSortsPosition2NameNumberDecl) ||  false  ) ) { { String  tom_sortName=tom_get_slot_SortDecl_Name(tomMatch6Position2Position2NameNumberSortsPosition2NameNumberDecl); { tom.gom.adt.gom.types.SortDecl  tom_sdecl=tomMatch6Position2Position2NameNumberSortsPosition2NameNumberDecl; if ( true ) {






        if (tom_sortName.equals(sname)) {
          return tom_sdecl;
        }
       } } } } } } }tomMatch6Position2Position2NameNumberSortsList1=tomMatch6Position2Position2NameNumberSortsSave2; } }tomMatch6Position2Position2NameNumberSortsEnd1=tom_get_tail_concSort_SortList(tomMatch6Position2Position2NameNumberSortsEnd1); } }tomMatch6Position2Position2NameNumberSortsList1=tomMatch6Position2Position2NameNumberSortsBegin1; } } } } } } } } } } } } } }tomMatch6Position2List1=tomMatch6Position2Save2; } }tomMatch6Position2End1=tom_get_tail_concModule_ModuleList(tomMatch6Position2End1); } }tomMatch6Position2List1=tomMatch6Position2Begin1; } } } } } } } } } }

    throw new GomRuntimeException(
        "HookTypeExpander: Sort not found: "+sname);
  }

  /**
    * Finds the OperatorDecl corresponding to an operator name.
    *
    * @param oname the sort name
    * @param modName the module name that should contain the operator
    * @param moduleList the queried ModuleList
    * @return the OperatorDecl for sname
    */
  OperatorDecl getOperatorDecl(
      String oname,
      String modName,
      ModuleList moduleList) {
     { String  tomMatch7Position1=(( String )modName); if(moduleList instanceof  tom.gom.adt.gom.types.ModuleList ) { { tom.gom.adt.gom.types.ModuleList  tomMatch7Position2=(( tom.gom.adt.gom.types.ModuleList )moduleList); { String  tom_mname=tomMatch7Position1; if ( ( tom_is_fun_sym_concModule(tomMatch7Position2) ||  false  ) ) { {int tomMatch7Position2Index1=0; { tom.gom.adt.gom.types.ModuleList  tomMatch7Position2List1=tomMatch7Position2; { tom.gom.adt.gom.types.ModuleList  tomMatch7Position2Begin1=tomMatch7Position2List1; { tom.gom.adt.gom.types.ModuleList  tomMatch7Position2End1=tomMatch7Position2List1; { while (!(tom_is_empty_concModule_ModuleList(tomMatch7Position2End1))) {tomMatch7Position2List1=tomMatch7Position2End1; { { tom.gom.adt.gom.types.ModuleList  tomMatch7Position2Save2=tomMatch7Position2List1; { { tom.gom.adt.gom.types.Module  tomMatch7Position2Position2=tom_get_head_concModule_ModuleList(tomMatch7Position2List1);tomMatch7Position2Index1=tomMatch7Position2Index1 + 1;tomMatch7Position2List1=tom_get_tail_concModule_ModuleList(tomMatch7Position2List1); if ( ( tom_is_fun_sym_Module(tomMatch7Position2Position2) ||  false  ) ) { { tom.gom.adt.gom.types.ModuleDecl  tomMatch7Position2Position2NameNumberMDecl=tom_get_slot_Module_MDecl(tomMatch7Position2Position2); { tom.gom.adt.gom.types.SortList  tomMatch7Position2Position2NameNumberSorts=tom_get_slot_Module_Sorts(tomMatch7Position2Position2); if ( ( tom_is_fun_sym_ModuleDecl(tomMatch7Position2Position2NameNumberMDecl) ||  false  ) ) { { tom.gom.adt.gom.types.GomModuleName  tomMatch7Position2Position2NameNumberMDeclNameNumberModuleName=tom_get_slot_ModuleDecl_ModuleName(tomMatch7Position2Position2NameNumberMDecl); if ( ( tom_is_fun_sym_GomModuleName(tomMatch7Position2Position2NameNumberMDeclNameNumberModuleName) ||  false  ) ) { if (tom_terms_equal_String(tom_mname, tom_get_slot_GomModuleName_Name(tomMatch7Position2Position2NameNumberMDeclNameNumberModuleName))) { if ( ( tom_is_fun_sym_concSort(tomMatch7Position2Position2NameNumberSorts) ||  false  ) ) { {int tomMatch7Position2Position2NameNumberSortsIndex1=0; { tom.gom.adt.gom.types.SortList  tomMatch7Position2Position2NameNumberSortsList1=tomMatch7Position2Position2NameNumberSorts; { tom.gom.adt.gom.types.SortList  tomMatch7Position2Position2NameNumberSortsBegin1=tomMatch7Position2Position2NameNumberSortsList1; { tom.gom.adt.gom.types.SortList  tomMatch7Position2Position2NameNumberSortsEnd1=tomMatch7Position2Position2NameNumberSortsList1; { while (!(tom_is_empty_concSort_SortList(tomMatch7Position2Position2NameNumberSortsEnd1))) {tomMatch7Position2Position2NameNumberSortsList1=tomMatch7Position2Position2NameNumberSortsEnd1; { { tom.gom.adt.gom.types.SortList  tomMatch7Position2Position2NameNumberSortsSave2=tomMatch7Position2Position2NameNumberSortsList1; { { tom.gom.adt.gom.types.Sort  tomMatch7Position2Position2NameNumberSortsPosition2=tom_get_head_concSort_SortList(tomMatch7Position2Position2NameNumberSortsList1);tomMatch7Position2Position2NameNumberSortsIndex1=tomMatch7Position2Position2NameNumberSortsIndex1 + 1;tomMatch7Position2Position2NameNumberSortsList1=tom_get_tail_concSort_SortList(tomMatch7Position2Position2NameNumberSortsList1); if ( ( tom_is_fun_sym_Sort(tomMatch7Position2Position2NameNumberSortsPosition2) ||  false  ) ) { { tom.gom.adt.gom.types.OperatorDeclList  tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperators=tom_get_slot_Sort_Operators(tomMatch7Position2Position2NameNumberSortsPosition2); if ( ( tom_is_fun_sym_concOperator(tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperators) ||  false  ) ) { {int tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsIndex1=0; { tom.gom.adt.gom.types.OperatorDeclList  tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsList1=tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperators; { tom.gom.adt.gom.types.OperatorDeclList  tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsBegin1=tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsList1; { tom.gom.adt.gom.types.OperatorDeclList  tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsEnd1=tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsList1; { while (!(tom_is_empty_concOperator_OperatorDeclList(tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsEnd1))) {tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsList1=tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsEnd1; { { tom.gom.adt.gom.types.OperatorDeclList  tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsSave2=tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsList1; { { tom.gom.adt.gom.types.OperatorDecl  tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsPosition2=tom_get_head_concOperator_OperatorDeclList(tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsList1);tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsIndex1=tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsIndex1 + 1;tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsList1=tom_get_tail_concOperator_OperatorDeclList(tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsList1); if ( ( tom_is_fun_sym_OperatorDecl(tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsPosition2) ||  false  ) ) { { String  tom_operName=tom_get_slot_OperatorDecl_Name(tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsPosition2); { tom.gom.adt.gom.types.OperatorDecl  tom_odecl=tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsPosition2; if ( true ) {








        if (tom_operName.equals(oname)) {
          return tom_odecl;
        }
       } } } } }tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsList1=tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsSave2; } }tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsEnd1=tom_get_tail_concOperator_OperatorDeclList(tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsEnd1); } }tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsList1=tomMatch7Position2Position2NameNumberSortsPosition2NameNumberOperatorsBegin1; } } } } } } } } }tomMatch7Position2Position2NameNumberSortsList1=tomMatch7Position2Position2NameNumberSortsSave2; } }tomMatch7Position2Position2NameNumberSortsEnd1=tom_get_tail_concSort_SortList(tomMatch7Position2Position2NameNumberSortsEnd1); } }tomMatch7Position2Position2NameNumberSortsList1=tomMatch7Position2Position2NameNumberSortsBegin1; } } } } } } } } } } } } } }tomMatch7Position2List1=tomMatch7Position2Save2; } }tomMatch7Position2End1=tom_get_tail_concModule_ModuleList(tomMatch7Position2End1); } }tomMatch7Position2List1=tomMatch7Position2Begin1; } } } } } } } } } }

    throw new GomRuntimeException(
        "HookTypeExpander: Operator not found: "+oname);
  }

  private SlotList typeArguments(
      ArgList args,
      HookKind kind,
      Decl decl) {
     if(kind instanceof  tom.gom.adt.gom.types.HookKind ) { { tom.gom.adt.gom.types.HookKind  tomMatch8Position1=(( tom.gom.adt.gom.types.HookKind )kind); if ( ( tom_is_fun_sym_HookKind(tomMatch8Position1) ||  false  ) ) { if ( ( tom_terms_equal_String("make", tom_get_slot_HookKind_kind(tomMatch8Position1)) ||  false  ) ) { if ( true ) {

        /*
         * The TypedProduction has to be Slots
         * A KindMakeHook is attached to an operator
         */
         if(decl instanceof  tom.gom.adt.gom.types.Decl ) { { tom.gom.adt.gom.types.Decl  tomMatch9Position1=(( tom.gom.adt.gom.types.Decl )decl); if ( ( tom_is_fun_sym_CutOperator(tomMatch9Position1) ||  false  ) ) { { tom.gom.adt.gom.types.OperatorDecl  tomMatch9Position1NameNumberODecl=tom_get_slot_CutOperator_ODecl(tomMatch9Position1); if ( ( tom_is_fun_sym_OperatorDecl(tomMatch9Position1NameNumberODecl) ||  false  ) ) { { tom.gom.adt.gom.types.TypedProduction  tomMatch9Position1NameNumberODeclNameNumberProd=tom_get_slot_OperatorDecl_Prod(tomMatch9Position1NameNumberODecl); if ( ( tom_is_fun_sym_Slots(tomMatch9Position1NameNumberODeclNameNumberProd) ||  false  ) ) { { tom.gom.adt.gom.types.SlotList  tom_slotList=tom_get_slot_Slots_Slots(tomMatch9Position1NameNumberODeclNameNumberProd); if ( true ) {

            /* tests the arguments number */
            if (args.length() != tom_slotList.length()) {
              SlotList slist = tom_slotList;
              getLogger().log(Level.SEVERE,
                  GomMessage.mismatchedMakeArguments.getMessage(),
                  new Object[]{args,slist });
              return null;
            }
            /* Then check the types */
            return recArgSlots(args,tom_slotList);
           } } } } } } } if ( true ) {

            getLogger().log(Level.SEVERE,
                GomMessage.unsupportedHookAlgebraic.getMessage(),
                new Object[]{ kind });
            return null;
           } } }

       } } } if ( ( tom_is_fun_sym_HookKind(tomMatch8Position1) ||  false  ) ) { { String  tomMatch8Position1NameNumberkind=tom_get_slot_HookKind_kind(tomMatch8Position1); if ( ( tom_terms_equal_String("make_insert", tomMatch8Position1NameNumberkind) ||  false  ) ) { { String  tom_hookName=tomMatch8Position1NameNumberkind; if ( true ) {

        /*
         * The TypedProduction has to be Variadic
         * Then we get the codomain from the operatordecl
         */
         if(decl instanceof  tom.gom.adt.gom.types.Decl ) { { tom.gom.adt.gom.types.Decl  tomMatch10Position1=(( tom.gom.adt.gom.types.Decl )decl); if ( ( tom_is_fun_sym_CutOperator(tomMatch10Position1) ||  false  ) ) { { tom.gom.adt.gom.types.OperatorDecl  tomMatch10Position1NameNumberODecl=tom_get_slot_CutOperator_ODecl(tomMatch10Position1); if ( ( tom_is_fun_sym_OperatorDecl(tomMatch10Position1NameNumberODecl) ||  false  ) ) { { tom.gom.adt.gom.types.TypedProduction  tomMatch10Position1NameNumberODeclNameNumberProd=tom_get_slot_OperatorDecl_Prod(tomMatch10Position1NameNumberODecl); { tom.gom.adt.gom.types.SortDecl  tom_sort=tom_get_slot_OperatorDecl_Sort(tomMatch10Position1NameNumberODecl); if ( ( tom_is_fun_sym_Variadic(tomMatch10Position1NameNumberODeclNameNumberProd) ||  false  ) ) { { tom.gom.adt.gom.types.SortDecl  tom_sortDecl=tom_get_slot_Variadic_Sort(tomMatch10Position1NameNumberODeclNameNumberProd); if ( true ) {


            // for a make_insert hook, there are two arguments: head, tail
             if(args instanceof  tom.gom.adt.gom.types.ArgList ) { { tom.gom.adt.gom.types.ArgList  tomMatch11Position1=(( tom.gom.adt.gom.types.ArgList )args); if ( ( tom_is_fun_sym_concArg(tomMatch11Position1) ||  false  ) ) { {int tomMatch11Position1Index1=0; { tom.gom.adt.gom.types.ArgList  tomMatch11Position1List1=tomMatch11Position1; { tom.gom.adt.gom.types.ArgList  tomMatch11Position1Save1=tomMatch11Position1List1; { if (!(tom_is_empty_concArg_ArgList(tomMatch11Position1List1))) { { tom.gom.adt.gom.types.Arg  tomMatch11Position1Position1=tom_get_head_concArg_ArgList(tomMatch11Position1List1);tomMatch11Position1Index1=tomMatch11Position1Index1 + 1;tomMatch11Position1List1=tom_get_tail_concArg_ArgList(tomMatch11Position1List1); if ( ( tom_is_fun_sym_Arg(tomMatch11Position1Position1) ||  false  ) ) { { String  tom_head=tom_get_slot_Arg_Name(tomMatch11Position1Position1); { tom.gom.adt.gom.types.ArgList  tomMatch11Position1Save2=tomMatch11Position1List1; { if (!(tom_is_empty_concArg_ArgList(tomMatch11Position1List1))) { { tom.gom.adt.gom.types.Arg  tomMatch11Position1Position2=tom_get_head_concArg_ArgList(tomMatch11Position1List1);tomMatch11Position1Index1=tomMatch11Position1Index1 + 1;tomMatch11Position1List1=tom_get_tail_concArg_ArgList(tomMatch11Position1List1); if ( ( tom_is_fun_sym_Arg(tomMatch11Position1Position2) ||  false  ) ) { { String  tom_tail=tom_get_slot_Arg_Name(tomMatch11Position1Position2); if (tom_is_empty_concArg_ArgList(tomMatch11Position1List1)) { if ( true ) {

                return tom_cons_list_concSlot(tom_make_Slot(tom_head,tom_sortDecl),tom_cons_list_concSlot(tom_make_Slot(tom_tail,tom_sort),tom_empty_list_concSlot()));
               } } } } } }tomMatch11Position1List1=tomMatch11Position1Save2; } } } } } }tomMatch11Position1List1=tomMatch11Position1Save1; } } } } } if ( true ) {

                getLogger().log(Level.SEVERE,
                    GomMessage.badHookArguments.getMessage(),
                    new Object[]{ (tom_hookName), new Integer(args.length())});
                return null;
               } } }

           } } } } } } } } if ( true ) {

            getLogger().log(Level.SEVERE,
                GomMessage.unsupportedHookVariadic.getMessage(),
                new Object[]{ kind });
            return null;
           } } }

       } } } } } if ( ( tom_is_fun_sym_HookKind(tomMatch8Position1) ||  false  ) ) { { String  tomMatch8Position1NameNumberkind=tom_get_slot_HookKind_kind(tomMatch8Position1); if ( ( tom_terms_equal_String("make_empty", tomMatch8Position1NameNumberkind) ||  false  ) ) { { String  tom_hookName=tomMatch8Position1NameNumberkind; if ( true ) {

        /*
         * The TypedProduction has to be Variadic
         * Then we get the codomain from the operatordecl
         */
         if(decl instanceof  tom.gom.adt.gom.types.Decl ) { { tom.gom.adt.gom.types.Decl  tomMatch12Position1=(( tom.gom.adt.gom.types.Decl )decl); if ( ( tom_is_fun_sym_CutOperator(tomMatch12Position1) ||  false  ) ) { { tom.gom.adt.gom.types.OperatorDecl  tomMatch12Position1NameNumberODecl=tom_get_slot_CutOperator_ODecl(tomMatch12Position1); if ( ( tom_is_fun_sym_OperatorDecl(tomMatch12Position1NameNumberODecl) ||  false  ) ) { { tom.gom.adt.gom.types.TypedProduction  tomMatch12Position1NameNumberODeclNameNumberProd=tom_get_slot_OperatorDecl_Prod(tomMatch12Position1NameNumberODecl); if ( ( tom_is_fun_sym_Variadic(tomMatch12Position1NameNumberODeclNameNumberProd) ||  false  ) ) { if ( true ) {


            // for a make_empty hook, there is no argument
             if(args instanceof  tom.gom.adt.gom.types.ArgList ) { { tom.gom.adt.gom.types.ArgList  tomMatch13Position1=(( tom.gom.adt.gom.types.ArgList )args); if ( ( tom_is_fun_sym_concArg(tomMatch13Position1) ||  false  ) ) { {int tomMatch13Position1Index1=0; { tom.gom.adt.gom.types.ArgList  tomMatch13Position1List1=tomMatch13Position1; if (tom_is_empty_concArg_ArgList(tomMatch13Position1List1)) { if ( true ) {
 return tom_empty_list_concSlot();  } } } } } if ( true ) {

                getLogger().log(Level.SEVERE,
                    GomMessage.badHookArguments.getMessage(),
                    new Object[]{ (tom_hookName), new Integer(args.length())});
                return null;
               } } }

           } } } } } } if ( true ) {

            getLogger().log(Level.SEVERE,
                GomMessage.unsupportedHookVariadic.getMessage(),
                new Object[]{ kind });
            return null;
           } } }

       } } } } } } }

    throw new GomRuntimeException("Hook kind \""+kind+"\" not supported");
  }

  private SlotList recArgSlots(ArgList args, SlotList slots) {
     if(args instanceof  tom.gom.adt.gom.types.ArgList ) { { tom.gom.adt.gom.types.ArgList  tomMatch14Position1=(( tom.gom.adt.gom.types.ArgList )args); if(slots instanceof  tom.gom.adt.gom.types.SlotList ) { { tom.gom.adt.gom.types.SlotList  tomMatch14Position2=(( tom.gom.adt.gom.types.SlotList )slots); if ( ( tom_is_fun_sym_concArg(tomMatch14Position1) ||  false  ) ) { {int tomMatch14Position1Index1=0; { tom.gom.adt.gom.types.ArgList  tomMatch14Position1List1=tomMatch14Position1; if (tom_is_empty_concArg_ArgList(tomMatch14Position1List1)) { if ( ( tom_is_fun_sym_concSlot(tomMatch14Position2) ||  false  ) ) { {int tomMatch14Position2Index1=0; { tom.gom.adt.gom.types.SlotList  tomMatch14Position2List1=tomMatch14Position2; if (tom_is_empty_concSlot_SlotList(tomMatch14Position2List1)) { if ( true ) {

        return tom_empty_list_concSlot();
       } } } } } } } } } if ( ( tom_is_fun_sym_concArg(tomMatch14Position1) ||  false  ) ) { {int tomMatch14Position1Index1=0; { tom.gom.adt.gom.types.ArgList  tomMatch14Position1List1=tomMatch14Position1; { tom.gom.adt.gom.types.ArgList  tomMatch14Position1Save1=tomMatch14Position1List1; { if (!(tom_is_empty_concArg_ArgList(tomMatch14Position1List1))) { { tom.gom.adt.gom.types.Arg  tomMatch14Position1Position1=tom_get_head_concArg_ArgList(tomMatch14Position1List1);tomMatch14Position1Index1=tomMatch14Position1Index1 + 1;tomMatch14Position1List1=tom_get_tail_concArg_ArgList(tomMatch14Position1List1); if ( ( tom_is_fun_sym_Arg(tomMatch14Position1Position1) ||  false  ) ) { { String  tom_argName=tom_get_slot_Arg_Name(tomMatch14Position1Position1); { tom.gom.adt.gom.types.ArgList  tom_ta=tomMatch14Position1List1; if ( ( tom_is_fun_sym_concSlot(tomMatch14Position2) ||  false  ) ) { {int tomMatch14Position2Index1=0; { tom.gom.adt.gom.types.SlotList  tomMatch14Position2List1=tomMatch14Position2; { tom.gom.adt.gom.types.SlotList  tomMatch14Position2Save1=tomMatch14Position2List1; { if (!(tom_is_empty_concSlot_SlotList(tomMatch14Position2List1))) { { tom.gom.adt.gom.types.Slot  tomMatch14Position2Position1=tom_get_head_concSlot_SlotList(tomMatch14Position2List1);tomMatch14Position2Index1=tomMatch14Position2Index1 + 1;tomMatch14Position2List1=tom_get_tail_concSlot_SlotList(tomMatch14Position2List1); if ( ( tom_is_fun_sym_Slot(tomMatch14Position2Position1) ||  false  ) ) { { tom.gom.adt.gom.types.SortDecl  tom_slotSort=tom_get_slot_Slot_Sort(tomMatch14Position2Position1); { tom.gom.adt.gom.types.SlotList  tom_ts=tomMatch14Position2List1; if ( true ) {

        SlotList tail = recArgSlots(tom_ta,tom_ts);
        return tom_cons_list_concSlot(tom_make_Slot(tom_argName,tom_slotSort),tom_append_list_concSlot(tail,tom_empty_list_concSlot()));
       } } } } } }tomMatch14Position2List1=tomMatch14Position2Save1; } } } } } } } } } }tomMatch14Position1List1=tomMatch14Position1Save1; } } } } } } } } }

    throw new GomRuntimeException("GomTypeExpander:recArgSlots failed "+args+" "+slots);
  }

  private String trimBracket(String stringCode) {
    int start = stringCode.indexOf('{')+1;
    int end = stringCode.lastIndexOf('}');
    return stringCode.substring(start,end).trim();
  }

  private SortDecl getSortAndCheck(Decl mdecl) {
     if(mdecl instanceof  tom.gom.adt.gom.types.Decl ) { { tom.gom.adt.gom.types.Decl  tomMatch15Position1=(( tom.gom.adt.gom.types.Decl )mdecl); if ( ( tom_is_fun_sym_CutOperator(tomMatch15Position1) ||  false  ) ) { { tom.gom.adt.gom.types.OperatorDecl  tomMatch15Position1NameNumberODecl=tom_get_slot_CutOperator_ODecl(tomMatch15Position1); if ( ( tom_is_fun_sym_OperatorDecl(tomMatch15Position1NameNumberODecl) ||  false  ) ) { { tom.gom.adt.gom.types.TypedProduction  tomMatch15Position1NameNumberODeclNameNumberProd=tom_get_slot_OperatorDecl_Prod(tomMatch15Position1NameNumberODecl); { tom.gom.adt.gom.types.SortDecl  tom_domainsdecl=tom_get_slot_OperatorDecl_Sort(tomMatch15Position1NameNumberODecl); if ( ( tom_is_fun_sym_Variadic(tomMatch15Position1NameNumberODeclNameNumberProd) ||  false  ) ) { { tom.gom.adt.gom.types.SortDecl  tom_sdecl=tom_get_slot_Variadic_Sort(tomMatch15Position1NameNumberODeclNameNumberProd); if ( true ) {

        if (tom_domainsdecl== tom_sdecl) {
          return tom_sdecl;
        } else {
          getLogger().log(Level.SEVERE,
              "Different domain and codomain");
        }
       } } } } } } } } if ( true ) {

        getLogger().log(Level.SEVERE,
            "AU hook can only be used on a variadic operator");
       } } }

    return null;
  }

  private HookDeclList makeACHookList(String opName, Decl mdecl, String scode) {
    SortDecl domain = getSortAndCheck(mdecl);
    if (null == domain)
      return tom_empty_list_concHookDecl();
    HookDeclList acHooks = makeAUHookList(opName, mdecl, scode);
    acHooks = tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,tom_cons_list_concSlot(tom_make_Slot("head",domain),tom_cons_list_concSlot(tom_make_Slot("tail",domain),tom_empty_list_concSlot())),tom_cons_list_CodeList(tom_make_Code("if ("),tom_cons_list_CodeList(tom_make_IsCons("tail",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(") {\n"),tom_cons_list_CodeList(tom_make_Code("  if (0 < "),tom_cons_list_CodeList(tom_make_Compare(tom_make_Code("head"),tom_make_Code("tail.getHead" + opName+ "()")),tom_cons_list_CodeList(tom_make_Code(") {\n"),tom_cons_list_CodeList(tom_make_Code("    "),tom_cons_list_CodeList(tom_make_FullSortClass(domain),tom_cons_list_CodeList(tom_make_Code(" tmpHd = head;\n"),tom_cons_list_CodeList(tom_make_Code("    head = tail.getHead" + opName+ "();\n"),tom_cons_list_CodeList(tom_make_Code("    tail = `" + opName+ "(tmpHd,tail.getTail" + opName+ "());\n"),tom_cons_list_CodeList(tom_make_Code("  }\n"),tom_cons_list_CodeList(tom_make_Code("} else {\n"),tom_cons_list_CodeList(tom_make_Code("  if (0 < "),tom_cons_list_CodeList(tom_make_Compare(tom_make_Code("head"),tom_make_Code("tail")),tom_cons_list_CodeList(tom_make_Code(") {\n"),tom_cons_list_CodeList(tom_make_Code("    "),tom_cons_list_CodeList(tom_make_FullSortClass(domain),tom_cons_list_CodeList(tom_make_Code(" tmpHd = head;\n"),tom_cons_list_CodeList(tom_make_Code("    head = tail;\n"),tom_cons_list_CodeList(tom_make_Code("    tail = tmpHd;\n"),tom_cons_list_CodeList(tom_make_Code("  }\n"),tom_cons_list_CodeList(tom_make_Code("}\n"),tom_empty_list_CodeList())))))))))))))))))))))))),tom_append_list_concHookDecl(acHooks,tom_empty_list_concHookDecl()))
























;
    return acHooks;
  }

  private HookDeclList makeAUHookList(String opName, Decl mdecl, String scode) {
    /* Can only be applied to a variadic operator, those domain and codomain
     * are equals */
    SortDecl domain = getSortAndCheck(mdecl);
    if (null == domain)
      return tom_empty_list_concHookDecl();

    HookDeclList auHooks = tom_empty_list_concHookDecl();
    String userNeutral = trimBracket(scode);
    /* The hook body is the name of the neutral element */
    if (!"".equals(userNeutral)) {
      auHooks = tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,tom_empty_list_concSlot(),tom_make_Code("return "+userNeutral+";")),tom_append_list_concHookDecl(auHooks,tom_empty_list_concHookDecl()))

;
    }
    /* Flatten and remove neutral */
    /*
     * if(<head>.isEmpty<conc>()) { return <tail>; }
     * if(<tail>.isEmpty<conc>()) { return <head>; }
     * if(<head>.isCons<conc>()) { return `<conc>(<head>*,<tail>); }
     */
    if(!"".equals(userNeutral)) {
      auHooks = tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,tom_cons_list_concSlot(tom_make_Slot("head",domain),tom_cons_list_concSlot(tom_make_Slot("tail",domain),tom_empty_list_concSlot())),tom_cons_list_CodeList(tom_make_Code("if (head == "+userNeutral+") { return tail; }\n"),tom_cons_list_CodeList(tom_make_Code("if (tail ==  "+userNeutral+") { return head; }\n"),tom_empty_list_CodeList()))),tom_append_list_concHookDecl(auHooks,tom_empty_list_concHookDecl()))







;
    }
    /* getODecl call is safe here, since mdecl was checked by getSortAndCheck */
    auHooks = tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,tom_cons_list_concSlot(tom_make_Slot("head",domain),tom_cons_list_concSlot(tom_make_Slot("tail",domain),tom_empty_list_concSlot())),tom_cons_list_CodeList(tom_make_Code("if ("),tom_cons_list_CodeList(tom_make_IsEmpty("head",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(") { return tail; }\n"),tom_cons_list_CodeList(tom_make_Code("if ("),tom_cons_list_CodeList(tom_make_IsEmpty("tail",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(") { return head; }\n"),tom_cons_list_CodeList(tom_make_Code("if ("),tom_cons_list_CodeList(tom_make_IsCons("head",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(") { return `"+opName+"(head*,tail); }\n"),tom_empty_list_CodeList())))))))))),tom_append_list_concHookDecl(auHooks,tom_empty_list_concHookDecl()))














;

    /* The mapping for AU operators has to be correct */
     if(mdecl instanceof  tom.gom.adt.gom.types.Decl ) { { tom.gom.adt.gom.types.Decl  tomMatch16Position1=(( tom.gom.adt.gom.types.Decl )mdecl); if ( ( tom_is_fun_sym_CutOperator(tomMatch16Position1) ||  false  ) ) { { tom.gom.adt.gom.types.OperatorDecl  tomMatch16Position1NameNumberODecl=tom_get_slot_CutOperator_ODecl(tomMatch16Position1); if ( ( tom_is_fun_sym_OperatorDecl(tomMatch16Position1NameNumberODecl) ||  false  ) ) { { tom.gom.adt.gom.types.SortDecl  tomMatch16Position1NameNumberODeclNameNumberSort=tom_get_slot_OperatorDecl_Sort(tomMatch16Position1NameNumberODecl); if ( ( tom_is_fun_sym_SortDecl(tomMatch16Position1NameNumberODeclNameNumberSort) ||  false  ) ) { { String  tom_sortName=tom_get_slot_SortDecl_Name(tomMatch16Position1NameNumberODeclNameNumberSort); { tom.gom.adt.gom.types.SortDecl  tom_domainsdecl=tomMatch16Position1NameNumberODeclNameNumberSort; if ( ( tom_is_fun_sym_Variadic(tom_get_slot_OperatorDecl_Prod(tomMatch16Position1NameNumberODecl)) ||  false  ) ) { if ( true ) {


        auHooks = tom_cons_list_concHookDecl(tom_make_MappingHookDecl(mdecl,tom_cons_list_CodeList(tom_make_Code("%oplist " + tom_sortName),tom_cons_list_CodeList(tom_make_Code(" " + opName),tom_cons_list_CodeList(tom_make_Code("(" + tom_sortName+ "*) {\n"),tom_cons_list_CodeList(tom_make_Code("is_fsym(t) { t instanceof "),tom_cons_list_CodeList(tom_make_FullSortClass(tom_domainsdecl),tom_cons_list_CodeList(tom_make_Code("}\n"),tom_cons_list_CodeList(tom_make_Code("make_empty() { "),tom_cons_list_CodeList(tom_make_Empty(mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(".make() }\n"),tom_cons_list_CodeList(tom_make_Code("make_insert(e,l) { "),tom_cons_list_CodeList(tom_make_Cons(mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(".make(e,l) }\n"),tom_cons_list_CodeList(tom_make_Code("get_head(l) { ("),tom_cons_list_CodeList(tom_make_IsCons("l",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(")?(l."),tom_cons_list_CodeList(tom_make_Code("getHead" + opName+ "()"),tom_cons_list_CodeList(tom_make_Code("):(l) }\n"),tom_cons_list_CodeList(tom_make_Code("get_tail(l) { ("),tom_cons_list_CodeList(tom_make_IsCons("l",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(")?(l."),tom_cons_list_CodeList(tom_make_Code("getTail" + opName+ "()"),tom_cons_list_CodeList(tom_make_Code("):("),tom_cons_list_CodeList(tom_make_Empty(mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(".make()) }\n"),tom_cons_list_CodeList(tom_make_Code("is_empty(l) { "),tom_cons_list_CodeList(tom_make_Code("l == "),tom_cons_list_CodeList(tom_make_Empty(mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(".make() }\n"),tom_cons_list_CodeList(tom_make_Code("}\n"),tom_empty_list_CodeList())))))))))))))))))))))))))))))),tom_append_list_concHookDecl(auHooks,tom_empty_list_concHookDecl()))

































;
       } } } } } } } } } } }

    return auHooks;
  }

  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }
}

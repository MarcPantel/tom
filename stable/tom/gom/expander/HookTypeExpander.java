/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * GOM
 *
 * Copyright (C) 2006-2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.expander;

import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.gom.GomMessage;
import tom.gom.GomStreamManager;
import tom.gom.adt.gom.*;
import tom.gom.adt.gom.types.*;
import tom.gom.tools.error.GomRuntimeException;
import tom.gom.expander.rule.RuleExpander;
import tom.gom.expander.rule.GraphRuleExpander;

public class HookTypeExpander {

  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  /* Generated by TOM (version 2.6alpha): Do not edit this file */ private static boolean tom_equal_term_Code(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Code(Object t) { return  t instanceof tom.gom.adt.code.types.Code ;}private static boolean tom_equal_term_Slot(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Slot(Object t) { return  t instanceof tom.gom.adt.gom.types.Slot ;}private static boolean tom_equal_term_ArgList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ArgList(Object t) { return  t instanceof tom.gom.adt.gom.types.ArgList ;}private static boolean tom_equal_term_IdKind(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_IdKind(Object t) { return  t instanceof tom.gom.adt.gom.types.IdKind ;}private static boolean tom_equal_term_GomModuleList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomModuleList(Object t) { return  t instanceof tom.gom.adt.gom.types.GomModuleList ;}private static boolean tom_equal_term_GrammarList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GrammarList(Object t) { return  t instanceof tom.gom.adt.gom.types.GrammarList ;}private static boolean tom_equal_term_TypedProduction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TypedProduction(Object t) { return  t instanceof tom.gom.adt.gom.types.TypedProduction ;}private static boolean tom_equal_term_SectionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SectionList(Object t) { return  t instanceof tom.gom.adt.gom.types.SectionList ;}private static boolean tom_equal_term_OperatorDeclList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OperatorDeclList(Object t) { return  t instanceof tom.gom.adt.gom.types.OperatorDeclList ;}private static boolean tom_equal_term_HookDeclList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_HookDeclList(Object t) { return  t instanceof tom.gom.adt.gom.types.HookDeclList ;}private static boolean tom_equal_term_OperatorDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OperatorDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.OperatorDecl ;}private static boolean tom_equal_term_GomModule(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomModule(Object t) { return  t instanceof tom.gom.adt.gom.types.GomModule ;}private static boolean tom_equal_term_Section(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Section(Object t) { return  t instanceof tom.gom.adt.gom.types.Section ;}private static boolean tom_equal_term_ProductionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ProductionList(Object t) { return  t instanceof tom.gom.adt.gom.types.ProductionList ;}private static boolean tom_equal_term_Decl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Decl(Object t) { return  t instanceof tom.gom.adt.gom.types.Decl ;}private static boolean tom_equal_term_Sort(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Sort(Object t) { return  t instanceof tom.gom.adt.gom.types.Sort ;}private static boolean tom_equal_term_SortDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SortDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.SortDecl ;}private static boolean tom_equal_term_HookDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_HookDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.HookDecl ;}private static boolean tom_equal_term_Module(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Module(Object t) { return  t instanceof tom.gom.adt.gom.types.Module ;}private static boolean tom_equal_term_FieldList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_FieldList(Object t) { return  t instanceof tom.gom.adt.gom.types.FieldList ;}private static boolean tom_equal_term_Grammar(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Grammar(Object t) { return  t instanceof tom.gom.adt.gom.types.Grammar ;}private static boolean tom_equal_term_SlotList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotList(Object t) { return  t instanceof tom.gom.adt.gom.types.SlotList ;}private static boolean tom_equal_term_SortList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SortList(Object t) { return  t instanceof tom.gom.adt.gom.types.SortList ;}private static boolean tom_equal_term_Arg(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Arg(Object t) { return  t instanceof tom.gom.adt.gom.types.Arg ;}private static boolean tom_equal_term_GomModuleName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomModuleName(Object t) { return  t instanceof tom.gom.adt.gom.types.GomModuleName ;}private static boolean tom_equal_term_Field(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Field(Object t) { return  t instanceof tom.gom.adt.gom.types.Field ;}private static boolean tom_equal_term_Production(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Production(Object t) { return  t instanceof tom.gom.adt.gom.types.Production ;}private static boolean tom_equal_term_ModuleDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ModuleDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.ModuleDecl ;}private static boolean tom_equal_term_ModuleList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ModuleList(Object t) { return  t instanceof tom.gom.adt.gom.types.ModuleList ;}private static boolean tom_equal_term_GomType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomType(Object t) { return  t instanceof tom.gom.adt.gom.types.GomType ;}private static boolean tom_equal_term_Option(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Option(Object t) { return  t instanceof tom.gom.adt.gom.types.Option ;}private static boolean tom_equal_term_HookKind(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_HookKind(Object t) { return  t instanceof tom.gom.adt.gom.types.HookKind ;}private static  tom.gom.adt.code.types.Code  tom_make_Code( String  t0) { return  tom.gom.adt.code.types.code.Code.make(t0) ; }private static  tom.gom.adt.code.types.Code  tom_make_IsEmpty( String  t0,  tom.gom.adt.gom.types.OperatorDecl  t1) { return  tom.gom.adt.code.types.code.IsEmpty.make(t0, t1) ; }private static  tom.gom.adt.code.types.Code  tom_make_IsCons( String  t0,  tom.gom.adt.gom.types.OperatorDecl  t1) { return  tom.gom.adt.code.types.code.IsCons.make(t0, t1) ; }private static  tom.gom.adt.code.types.Code  tom_make_FullSortClass( tom.gom.adt.gom.types.SortDecl  t0) { return  tom.gom.adt.code.types.code.FullSortClass.make(t0) ; }private static  tom.gom.adt.code.types.Code  tom_make_Compare( tom.gom.adt.code.types.Code  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.code.types.code.Compare.make(t0, t1) ; }private static boolean tom_is_fun_sym_Slot( tom.gom.adt.gom.types.Slot  t) { return  (t instanceof tom.gom.adt.gom.types.slot.Slot) ;}private static  tom.gom.adt.gom.types.Slot  tom_make_Slot( String  t0,  tom.gom.adt.gom.types.SortDecl  t1) { return  tom.gom.adt.gom.types.slot.Slot.make(t0, t1) ; }private static  String  tom_get_slot_Slot_Name( tom.gom.adt.gom.types.Slot  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Slot_Sort( tom.gom.adt.gom.types.Slot  t) { return  t.getSort() ;}private static boolean tom_is_fun_sym_KindModule( tom.gom.adt.gom.types.IdKind  t) { return  (t instanceof tom.gom.adt.gom.types.idkind.KindModule) ;}private static boolean tom_is_fun_sym_KindSort( tom.gom.adt.gom.types.IdKind  t) { return  (t instanceof tom.gom.adt.gom.types.idkind.KindSort) ;}private static boolean tom_is_fun_sym_KindOperator( tom.gom.adt.gom.types.IdKind  t) { return  (t instanceof tom.gom.adt.gom.types.idkind.KindOperator) ;}private static  tom.gom.adt.gom.types.IdKind  tom_make_KindOperator() { return  tom.gom.adt.gom.types.idkind.KindOperator.make() ; }private static boolean tom_is_fun_sym_Slots( tom.gom.adt.gom.types.TypedProduction  t) { return  (t instanceof tom.gom.adt.gom.types.typedproduction.Slots) ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_slot_Slots_Slots( tom.gom.adt.gom.types.TypedProduction  t) { return  t.getSlots() ;}private static boolean tom_is_fun_sym_Variadic( tom.gom.adt.gom.types.TypedProduction  t) { return  (t instanceof tom.gom.adt.gom.types.typedproduction.Variadic) ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Variadic_Sort( tom.gom.adt.gom.types.TypedProduction  t) { return  t.getSort() ;}private static boolean tom_is_fun_sym_OperatorDecl( tom.gom.adt.gom.types.OperatorDecl  t) { return  (t instanceof tom.gom.adt.gom.types.operatordecl.OperatorDecl) ;}private static  String  tom_get_slot_OperatorDecl_Name( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_OperatorDecl_Sort( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getSort() ;}private static  tom.gom.adt.gom.types.TypedProduction  tom_get_slot_OperatorDecl_Prod( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getProd() ;}private static boolean tom_is_fun_sym_GomModule( tom.gom.adt.gom.types.GomModule  t) { return  (t instanceof tom.gom.adt.gom.types.gommodule.GomModule) ;}private static  tom.gom.adt.gom.types.GomModuleName  tom_get_slot_GomModule_ModuleName( tom.gom.adt.gom.types.GomModule  t) { return  t.getModuleName() ;}private static  tom.gom.adt.gom.types.SectionList  tom_get_slot_GomModule_SectionList( tom.gom.adt.gom.types.GomModule  t) { return  t.getSectionList() ;}private static boolean tom_is_fun_sym_Public( tom.gom.adt.gom.types.Section  t) { return  (t instanceof tom.gom.adt.gom.types.section.Public) ;}private static  tom.gom.adt.gom.types.GrammarList  tom_get_slot_Public_GrammarList( tom.gom.adt.gom.types.Section  t) { return  t.getGrammarList() ;}private static  tom.gom.adt.gom.types.Decl  tom_make_CutModule( tom.gom.adt.gom.types.ModuleDecl  t0) { return  tom.gom.adt.gom.types.decl.CutModule.make(t0) ; }private static  tom.gom.adt.gom.types.Decl  tom_make_CutSort( tom.gom.adt.gom.types.SortDecl  t0) { return  tom.gom.adt.gom.types.decl.CutSort.make(t0) ; }private static boolean tom_is_fun_sym_CutOperator( tom.gom.adt.gom.types.Decl  t) { return  (t instanceof tom.gom.adt.gom.types.decl.CutOperator) ;}private static  tom.gom.adt.gom.types.Decl  tom_make_CutOperator( tom.gom.adt.gom.types.OperatorDecl  t0) { return  tom.gom.adt.gom.types.decl.CutOperator.make(t0) ; }private static  tom.gom.adt.gom.types.OperatorDecl  tom_get_slot_CutOperator_ODecl( tom.gom.adt.gom.types.Decl  t) { return  t.getODecl() ;}private static boolean tom_is_fun_sym_Sort( tom.gom.adt.gom.types.Sort  t) { return  (t instanceof tom.gom.adt.gom.types.sort.Sort) ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Sort_Decl( tom.gom.adt.gom.types.Sort  t) { return  t.getDecl() ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_slot_Sort_Operators( tom.gom.adt.gom.types.Sort  t) { return  t.getOperators() ;}private static boolean tom_is_fun_sym_SortDecl( tom.gom.adt.gom.types.SortDecl  t) { return  (t instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ;}private static  String  tom_get_slot_SortDecl_Name( tom.gom.adt.gom.types.SortDecl  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_SortDecl_ModuleDecl( tom.gom.adt.gom.types.SortDecl  t) { return  t.getModuleDecl() ;}private static boolean tom_is_fun_sym_MakeHookDecl( tom.gom.adt.gom.types.HookDecl  t) { return  (t instanceof tom.gom.adt.gom.types.hookdecl.MakeHookDecl) ;}private static  tom.gom.adt.gom.types.HookDecl  tom_make_MakeHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.gom.types.SlotList  t1,  tom.gom.adt.code.types.Code  t2,  tom.gom.adt.gom.types.HookKind  t3) { return  tom.gom.adt.gom.types.hookdecl.MakeHookDecl.make(t0, t1, t2, t3) ; }private static  tom.gom.adt.gom.types.Decl  tom_get_slot_MakeHookDecl_Pointcut( tom.gom.adt.gom.types.HookDecl  t) { return  t.getPointcut() ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_slot_MakeHookDecl_SlotArgs( tom.gom.adt.gom.types.HookDecl  t) { return  t.getSlotArgs() ;}private static  tom.gom.adt.code.types.Code  tom_get_slot_MakeHookDecl_Code( tom.gom.adt.gom.types.HookDecl  t) { return  t.getCode() ;}private static  tom.gom.adt.gom.types.HookKind  tom_get_slot_MakeHookDecl_HookType( tom.gom.adt.gom.types.HookDecl  t) { return  t.getHookType() ;}private static  tom.gom.adt.gom.types.HookDecl  tom_make_BlockHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.gom.types.hookdecl.BlockHookDecl.make(t0, t1) ; }private static  tom.gom.adt.gom.types.HookDecl  tom_make_InterfaceHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.gom.types.hookdecl.InterfaceHookDecl.make(t0, t1) ; }private static  tom.gom.adt.gom.types.HookDecl  tom_make_ImportHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.gom.types.hookdecl.ImportHookDecl.make(t0, t1) ; }private static  tom.gom.adt.gom.types.HookDecl  tom_make_MappingHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.gom.types.hookdecl.MappingHookDecl.make(t0, t1) ; }private static boolean tom_is_fun_sym_Module( tom.gom.adt.gom.types.Module  t) { return  (t instanceof tom.gom.adt.gom.types.module.Module) ;}private static  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_Module_MDecl( tom.gom.adt.gom.types.Module  t) { return  t.getMDecl() ;}private static  tom.gom.adt.gom.types.SortList  tom_get_slot_Module_Sorts( tom.gom.adt.gom.types.Module  t) { return  t.getSorts() ;}private static boolean tom_is_fun_sym_Grammar( tom.gom.adt.gom.types.Grammar  t) { return  (t instanceof tom.gom.adt.gom.types.grammar.Grammar) ;}private static  tom.gom.adt.gom.types.ProductionList  tom_get_slot_Grammar_ProductionList( tom.gom.adt.gom.types.Grammar  t) { return  t.getProductionList() ;}private static boolean tom_is_fun_sym_Arg( tom.gom.adt.gom.types.Arg  t) { return  (t instanceof tom.gom.adt.gom.types.arg.Arg) ;}private static  String  tom_get_slot_Arg_Name( tom.gom.adt.gom.types.Arg  t) { return  t.getName() ;}private static boolean tom_is_fun_sym_GomModuleName( tom.gom.adt.gom.types.GomModuleName  t) { return  (t instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName) ;}private static  String  tom_get_slot_GomModuleName_Name( tom.gom.adt.gom.types.GomModuleName  t) { return  t.getName() ;}private static boolean tom_is_fun_sym_StarredField( tom.gom.adt.gom.types.Field  t) { return  (t instanceof tom.gom.adt.gom.types.field.StarredField) ;}private static  tom.gom.adt.gom.types.GomType  tom_get_slot_StarredField_FieldType( tom.gom.adt.gom.types.Field  t) { return  t.getFieldType() ;}private static boolean tom_is_fun_sym_Production( tom.gom.adt.gom.types.Production  t) { return  (t instanceof tom.gom.adt.gom.types.production.Production) ;}private static  String  tom_get_slot_Production_Name( tom.gom.adt.gom.types.Production  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.FieldList  tom_get_slot_Production_Domain( tom.gom.adt.gom.types.Production  t) { return  t.getDomain() ;}private static  tom.gom.adt.gom.types.GomType  tom_get_slot_Production_Codomain( tom.gom.adt.gom.types.Production  t) { return  t.getCodomain() ;}private static  tom.gom.adt.gom.types.Option  tom_get_slot_Production_Option( tom.gom.adt.gom.types.Production  t) { return  t.getOption() ;}private static boolean tom_is_fun_sym_Hook( tom.gom.adt.gom.types.Production  t) { return  (t instanceof tom.gom.adt.gom.types.production.Hook) ;}private static  tom.gom.adt.gom.types.Production  tom_make_Hook( tom.gom.adt.gom.types.IdKind  t0,  String  t1,  tom.gom.adt.gom.types.HookKind  t2,  tom.gom.adt.gom.types.ArgList  t3,  String  t4,  tom.gom.adt.gom.types.Option  t5) { return  tom.gom.adt.gom.types.production.Hook.make(t0, t1, t2, t3, t4, t5) ; }private static  tom.gom.adt.gom.types.IdKind  tom_get_slot_Hook_NameType( tom.gom.adt.gom.types.Production  t) { return  t.getNameType() ;}private static  String  tom_get_slot_Hook_Name( tom.gom.adt.gom.types.Production  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.HookKind  tom_get_slot_Hook_HookType( tom.gom.adt.gom.types.Production  t) { return  t.getHookType() ;}private static  tom.gom.adt.gom.types.ArgList  tom_get_slot_Hook_Args( tom.gom.adt.gom.types.Production  t) { return  t.getArgs() ;}private static  String  tom_get_slot_Hook_StringCode( tom.gom.adt.gom.types.Production  t) { return  t.getStringCode() ;}private static  tom.gom.adt.gom.types.Option  tom_get_slot_Hook_Option( tom.gom.adt.gom.types.Production  t) { return  t.getOption() ;}private static boolean tom_is_fun_sym_ModuleDecl( tom.gom.adt.gom.types.ModuleDecl  t) { return  (t instanceof tom.gom.adt.gom.types.moduledecl.ModuleDecl) ;}private static  tom.gom.adt.gom.types.GomModuleName  tom_get_slot_ModuleDecl_ModuleName( tom.gom.adt.gom.types.ModuleDecl  t) { return  t.getModuleName() ;}private static  String  tom_get_slot_ModuleDecl_Pkg( tom.gom.adt.gom.types.ModuleDecl  t) { return  t.getPkg() ;}private static boolean tom_is_fun_sym_HookKind( tom.gom.adt.gom.types.HookKind  t) { return  (t instanceof tom.gom.adt.gom.types.hookkind.HookKind) ;}private static  tom.gom.adt.gom.types.HookKind  tom_make_HookKind( String  t0) { return  tom.gom.adt.gom.types.hookkind.HookKind.make(t0) ; }private static  String  tom_get_slot_HookKind_kind( tom.gom.adt.gom.types.HookKind  t) { return  t.getkind() ;}private static boolean tom_is_fun_sym_CodeList( tom.gom.adt.code.types.Code  t) { return  ((t instanceof tom.gom.adt.code.types.code.ConsCodeList) || (t instanceof tom.gom.adt.code.types.code.EmptyCodeList)) ;}private static  tom.gom.adt.code.types.Code  tom_empty_list_CodeList() { return  tom.gom.adt.code.types.code.EmptyCodeList.make() ; }private static  tom.gom.adt.code.types.Code  tom_cons_list_CodeList( tom.gom.adt.code.types.Code  e,  tom.gom.adt.code.types.Code  l) { return  tom.gom.adt.code.types.code.ConsCodeList.make(e,l) ; }private static  tom.gom.adt.code.types.Code  tom_get_head_CodeList_Code( tom.gom.adt.code.types.Code  l) { return  l.getHeadCodeList() ;}private static  tom.gom.adt.code.types.Code  tom_get_tail_CodeList_Code( tom.gom.adt.code.types.Code  l) { return  l.getTailCodeList() ;}private static boolean tom_is_empty_CodeList_Code( tom.gom.adt.code.types.Code  l) { return  l.isEmptyCodeList() ;}   private static   tom.gom.adt.code.types.Code  tom_append_list_CodeList( tom.gom.adt.code.types.Code l1,  tom.gom.adt.code.types.Code  l2) {     if( l1.isEmptyCodeList() ) {       return l2;     } else if( l2.isEmptyCodeList() ) {       return l1;     } else if( ((l1 instanceof tom.gom.adt.code.types.code.ConsCodeList) || (l1 instanceof tom.gom.adt.code.types.code.EmptyCodeList)) ) {       if( (( ((l1 instanceof tom.gom.adt.code.types.code.ConsCodeList) || (l1 instanceof tom.gom.adt.code.types.code.EmptyCodeList)) )? l1.getTailCodeList() :tom_empty_list_CodeList()).isEmptyCodeList() ) {         return ( tom.gom.adt.code.types.Code )tom_cons_list_CodeList((( ((l1 instanceof tom.gom.adt.code.types.code.ConsCodeList) || (l1 instanceof tom.gom.adt.code.types.code.EmptyCodeList)) )? l1.getHeadCodeList() :l1),l2);       } else {         return ( tom.gom.adt.code.types.Code )tom_cons_list_CodeList((( ((l1 instanceof tom.gom.adt.code.types.code.ConsCodeList) || (l1 instanceof tom.gom.adt.code.types.code.EmptyCodeList)) )? l1.getHeadCodeList() :l1),tom_append_list_CodeList((( ((l1 instanceof tom.gom.adt.code.types.code.ConsCodeList) || (l1 instanceof tom.gom.adt.code.types.code.EmptyCodeList)) )? l1.getTailCodeList() :tom_empty_list_CodeList()),l2));       }     } else {       return ( tom.gom.adt.code.types.Code )tom_cons_list_CodeList(l1, l2);     }   }   private static   tom.gom.adt.code.types.Code  tom_get_slice_CodeList( tom.gom.adt.code.types.Code  begin,  tom.gom.adt.code.types.Code  end, tom.gom.adt.code.types.Code  tail) {     if(tom_equal_term_Code(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.code.types.Code )tom_cons_list_CodeList((( ((begin instanceof tom.gom.adt.code.types.code.ConsCodeList) || (begin instanceof tom.gom.adt.code.types.code.EmptyCodeList)) )? begin.getHeadCodeList() :begin),( tom.gom.adt.code.types.Code )tom_get_slice_CodeList((( ((begin instanceof tom.gom.adt.code.types.code.ConsCodeList) || (begin instanceof tom.gom.adt.code.types.code.EmptyCodeList)) )? begin.getTailCodeList() :tom_empty_list_CodeList()),end,tail));     }   }   private static boolean tom_is_fun_sym_concArg( tom.gom.adt.gom.types.ArgList  t) { return  ((t instanceof tom.gom.adt.gom.types.arglist.ConsconcArg) || (t instanceof tom.gom.adt.gom.types.arglist.EmptyconcArg)) ;}private static  tom.gom.adt.gom.types.ArgList  tom_empty_list_concArg() { return  tom.gom.adt.gom.types.arglist.EmptyconcArg.make() ; }private static  tom.gom.adt.gom.types.ArgList  tom_cons_list_concArg( tom.gom.adt.gom.types.Arg  e,  tom.gom.adt.gom.types.ArgList  l) { return  tom.gom.adt.gom.types.arglist.ConsconcArg.make(e,l) ; }private static  tom.gom.adt.gom.types.Arg  tom_get_head_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) { return  l.getHeadconcArg() ;}private static  tom.gom.adt.gom.types.ArgList  tom_get_tail_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) { return  l.getTailconcArg() ;}private static boolean tom_is_empty_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) { return  l.isEmptyconcArg() ;}   private static   tom.gom.adt.gom.types.ArgList  tom_append_list_concArg( tom.gom.adt.gom.types.ArgList l1,  tom.gom.adt.gom.types.ArgList  l2) {     if( l1.isEmptyconcArg() ) {       return l2;     } else if( l2.isEmptyconcArg() ) {       return l1;     } else if(  l1.getTailconcArg() .isEmptyconcArg() ) {       return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg( l1.getHeadconcArg() ,l2);     } else {       return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg( l1.getHeadconcArg() ,tom_append_list_concArg( l1.getTailconcArg() ,l2));     }   }   private static   tom.gom.adt.gom.types.ArgList  tom_get_slice_concArg( tom.gom.adt.gom.types.ArgList  begin,  tom.gom.adt.gom.types.ArgList  end, tom.gom.adt.gom.types.ArgList  tail) {     if(tom_equal_term_ArgList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg( begin.getHeadconcArg() ,( tom.gom.adt.gom.types.ArgList )tom_get_slice_concArg( begin.getTailconcArg() ,end,tail));     }   }   private static boolean tom_is_fun_sym_concGomModule( tom.gom.adt.gom.types.GomModuleList  t) { return  ((t instanceof tom.gom.adt.gom.types.gommodulelist.ConsconcGomModule) || (t instanceof tom.gom.adt.gom.types.gommodulelist.EmptyconcGomModule)) ;}private static  tom.gom.adt.gom.types.GomModuleList  tom_empty_list_concGomModule() { return  tom.gom.adt.gom.types.gommodulelist.EmptyconcGomModule.make() ; }private static  tom.gom.adt.gom.types.GomModuleList  tom_cons_list_concGomModule( tom.gom.adt.gom.types.GomModule  e,  tom.gom.adt.gom.types.GomModuleList  l) { return  tom.gom.adt.gom.types.gommodulelist.ConsconcGomModule.make(e,l) ; }private static  tom.gom.adt.gom.types.GomModule  tom_get_head_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) { return  l.getHeadconcGomModule() ;}private static  tom.gom.adt.gom.types.GomModuleList  tom_get_tail_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) { return  l.getTailconcGomModule() ;}private static boolean tom_is_empty_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) { return  l.isEmptyconcGomModule() ;}   private static   tom.gom.adt.gom.types.GomModuleList  tom_append_list_concGomModule( tom.gom.adt.gom.types.GomModuleList l1,  tom.gom.adt.gom.types.GomModuleList  l2) {     if( l1.isEmptyconcGomModule() ) {       return l2;     } else if( l2.isEmptyconcGomModule() ) {       return l1;     } else if(  l1.getTailconcGomModule() .isEmptyconcGomModule() ) {       return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule( l1.getHeadconcGomModule() ,l2);     } else {       return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule( l1.getHeadconcGomModule() ,tom_append_list_concGomModule( l1.getTailconcGomModule() ,l2));     }   }   private static   tom.gom.adt.gom.types.GomModuleList  tom_get_slice_concGomModule( tom.gom.adt.gom.types.GomModuleList  begin,  tom.gom.adt.gom.types.GomModuleList  end, tom.gom.adt.gom.types.GomModuleList  tail) {     if(tom_equal_term_GomModuleList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule( begin.getHeadconcGomModule() ,( tom.gom.adt.gom.types.GomModuleList )tom_get_slice_concGomModule( begin.getTailconcGomModule() ,end,tail));     }   }   private static boolean tom_is_fun_sym_concGrammar( tom.gom.adt.gom.types.GrammarList  t) { return  ((t instanceof tom.gom.adt.gom.types.grammarlist.ConsconcGrammar) || (t instanceof tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar)) ;}private static  tom.gom.adt.gom.types.GrammarList  tom_empty_list_concGrammar() { return  tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar.make() ; }private static  tom.gom.adt.gom.types.GrammarList  tom_cons_list_concGrammar( tom.gom.adt.gom.types.Grammar  e,  tom.gom.adt.gom.types.GrammarList  l) { return  tom.gom.adt.gom.types.grammarlist.ConsconcGrammar.make(e,l) ; }private static  tom.gom.adt.gom.types.Grammar  tom_get_head_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) { return  l.getHeadconcGrammar() ;}private static  tom.gom.adt.gom.types.GrammarList  tom_get_tail_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) { return  l.getTailconcGrammar() ;}private static boolean tom_is_empty_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) { return  l.isEmptyconcGrammar() ;}   private static   tom.gom.adt.gom.types.GrammarList  tom_append_list_concGrammar( tom.gom.adt.gom.types.GrammarList l1,  tom.gom.adt.gom.types.GrammarList  l2) {     if( l1.isEmptyconcGrammar() ) {       return l2;     } else if( l2.isEmptyconcGrammar() ) {       return l1;     } else if(  l1.getTailconcGrammar() .isEmptyconcGrammar() ) {       return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar( l1.getHeadconcGrammar() ,l2);     } else {       return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar( l1.getHeadconcGrammar() ,tom_append_list_concGrammar( l1.getTailconcGrammar() ,l2));     }   }   private static   tom.gom.adt.gom.types.GrammarList  tom_get_slice_concGrammar( tom.gom.adt.gom.types.GrammarList  begin,  tom.gom.adt.gom.types.GrammarList  end, tom.gom.adt.gom.types.GrammarList  tail) {     if(tom_equal_term_GrammarList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar( begin.getHeadconcGrammar() ,( tom.gom.adt.gom.types.GrammarList )tom_get_slice_concGrammar( begin.getTailconcGrammar() ,end,tail));     }   }   private static boolean tom_is_fun_sym_concSection( tom.gom.adt.gom.types.SectionList  t) { return  ((t instanceof tom.gom.adt.gom.types.sectionlist.ConsconcSection) || (t instanceof tom.gom.adt.gom.types.sectionlist.EmptyconcSection)) ;}private static  tom.gom.adt.gom.types.SectionList  tom_empty_list_concSection() { return  tom.gom.adt.gom.types.sectionlist.EmptyconcSection.make() ; }private static  tom.gom.adt.gom.types.SectionList  tom_cons_list_concSection( tom.gom.adt.gom.types.Section  e,  tom.gom.adt.gom.types.SectionList  l) { return  tom.gom.adt.gom.types.sectionlist.ConsconcSection.make(e,l) ; }private static  tom.gom.adt.gom.types.Section  tom_get_head_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) { return  l.getHeadconcSection() ;}private static  tom.gom.adt.gom.types.SectionList  tom_get_tail_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) { return  l.getTailconcSection() ;}private static boolean tom_is_empty_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) { return  l.isEmptyconcSection() ;}   private static   tom.gom.adt.gom.types.SectionList  tom_append_list_concSection( tom.gom.adt.gom.types.SectionList l1,  tom.gom.adt.gom.types.SectionList  l2) {     if( l1.isEmptyconcSection() ) {       return l2;     } else if( l2.isEmptyconcSection() ) {       return l1;     } else if(  l1.getTailconcSection() .isEmptyconcSection() ) {       return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection( l1.getHeadconcSection() ,l2);     } else {       return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection( l1.getHeadconcSection() ,tom_append_list_concSection( l1.getTailconcSection() ,l2));     }   }   private static   tom.gom.adt.gom.types.SectionList  tom_get_slice_concSection( tom.gom.adt.gom.types.SectionList  begin,  tom.gom.adt.gom.types.SectionList  end, tom.gom.adt.gom.types.SectionList  tail) {     if(tom_equal_term_SectionList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection( begin.getHeadconcSection() ,( tom.gom.adt.gom.types.SectionList )tom_get_slice_concSection( begin.getTailconcSection() ,end,tail));     }   }   private static boolean tom_is_fun_sym_concOperator( tom.gom.adt.gom.types.OperatorDeclList  t) { return  ((t instanceof tom.gom.adt.gom.types.operatordecllist.ConsconcOperator) || (t instanceof tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator)) ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_empty_list_concOperator() { return  tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator.make() ; }private static  tom.gom.adt.gom.types.OperatorDeclList  tom_cons_list_concOperator( tom.gom.adt.gom.types.OperatorDecl  e,  tom.gom.adt.gom.types.OperatorDeclList  l) { return  tom.gom.adt.gom.types.operatordecllist.ConsconcOperator.make(e,l) ; }private static  tom.gom.adt.gom.types.OperatorDecl  tom_get_head_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) { return  l.getHeadconcOperator() ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_tail_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) { return  l.getTailconcOperator() ;}private static boolean tom_is_empty_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) { return  l.isEmptyconcOperator() ;}   private static   tom.gom.adt.gom.types.OperatorDeclList  tom_append_list_concOperator( tom.gom.adt.gom.types.OperatorDeclList l1,  tom.gom.adt.gom.types.OperatorDeclList  l2) {     if( l1.isEmptyconcOperator() ) {       return l2;     } else if( l2.isEmptyconcOperator() ) {       return l1;     } else if(  l1.getTailconcOperator() .isEmptyconcOperator() ) {       return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator( l1.getHeadconcOperator() ,l2);     } else {       return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator( l1.getHeadconcOperator() ,tom_append_list_concOperator( l1.getTailconcOperator() ,l2));     }   }   private static   tom.gom.adt.gom.types.OperatorDeclList  tom_get_slice_concOperator( tom.gom.adt.gom.types.OperatorDeclList  begin,  tom.gom.adt.gom.types.OperatorDeclList  end, tom.gom.adt.gom.types.OperatorDeclList  tail) {     if(tom_equal_term_OperatorDeclList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator( begin.getHeadconcOperator() ,( tom.gom.adt.gom.types.OperatorDeclList )tom_get_slice_concOperator( begin.getTailconcOperator() ,end,tail));     }   }   private static boolean tom_is_fun_sym_concHookDecl( tom.gom.adt.gom.types.HookDeclList  t) { return  ((t instanceof tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl) || (t instanceof tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl)) ;}private static  tom.gom.adt.gom.types.HookDeclList  tom_empty_list_concHookDecl() { return  tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl.make() ; }private static  tom.gom.adt.gom.types.HookDeclList  tom_cons_list_concHookDecl( tom.gom.adt.gom.types.HookDecl  e,  tom.gom.adt.gom.types.HookDeclList  l) { return  tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make(e,l) ; }private static  tom.gom.adt.gom.types.HookDecl  tom_get_head_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) { return  l.getHeadconcHookDecl() ;}private static  tom.gom.adt.gom.types.HookDeclList  tom_get_tail_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) { return  l.getTailconcHookDecl() ;}private static boolean tom_is_empty_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) { return  l.isEmptyconcHookDecl() ;}   private static   tom.gom.adt.gom.types.HookDeclList  tom_append_list_concHookDecl( tom.gom.adt.gom.types.HookDeclList l1,  tom.gom.adt.gom.types.HookDeclList  l2) {     if( l1.isEmptyconcHookDecl() ) {       return l2;     } else if( l2.isEmptyconcHookDecl() ) {       return l1;     } else if(  l1.getTailconcHookDecl() .isEmptyconcHookDecl() ) {       return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl( l1.getHeadconcHookDecl() ,l2);     } else {       return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl( l1.getHeadconcHookDecl() ,tom_append_list_concHookDecl( l1.getTailconcHookDecl() ,l2));     }   }   private static   tom.gom.adt.gom.types.HookDeclList  tom_get_slice_concHookDecl( tom.gom.adt.gom.types.HookDeclList  begin,  tom.gom.adt.gom.types.HookDeclList  end, tom.gom.adt.gom.types.HookDeclList  tail) {     if(tom_equal_term_HookDeclList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl( begin.getHeadconcHookDecl() ,( tom.gom.adt.gom.types.HookDeclList )tom_get_slice_concHookDecl( begin.getTailconcHookDecl() ,end,tail));     }   }   private static boolean tom_is_fun_sym_concProduction( tom.gom.adt.gom.types.ProductionList  t) { return  ((t instanceof tom.gom.adt.gom.types.productionlist.ConsconcProduction) || (t instanceof tom.gom.adt.gom.types.productionlist.EmptyconcProduction)) ;}private static  tom.gom.adt.gom.types.ProductionList  tom_empty_list_concProduction() { return  tom.gom.adt.gom.types.productionlist.EmptyconcProduction.make() ; }private static  tom.gom.adt.gom.types.ProductionList  tom_cons_list_concProduction( tom.gom.adt.gom.types.Production  e,  tom.gom.adt.gom.types.ProductionList  l) { return  tom.gom.adt.gom.types.productionlist.ConsconcProduction.make(e,l) ; }private static  tom.gom.adt.gom.types.Production  tom_get_head_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) { return  l.getHeadconcProduction() ;}private static  tom.gom.adt.gom.types.ProductionList  tom_get_tail_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) { return  l.getTailconcProduction() ;}private static boolean tom_is_empty_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) { return  l.isEmptyconcProduction() ;}   private static   tom.gom.adt.gom.types.ProductionList  tom_append_list_concProduction( tom.gom.adt.gom.types.ProductionList l1,  tom.gom.adt.gom.types.ProductionList  l2) {     if( l1.isEmptyconcProduction() ) {       return l2;     } else if( l2.isEmptyconcProduction() ) {       return l1;     } else if(  l1.getTailconcProduction() .isEmptyconcProduction() ) {       return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction( l1.getHeadconcProduction() ,l2);     } else {       return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction( l1.getHeadconcProduction() ,tom_append_list_concProduction( l1.getTailconcProduction() ,l2));     }   }   private static   tom.gom.adt.gom.types.ProductionList  tom_get_slice_concProduction( tom.gom.adt.gom.types.ProductionList  begin,  tom.gom.adt.gom.types.ProductionList  end, tom.gom.adt.gom.types.ProductionList  tail) {     if(tom_equal_term_ProductionList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction( begin.getHeadconcProduction() ,( tom.gom.adt.gom.types.ProductionList )tom_get_slice_concProduction( begin.getTailconcProduction() ,end,tail));     }   }   private static boolean tom_is_fun_sym_concField( tom.gom.adt.gom.types.FieldList  t) { return  ((t instanceof tom.gom.adt.gom.types.fieldlist.ConsconcField) || (t instanceof tom.gom.adt.gom.types.fieldlist.EmptyconcField)) ;}private static  tom.gom.adt.gom.types.FieldList  tom_empty_list_concField() { return  tom.gom.adt.gom.types.fieldlist.EmptyconcField.make() ; }private static  tom.gom.adt.gom.types.FieldList  tom_cons_list_concField( tom.gom.adt.gom.types.Field  e,  tom.gom.adt.gom.types.FieldList  l) { return  tom.gom.adt.gom.types.fieldlist.ConsconcField.make(e,l) ; }private static  tom.gom.adt.gom.types.Field  tom_get_head_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) { return  l.getHeadconcField() ;}private static  tom.gom.adt.gom.types.FieldList  tom_get_tail_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) { return  l.getTailconcField() ;}private static boolean tom_is_empty_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) { return  l.isEmptyconcField() ;}   private static   tom.gom.adt.gom.types.FieldList  tom_append_list_concField( tom.gom.adt.gom.types.FieldList l1,  tom.gom.adt.gom.types.FieldList  l2) {     if( l1.isEmptyconcField() ) {       return l2;     } else if( l2.isEmptyconcField() ) {       return l1;     } else if(  l1.getTailconcField() .isEmptyconcField() ) {       return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField( l1.getHeadconcField() ,l2);     } else {       return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField( l1.getHeadconcField() ,tom_append_list_concField( l1.getTailconcField() ,l2));     }   }   private static   tom.gom.adt.gom.types.FieldList  tom_get_slice_concField( tom.gom.adt.gom.types.FieldList  begin,  tom.gom.adt.gom.types.FieldList  end, tom.gom.adt.gom.types.FieldList  tail) {     if(tom_equal_term_FieldList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField( begin.getHeadconcField() ,( tom.gom.adt.gom.types.FieldList )tom_get_slice_concField( begin.getTailconcField() ,end,tail));     }   }   private static boolean tom_is_fun_sym_concSlot( tom.gom.adt.gom.types.SlotList  t) { return  ((t instanceof tom.gom.adt.gom.types.slotlist.ConsconcSlot) || (t instanceof tom.gom.adt.gom.types.slotlist.EmptyconcSlot)) ;}private static  tom.gom.adt.gom.types.SlotList  tom_empty_list_concSlot() { return  tom.gom.adt.gom.types.slotlist.EmptyconcSlot.make() ; }private static  tom.gom.adt.gom.types.SlotList  tom_cons_list_concSlot( tom.gom.adt.gom.types.Slot  e,  tom.gom.adt.gom.types.SlotList  l) { return  tom.gom.adt.gom.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.gom.adt.gom.types.Slot  tom_get_head_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.getHeadconcSlot() ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_tail_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.getTailconcSlot() ;}private static boolean tom_is_empty_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.isEmptyconcSlot() ;}   private static   tom.gom.adt.gom.types.SlotList  tom_append_list_concSlot( tom.gom.adt.gom.types.SlotList l1,  tom.gom.adt.gom.types.SlotList  l2) {     if( l1.isEmptyconcSlot() ) {       return l2;     } else if( l2.isEmptyconcSlot() ) {       return l1;     } else if(  l1.getTailconcSlot() .isEmptyconcSlot() ) {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot( l1.getHeadconcSlot() ,l2);     } else {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot( l1.getHeadconcSlot() ,tom_append_list_concSlot( l1.getTailconcSlot() ,l2));     }   }   private static   tom.gom.adt.gom.types.SlotList  tom_get_slice_concSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end, tom.gom.adt.gom.types.SlotList  tail) {     if(tom_equal_term_SlotList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot( begin.getHeadconcSlot() ,( tom.gom.adt.gom.types.SlotList )tom_get_slice_concSlot( begin.getTailconcSlot() ,end,tail));     }   }   private static boolean tom_is_fun_sym_concSort( tom.gom.adt.gom.types.SortList  t) { return  ((t instanceof tom.gom.adt.gom.types.sortlist.ConsconcSort) || (t instanceof tom.gom.adt.gom.types.sortlist.EmptyconcSort)) ;}private static  tom.gom.adt.gom.types.SortList  tom_empty_list_concSort() { return  tom.gom.adt.gom.types.sortlist.EmptyconcSort.make() ; }private static  tom.gom.adt.gom.types.SortList  tom_cons_list_concSort( tom.gom.adt.gom.types.Sort  e,  tom.gom.adt.gom.types.SortList  l) { return  tom.gom.adt.gom.types.sortlist.ConsconcSort.make(e,l) ; }private static  tom.gom.adt.gom.types.Sort  tom_get_head_concSort_SortList( tom.gom.adt.gom.types.SortList  l) { return  l.getHeadconcSort() ;}private static  tom.gom.adt.gom.types.SortList  tom_get_tail_concSort_SortList( tom.gom.adt.gom.types.SortList  l) { return  l.getTailconcSort() ;}private static boolean tom_is_empty_concSort_SortList( tom.gom.adt.gom.types.SortList  l) { return  l.isEmptyconcSort() ;}   private static   tom.gom.adt.gom.types.SortList  tom_append_list_concSort( tom.gom.adt.gom.types.SortList l1,  tom.gom.adt.gom.types.SortList  l2) {     if( l1.isEmptyconcSort() ) {       return l2;     } else if( l2.isEmptyconcSort() ) {       return l1;     } else if(  l1.getTailconcSort() .isEmptyconcSort() ) {       return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort( l1.getHeadconcSort() ,l2);     } else {       return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort( l1.getHeadconcSort() ,tom_append_list_concSort( l1.getTailconcSort() ,l2));     }   }   private static   tom.gom.adt.gom.types.SortList  tom_get_slice_concSort( tom.gom.adt.gom.types.SortList  begin,  tom.gom.adt.gom.types.SortList  end, tom.gom.adt.gom.types.SortList  tail) {     if(tom_equal_term_SortList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort( begin.getHeadconcSort() ,( tom.gom.adt.gom.types.SortList )tom_get_slice_concSort( begin.getTailconcSort() ,end,tail));     }   }   private static boolean tom_is_fun_sym_concModule( tom.gom.adt.gom.types.ModuleList  t) { return  ((t instanceof tom.gom.adt.gom.types.modulelist.ConsconcModule) || (t instanceof tom.gom.adt.gom.types.modulelist.EmptyconcModule)) ;}private static  tom.gom.adt.gom.types.ModuleList  tom_empty_list_concModule() { return  tom.gom.adt.gom.types.modulelist.EmptyconcModule.make() ; }private static  tom.gom.adt.gom.types.ModuleList  tom_cons_list_concModule( tom.gom.adt.gom.types.Module  e,  tom.gom.adt.gom.types.ModuleList  l) { return  tom.gom.adt.gom.types.modulelist.ConsconcModule.make(e,l) ; }private static  tom.gom.adt.gom.types.Module  tom_get_head_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) { return  l.getHeadconcModule() ;}private static  tom.gom.adt.gom.types.ModuleList  tom_get_tail_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) { return  l.getTailconcModule() ;}private static boolean tom_is_empty_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) { return  l.isEmptyconcModule() ;}   private static   tom.gom.adt.gom.types.ModuleList  tom_append_list_concModule( tom.gom.adt.gom.types.ModuleList l1,  tom.gom.adt.gom.types.ModuleList  l2) {     if( l1.isEmptyconcModule() ) {       return l2;     } else if( l2.isEmptyconcModule() ) {       return l1;     } else if(  l1.getTailconcModule() .isEmptyconcModule() ) {       return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule( l1.getHeadconcModule() ,l2);     } else {       return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule( l1.getHeadconcModule() ,tom_append_list_concModule( l1.getTailconcModule() ,l2));     }   }   private static   tom.gom.adt.gom.types.ModuleList  tom_get_slice_concModule( tom.gom.adt.gom.types.ModuleList  begin,  tom.gom.adt.gom.types.ModuleList  end, tom.gom.adt.gom.types.ModuleList  tail) {     if(tom_equal_term_ModuleList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule( begin.getHeadconcModule() ,( tom.gom.adt.gom.types.ModuleList )tom_get_slice_concModule( begin.getTailconcModule() ,end,tail));     }   }   private static boolean tom_is_fun_sym_OptionList( tom.gom.adt.gom.types.Option  t) { return  ((t instanceof tom.gom.adt.gom.types.option.ConsOptionList) || (t instanceof tom.gom.adt.gom.types.option.EmptyOptionList)) ;}private static  tom.gom.adt.gom.types.Option  tom_empty_list_OptionList() { return  tom.gom.adt.gom.types.option.EmptyOptionList.make() ; }private static  tom.gom.adt.gom.types.Option  tom_cons_list_OptionList( tom.gom.adt.gom.types.Option  e,  tom.gom.adt.gom.types.Option  l) { return  tom.gom.adt.gom.types.option.ConsOptionList.make(e,l) ; }private static  tom.gom.adt.gom.types.Option  tom_get_head_OptionList_Option( tom.gom.adt.gom.types.Option  l) { return  l.getHeadOptionList() ;}private static  tom.gom.adt.gom.types.Option  tom_get_tail_OptionList_Option( tom.gom.adt.gom.types.Option  l) { return  l.getTailOptionList() ;}private static boolean tom_is_empty_OptionList_Option( tom.gom.adt.gom.types.Option  l) { return  l.isEmptyOptionList() ;}   private static   tom.gom.adt.gom.types.Option  tom_append_list_OptionList( tom.gom.adt.gom.types.Option l1,  tom.gom.adt.gom.types.Option  l2) {     if( l1.isEmptyOptionList() ) {       return l2;     } else if( l2.isEmptyOptionList() ) {       return l1;     } else if( ((l1 instanceof tom.gom.adt.gom.types.option.ConsOptionList) || (l1 instanceof tom.gom.adt.gom.types.option.EmptyOptionList)) ) {       if( (( ((l1 instanceof tom.gom.adt.gom.types.option.ConsOptionList) || (l1 instanceof tom.gom.adt.gom.types.option.EmptyOptionList)) )? l1.getTailOptionList() :tom_empty_list_OptionList()).isEmptyOptionList() ) {         return ( tom.gom.adt.gom.types.Option )tom_cons_list_OptionList((( ((l1 instanceof tom.gom.adt.gom.types.option.ConsOptionList) || (l1 instanceof tom.gom.adt.gom.types.option.EmptyOptionList)) )? l1.getHeadOptionList() :l1),l2);       } else {         return ( tom.gom.adt.gom.types.Option )tom_cons_list_OptionList((( ((l1 instanceof tom.gom.adt.gom.types.option.ConsOptionList) || (l1 instanceof tom.gom.adt.gom.types.option.EmptyOptionList)) )? l1.getHeadOptionList() :l1),tom_append_list_OptionList((( ((l1 instanceof tom.gom.adt.gom.types.option.ConsOptionList) || (l1 instanceof tom.gom.adt.gom.types.option.EmptyOptionList)) )? l1.getTailOptionList() :tom_empty_list_OptionList()),l2));       }     } else {       return ( tom.gom.adt.gom.types.Option )tom_cons_list_OptionList(l1, l2);     }   }   private static   tom.gom.adt.gom.types.Option  tom_get_slice_OptionList( tom.gom.adt.gom.types.Option  begin,  tom.gom.adt.gom.types.Option  end, tom.gom.adt.gom.types.Option  tail) {     if(tom_equal_term_Option(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.Option )tom_cons_list_OptionList((( ((begin instanceof tom.gom.adt.gom.types.option.ConsOptionList) || (begin instanceof tom.gom.adt.gom.types.option.EmptyOptionList)) )? begin.getHeadOptionList() :begin),( tom.gom.adt.gom.types.Option )tom_get_slice_OptionList((( ((begin instanceof tom.gom.adt.gom.types.option.ConsOptionList) || (begin instanceof tom.gom.adt.gom.types.option.EmptyOptionList)) )? begin.getTailOptionList() :tom_empty_list_OptionList()),end,tail));     }   }    

  private ModuleList moduleList;
  private ArrayList sortsWithGraphrules;

  public HookTypeExpander(ModuleList moduleList) {
    this.moduleList = moduleList;
    sortsWithGraphrules = new ArrayList();
  }

  /**
    * Get the correct types for hooks, and attach them the correct Decl
    */
  public HookDeclList expand(GomModuleList gomModuleList) {
    HookDeclList hookList = tom_empty_list_concHookDecl();
    /* For each hook in the GomModuleList */
    if (tom_is_sort_GomModuleList(gomModuleList)) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch460NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModuleList )gomModuleList);if (tom_is_fun_sym_concGomModule(tomMatch460NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch460NameNumber_freshVar_0=tomMatch460NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.GomModuleList  tomMatch460NameNumber_begin_2=tomMatch460NameNumber_freshVar_0;{  tom.gom.adt.gom.types.GomModuleList  tomMatch460NameNumber_end_3=tomMatch460NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.GomModuleList  tomMatch460NameNumber_freshVar_1=tomMatch460NameNumber_end_3;if (!(tom_is_empty_concGomModule_GomModuleList(tomMatch460NameNumber_freshVar_1))) {if (tom_is_fun_sym_GomModule(tom_get_head_concGomModule_GomModuleList(tomMatch460NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch460NameNumber_freshVar_6=tom_get_slot_GomModule_ModuleName(tom_get_head_concGomModule_GomModuleList(tomMatch460NameNumber_freshVar_1));{  tom.gom.adt.gom.types.SectionList  tomMatch460NameNumber_freshVar_7=tom_get_slot_GomModule_SectionList(tom_get_head_concGomModule_GomModuleList(tomMatch460NameNumber_freshVar_1));if (tom_is_fun_sym_GomModuleName(tomMatch460NameNumber_freshVar_6)) {{  String  tomMatch460NameNumber_freshVar_8=tom_get_slot_GomModuleName_Name(tomMatch460NameNumber_freshVar_6);{  String  tom_moduleName=tomMatch460NameNumber_freshVar_8;if (tom_is_fun_sym_concSection(tomMatch460NameNumber_freshVar_7)) {{  tom.gom.adt.gom.types.SectionList  tomMatch460NameNumber_freshVar_9=tomMatch460NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SectionList  tomMatch460NameNumber_begin_11=tomMatch460NameNumber_freshVar_9;{  tom.gom.adt.gom.types.SectionList  tomMatch460NameNumber_end_12=tomMatch460NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch460NameNumber_freshVar_10=tomMatch460NameNumber_end_12;if (!(tom_is_empty_concSection_SectionList(tomMatch460NameNumber_freshVar_10))) {if (tom_is_fun_sym_Public(tom_get_head_concSection_SectionList(tomMatch460NameNumber_freshVar_10))) {{  tom.gom.adt.gom.types.GrammarList  tomMatch460NameNumber_freshVar_15=tom_get_slot_Public_GrammarList(tom_get_head_concSection_SectionList(tomMatch460NameNumber_freshVar_10));if (tom_is_fun_sym_concGrammar(tomMatch460NameNumber_freshVar_15)) {{  tom.gom.adt.gom.types.GrammarList  tomMatch460NameNumber_freshVar_16=tomMatch460NameNumber_freshVar_15;{  tom.gom.adt.gom.types.GrammarList  tomMatch460NameNumber_begin_18=tomMatch460NameNumber_freshVar_16;{  tom.gom.adt.gom.types.GrammarList  tomMatch460NameNumber_end_19=tomMatch460NameNumber_freshVar_16;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch460NameNumber_freshVar_17=tomMatch460NameNumber_end_19;if (!(tom_is_empty_concGrammar_GrammarList(tomMatch460NameNumber_freshVar_17))) {if (tom_is_fun_sym_Grammar(tom_get_head_concGrammar_GrammarList(tomMatch460NameNumber_freshVar_17))) {{  tom.gom.adt.gom.types.ProductionList  tomMatch460NameNumber_freshVar_22=tom_get_slot_Grammar_ProductionList(tom_get_head_concGrammar_GrammarList(tomMatch460NameNumber_freshVar_17));{  tom.gom.adt.gom.types.ProductionList  tom_prodList=tomMatch460NameNumber_freshVar_22;{  tom.gom.adt.gom.types.GrammarList  tomMatch460NameNumber_freshVar_20=tom_get_tail_concGrammar_GrammarList(tomMatch460NameNumber_freshVar_17);{  tom.gom.adt.gom.types.SectionList  tomMatch460NameNumber_freshVar_13=tom_get_tail_concSection_SectionList(tomMatch460NameNumber_freshVar_10);{  tom.gom.adt.gom.types.GomModuleList  tomMatch460NameNumber_freshVar_4=tom_get_tail_concGomModule_GomModuleList(tomMatch460NameNumber_freshVar_1);if ( true ) {if (tom_is_sort_ProductionList(tom_prodList)) {{  tom.gom.adt.gom.types.ProductionList  tomMatch461NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ProductionList )tom_prodList);if (tom_is_fun_sym_concProduction(tomMatch461NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ProductionList  tomMatch461NameNumber_freshVar_0=tomMatch461NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ProductionList  tomMatch461NameNumber_begin_2=tomMatch461NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ProductionList  tomMatch461NameNumber_end_3=tomMatch461NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch461NameNumber_freshVar_1=tomMatch461NameNumber_end_3;if (!(tom_is_empty_concProduction_ProductionList(tomMatch461NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.Production  tom_prod=tom_get_head_concProduction_ProductionList(tomMatch461NameNumber_freshVar_1);{  tom.gom.adt.gom.types.ProductionList  tomMatch461NameNumber_freshVar_4=tom_get_tail_concProduction_ProductionList(tomMatch461NameNumber_freshVar_1);if ( true ) {












            /* Process hooks attached to a module */
            if (tom_is_sort_Production(tom_prod)) {{  tom.gom.adt.gom.types.Production  tomMatch462NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Production )tom_prod);if (tom_is_fun_sym_Hook(tomMatch462NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.IdKind  tomMatch462NameNumber_freshVar_0=tom_get_slot_Hook_NameType(tomMatch462NameNumberfreshSubject_1);{  tom.gom.adt.gom.types.HookKind  tomMatch462NameNumber_freshVar_1=tom_get_slot_Hook_HookType(tomMatch462NameNumberfreshSubject_1);{  String  tomMatch462NameNumber_freshVar_2=tom_get_slot_Hook_Name(tomMatch462NameNumberfreshSubject_1);if (tom_is_fun_sym_KindModule(tomMatch462NameNumber_freshVar_0)) {{  String  tom_mname=tomMatch462NameNumber_freshVar_2;if ( true ) {

                //Graph-rewrite rules hooks are only allowed for sorts
                if(tomMatch462NameNumber_freshVar_1.getkind().equals("graphrules")) {
                  getLogger().log(Level.SEVERE,
                      "Grapphrules hooks are authorised only on sorts");

                }
                if(tom_mname.equals(tom_moduleName)) {
                  ModuleDecl mdecl = getModuleDecl(tom_mname,moduleList);
                  HookDeclList newDeclList =
                    makeHookDeclList(tomMatch462NameNumberfreshSubject_1,tom_make_CutModule(mdecl));
                  hookList = tom_append_list_concHookDecl(newDeclList,tom_append_list_concHookDecl(hookList,tom_empty_list_concHookDecl()));
                } else {
                  getLogger().log(Level.SEVERE,
                      "Hooks on module are authorised only on the current module");
                }
              }}}}}}}if (tom_is_fun_sym_Hook(tomMatch462NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.IdKind  tomMatch462NameNumber_freshVar_3=tom_get_slot_Hook_NameType(tomMatch462NameNumberfreshSubject_1);{  String  tomMatch462NameNumber_freshVar_4=tom_get_slot_Hook_Name(tomMatch462NameNumberfreshSubject_1);if (tom_is_fun_sym_KindSort(tomMatch462NameNumber_freshVar_3)) {if ( true ) {

                SortDecl sdecl = getSortDecl(tomMatch462NameNumber_freshVar_4,tom_moduleName,moduleList);
                HookDeclList newDeclList = makeHookDeclList(tomMatch462NameNumberfreshSubject_1,tom_make_CutSort(sdecl));
                hookList = tom_append_list_concHookDecl(newDeclList,tom_append_list_concHookDecl(hookList,tom_empty_list_concHookDecl()));
              }}}}}if (tom_is_fun_sym_Hook(tomMatch462NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.IdKind  tomMatch462NameNumber_freshVar_5=tom_get_slot_Hook_NameType(tomMatch462NameNumberfreshSubject_1);{  tom.gom.adt.gom.types.HookKind  tomMatch462NameNumber_freshVar_6=tom_get_slot_Hook_HookType(tomMatch462NameNumberfreshSubject_1);{  String  tomMatch462NameNumber_freshVar_7=tom_get_slot_Hook_Name(tomMatch462NameNumberfreshSubject_1);if (tom_is_fun_sym_KindOperator(tomMatch462NameNumber_freshVar_5)) {if ( true ) {

                //Graph-rewrite rules hooks are only allowed for sorts
                if(tomMatch462NameNumber_freshVar_6.getkind().equals("graphrules")) {
                  getLogger().log(Level.SEVERE,
                      "Grapphrules hooks are authorised only on sorts");

                }
                OperatorDecl odecl = getOperatorDecl(tomMatch462NameNumber_freshVar_7,tom_moduleName,moduleList);
                HookDeclList newDeclList = makeHookDeclList(tomMatch462NameNumberfreshSubject_1,tom_make_CutOperator(odecl));
                hookList = tom_append_list_concHookDecl(newDeclList,tom_append_list_concHookDecl(hookList,tom_empty_list_concHookDecl()));
              }}}}}}}}

          }}}}}if (tom_is_empty_concProduction_ProductionList(tomMatch461NameNumber_end_3)) {tomMatch461NameNumber_end_3=tomMatch461NameNumber_begin_2;} else {tomMatch461NameNumber_end_3=tom_get_tail_concProduction_ProductionList(tomMatch461NameNumber_end_3);}}} while(!(tom_equal_term_ProductionList(tomMatch461NameNumber_end_3, tomMatch461NameNumber_begin_2)));}}}}}}

        ArrayList examinedOps = new ArrayList();
        if (tom_is_sort_ProductionList(tom_prodList)) {{  tom.gom.adt.gom.types.ProductionList  tomMatch463NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ProductionList )tom_prodList);if (tom_is_fun_sym_concProduction(tomMatch463NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ProductionList  tomMatch463NameNumber_freshVar_0=tomMatch463NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ProductionList  tomMatch463NameNumber_begin_2=tomMatch463NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ProductionList  tomMatch463NameNumber_end_3=tomMatch463NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch463NameNumber_freshVar_1=tomMatch463NameNumber_end_3;if (!(tom_is_empty_concProduction_ProductionList(tomMatch463NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.Production  tom_prod=tom_get_head_concProduction_ProductionList(tomMatch463NameNumber_freshVar_1);{  tom.gom.adt.gom.types.ProductionList  tomMatch463NameNumber_freshVar_4=tom_get_tail_concProduction_ProductionList(tomMatch463NameNumber_freshVar_1);if ( true ) {if (tom_is_sort_Production(tom_prod)) {{  tom.gom.adt.gom.types.Production  tomMatch464NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Production )tom_prod);if (tom_is_sort_HookDeclList(hookList)) {{  tom.gom.adt.gom.types.HookDeclList  tomMatch464NameNumberfreshSubject_2=(( tom.gom.adt.gom.types.HookDeclList )hookList);if (tom_is_fun_sym_Production(tomMatch464NameNumberfreshSubject_1)) {{  String  tomMatch464NameNumber_freshVar_0=tom_get_slot_Production_Name(tomMatch464NameNumberfreshSubject_1);{  tom.gom.adt.gom.types.FieldList  tomMatch464NameNumber_freshVar_1=tom_get_slot_Production_Domain(tomMatch464NameNumberfreshSubject_1);{  tom.gom.adt.gom.types.GomType  tomMatch464NameNumber_freshVar_2=tom_get_slot_Production_Codomain(tomMatch464NameNumberfreshSubject_1);{  tom.gom.adt.gom.types.Option  tomMatch464NameNumber_freshVar_3=tom_get_slot_Production_Option(tomMatch464NameNumberfreshSubject_1);{  String  tom_opName=tomMatch464NameNumber_freshVar_0;if (tom_is_fun_sym_concField(tomMatch464NameNumber_freshVar_1)) {{  tom.gom.adt.gom.types.FieldList  tomMatch464NameNumber_freshVar_4=tomMatch464NameNumber_freshVar_1;if (!(tom_is_empty_concField_FieldList(tomMatch464NameNumber_freshVar_4))) {if (tom_is_fun_sym_StarredField(tom_get_head_concField_FieldList(tomMatch464NameNumber_freshVar_4))) {{  tom.gom.adt.gom.types.GomType  tomMatch464NameNumber_freshVar_6=tom_get_slot_StarredField_FieldType(tom_get_head_concField_FieldList(tomMatch464NameNumber_freshVar_4));{  tom.gom.adt.gom.types.FieldList  tomMatch464NameNumber_freshVar_5=tom_get_tail_concField_FieldList(tomMatch464NameNumber_freshVar_4);if (tom_is_empty_concField_FieldList(tomMatch464NameNumber_freshVar_5)) {if (tom_equal_term_GomType(tomMatch464NameNumber_freshVar_6, tomMatch464NameNumber_freshVar_2)) {{ boolean tomMatch464NameNumber_freshVar_16= false ;if (tom_is_fun_sym_concHookDecl(tomMatch464NameNumberfreshSubject_2)) {{  tom.gom.adt.gom.types.HookDeclList  tomMatch464NameNumber_freshVar_7=tomMatch464NameNumberfreshSubject_2;{  tom.gom.adt.gom.types.HookDeclList  tomMatch464NameNumber_begin_9=tomMatch464NameNumber_freshVar_7;{  tom.gom.adt.gom.types.HookDeclList  tomMatch464NameNumber_end_10=tomMatch464NameNumber_freshVar_7;do {{{  tom.gom.adt.gom.types.HookDeclList  tomMatch464NameNumber_freshVar_8=tomMatch464NameNumber_end_10;if (!(tom_is_empty_concHookDecl_HookDeclList(tomMatch464NameNumber_freshVar_8))) {if (tom_is_fun_sym_MakeHookDecl(tom_get_head_concHookDecl_HookDeclList(tomMatch464NameNumber_freshVar_8))) {{  tom.gom.adt.gom.types.Decl  tomMatch464NameNumber_freshVar_13=tom_get_slot_MakeHookDecl_Pointcut(tom_get_head_concHookDecl_HookDeclList(tomMatch464NameNumber_freshVar_8));if (tom_is_fun_sym_CutOperator(tomMatch464NameNumber_freshVar_13)) {{  tom.gom.adt.gom.types.OperatorDecl  tomMatch464NameNumber_freshVar_14=tom_get_slot_CutOperator_ODecl(tomMatch464NameNumber_freshVar_13);if (tom_is_fun_sym_OperatorDecl(tomMatch464NameNumber_freshVar_14)) {{  String  tomMatch464NameNumber_freshVar_15=tom_get_slot_OperatorDecl_Name(tomMatch464NameNumber_freshVar_14);if (tom_equal_term_String(tomMatch464NameNumber_freshVar_0, tomMatch464NameNumber_freshVar_15)) {{  tom.gom.adt.gom.types.HookDeclList  tomMatch464NameNumber_freshVar_11=tom_get_tail_concHookDecl_HookDeclList(tomMatch464NameNumber_freshVar_8);tomMatch464NameNumber_freshVar_16= true ;}}}}}}}}}}if (tom_is_empty_concHookDecl_HookDeclList(tomMatch464NameNumber_end_10)) {tomMatch464NameNumber_end_10=tomMatch464NameNumber_begin_9;} else {tomMatch464NameNumber_end_10=tom_get_tail_concHookDecl_HookDeclList(tomMatch464NameNumber_end_10);}}} while(!(tom_equal_term_HookDeclList(tomMatch464NameNumber_end_10, tomMatch464NameNumber_begin_9)));}}}}if ((tomMatch464NameNumber_freshVar_16 ==  false )) {if ( true ) {






                  /* generate a FL hook for list-operators without other hook */
                  String emptyCode = "{}";
                  Production hook = tom_make_Hook(tom_make_KindOperator(),tom_opName,tom_make_HookKind("FL"),tom_empty_list_concArg(),emptyCode,tom_empty_list_OptionList());
                  OperatorDecl odecl = getOperatorDecl(tom_opName,tom_moduleName,moduleList);
                  HookDeclList newDeclList = makeHookDeclList(hook,tom_make_CutOperator(odecl));
                  hookList = tom_append_list_concHookDecl(newDeclList,tom_append_list_concHookDecl(hookList,tom_empty_list_concHookDecl()));
                }}}}}}}}}}}}}}}}}if (tom_is_fun_sym_Production(tomMatch464NameNumberfreshSubject_1)) {{  String  tomMatch464NameNumber_freshVar_17=tom_get_slot_Production_Name(tomMatch464NameNumberfreshSubject_1);{  tom.gom.adt.gom.types.FieldList  tomMatch464NameNumber_freshVar_18=tom_get_slot_Production_Domain(tomMatch464NameNumberfreshSubject_1);{  tom.gom.adt.gom.types.GomType  tomMatch464NameNumber_freshVar_19=tom_get_slot_Production_Codomain(tomMatch464NameNumberfreshSubject_1);{  tom.gom.adt.gom.types.Option  tomMatch464NameNumber_freshVar_20=tom_get_slot_Production_Option(tomMatch464NameNumberfreshSubject_1);{  String  tom_opName=tomMatch464NameNumber_freshVar_17;if (tom_is_fun_sym_concField(tomMatch464NameNumber_freshVar_18)) {{  tom.gom.adt.gom.types.FieldList  tomMatch464NameNumber_freshVar_21=tomMatch464NameNumber_freshVar_18;if (!(tom_is_empty_concField_FieldList(tomMatch464NameNumber_freshVar_21))) {if (tom_is_fun_sym_StarredField(tom_get_head_concField_FieldList(tomMatch464NameNumber_freshVar_21))) {{  tom.gom.adt.gom.types.GomType  tomMatch464NameNumber_freshVar_29=tom_get_slot_StarredField_FieldType(tom_get_head_concField_FieldList(tomMatch464NameNumber_freshVar_21));{  tom.gom.adt.gom.types.FieldList  tomMatch464NameNumber_freshVar_22=tom_get_tail_concField_FieldList(tomMatch464NameNumber_freshVar_21);if (tom_is_empty_concField_FieldList(tomMatch464NameNumber_freshVar_22)) {if (tom_equal_term_GomType(tomMatch464NameNumber_freshVar_29, tomMatch464NameNumber_freshVar_19)) {if (tom_is_fun_sym_concHookDecl(tomMatch464NameNumberfreshSubject_2)) {{  tom.gom.adt.gom.types.HookDeclList  tomMatch464NameNumber_freshVar_23=tomMatch464NameNumberfreshSubject_2;{  tom.gom.adt.gom.types.HookDeclList  tomMatch464NameNumber_begin_25=tomMatch464NameNumber_freshVar_23;{  tom.gom.adt.gom.types.HookDeclList  tomMatch464NameNumber_end_26=tomMatch464NameNumber_freshVar_23;do {{{  tom.gom.adt.gom.types.HookDeclList  tomMatch464NameNumber_freshVar_24=tomMatch464NameNumber_end_26;if (!(tom_is_empty_concHookDecl_HookDeclList(tomMatch464NameNumber_freshVar_24))) {if (tom_is_fun_sym_MakeHookDecl(tom_get_head_concHookDecl_HookDeclList(tomMatch464NameNumber_freshVar_24))) {{  tom.gom.adt.gom.types.HookKind  tomMatch464NameNumber_freshVar_30=tom_get_slot_MakeHookDecl_HookType(tom_get_head_concHookDecl_HookDeclList(tomMatch464NameNumber_freshVar_24));if (tom_is_fun_sym_HookKind(tomMatch464NameNumber_freshVar_30)) {{  String  tomMatch464NameNumber_freshVar_31=tom_get_slot_HookKind_kind(tomMatch464NameNumber_freshVar_30);{ boolean tomMatch464NameNumber_freshVar_32= false ;if (tom_equal_term_String("make_insert", tomMatch464NameNumber_freshVar_31)) {tomMatch464NameNumber_freshVar_32= true ;} else {if (tom_equal_term_String("make_empty", tomMatch464NameNumber_freshVar_31)) {tomMatch464NameNumber_freshVar_32= true ;} else {if (tom_equal_term_String("rules", tomMatch464NameNumber_freshVar_31)) {tomMatch464NameNumber_freshVar_32= true ;}}}if ((tomMatch464NameNumber_freshVar_32 ==  true )) {{  tom.gom.adt.gom.types.HookDeclList  tomMatch464NameNumber_freshVar_27=tom_get_tail_concHookDecl_HookDeclList(tomMatch464NameNumber_freshVar_24);if ( true ) {




                  if(! examinedOps.contains(tom_opName)) {
                    examinedOps.add(tom_opName);
                      if (tom_is_sort_HookDeclList(hookList)) {{  tom.gom.adt.gom.types.HookDeclList  tomMatch465NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.HookDeclList )hookList);{ boolean tomMatch465NameNumber_freshVar_11= false ;if (tom_is_fun_sym_concHookDecl(tomMatch465NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.HookDeclList  tomMatch465NameNumber_freshVar_0=tomMatch465NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.HookDeclList  tomMatch465NameNumber_begin_2=tomMatch465NameNumber_freshVar_0;{  tom.gom.adt.gom.types.HookDeclList  tomMatch465NameNumber_end_3=tomMatch465NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.HookDeclList  tomMatch465NameNumber_freshVar_1=tomMatch465NameNumber_end_3;if (!(tom_is_empty_concHookDecl_HookDeclList(tomMatch465NameNumber_freshVar_1))) {if (tom_is_fun_sym_MakeHookDecl(tom_get_head_concHookDecl_HookDeclList(tomMatch465NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.Decl  tomMatch465NameNumber_freshVar_6=tom_get_slot_MakeHookDecl_Pointcut(tom_get_head_concHookDecl_HookDeclList(tomMatch465NameNumber_freshVar_1));{  tom.gom.adt.gom.types.HookKind  tomMatch465NameNumber_freshVar_7=tom_get_slot_MakeHookDecl_HookType(tom_get_head_concHookDecl_HookDeclList(tomMatch465NameNumber_freshVar_1));if (tom_is_fun_sym_CutOperator(tomMatch465NameNumber_freshVar_6)) {{  tom.gom.adt.gom.types.OperatorDecl  tomMatch465NameNumber_freshVar_8=tom_get_slot_CutOperator_ODecl(tomMatch465NameNumber_freshVar_6);if (tom_is_fun_sym_OperatorDecl(tomMatch465NameNumber_freshVar_8)) {{  String  tomMatch465NameNumber_freshVar_9=tom_get_slot_OperatorDecl_Name(tomMatch465NameNumber_freshVar_8);if (tom_is_fun_sym_HookKind(tomMatch465NameNumber_freshVar_7)) {{  String  tomMatch465NameNumber_freshVar_10=tom_get_slot_HookKind_kind(tomMatch465NameNumber_freshVar_7);{ boolean tomMatch465NameNumber_freshVar_12= false ;if (tom_equal_term_String("Free", tomMatch465NameNumber_freshVar_10)) {tomMatch465NameNumber_freshVar_12= true ;} else {if (tom_equal_term_String("FL", tomMatch465NameNumber_freshVar_10)) {tomMatch465NameNumber_freshVar_12= true ;} else {if (tom_equal_term_String("AU", tomMatch465NameNumber_freshVar_10)) {tomMatch465NameNumber_freshVar_12= true ;} else {if (tom_equal_term_String("ACU", tomMatch465NameNumber_freshVar_10)) {tomMatch465NameNumber_freshVar_12= true ;}}}}if ((tomMatch465NameNumber_freshVar_12 ==  true )) {{  tom.gom.adt.gom.types.HookDeclList  tomMatch465NameNumber_freshVar_4=tom_get_tail_concHookDecl_HookDeclList(tomMatch465NameNumber_freshVar_1);tomMatch465NameNumber_freshVar_11= true ;}}}}}}}}}}}}}}if (tom_is_empty_concHookDecl_HookDeclList(tomMatch465NameNumber_end_3)) {tomMatch465NameNumber_end_3=tomMatch465NameNumber_begin_2;} else {tomMatch465NameNumber_end_3=tom_get_tail_concHookDecl_HookDeclList(tomMatch465NameNumber_end_3);}}} while(!(tom_equal_term_HookDeclList(tomMatch465NameNumber_end_3, tomMatch465NameNumber_begin_2)));}}}}if ((tomMatch465NameNumber_freshVar_11 ==  false )) {if ( true ) {


                          /* generate an error to make users specify the theory */
                          getLogger().log(Level.SEVERE,
                              "As you use make_insert,make_empty or rules, specify the associated theory for the variadic operator "+tom_opName);
                        }}}}}

                  }
                }}}}}}}}}}if (tom_is_empty_concHookDecl_HookDeclList(tomMatch464NameNumber_end_26)) {tomMatch464NameNumber_end_26=tomMatch464NameNumber_begin_25;} else {tomMatch464NameNumber_end_26=tom_get_tail_concHookDecl_HookDeclList(tomMatch464NameNumber_end_26);}}} while(!(tom_equal_term_HookDeclList(tomMatch464NameNumber_end_26, tomMatch464NameNumber_begin_25)));}}}}}}}}}}}}}}}}}}}}}}

          }}}}}if (tom_is_empty_concProduction_ProductionList(tomMatch463NameNumber_end_3)) {tomMatch463NameNumber_end_3=tomMatch463NameNumber_begin_2;} else {tomMatch463NameNumber_end_3=tom_get_tail_concProduction_ProductionList(tomMatch463NameNumber_end_3);}}} while(!(tom_equal_term_ProductionList(tomMatch463NameNumber_end_3, tomMatch463NameNumber_begin_2)));}}}}}}

      }}}}}}}}}if (tom_is_empty_concGrammar_GrammarList(tomMatch460NameNumber_end_19)) {tomMatch460NameNumber_end_19=tomMatch460NameNumber_begin_18;} else {tomMatch460NameNumber_end_19=tom_get_tail_concGrammar_GrammarList(tomMatch460NameNumber_end_19);}}} while(!(tom_equal_term_GrammarList(tomMatch460NameNumber_end_19, tomMatch460NameNumber_begin_18)));}}}}}}}}if (tom_is_empty_concSection_SectionList(tomMatch460NameNumber_end_12)) {tomMatch460NameNumber_end_12=tomMatch460NameNumber_begin_11;} else {tomMatch460NameNumber_end_12=tom_get_tail_concSection_SectionList(tomMatch460NameNumber_end_12);}}} while(!(tom_equal_term_SectionList(tomMatch460NameNumber_end_12, tomMatch460NameNumber_begin_11)));}}}}}}}}}}}}if (tom_is_empty_concGomModule_GomModuleList(tomMatch460NameNumber_end_3)) {tomMatch460NameNumber_end_3=tomMatch460NameNumber_begin_2;} else {tomMatch460NameNumber_end_3=tom_get_tail_concGomModule_GomModuleList(tomMatch460NameNumber_end_3);}}} while(!(tom_equal_term_GomModuleList(tomMatch460NameNumber_end_3, tomMatch460NameNumber_begin_2)));}}}}}}

    return hookList;
  }

  private HookDeclList makeHookDeclList(Production hook, Decl mdecl) {
    if (tom_is_sort_Production(hook)) {{  tom.gom.adt.gom.types.Production  tomMatch466NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Production )hook);if (tom_is_fun_sym_Hook(tomMatch466NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.HookKind  tomMatch466NameNumber_freshVar_0=tom_get_slot_Hook_HookType(tomMatch466NameNumberfreshSubject_1);{  String  tomMatch466NameNumber_freshVar_1=tom_get_slot_Hook_Name(tomMatch466NameNumberfreshSubject_1);{  tom.gom.adt.gom.types.ArgList  tomMatch466NameNumber_freshVar_2=tom_get_slot_Hook_Args(tomMatch466NameNumberfreshSubject_1);{  String  tomMatch466NameNumber_freshVar_3=tom_get_slot_Hook_StringCode(tomMatch466NameNumberfreshSubject_1);{  tom.gom.adt.gom.types.HookKind  tom_hkind=tomMatch466NameNumber_freshVar_0;{  String  tom_hName=tomMatch466NameNumber_freshVar_1;{  tom.gom.adt.gom.types.ArgList  tom_hookArgs=tomMatch466NameNumber_freshVar_2;{  String  tom_scode=tomMatch466NameNumber_freshVar_3;if ( true ) {




          HookDeclList newHookList = tom_empty_list_concHookDecl();
          if (tom_is_sort_HookKind(tom_hkind)) {{  tom.gom.adt.gom.types.HookKind  tomMatch467NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.HookKind )tom_hkind);if (tom_is_fun_sym_HookKind(tomMatch467NameNumberfreshSubject_1)) {{  String  tomMatch467NameNumber_freshVar_0=tom_get_slot_HookKind_kind(tomMatch467NameNumberfreshSubject_1);if (tom_equal_term_String("block", tomMatch467NameNumber_freshVar_0)) {if ( true ) {

              newHookList = tom_cons_list_concHookDecl(tom_make_BlockHookDecl(mdecl,tom_make_Code(trimBracket(tom_scode))),tom_empty_list_concHookDecl())
;
            }}}}if (tom_is_fun_sym_HookKind(tomMatch467NameNumberfreshSubject_1)) {{  String  tomMatch467NameNumber_freshVar_1=tom_get_slot_HookKind_kind(tomMatch467NameNumberfreshSubject_1);if (tom_equal_term_String("interface", tomMatch467NameNumber_freshVar_1)) {if ( true ) {

              newHookList = tom_cons_list_concHookDecl(tom_make_InterfaceHookDecl(mdecl,tom_make_Code(trimBracket(tom_scode))),tom_empty_list_concHookDecl())
;
            }}}}if (tom_is_fun_sym_HookKind(tomMatch467NameNumberfreshSubject_1)) {{  String  tomMatch467NameNumber_freshVar_2=tom_get_slot_HookKind_kind(tomMatch467NameNumberfreshSubject_1);if (tom_equal_term_String("import", tomMatch467NameNumber_freshVar_2)) {if ( true ) {

              newHookList = tom_cons_list_concHookDecl(tom_make_ImportHookDecl(mdecl,tom_make_Code(trimBracket(tom_scode))),tom_empty_list_concHookDecl())
;
            }}}}if (tom_is_fun_sym_HookKind(tomMatch467NameNumberfreshSubject_1)) {{  String  tomMatch467NameNumber_freshVar_3=tom_get_slot_HookKind_kind(tomMatch467NameNumberfreshSubject_1);if (tom_equal_term_String("mapping", tomMatch467NameNumber_freshVar_3)) {if ( true ) {

              newHookList = tom_cons_list_concHookDecl(tom_make_MappingHookDecl(mdecl,tom_make_Code(trimBracket(tom_scode))),tom_empty_list_concHookDecl())
;
            }}}}if (tom_is_fun_sym_HookKind(tomMatch467NameNumberfreshSubject_1)) {{  String  tomMatch467NameNumber_freshVar_4=tom_get_slot_HookKind_kind(tomMatch467NameNumberfreshSubject_1);{ boolean tomMatch467NameNumber_freshVar_5= false ;if (tom_equal_term_String("make", tomMatch467NameNumber_freshVar_4)) {tomMatch467NameNumber_freshVar_5= true ;} else {if (tom_equal_term_String("make_insert", tomMatch467NameNumber_freshVar_4)) {tomMatch467NameNumber_freshVar_5= true ;} else {if (tom_equal_term_String("make_empty", tomMatch467NameNumber_freshVar_4)) {tomMatch467NameNumber_freshVar_5= true ;}}}if ((tomMatch467NameNumber_freshVar_5 ==  true )) {if ( true ) {

              SlotList typedArgs = typeArguments(tom_hookArgs,tom_hkind,mdecl);
              if (typedArgs == null) {
                getLogger().log(Level.SEVERE,
                    GomMessage.discardedHook.getMessage(),
                    new Object[]{ (tom_hName) });
                return tom_empty_list_concHookDecl();
              }
              newHookList = tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,typedArgs,tom_make_Code(tom_scode),tomMatch467NameNumberfreshSubject_1),tom_empty_list_concHookDecl())
;
            }}}}}if (tom_is_fun_sym_HookKind(tomMatch467NameNumberfreshSubject_1)) {{  String  tomMatch467NameNumber_freshVar_6=tom_get_slot_HookKind_kind(tomMatch467NameNumberfreshSubject_1);if (tom_equal_term_String("Free", tomMatch467NameNumber_freshVar_6)) {if ( true ) {

              /* Even there is no code associated, we generate a MakeHook to prevent FL hooks to be automatically generated */
              return tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,tom_empty_list_concSlot(),tom_make_Code(""),tom_make_HookKind("Free")),tom_empty_list_concHookDecl())
;
            }}}}if (tom_is_fun_sym_HookKind(tomMatch467NameNumberfreshSubject_1)) {{  String  tomMatch467NameNumber_freshVar_7=tom_get_slot_HookKind_kind(tomMatch467NameNumberfreshSubject_1);if (tom_equal_term_String("FL", tomMatch467NameNumber_freshVar_7)) {if ( true ) {

              /* FL: flattened list */
              return makeFLHookList(tom_hName,mdecl,tom_scode);
            }}}}if (tom_is_fun_sym_HookKind(tomMatch467NameNumberfreshSubject_1)) {{  String  tomMatch467NameNumber_freshVar_8=tom_get_slot_HookKind_kind(tomMatch467NameNumberfreshSubject_1);if (tom_equal_term_String("AU", tomMatch467NameNumber_freshVar_8)) {if ( true ) {

              return makeAUHookList(tom_hName,mdecl,tom_scode);
            }}}}if (tom_is_fun_sym_HookKind(tomMatch467NameNumberfreshSubject_1)) {{  String  tomMatch467NameNumber_freshVar_9=tom_get_slot_HookKind_kind(tomMatch467NameNumberfreshSubject_1);if (tom_equal_term_String("ACU", tomMatch467NameNumber_freshVar_9)) {if ( true ) {

              return makeACUHookList(tom_hName,mdecl,tom_scode);
            }}}}if (tom_is_fun_sym_HookKind(tomMatch467NameNumberfreshSubject_1)) {{  String  tomMatch467NameNumber_freshVar_10=tom_get_slot_HookKind_kind(tomMatch467NameNumberfreshSubject_1);if (tom_equal_term_String("rules", tomMatch467NameNumber_freshVar_10)) {if ( true ) {

              return makeRulesHookList(tom_hName,mdecl,tom_scode);
            }}}}if (tom_is_fun_sym_HookKind(tomMatch467NameNumberfreshSubject_1)) {{  String  tomMatch467NameNumber_freshVar_11=tom_get_slot_HookKind_kind(tomMatch467NameNumberfreshSubject_1);if (tom_equal_term_String("graphrules", tomMatch467NameNumber_freshVar_11)) {if ( true ) {

              //TODO: verify if the option termgraph is on
              if(tom_hookArgs.length()!=2) {
                throw new GomRuntimeException(
                    "GomTypeExpander:graphrules hooks need two parameters: the name of the generated strategy and its default behaviour");
              }
              return makeGraphRulesHookList(tom_hName,tom_hookArgs,mdecl,tom_scode);
            }}}}}}

          if (newHookList == tom_empty_list_concHookDecl()) {
            throw new GomRuntimeException(
                "GomTypeExpander:typeModuleHook unknown HookKind: "+tom_hkind);
          }
          return newHookList;
        }}}}}}}}}}}}

    throw new GomRuntimeException(
        "HookTypeExpander: this hook is not a hook: "+hook);
  }

  /**
   * Finds the ModuleDecl corresponding to a module name.
   *
   * @param mname the module name
   * @param moduleList the queried ModuleList
   * @return the ModuleDecl for mname
   */
  private ModuleDecl getModuleDecl(String mname, ModuleList moduleList) {
    if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch468NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch468NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch468NameNumber_freshVar_0=tomMatch468NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch468NameNumber_begin_2=tomMatch468NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch468NameNumber_end_3=tomMatch468NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch468NameNumber_freshVar_1=tomMatch468NameNumber_end_3;if (!(tom_is_empty_concModule_ModuleList(tomMatch468NameNumber_freshVar_1))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch468NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch468NameNumber_freshVar_6=tom_get_slot_Module_MDecl(tom_get_head_concModule_ModuleList(tomMatch468NameNumber_freshVar_1));if (tom_is_fun_sym_ModuleDecl(tomMatch468NameNumber_freshVar_6)) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch468NameNumber_freshVar_7=tom_get_slot_ModuleDecl_ModuleName(tomMatch468NameNumber_freshVar_6);if (tom_is_fun_sym_GomModuleName(tomMatch468NameNumber_freshVar_7)) {{  String  tomMatch468NameNumber_freshVar_8=tom_get_slot_GomModuleName_Name(tomMatch468NameNumber_freshVar_7);{  tom.gom.adt.gom.types.ModuleList  tomMatch468NameNumber_freshVar_4=tom_get_tail_concModule_ModuleList(tomMatch468NameNumber_freshVar_1);if ( true ) {




        if (tomMatch468NameNumber_freshVar_8.equals(mname)) {
          return tomMatch468NameNumber_freshVar_6;
        }
      }}}}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch468NameNumber_end_3)) {tomMatch468NameNumber_end_3=tomMatch468NameNumber_begin_2;} else {tomMatch468NameNumber_end_3=tom_get_tail_concModule_ModuleList(tomMatch468NameNumber_end_3);}}} while(!(tom_equal_term_ModuleList(tomMatch468NameNumber_end_3, tomMatch468NameNumber_begin_2)));}}}}}}

    throw new GomRuntimeException(
        "HookTypeExpander: Module not found: "+mname);
  }

  /**
   * Finds the SortDecl corresponding to a sort name.
   *
   * @param sname the sort name
   * @param modName the module name that should contain the sort
   * @param moduleList the queried ModuleList
   * @return the SortDecl for sname
   */
  private SortDecl getSortDecl(String sname, String modName, ModuleList moduleList) {
    if ( true ) {{  String  tomMatch469NameNumberfreshSubject_1=(( String )modName);if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch469NameNumberfreshSubject_2=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch469NameNumberfreshSubject_2)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch469NameNumber_freshVar_0=tomMatch469NameNumberfreshSubject_2;{  tom.gom.adt.gom.types.ModuleList  tomMatch469NameNumber_begin_2=tomMatch469NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch469NameNumber_end_3=tomMatch469NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch469NameNumber_freshVar_1=tomMatch469NameNumber_end_3;if (!(tom_is_empty_concModule_ModuleList(tomMatch469NameNumber_freshVar_1))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch469NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch469NameNumber_freshVar_6=tom_get_slot_Module_MDecl(tom_get_head_concModule_ModuleList(tomMatch469NameNumber_freshVar_1));{  tom.gom.adt.gom.types.SortList  tomMatch469NameNumber_freshVar_7=tom_get_slot_Module_Sorts(tom_get_head_concModule_ModuleList(tomMatch469NameNumber_freshVar_1));if (tom_is_fun_sym_ModuleDecl(tomMatch469NameNumber_freshVar_6)) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch469NameNumber_freshVar_8=tom_get_slot_ModuleDecl_ModuleName(tomMatch469NameNumber_freshVar_6);if (tom_is_fun_sym_GomModuleName(tomMatch469NameNumber_freshVar_8)) {{  String  tomMatch469NameNumber_freshVar_9=tom_get_slot_GomModuleName_Name(tomMatch469NameNumber_freshVar_8);if (tom_equal_term_String(tomMatch469NameNumberfreshSubject_1, tomMatch469NameNumber_freshVar_9)) {if (tom_is_fun_sym_concSort(tomMatch469NameNumber_freshVar_7)) {{  tom.gom.adt.gom.types.SortList  tomMatch469NameNumber_freshVar_10=tomMatch469NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch469NameNumber_begin_12=tomMatch469NameNumber_freshVar_10;{  tom.gom.adt.gom.types.SortList  tomMatch469NameNumber_end_13=tomMatch469NameNumber_freshVar_10;do {{{  tom.gom.adt.gom.types.SortList  tomMatch469NameNumber_freshVar_11=tomMatch469NameNumber_end_13;if (!(tom_is_empty_concSort_SortList(tomMatch469NameNumber_freshVar_11))) {if (tom_is_fun_sym_Sort(tom_get_head_concSort_SortList(tomMatch469NameNumber_freshVar_11))) {{  tom.gom.adt.gom.types.SortDecl  tomMatch469NameNumber_freshVar_16=tom_get_slot_Sort_Decl(tom_get_head_concSort_SortList(tomMatch469NameNumber_freshVar_11));if (tom_is_fun_sym_SortDecl(tomMatch469NameNumber_freshVar_16)) {{  String  tomMatch469NameNumber_freshVar_17=tom_get_slot_SortDecl_Name(tomMatch469NameNumber_freshVar_16);{  tom.gom.adt.gom.types.SortList  tomMatch469NameNumber_freshVar_14=tom_get_tail_concSort_SortList(tomMatch469NameNumber_freshVar_11);{  tom.gom.adt.gom.types.ModuleList  tomMatch469NameNumber_freshVar_4=tom_get_tail_concModule_ModuleList(tomMatch469NameNumber_freshVar_1);if ( true ) {






          if (tomMatch469NameNumber_freshVar_17.equals(sname)) {
            return tomMatch469NameNumber_freshVar_16;
          }
        }}}}}}}}}if (tom_is_empty_concSort_SortList(tomMatch469NameNumber_end_13)) {tomMatch469NameNumber_end_13=tomMatch469NameNumber_begin_12;} else {tomMatch469NameNumber_end_13=tom_get_tail_concSort_SortList(tomMatch469NameNumber_end_13);}}} while(!(tom_equal_term_SortList(tomMatch469NameNumber_end_13, tomMatch469NameNumber_begin_12)));}}}}}}}}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch469NameNumber_end_3)) {tomMatch469NameNumber_end_3=tomMatch469NameNumber_begin_2;} else {tomMatch469NameNumber_end_3=tom_get_tail_concModule_ModuleList(tomMatch469NameNumber_end_3);}}} while(!(tom_equal_term_ModuleList(tomMatch469NameNumber_end_3, tomMatch469NameNumber_begin_2)));}}}}}}}}

    throw new GomRuntimeException(
        "HookTypeExpander: Sort not found: "+sname);
  }

  /**
   * Finds the OperatorDecl corresponding to an operator name.
   *
   * @param oname the sort name
   * @param modName the module name that should contain the operator
   * @param moduleList the queried ModuleList
   * @return the OperatorDecl for sname
   */
  private OperatorDecl getOperatorDecl(
      String oname,
      String modName,
      ModuleList moduleList) {
    if ( true ) {{  String  tomMatch470NameNumberfreshSubject_1=(( String )modName);if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch470NameNumberfreshSubject_2=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch470NameNumberfreshSubject_2)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch470NameNumber_freshVar_0=tomMatch470NameNumberfreshSubject_2;{  tom.gom.adt.gom.types.ModuleList  tomMatch470NameNumber_begin_2=tomMatch470NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch470NameNumber_end_3=tomMatch470NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch470NameNumber_freshVar_1=tomMatch470NameNumber_end_3;if (!(tom_is_empty_concModule_ModuleList(tomMatch470NameNumber_freshVar_1))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch470NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch470NameNumber_freshVar_6=tom_get_slot_Module_MDecl(tom_get_head_concModule_ModuleList(tomMatch470NameNumber_freshVar_1));{  tom.gom.adt.gom.types.SortList  tomMatch470NameNumber_freshVar_7=tom_get_slot_Module_Sorts(tom_get_head_concModule_ModuleList(tomMatch470NameNumber_freshVar_1));if (tom_is_fun_sym_ModuleDecl(tomMatch470NameNumber_freshVar_6)) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch470NameNumber_freshVar_8=tom_get_slot_ModuleDecl_ModuleName(tomMatch470NameNumber_freshVar_6);if (tom_is_fun_sym_GomModuleName(tomMatch470NameNumber_freshVar_8)) {{  String  tomMatch470NameNumber_freshVar_9=tom_get_slot_GomModuleName_Name(tomMatch470NameNumber_freshVar_8);if (tom_equal_term_String(tomMatch470NameNumberfreshSubject_1, tomMatch470NameNumber_freshVar_9)) {if (tom_is_fun_sym_concSort(tomMatch470NameNumber_freshVar_7)) {{  tom.gom.adt.gom.types.SortList  tomMatch470NameNumber_freshVar_10=tomMatch470NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch470NameNumber_begin_12=tomMatch470NameNumber_freshVar_10;{  tom.gom.adt.gom.types.SortList  tomMatch470NameNumber_end_13=tomMatch470NameNumber_freshVar_10;do {{{  tom.gom.adt.gom.types.SortList  tomMatch470NameNumber_freshVar_11=tomMatch470NameNumber_end_13;if (!(tom_is_empty_concSort_SortList(tomMatch470NameNumber_freshVar_11))) {if (tom_is_fun_sym_Sort(tom_get_head_concSort_SortList(tomMatch470NameNumber_freshVar_11))) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch470NameNumber_freshVar_16=tom_get_slot_Sort_Operators(tom_get_head_concSort_SortList(tomMatch470NameNumber_freshVar_11));if (tom_is_fun_sym_concOperator(tomMatch470NameNumber_freshVar_16)) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch470NameNumber_freshVar_17=tomMatch470NameNumber_freshVar_16;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch470NameNumber_begin_19=tomMatch470NameNumber_freshVar_17;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch470NameNumber_end_20=tomMatch470NameNumber_freshVar_17;do {{{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch470NameNumber_freshVar_18=tomMatch470NameNumber_end_20;if (!(tom_is_empty_concOperator_OperatorDeclList(tomMatch470NameNumber_freshVar_18))) {if (tom_is_fun_sym_OperatorDecl(tom_get_head_concOperator_OperatorDeclList(tomMatch470NameNumber_freshVar_18))) {{  String  tomMatch470NameNumber_freshVar_23=tom_get_slot_OperatorDecl_Name(tom_get_head_concOperator_OperatorDeclList(tomMatch470NameNumber_freshVar_18));{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch470NameNumber_freshVar_21=tom_get_tail_concOperator_OperatorDeclList(tomMatch470NameNumber_freshVar_18);{  tom.gom.adt.gom.types.SortList  tomMatch470NameNumber_freshVar_14=tom_get_tail_concSort_SortList(tomMatch470NameNumber_freshVar_11);{  tom.gom.adt.gom.types.ModuleList  tomMatch470NameNumber_freshVar_4=tom_get_tail_concModule_ModuleList(tomMatch470NameNumber_freshVar_1);if ( true ) {








        if (tomMatch470NameNumber_freshVar_23.equals(oname)) {
          return tom_get_head_concOperator_OperatorDeclList(tomMatch470NameNumber_freshVar_18);
        }
      }}}}}}}}if (tom_is_empty_concOperator_OperatorDeclList(tomMatch470NameNumber_end_20)) {tomMatch470NameNumber_end_20=tomMatch470NameNumber_begin_19;} else {tomMatch470NameNumber_end_20=tom_get_tail_concOperator_OperatorDeclList(tomMatch470NameNumber_end_20);}}} while(!(tom_equal_term_OperatorDeclList(tomMatch470NameNumber_end_20, tomMatch470NameNumber_begin_19)));}}}}}}}}if (tom_is_empty_concSort_SortList(tomMatch470NameNumber_end_13)) {tomMatch470NameNumber_end_13=tomMatch470NameNumber_begin_12;} else {tomMatch470NameNumber_end_13=tom_get_tail_concSort_SortList(tomMatch470NameNumber_end_13);}}} while(!(tom_equal_term_SortList(tomMatch470NameNumber_end_13, tomMatch470NameNumber_begin_12)));}}}}}}}}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch470NameNumber_end_3)) {tomMatch470NameNumber_end_3=tomMatch470NameNumber_begin_2;} else {tomMatch470NameNumber_end_3=tom_get_tail_concModule_ModuleList(tomMatch470NameNumber_end_3);}}} while(!(tom_equal_term_ModuleList(tomMatch470NameNumber_end_3, tomMatch470NameNumber_begin_2)));}}}}}}}}

    throw new GomRuntimeException(
        "HookTypeExpander: Operator not found: "+oname);
  }

  private SlotList typeArguments(
      ArgList args,
      HookKind kind,
      Decl decl) {
    if (tom_is_sort_HookKind(kind)) {{  tom.gom.adt.gom.types.HookKind  tomMatch471NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.HookKind )kind);if (tom_is_fun_sym_HookKind(tomMatch471NameNumberfreshSubject_1)) {{  String  tomMatch471NameNumber_freshVar_0=tom_get_slot_HookKind_kind(tomMatch471NameNumberfreshSubject_1);if (tom_equal_term_String("make", tomMatch471NameNumber_freshVar_0)) {if ( true ) {

        /*
         * The TypedProduction has to be Slots
         * A KindMakeHook is attached to an operator
         */
        if (tom_is_sort_Decl(decl)) {{  tom.gom.adt.gom.types.Decl  tomMatch472NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Decl )decl);if (tom_is_fun_sym_CutOperator(tomMatch472NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.OperatorDecl  tomMatch472NameNumber_freshVar_0=tom_get_slot_CutOperator_ODecl(tomMatch472NameNumberfreshSubject_1);if (tom_is_fun_sym_OperatorDecl(tomMatch472NameNumber_freshVar_0)) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch472NameNumber_freshVar_1=tom_get_slot_OperatorDecl_Prod(tomMatch472NameNumber_freshVar_0);if (tom_is_fun_sym_Slots(tomMatch472NameNumber_freshVar_1)) {{  tom.gom.adt.gom.types.SlotList  tomMatch472NameNumber_freshVar_2=tom_get_slot_Slots_Slots(tomMatch472NameNumber_freshVar_1);{  tom.gom.adt.gom.types.SlotList  tom_slotList=tomMatch472NameNumber_freshVar_2;if ( true ) {

            /* tests the arguments number */
            if (args.length() != tom_slotList.length()) {
              SlotList slist = tom_slotList;
              getLogger().log(Level.SEVERE,
                  GomMessage.mismatchedMakeArguments.getMessage(),
                  new Object[]{args,slist });
              return null;
            }
            /* Then check the types */
            return recArgSlots(args,tom_slotList);
          }}}}}}}}if ( true ) {

            getLogger().log(Level.SEVERE,
                GomMessage.unsupportedHookAlgebraic.getMessage(),
                new Object[]{ kind });
            return null;
          }}}

      }}}}if (tom_is_fun_sym_HookKind(tomMatch471NameNumberfreshSubject_1)) {{  String  tomMatch471NameNumber_freshVar_1=tom_get_slot_HookKind_kind(tomMatch471NameNumberfreshSubject_1);if (tom_equal_term_String("make_insert", tomMatch471NameNumber_freshVar_1)) {if ( true ) {

        /*
         * The TypedProduction has to be Variadic
         * Then we get the codomain from the operatordecl
         */
        if (tom_is_sort_Decl(decl)) {{  tom.gom.adt.gom.types.Decl  tomMatch473NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Decl )decl);if (tom_is_fun_sym_CutOperator(tomMatch473NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.OperatorDecl  tomMatch473NameNumber_freshVar_0=tom_get_slot_CutOperator_ODecl(tomMatch473NameNumberfreshSubject_1);if (tom_is_fun_sym_OperatorDecl(tomMatch473NameNumber_freshVar_0)) {{  tom.gom.adt.gom.types.SortDecl  tomMatch473NameNumber_freshVar_1=tom_get_slot_OperatorDecl_Sort(tomMatch473NameNumber_freshVar_0);{  tom.gom.adt.gom.types.TypedProduction  tomMatch473NameNumber_freshVar_2=tom_get_slot_OperatorDecl_Prod(tomMatch473NameNumber_freshVar_0);if (tom_is_fun_sym_Variadic(tomMatch473NameNumber_freshVar_2)) {{  tom.gom.adt.gom.types.SortDecl  tomMatch473NameNumber_freshVar_3=tom_get_slot_Variadic_Sort(tomMatch473NameNumber_freshVar_2);if ( true ) {


              // for a make_insert hook, there are two arguments: head, tail
              if (tom_is_sort_ArgList(args)) {{  tom.gom.adt.gom.types.ArgList  tomMatch474NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ArgList )args);if (tom_is_fun_sym_concArg(tomMatch474NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ArgList  tomMatch474NameNumber_freshVar_0=tomMatch474NameNumberfreshSubject_1;if (!(tom_is_empty_concArg_ArgList(tomMatch474NameNumber_freshVar_0))) {if (tom_is_fun_sym_Arg(tom_get_head_concArg_ArgList(tomMatch474NameNumber_freshVar_0))) {{  String  tomMatch474NameNumber_freshVar_3=tom_get_slot_Arg_Name(tom_get_head_concArg_ArgList(tomMatch474NameNumber_freshVar_0));{  tom.gom.adt.gom.types.ArgList  tomMatch474NameNumber_freshVar_1=tom_get_tail_concArg_ArgList(tomMatch474NameNumber_freshVar_0);if (!(tom_is_empty_concArg_ArgList(tomMatch474NameNumber_freshVar_1))) {if (tom_is_fun_sym_Arg(tom_get_head_concArg_ArgList(tomMatch474NameNumber_freshVar_1))) {{  String  tomMatch474NameNumber_freshVar_4=tom_get_slot_Arg_Name(tom_get_head_concArg_ArgList(tomMatch474NameNumber_freshVar_1));{  tom.gom.adt.gom.types.ArgList  tomMatch474NameNumber_freshVar_2=tom_get_tail_concArg_ArgList(tomMatch474NameNumber_freshVar_1);if (tom_is_empty_concArg_ArgList(tomMatch474NameNumber_freshVar_2)) {if ( true ) {

                  return tom_cons_list_concSlot(tom_make_Slot(tomMatch474NameNumber_freshVar_3,tomMatch473NameNumber_freshVar_3),tom_cons_list_concSlot(tom_make_Slot(tomMatch474NameNumber_freshVar_4,tomMatch473NameNumber_freshVar_1),tom_empty_list_concSlot()));
                }}}}}}}}}}}}if ( true ) {

                  getLogger().log(Level.SEVERE,
                      GomMessage.badHookArguments.getMessage(),
                      new Object[]{ (tomMatch471NameNumber_freshVar_1), new Integer(args.length())});
                  return null;
                }}}

            }}}}}}}}if ( true ) {

            getLogger().log(Level.SEVERE,
                GomMessage.unsupportedHookVariadic.getMessage(),
                new Object[]{ kind });
            return null;
          }}}

      }}}}if (tom_is_fun_sym_HookKind(tomMatch471NameNumberfreshSubject_1)) {{  String  tomMatch471NameNumber_freshVar_2=tom_get_slot_HookKind_kind(tomMatch471NameNumberfreshSubject_1);if (tom_equal_term_String("make_empty", tomMatch471NameNumber_freshVar_2)) {if ( true ) {

        /*
         * The TypedProduction has to be Variadic
         * Then we get the codomain from the operatordecl
         */
        if (tom_is_sort_Decl(decl)) {{  tom.gom.adt.gom.types.Decl  tomMatch475NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Decl )decl);if (tom_is_fun_sym_CutOperator(tomMatch475NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.OperatorDecl  tomMatch475NameNumber_freshVar_0=tom_get_slot_CutOperator_ODecl(tomMatch475NameNumberfreshSubject_1);if (tom_is_fun_sym_OperatorDecl(tomMatch475NameNumber_freshVar_0)) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch475NameNumber_freshVar_1=tom_get_slot_OperatorDecl_Prod(tomMatch475NameNumber_freshVar_0);if (tom_is_fun_sym_Variadic(tomMatch475NameNumber_freshVar_1)) {if ( true ) {


              // for a make_empty hook, there is no argument
              if (tom_is_sort_ArgList(args)) {{  tom.gom.adt.gom.types.ArgList  tomMatch476NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ArgList )args);if (tom_is_fun_sym_concArg(tomMatch476NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ArgList  tomMatch476NameNumber_freshVar_0=tomMatch476NameNumberfreshSubject_1;if (tom_is_empty_concArg_ArgList(tomMatch476NameNumber_freshVar_0)) {if ( true ) {
 return tom_empty_list_concSlot(); }}}}if ( true ) {

                  getLogger().log(Level.SEVERE,
                      GomMessage.badHookArguments.getMessage(),
                      new Object[]{ (tomMatch471NameNumber_freshVar_2), new Integer(args.length())});
                  return null;
                }}}

            }}}}}}if ( true ) {

            getLogger().log(Level.SEVERE,
                GomMessage.unsupportedHookVariadic.getMessage(),
                new Object[]{ kind });
            return null;
          }}}

      }}}}}}

    throw new GomRuntimeException("Hook kind \""+kind+"\" not supported");
  }

  private SlotList recArgSlots(ArgList args, SlotList slots) {
    if (tom_is_sort_ArgList(args)) {{  tom.gom.adt.gom.types.ArgList  tomMatch477NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ArgList )args);if (tom_is_sort_SlotList(slots)) {{  tom.gom.adt.gom.types.SlotList  tomMatch477NameNumberfreshSubject_2=(( tom.gom.adt.gom.types.SlotList )slots);if (tom_is_fun_sym_concArg(tomMatch477NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ArgList  tomMatch477NameNumber_freshVar_0=tomMatch477NameNumberfreshSubject_1;if (tom_is_empty_concArg_ArgList(tomMatch477NameNumber_freshVar_0)) {if (tom_is_fun_sym_concSlot(tomMatch477NameNumberfreshSubject_2)) {{  tom.gom.adt.gom.types.SlotList  tomMatch477NameNumber_freshVar_1=tomMatch477NameNumberfreshSubject_2;if (tom_is_empty_concSlot_SlotList(tomMatch477NameNumber_freshVar_1)) {if ( true ) {

        return tom_empty_list_concSlot();
      }}}}}}}if (tom_is_fun_sym_concArg(tomMatch477NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ArgList  tomMatch477NameNumber_freshVar_2=tomMatch477NameNumberfreshSubject_1;if (!(tom_is_empty_concArg_ArgList(tomMatch477NameNumber_freshVar_2))) {if (tom_is_fun_sym_Arg(tom_get_head_concArg_ArgList(tomMatch477NameNumber_freshVar_2))) {{  String  tomMatch477NameNumber_freshVar_10=tom_get_slot_Arg_Name(tom_get_head_concArg_ArgList(tomMatch477NameNumber_freshVar_2));{  tom.gom.adt.gom.types.ArgList  tomMatch477NameNumber_freshVar_3=tom_get_tail_concArg_ArgList(tomMatch477NameNumber_freshVar_2);if (tom_is_fun_sym_concSlot(tomMatch477NameNumberfreshSubject_2)) {{  tom.gom.adt.gom.types.SlotList  tomMatch477NameNumber_freshVar_5=tomMatch477NameNumberfreshSubject_2;if (!(tom_is_empty_concSlot_SlotList(tomMatch477NameNumber_freshVar_5))) {if (tom_is_fun_sym_Slot(tom_get_head_concSlot_SlotList(tomMatch477NameNumber_freshVar_5))) {{  tom.gom.adt.gom.types.SortDecl  tomMatch477NameNumber_freshVar_11=tom_get_slot_Slot_Sort(tom_get_head_concSlot_SlotList(tomMatch477NameNumber_freshVar_5));{  tom.gom.adt.gom.types.SlotList  tomMatch477NameNumber_freshVar_6=tom_get_tail_concSlot_SlotList(tomMatch477NameNumber_freshVar_5);if ( true ) {

        SlotList tail = recArgSlots(tomMatch477NameNumber_freshVar_3,tomMatch477NameNumber_freshVar_6);
        return tom_cons_list_concSlot(tom_make_Slot(tomMatch477NameNumber_freshVar_10,tomMatch477NameNumber_freshVar_11),tom_append_list_concSlot(tail,tom_empty_list_concSlot()));
      }}}}}}}}}}}}}}}}}

    throw new GomRuntimeException("GomTypeExpander:recArgSlots failed "+args+" "+slots);
  }

  private String trimBracket(String stringCode) {
    int start = stringCode.indexOf('{')+1;
    int end = stringCode.lastIndexOf('}');
    return stringCode.substring(start,end).trim();
  }

  private SortDecl getSortAndCheck(Decl mdecl) {
    if (tom_is_sort_Decl(mdecl)) {{  tom.gom.adt.gom.types.Decl  tomMatch478NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Decl )mdecl);if (tom_is_fun_sym_CutOperator(tomMatch478NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.OperatorDecl  tomMatch478NameNumber_freshVar_0=tom_get_slot_CutOperator_ODecl(tomMatch478NameNumberfreshSubject_1);if (tom_is_fun_sym_OperatorDecl(tomMatch478NameNumber_freshVar_0)) {{  tom.gom.adt.gom.types.SortDecl  tomMatch478NameNumber_freshVar_1=tom_get_slot_OperatorDecl_Sort(tomMatch478NameNumber_freshVar_0);{  tom.gom.adt.gom.types.TypedProduction  tomMatch478NameNumber_freshVar_2=tom_get_slot_OperatorDecl_Prod(tomMatch478NameNumber_freshVar_0);if (tom_is_fun_sym_Variadic(tomMatch478NameNumber_freshVar_2)) {{  tom.gom.adt.gom.types.SortDecl  tomMatch478NameNumber_freshVar_3=tom_get_slot_Variadic_Sort(tomMatch478NameNumber_freshVar_2);{  tom.gom.adt.gom.types.SortDecl  tom_sdecl=tomMatch478NameNumber_freshVar_3;if ( true ) {

        if (tomMatch478NameNumber_freshVar_1== tom_sdecl) {
          return tom_sdecl;
        } else {
          getLogger().log(Level.SEVERE,
              "Different domain and codomain");
        }
      }}}}}}}}}if ( true ) {

        getLogger().log(Level.SEVERE,
            "FL/AU/ACU hook can only be used on a variadic operator");
      }}}

    return null;
  }

  /*
   * generate hooks for normalizing rules 
   */
  private HookDeclList makeRulesHookList(String opName, Decl mdecl, String scode) {
    RuleExpander rexpander = new RuleExpander(moduleList);
    return rexpander.expandRules(trimBracket(scode));
  }

  /*
   * generate hooks for term-graph rules 
   */
  private HookDeclList makeGraphRulesHookList(String sortname, ArgList args, Decl sdecl, String scode) {
    if (tom_is_sort_ArgList(args)) {{  tom.gom.adt.gom.types.ArgList  tomMatch479NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ArgList )args);if (tom_is_fun_sym_concArg(tomMatch479NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ArgList  tomMatch479NameNumber_freshVar_0=tomMatch479NameNumberfreshSubject_1;if (!(tom_is_empty_concArg_ArgList(tomMatch479NameNumber_freshVar_0))) {if (tom_is_fun_sym_Arg(tom_get_head_concArg_ArgList(tomMatch479NameNumber_freshVar_0))) {{  String  tomMatch479NameNumber_freshVar_3=tom_get_slot_Arg_Name(tom_get_head_concArg_ArgList(tomMatch479NameNumber_freshVar_0));{  String  tom_stratname=tomMatch479NameNumber_freshVar_3;{  tom.gom.adt.gom.types.ArgList  tomMatch479NameNumber_freshVar_1=tom_get_tail_concArg_ArgList(tomMatch479NameNumber_freshVar_0);if (!(tom_is_empty_concArg_ArgList(tomMatch479NameNumber_freshVar_1))) {if (tom_is_fun_sym_Arg(tom_get_head_concArg_ArgList(tomMatch479NameNumber_freshVar_1))) {{  String  tomMatch479NameNumber_freshVar_4=tom_get_slot_Arg_Name(tom_get_head_concArg_ArgList(tomMatch479NameNumber_freshVar_1));{  String  tom_defaultstrat=tomMatch479NameNumber_freshVar_4;{  tom.gom.adt.gom.types.ArgList  tomMatch479NameNumber_freshVar_2=tom_get_tail_concArg_ArgList(tomMatch479NameNumber_freshVar_1);if (tom_is_empty_concArg_ArgList(tomMatch479NameNumber_freshVar_2)) {if ( true ) {

        if (!tom_defaultstrat.equals("Fail") && !tom_defaultstrat.equals("Identity")) {
          getLogger().log(Level.SEVERE,
              "In graphrules hooks, the default strategies authorized are only Fail and Identity");
        }
        GraphRuleExpander rexpander = new GraphRuleExpander(moduleList);
        if (sortsWithGraphrules.contains(sdecl)) {
          return rexpander.expandGraphRules(sortname,tom_stratname,tom_defaultstrat,trimBracket(scode),sdecl);
        } else {
          sortsWithGraphrules.add(sdecl);
          return rexpander.expandFirstGraphRules(sortname,tom_stratname,tom_defaultstrat,trimBracket(scode),sdecl);
        }
      }}}}}}}}}}}}}}}}

    return null;
  }

  /*
   * generate hooks for associative-commutative with neutral element
   */
  private HookDeclList makeACUHookList(String opName, Decl mdecl, String scode) {
    /* Can only be applied to a variadic operator, whose domain and codomain
     * are equals */
    SortDecl domain = getSortAndCheck(mdecl);
    if (null == domain)
      return tom_empty_list_concHookDecl();

    /* start with AU normalization */
    HookDeclList acHooks = makeAUHookList(opName, mdecl, scode);
    /*
     * add the following hooks:
     * if(tail.isConc) {
     *   if(head < tail.head) {
     *     tmp = head
     *     head = tail.head
     *     tail = cons(tmp,tail.tail)
     *   }
     * } else if(head < tail) {
     *   tmp = head
     *   head = tail
     *   tail = tmp
     * }
     * // in all cases:
     * return makeReal(head,tail)
     */
    acHooks = tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,tom_cons_list_concSlot(tom_make_Slot("head",domain),tom_cons_list_concSlot(tom_make_Slot("tail",domain),tom_empty_list_concSlot())),tom_cons_list_CodeList(tom_make_Code("if ("),tom_cons_list_CodeList(tom_make_IsCons("tail",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(") {\n"),tom_cons_list_CodeList(tom_make_Code("  if (0 < "),tom_cons_list_CodeList(tom_make_Compare(tom_make_Code("head"),tom_make_Code("tail.getHead" + opName+ "()")),tom_cons_list_CodeList(tom_make_Code(") {\n"),tom_cons_list_CodeList(tom_make_Code("    "),tom_cons_list_CodeList(tom_make_FullSortClass(domain),tom_cons_list_CodeList(tom_make_Code(" tmpHd = head;\n"),tom_cons_list_CodeList(tom_make_Code("    head = tail.getHead" + opName+ "();\n"),tom_cons_list_CodeList(tom_make_Code("    tail = `" + opName+ "(tmpHd,tail.getTail" + opName+ "());\n"),tom_cons_list_CodeList(tom_make_Code("  }\n"),tom_cons_list_CodeList(tom_make_Code("} else {\n"),tom_cons_list_CodeList(tom_make_Code("  if (0 < "),tom_cons_list_CodeList(tom_make_Compare(tom_make_Code("head"),tom_make_Code("tail")),tom_cons_list_CodeList(tom_make_Code(") {\n"),tom_cons_list_CodeList(tom_make_Code("    "),tom_cons_list_CodeList(tom_make_FullSortClass(domain),tom_cons_list_CodeList(tom_make_Code(" tmpHd = head;\n"),tom_cons_list_CodeList(tom_make_Code("    head = tail;\n"),tom_cons_list_CodeList(tom_make_Code("    tail = tmpHd;\n"),tom_cons_list_CodeList(tom_make_Code("  }\n"),tom_cons_list_CodeList(tom_make_Code("}\n")
            ,tom_empty_list_CodeList()))))))))))))))))))))))),tom_make_HookKind("ACU")),tom_append_list_concHookDecl(acHooks,tom_empty_list_concHookDecl()))
























;
    return acHooks;
  }

  /*
   * generate hooks for associative with neutral element
   */
  private HookDeclList makeAUHookList(String opName, Decl mdecl, String scode) {
    /* Can only be applied to a variadic operator, whose domain and codomain
     * are equals */
    SortDecl domain = getSortAndCheck(mdecl);
    if (null == domain)
      return tom_empty_list_concHookDecl();

    HookDeclList auHooks = tom_empty_list_concHookDecl();
    String userNeutral = trimBracket(scode);
    if(userNeutral.length() > 0) {
      /* The hook body is the name of the neutral element */
      auHooks = tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,tom_empty_list_concSlot(),tom_make_Code("return "+userNeutral+";"),tom_make_HookKind("AU")),tom_append_list_concHookDecl(auHooks,tom_empty_list_concHookDecl()))

;
      /* 
       * Remove neutral:
       * if(<head> == makeNeutral) { return <tail>; }
       * if(<tail> == makeNeutral) { return <head>; }
       */
      auHooks = tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,tom_cons_list_concSlot(tom_make_Slot("head",domain),tom_cons_list_concSlot(tom_make_Slot("tail",domain),tom_empty_list_concSlot())),tom_cons_list_CodeList(tom_make_Code("if (head == "+userNeutral+") { return tail; }\n"),tom_cons_list_CodeList(tom_make_Code("if (tail ==  "+userNeutral+") { return head; }\n")
              ,tom_empty_list_CodeList())),tom_make_HookKind("AU")),tom_append_list_concHookDecl(auHooks,tom_empty_list_concHookDecl()))







;
    }
    /* getODecl call is safe here, since mdecl was checked by getSortAndCheck */
    /*
     * Remove neutral and flatten:
     * if(<head>.isEmpty<conc>()) { return <tail>; }
     * if(<tail>.isEmpty<conc>()) { return <head>; }
     * if(<head>.isCons<conc>()) { return make(head.head,make(head.tail,tail)); }
     */
    auHooks = tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,tom_cons_list_concSlot(tom_make_Slot("head",domain),tom_cons_list_concSlot(tom_make_Slot("tail",domain),tom_empty_list_concSlot())),tom_cons_list_CodeList(tom_make_Code("if ("),tom_cons_list_CodeList(tom_make_IsEmpty("head",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(") { return tail; }\n"),tom_cons_list_CodeList(tom_make_Code("if ("),tom_cons_list_CodeList(tom_make_IsEmpty("tail",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(") { return head; }\n"),tom_cons_list_CodeList(tom_make_Code("if ("),tom_cons_list_CodeList(tom_make_IsCons("head",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(") { return make(head.getHead" + opName+ "(),make(head.getTail" + opName+ "(),tail)); }\n")
            ,tom_empty_list_CodeList()))))))))),tom_make_HookKind("AU")),tom_append_list_concHookDecl(auHooks,tom_empty_list_concHookDecl()))














;

    return auHooks;
  }

  /*
   * generate hooks for flattened lists (with empty list as last element)
   */
  private HookDeclList makeFLHookList(String opName, Decl mdecl, String scode) {
    /* Can only be applied to a variadic operator, whose domain and codomain
     * are equals */
    SortDecl domain = getSortAndCheck(mdecl);
    if(null == domain) {
      return tom_empty_list_concHookDecl();
    }

    String userNeutral = trimBracket(scode);
    if(userNeutral.length() > 0) {
      getLogger().log(Level.SEVERE,
          "FL hook does not allow the definition of a neutral element");
    }

    HookDeclList hooks = tom_empty_list_concHookDecl();
    /* getODecl call is safe here, since mdecl was checked by getSortAndCheck */
    /*
     * Remove neutral and flatten:
     * if(<head>.isEmpty<conc>()) { return <tail>; }
     * if(<head>.isCons<conc>()) { return make(head.head,make(head.tail,tail)); }
     * if(!<tail>.isCons<conc>() && !<tail>.isEmpty<conc>()) { return make(<tail>,<empty>); }
     */
    hooks = tom_cons_list_concHookDecl(tom_make_MakeHookDecl(mdecl,tom_cons_list_concSlot(tom_make_Slot("head",domain),tom_cons_list_concSlot(tom_make_Slot("tail",domain),tom_empty_list_concSlot())),tom_cons_list_CodeList(tom_make_Code("if ("),tom_cons_list_CodeList(tom_make_IsEmpty("head",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(") { return tail; }\n"),tom_cons_list_CodeList(tom_make_Code("if ("),tom_cons_list_CodeList(tom_make_IsCons("head",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(") { return make(head.getHead" + opName+ "(),make(head.getTail" + opName+ "(),tail)); }\n"),tom_cons_list_CodeList(tom_make_Code("if (!"),tom_cons_list_CodeList(tom_make_IsCons("tail",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(" && !"),tom_cons_list_CodeList(tom_make_IsEmpty("tail",mdecl.getODecl()),tom_cons_list_CodeList(tom_make_Code(") { return make(head,make(tail,Empty" + opName+ ".make())); }\n")
            ,tom_empty_list_CodeList()))))))))))),tom_make_HookKind("FL")),tom_append_list_concHookDecl(hooks,tom_empty_list_concHookDecl()))
















;

    return hooks;
  }

  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }
}

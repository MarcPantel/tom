/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * GOM
 *
 * Copyright (C) 2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.expander.rule;

import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.tree.Tree;
import tom.gom.adt.rule.RuleTree;
import tom.gom.adt.rule.RuleAdaptor;
import java.util.logging.Level;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;
import java.util.logging.Logger;
import tom.gom.adt.gom.types.*;
import tom.gom.adt.rule.types.*;
import tom.gom.tools.error.GomRuntimeException;

public class RuleExpander {

  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  /* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) { return  (t1==t2) ;}private static boolean tom_is_sort_int(int t) { return  true ;} private static boolean tom_equal_term_Code(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Code(Object t) { return  t instanceof tom.gom.adt.code.types.Code ;}private static boolean tom_equal_term_Slot(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Slot(Object t) { return  t instanceof tom.gom.adt.gom.types.Slot ;}private static boolean tom_equal_term_TypedProduction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TypedProduction(Object t) { return  t instanceof tom.gom.adt.gom.types.TypedProduction ;}private static boolean tom_equal_term_HookDeclList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_HookDeclList(Object t) { return  t instanceof tom.gom.adt.gom.types.HookDeclList ;}private static boolean tom_equal_term_OperatorDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OperatorDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.OperatorDecl ;}private static boolean tom_equal_term_Decl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Decl(Object t) { return  t instanceof tom.gom.adt.gom.types.Decl ;}private static boolean tom_equal_term_SortDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SortDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.SortDecl ;}private static boolean tom_equal_term_HookDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_HookDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.HookDecl ;}private static boolean tom_equal_term_SlotList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotList(Object t) { return  t instanceof tom.gom.adt.gom.types.SlotList ;}private static boolean tom_equal_term_ModuleDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ModuleDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.ModuleDecl ;}private static boolean tom_equal_term_HookKind(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_HookKind(Object t) { return  t instanceof tom.gom.adt.gom.types.HookKind ;}private static  tom.gom.adt.code.types.Code  tom_make_Code( String  t0) { return  tom.gom.adt.code.types.code.Code.make(t0) ; }private static boolean tom_is_fun_sym_Slot( tom.gom.adt.gom.types.Slot  t) { return  (t instanceof tom.gom.adt.gom.types.slot.Slot) ;}private static  tom.gom.adt.gom.types.Slot  tom_make_Slot( String  t0,  tom.gom.adt.gom.types.SortDecl  t1) { return  tom.gom.adt.gom.types.slot.Slot.make(t0, t1) ; }private static  String  tom_get_slot_Slot_Name( tom.gom.adt.gom.types.Slot  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Slot_Sort( tom.gom.adt.gom.types.Slot  t) { return  t.getSort() ;}private static boolean tom_is_fun_sym_Slots( tom.gom.adt.gom.types.TypedProduction  t) { return  (t instanceof tom.gom.adt.gom.types.typedproduction.Slots) ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_slot_Slots_Slots( tom.gom.adt.gom.types.TypedProduction  t) { return  t.getSlots() ;}private static boolean tom_is_fun_sym_Variadic( tom.gom.adt.gom.types.TypedProduction  t) { return  (t instanceof tom.gom.adt.gom.types.typedproduction.Variadic) ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Variadic_Sort( tom.gom.adt.gom.types.TypedProduction  t) { return  t.getSort() ;}private static boolean tom_is_fun_sym_OperatorDecl( tom.gom.adt.gom.types.OperatorDecl  t) { return  (t instanceof tom.gom.adt.gom.types.operatordecl.OperatorDecl) ;}private static  String  tom_get_slot_OperatorDecl_Name( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_OperatorDecl_Sort( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getSort() ;}private static  tom.gom.adt.gom.types.TypedProduction  tom_get_slot_OperatorDecl_Prod( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getProd() ;}private static  tom.gom.adt.gom.types.Decl  tom_make_CutOperator( tom.gom.adt.gom.types.OperatorDecl  t0) { return  tom.gom.adt.gom.types.decl.CutOperator.make(t0) ; }private static boolean tom_is_fun_sym_SortDecl( tom.gom.adt.gom.types.SortDecl  t) { return  (t instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ;}private static  String  tom_get_slot_SortDecl_Name( tom.gom.adt.gom.types.SortDecl  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_SortDecl_ModuleDecl( tom.gom.adt.gom.types.SortDecl  t) { return  t.getModuleDecl() ;}private static boolean tom_is_fun_sym_BuiltinSortDecl( tom.gom.adt.gom.types.SortDecl  t) { return  (t instanceof tom.gom.adt.gom.types.sortdecl.BuiltinSortDecl) ;}private static  String  tom_get_slot_BuiltinSortDecl_Name( tom.gom.adt.gom.types.SortDecl  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.HookDecl  tom_make_MakeHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.gom.types.SlotList  t1,  tom.gom.adt.code.types.Code  t2,  tom.gom.adt.gom.types.HookKind  t3) { return  tom.gom.adt.gom.types.hookdecl.MakeHookDecl.make(t0, t1, t2, t3) ; }private static  tom.gom.adt.gom.types.HookKind  tom_make_HookKind( String  t0) { return  tom.gom.adt.gom.types.hookkind.HookKind.make(t0) ; }private static boolean tom_is_fun_sym_concHookDecl( tom.gom.adt.gom.types.HookDeclList  t) { return  ((t instanceof tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl) || (t instanceof tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl)) ;}private static  tom.gom.adt.gom.types.HookDeclList  tom_empty_list_concHookDecl() { return  tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl.make() ; }private static  tom.gom.adt.gom.types.HookDeclList  tom_cons_list_concHookDecl( tom.gom.adt.gom.types.HookDecl  e,  tom.gom.adt.gom.types.HookDeclList  l) { return  tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make(e,l) ; }private static  tom.gom.adt.gom.types.HookDecl  tom_get_head_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) { return  l.getHeadconcHookDecl() ;}private static  tom.gom.adt.gom.types.HookDeclList  tom_get_tail_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) { return  l.getTailconcHookDecl() ;}private static boolean tom_is_empty_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) { return  l.isEmptyconcHookDecl() ;}   private static   tom.gom.adt.gom.types.HookDeclList  tom_append_list_concHookDecl( tom.gom.adt.gom.types.HookDeclList l1,  tom.gom.adt.gom.types.HookDeclList  l2) {     if( l1.isEmptyconcHookDecl() ) {       return l2;     } else if( l2.isEmptyconcHookDecl() ) {       return l1;     } else if(  l1.getTailconcHookDecl() .isEmptyconcHookDecl() ) {       return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl( l1.getHeadconcHookDecl() ,l2);     } else {       return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl( l1.getHeadconcHookDecl() ,tom_append_list_concHookDecl( l1.getTailconcHookDecl() ,l2));     }   }   private static   tom.gom.adt.gom.types.HookDeclList  tom_get_slice_concHookDecl( tom.gom.adt.gom.types.HookDeclList  begin,  tom.gom.adt.gom.types.HookDeclList  end, tom.gom.adt.gom.types.HookDeclList  tail) {     if(tom_equal_term_HookDeclList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl( begin.getHeadconcHookDecl() ,( tom.gom.adt.gom.types.HookDeclList )tom_get_slice_concHookDecl( begin.getTailconcHookDecl() ,end,tail));     }   }   private static boolean tom_is_fun_sym_concSlot( tom.gom.adt.gom.types.SlotList  t) { return  ((t instanceof tom.gom.adt.gom.types.slotlist.ConsconcSlot) || (t instanceof tom.gom.adt.gom.types.slotlist.EmptyconcSlot)) ;}private static  tom.gom.adt.gom.types.SlotList  tom_empty_list_concSlot() { return  tom.gom.adt.gom.types.slotlist.EmptyconcSlot.make() ; }private static  tom.gom.adt.gom.types.SlotList  tom_cons_list_concSlot( tom.gom.adt.gom.types.Slot  e,  tom.gom.adt.gom.types.SlotList  l) { return  tom.gom.adt.gom.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.gom.adt.gom.types.Slot  tom_get_head_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.getHeadconcSlot() ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_tail_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.getTailconcSlot() ;}private static boolean tom_is_empty_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.isEmptyconcSlot() ;}   private static   tom.gom.adt.gom.types.SlotList  tom_append_list_concSlot( tom.gom.adt.gom.types.SlotList l1,  tom.gom.adt.gom.types.SlotList  l2) {     if( l1.isEmptyconcSlot() ) {       return l2;     } else if( l2.isEmptyconcSlot() ) {       return l1;     } else if(  l1.getTailconcSlot() .isEmptyconcSlot() ) {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot( l1.getHeadconcSlot() ,l2);     } else {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot( l1.getHeadconcSlot() ,tom_append_list_concSlot( l1.getTailconcSlot() ,l2));     }   }   private static   tom.gom.adt.gom.types.SlotList  tom_get_slice_concSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end, tom.gom.adt.gom.types.SlotList  tail) {     if(tom_equal_term_SlotList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot( begin.getHeadconcSlot() ,( tom.gom.adt.gom.types.SlotList )tom_get_slice_concSlot( begin.getTailconcSlot() ,end,tail));     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_Rule(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Rule(Object t) { return  t instanceof tom.gom.adt.rule.types.Rule ;}private static boolean tom_equal_term_RuleList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_RuleList(Object t) { return  t instanceof tom.gom.adt.rule.types.RuleList ;}private static boolean tom_equal_term_TermList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TermList(Object t) { return  t instanceof tom.gom.adt.rule.types.TermList ;}private static boolean tom_equal_term_Condition(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Condition(Object t) { return  t instanceof tom.gom.adt.rule.types.Condition ;}private static boolean tom_equal_term_Term(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Term(Object t) { return  t instanceof tom.gom.adt.rule.types.Term ;}private static boolean tom_is_fun_sym_Rule( tom.gom.adt.rule.types.Rule  t) { return  (t instanceof tom.gom.adt.rule.types.rule.Rule) ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_Rule_lhs( tom.gom.adt.rule.types.Rule  t) { return  t.getlhs() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_Rule_rhs( tom.gom.adt.rule.types.Rule  t) { return  t.getrhs() ;}private static boolean tom_is_fun_sym_ConditionalRule( tom.gom.adt.rule.types.Rule  t) { return  (t instanceof tom.gom.adt.rule.types.rule.ConditionalRule) ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_ConditionalRule_lhs( tom.gom.adt.rule.types.Rule  t) { return  t.getlhs() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_ConditionalRule_rhs( tom.gom.adt.rule.types.Rule  t) { return  t.getrhs() ;}private static  tom.gom.adt.rule.types.Condition  tom_get_slot_ConditionalRule_cond( tom.gom.adt.rule.types.Rule  t) { return  t.getcond() ;}private static boolean tom_is_fun_sym_CondTerm( tom.gom.adt.rule.types.Condition  t) { return  (t instanceof tom.gom.adt.rule.types.condition.CondTerm) ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondTerm_t( tom.gom.adt.rule.types.Condition  t) { return  t.gett() ;}private static boolean tom_is_fun_sym_CondEquals( tom.gom.adt.rule.types.Condition  t) { return  (t instanceof tom.gom.adt.rule.types.condition.CondEquals) ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondEquals_t1( tom.gom.adt.rule.types.Condition  t) { return  t.gett1() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondEquals_t2( tom.gom.adt.rule.types.Condition  t) { return  t.gett2() ;}private static boolean tom_is_fun_sym_CondNotEquals( tom.gom.adt.rule.types.Condition  t) { return  (t instanceof tom.gom.adt.rule.types.condition.CondNotEquals) ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondNotEquals_t1( tom.gom.adt.rule.types.Condition  t) { return  t.gett1() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondNotEquals_t2( tom.gom.adt.rule.types.Condition  t) { return  t.gett2() ;}private static boolean tom_is_fun_sym_CondLessEquals( tom.gom.adt.rule.types.Condition  t) { return  (t instanceof tom.gom.adt.rule.types.condition.CondLessEquals) ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondLessEquals_t1( tom.gom.adt.rule.types.Condition  t) { return  t.gett1() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondLessEquals_t2( tom.gom.adt.rule.types.Condition  t) { return  t.gett2() ;}private static boolean tom_is_fun_sym_CondLessThan( tom.gom.adt.rule.types.Condition  t) { return  (t instanceof tom.gom.adt.rule.types.condition.CondLessThan) ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondLessThan_t1( tom.gom.adt.rule.types.Condition  t) { return  t.gett1() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondLessThan_t2( tom.gom.adt.rule.types.Condition  t) { return  t.gett2() ;}private static boolean tom_is_fun_sym_CondGreaterEquals( tom.gom.adt.rule.types.Condition  t) { return  (t instanceof tom.gom.adt.rule.types.condition.CondGreaterEquals) ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondGreaterEquals_t1( tom.gom.adt.rule.types.Condition  t) { return  t.gett1() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondGreaterEquals_t2( tom.gom.adt.rule.types.Condition  t) { return  t.gett2() ;}private static boolean tom_is_fun_sym_CondGreaterThan( tom.gom.adt.rule.types.Condition  t) { return  (t instanceof tom.gom.adt.rule.types.condition.CondGreaterThan) ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondGreaterThan_t1( tom.gom.adt.rule.types.Condition  t) { return  t.gett1() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondGreaterThan_t2( tom.gom.adt.rule.types.Condition  t) { return  t.gett2() ;}private static boolean tom_is_fun_sym_CondMethod( tom.gom.adt.rule.types.Condition  t) { return  (t instanceof tom.gom.adt.rule.types.condition.CondMethod) ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondMethod_t1( tom.gom.adt.rule.types.Condition  t) { return  t.gett1() ;}private static  String  tom_get_slot_CondMethod_name( tom.gom.adt.rule.types.Condition  t) { return  t.getname() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_CondMethod_t2( tom.gom.adt.rule.types.Condition  t) { return  t.gett2() ;}private static boolean tom_is_fun_sym_Appl( tom.gom.adt.rule.types.Term  t) { return  (t instanceof tom.gom.adt.rule.types.term.Appl) ;}private static  String  tom_get_slot_Appl_symbol( tom.gom.adt.rule.types.Term  t) { return  t.getsymbol() ;}private static  tom.gom.adt.rule.types.TermList  tom_get_slot_Appl_args( tom.gom.adt.rule.types.Term  t) { return  t.getargs() ;}private static boolean tom_is_fun_sym_Var( tom.gom.adt.rule.types.Term  t) { return  (t instanceof tom.gom.adt.rule.types.term.Var) ;}private static  String  tom_get_slot_Var_name( tom.gom.adt.rule.types.Term  t) { return  t.getname() ;}private static boolean tom_is_fun_sym_UnnamedVar( tom.gom.adt.rule.types.Term  t) { return  (t instanceof tom.gom.adt.rule.types.term.UnnamedVar) ;}private static boolean tom_is_fun_sym_UnnamedVarStar( tom.gom.adt.rule.types.Term  t) { return  (t instanceof tom.gom.adt.rule.types.term.UnnamedVarStar) ;}private static boolean tom_is_fun_sym_At( tom.gom.adt.rule.types.Term  t) { return  (t instanceof tom.gom.adt.rule.types.term.At) ;}private static  String  tom_get_slot_At_name( tom.gom.adt.rule.types.Term  t) { return  t.getname() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_At_term( tom.gom.adt.rule.types.Term  t) { return  t.getterm() ;}private static boolean tom_is_fun_sym_BuiltinInt( tom.gom.adt.rule.types.Term  t) { return  (t instanceof tom.gom.adt.rule.types.term.BuiltinInt) ;}private static  int  tom_get_slot_BuiltinInt_i( tom.gom.adt.rule.types.Term  t) { return  t.geti() ;}private static boolean tom_is_fun_sym_BuiltinString( tom.gom.adt.rule.types.Term  t) { return  (t instanceof tom.gom.adt.rule.types.term.BuiltinString) ;}private static  String  tom_get_slot_BuiltinString_s( tom.gom.adt.rule.types.Term  t) { return  t.gets() ;}private static boolean tom_is_fun_sym_RuleList( tom.gom.adt.rule.types.RuleList  t) { return  ((t instanceof tom.gom.adt.rule.types.rulelist.ConsRuleList) || (t instanceof tom.gom.adt.rule.types.rulelist.EmptyRuleList)) ;}private static  tom.gom.adt.rule.types.RuleList  tom_empty_list_RuleList() { return  tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ; }private static  tom.gom.adt.rule.types.RuleList  tom_cons_list_RuleList( tom.gom.adt.rule.types.Rule  e,  tom.gom.adt.rule.types.RuleList  l) { return  tom.gom.adt.rule.types.rulelist.ConsRuleList.make(e,l) ; }private static  tom.gom.adt.rule.types.Rule  tom_get_head_RuleList_RuleList( tom.gom.adt.rule.types.RuleList  l) { return  l.getHeadRuleList() ;}private static  tom.gom.adt.rule.types.RuleList  tom_get_tail_RuleList_RuleList( tom.gom.adt.rule.types.RuleList  l) { return  l.getTailRuleList() ;}private static boolean tom_is_empty_RuleList_RuleList( tom.gom.adt.rule.types.RuleList  l) { return  l.isEmptyRuleList() ;}   private static   tom.gom.adt.rule.types.RuleList  tom_append_list_RuleList( tom.gom.adt.rule.types.RuleList l1,  tom.gom.adt.rule.types.RuleList  l2) {     if( l1.isEmptyRuleList() ) {       return l2;     } else if( l2.isEmptyRuleList() ) {       return l1;     } else if(  l1.getTailRuleList() .isEmptyRuleList() ) {       return ( tom.gom.adt.rule.types.RuleList )tom_cons_list_RuleList( l1.getHeadRuleList() ,l2);     } else {       return ( tom.gom.adt.rule.types.RuleList )tom_cons_list_RuleList( l1.getHeadRuleList() ,tom_append_list_RuleList( l1.getTailRuleList() ,l2));     }   }   private static   tom.gom.adt.rule.types.RuleList  tom_get_slice_RuleList( tom.gom.adt.rule.types.RuleList  begin,  tom.gom.adt.rule.types.RuleList  end, tom.gom.adt.rule.types.RuleList  tail) {     if(tom_equal_term_RuleList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.rule.types.RuleList )tom_cons_list_RuleList( begin.getHeadRuleList() ,( tom.gom.adt.rule.types.RuleList )tom_get_slice_RuleList( begin.getTailRuleList() ,end,tail));     }   }   private static boolean tom_is_fun_sym_TermList( tom.gom.adt.rule.types.TermList  t) { return  ((t instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (t instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ;}private static  tom.gom.adt.rule.types.TermList  tom_empty_list_TermList() { return  tom.gom.adt.rule.types.termlist.EmptyTermList.make() ; }private static  tom.gom.adt.rule.types.TermList  tom_cons_list_TermList( tom.gom.adt.rule.types.Term  e,  tom.gom.adt.rule.types.TermList  l) { return  tom.gom.adt.rule.types.termlist.ConsTermList.make(e,l) ; }private static  tom.gom.adt.rule.types.Term  tom_get_head_TermList_TermList( tom.gom.adt.rule.types.TermList  l) { return  l.getHeadTermList() ;}private static  tom.gom.adt.rule.types.TermList  tom_get_tail_TermList_TermList( tom.gom.adt.rule.types.TermList  l) { return  l.getTailTermList() ;}private static boolean tom_is_empty_TermList_TermList( tom.gom.adt.rule.types.TermList  l) { return  l.isEmptyTermList() ;}   private static   tom.gom.adt.rule.types.TermList  tom_append_list_TermList( tom.gom.adt.rule.types.TermList l1,  tom.gom.adt.rule.types.TermList  l2) {     if( l1.isEmptyTermList() ) {       return l2;     } else if( l2.isEmptyTermList() ) {       return l1;     } else if(  l1.getTailTermList() .isEmptyTermList() ) {       return ( tom.gom.adt.rule.types.TermList )tom_cons_list_TermList( l1.getHeadTermList() ,l2);     } else {       return ( tom.gom.adt.rule.types.TermList )tom_cons_list_TermList( l1.getHeadTermList() ,tom_append_list_TermList( l1.getTailTermList() ,l2));     }   }   private static   tom.gom.adt.rule.types.TermList  tom_get_slice_TermList( tom.gom.adt.rule.types.TermList  begin,  tom.gom.adt.rule.types.TermList  end, tom.gom.adt.rule.types.TermList  tail) {     if(tom_equal_term_TermList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.rule.types.TermList )tom_cons_list_TermList( begin.getHeadTermList() ,( tom.gom.adt.rule.types.TermList )tom_get_slice_TermList( begin.getTailTermList() ,end,tail));     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_Strategy(Object t1, Object t2) { return t1.equals(t2);}private static boolean tom_is_sort_Strategy(Object t) { return  t instanceof tom.library.sl.Strategy ;}/* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_mu( tom.library.sl.Strategy  var,  tom.library.sl.Strategy  v) { return  new tom.library.sl.Mu(var,v) ; }private static  tom.library.sl.Strategy  tom_make_MuVar( String  name) { return  new tom.library.sl.MuVar(name) ; }private static  tom.library.sl.Strategy  tom_make_Identity() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_make_All( tom.library.sl.Strategy  v) { return  new tom.library.sl.All(v) ; }private static boolean tom_is_fun_sym_Sequence( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.Sequence) ;}private static  tom.library.sl.Strategy  tom_empty_list_Sequence() { return  null ; }private static  tom.library.sl.Strategy  tom_cons_list_Sequence( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  (tail==null)?head:new tom.library.sl.Sequence(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.THEN) ;}private static boolean tom_is_empty_Sequence_Strategy( tom.library.sl.Strategy  t) { return  t == null ;}   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_Sequence_Strategy(l1)) {       return l2;     } else if(tom_is_empty_Sequence_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_Sequence(l1)) {       if(tom_is_empty_Sequence_Strategy(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()))) {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),tom_append_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_head_Sequence_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_tail_Sequence_Strategy(begin):tom_empty_list_Sequence()),end,tail));     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence()))) ; }   



  private ModuleList moduleList;

  public RuleExpander(ModuleList data) {
    this.moduleList = data;
  }

  public HookDeclList expandRules(String ruleCode) {
    RuleLexer lexer = new RuleLexer(new ANTLRStringStream(ruleCode));
    CommonTokenStream tokens = new CommonTokenStream(lexer);
    RuleParser parser = new RuleParser(tokens);
    parser.setTreeAdaptor(new RuleAdaptor());
    RuleList rulelist = tom_empty_list_RuleList();
    try {
      RuleTree ast = (RuleTree) parser.ruleset().getTree();
      rulelist = (RuleList) ast.getTerm();
    } catch (org.antlr.runtime.RecognitionException e) {
      getLogger().log(Level.SEVERE, "Cannot parse rules",
          new Object[]{});
      return tom_empty_list_concHookDecl();
    }
    return expand(rulelist);
  }

  protected HookDeclList expand(RuleList rulelist) {
    HookDeclList hookList = tom_empty_list_concHookDecl();
    /* collect all rules for a given symbol */
    Map rulesForOperator = new HashMap();
    if (tom_is_sort_RuleList(rulelist)) {{  tom.gom.adt.rule.types.RuleList  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.RuleList )rulelist);if (tom_is_fun_sym_RuleList(tomMatch512NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.RuleList  tomMatch512NameNumber_freshVar_0=tomMatch512NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.RuleList  tomMatch512NameNumber_begin_2=tomMatch512NameNumber_freshVar_0;{  tom.gom.adt.rule.types.RuleList  tomMatch512NameNumber_end_3=tomMatch512NameNumber_freshVar_0;do {{{  tom.gom.adt.rule.types.RuleList  tomMatch512NameNumber_freshVar_1=tomMatch512NameNumber_end_3;if (!(tom_is_empty_RuleList_RuleList(tomMatch512NameNumber_freshVar_1))) {{ boolean tomMatch512NameNumber_freshVar_8= false ;{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_6= null ;if (tom_is_fun_sym_Rule(tom_get_head_RuleList_RuleList(tomMatch512NameNumber_freshVar_1))) {{tomMatch512NameNumber_freshVar_8= true ;tomMatch512NameNumber_freshVar_6=tom_get_slot_Rule_lhs(tom_get_head_RuleList_RuleList(tomMatch512NameNumber_freshVar_1));}} else {if (tom_is_fun_sym_ConditionalRule(tom_get_head_RuleList_RuleList(tomMatch512NameNumber_freshVar_1))) {{tomMatch512NameNumber_freshVar_8= true ;tomMatch512NameNumber_freshVar_6=tom_get_slot_ConditionalRule_lhs(tom_get_head_RuleList_RuleList(tomMatch512NameNumber_freshVar_1));}}}if ((tomMatch512NameNumber_freshVar_8 ==  true )) {if (tom_is_fun_sym_Appl(tomMatch512NameNumber_freshVar_6)) {{  String  tomMatch512NameNumber_freshVar_7=tom_get_slot_Appl_symbol(tomMatch512NameNumber_freshVar_6);{  tom.gom.adt.rule.types.Rule  tom_rl=tom_get_head_RuleList_RuleList(tomMatch512NameNumber_freshVar_1);{  tom.gom.adt.rule.types.RuleList  tomMatch512NameNumber_freshVar_4=tom_get_tail_RuleList_RuleList(tomMatch512NameNumber_freshVar_1);if ( true ) {

        OperatorDecl decl = getOperatorDecl(tomMatch512NameNumber_freshVar_7);
        if(null!=decl) {
          RuleList rules = (RuleList) rulesForOperator.get(decl);
          if (null == rules) {
            rulesForOperator.put(decl,tom_cons_list_RuleList(tom_rl,tom_empty_list_RuleList()));
          } else {
            rulesForOperator.put(decl,tom_append_list_RuleList(rules,tom_cons_list_RuleList(tom_rl,tom_empty_list_RuleList())));
          }
        } else {
          getLogger().log(Level.WARNING, "Discard rule \"{0}\"",
              new Object[]{/*XXX:prettyprint*/(tom_rl)});
        }
      }}}}}}}}}}if (tom_is_empty_RuleList_RuleList(tomMatch512NameNumber_end_3)) {tomMatch512NameNumber_end_3=tomMatch512NameNumber_begin_2;} else {tomMatch512NameNumber_end_3=tom_get_tail_RuleList_RuleList(tomMatch512NameNumber_end_3);}}} while(!(tom_equal_term_RuleList(tomMatch512NameNumber_end_3, tomMatch512NameNumber_begin_2)));}}}}}}

    /* Generate a construction hook for each constructor */
    Iterator it = rulesForOperator.keySet().iterator();
    while (it.hasNext()) {
      OperatorDecl opDecl = (OperatorDecl) it.next();
      TypedProduction prod = opDecl.getProd();
      if (tom_is_sort_TypedProduction(prod)) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch513NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.TypedProduction )prod);if (tom_is_fun_sym_Slots(tomMatch513NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SlotList  tomMatch513NameNumber_freshVar_0=tom_get_slot_Slots_Slots(tomMatch513NameNumberfreshSubject_1);if ( true ) {


          SlotList args = opArgs(tomMatch513NameNumber_freshVar_0,1);
          String hookCode =
            generateHookCode(args, (RuleList) rulesForOperator.get(opDecl));
          hookList =
            tom_append_list_concHookDecl(hookList,tom_cons_list_concHookDecl(tom_make_MakeHookDecl(tom_make_CutOperator(opDecl),args,tom_make_Code(hookCode),tom_make_HookKind("rules")),tom_empty_list_concHookDecl()))
;
        }}}if (tom_is_fun_sym_Variadic(tomMatch513NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SortDecl  tomMatch513NameNumber_freshVar_1=tom_get_slot_Variadic_Sort(tomMatch513NameNumberfreshSubject_1);if ( true ) {


          RuleList rules = (RuleList) rulesForOperator.get(opDecl);
          /* Handle rules for empty: there should be at least one */
          int count = 0;
          RuleList nonEmptyRules = rules;
          if (tom_is_sort_RuleList(rules)) {{  tom.gom.adt.rule.types.RuleList  tomMatch514NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.RuleList )rules);if (tom_is_fun_sym_RuleList(tomMatch514NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.RuleList  tomMatch514NameNumber_freshVar_0=tomMatch514NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.RuleList  tomMatch514NameNumber_begin_2=tomMatch514NameNumber_freshVar_0;{  tom.gom.adt.rule.types.RuleList  tomMatch514NameNumber_end_3=tomMatch514NameNumber_freshVar_0;do {{{  tom.gom.adt.rule.types.RuleList  tomMatch514NameNumber_freshVar_1=tomMatch514NameNumber_end_3;if (!(tom_is_empty_RuleList_RuleList(tomMatch514NameNumber_freshVar_1))) {{ boolean tomMatch514NameNumber_freshVar_13= false ;{  tom.gom.adt.rule.types.Term  tomMatch514NameNumber_freshVar_8= null ;if (tom_is_fun_sym_Rule(tom_get_head_RuleList_RuleList(tomMatch514NameNumber_freshVar_1))) {{tomMatch514NameNumber_freshVar_13= true ;tomMatch514NameNumber_freshVar_8=tom_get_slot_Rule_lhs(tom_get_head_RuleList_RuleList(tomMatch514NameNumber_freshVar_1));}} else {if (tom_is_fun_sym_ConditionalRule(tom_get_head_RuleList_RuleList(tomMatch514NameNumber_freshVar_1))) {{tomMatch514NameNumber_freshVar_13= true ;tomMatch514NameNumber_freshVar_8=tom_get_slot_ConditionalRule_lhs(tom_get_head_RuleList_RuleList(tomMatch514NameNumber_freshVar_1));}}}if ((tomMatch514NameNumber_freshVar_13 ==  true )) {if (tom_is_fun_sym_Appl(tomMatch514NameNumber_freshVar_8)) {{  tom.gom.adt.rule.types.TermList  tomMatch514NameNumber_freshVar_9=tom_get_slot_Appl_args(tomMatch514NameNumber_freshVar_8);if (tom_is_fun_sym_TermList(tomMatch514NameNumber_freshVar_9)) {{  tom.gom.adt.rule.types.TermList  tomMatch514NameNumber_freshVar_10=tomMatch514NameNumber_freshVar_9;if (tom_is_empty_TermList_TermList(tomMatch514NameNumber_freshVar_10)) {{  tom.gom.adt.rule.types.RuleList  tomMatch514NameNumber_freshVar_4=tom_get_tail_RuleList_RuleList(tomMatch514NameNumber_freshVar_1);if ( true ) {



              count++;
              nonEmptyRules = tom_append_list_RuleList(tom_get_slice_RuleList(tomMatch514NameNumber_begin_2,tomMatch514NameNumber_end_3,tom_empty_list_RuleList()),tom_append_list_RuleList(tomMatch514NameNumber_freshVar_4,tom_empty_list_RuleList()));
              String hookCode =
                generateHookCode(tom_empty_list_concSlot(),tom_cons_list_RuleList(tom_get_head_RuleList_RuleList(tomMatch514NameNumber_freshVar_1),tom_empty_list_RuleList()));
              hookList =
                tom_append_list_concHookDecl(hookList,tom_cons_list_concHookDecl(tom_make_MakeHookDecl(tom_make_CutOperator(opDecl),tom_empty_list_concSlot(),tom_make_Code(hookCode),tom_make_HookKind("rules")),tom_empty_list_concHookDecl()))
;
            }}}}}}}}}}}}if (tom_is_empty_RuleList_RuleList(tomMatch514NameNumber_end_3)) {tomMatch514NameNumber_end_3=tomMatch514NameNumber_begin_2;} else {tomMatch514NameNumber_end_3=tom_get_tail_RuleList_RuleList(tomMatch514NameNumber_end_3);}}} while(!(tom_equal_term_RuleList(tomMatch514NameNumber_end_3, tomMatch514NameNumber_begin_2)));}}}}}}

          if (count>1) {
            getLogger().log(Level.WARNING, "Multiple rules for empty {0}",
                new Object[]{ opDecl.getName() });
          }
          /* Then handle rules for insert */
          if (!nonEmptyRules.isEmptyRuleList()) {
            SlotList args = tom_cons_list_concSlot(tom_make_Slot("head",tomMatch513NameNumber_freshVar_1),tom_cons_list_concSlot(tom_make_Slot("tail",opDecl.getSort()),tom_empty_list_concSlot()));
            String hookCode =
              generateVariadicHookCode(args, nonEmptyRules);
            hookList =
              tom_append_list_concHookDecl(hookList,tom_cons_list_concHookDecl(tom_make_MakeHookDecl(tom_make_CutOperator(opDecl),args,tom_make_Code(hookCode),tom_make_HookKind("rules")),tom_empty_list_concHookDecl()))
;
          }
        }}}}}

    }
    return hookList;
  }

  private String generateHookCode(SlotList slotList, RuleList ruleList) {
    StringBuffer output = new StringBuffer();
    if(slotList.isEmptyconcSlot()) {
      while(!ruleList.isEmptyRuleList()) {
        Rule rule = ruleList.getHeadRuleList();
        ruleList = ruleList.getTailRuleList();
        if (tom_is_sort_Rule(rule)) {{  tom.gom.adt.rule.types.Rule  tomMatch515NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Rule )rule);if (tom_is_fun_sym_Rule(tomMatch515NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch515NameNumber_freshVar_0=tom_get_slot_Rule_lhs(tomMatch515NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch515NameNumber_freshVar_1=tom_get_slot_Rule_rhs(tomMatch515NameNumberfreshSubject_1);if (tom_is_fun_sym_Appl(tomMatch515NameNumber_freshVar_0)) {if ( true ) {

            output.append("    return `");
            genTerm(tomMatch515NameNumber_freshVar_1,output);
            output.append(";\n");
          }}}}}if (tom_is_fun_sym_ConditionalRule(tomMatch515NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch515NameNumber_freshVar_2=tom_get_slot_ConditionalRule_lhs(tomMatch515NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch515NameNumber_freshVar_3=tom_get_slot_ConditionalRule_rhs(tomMatch515NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Condition  tomMatch515NameNumber_freshVar_4=tom_get_slot_ConditionalRule_cond(tomMatch515NameNumberfreshSubject_1);if (tom_is_fun_sym_Appl(tomMatch515NameNumber_freshVar_2)) {if ( true ) {

            output.append("    if `(");
            genCondition(tomMatch515NameNumber_freshVar_4,output);
            output.append(") { return `");
            genTerm(tomMatch515NameNumber_freshVar_3,output);
            output.append("; }\n");
          }}}}}}}}

      }

    } else {
      output.append("    %match(");
      matchArgs(slotList,output,1);
      output.append(") {\n");
      while(!ruleList.isEmptyRuleList()) {
        Rule rule = ruleList.getHeadRuleList();
        ruleList = ruleList.getTailRuleList();
        if (tom_is_sort_Rule(rule)) {{  tom.gom.adt.rule.types.Rule  tomMatch516NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Rule )rule);if (tom_is_fun_sym_Rule(tomMatch516NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch516NameNumber_freshVar_0=tom_get_slot_Rule_lhs(tomMatch516NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch516NameNumber_freshVar_1=tom_get_slot_Rule_rhs(tomMatch516NameNumberfreshSubject_1);if (tom_is_fun_sym_Appl(tomMatch516NameNumber_freshVar_0)) {{  tom.gom.adt.rule.types.TermList  tomMatch516NameNumber_freshVar_2=tom_get_slot_Appl_args(tomMatch516NameNumber_freshVar_0);if ( true ) {

            genTermList(tomMatch516NameNumber_freshVar_2,output);
            output.append(" -> { return `");
            genTerm(tomMatch516NameNumber_freshVar_1,output);
            output.append("; }\n");
          }}}}}}if (tom_is_fun_sym_ConditionalRule(tomMatch516NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch516NameNumber_freshVar_3=tom_get_slot_ConditionalRule_lhs(tomMatch516NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch516NameNumber_freshVar_4=tom_get_slot_ConditionalRule_rhs(tomMatch516NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Condition  tomMatch516NameNumber_freshVar_5=tom_get_slot_ConditionalRule_cond(tomMatch516NameNumberfreshSubject_1);if (tom_is_fun_sym_Appl(tomMatch516NameNumber_freshVar_3)) {{  tom.gom.adt.rule.types.TermList  tomMatch516NameNumber_freshVar_6=tom_get_slot_Appl_args(tomMatch516NameNumber_freshVar_3);if ( true ) {

            genTermList(tomMatch516NameNumber_freshVar_6,output);
            output.append(" -> { if `(");
            genCondition(tomMatch516NameNumber_freshVar_5,output);
            output.append(") { return `");
            genTerm(tomMatch516NameNumber_freshVar_4,output);
            output.append("; } }\n");
          }}}}}}}}}

      }
      output.append("    }\n");
    }
    return output.toString();
  }

  private String generateVariadicHookCode(SlotList slotList, RuleList ruleList) {
    StringBuffer output = new StringBuffer();
    output.append("    %match(realMake(head,tail)) {\n");
    while(!ruleList.isEmptyRuleList()) {
      Rule rule = ruleList.getHeadRuleList();
      ruleList = ruleList.getTailRuleList();
      if (tom_is_sort_Rule(rule)) {{  tom.gom.adt.rule.types.Rule  tomMatch517NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Rule )rule);if (tom_is_fun_sym_Rule(tomMatch517NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch517NameNumber_freshVar_0=tom_get_slot_Rule_lhs(tomMatch517NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch517NameNumber_freshVar_1=tom_get_slot_Rule_rhs(tomMatch517NameNumberfreshSubject_1);if ( true ) {

          genTerm(tomMatch517NameNumber_freshVar_0,output);
          output.append(" -> { return `");
          genTerm(tomMatch517NameNumber_freshVar_1,output);
          output.append("; }\n");
        }}}}if (tom_is_fun_sym_ConditionalRule(tomMatch517NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch517NameNumber_freshVar_2=tom_get_slot_ConditionalRule_lhs(tomMatch517NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch517NameNumber_freshVar_3=tom_get_slot_ConditionalRule_rhs(tomMatch517NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Condition  tomMatch517NameNumber_freshVar_4=tom_get_slot_ConditionalRule_cond(tomMatch517NameNumberfreshSubject_1);if ( true ) {

          genTerm(tomMatch517NameNumber_freshVar_2,output);
          output.append(" -> { if `(");
          genCondition(tomMatch517NameNumber_freshVar_4,output);
          output.append(") { return `");
          genTerm(tomMatch517NameNumber_freshVar_3,output);
          output.append("; } }\n");
        }}}}}}}

    }
    output.append("    }\n");
    return output.toString();
  }
  private void genTermList(TermList list, StringBuffer output) {
    if (tom_is_sort_TermList(list)) {{  tom.gom.adt.rule.types.TermList  tomMatch518NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.TermList )list);if (tom_is_fun_sym_TermList(tomMatch518NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.TermList  tomMatch518NameNumber_freshVar_0=tomMatch518NameNumberfreshSubject_1;if (tom_is_empty_TermList_TermList(tomMatch518NameNumber_freshVar_0)) {if ( true ) {
 return; }}}}if (tom_is_fun_sym_TermList(tomMatch518NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.TermList  tomMatch518NameNumber_freshVar_1=tomMatch518NameNumberfreshSubject_1;if (!(tom_is_empty_TermList_TermList(tomMatch518NameNumber_freshVar_1))) {{  tom.gom.adt.rule.types.TermList  tomMatch518NameNumber_freshVar_2=tom_get_tail_TermList_TermList(tomMatch518NameNumber_freshVar_1);{  tom.gom.adt.rule.types.TermList  tom_t=tomMatch518NameNumber_freshVar_2;if ( true ) {

        genTerm(tom_get_head_TermList_TermList(tomMatch518NameNumber_freshVar_1),output);
        if (!tom_t.isEmptyTermList()) {
          output.append(", ");
        }
        genTermList(tom_t,output);
      }}}}}}}}

  }

  private void genTerm(Term term, StringBuffer output) {
    if (tom_is_sort_Term(term)) {{  tom.gom.adt.rule.types.Term  tomMatch519NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )term);if (tom_is_fun_sym_Appl(tomMatch519NameNumberfreshSubject_1)) {{  String  tomMatch519NameNumber_freshVar_0=tom_get_slot_Appl_symbol(tomMatch519NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.TermList  tomMatch519NameNumber_freshVar_1=tom_get_slot_Appl_args(tomMatch519NameNumberfreshSubject_1);if ( true ) {

        output.append(tomMatch519NameNumber_freshVar_0);
        output.append("(");
        genTermList(tomMatch519NameNumber_freshVar_1, output);
        output.append(")");
      }}}}if (tom_is_fun_sym_At(tomMatch519NameNumberfreshSubject_1)) {{  String  tomMatch519NameNumber_freshVar_2=tom_get_slot_At_name(tomMatch519NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch519NameNumber_freshVar_3=tom_get_slot_At_term(tomMatch519NameNumberfreshSubject_1);if ( true ) {

        output.append(tomMatch519NameNumber_freshVar_2);
        output.append("@");
        genTerm(tomMatch519NameNumber_freshVar_3,output);
      }}}}if (tom_is_fun_sym_UnnamedVar(tomMatch519NameNumberfreshSubject_1)) {if ( true ) {

        output.append("_");
      }}if (tom_is_fun_sym_UnnamedVarStar(tomMatch519NameNumberfreshSubject_1)) {if ( true ) {

        output.append("_*");
      }}if (tom_is_fun_sym_Var(tomMatch519NameNumberfreshSubject_1)) {{  String  tomMatch519NameNumber_freshVar_4=tom_get_slot_Var_name(tomMatch519NameNumberfreshSubject_1);if ( true ) {

        output.append(tomMatch519NameNumber_freshVar_4);
      }}}if (tom_is_fun_sym_BuiltinInt(tomMatch519NameNumberfreshSubject_1)) {{  int  tomMatch519NameNumber_freshVar_5=tom_get_slot_BuiltinInt_i(tomMatch519NameNumberfreshSubject_1);if ( true ) {

        output.append(tomMatch519NameNumber_freshVar_5);
      }}}if (tom_is_fun_sym_BuiltinString(tomMatch519NameNumberfreshSubject_1)) {{  String  tomMatch519NameNumber_freshVar_6=tom_get_slot_BuiltinString_s(tomMatch519NameNumberfreshSubject_1);if ( true ) {

        output.append(tomMatch519NameNumber_freshVar_6);
      }}}}}

  }

  private void genCondition(Condition cond, StringBuffer output) {
    if (tom_is_sort_Condition(cond)) {{  tom.gom.adt.rule.types.Condition  tomMatch520NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if (tom_is_fun_sym_CondTerm(tomMatch520NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_0=tom_get_slot_CondTerm_t(tomMatch520NameNumberfreshSubject_1);if ( true ) {

        genTerm(tomMatch520NameNumber_freshVar_0,output);
      }}}if (tom_is_fun_sym_CondEquals(tomMatch520NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_1=tom_get_slot_CondEquals_t1(tomMatch520NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_2=tom_get_slot_CondEquals_t2(tomMatch520NameNumberfreshSubject_1);if ( true ) {

        output.append("(");
        genTerm(tomMatch520NameNumber_freshVar_1,output);
        output.append(" == ");
        genTerm(tomMatch520NameNumber_freshVar_2,output);
        output.append(")");
      }}}}if (tom_is_fun_sym_CondNotEquals(tomMatch520NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_3=tom_get_slot_CondNotEquals_t1(tomMatch520NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_4=tom_get_slot_CondNotEquals_t2(tomMatch520NameNumberfreshSubject_1);if ( true ) {

        output.append("(");
        genTerm(tomMatch520NameNumber_freshVar_3,output);
        output.append(" != ");
        genTerm(tomMatch520NameNumber_freshVar_4,output);
        output.append(")");
      }}}}if (tom_is_fun_sym_CondLessEquals(tomMatch520NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_5=tom_get_slot_CondLessEquals_t1(tomMatch520NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_6=tom_get_slot_CondLessEquals_t2(tomMatch520NameNumberfreshSubject_1);if ( true ) {

        output.append("(");
        genTerm(tomMatch520NameNumber_freshVar_5,output);
        output.append(" <= ");
        genTerm(tomMatch520NameNumber_freshVar_6,output);
        output.append(")");
      }}}}if (tom_is_fun_sym_CondLessThan(tomMatch520NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_7=tom_get_slot_CondLessThan_t1(tomMatch520NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_8=tom_get_slot_CondLessThan_t2(tomMatch520NameNumberfreshSubject_1);if ( true ) {

        output.append("(");
        genTerm(tomMatch520NameNumber_freshVar_7,output);
        output.append(" < ");
        genTerm(tomMatch520NameNumber_freshVar_8,output);
        output.append(")");
      }}}}if (tom_is_fun_sym_CondGreaterEquals(tomMatch520NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_9=tom_get_slot_CondGreaterEquals_t1(tomMatch520NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_10=tom_get_slot_CondGreaterEquals_t2(tomMatch520NameNumberfreshSubject_1);if ( true ) {

        output.append("(");
        genTerm(tomMatch520NameNumber_freshVar_9,output);
        output.append(" >= ");
        genTerm(tomMatch520NameNumber_freshVar_10,output);
        output.append(")");
      }}}}if (tom_is_fun_sym_CondGreaterThan(tomMatch520NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_11=tom_get_slot_CondGreaterThan_t1(tomMatch520NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_12=tom_get_slot_CondGreaterThan_t2(tomMatch520NameNumberfreshSubject_1);if ( true ) {

        output.append("(");
        genTerm(tomMatch520NameNumber_freshVar_11,output);
        output.append(" > ");
        genTerm(tomMatch520NameNumber_freshVar_12,output);
        output.append(")");
      }}}}if (tom_is_fun_sym_CondMethod(tomMatch520NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_13=tom_get_slot_CondMethod_t1(tomMatch520NameNumberfreshSubject_1);{  String  tomMatch520NameNumber_freshVar_14=tom_get_slot_CondMethod_name(tomMatch520NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch520NameNumber_freshVar_15=tom_get_slot_CondMethod_t2(tomMatch520NameNumberfreshSubject_1);if ( true ) {

        genTerm(tomMatch520NameNumber_freshVar_13,output);
        output.append(".");
        output.append(tomMatch520NameNumber_freshVar_14);
        output.append("(");
        genTerm(tomMatch520NameNumber_freshVar_15,output);
        output.append(")");
      }}}}}}}

  }

  private void matchArgs(SlotList sl, StringBuffer output, int count) {
    if (tom_is_sort_SlotList(sl)) {{  tom.gom.adt.gom.types.SlotList  tomMatch521NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SlotList )sl);if (tom_is_fun_sym_concSlot(tomMatch521NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SlotList  tomMatch521NameNumber_freshVar_0=tomMatch521NameNumberfreshSubject_1;if (tom_is_empty_concSlot_SlotList(tomMatch521NameNumber_freshVar_0)) {if ( true ) {
 return; }}}}if (tom_is_fun_sym_concSlot(tomMatch521NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SlotList  tomMatch521NameNumber_freshVar_1=tomMatch521NameNumberfreshSubject_1;if (!(tom_is_empty_concSlot_SlotList(tomMatch521NameNumber_freshVar_1))) {if (tom_is_fun_sym_Slot(tom_get_head_concSlot_SlotList(tomMatch521NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.SortDecl  tomMatch521NameNumber_freshVar_5=tom_get_slot_Slot_Sort(tom_get_head_concSlot_SlotList(tomMatch521NameNumber_freshVar_1));{  tom.gom.adt.gom.types.SortDecl  tom_sort=tomMatch521NameNumber_freshVar_5;{  tom.gom.adt.gom.types.SlotList  tomMatch521NameNumber_freshVar_2=tom_get_tail_concSlot_SlotList(tomMatch521NameNumber_freshVar_1);{  tom.gom.adt.gom.types.SlotList  tom_t=tomMatch521NameNumber_freshVar_2;if ( true ) {if (tom_is_sort_SortDecl(tom_sort)) {{  tom.gom.adt.gom.types.SortDecl  tomMatch522NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SortDecl )tom_sort);{ boolean tomMatch522NameNumber_freshVar_1= false ;{  String  tomMatch522NameNumber_freshVar_0= "" ;if (tom_is_fun_sym_SortDecl(tomMatch522NameNumberfreshSubject_1)) {{tomMatch522NameNumber_freshVar_1= true ;tomMatch522NameNumber_freshVar_0=tom_get_slot_SortDecl_Name(tomMatch522NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_BuiltinSortDecl(tomMatch522NameNumberfreshSubject_1)) {{tomMatch522NameNumber_freshVar_1= true ;tomMatch522NameNumber_freshVar_0=tom_get_slot_BuiltinSortDecl_Name(tomMatch522NameNumberfreshSubject_1);}}}if ((tomMatch522NameNumber_freshVar_1 ==  true )) {if ( true ) {



            output.append(tomMatch522NameNumber_freshVar_0);
            output.append(" arg_"+count);
          }}}}}}

        if (!tom_t.isEmptyconcSlot()) {
          output.append(", ");
        }
        matchArgs(tom_t,output,count+1);
      }}}}}}}}}}}

  }

  private SlotList opArgs(SlotList slots, int count) {
    if (tom_is_sort_SlotList(slots)) {{  tom.gom.adt.gom.types.SlotList  tomMatch523NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SlotList )slots);if (tom_is_fun_sym_concSlot(tomMatch523NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SlotList  tomMatch523NameNumber_freshVar_0=tomMatch523NameNumberfreshSubject_1;if (tom_is_empty_concSlot_SlotList(tomMatch523NameNumber_freshVar_0)) {if ( true ) {

        return tom_empty_list_concSlot();
      }}}}if (tom_is_fun_sym_concSlot(tomMatch523NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SlotList  tomMatch523NameNumber_freshVar_1=tomMatch523NameNumberfreshSubject_1;if (!(tom_is_empty_concSlot_SlotList(tomMatch523NameNumber_freshVar_1))) {if (tom_is_fun_sym_Slot(tom_get_head_concSlot_SlotList(tomMatch523NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.SortDecl  tomMatch523NameNumber_freshVar_5=tom_get_slot_Slot_Sort(tom_get_head_concSlot_SlotList(tomMatch523NameNumber_freshVar_1));{  tom.gom.adt.gom.types.SlotList  tomMatch523NameNumber_freshVar_2=tom_get_tail_concSlot_SlotList(tomMatch523NameNumber_freshVar_1);if ( true ) {

        SlotList tail = opArgs(tomMatch523NameNumber_freshVar_2,count+1);
        return tom_cons_list_concSlot(tom_make_Slot("arg_"+count,tomMatch523NameNumber_freshVar_5),tom_append_list_concSlot(tail,tom_empty_list_concSlot()));
      }}}}}}}}}

    throw new GomRuntimeException("RuleExpander:opArgs failed "+slots);
  }
  protected OperatorDecl getOperatorDecl(String name) {
    OperatorDecl decl = null;
    OpRef ref = new OpRef();
    try {
      tom_make_TopDown(tom_make_GetOperatorDecl(ref,name)).visit(moduleList);
    } catch (tom.library.sl.VisitFailure e) {
      throw new GomRuntimeException("Unexpected strategy failure!");
    }
    if (ref.val == null) {
      getLogger().log(Level.SEVERE, "Unknown constructor {0}",
          new Object[]{name});
    }
    return ref.val;
  }
  static class OpRef { OperatorDecl val; }
  private static boolean tom_is_sort_OpRef(Object t) { return 

 t instanceof OpRef ;}private static class GetOperatorDecl extends  tom.gom.adt.gom.GomBasicStrategy  {private  OpRef  opref; private  String  opName; public GetOperatorDecl( OpRef  opref,  String  opName) { super(tom_make_Identity());this.opref=opref;this.opName=opName;}public  OpRef  getopref() { return opref;}public  String  getopName() { return opName;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.gom.types.OperatorDecl  visit_OperatorDecl( tom.gom.adt.gom.types.OperatorDecl  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_OperatorDecl(tom__arg)) {{  tom.gom.adt.gom.types.OperatorDecl  tomMatch524NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.OperatorDecl )tom__arg);if (tom_is_fun_sym_OperatorDecl(tomMatch524NameNumberfreshSubject_1)) {{  String  tomMatch524NameNumber_freshVar_0=tom_get_slot_OperatorDecl_Name(tomMatch524NameNumberfreshSubject_1);if ( true ) {




        if (tomMatch524NameNumber_freshVar_0== opName) {
          opref.val = tomMatch524NameNumberfreshSubject_1;
        }
      }}}}}return super.visit_OperatorDecl(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_GetOperatorDecl( OpRef  t0,  String  t1) { return new GetOperatorDecl(t0,t1); }



  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }
}

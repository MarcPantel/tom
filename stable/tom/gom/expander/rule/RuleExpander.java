/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * GOM
 *
 * Copyright (c) 2007-2008, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.expander.rule;

import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.tree.Tree;
import tom.gom.adt.rule.RuleTree;
import tom.gom.adt.rule.RuleAdaptor;
import java.util.logging.Level;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;
import java.util.logging.Logger;
import tom.gom.GomMessage;
import tom.gom.adt.gom.types.*;
import tom.gom.adt.rule.types.*;
import tom.gom.tools.error.GomRuntimeException;

public class RuleExpander {

  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.gom.adt.gom.types.HookDeclList  tom_append_list_ConcHookDecl( tom.gom.adt.gom.types.HookDeclList l1,  tom.gom.adt.gom.types.HookDeclList  l2) {     if( l1.isEmptyConcHookDecl() ) {       return l2;     } else if( l2.isEmptyConcHookDecl() ) {       return l1;     } else if(  l1.getTailConcHookDecl() .isEmptyConcHookDecl() ) {       return  tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( l1.getHeadConcHookDecl() ,l2) ;     } else {       return  tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( l1.getHeadConcHookDecl() ,tom_append_list_ConcHookDecl( l1.getTailConcHookDecl() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.HookDeclList  tom_get_slice_ConcHookDecl( tom.gom.adt.gom.types.HookDeclList  begin,  tom.gom.adt.gom.types.HookDeclList  end, tom.gom.adt.gom.types.HookDeclList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcHookDecl()  ||  (end== tom.gom.adt.gom.types.hookdecllist.EmptyConcHookDecl.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( begin.getHeadConcHookDecl() ,( tom.gom.adt.gom.types.HookDeclList )tom_get_slice_ConcHookDecl( begin.getTailConcHookDecl() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.SlotList  tom_append_list_ConcSlot( tom.gom.adt.gom.types.SlotList l1,  tom.gom.adt.gom.types.SlotList  l2) {     if( l1.isEmptyConcSlot() ) {       return l2;     } else if( l2.isEmptyConcSlot() ) {       return l1;     } else if(  l1.getTailConcSlot() .isEmptyConcSlot() ) {       return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( l1.getHeadConcSlot() ,l2) ;     } else {       return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( l1.getHeadConcSlot() ,tom_append_list_ConcSlot( l1.getTailConcSlot() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.SlotList  tom_get_slice_ConcSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end, tom.gom.adt.gom.types.SlotList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcSlot()  ||  (end== tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( begin.getHeadConcSlot() ,( tom.gom.adt.gom.types.SlotList )tom_get_slice_ConcSlot( begin.getTailConcSlot() ,end,tail)) ;   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */   private static   tom.gom.adt.rule.types.RuleList  tom_append_list_RuleList( tom.gom.adt.rule.types.RuleList l1,  tom.gom.adt.rule.types.RuleList  l2) {     if( l1.isEmptyRuleList() ) {       return l2;     } else if( l2.isEmptyRuleList() ) {       return l1;     } else if(  l1.getTailRuleList() .isEmptyRuleList() ) {       return  tom.gom.adt.rule.types.rulelist.ConsRuleList.make( l1.getHeadRuleList() ,l2) ;     } else {       return  tom.gom.adt.rule.types.rulelist.ConsRuleList.make( l1.getHeadRuleList() ,tom_append_list_RuleList( l1.getTailRuleList() ,l2)) ;     }   }   private static   tom.gom.adt.rule.types.RuleList  tom_get_slice_RuleList( tom.gom.adt.rule.types.RuleList  begin,  tom.gom.adt.rule.types.RuleList  end, tom.gom.adt.rule.types.RuleList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyRuleList()  ||  (end== tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.rule.types.rulelist.ConsRuleList.make( begin.getHeadRuleList() ,( tom.gom.adt.rule.types.RuleList )tom_get_slice_RuleList( begin.getTailRuleList() ,end,tail)) ;   }      private static   tom.gom.adt.rule.types.TermList  tom_append_list_TermList( tom.gom.adt.rule.types.TermList l1,  tom.gom.adt.rule.types.TermList  l2) {     if( l1.isEmptyTermList() ) {       return l2;     } else if( l2.isEmptyTermList() ) {       return l1;     } else if(  l1.getTailTermList() .isEmptyTermList() ) {       return  tom.gom.adt.rule.types.termlist.ConsTermList.make( l1.getHeadTermList() ,l2) ;     } else {       return  tom.gom.adt.rule.types.termlist.ConsTermList.make( l1.getHeadTermList() ,tom_append_list_TermList( l1.getTailTermList() ,l2)) ;     }   }   private static   tom.gom.adt.rule.types.TermList  tom_get_slice_TermList( tom.gom.adt.rule.types.TermList  begin,  tom.gom.adt.rule.types.TermList  end, tom.gom.adt.rule.types.TermList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyTermList()  ||  (end== tom.gom.adt.rule.types.termlist.EmptyTermList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.rule.types.termlist.ConsTermList.make( begin.getHeadTermList() ,( tom.gom.adt.rule.types.TermList )tom_get_slice_TermList( begin.getTailTermList() ,end,tail)) ;   }      private static   tom.gom.adt.rule.types.Condition  tom_append_list_CondAnd( tom.gom.adt.rule.types.Condition  l1,  tom.gom.adt.rule.types.Condition  l2) {     if( l1.isEmptyCondAnd() ) {       return l2;     } else if( l2.isEmptyCondAnd() ) {       return l1;     } else if( ((l1 instanceof tom.gom.adt.rule.types.condition.ConsCondAnd) || (l1 instanceof tom.gom.adt.rule.types.condition.EmptyCondAnd)) ) {       if( (( ((l1 instanceof tom.gom.adt.rule.types.condition.ConsCondAnd) || (l1 instanceof tom.gom.adt.rule.types.condition.EmptyCondAnd)) )? l1.getTailCondAnd() : tom.gom.adt.rule.types.condition.EmptyCondAnd.make() ).isEmptyCondAnd() ) {         return  tom.gom.adt.rule.types.condition.ConsCondAnd.make((( ((l1 instanceof tom.gom.adt.rule.types.condition.ConsCondAnd) || (l1 instanceof tom.gom.adt.rule.types.condition.EmptyCondAnd)) )? l1.getHeadCondAnd() :l1),l2) ;       } else {         return  tom.gom.adt.rule.types.condition.ConsCondAnd.make((( ((l1 instanceof tom.gom.adt.rule.types.condition.ConsCondAnd) || (l1 instanceof tom.gom.adt.rule.types.condition.EmptyCondAnd)) )? l1.getHeadCondAnd() :l1),tom_append_list_CondAnd((( ((l1 instanceof tom.gom.adt.rule.types.condition.ConsCondAnd) || (l1 instanceof tom.gom.adt.rule.types.condition.EmptyCondAnd)) )? l1.getTailCondAnd() : tom.gom.adt.rule.types.condition.EmptyCondAnd.make() ),l2)) ;       }     } else {       return  tom.gom.adt.rule.types.condition.ConsCondAnd.make(l1,l2) ;     }   }   private static   tom.gom.adt.rule.types.Condition  tom_get_slice_CondAnd( tom.gom.adt.rule.types.Condition  begin,  tom.gom.adt.rule.types.Condition  end, tom.gom.adt.rule.types.Condition  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyCondAnd()  ||  (end== tom.gom.adt.rule.types.condition.EmptyCondAnd.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.rule.types.condition.ConsCondAnd.make((( ((begin instanceof tom.gom.adt.rule.types.condition.ConsCondAnd) || (begin instanceof tom.gom.adt.rule.types.condition.EmptyCondAnd)) )? begin.getHeadCondAnd() :begin),( tom.gom.adt.rule.types.Condition )tom_get_slice_CondAnd((( ((begin instanceof tom.gom.adt.rule.types.condition.ConsCondAnd) || (begin instanceof tom.gom.adt.rule.types.condition.EmptyCondAnd)) )? begin.getTailCondAnd() : tom.gom.adt.rule.types.condition.EmptyCondAnd.make() ),end,tail)) ;   }      private static   tom.gom.adt.rule.types.Condition  tom_append_list_CondOr( tom.gom.adt.rule.types.Condition  l1,  tom.gom.adt.rule.types.Condition  l2) {     if( l1.isEmptyCondOr() ) {       return l2;     } else if( l2.isEmptyCondOr() ) {       return l1;     } else if( ((l1 instanceof tom.gom.adt.rule.types.condition.ConsCondOr) || (l1 instanceof tom.gom.adt.rule.types.condition.EmptyCondOr)) ) {       if( (( ((l1 instanceof tom.gom.adt.rule.types.condition.ConsCondOr) || (l1 instanceof tom.gom.adt.rule.types.condition.EmptyCondOr)) )? l1.getTailCondOr() : tom.gom.adt.rule.types.condition.EmptyCondOr.make() ).isEmptyCondOr() ) {         return  tom.gom.adt.rule.types.condition.ConsCondOr.make((( ((l1 instanceof tom.gom.adt.rule.types.condition.ConsCondOr) || (l1 instanceof tom.gom.adt.rule.types.condition.EmptyCondOr)) )? l1.getHeadCondOr() :l1),l2) ;       } else {         return  tom.gom.adt.rule.types.condition.ConsCondOr.make((( ((l1 instanceof tom.gom.adt.rule.types.condition.ConsCondOr) || (l1 instanceof tom.gom.adt.rule.types.condition.EmptyCondOr)) )? l1.getHeadCondOr() :l1),tom_append_list_CondOr((( ((l1 instanceof tom.gom.adt.rule.types.condition.ConsCondOr) || (l1 instanceof tom.gom.adt.rule.types.condition.EmptyCondOr)) )? l1.getTailCondOr() : tom.gom.adt.rule.types.condition.EmptyCondOr.make() ),l2)) ;       }     } else {       return  tom.gom.adt.rule.types.condition.ConsCondOr.make(l1,l2) ;     }   }   private static   tom.gom.adt.rule.types.Condition  tom_get_slice_CondOr( tom.gom.adt.rule.types.Condition  begin,  tom.gom.adt.rule.types.Condition  end, tom.gom.adt.rule.types.Condition  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyCondOr()  ||  (end== tom.gom.adt.rule.types.condition.EmptyCondOr.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.rule.types.condition.ConsCondOr.make((( ((begin instanceof tom.gom.adt.rule.types.condition.ConsCondOr) || (begin instanceof tom.gom.adt.rule.types.condition.EmptyCondOr)) )? begin.getHeadCondOr() :begin),( tom.gom.adt.rule.types.Condition )tom_get_slice_CondOr((( ((begin instanceof tom.gom.adt.rule.types.condition.ConsCondOr) || (begin instanceof tom.gom.adt.rule.types.condition.EmptyCondOr)) )? begin.getTailCondOr() : tom.gom.adt.rule.types.condition.EmptyCondOr.make() ),end,tail)) ;   }    /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Sequence) )) {       if(( ((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Sequence(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end == null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin):new tom.library.sl.Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)) );   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) ); }   



  private ModuleList moduleList;

  public RuleExpander(ModuleList data) {
    this.moduleList = data;
  }

  public HookDeclList expandRules(String ruleCode) {
    RuleLexer lexer = new RuleLexer(new ANTLRStringStream(ruleCode));
    CommonTokenStream tokens = new CommonTokenStream(lexer);
    RuleParser parser = new RuleParser(tokens);
    parser.setTreeAdaptor(new RuleAdaptor());
    RuleList rulelist =  tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ;
    try {
      RuleTree ast = (RuleTree) parser.ruleset().getTree();
      rulelist = (RuleList) ast.getTerm();
    } catch (org.antlr.runtime.RecognitionException e) {
      getLogger().log(Level.SEVERE, "Cannot parse rules",
          new Object[]{});
      return  tom.gom.adt.gom.types.hookdecllist.EmptyConcHookDecl.make() ;
    }
    return expand(rulelist);
  }

  protected HookDeclList expand(RuleList rulelist) {
    HookDeclList hookList =  tom.gom.adt.gom.types.hookdecllist.EmptyConcHookDecl.make() ;
    /* collect all rules for a given symbol */
    Map rulesForOperator = new HashMap();
    {if ( (rulelist instanceof tom.gom.adt.rule.types.RuleList) ) {{  tom.gom.adt.rule.types.RuleList  tomMatch502NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.RuleList )rulelist);if ( ((tomMatch502NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rulelist.ConsRuleList) || (tomMatch502NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rulelist.EmptyRuleList)) ) {{  tom.gom.adt.rule.types.RuleList  tomMatch502NameNumber_freshVar_0=tomMatch502NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.RuleList  tomMatch502NameNumber_begin_2=tomMatch502NameNumber_freshVar_0;{  tom.gom.adt.rule.types.RuleList  tomMatch502NameNumber_end_3=tomMatch502NameNumber_freshVar_0;do {{{  tom.gom.adt.rule.types.RuleList  tomMatch502NameNumber_freshVar_1=tomMatch502NameNumber_end_3;if (!( tomMatch502NameNumber_freshVar_1.isEmptyRuleList() )) {{ boolean tomMatch502NameNumber_freshVar_8= false ;{  tom.gom.adt.rule.types.Term  tomMatch502NameNumber_freshVar_6= null ;if ( ( tomMatch502NameNumber_freshVar_1.getHeadRuleList()  instanceof tom.gom.adt.rule.types.rule.Rule) ) {{tomMatch502NameNumber_freshVar_8= true ;tomMatch502NameNumber_freshVar_6=  tomMatch502NameNumber_freshVar_1.getHeadRuleList() .getlhs() ;}} else {if ( ( tomMatch502NameNumber_freshVar_1.getHeadRuleList()  instanceof tom.gom.adt.rule.types.rule.ConditionalRule) ) {{tomMatch502NameNumber_freshVar_8= true ;tomMatch502NameNumber_freshVar_6=  tomMatch502NameNumber_freshVar_1.getHeadRuleList() .getlhs() ;}}}if ((tomMatch502NameNumber_freshVar_8 ==  true )) {if ( (tomMatch502NameNumber_freshVar_6 instanceof tom.gom.adt.rule.types.term.Appl) ) {{  String  tomMatch502NameNumber_freshVar_7= tomMatch502NameNumber_freshVar_6.getsymbol() ;{  tom.gom.adt.rule.types.Rule  tom_rl= tomMatch502NameNumber_freshVar_1.getHeadRuleList() ;{  tom.gom.adt.rule.types.RuleList  tomMatch502NameNumber_freshVar_4= tomMatch502NameNumber_freshVar_1.getTailRuleList() ;if ( true ) {

        OperatorDecl decl = getOperatorDecl(tomMatch502NameNumber_freshVar_7);
        if(null!=decl) {
          RuleList rules = (RuleList) rulesForOperator.get(decl);
          if (null == rules) {
            rulesForOperator.put(decl, tom.gom.adt.rule.types.rulelist.ConsRuleList.make(tom_rl, tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ) );
          } else {
            rulesForOperator.put(decl,tom_append_list_RuleList(rules, tom.gom.adt.rule.types.rulelist.ConsRuleList.make(tom_rl, tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ) ));
          }
        } else {
          getLogger().log(Level.WARNING, "Discard rule \"{0}\"",
              new Object[]{/*XXX:prettyprint*/(tom_rl)});
        }
      }}}}}}}}}}if ( tomMatch502NameNumber_end_3.isEmptyRuleList() ) {tomMatch502NameNumber_end_3=tomMatch502NameNumber_begin_2;} else {tomMatch502NameNumber_end_3= tomMatch502NameNumber_end_3.getTailRuleList() ;}}} while(!( (tomMatch502NameNumber_end_3==tomMatch502NameNumber_begin_2) ));}}}}}}}

    /* Generate a construction hook for each constructor */
    Iterator it = rulesForOperator.keySet().iterator();
    while (it.hasNext()) {
      OperatorDecl opDecl = (OperatorDecl) it.next();
      TypedProduction prod = opDecl.getProd();
      {if ( (prod instanceof tom.gom.adt.gom.types.TypedProduction) ) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch503NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.TypedProduction )prod);if ( (tomMatch503NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.typedproduction.Slots) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch503NameNumber_freshVar_0= tomMatch503NameNumberfreshSubject_1.getSlots() ;if ( true ) {


          SlotList args = opArgs(tomMatch503NameNumber_freshVar_0,1);
          String hookCode =
            generateHookCode(args, (RuleList) rulesForOperator.get(opDecl));
          hookList =
            tom_append_list_ConcHookDecl(hookList, tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( tom.gom.adt.gom.types.hookdecl.MakeHookDecl.make( tom.gom.adt.gom.types.decl.CutOperator.make(opDecl) , args,  tom.gom.adt.code.types.code.Code.make(hookCode) ,  tom.gom.adt.gom.types.hookkind.HookKind.make("rules") ) , tom.gom.adt.gom.types.hookdecllist.EmptyConcHookDecl.make() ) )
;
        }}}}}if ( (prod instanceof tom.gom.adt.gom.types.TypedProduction) ) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch503NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.TypedProduction )prod);if ( (tomMatch503NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.typedproduction.Variadic) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch503NameNumber_freshVar_1= tomMatch503NameNumberfreshSubject_1.getSort() ;if ( true ) {


          RuleList rules = (RuleList) rulesForOperator.get(opDecl);
          /* Handle rules for empty: there should be at least one */
          int count = 0;
          RuleList nonEmptyRules = rules;
          {if ( (rules instanceof tom.gom.adt.rule.types.RuleList) ) {{  tom.gom.adt.rule.types.RuleList  tomMatch504NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.RuleList )rules);if ( ((tomMatch504NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rulelist.ConsRuleList) || (tomMatch504NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rulelist.EmptyRuleList)) ) {{  tom.gom.adt.rule.types.RuleList  tomMatch504NameNumber_freshVar_0=tomMatch504NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.RuleList  tomMatch504NameNumber_begin_2=tomMatch504NameNumber_freshVar_0;{  tom.gom.adt.rule.types.RuleList  tomMatch504NameNumber_end_3=tomMatch504NameNumber_freshVar_0;do {{{  tom.gom.adt.rule.types.RuleList  tomMatch504NameNumber_freshVar_1=tomMatch504NameNumber_end_3;if (!( tomMatch504NameNumber_freshVar_1.isEmptyRuleList() )) {{ boolean tomMatch504NameNumber_freshVar_9= false ;{  tom.gom.adt.rule.types.Term  tomMatch504NameNumber_freshVar_6= null ;if ( ( tomMatch504NameNumber_freshVar_1.getHeadRuleList()  instanceof tom.gom.adt.rule.types.rule.Rule) ) {{tomMatch504NameNumber_freshVar_9= true ;tomMatch504NameNumber_freshVar_6=  tomMatch504NameNumber_freshVar_1.getHeadRuleList() .getlhs() ;}} else {if ( ( tomMatch504NameNumber_freshVar_1.getHeadRuleList()  instanceof tom.gom.adt.rule.types.rule.ConditionalRule) ) {{tomMatch504NameNumber_freshVar_9= true ;tomMatch504NameNumber_freshVar_6=  tomMatch504NameNumber_freshVar_1.getHeadRuleList() .getlhs() ;}}}if ((tomMatch504NameNumber_freshVar_9 ==  true )) {if ( (tomMatch504NameNumber_freshVar_6 instanceof tom.gom.adt.rule.types.term.Appl) ) {{  tom.gom.adt.rule.types.TermList  tomMatch504NameNumber_freshVar_7= tomMatch504NameNumber_freshVar_6.getargs() ;if ( ((tomMatch504NameNumber_freshVar_7 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch504NameNumber_freshVar_7 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {{  tom.gom.adt.rule.types.TermList  tomMatch504NameNumber_freshVar_8=tomMatch504NameNumber_freshVar_7;if ( tomMatch504NameNumber_freshVar_8.isEmptyTermList() ) {{  tom.gom.adt.rule.types.RuleList  tomMatch504NameNumber_freshVar_4= tomMatch504NameNumber_freshVar_1.getTailRuleList() ;if ( true ) {



              count++;
              nonEmptyRules = tom_append_list_RuleList(tom_get_slice_RuleList(tomMatch504NameNumber_begin_2,tomMatch504NameNumber_end_3, tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ),tom_append_list_RuleList(tomMatch504NameNumber_freshVar_4, tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ));
              String hookCode =
                generateHookCode( tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() , tom.gom.adt.rule.types.rulelist.ConsRuleList.make( tomMatch504NameNumber_freshVar_1.getHeadRuleList() , tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ) );
              hookList =
                tom_append_list_ConcHookDecl(hookList, tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( tom.gom.adt.gom.types.hookdecl.MakeHookDecl.make( tom.gom.adt.gom.types.decl.CutOperator.make(opDecl) ,  tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ,  tom.gom.adt.code.types.code.Code.make(hookCode) ,  tom.gom.adt.gom.types.hookkind.HookKind.make("rules") ) , tom.gom.adt.gom.types.hookdecllist.EmptyConcHookDecl.make() ) )
;
            }}}}}}}}}}}}if ( tomMatch504NameNumber_end_3.isEmptyRuleList() ) {tomMatch504NameNumber_end_3=tomMatch504NameNumber_begin_2;} else {tomMatch504NameNumber_end_3= tomMatch504NameNumber_end_3.getTailRuleList() ;}}} while(!( (tomMatch504NameNumber_end_3==tomMatch504NameNumber_begin_2) ));}}}}}}}

          if (count>1) {
            getLogger().log(Level.WARNING, "Multiple rules for empty {0}",
                new Object[]{ opDecl.getName() });
          }
          /* Then handle rules for insert */
          if (!nonEmptyRules.isEmptyRuleList()) {
            SlotList args =  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( tom.gom.adt.gom.types.slot.Slot.make("head", tomMatch503NameNumber_freshVar_1) , tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( tom.gom.adt.gom.types.slot.Slot.make("tail", opDecl.getSort()) , tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ) ) ;
            String hookCode =
              generateVariadicHookCode(args, nonEmptyRules);
            hookList =
              tom_append_list_ConcHookDecl(hookList, tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( tom.gom.adt.gom.types.hookdecl.MakeHookDecl.make( tom.gom.adt.gom.types.decl.CutOperator.make(opDecl) , args,  tom.gom.adt.code.types.code.Code.make(hookCode) ,  tom.gom.adt.gom.types.hookkind.HookKind.make("rules") ) , tom.gom.adt.gom.types.hookdecllist.EmptyConcHookDecl.make() ) )
;
          }
        }}}}}}

    }
    return hookList;
  }

  private String generateHookCode(SlotList slotList, RuleList ruleList) {
    StringBuilder output = new StringBuilder();
    if(slotList.isEmptyConcSlot()) {
      while(!ruleList.isEmptyRuleList()) {
        Rule rule = ruleList.getHeadRuleList();
        ruleList = ruleList.getTailRuleList();
        {if ( (rule instanceof tom.gom.adt.rule.types.Rule) ) {{  tom.gom.adt.rule.types.Rule  tomMatch505NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Rule )rule);if ( (tomMatch505NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rule.Rule) ) {{  tom.gom.adt.rule.types.Term  tomMatch505NameNumber_freshVar_0= tomMatch505NameNumberfreshSubject_1.getlhs() ;{  tom.gom.adt.rule.types.Term  tomMatch505NameNumber_freshVar_1= tomMatch505NameNumberfreshSubject_1.getrhs() ;if ( (tomMatch505NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.term.Appl) ) {if ( true ) {

            output.append("    return `");
            genTerm(tomMatch505NameNumber_freshVar_1,output);
            output.append(";\n");
          }}}}}}}if ( (rule instanceof tom.gom.adt.rule.types.Rule) ) {{  tom.gom.adt.rule.types.Rule  tomMatch505NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Rule )rule);if ( (tomMatch505NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rule.ConditionalRule) ) {{  tom.gom.adt.rule.types.Term  tomMatch505NameNumber_freshVar_2= tomMatch505NameNumberfreshSubject_1.getlhs() ;{  tom.gom.adt.rule.types.Term  tomMatch505NameNumber_freshVar_3= tomMatch505NameNumberfreshSubject_1.getrhs() ;{  tom.gom.adt.rule.types.Condition  tomMatch505NameNumber_freshVar_4= tomMatch505NameNumberfreshSubject_1.getcond() ;if ( (tomMatch505NameNumber_freshVar_2 instanceof tom.gom.adt.rule.types.term.Appl) ) {if ( true ) {

            output.append("    if `(");
            genCondition(tomMatch505NameNumber_freshVar_4,output);
            output.append(") { return `");
            genTerm(tomMatch505NameNumber_freshVar_3,output);
            output.append("; }\n");
          }}}}}}}}}

      }

    } else {
      output.append("    %match(");
      matchArgs(slotList,output,1);
      output.append(") {\n");
      while(!ruleList.isEmptyRuleList()) {
        Rule rule = ruleList.getHeadRuleList();
        ruleList = ruleList.getTailRuleList();
        {if ( (rule instanceof tom.gom.adt.rule.types.Rule) ) {{  tom.gom.adt.rule.types.Rule  tomMatch506NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Rule )rule);if ( (tomMatch506NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rule.Rule) ) {{  tom.gom.adt.rule.types.Term  tomMatch506NameNumber_freshVar_0= tomMatch506NameNumberfreshSubject_1.getlhs() ;{  tom.gom.adt.rule.types.Term  tomMatch506NameNumber_freshVar_1= tomMatch506NameNumberfreshSubject_1.getrhs() ;if ( (tomMatch506NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.term.Appl) ) {{  tom.gom.adt.rule.types.TermList  tomMatch506NameNumber_freshVar_2= tomMatch506NameNumber_freshVar_0.getargs() ;if ( true ) {

            genTermList(tomMatch506NameNumber_freshVar_2,output);
            output.append(" -> { return `");
            genTerm(tomMatch506NameNumber_freshVar_1,output);
            output.append("; }\n");
          }}}}}}}}if ( (rule instanceof tom.gom.adt.rule.types.Rule) ) {{  tom.gom.adt.rule.types.Rule  tomMatch506NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Rule )rule);if ( (tomMatch506NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rule.ConditionalRule) ) {{  tom.gom.adt.rule.types.Term  tomMatch506NameNumber_freshVar_3= tomMatch506NameNumberfreshSubject_1.getlhs() ;{  tom.gom.adt.rule.types.Term  tomMatch506NameNumber_freshVar_4= tomMatch506NameNumberfreshSubject_1.getrhs() ;{  tom.gom.adt.rule.types.Condition  tomMatch506NameNumber_freshVar_5= tomMatch506NameNumberfreshSubject_1.getcond() ;if ( (tomMatch506NameNumber_freshVar_3 instanceof tom.gom.adt.rule.types.term.Appl) ) {{  tom.gom.adt.rule.types.TermList  tomMatch506NameNumber_freshVar_6= tomMatch506NameNumber_freshVar_3.getargs() ;if ( true ) {

            genTermList(tomMatch506NameNumber_freshVar_6,output);
            output.append(" -> { if `(");
            genCondition(tomMatch506NameNumber_freshVar_5,output);
            output.append(") { return `");
            genTerm(tomMatch506NameNumber_freshVar_4,output);
            output.append("; } }\n");
          }}}}}}}}}}

      }
      output.append("    }\n");
    }
    return output.toString();
  }

  private String generateVariadicHookCode(SlotList slotList, RuleList ruleList) {
    StringBuilder output = new StringBuilder();
    output.append("    %match(realMake(head,tail)) {\n");
    while(!ruleList.isEmptyRuleList()) {
      Rule rule = ruleList.getHeadRuleList();
      ruleList = ruleList.getTailRuleList();
      {if ( (rule instanceof tom.gom.adt.rule.types.Rule) ) {{  tom.gom.adt.rule.types.Rule  tomMatch507NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Rule )rule);{ boolean tomMatch507NameNumber_freshVar_7= false ;{  tom.gom.adt.rule.types.Term  tomMatch507NameNumber_freshVar_0= null ;if ( (tomMatch507NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rule.Rule) ) {{tomMatch507NameNumber_freshVar_7= true ;tomMatch507NameNumber_freshVar_0= tomMatch507NameNumberfreshSubject_1.getlhs() ;}} else {if ( (tomMatch507NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rule.ConditionalRule) ) {{tomMatch507NameNumber_freshVar_7= true ;tomMatch507NameNumber_freshVar_0= tomMatch507NameNumberfreshSubject_1.getlhs() ;}}}if ((tomMatch507NameNumber_freshVar_7 ==  true )) {if ( (tomMatch507NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.term.Appl) ) {{  String  tomMatch507NameNumber_freshVar_1= tomMatch507NameNumber_freshVar_0.getsymbol() ;{  tom.gom.adt.rule.types.TermList  tomMatch507NameNumber_freshVar_2= tomMatch507NameNumber_freshVar_0.getargs() ;if ( ((tomMatch507NameNumber_freshVar_2 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch507NameNumber_freshVar_2 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {{  tom.gom.adt.rule.types.TermList  tomMatch507NameNumber_freshVar_3=tomMatch507NameNumber_freshVar_2;if (!( tomMatch507NameNumber_freshVar_3.isEmptyTermList() )) {{ boolean tomMatch507NameNumber_freshVar_6= false ;if ( ( tomMatch507NameNumber_freshVar_3.getHeadTermList()  instanceof tom.gom.adt.rule.types.term.UnnamedVarStar) ) {tomMatch507NameNumber_freshVar_6= true ;} else {if ( ( tomMatch507NameNumber_freshVar_3.getHeadTermList()  instanceof tom.gom.adt.rule.types.term.VarStar) ) {tomMatch507NameNumber_freshVar_6= true ;}}if ((tomMatch507NameNumber_freshVar_6 ==  true )) {{  tom.gom.adt.rule.types.Term  tom_var= tomMatch507NameNumber_freshVar_3.getHeadTermList() ;{  tom.gom.adt.rule.types.TermList  tomMatch507NameNumber_freshVar_4= tomMatch507NameNumber_freshVar_3.getTailTermList() ;if ( true ) {

            String varname = "_";
            {if ( (tom_var instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch508NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom_var);if ( (tomMatch508NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.VarStar) ) {{  String  tomMatch508NameNumber_freshVar_0= tomMatch508NameNumberfreshSubject_1.getname() ;if ( true ) {
 varname = tomMatch508NameNumber_freshVar_0; }}}}}}
 
            getLogger().log(Level.WARNING, GomMessage.variadicRuleStartingWithStar.getMessage(),
                    new Object[]{(tomMatch507NameNumber_freshVar_1),varname});
        }}}}}}}}}}}}}}}}}{if ( (rule instanceof tom.gom.adt.rule.types.Rule) ) {{  tom.gom.adt.rule.types.Rule  tomMatch509NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Rule )rule);if ( (tomMatch509NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rule.Rule) ) {{  tom.gom.adt.rule.types.Term  tomMatch509NameNumber_freshVar_0= tomMatch509NameNumberfreshSubject_1.getlhs() ;{  tom.gom.adt.rule.types.Term  tomMatch509NameNumber_freshVar_1= tomMatch509NameNumberfreshSubject_1.getrhs() ;if ( true ) {



          genTerm(tomMatch509NameNumber_freshVar_0,output);
          output.append(" -> { return `");
          genTerm(tomMatch509NameNumber_freshVar_1,output);
          output.append("; }\n");
        }}}}}}if ( (rule instanceof tom.gom.adt.rule.types.Rule) ) {{  tom.gom.adt.rule.types.Rule  tomMatch509NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Rule )rule);if ( (tomMatch509NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rule.ConditionalRule) ) {{  tom.gom.adt.rule.types.Term  tomMatch509NameNumber_freshVar_2= tomMatch509NameNumberfreshSubject_1.getlhs() ;{  tom.gom.adt.rule.types.Term  tomMatch509NameNumber_freshVar_3= tomMatch509NameNumberfreshSubject_1.getrhs() ;{  tom.gom.adt.rule.types.Condition  tomMatch509NameNumber_freshVar_4= tomMatch509NameNumberfreshSubject_1.getcond() ;if ( true ) {

          genTerm(tomMatch509NameNumber_freshVar_2,output);
          output.append(" -> { if `(");
          genCondition(tomMatch509NameNumber_freshVar_4,output);
          output.append(") { return `");
          genTerm(tomMatch509NameNumber_freshVar_3,output);
          output.append("; } }\n");
        }}}}}}}}

    }
    output.append("    }\n");
    return output.toString();
  }
  private void genTermList(TermList list, StringBuilder output) {
    {if ( (list instanceof tom.gom.adt.rule.types.TermList) ) {{  tom.gom.adt.rule.types.TermList  tomMatch510NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.TermList )list);if ( ((tomMatch510NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch510NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {{  tom.gom.adt.rule.types.TermList  tomMatch510NameNumber_freshVar_0=tomMatch510NameNumberfreshSubject_1;if ( tomMatch510NameNumber_freshVar_0.isEmptyTermList() ) {if ( true ) {
 return; }}}}}}if ( (list instanceof tom.gom.adt.rule.types.TermList) ) {{  tom.gom.adt.rule.types.TermList  tomMatch510NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.TermList )list);if ( ((tomMatch510NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch510NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {{  tom.gom.adt.rule.types.TermList  tomMatch510NameNumber_freshVar_1=tomMatch510NameNumberfreshSubject_1;if (!( tomMatch510NameNumber_freshVar_1.isEmptyTermList() )) {{  tom.gom.adt.rule.types.TermList  tomMatch510NameNumber_freshVar_2= tomMatch510NameNumber_freshVar_1.getTailTermList() ;{  tom.gom.adt.rule.types.TermList  tom_t=tomMatch510NameNumber_freshVar_2;if ( true ) {

        genTerm( tomMatch510NameNumber_freshVar_1.getHeadTermList() ,output);
        if (!tom_t.isEmptyTermList()) {
          output.append(", ");
        }
        genTermList(tom_t,output);
      }}}}}}}}}

  }

  private void genTerm(Term termArg, StringBuilder output) {
    {if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch511NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch511NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.Appl) ) {{  String  tomMatch511NameNumber_freshVar_0= tomMatch511NameNumberfreshSubject_1.getsymbol() ;{  tom.gom.adt.rule.types.TermList  tomMatch511NameNumber_freshVar_1= tomMatch511NameNumberfreshSubject_1.getargs() ;if ( true ) {

        output.append(tomMatch511NameNumber_freshVar_0);
        output.append("(");
        genTermList(tomMatch511NameNumber_freshVar_1, output);
        output.append(")");
      }}}}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch511NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch511NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.At) ) {{  String  tomMatch511NameNumber_freshVar_2= tomMatch511NameNumberfreshSubject_1.getname() ;{  tom.gom.adt.rule.types.Term  tomMatch511NameNumber_freshVar_3= tomMatch511NameNumberfreshSubject_1.getterm() ;if ( true ) {

        output.append(tomMatch511NameNumber_freshVar_2);
        output.append("@");
        genTerm(tomMatch511NameNumber_freshVar_3,output);
      }}}}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch511NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch511NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.UnnamedVar) ) {if ( true ) {

        output.append("_");
      }}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch511NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch511NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.UnnamedVarStar) ) {if ( true ) {

        output.append("_*");
      }}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch511NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch511NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.Var) ) {{  String  tomMatch511NameNumber_freshVar_4= tomMatch511NameNumberfreshSubject_1.getname() ;if ( true ) {

        output.append(tomMatch511NameNumber_freshVar_4);
      }}}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch511NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch511NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.VarStar) ) {{  String  tomMatch511NameNumber_freshVar_5= tomMatch511NameNumberfreshSubject_1.getname() ;if ( true ) {

        output.append(tomMatch511NameNumber_freshVar_5);
        output.append("*");
      }}}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch511NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch511NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.BuiltinInt) ) {{  int  tomMatch511NameNumber_freshVar_6= tomMatch511NameNumberfreshSubject_1.geti() ;if ( true ) {

        output.append(tomMatch511NameNumber_freshVar_6);
      }}}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch511NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch511NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.BuiltinString) ) {{  String  tomMatch511NameNumber_freshVar_7= tomMatch511NameNumberfreshSubject_1.gets() ;if ( true ) {

        output.append(tomMatch511NameNumber_freshVar_7);
      }}}}}}

  }

  private void genCondition(Condition cond, StringBuilder output) {
    {if ( (cond instanceof tom.gom.adt.rule.types.Condition) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if ( (tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.CondTerm) ) {{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_0= tomMatch512NameNumberfreshSubject_1.gett() ;if ( true ) {

        genTerm(tomMatch512NameNumber_freshVar_0,output);
      }}}}}if ( (cond instanceof tom.gom.adt.rule.types.Condition) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if ( (tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.CondEquals) ) {{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_1= tomMatch512NameNumberfreshSubject_1.gett1() ;{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_2= tomMatch512NameNumberfreshSubject_1.gett2() ;if ( true ) {

        output.append("(");
        genTerm(tomMatch512NameNumber_freshVar_1,output);
        output.append(" == ");
        genTerm(tomMatch512NameNumber_freshVar_2,output);
        output.append(")");
      }}}}}}if ( (cond instanceof tom.gom.adt.rule.types.Condition) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if ( (tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.CondNotEquals) ) {{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_3= tomMatch512NameNumberfreshSubject_1.gett1() ;{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_4= tomMatch512NameNumberfreshSubject_1.gett2() ;if ( true ) {

        output.append("(");
        genTerm(tomMatch512NameNumber_freshVar_3,output);
        output.append(" != ");
        genTerm(tomMatch512NameNumber_freshVar_4,output);
        output.append(")");
      }}}}}}if ( (cond instanceof tom.gom.adt.rule.types.Condition) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if ( (tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.CondLessEquals) ) {{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_5= tomMatch512NameNumberfreshSubject_1.gett1() ;{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_6= tomMatch512NameNumberfreshSubject_1.gett2() ;if ( true ) {

        output.append("(");
        genTerm(tomMatch512NameNumber_freshVar_5,output);
        output.append(" <= ");
        genTerm(tomMatch512NameNumber_freshVar_6,output);
        output.append(")");
      }}}}}}if ( (cond instanceof tom.gom.adt.rule.types.Condition) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if ( (tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.CondLessThan) ) {{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_7= tomMatch512NameNumberfreshSubject_1.gett1() ;{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_8= tomMatch512NameNumberfreshSubject_1.gett2() ;if ( true ) {

        output.append("(");
        genTerm(tomMatch512NameNumber_freshVar_7,output);
        output.append(" < ");
        genTerm(tomMatch512NameNumber_freshVar_8,output);
        output.append(")");
      }}}}}}if ( (cond instanceof tom.gom.adt.rule.types.Condition) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if ( (tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.CondGreaterEquals) ) {{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_9= tomMatch512NameNumberfreshSubject_1.gett1() ;{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_10= tomMatch512NameNumberfreshSubject_1.gett2() ;if ( true ) {

        output.append("(");
        genTerm(tomMatch512NameNumber_freshVar_9,output);
        output.append(" >= ");
        genTerm(tomMatch512NameNumber_freshVar_10,output);
        output.append(")");
      }}}}}}if ( (cond instanceof tom.gom.adt.rule.types.Condition) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if ( (tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.CondGreaterThan) ) {{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_11= tomMatch512NameNumberfreshSubject_1.gett1() ;{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_12= tomMatch512NameNumberfreshSubject_1.gett2() ;if ( true ) {

        output.append("(");
        genTerm(tomMatch512NameNumber_freshVar_11,output);
        output.append(" > ");
        genTerm(tomMatch512NameNumber_freshVar_12,output);
        output.append(")");
      }}}}}}if ( (cond instanceof tom.gom.adt.rule.types.Condition) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if ( (tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.CondMethod) ) {{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_13= tomMatch512NameNumberfreshSubject_1.gett1() ;{  String  tomMatch512NameNumber_freshVar_14= tomMatch512NameNumberfreshSubject_1.getname() ;{  tom.gom.adt.rule.types.Term  tomMatch512NameNumber_freshVar_15= tomMatch512NameNumberfreshSubject_1.gett2() ;if ( true ) {

        genTerm(tomMatch512NameNumber_freshVar_13,output);
        output.append(".");
        output.append(tomMatch512NameNumber_freshVar_14);
        output.append("(");
        genTerm(tomMatch512NameNumber_freshVar_15,output);
        output.append(")");
      }}}}}}}if ( (cond instanceof tom.gom.adt.rule.types.Condition) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if ( ((tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.ConsCondAnd) || (tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.EmptyCondAnd)) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumber_freshVar_16=tomMatch512NameNumberfreshSubject_1;if (!( (  tomMatch512NameNumber_freshVar_16.isEmptyCondAnd()  ||  (tomMatch512NameNumber_freshVar_16== tom.gom.adt.rule.types.condition.EmptyCondAnd.make() )  ) )) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumber_freshVar_17=(( ((tomMatch512NameNumber_freshVar_16 instanceof tom.gom.adt.rule.types.condition.ConsCondAnd) || (tomMatch512NameNumber_freshVar_16 instanceof tom.gom.adt.rule.types.condition.EmptyCondAnd)) )?( tomMatch512NameNumber_freshVar_16.getTailCondAnd() ):( tom.gom.adt.rule.types.condition.EmptyCondAnd.make() ));{  tom.gom.adt.rule.types.Condition  tom_tail=tomMatch512NameNumber_freshVar_17;if ( true ) {

        output.append("(");
        genCondition((( ((tomMatch512NameNumber_freshVar_16 instanceof tom.gom.adt.rule.types.condition.ConsCondAnd) || (tomMatch512NameNumber_freshVar_16 instanceof tom.gom.adt.rule.types.condition.EmptyCondAnd)) )?( tomMatch512NameNumber_freshVar_16.getHeadCondAnd() ):(tomMatch512NameNumber_freshVar_16)),output);
        if(tom_tail !=  tom.gom.adt.rule.types.condition.EmptyCondAnd.make() ) {
           output.append(" && ");
           genCondition(tom_tail,output);
        }
        output.append(")");
      }}}}}}}}if ( (cond instanceof tom.gom.adt.rule.types.Condition) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if ( ((tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.ConsCondOr) || (tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.EmptyCondOr)) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumber_freshVar_19=tomMatch512NameNumberfreshSubject_1;if (!( (  tomMatch512NameNumber_freshVar_19.isEmptyCondOr()  ||  (tomMatch512NameNumber_freshVar_19== tom.gom.adt.rule.types.condition.EmptyCondOr.make() )  ) )) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumber_freshVar_20=(( ((tomMatch512NameNumber_freshVar_19 instanceof tom.gom.adt.rule.types.condition.ConsCondOr) || (tomMatch512NameNumber_freshVar_19 instanceof tom.gom.adt.rule.types.condition.EmptyCondOr)) )?( tomMatch512NameNumber_freshVar_19.getTailCondOr() ):( tom.gom.adt.rule.types.condition.EmptyCondOr.make() ));{  tom.gom.adt.rule.types.Condition  tom_tail=tomMatch512NameNumber_freshVar_20;if ( true ) {

        output.append("(");
        genCondition((( ((tomMatch512NameNumber_freshVar_19 instanceof tom.gom.adt.rule.types.condition.ConsCondOr) || (tomMatch512NameNumber_freshVar_19 instanceof tom.gom.adt.rule.types.condition.EmptyCondOr)) )?( tomMatch512NameNumber_freshVar_19.getHeadCondOr() ):(tomMatch512NameNumber_freshVar_19)),output);
        if(tom_tail !=  tom.gom.adt.rule.types.condition.EmptyCondOr.make() ) {
          output.append(" || ");
          genCondition(tom_tail,output);
        }
        output.append(")");
      }}}}}}}}if ( (cond instanceof tom.gom.adt.rule.types.Condition) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Condition )cond);if ( (tomMatch512NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.condition.CondNot) ) {{  tom.gom.adt.rule.types.Condition  tomMatch512NameNumber_freshVar_22= tomMatch512NameNumberfreshSubject_1.getc() ;if ( true ) {

        output.append("!(");
        genCondition(tomMatch512NameNumber_freshVar_22,output);
        output.append(")");
      }}}}}}

  }

  private void matchArgs(SlotList sl, StringBuilder output, int count) {
    {if ( (sl instanceof tom.gom.adt.gom.types.SlotList) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch513NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SlotList )sl);if ( ((tomMatch513NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.slotlist.ConsConcSlot) || (tomMatch513NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.slotlist.EmptyConcSlot)) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch513NameNumber_freshVar_0=tomMatch513NameNumberfreshSubject_1;if ( tomMatch513NameNumber_freshVar_0.isEmptyConcSlot() ) {if ( true ) {
 return; }}}}}}if ( (sl instanceof tom.gom.adt.gom.types.SlotList) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch513NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SlotList )sl);if ( ((tomMatch513NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.slotlist.ConsConcSlot) || (tomMatch513NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.slotlist.EmptyConcSlot)) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch513NameNumber_freshVar_1=tomMatch513NameNumberfreshSubject_1;if (!( tomMatch513NameNumber_freshVar_1.isEmptyConcSlot() )) {if ( ( tomMatch513NameNumber_freshVar_1.getHeadConcSlot()  instanceof tom.gom.adt.gom.types.slot.Slot) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch513NameNumber_freshVar_4=  tomMatch513NameNumber_freshVar_1.getHeadConcSlot() .getSort() ;{  tom.gom.adt.gom.types.SortDecl  tom_sort=tomMatch513NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SlotList  tomMatch513NameNumber_freshVar_2= tomMatch513NameNumber_freshVar_1.getTailConcSlot() ;{  tom.gom.adt.gom.types.SlotList  tom_t=tomMatch513NameNumber_freshVar_2;if ( true ) {{if ( (tom_sort instanceof tom.gom.adt.gom.types.SortDecl) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch514NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SortDecl )tom_sort);{ boolean tomMatch514NameNumber_freshVar_1= false ;{  String  tomMatch514NameNumber_freshVar_0= "" ;if ( (tomMatch514NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{tomMatch514NameNumber_freshVar_1= true ;tomMatch514NameNumber_freshVar_0= tomMatch514NameNumberfreshSubject_1.getName() ;}} else {if ( (tomMatch514NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.sortdecl.BuiltinSortDecl) ) {{tomMatch514NameNumber_freshVar_1= true ;tomMatch514NameNumber_freshVar_0= tomMatch514NameNumberfreshSubject_1.getName() ;}}}if ((tomMatch514NameNumber_freshVar_1 ==  true )) {if ( true ) {



            output.append(tomMatch514NameNumber_freshVar_0);
            output.append(" arg_"+count);
          }}}}}}}

        if (!tom_t.isEmptyConcSlot()) {
          output.append(", ");
        }
        matchArgs(tom_t,output,count+1);
      }}}}}}}}}}}}

  }

  private SlotList opArgs(SlotList slots, int count) {
    {if ( (slots instanceof tom.gom.adt.gom.types.SlotList) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch515NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SlotList )slots);if ( ((tomMatch515NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.slotlist.ConsConcSlot) || (tomMatch515NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.slotlist.EmptyConcSlot)) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch515NameNumber_freshVar_0=tomMatch515NameNumberfreshSubject_1;if ( tomMatch515NameNumber_freshVar_0.isEmptyConcSlot() ) {if ( true ) {

        return  tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ;
      }}}}}}if ( (slots instanceof tom.gom.adt.gom.types.SlotList) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch515NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SlotList )slots);if ( ((tomMatch515NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.slotlist.ConsConcSlot) || (tomMatch515NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.slotlist.EmptyConcSlot)) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch515NameNumber_freshVar_1=tomMatch515NameNumberfreshSubject_1;if (!( tomMatch515NameNumber_freshVar_1.isEmptyConcSlot() )) {if ( ( tomMatch515NameNumber_freshVar_1.getHeadConcSlot()  instanceof tom.gom.adt.gom.types.slot.Slot) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch515NameNumber_freshVar_4=  tomMatch515NameNumber_freshVar_1.getHeadConcSlot() .getSort() ;{  tom.gom.adt.gom.types.SlotList  tomMatch515NameNumber_freshVar_2= tomMatch515NameNumber_freshVar_1.getTailConcSlot() ;if ( true ) {

        SlotList tail = opArgs(tomMatch515NameNumber_freshVar_2,count+1);
        return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( tom.gom.adt.gom.types.slot.Slot.make("arg_"+count, tomMatch515NameNumber_freshVar_4) ,tom_append_list_ConcSlot(tail, tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() )) ;
      }}}}}}}}}}

    throw new GomRuntimeException("RuleExpander:opArgs failed "+slots);
  }
  protected OperatorDecl getOperatorDecl(String name) {
    OperatorDecl decl = null;
    OpRef ref = new OpRef();
    try {
      tom_make_TopDown(tom_make_GetOperatorDecl(ref,name)).visit(moduleList);
    } catch (tom.library.sl.VisitFailure e) {
      throw new GomRuntimeException("Unexpected strategy failure!");
    }
    if (ref.val == null) {
      getLogger().log(Level.SEVERE, "Unknown constructor {0}",
          new Object[]{name});
    }
    return ref.val;
  }
  static class OpRef { OperatorDecl val; }
  private static class GetOperatorDecl extends tom.library.sl.BasicStrategy {private  OpRef  opref; private  String  opName; public GetOperatorDecl( OpRef  opref,  String  opName) { super(( new tom.library.sl.Identity() ));this.opref=opref;this.opName=opName;}public  OpRef  getopref() { return opref;}public  String  getopName() { return opName;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.gom.types.OperatorDecl  visit_OperatorDecl( tom.gom.adt.gom.types.OperatorDecl  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.gom.adt.gom.types.OperatorDecl) ) {{  tom.gom.adt.gom.types.OperatorDecl  tomMatch516NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.OperatorDecl )tom__arg);if ( (tomMatch516NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.operatordecl.OperatorDecl) ) {{  String  tomMatch516NameNumber_freshVar_0= tomMatch516NameNumberfreshSubject_1.getName() ;if ( true ) {






        if (tomMatch516NameNumber_freshVar_0.equals(opName)) {
          opref.val = tomMatch516NameNumberfreshSubject_1;
        }
      }}}}}}return _visit_OperatorDecl(tom__arg,introspector); }public  tom.gom.adt.gom.types.OperatorDecl  _visit_OperatorDecl( tom.gom.adt.gom.types.OperatorDecl  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.gom.adt.gom.types.OperatorDecl )any.visit(environment,introspector));} else {return (( tom.gom.adt.gom.types.OperatorDecl )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.gom.adt.gom.types.OperatorDecl) ) {return visit_OperatorDecl((( tom.gom.adt.gom.types.OperatorDecl )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_GetOperatorDecl( OpRef  t0,  String  t1) { return new GetOperatorDecl(t0,t1); }



  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }
}

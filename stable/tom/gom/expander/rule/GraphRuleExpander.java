/* Generated by TOM (version 2.6): Do not edit this file *//*
 *
 * GOM
 *
 * Copyright (c) 2007-2008, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Emilie Balland e-mail: Emilie.Balland@loria.fr
 *
 **/

package tom.gom.expander.rule;

import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.tree.Tree;
import java.util.logging.Level;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;
import java.util.logging.Logger;
import tom.gom.adt.gom.types.*;
import tom.gom.adt.rule.RuleAdaptor;
import tom.gom.adt.rule.types.*;
import tom.gom.adt.rule.types.term.*;
import tom.gom.adt.objects.types.ClassName;
import tom.gom.tools.error.GomRuntimeException;
import tom.gom.tools.GomEnvironment;
import tom.library.sl.*;
import tom.gom.SymbolTable;

public class GraphRuleExpander {

  /* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file */  /* Generated by TOM (version 2.6): Do not edit this file */    public static   tom.gom.adt.gom.types.HookDeclList  tom_append_list_ConcHookDecl( tom.gom.adt.gom.types.HookDeclList l1,  tom.gom.adt.gom.types.HookDeclList  l2) {     if( l1.isEmptyConcHookDecl() ) {       return l2;     } else if( l2.isEmptyConcHookDecl() ) {       return l1;     } else if(  l1.getTailConcHookDecl() .isEmptyConcHookDecl() ) {       return  tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( l1.getHeadConcHookDecl() ,l2) ;     } else {       return  tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( l1.getHeadConcHookDecl() ,tom_append_list_ConcHookDecl( l1.getTailConcHookDecl() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.HookDeclList  tom_get_slice_ConcHookDecl( tom.gom.adt.gom.types.HookDeclList  begin,  tom.gom.adt.gom.types.HookDeclList  end, tom.gom.adt.gom.types.HookDeclList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcHookDecl()  ||  (end== tom.gom.adt.gom.types.hookdecllist.EmptyConcHookDecl.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( begin.getHeadConcHookDecl() ,( tom.gom.adt.gom.types.HookDeclList )tom_get_slice_ConcHookDecl( begin.getTailConcHookDecl() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.SortList  tom_append_list_ConcSort( tom.gom.adt.gom.types.SortList l1,  tom.gom.adt.gom.types.SortList  l2) {     if( l1.isEmptyConcSort() ) {       return l2;     } else if( l2.isEmptyConcSort() ) {       return l1;     } else if(  l1.getTailConcSort() .isEmptyConcSort() ) {       return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( l1.getHeadConcSort() ,l2) ;     } else {       return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( l1.getHeadConcSort() ,tom_append_list_ConcSort( l1.getTailConcSort() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.SortList  tom_get_slice_ConcSort( tom.gom.adt.gom.types.SortList  begin,  tom.gom.adt.gom.types.SortList  end, tom.gom.adt.gom.types.SortList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcSort()  ||  (end== tom.gom.adt.gom.types.sortlist.EmptyConcSort.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( begin.getHeadConcSort() ,( tom.gom.adt.gom.types.SortList )tom_get_slice_ConcSort( begin.getTailConcSort() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.ModuleList  tom_append_list_ConcModule( tom.gom.adt.gom.types.ModuleList l1,  tom.gom.adt.gom.types.ModuleList  l2) {     if( l1.isEmptyConcModule() ) {       return l2;     } else if( l2.isEmptyConcModule() ) {       return l1;     } else if(  l1.getTailConcModule() .isEmptyConcModule() ) {       return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( l1.getHeadConcModule() ,l2) ;     } else {       return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( l1.getHeadConcModule() ,tom_append_list_ConcModule( l1.getTailConcModule() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.ModuleList  tom_get_slice_ConcModule( tom.gom.adt.gom.types.ModuleList  begin,  tom.gom.adt.gom.types.ModuleList  end, tom.gom.adt.gom.types.ModuleList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcModule()  ||  (end== tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( begin.getHeadConcModule() ,( tom.gom.adt.gom.types.ModuleList )tom_get_slice_ConcModule( begin.getTailConcModule() ,end,tail)) ;   }    /* Generated by TOM (version 2.6): Do not edit this file */   public static   tom.gom.adt.rule.types.RuleList  tom_append_list_RuleList( tom.gom.adt.rule.types.RuleList l1,  tom.gom.adt.rule.types.RuleList  l2) {     if( l1.isEmptyRuleList() ) {       return l2;     } else if( l2.isEmptyRuleList() ) {       return l1;     } else if(  l1.getTailRuleList() .isEmptyRuleList() ) {       return  tom.gom.adt.rule.types.rulelist.ConsRuleList.make( l1.getHeadRuleList() ,l2) ;     } else {       return  tom.gom.adt.rule.types.rulelist.ConsRuleList.make( l1.getHeadRuleList() ,tom_append_list_RuleList( l1.getTailRuleList() ,l2)) ;     }   }   public static   tom.gom.adt.rule.types.RuleList  tom_get_slice_RuleList( tom.gom.adt.rule.types.RuleList  begin,  tom.gom.adt.rule.types.RuleList  end, tom.gom.adt.rule.types.RuleList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyRuleList()  ||  (end== tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.rule.types.rulelist.ConsRuleList.make( begin.getHeadRuleList() ,( tom.gom.adt.rule.types.RuleList )tom_get_slice_RuleList( begin.getTailRuleList() ,end,tail)) ;   }      public static   tom.gom.adt.rule.types.TermList  tom_append_list_TermList( tom.gom.adt.rule.types.TermList l1,  tom.gom.adt.rule.types.TermList  l2) {     if( l1.isEmptyTermList() ) {       return l2;     } else if( l2.isEmptyTermList() ) {       return l1;     } else if(  l1.getTailTermList() .isEmptyTermList() ) {       return  tom.gom.adt.rule.types.termlist.ConsTermList.make( l1.getHeadTermList() ,l2) ;     } else {       return  tom.gom.adt.rule.types.termlist.ConsTermList.make( l1.getHeadTermList() ,tom_append_list_TermList( l1.getTailTermList() ,l2)) ;     }   }   public static   tom.gom.adt.rule.types.TermList  tom_get_slice_TermList( tom.gom.adt.rule.types.TermList  begin,  tom.gom.adt.rule.types.TermList  end, tom.gom.adt.rule.types.TermList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyTermList()  ||  (end== tom.gom.adt.rule.types.termlist.EmptyTermList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.rule.types.termlist.ConsTermList.make( begin.getHeadTermList() ,( tom.gom.adt.rule.types.TermList )tom_get_slice_TermList( begin.getTailTermList() ,end,tail)) ;   }      public static   tom.gom.adt.rule.types.Term  tom_append_list_PathTerm( tom.gom.adt.rule.types.Term l1,  tom.gom.adt.rule.types.Term  l2) {     if( l1.isEmptyPathTerm() ) {       return l2;     } else if( l2.isEmptyPathTerm() ) {       return l1;     } else if(  l1.getTailPathTerm() .isEmptyPathTerm() ) {       return  tom.gom.adt.rule.types.term.ConsPathTerm.make( l1.getHeadPathTerm() ,l2) ;     } else {       return  tom.gom.adt.rule.types.term.ConsPathTerm.make( l1.getHeadPathTerm() ,tom_append_list_PathTerm( l1.getTailPathTerm() ,l2)) ;     }   }   public static   tom.gom.adt.rule.types.Term  tom_get_slice_PathTerm( tom.gom.adt.rule.types.Term  begin,  tom.gom.adt.rule.types.Term  end, tom.gom.adt.rule.types.Term  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyPathTerm()  ||  (end== tom.gom.adt.rule.types.term.EmptyPathTerm.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.rule.types.term.ConsPathTerm.make( begin.getHeadPathTerm() ,( tom.gom.adt.rule.types.Term )tom_get_slice_PathTerm( begin.getTailPathTerm() ,end,tail)) ;   }    /* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file */   public static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Sequence) )) {       if(( ((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Sequence(l1,l2) );     }   }   public static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end == null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin):new tom.library.sl.Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)) );   }      public static   tom.library.sl.Strategy  tom_append_list_Choice( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Choice) )) {       if(( ((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )) ==null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Choice(l1,l2) );     }   }   public static   tom.library.sl.Strategy  tom_get_slice_Choice( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end ==null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin):new tom.library.sl.Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)) );   }      public static   tom.library.sl.Strategy  tom_append_list_SequenceId( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.SequenceId) )) {       if(( ((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1):new tom.library.sl.SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1):new tom.library.sl.SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1),tom_append_list_SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.SequenceId(l1,l2) );     }   }   public static   tom.library.sl.Strategy  tom_get_slice_SequenceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end == null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_SequenceId(((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.FIRST) ):begin):new tom.library.sl.SequenceId(((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_SequenceId(((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),end,tail)) );   }      public static   tom.library.sl.Strategy  tom_append_list_ChoiceId( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.ChoiceId) )) {       if(( ((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.THEN) ):( null )) ==null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ):l1):new tom.library.sl.ChoiceId(((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_ChoiceId(((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ):l1):new tom.library.sl.ChoiceId(((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ):l1),tom_append_list_ChoiceId(((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.ChoiceId(l1,l2) );     }   }   public static   tom.library.sl.Strategy  tom_get_slice_ChoiceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end ==null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_ChoiceId(((( (begin instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.FIRST) ):begin):new tom.library.sl.ChoiceId(((( (begin instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_ChoiceId(((( (begin instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.THEN) ):( null )),end,tail)) );   }    /* Generated by TOM (version 2.6): Do not edit this file */ /* Generated by TOM (version 2.6): Do not edit this file */public static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) );}public static  tom.library.sl.Strategy  tom_make_OnceTopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.One(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Choice(( new tom.library.sl.One(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Choice(v,( (( null )==null)?( new tom.library.sl.One(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Choice(( new tom.library.sl.One(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) );}public static  tom.library.sl.Strategy  tom_make_RepeatId( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) )) ) );}public static  tom.library.sl.Strategy  tom_make_OnceTopDownId( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.OneId(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.ChoiceId(( new tom.library.sl.OneId(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.ChoiceId(v,( (( null )==null)?( new tom.library.sl.OneId(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.ChoiceId(( new tom.library.sl.OneId(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) );}public static  tom.library.sl.Strategy  tom_make_InnermostIdSeq( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ):new tom.library.sl.Sequence(( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ),( null )) )==null)?( new tom.library.sl.AllSeq(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.AllSeq(( new tom.library.sl.MuVar("_x") )) ),( (( null )==null)?( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ):new tom.library.sl.Sequence(( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ),( null )) )) )) ) );}   /* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file */   static class MapEntry {   private Object key;   private Object val;   public Object getKey() { return key; }   public Object getVal() { return val; }   public MapEntry(Object key, Object val) {     this.key = key;     this.val = val;   } }  /* Generated by TOM (version 2.6): Do not edit this file */  /* Generated by TOM (version 2.6): Do not edit this file */   private static java.util.HashMap hashMapAppend(MapEntry e, java.util.HashMap m) {   java.util.HashMap res = (java.util.HashMap) m.clone();   res.put(e.getKey(), e.getVal());   return res; }  private static MapEntry hashMapGetHead(java.util.HashMap m) {   java.util.Set es = m.entrySet();   java.util.Iterator it = es.iterator();   java.util.Map.Entry e = (java.util.Map.Entry) it.next();   return new MapEntry(e.getKey(), e.getValue()); }  private static java.util.HashMap hashMapGetTail(java.util.HashMap m) {   java.util.HashMap res = (java.util.HashMap) m.clone();   java.util.Set es = m.entrySet();   java.util.Iterator it = es.iterator();   java.util.Map.Entry e = (java.util.Map.Entry) it.next();   res.remove(e.getKey());   return res; }   




  private ModuleList moduleList;
  private String sortname;
  private String moduleName;
  private String pkgName;
  private SymbolTable st;

  public GraphRuleExpander(ModuleList data) {
    moduleList = data;
    st = GomEnvironment.getInstance().getSymbolTable();
  }

  private static String fullClassName(ClassName clsName) {
    {{ Object tomMatch25NameNumber_freshVar_0=clsName;if ( (tomMatch25NameNumber_freshVar_0 instanceof tom.gom.adt.objects.types.ClassName) ) {{  tom.gom.adt.objects.types.ClassName  tomMatch25NameNumber_freshSubject_1=(( tom.gom.adt.objects.types.ClassName )tomMatch25NameNumber_freshVar_0);{  tom.gom.adt.objects.types.ClassName  tomMatch25NameNumber_freshVar_3=tomMatch25NameNumber_freshSubject_1;if ( (tomMatch25NameNumber_freshVar_3 instanceof tom.gom.adt.objects.types.classname.ClassName) ) {{  String  tomMatch25NameNumber_freshVar_1= tomMatch25NameNumber_freshVar_3.getPkg() ;{  String  tomMatch25NameNumber_freshVar_2= tomMatch25NameNumber_freshVar_3.getName() ;{  String  tom_pkgPrefix=tomMatch25NameNumber_freshVar_1;{  String  tom_name=tomMatch25NameNumber_freshVar_2;

        if(tom_pkgPrefix.length()==0) {
          return tom_name;
        } else {
          return tom_pkgPrefix+"."+tom_name;
        }
      }}}}}}}}}}

    throw new GomRuntimeException(
        "GomReferenceExpander:fullClassName got a strange ClassName "+clsName);
  }

  public HookDeclList expandGraphRules(String sortname, String stratname, String defaultstrat, String ruleCode, Decl sdecl) {
    this.sortname = sortname; 
    {{ Object tomMatch26NameNumber_freshVar_0=sdecl;if ( (tomMatch26NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.Decl) ) {{  tom.gom.adt.gom.types.Decl  tomMatch26NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.Decl )tomMatch26NameNumber_freshVar_0);{  tom.gom.adt.gom.types.Decl  tomMatch26NameNumber_freshVar_2=tomMatch26NameNumber_freshSubject_1;if ( (tomMatch26NameNumber_freshVar_2 instanceof tom.gom.adt.gom.types.decl.CutSort) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch26NameNumber_freshVar_1= tomMatch26NameNumber_freshVar_2.getSort() ;{  tom.gom.adt.gom.types.SortDecl  tomMatch26NameNumber_freshVar_4=tomMatch26NameNumber_freshVar_1;if ( (tomMatch26NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch26NameNumber_freshVar_3= tomMatch26NameNumber_freshVar_4.getModuleDecl() ;{  tom.gom.adt.gom.types.ModuleDecl  tomMatch26NameNumber_freshVar_7=tomMatch26NameNumber_freshVar_3;if ( (tomMatch26NameNumber_freshVar_7 instanceof tom.gom.adt.gom.types.moduledecl.ModuleDecl) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch26NameNumber_freshVar_5= tomMatch26NameNumber_freshVar_7.getModuleName() ;{  String  tomMatch26NameNumber_freshVar_6= tomMatch26NameNumber_freshVar_7.getPkg() ;{  tom.gom.adt.gom.types.GomModuleName  tomMatch26NameNumber_freshVar_9=tomMatch26NameNumber_freshVar_5;if ( (tomMatch26NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName) ) {{  String  tomMatch26NameNumber_freshVar_8= tomMatch26NameNumber_freshVar_9.getName() ;

        this.moduleName = tomMatch26NameNumber_freshVar_8;
        this.pkgName = tomMatch26NameNumber_freshVar_6;
      }}}}}}}}}}}}}}}}}


    RuleLexer lexer = new RuleLexer(new ANTLRStringStream(ruleCode));
    CommonTokenStream tokens = new CommonTokenStream(lexer);
    RuleParser parser = new RuleParser(tokens);
    RuleList rulelist =  tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ;
    try {
      Tree ast = (Tree)parser.graphruleset().getTree();
      rulelist = (RuleList) RuleAdaptor.getTerm(ast);
    } catch (org.antlr.runtime.RecognitionException e) {
      getLogger().log(Level.SEVERE, "Cannot parse rules",
          new Object[]{});
      return  tom.gom.adt.gom.types.hookdecllist.EmptyConcHookDecl.make() ;
    }
    return expand(rulelist,stratname,defaultstrat,sdecl);
  }

  public HookDeclList expandFirstGraphRules(String sortname, String stratname, String defaultstrat, String ruleCode, Decl sdecl) {
    HookDeclList expandedrules = expandGraphRules(sortname,stratname,defaultstrat,ruleCode, sdecl);
    HookDeclList commonpart = expandFirst(sdecl);
    return tom_append_list_ConcHookDecl(commonpart,tom_append_list_ConcHookDecl(expandedrules, tom.gom.adt.gom.types.hookdecllist.EmptyConcHookDecl.make() ));  
  }

  //add the common methods, includes and imports for all graphrule strategies of a sort 
  protected HookDeclList expandFirst(Decl sdecl) {
    ClassName abstractType =  tom.gom.adt.objects.types.classname.ClassName.make(pkgName+"."+moduleName.toLowerCase(), moduleName+"AbstractType") ;
    ClassName visitor =  tom.gom.adt.objects.types.classname.ClassName.make(pkgName+"."+moduleName.toLowerCase(), moduleName+"Visitor") ;

    StringBuilder output = new StringBuilder();
    output.append(
        "\n%include { sl.tom }\n%typeterm tom_StringList {\n  implement      { java.util.List<String> }\n  is_sort(t)     { $t instanceof java.util.List }  \n  equals(l1,l2)  { $l1.equals($l2) }\n}\n%typeterm tom_StringPositionMap {\n  implement      { java.util.Map<String,Position> }\n  is_sort(t)      { $t instanceof java.util.Map }  \n  equals(l1,l2)  { $l1.equals($l2) }\n}\n\n%typeterm tom_SharedLabel{\n  implement {SharedLabel}\n  is_sort(t) { ($t instanceof SharedLabel) }\n}\n\nstatic class SharedLabel {\n  public Position posLhs;\n  public Position posRhs;\n  public String label;\n\n  public SharedLabel(String label, Position posLhs, Position posRhs) {\n    this.label = label;\n    this.posLhs = posLhs;\n    this.posRhs = posRhs;\n  }\n}\n\n%op tom_"/* Generated by TOM (version 2.6): Do not edit this file */+abstractType.getName()+" Subst(global:tom_"/* Generated by TOM (version 2.6): Do not edit this file */+abstractType.getName()+",subst:tom_"/* Generated by TOM (version 2.6): Do not edit this file */+abstractType.getName()+") {\n  is_fsym(t) {( $t instanceof Subst )}\n  make(t1,t2) {( new Subst($t1,$t2) )}\n}\n\n%typeterm tom_"/* Generated by TOM (version 2.6): Do not edit this file */+abstractType.getName()+" {\n  implement { "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" }\n  is_sort(t) {( $t instanceof "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" )}\n}\n\nstatic class Subst extends "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" {\n    \n  "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" substitution,globalterm;\n\n  public Subst("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" globalterm, "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" substitution) {\n    this.substitution = substitution;\n    this.globalterm = globalterm;\n  }\n\n  //abstract methods from the abstractType which are trivially implemented\n  //they must never be used\n  \n  public aterm.ATerm toATerm() {\n    return null;\n  }\n\n  public String symbolName() { return \"@\"; }\n\n  public void toStringBuilder(java.lang.StringBuilder buffer) {\n    buffer.append(\"@(\");\n    buffer.append(globalterm);\n    buffer.append(\",\");\n    buffer.append(substitution);\n    buffer.append(\")\");\n  }\n\n  public int compareTo(Object o) { return 0; }\n\n  public int compareToLPO(Object o) { return 0; }\n\n  public final int hashCode() {\n    return 0;\n  }\n\n  public final boolean equivalent(shared.SharedObject obj) {\n    return false;\n  }\n\n  public shared.SharedObject duplicate() {\n    return this;\n  }\n\n  //implementation of the Visitable interface\n  public Visitable setChildren(Visitable[] children) {\n    if (children.length == 2){\n      return new Subst(("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+")children[0],("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+")children[1]);\n    } else {\n      throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public Visitable[] getChildren() {\n    return new Visitable[]{globalterm,substitution};\n  }\n\n  public Visitable getChildAt(int i) {\n    switch(i) {\n      case 0: return globalterm;\n      case 1: return substitution;\n      default: throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public Visitable setChildAt(int i, Visitable child) {\n    switch(i) {\n      case 0: return new Subst(("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+")child,substitution);\n      case 1: return new Subst(globalterm,("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+")child);\n      default: throw new IndexOutOfBoundsException();\n    }\n  } \n\n    public int getChildCount() { \n      return 2; \n    }\n\n}\n\n  protected static java.util.List<SharedLabel> getSharedLabels("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" labelledLhs, "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" labelledRhs) {\n    java.util.ArrayList<SharedLabel> sharedlabels = new java.util.ArrayList();\n    java.util.HashMap<String,Position> lhsLabels = labelledLhs.getMapFromLabelToPositionAndRemoveLabels();\n    java.util.HashMap<String,Position> rhsLabels = labelledRhs.getMapFromLabelToPositionAndRemoveLabels();\n    for (String labelRhs: rhsLabels.keySet()) {\n      if (lhsLabels.containsKey(labelRhs)) {\n        sharedlabels.add(new SharedLabel(labelRhs,lhsLabels.get(labelRhs),rhsLabels.get(labelRhs)));\n      }\n    }\n   return sharedlabels;\n  }\n\n %strategy FromVarToPath(lhs:tom_"/* Generated by TOM (version 2.6): Do not edit this file */+abstractType.getName()+",omega:Position) extends Identity() {\n\n"


































































































































);

  {{ Object tomMatch27NameNumber_freshVar_0=moduleList;if ( (tomMatch27NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.ModuleList) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch27NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.ModuleList )tomMatch27NameNumber_freshVar_0);{  tom.gom.adt.gom.types.ModuleList  tomMatch27NameNumber_freshVar_1=tomMatch27NameNumber_freshSubject_1;if ( ((tomMatch27NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.modulelist.ConsConcModule) || (tomMatch27NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.modulelist.EmptyConcModule)) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch27NameNumber_begin_3=tomMatch27NameNumber_freshVar_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch27NameNumber_end_4=tomMatch27NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch27NameNumber_freshVar_2=tomMatch27NameNumber_end_4;if (!( tomMatch27NameNumber_freshVar_2.isEmptyConcModule() )) {{  tom.gom.adt.gom.types.Module  tomMatch27NameNumber_freshVar_8= tomMatch27NameNumber_freshVar_2.getHeadConcModule() ;if ( (tomMatch27NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.module.Module) ) {{  tom.gom.adt.gom.types.SortList  tomMatch27NameNumber_freshVar_7= tomMatch27NameNumber_freshVar_8.getSorts() ;{  tom.gom.adt.gom.types.SortList  tomMatch27NameNumber_freshVar_9=tomMatch27NameNumber_freshVar_7;if ( ((tomMatch27NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.sortlist.ConsConcSort) || (tomMatch27NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.sortlist.EmptyConcSort)) ) {{  tom.gom.adt.gom.types.SortList  tomMatch27NameNumber_begin_11=tomMatch27NameNumber_freshVar_9;{  tom.gom.adt.gom.types.SortList  tomMatch27NameNumber_end_12=tomMatch27NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.SortList  tomMatch27NameNumber_freshVar_10=tomMatch27NameNumber_end_12;if (!( tomMatch27NameNumber_freshVar_10.isEmptyConcSort() )) {{  tom.gom.adt.gom.types.Sort  tomMatch27NameNumber_freshVar_16= tomMatch27NameNumber_freshVar_10.getHeadConcSort() ;if ( (tomMatch27NameNumber_freshVar_16 instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch27NameNumber_freshVar_15= tomMatch27NameNumber_freshVar_16.getDecl() ;{  tom.gom.adt.gom.types.SortDecl  tomMatch27NameNumber_freshVar_18=tomMatch27NameNumber_freshVar_15;if ( (tomMatch27NameNumber_freshVar_18 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch27NameNumber_freshVar_17= tomMatch27NameNumber_freshVar_18.getName() ;{  String  tom_name=tomMatch27NameNumber_freshVar_17;{  tom.gom.adt.gom.types.SortList  tomMatch27NameNumber_freshVar_13= tomMatch27NameNumber_freshVar_10.getTailConcSort() ;{  tom.gom.adt.gom.types.ModuleList  tomMatch27NameNumber_freshVar_5= tomMatch27NameNumber_freshVar_2.getTailConcModule() ;

    output.append(
        "\n    visit "/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+" {\n      Var"/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+"(name) -> {\n        Position wl = getVarPos(lhs,`name);\n        Position wr = getEnvironment().getPosition();\n        Position wwl = (Position) (new Position(new int[]{1})).add(omega).add(wl); \n        Position wwr = (Position) (new Position(new int[]{2})).add(wr); \n        Position res = (Position) wwl.sub(wwr);\n        return Path"/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+".make(res);\n      }\n    }      \n"










);
      }}}}}}}}}}}if ( tomMatch27NameNumber_end_12.isEmptyConcSort() ) {tomMatch27NameNumber_end_12=tomMatch27NameNumber_begin_11;} else {tomMatch27NameNumber_end_12= tomMatch27NameNumber_end_12.getTailConcSort() ;}}} while(!( (tomMatch27NameNumber_end_12==tomMatch27NameNumber_begin_11) ));}}}}}}}}}if ( tomMatch27NameNumber_end_4.isEmptyConcModule() ) {tomMatch27NameNumber_end_4=tomMatch27NameNumber_begin_3;} else {tomMatch27NameNumber_end_4= tomMatch27NameNumber_end_4.getTailConcModule() ;}}} while(!( (tomMatch27NameNumber_end_4==tomMatch27NameNumber_begin_3) ));}}}}}}}}


  output.append("\n  }\n  \n  private static Position getVarPos("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" term, String varname) {\n    Position p = new Position();\n    try {\n      `OnceTopDown(GetVarPos(p,varname)).visit(term);\n      return p;\n    } catch (VisitFailure e) {\n      throw new tom.gom.tools.error.GomRuntimeException(\"Unexpected strategy failure!\");\n      }\n  }\n\n  %strategy GetVarPos(Position p, String varname) extends Fail() {\n"













);

 {{ Object tomMatch28NameNumber_freshVar_0=moduleList;if ( (tomMatch28NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.ModuleList) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch28NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.ModuleList )tomMatch28NameNumber_freshVar_0);{  tom.gom.adt.gom.types.ModuleList  tomMatch28NameNumber_freshVar_1=tomMatch28NameNumber_freshSubject_1;if ( ((tomMatch28NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.modulelist.ConsConcModule) || (tomMatch28NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.modulelist.EmptyConcModule)) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch28NameNumber_begin_3=tomMatch28NameNumber_freshVar_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch28NameNumber_end_4=tomMatch28NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch28NameNumber_freshVar_2=tomMatch28NameNumber_end_4;if (!( tomMatch28NameNumber_freshVar_2.isEmptyConcModule() )) {{  tom.gom.adt.gom.types.Module  tomMatch28NameNumber_freshVar_8= tomMatch28NameNumber_freshVar_2.getHeadConcModule() ;if ( (tomMatch28NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.module.Module) ) {{  tom.gom.adt.gom.types.SortList  tomMatch28NameNumber_freshVar_7= tomMatch28NameNumber_freshVar_8.getSorts() ;{  tom.gom.adt.gom.types.SortList  tomMatch28NameNumber_freshVar_9=tomMatch28NameNumber_freshVar_7;if ( ((tomMatch28NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.sortlist.ConsConcSort) || (tomMatch28NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.sortlist.EmptyConcSort)) ) {{  tom.gom.adt.gom.types.SortList  tomMatch28NameNumber_begin_11=tomMatch28NameNumber_freshVar_9;{  tom.gom.adt.gom.types.SortList  tomMatch28NameNumber_end_12=tomMatch28NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.SortList  tomMatch28NameNumber_freshVar_10=tomMatch28NameNumber_end_12;if (!( tomMatch28NameNumber_freshVar_10.isEmptyConcSort() )) {{  tom.gom.adt.gom.types.Sort  tomMatch28NameNumber_freshVar_16= tomMatch28NameNumber_freshVar_10.getHeadConcSort() ;if ( (tomMatch28NameNumber_freshVar_16 instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch28NameNumber_freshVar_15= tomMatch28NameNumber_freshVar_16.getDecl() ;{  tom.gom.adt.gom.types.SortDecl  tomMatch28NameNumber_freshVar_18=tomMatch28NameNumber_freshVar_15;if ( (tomMatch28NameNumber_freshVar_18 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch28NameNumber_freshVar_17= tomMatch28NameNumber_freshVar_18.getName() ;{  String  tom_name=tomMatch28NameNumber_freshVar_17;{  tom.gom.adt.gom.types.SortList  tomMatch28NameNumber_freshVar_13= tomMatch28NameNumber_freshVar_10.getTailConcSort() ;{  tom.gom.adt.gom.types.ModuleList  tomMatch28NameNumber_freshVar_5= tomMatch28NameNumber_freshVar_2.getTailConcModule() ;

 output.append(
        "\n    visit "/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+" {\n      v@Var"/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+"(name) -> { \n        if (`name.equals(varname)) { \n          p.setValue(getEnvironment().getPosition().toArray()); \n          return `v; } \n      } \n    }\n   "







);
   }}}}}}}}}}}if ( tomMatch28NameNumber_end_12.isEmptyConcSort() ) {tomMatch28NameNumber_end_12=tomMatch28NameNumber_begin_11;} else {tomMatch28NameNumber_end_12= tomMatch28NameNumber_end_12.getTailConcSort() ;}}} while(!( (tomMatch28NameNumber_end_12==tomMatch28NameNumber_begin_11) ));}}}}}}}}}if ( tomMatch28NameNumber_end_4.isEmptyConcModule() ) {tomMatch28NameNumber_end_4=tomMatch28NameNumber_begin_3;} else {tomMatch28NameNumber_end_4= tomMatch28NameNumber_end_4.getTailConcModule() ;}}} while(!( (tomMatch28NameNumber_end_4==tomMatch28NameNumber_begin_3) ));}}}}}}}}
 
  
  output.append("\n  }\n"

);

 output.append(
        "\n  %strategy InlinePath() extends Identity() {\n"

);

  {{ Object tomMatch29NameNumber_freshVar_0=moduleList;if ( (tomMatch29NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.ModuleList) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch29NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.ModuleList )tomMatch29NameNumber_freshVar_0);{  tom.gom.adt.gom.types.ModuleList  tomMatch29NameNumber_freshVar_1=tomMatch29NameNumber_freshSubject_1;if ( ((tomMatch29NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.modulelist.ConsConcModule) || (tomMatch29NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.modulelist.EmptyConcModule)) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch29NameNumber_begin_3=tomMatch29NameNumber_freshVar_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch29NameNumber_end_4=tomMatch29NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch29NameNumber_freshVar_2=tomMatch29NameNumber_end_4;if (!( tomMatch29NameNumber_freshVar_2.isEmptyConcModule() )) {{  tom.gom.adt.gom.types.Module  tomMatch29NameNumber_freshVar_8= tomMatch29NameNumber_freshVar_2.getHeadConcModule() ;if ( (tomMatch29NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.module.Module) ) {{  tom.gom.adt.gom.types.SortList  tomMatch29NameNumber_freshVar_7= tomMatch29NameNumber_freshVar_8.getSorts() ;{  tom.gom.adt.gom.types.SortList  tomMatch29NameNumber_freshVar_9=tomMatch29NameNumber_freshVar_7;if ( ((tomMatch29NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.sortlist.ConsConcSort) || (tomMatch29NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.sortlist.EmptyConcSort)) ) {{  tom.gom.adt.gom.types.SortList  tomMatch29NameNumber_begin_11=tomMatch29NameNumber_freshVar_9;{  tom.gom.adt.gom.types.SortList  tomMatch29NameNumber_end_12=tomMatch29NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.SortList  tomMatch29NameNumber_freshVar_10=tomMatch29NameNumber_end_12;if (!( tomMatch29NameNumber_freshVar_10.isEmptyConcSort() )) {{  tom.gom.adt.gom.types.Sort  tomMatch29NameNumber_freshVar_16= tomMatch29NameNumber_freshVar_10.getHeadConcSort() ;if ( (tomMatch29NameNumber_freshVar_16 instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch29NameNumber_freshVar_15= tomMatch29NameNumber_freshVar_16.getDecl() ;{  tom.gom.adt.gom.types.SortDecl  tomMatch29NameNumber_freshVar_18=tomMatch29NameNumber_freshVar_15;if ( (tomMatch29NameNumber_freshVar_18 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch29NameNumber_freshVar_17= tomMatch29NameNumber_freshVar_18.getName() ;{  String  tom_name=tomMatch29NameNumber_freshVar_17;{  tom.gom.adt.gom.types.SortList  tomMatch29NameNumber_freshVar_13= tomMatch29NameNumber_freshVar_10.getTailConcSort() ;{  tom.gom.adt.gom.types.ModuleList  tomMatch29NameNumber_freshVar_5= tomMatch29NameNumber_freshVar_2.getTailConcModule() ;

    output.append(
        "\n    visit "/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+" {\n    //match non empty paths\n      p1@Path"/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+"(_,_*) -> {\n        getEnvironment().followPath((Path)`p1);\n        "/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+" pointedSubterm = ("/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+") getEnvironment().getSubject();\n        %match(pointedSubterm) {\n          p2@Path"/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+"(_,_*) -> {\n            getEnvironment().followPath(((Path)`p1).inverse());\n            return ("/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+") ((Path)`p1).add((Path)`p2).getCanonicalPath();\n          }\n        }\n        getEnvironment().followPath(((Path)`p1).inverse());\n      }\n   }      \n"














);
    }}}}}}}}}}}if ( tomMatch29NameNumber_end_12.isEmptyConcSort() ) {tomMatch29NameNumber_end_12=tomMatch29NameNumber_begin_11;} else {tomMatch29NameNumber_end_12= tomMatch29NameNumber_end_12.getTailConcSort() ;}}} while(!( (tomMatch29NameNumber_end_12==tomMatch29NameNumber_begin_11) ));}}}}}}}}}if ( tomMatch29NameNumber_end_4.isEmptyConcModule() ) {tomMatch29NameNumber_end_4=tomMatch29NameNumber_begin_3;} else {tomMatch29NameNumber_end_4= tomMatch29NameNumber_end_4.getTailConcModule() ;}}} while(!( (tomMatch29NameNumber_end_4==tomMatch29NameNumber_begin_3) ));}}}}}}}}


  output.append("\n  }\n"

);

  String imports = "\nimport tom.library.sl.*;\n   "

;

  //import all the constructors Path<Sort> of the module
  {{ Object tomMatch30NameNumber_freshVar_0=moduleList;if ( (tomMatch30NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.ModuleList) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch30NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.ModuleList )tomMatch30NameNumber_freshVar_0);{  tom.gom.adt.gom.types.ModuleList  tomMatch30NameNumber_freshVar_1=tomMatch30NameNumber_freshSubject_1;if ( ((tomMatch30NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.modulelist.ConsConcModule) || (tomMatch30NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.modulelist.EmptyConcModule)) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch30NameNumber_begin_3=tomMatch30NameNumber_freshVar_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch30NameNumber_end_4=tomMatch30NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch30NameNumber_freshVar_2=tomMatch30NameNumber_end_4;if (!( tomMatch30NameNumber_freshVar_2.isEmptyConcModule() )) {{  tom.gom.adt.gom.types.Module  tomMatch30NameNumber_freshVar_9= tomMatch30NameNumber_freshVar_2.getHeadConcModule() ;if ( (tomMatch30NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.module.Module) ) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch30NameNumber_freshVar_7= tomMatch30NameNumber_freshVar_9.getMDecl() ;{  tom.gom.adt.gom.types.SortList  tomMatch30NameNumber_freshVar_8= tomMatch30NameNumber_freshVar_9.getSorts() ;{  tom.gom.adt.gom.types.ModuleDecl  tomMatch30NameNumber_freshVar_12=tomMatch30NameNumber_freshVar_7;if ( (tomMatch30NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.moduledecl.ModuleDecl) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch30NameNumber_freshVar_10= tomMatch30NameNumber_freshVar_12.getModuleName() ;{  String  tomMatch30NameNumber_freshVar_11= tomMatch30NameNumber_freshVar_12.getPkg() ;{  tom.gom.adt.gom.types.GomModuleName  tomMatch30NameNumber_freshVar_14=tomMatch30NameNumber_freshVar_10;if ( (tomMatch30NameNumber_freshVar_14 instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName) ) {{  String  tomMatch30NameNumber_freshVar_13= tomMatch30NameNumber_freshVar_14.getName() ;{  String  tom_pkg=tomMatch30NameNumber_freshVar_11;{  tom.gom.adt.gom.types.SortList  tomMatch30NameNumber_freshVar_15=tomMatch30NameNumber_freshVar_8;if ( ((tomMatch30NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.sortlist.ConsConcSort) || (tomMatch30NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.sortlist.EmptyConcSort)) ) {{  tom.gom.adt.gom.types.SortList  tomMatch30NameNumber_begin_17=tomMatch30NameNumber_freshVar_15;{  tom.gom.adt.gom.types.SortList  tomMatch30NameNumber_end_18=tomMatch30NameNumber_freshVar_15;do {{{  tom.gom.adt.gom.types.SortList  tomMatch30NameNumber_freshVar_16=tomMatch30NameNumber_end_18;if (!( tomMatch30NameNumber_freshVar_16.isEmptyConcSort() )) {{  tom.gom.adt.gom.types.Sort  tomMatch30NameNumber_freshVar_22= tomMatch30NameNumber_freshVar_16.getHeadConcSort() ;if ( (tomMatch30NameNumber_freshVar_22 instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch30NameNumber_freshVar_21= tomMatch30NameNumber_freshVar_22.getDecl() ;{  tom.gom.adt.gom.types.SortDecl  tomMatch30NameNumber_freshVar_24=tomMatch30NameNumber_freshVar_21;if ( (tomMatch30NameNumber_freshVar_24 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch30NameNumber_freshVar_23= tomMatch30NameNumber_freshVar_24.getName() ;{  String  tom_name=tomMatch30NameNumber_freshVar_23;{  tom.gom.adt.gom.types.SortList  tomMatch30NameNumber_freshVar_19= tomMatch30NameNumber_freshVar_16.getTailConcSort() ;{  tom.gom.adt.gom.types.ModuleList  tomMatch30NameNumber_freshVar_5= tomMatch30NameNumber_freshVar_2.getTailConcModule() ;


  String prefix = ((tom_pkg=="")?"":tom_pkg+".")+moduleName.toLowerCase();
  imports += "\nimport "/* Generated by TOM (version 2.6): Do not edit this file */+prefix+".types."/* Generated by TOM (version 2.6): Do not edit this file */+tom_name.toLowerCase()+".Path"/* Generated by TOM (version 2.6): Do not edit this file */+tom_name+"; \n  "

;
    }}}}}}}}}}}if ( tomMatch30NameNumber_end_18.isEmptyConcSort() ) {tomMatch30NameNumber_end_18=tomMatch30NameNumber_begin_17;} else {tomMatch30NameNumber_end_18= tomMatch30NameNumber_end_18.getTailConcSort() ;}}} while(!( (tomMatch30NameNumber_end_18==tomMatch30NameNumber_begin_17) ));}}}}}}}}}}}}}}}}}}if ( tomMatch30NameNumber_end_4.isEmptyConcModule() ) {tomMatch30NameNumber_end_4=tomMatch30NameNumber_begin_3;} else {tomMatch30NameNumber_end_4= tomMatch30NameNumber_end_4.getTailConcModule() ;}}} while(!( (tomMatch30NameNumber_end_4==tomMatch30NameNumber_begin_3) ));}}}}}}}}


   return  tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( tom.gom.adt.gom.types.hookdecl.BlockHookDecl.make(sdecl,  tom.gom.adt.code.types.code.Code.make(output.toString()) ) , tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( tom.gom.adt.gom.types.hookdecl.ImportHookDecl.make(sdecl,  tom.gom.adt.code.types.code.Code.make(imports) ) , tom.gom.adt.gom.types.hookdecllist.EmptyConcHookDecl.make() ) ) ;
  }

  protected HookDeclList expand(RuleList rulelist, String stratname, String defaultstrat, Decl sdecl) {
    ClassName abstractType =  tom.gom.adt.objects.types.classname.ClassName.make(pkgName+"."+moduleName.toLowerCase(), moduleName+"AbstractType") ;
 
    StringBuilder output = new StringBuilder();
    output.append("\n  public static Strategy "/* Generated by TOM (version 2.6): Do not edit this file */+stratname+"() {\n    return `"/* Generated by TOM (version 2.6): Do not edit this file */+stratname+"();\n  }\n\n  %strategy "/* Generated by TOM (version 2.6): Do not edit this file */+stratname+"() extends "/* Generated by TOM (version 2.6): Do not edit this file */+defaultstrat+"() {\n    visit "/* Generated by TOM (version 2.6): Do not edit this file */+sortname+" {\n      "






);

        {{ Object tomMatch31NameNumber_freshVar_0=rulelist;if ( (tomMatch31NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.RuleList) ) {{  tom.gom.adt.rule.types.RuleList  tomMatch31NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.RuleList )tomMatch31NameNumber_freshVar_0);{  tom.gom.adt.rule.types.RuleList  tomMatch31NameNumber_freshVar_1=tomMatch31NameNumber_freshSubject_1;if ( ((tomMatch31NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.rulelist.ConsRuleList) || (tomMatch31NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.rulelist.EmptyRuleList)) ) {{  tom.gom.adt.rule.types.RuleList  tomMatch31NameNumber_begin_3=tomMatch31NameNumber_freshVar_1;{  tom.gom.adt.rule.types.RuleList  tomMatch31NameNumber_end_4=tomMatch31NameNumber_freshVar_1;do {{{  tom.gom.adt.rule.types.RuleList  tomMatch31NameNumber_freshVar_2=tomMatch31NameNumber_end_4;if (!( tomMatch31NameNumber_freshVar_2.isEmptyRuleList() )) {{  tom.gom.adt.rule.types.Rule  tomMatch31NameNumber_freshVar_9= tomMatch31NameNumber_freshVar_2.getHeadRuleList() ;{ boolean tomMatch31NameNumber_freshVar_10= false ;{  tom.gom.adt.rule.types.Term  tomMatch31NameNumber_freshVar_8= null ;{  tom.gom.adt.rule.types.Term  tomMatch31NameNumber_freshVar_7= null ;if ( (tomMatch31NameNumber_freshVar_9 instanceof tom.gom.adt.rule.types.rule.Rule) ) {{tomMatch31NameNumber_freshVar_10= true ;tomMatch31NameNumber_freshVar_7= tomMatch31NameNumber_freshVar_9.getlhs() ;tomMatch31NameNumber_freshVar_8= tomMatch31NameNumber_freshVar_9.getrhs() ;}} else {if ( (tomMatch31NameNumber_freshVar_9 instanceof tom.gom.adt.rule.types.rule.ConditionalRule) ) {{tomMatch31NameNumber_freshVar_10= true ;tomMatch31NameNumber_freshVar_7= tomMatch31NameNumber_freshVar_9.getlhs() ;tomMatch31NameNumber_freshVar_8= tomMatch31NameNumber_freshVar_9.getrhs() ;}}}if ((tomMatch31NameNumber_freshVar_10 ==  true )) {{  tom.gom.adt.rule.types.Term  tom_lhs=tomMatch31NameNumber_freshVar_7;{  tom.gom.adt.rule.types.RuleList  tomMatch31NameNumber_freshVar_5= tomMatch31NameNumber_freshVar_2.getTailRuleList() ;

            //TODO: verify that the lhs of the rules are of the good sort  
            //TODO: verify the linearity of lhs and rhs
            output.append("\n                "/* Generated by TOM (version 2.6): Do not edit this file */+genTerm(tom_lhs)+" -> {\n\n                /* 1. set needed positions */\n                Position omega = getEnvironment().getPosition();\n                Position posFinal = new Position(new int[]{1});\n                Position posRhs = new Position(new int[]{2});\n                Position newomega = (Position) posFinal.add(omega);\n\n                /* 2. go to the root and get the global term-graph */\n                getEnvironment().followPath(omega.inverse());\n                "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" subject = ("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+") getEnvironment().getSubject();             \n\n                /* 2. construct at compile-time the lhs and rhs */\n                "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" labelledLhs = `"/* Generated by TOM (version 2.6): Do not edit this file */+genTermWithExplicitVar(tom_lhs,"root",0)+".normalizeWithLabels();\n                "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" labelledRhs = `"/* Generated by TOM (version 2.6): Do not edit this file */+genTermWithExplicitVar(tomMatch31NameNumber_freshVar_8,"root",0)+".normalizeWithLabels();\n                \n               /* 3. construct t = SubstTerm(subject',r') */\n                "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" rhs = labelledRhs.label2path();\n                "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" lhs = labelledLhs.label2path();\n                rhs = ("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+") `TopDown(FromVarToPath(lhs,omega)).visit(rhs);\n                "/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+" t = `Subst(subject,rhs);\n                //replace in subject every pointer to the position newomega by\n                //a pointer to the position 2  and if in position 2 there is also a\n                //pointer inline the paths.\n                t = ("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+") posFinal.getOmega(`TopDown(Sequence(globalRedirection(newomega,posRhs),InlinePath()))).visit(t);\n                //inline paths in the intermediate r\n                t = ("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+") posRhs.getOmega(`TopDown(InlinePath())).visit(t);\n\n                //compute the list of all shared labels\n                java.util.List<SharedLabel> sharedlabels = getSharedLabels(labelledLhs,labelledRhs);\n                \n                //redirect paths for shared labels\n                for (SharedLabel sharedlabel: sharedlabels) {\n                  Position l = (Position) newomega.add(sharedlabel.posLhs);\n                  Position r = (Position) posRhs.add(sharedlabel.posRhs);\n                  t =  t.applyGlobalRedirection(l,r);\n                }\n\n                /* 4. set the global term to swap(t,1.w,2) */\n                t = t.swap(newomega,posRhs); \n\n                /* 5. set the global term to swap(t,1.w,2) */\n                t = t.normalize();\n\n                /* 6. get the first child */\n                t = ("/* Generated by TOM (version 2.6): Do not edit this file */+fullClassName(abstractType)+") posFinal.getSubterm().visit(t);\n\n                //expand the subject to remove labels from the rhs\n                getEnvironment().setSubject(t.expand());\n\n                /* 5. go to the position w */\n                getEnvironment().followPath(omega);\n                return ("/* Generated by TOM (version 2.6): Do not edit this file */+sortname+") getEnvironment().getSubject();\n                }\n                "






















































);
          }}}}}}}}}if ( tomMatch31NameNumber_end_4.isEmptyRuleList() ) {tomMatch31NameNumber_end_4=tomMatch31NameNumber_begin_3;} else {tomMatch31NameNumber_end_4= tomMatch31NameNumber_end_4.getTailRuleList() ;}}} while(!( (tomMatch31NameNumber_end_4==tomMatch31NameNumber_begin_3) ));}}}}}}}}


        output.append("\n    }\n  }\n            "


);

          return  tom.gom.adt.gom.types.hookdecllist.ConsConcHookDecl.make( tom.gom.adt.gom.types.hookdecl.BlockHookDecl.make(sdecl,  tom.gom.adt.code.types.code.Code.make(output.toString()) ) , tom.gom.adt.gom.types.hookdecllist.EmptyConcHookDecl.make() ) ;
  }

  private String genTerm(Term term) {
    StringBuilder output = new StringBuilder();
    term = expand(term);
    {{ Object tomMatch32NameNumber_freshVar_0=term;if ( (tomMatch32NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch32NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch32NameNumber_freshVar_0);{  tom.gom.adt.rule.types.Term  tomMatch32NameNumber_freshVar_1=tomMatch32NameNumber_freshSubject_1;if ( ((tomMatch32NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch32NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {if (!( tomMatch32NameNumber_freshVar_1.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch32NameNumber_freshVar_2= tomMatch32NameNumber_freshVar_1.getTailPathTerm() ;

        output.append("Path"+sortname);
        output.append("(");
        output.append( tomMatch32NameNumber_freshVar_1.getHeadPathTerm() );
        {{ Object tomMatch33NameNumber_freshVar_0=tomMatch32NameNumber_freshVar_2;if ( (tomMatch33NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch33NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch33NameNumber_freshVar_0);{  tom.gom.adt.rule.types.Term  tomMatch33NameNumber_freshVar_1=tomMatch33NameNumber_freshSubject_1;if ( ((tomMatch33NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch33NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch33NameNumber_begin_3=tomMatch33NameNumber_freshVar_1;{  tom.gom.adt.rule.types.Term  tomMatch33NameNumber_end_4=tomMatch33NameNumber_freshVar_1;do {{{  tom.gom.adt.rule.types.Term  tomMatch33NameNumber_freshVar_2=tomMatch33NameNumber_end_4;if (!( tomMatch33NameNumber_freshVar_2.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch33NameNumber_freshVar_5= tomMatch33NameNumber_freshVar_2.getTailPathTerm() ;

            output.append(",");
            output.append( tomMatch33NameNumber_freshVar_2.getHeadPathTerm() );
          }}}if ( tomMatch33NameNumber_end_4.isEmptyPathTerm() ) {tomMatch33NameNumber_end_4=tomMatch33NameNumber_begin_3;} else {tomMatch33NameNumber_end_4= tomMatch33NameNumber_end_4.getTailPathTerm() ;}}} while(!( (tomMatch33NameNumber_end_4==tomMatch33NameNumber_begin_3) ));}}}}}}}}

        output.append(")");
      }}}}}}}{ Object tomMatch32NameNumber_freshVar_4=term;if ( (tomMatch32NameNumber_freshVar_4 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch32NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch32NameNumber_freshVar_4);{  tom.gom.adt.rule.types.Term  tomMatch32NameNumber_freshVar_7=tomMatch32NameNumber_freshSubject_1;if ( (tomMatch32NameNumber_freshVar_7 instanceof tom.gom.adt.rule.types.term.Appl) ) {{  String  tomMatch32NameNumber_freshVar_5= tomMatch32NameNumber_freshVar_7.getsymbol() ;{  tom.gom.adt.rule.types.TermList  tomMatch32NameNumber_freshVar_6= tomMatch32NameNumber_freshVar_7.getargs() ;

        output.append(tomMatch32NameNumber_freshVar_5);
        output.append("(");
        output.append(genTermList(tomMatch32NameNumber_freshVar_6));
        output.append(")");
      }}}}}}}{ Object tomMatch32NameNumber_freshVar_8=term;if ( (tomMatch32NameNumber_freshVar_8 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch32NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch32NameNumber_freshVar_8);{  tom.gom.adt.rule.types.Term  tomMatch32NameNumber_freshVar_10=tomMatch32NameNumber_freshSubject_1;if ( (tomMatch32NameNumber_freshVar_10 instanceof tom.gom.adt.rule.types.term.Var) ) {{  String  tomMatch32NameNumber_freshVar_9= tomMatch32NameNumber_freshVar_10.getname() ;

        output.append(tomMatch32NameNumber_freshVar_9);
      }}}}}}{ Object tomMatch32NameNumber_freshVar_11=term;if ( (tomMatch32NameNumber_freshVar_11 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch32NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch32NameNumber_freshVar_11);{  tom.gom.adt.rule.types.Term  tomMatch32NameNumber_freshVar_13=tomMatch32NameNumber_freshSubject_1;if ( (tomMatch32NameNumber_freshVar_13 instanceof tom.gom.adt.rule.types.term.BuiltinInt) ) {{  int  tomMatch32NameNumber_freshVar_12= tomMatch32NameNumber_freshVar_13.geti() ;

        output.append(tomMatch32NameNumber_freshVar_12);
      }}}}}}{ Object tomMatch32NameNumber_freshVar_14=term;if ( (tomMatch32NameNumber_freshVar_14 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch32NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch32NameNumber_freshVar_14);{  tom.gom.adt.rule.types.Term  tomMatch32NameNumber_freshVar_16=tomMatch32NameNumber_freshSubject_1;if ( (tomMatch32NameNumber_freshVar_16 instanceof tom.gom.adt.rule.types.term.BuiltinString) ) {{  String  tomMatch32NameNumber_freshVar_15= tomMatch32NameNumber_freshVar_16.gets() ;

        output.append(tomMatch32NameNumber_freshVar_15);
      }}}}}}}

    return output.toString();
  }

  private String genTermList(TermList list) {
    StringBuilder output = new StringBuilder();
    {{ Object tomMatch34NameNumber_freshVar_0=list;if ( (tomMatch34NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.TermList) ) {{  tom.gom.adt.rule.types.TermList  tomMatch34NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.TermList )tomMatch34NameNumber_freshVar_0);{  tom.gom.adt.rule.types.TermList  tomMatch34NameNumber_freshVar_1=tomMatch34NameNumber_freshSubject_1;if ( ((tomMatch34NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch34NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {if ( tomMatch34NameNumber_freshVar_1.isEmptyTermList() ) {
 return ""; }}}}}}{ Object tomMatch34NameNumber_freshVar_2=list;if ( (tomMatch34NameNumber_freshVar_2 instanceof tom.gom.adt.rule.types.TermList) ) {{  tom.gom.adt.rule.types.TermList  tomMatch34NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.TermList )tomMatch34NameNumber_freshVar_2);{  tom.gom.adt.rule.types.TermList  tomMatch34NameNumber_freshVar_3=tomMatch34NameNumber_freshSubject_1;if ( ((tomMatch34NameNumber_freshVar_3 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch34NameNumber_freshVar_3 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {if (!( tomMatch34NameNumber_freshVar_3.isEmptyTermList() )) {{  tom.gom.adt.rule.types.TermList  tomMatch34NameNumber_freshVar_4= tomMatch34NameNumber_freshVar_3.getTailTermList() ;{  tom.gom.adt.rule.types.TermList  tom_t=tomMatch34NameNumber_freshVar_4;

        output.append(genTerm( tomMatch34NameNumber_freshVar_3.getHeadTermList() ));
        if (!tom_t.isEmptyTermList()) {
          output.append(", ");
        }
        output.append(genTermList(tom_t));
      }}}}}}}}}

    return output.toString();
  }

  private String genTermWithExplicitVar(Term termArg, String fathersymbol, int omega) {
    StringBuilder output = new StringBuilder();
    {{ Object tomMatch35NameNumber_freshVar_0=termArg;if ( (tomMatch35NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch35NameNumber_freshVar_0);{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshVar_3=tomMatch35NameNumber_freshSubject_1;if ( (tomMatch35NameNumber_freshVar_3 instanceof tom.gom.adt.rule.types.term.LabTerm) ) {{  String  tomMatch35NameNumber_freshVar_1= tomMatch35NameNumber_freshVar_3.getl() ;{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshVar_2= tomMatch35NameNumber_freshVar_3.gett() ;

        output.append("Lab"+sortname);
        output.append("(");
        output.append("\""+tomMatch35NameNumber_freshVar_1+"\"");
        output.append(",");
        output.append(genTermWithExplicitVar(tomMatch35NameNumber_freshVar_2,fathersymbol,omega));
        output.append(")");
      }}}}}}}{ Object tomMatch35NameNumber_freshVar_4=termArg;if ( (tomMatch35NameNumber_freshVar_4 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch35NameNumber_freshVar_4);{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshVar_6=tomMatch35NameNumber_freshSubject_1;if ( (tomMatch35NameNumber_freshVar_6 instanceof tom.gom.adt.rule.types.term.RefTerm) ) {{  String  tomMatch35NameNumber_freshVar_5= tomMatch35NameNumber_freshVar_6.getl() ;

        output.append("Ref"+sortname);
        output.append("(");
        output.append("\""+tomMatch35NameNumber_freshVar_5+"\"");
        output.append(")");
      }}}}}}{ Object tomMatch35NameNumber_freshVar_7=termArg;if ( (tomMatch35NameNumber_freshVar_7 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch35NameNumber_freshVar_7);{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshVar_10=tomMatch35NameNumber_freshSubject_1;if ( (tomMatch35NameNumber_freshVar_10 instanceof tom.gom.adt.rule.types.term.Appl) ) {{  String  tomMatch35NameNumber_freshVar_8= tomMatch35NameNumber_freshVar_10.getsymbol() ;{  tom.gom.adt.rule.types.TermList  tomMatch35NameNumber_freshVar_9= tomMatch35NameNumber_freshVar_10.getargs() ;{  String  tom_symbol=tomMatch35NameNumber_freshVar_8;

        output.append(tom_symbol);
        output.append("(");
        output.append(genTermListWithExplicitVar(tom_symbol,tomMatch35NameNumber_freshVar_9));
        output.append(")");
      }}}}}}}}{ Object tomMatch35NameNumber_freshVar_11=termArg;if ( (tomMatch35NameNumber_freshVar_11 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch35NameNumber_freshVar_11);{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshVar_13=tomMatch35NameNumber_freshSubject_1;if ( (tomMatch35NameNumber_freshVar_13 instanceof tom.gom.adt.rule.types.term.Var) ) {{  String  tomMatch35NameNumber_freshVar_12= tomMatch35NameNumber_freshVar_13.getname() ;{  String  tom_name=tomMatch35NameNumber_freshVar_12;

        //the variable must be replaced by a meta representation of the var
        //in the signature of the corresponding  sort
        //test if the variable is not at the root position 
        if(omega!=0) {
          String sortvar = st.getChildSort(fathersymbol,omega);
          output.append("Var"+sortvar+"(\""+tom_name+"\")");
        } else {
          //it is necessary of the sort declared for the strategy
          output.append("Var"+sortname+"(\""+tom_name+"\")");
        }
      }}}}}}}{ Object tomMatch35NameNumber_freshVar_14=termArg;if ( (tomMatch35NameNumber_freshVar_14 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch35NameNumber_freshVar_14);{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshVar_16=tomMatch35NameNumber_freshSubject_1;if ( (tomMatch35NameNumber_freshVar_16 instanceof tom.gom.adt.rule.types.term.BuiltinInt) ) {{  int  tomMatch35NameNumber_freshVar_15= tomMatch35NameNumber_freshVar_16.geti() ;

        output.append(tomMatch35NameNumber_freshVar_15);
      }}}}}}{ Object tomMatch35NameNumber_freshVar_17=termArg;if ( (tomMatch35NameNumber_freshVar_17 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch35NameNumber_freshVar_17);{  tom.gom.adt.rule.types.Term  tomMatch35NameNumber_freshVar_19=tomMatch35NameNumber_freshSubject_1;if ( (tomMatch35NameNumber_freshVar_19 instanceof tom.gom.adt.rule.types.term.BuiltinString) ) {{  String  tomMatch35NameNumber_freshVar_18= tomMatch35NameNumber_freshVar_19.gets() ;

        output.append(tomMatch35NameNumber_freshVar_18);
      }}}}}}}

    return output.toString();
  }

  private String genTermListWithExplicitVar(String fathersymbol, TermList list) {
    StringBuilder output = new StringBuilder();
    int omega=1;
    {{ Object tomMatch36NameNumber_freshVar_0=list;if ( (tomMatch36NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.TermList) ) {{  tom.gom.adt.rule.types.TermList  tomMatch36NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.TermList )tomMatch36NameNumber_freshVar_0);{  tom.gom.adt.rule.types.TermList  tomMatch36NameNumber_freshVar_1=tomMatch36NameNumber_freshSubject_1;if ( ((tomMatch36NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch36NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {if ( tomMatch36NameNumber_freshVar_1.isEmptyTermList() ) {
 return ""; }}}}}}{ Object tomMatch36NameNumber_freshVar_2=list;if ( (tomMatch36NameNumber_freshVar_2 instanceof tom.gom.adt.rule.types.TermList) ) {{  tom.gom.adt.rule.types.TermList  tomMatch36NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.TermList )tomMatch36NameNumber_freshVar_2);{  tom.gom.adt.rule.types.TermList  tomMatch36NameNumber_freshVar_3=tomMatch36NameNumber_freshSubject_1;if ( ((tomMatch36NameNumber_freshVar_3 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch36NameNumber_freshVar_3 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {{  tom.gom.adt.rule.types.TermList  tomMatch36NameNumber_begin_5=tomMatch36NameNumber_freshVar_3;{  tom.gom.adt.rule.types.TermList  tomMatch36NameNumber_end_6=tomMatch36NameNumber_freshVar_3;do {{{  tom.gom.adt.rule.types.TermList  tomMatch36NameNumber_freshVar_4=tomMatch36NameNumber_end_6;if (!( tomMatch36NameNumber_freshVar_4.isEmptyTermList() )) {{  tom.gom.adt.rule.types.TermList  tomMatch36NameNumber_freshVar_7= tomMatch36NameNumber_freshVar_4.getTailTermList() ;

        output.append(genTermWithExplicitVar( tomMatch36NameNumber_freshVar_4.getHeadTermList() ,fathersymbol,omega));
        omega++;
        if (!tomMatch36NameNumber_freshVar_7.isEmptyTermList()) {
          output.append(", ");
        }
      }}}if ( tomMatch36NameNumber_end_6.isEmptyTermList() ) {tomMatch36NameNumber_end_6=tomMatch36NameNumber_begin_5;} else {tomMatch36NameNumber_end_6= tomMatch36NameNumber_end_6.getTailTermList() ;}}} while(!( (tomMatch36NameNumber_end_6==tomMatch36NameNumber_begin_5) ));}}}}}}}}

    return output.toString();
  }


  public static Term expand(Term t) {
    java.util.HashMap map = new java.util.HashMap();
    Term tt = null;
    try {
      tt = (Term) tom_make_InnermostIdSeq(tom_make_NormalizeLabel(map)).visit(t);
    } catch (tom.library.sl.VisitFailure e) {
      throw new tom.gom.tools.error.GomRuntimeException("Unexpected strategy failure!");
    }
    return label2path(tt);
  }

  




  static class Info {
    public Position omegaRef;
    public Term sharedTerm;
  }

  public static class CollectSubterm extends tom.library.sl.BasicStrategy {private  String  label;private Info info;public CollectSubterm( String  label, Info info) {super(( new tom.library.sl.Fail() ));this.label=label;this.info=info;}public  String  getlabel() {return label;}public Info getinfo() {return info;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch37NameNumber_freshVar_0=tom__arg;if ( (tomMatch37NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch37NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch37NameNumber_freshVar_0);{  tom.gom.adt.rule.types.Term  tomMatch37NameNumber_freshVar_3=tomMatch37NameNumber_freshSubject_1;if ( (tomMatch37NameNumber_freshVar_3 instanceof tom.gom.adt.rule.types.term.LabTerm) ) {{  String  tomMatch37NameNumber_freshVar_1= tomMatch37NameNumber_freshVar_3.getl() ;{  tom.gom.adt.rule.types.Term  tomMatch37NameNumber_freshVar_2= tomMatch37NameNumber_freshVar_3.gett() ;{  String  tom_label=tomMatch37NameNumber_freshVar_1;


        Position current = getEnvironment().getPosition();
        if (label.equals(tom_label)) {
          //test if it is not a cycle
          if (!info.omegaRef.hasPrefix(current)) {
            //return a ref
            info.sharedTerm = tomMatch37NameNumber_freshVar_2;
            return  tom.gom.adt.rule.types.term.RefTerm.make(tom_label) ;
          }
          else {
            //do not return a ref and stop to collect
            return tomMatch37NameNumber_freshSubject_1;  
          }
        }
      }}}}}}}}}return _visit_Term(tom__arg,introspector); }public  tom.gom.adt.rule.types.Term  _visit_Term( tom.gom.adt.rule.types.Term  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.gom.adt.rule.types.Term )any.visit(environment,introspector));} else {return (( tom.gom.adt.rule.types.Term )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.gom.adt.rule.types.Term) ) {return visit_Term((( tom.gom.adt.rule.types.Term )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}public static  tom.library.sl.Strategy  tom_make_CollectSubterm( String  t0, Info t1) { return new CollectSubterm(t0,t1);}public static class NormalizeLabel extends tom.library.sl.BasicStrategy {private  java.util.HashMap  map;public NormalizeLabel( java.util.HashMap  map) {super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.HashMap  getmap() {return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch38NameNumber_freshVar_0=tom__arg;if ( (tomMatch38NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch38NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch38NameNumber_freshVar_0);{  tom.gom.adt.rule.types.Term  tomMatch38NameNumber_freshVar_2=tomMatch38NameNumber_freshSubject_1;if ( (tomMatch38NameNumber_freshVar_2 instanceof tom.gom.adt.rule.types.term.RefTerm) ) {{  String  tomMatch38NameNumber_freshVar_1= tomMatch38NameNumber_freshVar_2.getl() ;{  String  tom_label=tomMatch38NameNumber_freshVar_1;






        if (! map.containsKey(tom_label)){
          Position old = getEnvironment().getPosition();
          Position rootpos = new Position(new int[]{});
          Info info = new Info();
          info.omegaRef = old;
          getEnvironment().followPath(rootpos.sub(getEnvironment().getPosition()));           
          tom_make_OnceTopDown(tom_make_CollectSubterm(tom_label,info)).visit(getEnvironment());            
          getEnvironment().followPath(old.sub(getEnvironment().getPosition()));
          //test if is is not a ref to a cycle
          if (info.sharedTerm!=null) {
            map.put(tom_label,old);
            return  tom.gom.adt.rule.types.term.LabTerm.make(tom_label, info.sharedTerm) ;
          }
        }
      }}}}}}}{ Object tomMatch38NameNumber_freshVar_3=tom__arg;if ( (tomMatch38NameNumber_freshVar_3 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch38NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch38NameNumber_freshVar_3);{  tom.gom.adt.rule.types.Term  tomMatch38NameNumber_freshVar_5=tomMatch38NameNumber_freshSubject_1;if ( (tomMatch38NameNumber_freshVar_5 instanceof tom.gom.adt.rule.types.term.LabTerm) ) {{  String  tomMatch38NameNumber_freshVar_4= tomMatch38NameNumber_freshVar_5.getl() ;

        map.put(tomMatch38NameNumber_freshVar_4,getEnvironment().getPosition());
      }}}}}}}return _visit_Term(tom__arg,introspector); }public  tom.gom.adt.rule.types.Term  _visit_Term( tom.gom.adt.rule.types.Term  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.gom.adt.rule.types.Term )any.visit(environment,introspector));} else {return (( tom.gom.adt.rule.types.Term )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.gom.adt.rule.types.Term) ) {return visit_Term((( tom.gom.adt.rule.types.Term )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}public static  tom.library.sl.Strategy  tom_make_NormalizeLabel( java.util.HashMap  t0) { return new NormalizeLabel(t0);}



  public static Term label2path(Term t) {
    java.util.HashMap map = new java.util.HashMap();
    try {
      return (Term) ( (( (( null )==null)?tom_make_TopDown(tom_make_Label2Path(map)):new tom.library.sl.Sequence(tom_make_TopDown(tom_make_Label2Path(map)),( null )) )==null)?tom_make_RepeatId(tom_make_OnceTopDownId(tom_make_CollectLabels(map))):new tom.library.sl.Sequence(tom_make_RepeatId(tom_make_OnceTopDownId(tom_make_CollectLabels(map))),( (( null )==null)?tom_make_TopDown(tom_make_Label2Path(map)):new tom.library.sl.Sequence(tom_make_TopDown(tom_make_Label2Path(map)),( null )) )) ).visit(t);
    } catch (tom.library.sl.VisitFailure e) {
      throw new tom.gom.tools.error.GomRuntimeException("Unexpected strategy failure!");
    }  
  }

  public static class CollectLabels extends tom.library.sl.BasicStrategy {private  java.util.HashMap  map;public CollectLabels( java.util.HashMap  map) {super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.HashMap  getmap() {return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch39NameNumber_freshVar_0=tom__arg;if ( (tomMatch39NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch39NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch39NameNumber_freshVar_0);{  tom.gom.adt.rule.types.Term  tomMatch39NameNumber_freshVar_3=tomMatch39NameNumber_freshSubject_1;if ( (tomMatch39NameNumber_freshVar_3 instanceof tom.gom.adt.rule.types.term.LabTerm) ) {{  String  tomMatch39NameNumber_freshVar_1= tomMatch39NameNumber_freshVar_3.getl() ;{  tom.gom.adt.rule.types.Term  tomMatch39NameNumber_freshVar_2= tomMatch39NameNumber_freshVar_3.gett() ;


        map.put(tomMatch39NameNumber_freshVar_1,getEnvironment().getPosition());
        return tomMatch39NameNumber_freshVar_2;
      }}}}}}}}return _visit_Term(tom__arg,introspector); }public  tom.gom.adt.rule.types.Term  _visit_Term( tom.gom.adt.rule.types.Term  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.gom.adt.rule.types.Term )any.visit(environment,introspector));} else {return (( tom.gom.adt.rule.types.Term )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.gom.adt.rule.types.Term) ) {return visit_Term((( tom.gom.adt.rule.types.Term )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}public static  tom.library.sl.Strategy  tom_make_CollectLabels( java.util.HashMap  t0) { return new CollectLabels(t0);}public static class PathForPattern extends tom.library.sl.BasicStrategy {public PathForPattern() {super(( new tom.library.sl.Identity() ));}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch40NameNumber_freshVar_0=tom__arg;if ( (tomMatch40NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch40NameNumber_freshVar_0);{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_1=tomMatch40NameNumber_freshSubject_1;if ( ((tomMatch40NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {if (!( tomMatch40NameNumber_freshVar_1.isEmptyPathTerm() )) {{  int  tomMatch40NameNumber_freshVar_4= tomMatch40NameNumber_freshVar_1.getHeadPathTerm() ;if ( -1==tomMatch40NameNumber_freshVar_4 ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_2= tomMatch40NameNumber_freshVar_1.getTailPathTerm() ;







        PathTerm newtail = (PathTerm) tom_make_PathForPattern().visit(tomMatch40NameNumber_freshVar_2);
        return newtail;
      }}}}}}}}}{ Object tomMatch40NameNumber_freshVar_5=tom__arg;if ( (tomMatch40NameNumber_freshVar_5 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch40NameNumber_freshVar_5);{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_8=tomMatch40NameNumber_freshSubject_1;if ( ((tomMatch40NameNumber_freshVar_8 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_8 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_begin_10=tomMatch40NameNumber_freshVar_8;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_end_11=tomMatch40NameNumber_freshVar_8;do {{{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_7=tom_get_slice_PathTerm(tomMatch40NameNumber_begin_10,tomMatch40NameNumber_end_11, tom.gom.adt.rule.types.term.EmptyPathTerm.make() );{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_9=tomMatch40NameNumber_end_11;if (!( tomMatch40NameNumber_freshVar_9.isEmptyPathTerm() )) {{  int  tomMatch40NameNumber_freshVar_14= tomMatch40NameNumber_freshVar_9.getHeadPathTerm() ;if ( -1==tomMatch40NameNumber_freshVar_14 ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_12= tomMatch40NameNumber_freshVar_9.getTailPathTerm() ;{  tom.gom.adt.rule.types.Term  tom_sublist=tomMatch40NameNumber_freshVar_7;{ Object tomMatch40NameNumber_freshVar_6=tom_sublist;if ( (tomMatch40NameNumber_freshVar_6 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshSubject_2=(( tom.gom.adt.rule.types.Term )tomMatch40NameNumber_freshVar_6);{ boolean tomMatch40NameNumber_freshVar_25= false ;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_15=tomMatch40NameNumber_freshVar_7;if ( ((tomMatch40NameNumber_freshVar_15 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_15 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_22=tomMatch40NameNumber_freshVar_7;if ( (tomMatch40NameNumber_freshVar_22==tom_sublist) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_begin_17=tomMatch40NameNumber_freshVar_15;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_end_18=tomMatch40NameNumber_freshVar_15;do {{{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_16=tomMatch40NameNumber_end_18;if (!( tomMatch40NameNumber_freshVar_16.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_19= tomMatch40NameNumber_freshVar_16.getTailPathTerm() ;{ boolean tomMatch40NameNumber_freshVar_26= false ;{  int  tomMatch40NameNumber_freshVar_23= tomMatch40NameNumber_freshVar_16.getHeadPathTerm() ;if ( -2==tomMatch40NameNumber_freshVar_23 ) {tomMatch40NameNumber_freshVar_26= true ;}}if ((tomMatch40NameNumber_freshVar_26 ==  false )) {tomMatch40NameNumber_freshVar_25= true ;}}}}}if ( tomMatch40NameNumber_end_18.isEmptyPathTerm() ) {tomMatch40NameNumber_end_18=tomMatch40NameNumber_begin_17;} else {tomMatch40NameNumber_end_18= tomMatch40NameNumber_end_18.getTailPathTerm() ;}}} while(!( (tomMatch40NameNumber_end_18==tomMatch40NameNumber_begin_17) ));}}}}}}if ((tomMatch40NameNumber_freshVar_25 ==  false )) {{ boolean tomMatch40NameNumber_freshVar_24= false ;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_21=tomMatch40NameNumber_freshSubject_2;if ( ((tomMatch40NameNumber_freshVar_21 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_21 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {if ( tomMatch40NameNumber_freshVar_21.isEmptyPathTerm() ) {tomMatch40NameNumber_freshVar_24= true ;}}}if ((tomMatch40NameNumber_freshVar_24 ==  false )) {



        //TODO: avoid the compilation warning
        // because it generates a  disjunction which is not fully supported with associative operators
        int upcount = tom_sublist.length();
        PathTerm newtail = (PathTerm) tom_make_PathForPattern().visit(tomMatch40NameNumber_freshVar_12);
        return  tom.gom.adt.rule.types.term.ConsPathTerm.make(-upcount,tom_append_list_PathTerm(newtail, tom.gom.adt.rule.types.term.EmptyPathTerm.make() )) ;
      }}}}}}}}}}}}}}if ( tomMatch40NameNumber_end_11.isEmptyPathTerm() ) {tomMatch40NameNumber_end_11=tomMatch40NameNumber_begin_10;} else {tomMatch40NameNumber_end_11= tomMatch40NameNumber_end_11.getTailPathTerm() ;}}} while(!( (tomMatch40NameNumber_end_11==tomMatch40NameNumber_begin_10) ));}}}}}}}{ Object tomMatch40NameNumber_freshVar_27=tom__arg;if ( (tomMatch40NameNumber_freshVar_27 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch40NameNumber_freshVar_27);{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_33=tomMatch40NameNumber_freshSubject_1;if ( ((tomMatch40NameNumber_freshVar_33 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_33 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_begin_35=tomMatch40NameNumber_freshVar_33;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_end_36=tomMatch40NameNumber_freshVar_33;do {{{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_32=tom_get_slice_PathTerm(tomMatch40NameNumber_begin_35,tomMatch40NameNumber_end_36, tom.gom.adt.rule.types.term.EmptyPathTerm.make() );{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_34=tomMatch40NameNumber_end_36;{  tom.gom.adt.rule.types.Term  tom_tail=tomMatch40NameNumber_freshVar_34;{  tom.gom.adt.rule.types.Term  tom_sublist=tomMatch40NameNumber_freshVar_32;{ int tomMatch40NameNumber_freshVar_60=0;{ Object tomMatch40NameNumber_freshVar_30= null ;{  int  tomMatch40NameNumber_freshVar_46= 0 ;{ Object tomMatch40NameNumber_freshVar_29= null ;{  int  tomMatch40NameNumber_freshVar_45= 0 ;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshSubject_3= null ;{ Object tomMatch40NameNumber_freshVar_28= null ;do {{ boolean tomMatch40NameNumber_freshVar_59= false ;if ( ( tomMatch40NameNumber_freshVar_60 >= 0 && tomMatch40NameNumber_freshVar_60 <= 0 ) ) {tomMatch40NameNumber_freshVar_28=tom_tail;if ( (tomMatch40NameNumber_freshVar_28 instanceof tom.gom.adt.rule.types.Term) ) {tomMatch40NameNumber_freshSubject_3=(( tom.gom.adt.rule.types.Term )tomMatch40NameNumber_freshVar_28);{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_38=tomMatch40NameNumber_freshSubject_3;if ( ((tomMatch40NameNumber_freshVar_38 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_38 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {if (!( tomMatch40NameNumber_freshVar_38.isEmptyPathTerm() )) {tomMatch40NameNumber_freshVar_45= tomMatch40NameNumber_freshVar_38.getHeadPathTerm() ;if ( 1==tomMatch40NameNumber_freshVar_45 ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_39= tomMatch40NameNumber_freshVar_38.getTailPathTerm() ;tomMatch40NameNumber_freshVar_59= true ;}}}}}}} else {if ( ( tomMatch40NameNumber_freshVar_60 >= 1 && tomMatch40NameNumber_freshVar_60 <= 1 ) ) {tomMatch40NameNumber_freshVar_29=tom_tail;if ( (tomMatch40NameNumber_freshVar_29 instanceof tom.gom.adt.rule.types.Term) ) {tomMatch40NameNumber_freshSubject_3=(( tom.gom.adt.rule.types.Term )tomMatch40NameNumber_freshVar_29);{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_41=tomMatch40NameNumber_freshSubject_3;if ( ((tomMatch40NameNumber_freshVar_41 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_41 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {if (!( tomMatch40NameNumber_freshVar_41.isEmptyPathTerm() )) {tomMatch40NameNumber_freshVar_46= tomMatch40NameNumber_freshVar_41.getHeadPathTerm() ;if ( 2==tomMatch40NameNumber_freshVar_46 ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_42= tomMatch40NameNumber_freshVar_41.getTailPathTerm() ;tomMatch40NameNumber_freshVar_59= true ;}}}}}}} else {if ( ( tomMatch40NameNumber_freshVar_60 >= 2 && tomMatch40NameNumber_freshVar_60 <= 2 ) ) {tomMatch40NameNumber_freshVar_30=tom_tail;if ( (tomMatch40NameNumber_freshVar_30 instanceof tom.gom.adt.rule.types.Term) ) {tomMatch40NameNumber_freshSubject_3=(( tom.gom.adt.rule.types.Term )tomMatch40NameNumber_freshVar_30);{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_44=tomMatch40NameNumber_freshSubject_3;if ( ((tomMatch40NameNumber_freshVar_44 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_44 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {if ( tomMatch40NameNumber_freshVar_44.isEmptyPathTerm() ) {tomMatch40NameNumber_freshVar_59= true ;}}}}}}}if ((tomMatch40NameNumber_freshVar_59 ==  true )) {{ Object tomMatch40NameNumber_freshVar_31=tom_sublist;if ( (tomMatch40NameNumber_freshVar_31 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshSubject_4=(( tom.gom.adt.rule.types.Term )tomMatch40NameNumber_freshVar_31);{ boolean tomMatch40NameNumber_freshVar_57= false ;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_47=tomMatch40NameNumber_freshVar_32;if ( ((tomMatch40NameNumber_freshVar_47 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_47 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_54=tomMatch40NameNumber_freshVar_32;if ( (tomMatch40NameNumber_freshVar_54==tom_sublist) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_begin_49=tomMatch40NameNumber_freshVar_47;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_end_50=tomMatch40NameNumber_freshVar_47;do {{{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_48=tomMatch40NameNumber_end_50;if (!( tomMatch40NameNumber_freshVar_48.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_51= tomMatch40NameNumber_freshVar_48.getTailPathTerm() ;{ boolean tomMatch40NameNumber_freshVar_58= false ;{  int  tomMatch40NameNumber_freshVar_55= tomMatch40NameNumber_freshVar_48.getHeadPathTerm() ;if ( -2==tomMatch40NameNumber_freshVar_55 ) {tomMatch40NameNumber_freshVar_58= true ;}}if ((tomMatch40NameNumber_freshVar_58 ==  false )) {tomMatch40NameNumber_freshVar_57= true ;}}}}}if ( tomMatch40NameNumber_end_50.isEmptyPathTerm() ) {tomMatch40NameNumber_end_50=tomMatch40NameNumber_begin_49;} else {tomMatch40NameNumber_end_50= tomMatch40NameNumber_end_50.getTailPathTerm() ;}}} while(!( (tomMatch40NameNumber_end_50==tomMatch40NameNumber_begin_49) ));}}}}}}if ((tomMatch40NameNumber_freshVar_57 ==  false )) {{ boolean tomMatch40NameNumber_freshVar_56= false ;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_53=tomMatch40NameNumber_freshSubject_4;if ( ((tomMatch40NameNumber_freshVar_53 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_53 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {if ( tomMatch40NameNumber_freshVar_53.isEmptyPathTerm() ) {tomMatch40NameNumber_freshVar_56= true ;}}}if ((tomMatch40NameNumber_freshVar_56 ==  false )) {




        int downcount = tom_sublist.length();
        PathTerm newtail = (PathTerm) tom_make_PathForPattern().visit(tom_tail);
        return  tom.gom.adt.rule.types.term.ConsPathTerm.make(-downcount,tom_append_list_PathTerm(newtail, tom.gom.adt.rule.types.term.EmptyPathTerm.make() )) ;
      }}}}}}}}tomMatch40NameNumber_freshVar_60=tomMatch40NameNumber_freshVar_60 + 1;}} while(tomMatch40NameNumber_freshVar_60 < 3);}}}}}}}}}}}if ( tomMatch40NameNumber_end_36.isEmptyPathTerm() ) {tomMatch40NameNumber_end_36=tomMatch40NameNumber_begin_35;} else {tomMatch40NameNumber_end_36= tomMatch40NameNumber_end_36.getTailPathTerm() ;}}} while(!( (tomMatch40NameNumber_end_36==tomMatch40NameNumber_begin_35) ));}}}}}}}{ Object tomMatch40NameNumber_freshVar_61=tom__arg;if ( (tomMatch40NameNumber_freshVar_61 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch40NameNumber_freshVar_61);{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_64=tomMatch40NameNumber_freshSubject_1;if ( ((tomMatch40NameNumber_freshVar_64 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_64 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_begin_66=tomMatch40NameNumber_freshVar_64;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_end_67=tomMatch40NameNumber_freshVar_64;do {{{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_63=tom_get_slice_PathTerm(tomMatch40NameNumber_begin_66,tomMatch40NameNumber_end_67, tom.gom.adt.rule.types.term.EmptyPathTerm.make() );{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_65=tomMatch40NameNumber_end_67;if (!( tomMatch40NameNumber_freshVar_65.isEmptyPathTerm() )) {{  int  tomMatch40NameNumber_freshVar_70= tomMatch40NameNumber_freshVar_65.getHeadPathTerm() ;if ( 1==tomMatch40NameNumber_freshVar_70 ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_68= tomMatch40NameNumber_freshVar_65.getTailPathTerm() ;{  tom.gom.adt.rule.types.Term  tom_sublist=tomMatch40NameNumber_freshVar_63;{ Object tomMatch40NameNumber_freshVar_62=tom_sublist;if ( (tomMatch40NameNumber_freshVar_62 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshSubject_5=(( tom.gom.adt.rule.types.Term )tomMatch40NameNumber_freshVar_62);{ boolean tomMatch40NameNumber_freshVar_81= false ;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_71=tomMatch40NameNumber_freshVar_63;if ( ((tomMatch40NameNumber_freshVar_71 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_71 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_78=tomMatch40NameNumber_freshVar_63;if ( (tomMatch40NameNumber_freshVar_78==tom_sublist) ) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_begin_73=tomMatch40NameNumber_freshVar_71;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_end_74=tomMatch40NameNumber_freshVar_71;do {{{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_72=tomMatch40NameNumber_end_74;if (!( tomMatch40NameNumber_freshVar_72.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_75= tomMatch40NameNumber_freshVar_72.getTailPathTerm() ;{ boolean tomMatch40NameNumber_freshVar_82= false ;{  int  tomMatch40NameNumber_freshVar_79= tomMatch40NameNumber_freshVar_72.getHeadPathTerm() ;if ( 2==tomMatch40NameNumber_freshVar_79 ) {tomMatch40NameNumber_freshVar_82= true ;}}if ((tomMatch40NameNumber_freshVar_82 ==  false )) {tomMatch40NameNumber_freshVar_81= true ;}}}}}if ( tomMatch40NameNumber_end_74.isEmptyPathTerm() ) {tomMatch40NameNumber_end_74=tomMatch40NameNumber_begin_73;} else {tomMatch40NameNumber_end_74= tomMatch40NameNumber_end_74.getTailPathTerm() ;}}} while(!( (tomMatch40NameNumber_end_74==tomMatch40NameNumber_begin_73) ));}}}}}}if ((tomMatch40NameNumber_freshVar_81 ==  false )) {{ boolean tomMatch40NameNumber_freshVar_80= false ;{  tom.gom.adt.rule.types.Term  tomMatch40NameNumber_freshVar_77=tomMatch40NameNumber_freshSubject_5;if ( ((tomMatch40NameNumber_freshVar_77 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch40NameNumber_freshVar_77 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {if ( tomMatch40NameNumber_freshVar_77.isEmptyPathTerm() ) {tomMatch40NameNumber_freshVar_80= true ;}}}if ((tomMatch40NameNumber_freshVar_80 ==  false )) {



        int downcount = tom_sublist.length();
        PathTerm newtail = (PathTerm) tom_make_PathForPattern().visit(tomMatch40NameNumber_freshVar_68);
        return  tom.gom.adt.rule.types.term.ConsPathTerm.make(downcount,tom_append_list_PathTerm(newtail, tom.gom.adt.rule.types.term.EmptyPathTerm.make() )) ;
      }}}}}}}}}}}}}}if ( tomMatch40NameNumber_end_67.isEmptyPathTerm() ) {tomMatch40NameNumber_end_67=tomMatch40NameNumber_begin_66;} else {tomMatch40NameNumber_end_67= tomMatch40NameNumber_end_67.getTailPathTerm() ;}}} while(!( (tomMatch40NameNumber_end_67==tomMatch40NameNumber_begin_66) ));}}}}}}}}return _visit_Term(tom__arg,introspector); }public  tom.gom.adt.rule.types.Term  _visit_Term( tom.gom.adt.rule.types.Term  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.gom.adt.rule.types.Term )any.visit(environment,introspector));} else {return (( tom.gom.adt.rule.types.Term )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.gom.adt.rule.types.Term) ) {return visit_Term((( tom.gom.adt.rule.types.Term )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}public static  tom.library.sl.Strategy  tom_make_PathForPattern() { return new PathForPattern();}public static class Normalize extends tom.library.sl.BasicStrategy {public Normalize() {super(( new tom.library.sl.Identity() ));}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch41NameNumber_freshVar_0=tom__arg;if ( (tomMatch41NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch41NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch41NameNumber_freshVar_0);{  tom.gom.adt.rule.types.Term  tomMatch41NameNumber_freshVar_1=tomMatch41NameNumber_freshSubject_1;if ( ((tomMatch41NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch41NameNumber_freshVar_1 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch41NameNumber_begin_3=tomMatch41NameNumber_freshVar_1;{  tom.gom.adt.rule.types.Term  tomMatch41NameNumber_end_4=tomMatch41NameNumber_freshVar_1;do {{{  tom.gom.adt.rule.types.Term  tomMatch41NameNumber_freshVar_2=tomMatch41NameNumber_end_4;if (!( tomMatch41NameNumber_freshVar_2.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch41NameNumber_freshVar_5= tomMatch41NameNumber_freshVar_2.getTailPathTerm() ;if (!( tomMatch41NameNumber_freshVar_5.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch41NameNumber_freshVar_6= tomMatch41NameNumber_freshVar_5.getTailPathTerm() ;






        if ( tomMatch41NameNumber_freshVar_2.getHeadPathTerm() ==- tomMatch41NameNumber_freshVar_5.getHeadPathTerm() ) {
          return tom_append_list_PathTerm(tom_get_slice_PathTerm(tomMatch41NameNumber_begin_3,tomMatch41NameNumber_end_4, tom.gom.adt.rule.types.term.EmptyPathTerm.make() ),tom_append_list_PathTerm(tomMatch41NameNumber_freshVar_6, tom.gom.adt.rule.types.term.EmptyPathTerm.make() ));
        }
      }}}}}if ( tomMatch41NameNumber_end_4.isEmptyPathTerm() ) {tomMatch41NameNumber_end_4=tomMatch41NameNumber_begin_3;} else {tomMatch41NameNumber_end_4= tomMatch41NameNumber_end_4.getTailPathTerm() ;}}} while(!( (tomMatch41NameNumber_end_4==tomMatch41NameNumber_begin_3) ));}}}}}}}}return _visit_Term(tom__arg,introspector); }public  tom.gom.adt.rule.types.Term  _visit_Term( tom.gom.adt.rule.types.Term  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.gom.adt.rule.types.Term )any.visit(environment,introspector));} else {return (( tom.gom.adt.rule.types.Term )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.gom.adt.rule.types.Term) ) {return visit_Term((( tom.gom.adt.rule.types.Term )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}public static  tom.library.sl.Strategy  tom_make_Normalize() { return new Normalize();}public static class Label2Path extends tom.library.sl.BasicStrategy {private  java.util.HashMap  map;public Label2Path( java.util.HashMap  map) {super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.HashMap  getmap() {return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch42NameNumber_freshVar_0=tom__arg;if ( (tomMatch42NameNumber_freshVar_0 instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch42NameNumber_freshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch42NameNumber_freshVar_0);{  tom.gom.adt.rule.types.Term  tomMatch42NameNumber_freshVar_2=tomMatch42NameNumber_freshSubject_1;if ( (tomMatch42NameNumber_freshVar_2 instanceof tom.gom.adt.rule.types.term.RefTerm) ) {{  String  tomMatch42NameNumber_freshVar_1= tomMatch42NameNumber_freshVar_2.getl() ;{  String  tom_label=tomMatch42NameNumber_freshVar_1;






        if (map.containsKey(tom_label)) {
          Path target = (Path) map.get(tom_label);
          Path ref = target.sub(getEnvironment().getPosition());
          //warning: do not normalize ref because we need to transform paths that go to the root
          //construct the PathTerm corresponding to the position ref
          Term path =  tom.gom.adt.rule.types.term.EmptyPathTerm.make() ;
          int head;
          while(ref.length()!=0) {
            head = ref.getHead();
            ref  = ref.getTail();
            path = tom_append_list_PathTerm(path, tom.gom.adt.rule.types.term.ConsPathTerm.make(head, tom.gom.adt.rule.types.term.EmptyPathTerm.make() ) );
          }
          //transform the path to obtain the corresponding one in the pattern
          Term newpath = (Term) ( (( (( null )==null)?tom_make_RepeatId(tom_make_Normalize()):new tom.library.sl.Sequence(tom_make_RepeatId(tom_make_Normalize()),( null )) )==null)?tom_make_PathForPattern():new tom.library.sl.Sequence(tom_make_PathForPattern(),( (( null )==null)?tom_make_RepeatId(tom_make_Normalize()):new tom.library.sl.Sequence(tom_make_RepeatId(tom_make_Normalize()),( null )) )) ).visitLight(path);
          return newpath;
        }
      }}}}}}}}return _visit_Term(tom__arg,introspector); }public  tom.gom.adt.rule.types.Term  _visit_Term( tom.gom.adt.rule.types.Term  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.gom.adt.rule.types.Term )any.visit(environment,introspector));} else {return (( tom.gom.adt.rule.types.Term )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.gom.adt.rule.types.Term) ) {return visit_Term((( tom.gom.adt.rule.types.Term )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}public static  tom.library.sl.Strategy  tom_make_Label2Path( java.util.HashMap  t0) { return new Label2Path(t0);}




  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }

}

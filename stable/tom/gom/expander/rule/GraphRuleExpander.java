/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * GOM
 *
 * Copyright (C) 2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Emilie Balland e-mail: Emilie.Balland@loria.fr
 *
 **/

package tom.gom.expander.rule;

import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.tree.Tree;
import java.util.logging.Level;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;
import java.util.logging.Logger;
import tom.gom.adt.gom.types.*;
import tom.gom.adt.rule.RuleTree;
import tom.gom.adt.rule.RuleAdaptor;
import tom.gom.adt.rule.types.*;
import tom.gom.adt.rule.types.term.*;
import tom.gom.tools.error.GomRuntimeException;
import tom.library.sl.*;

public class GraphRuleExpander {

  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  /* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) { return  (t1==t2) ;}private static boolean tom_is_sort_int(int t) { return  true ;} private static boolean tom_equal_term_Code(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Code(Object t) { return  t instanceof tom.gom.adt.code.types.Code ;}private static boolean tom_equal_term_Slot(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Slot(Object t) { return  t instanceof tom.gom.adt.gom.types.Slot ;}private static boolean tom_equal_term_TypedProduction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TypedProduction(Object t) { return  t instanceof tom.gom.adt.gom.types.TypedProduction ;}private static boolean tom_equal_term_OperatorDeclList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OperatorDeclList(Object t) { return  t instanceof tom.gom.adt.gom.types.OperatorDeclList ;}private static boolean tom_equal_term_HookDeclList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_HookDeclList(Object t) { return  t instanceof tom.gom.adt.gom.types.HookDeclList ;}private static boolean tom_equal_term_OperatorDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OperatorDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.OperatorDecl ;}private static boolean tom_equal_term_Decl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Decl(Object t) { return  t instanceof tom.gom.adt.gom.types.Decl ;}private static boolean tom_equal_term_Sort(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Sort(Object t) { return  t instanceof tom.gom.adt.gom.types.Sort ;}private static boolean tom_equal_term_SortDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SortDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.SortDecl ;}private static boolean tom_equal_term_HookDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_HookDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.HookDecl ;}private static boolean tom_equal_term_Module(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Module(Object t) { return  t instanceof tom.gom.adt.gom.types.Module ;}private static boolean tom_equal_term_SlotList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotList(Object t) { return  t instanceof tom.gom.adt.gom.types.SlotList ;}private static boolean tom_equal_term_SortList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SortList(Object t) { return  t instanceof tom.gom.adt.gom.types.SortList ;}private static boolean tom_equal_term_GomModuleName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomModuleName(Object t) { return  t instanceof tom.gom.adt.gom.types.GomModuleName ;}private static boolean tom_equal_term_ModuleDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ModuleDecl(Object t) { return  t instanceof tom.gom.adt.gom.types.ModuleDecl ;}private static boolean tom_equal_term_ModuleList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ModuleList(Object t) { return  t instanceof tom.gom.adt.gom.types.ModuleList ;}private static  tom.gom.adt.code.types.Code  tom_make_Code( String  t0) { return  tom.gom.adt.code.types.code.Code.make(t0) ; }private static boolean tom_is_fun_sym_Slot( tom.gom.adt.gom.types.Slot  t) { return  t instanceof tom.gom.adt.gom.types.slot.Slot ;}private static  String  tom_get_slot_Slot_Name( tom.gom.adt.gom.types.Slot  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Slot_Sort( tom.gom.adt.gom.types.Slot  t) { return  t.getSort() ;}private static boolean tom_is_fun_sym_Slots( tom.gom.adt.gom.types.TypedProduction  t) { return  t instanceof tom.gom.adt.gom.types.typedproduction.Slots ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_slot_Slots_Slots( tom.gom.adt.gom.types.TypedProduction  t) { return  t.getSlots() ;}private static boolean tom_is_fun_sym_Variadic( tom.gom.adt.gom.types.TypedProduction  t) { return  t instanceof tom.gom.adt.gom.types.typedproduction.Variadic ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Variadic_Sort( tom.gom.adt.gom.types.TypedProduction  t) { return  t.getSort() ;}private static boolean tom_is_fun_sym_OperatorDecl( tom.gom.adt.gom.types.OperatorDecl  t) { return  t instanceof tom.gom.adt.gom.types.operatordecl.OperatorDecl ;}private static  String  tom_get_slot_OperatorDecl_Name( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_OperatorDecl_Sort( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getSort() ;}private static  tom.gom.adt.gom.types.TypedProduction  tom_get_slot_OperatorDecl_Prod( tom.gom.adt.gom.types.OperatorDecl  t) { return  t.getProd() ;}private static boolean tom_is_fun_sym_Sort( tom.gom.adt.gom.types.Sort  t) { return  t instanceof tom.gom.adt.gom.types.sort.Sort ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Sort_Decl( tom.gom.adt.gom.types.Sort  t) { return  t.getDecl() ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_slot_Sort_Operators( tom.gom.adt.gom.types.Sort  t) { return  t.getOperators() ;}private static boolean tom_is_fun_sym_SortDecl( tom.gom.adt.gom.types.SortDecl  t) { return  t instanceof tom.gom.adt.gom.types.sortdecl.SortDecl ;}private static  String  tom_get_slot_SortDecl_Name( tom.gom.adt.gom.types.SortDecl  t) { return  t.getName() ;}private static  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_SortDecl_ModuleDecl( tom.gom.adt.gom.types.SortDecl  t) { return  t.getModuleDecl() ;}private static  tom.gom.adt.gom.types.HookDecl  tom_make_BlockHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.gom.types.hookdecl.BlockHookDecl.make(t0, t1) ; }private static  tom.gom.adt.gom.types.HookDecl  tom_make_ImportHookDecl( tom.gom.adt.gom.types.Decl  t0,  tom.gom.adt.code.types.Code  t1) { return  tom.gom.adt.gom.types.hookdecl.ImportHookDecl.make(t0, t1) ; }private static boolean tom_is_fun_sym_Module( tom.gom.adt.gom.types.Module  t) { return  t instanceof tom.gom.adt.gom.types.module.Module ;}private static  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_Module_MDecl( tom.gom.adt.gom.types.Module  t) { return  t.getMDecl() ;}private static  tom.gom.adt.gom.types.SortList  tom_get_slot_Module_Sorts( tom.gom.adt.gom.types.Module  t) { return  t.getSorts() ;}private static boolean tom_is_fun_sym_GomModuleName( tom.gom.adt.gom.types.GomModuleName  t) { return  t instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName ;}private static  String  tom_get_slot_GomModuleName_Name( tom.gom.adt.gom.types.GomModuleName  t) { return  t.getName() ;}private static boolean tom_is_fun_sym_ModuleDecl( tom.gom.adt.gom.types.ModuleDecl  t) { return  t instanceof tom.gom.adt.gom.types.moduledecl.ModuleDecl ;}private static  tom.gom.adt.gom.types.GomModuleName  tom_get_slot_ModuleDecl_ModuleName( tom.gom.adt.gom.types.ModuleDecl  t) { return  t.getModuleName() ;}private static  String  tom_get_slot_ModuleDecl_Pkg( tom.gom.adt.gom.types.ModuleDecl  t) { return  t.getPkg() ;}private static boolean tom_is_fun_sym_concOperator( tom.gom.adt.gom.types.OperatorDeclList  t) { return  t instanceof tom.gom.adt.gom.types.operatordecllist.ConsconcOperator || t instanceof tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_empty_list_concOperator() { return  tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator.make() ; }private static  tom.gom.adt.gom.types.OperatorDeclList  tom_cons_list_concOperator( tom.gom.adt.gom.types.OperatorDecl  e,  tom.gom.adt.gom.types.OperatorDeclList  l) { return  tom.gom.adt.gom.types.operatordecllist.ConsconcOperator.make(e,l) ; }private static  tom.gom.adt.gom.types.OperatorDecl  tom_get_head_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) { return  l.getHeadconcOperator() ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_tail_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) { return  l.getTailconcOperator() ;}private static boolean tom_is_empty_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) { return  l.isEmptyconcOperator() ;}   private static   tom.gom.adt.gom.types.OperatorDeclList  tom_append_list_concOperator( tom.gom.adt.gom.types.OperatorDeclList l1,  tom.gom.adt.gom.types.OperatorDeclList  l2) {     if(tom_is_empty_concOperator_OperatorDeclList(l1)) {       return l2;     } else if(tom_is_empty_concOperator_OperatorDeclList(l2)) {       return l1;     } else if(tom_is_empty_concOperator_OperatorDeclList(tom_get_tail_concOperator_OperatorDeclList(l1))) {       return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(tom_get_head_concOperator_OperatorDeclList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(tom_get_head_concOperator_OperatorDeclList(l1),tom_append_list_concOperator(tom_get_tail_concOperator_OperatorDeclList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.OperatorDeclList  tom_get_slice_concOperator( tom.gom.adt.gom.types.OperatorDeclList  begin,  tom.gom.adt.gom.types.OperatorDeclList  end, tom.gom.adt.gom.types.OperatorDeclList  tail) {     if(tom_equal_term_OperatorDeclList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(tom_get_head_concOperator_OperatorDeclList(begin),( tom.gom.adt.gom.types.OperatorDeclList )tom_get_slice_concOperator(tom_get_tail_concOperator_OperatorDeclList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concHookDecl( tom.gom.adt.gom.types.HookDeclList  t) { return  t instanceof tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl || t instanceof tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl ;}private static  tom.gom.adt.gom.types.HookDeclList  tom_empty_list_concHookDecl() { return  tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl.make() ; }private static  tom.gom.adt.gom.types.HookDeclList  tom_cons_list_concHookDecl( tom.gom.adt.gom.types.HookDecl  e,  tom.gom.adt.gom.types.HookDeclList  l) { return  tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make(e,l) ; }private static  tom.gom.adt.gom.types.HookDecl  tom_get_head_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) { return  l.getHeadconcHookDecl() ;}private static  tom.gom.adt.gom.types.HookDeclList  tom_get_tail_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) { return  l.getTailconcHookDecl() ;}private static boolean tom_is_empty_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) { return  l.isEmptyconcHookDecl() ;}   private static   tom.gom.adt.gom.types.HookDeclList  tom_append_list_concHookDecl( tom.gom.adt.gom.types.HookDeclList l1,  tom.gom.adt.gom.types.HookDeclList  l2) {     if(tom_is_empty_concHookDecl_HookDeclList(l1)) {       return l2;     } else if(tom_is_empty_concHookDecl_HookDeclList(l2)) {       return l1;     } else if(tom_is_empty_concHookDecl_HookDeclList(tom_get_tail_concHookDecl_HookDeclList(l1))) {       return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl(tom_get_head_concHookDecl_HookDeclList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl(tom_get_head_concHookDecl_HookDeclList(l1),tom_append_list_concHookDecl(tom_get_tail_concHookDecl_HookDeclList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.HookDeclList  tom_get_slice_concHookDecl( tom.gom.adt.gom.types.HookDeclList  begin,  tom.gom.adt.gom.types.HookDeclList  end, tom.gom.adt.gom.types.HookDeclList  tail) {     if(tom_equal_term_HookDeclList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl(tom_get_head_concHookDecl_HookDeclList(begin),( tom.gom.adt.gom.types.HookDeclList )tom_get_slice_concHookDecl(tom_get_tail_concHookDecl_HookDeclList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concSlot( tom.gom.adt.gom.types.SlotList  t) { return  t instanceof tom.gom.adt.gom.types.slotlist.ConsconcSlot || t instanceof tom.gom.adt.gom.types.slotlist.EmptyconcSlot ;}private static  tom.gom.adt.gom.types.SlotList  tom_empty_list_concSlot() { return  tom.gom.adt.gom.types.slotlist.EmptyconcSlot.make() ; }private static  tom.gom.adt.gom.types.SlotList  tom_cons_list_concSlot( tom.gom.adt.gom.types.Slot  e,  tom.gom.adt.gom.types.SlotList  l) { return  tom.gom.adt.gom.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.gom.adt.gom.types.Slot  tom_get_head_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.getHeadconcSlot() ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_tail_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.getTailconcSlot() ;}private static boolean tom_is_empty_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) { return  l.isEmptyconcSlot() ;}   private static   tom.gom.adt.gom.types.SlotList  tom_append_list_concSlot( tom.gom.adt.gom.types.SlotList l1,  tom.gom.adt.gom.types.SlotList  l2) {     if(tom_is_empty_concSlot_SlotList(l1)) {       return l2;     } else if(tom_is_empty_concSlot_SlotList(l2)) {       return l1;     } else if(tom_is_empty_concSlot_SlotList(tom_get_tail_concSlot_SlotList(l1))) {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(tom_get_tail_concSlot_SlotList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.SlotList  tom_get_slice_concSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end, tom.gom.adt.gom.types.SlotList  tail) {     if(tom_equal_term_SlotList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(begin),( tom.gom.adt.gom.types.SlotList )tom_get_slice_concSlot(tom_get_tail_concSlot_SlotList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concSort( tom.gom.adt.gom.types.SortList  t) { return  t instanceof tom.gom.adt.gom.types.sortlist.ConsconcSort || t instanceof tom.gom.adt.gom.types.sortlist.EmptyconcSort ;}private static  tom.gom.adt.gom.types.SortList  tom_empty_list_concSort() { return  tom.gom.adt.gom.types.sortlist.EmptyconcSort.make() ; }private static  tom.gom.adt.gom.types.SortList  tom_cons_list_concSort( tom.gom.adt.gom.types.Sort  e,  tom.gom.adt.gom.types.SortList  l) { return  tom.gom.adt.gom.types.sortlist.ConsconcSort.make(e,l) ; }private static  tom.gom.adt.gom.types.Sort  tom_get_head_concSort_SortList( tom.gom.adt.gom.types.SortList  l) { return  l.getHeadconcSort() ;}private static  tom.gom.adt.gom.types.SortList  tom_get_tail_concSort_SortList( tom.gom.adt.gom.types.SortList  l) { return  l.getTailconcSort() ;}private static boolean tom_is_empty_concSort_SortList( tom.gom.adt.gom.types.SortList  l) { return  l.isEmptyconcSort() ;}   private static   tom.gom.adt.gom.types.SortList  tom_append_list_concSort( tom.gom.adt.gom.types.SortList l1,  tom.gom.adt.gom.types.SortList  l2) {     if(tom_is_empty_concSort_SortList(l1)) {       return l2;     } else if(tom_is_empty_concSort_SortList(l2)) {       return l1;     } else if(tom_is_empty_concSort_SortList(tom_get_tail_concSort_SortList(l1))) {       return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(tom_get_head_concSort_SortList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(tom_get_head_concSort_SortList(l1),tom_append_list_concSort(tom_get_tail_concSort_SortList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.SortList  tom_get_slice_concSort( tom.gom.adt.gom.types.SortList  begin,  tom.gom.adt.gom.types.SortList  end, tom.gom.adt.gom.types.SortList  tail) {     if(tom_equal_term_SortList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(tom_get_head_concSort_SortList(begin),( tom.gom.adt.gom.types.SortList )tom_get_slice_concSort(tom_get_tail_concSort_SortList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concModule( tom.gom.adt.gom.types.ModuleList  t) { return  t instanceof tom.gom.adt.gom.types.modulelist.ConsconcModule || t instanceof tom.gom.adt.gom.types.modulelist.EmptyconcModule ;}private static  tom.gom.adt.gom.types.ModuleList  tom_empty_list_concModule() { return  tom.gom.adt.gom.types.modulelist.EmptyconcModule.make() ; }private static  tom.gom.adt.gom.types.ModuleList  tom_cons_list_concModule( tom.gom.adt.gom.types.Module  e,  tom.gom.adt.gom.types.ModuleList  l) { return  tom.gom.adt.gom.types.modulelist.ConsconcModule.make(e,l) ; }private static  tom.gom.adt.gom.types.Module  tom_get_head_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) { return  l.getHeadconcModule() ;}private static  tom.gom.adt.gom.types.ModuleList  tom_get_tail_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) { return  l.getTailconcModule() ;}private static boolean tom_is_empty_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) { return  l.isEmptyconcModule() ;}   private static   tom.gom.adt.gom.types.ModuleList  tom_append_list_concModule( tom.gom.adt.gom.types.ModuleList l1,  tom.gom.adt.gom.types.ModuleList  l2) {     if(tom_is_empty_concModule_ModuleList(l1)) {       return l2;     } else if(tom_is_empty_concModule_ModuleList(l2)) {       return l1;     } else if(tom_is_empty_concModule_ModuleList(tom_get_tail_concModule_ModuleList(l1))) {       return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(tom_get_head_concModule_ModuleList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(tom_get_head_concModule_ModuleList(l1),tom_append_list_concModule(tom_get_tail_concModule_ModuleList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.ModuleList  tom_get_slice_concModule( tom.gom.adt.gom.types.ModuleList  begin,  tom.gom.adt.gom.types.ModuleList  end, tom.gom.adt.gom.types.ModuleList  tail) {     if(tom_equal_term_ModuleList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(tom_get_head_concModule_ModuleList(begin),( tom.gom.adt.gom.types.ModuleList )tom_get_slice_concModule(tom_get_tail_concModule_ModuleList(begin),end,tail));     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_Rule(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Rule(Object t) { return  t instanceof tom.gom.adt.rule.types.Rule ;}private static boolean tom_equal_term_RuleList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_RuleList(Object t) { return  t instanceof tom.gom.adt.rule.types.RuleList ;}private static boolean tom_equal_term_TermList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TermList(Object t) { return  t instanceof tom.gom.adt.rule.types.TermList ;}private static boolean tom_equal_term_Condition(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Condition(Object t) { return  t instanceof tom.gom.adt.rule.types.Condition ;}private static boolean tom_equal_term_Term(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Term(Object t) { return  t instanceof tom.gom.adt.rule.types.Term ;}private static boolean tom_is_fun_sym_Rule( tom.gom.adt.rule.types.Rule  t) { return  t instanceof tom.gom.adt.rule.types.rule.Rule ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_Rule_lhs( tom.gom.adt.rule.types.Rule  t) { return  t.getlhs() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_Rule_rhs( tom.gom.adt.rule.types.Rule  t) { return  t.getrhs() ;}private static boolean tom_is_fun_sym_ConditionalRule( tom.gom.adt.rule.types.Rule  t) { return  t instanceof tom.gom.adt.rule.types.rule.ConditionalRule ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_ConditionalRule_lhs( tom.gom.adt.rule.types.Rule  t) { return  t.getlhs() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_ConditionalRule_rhs( tom.gom.adt.rule.types.Rule  t) { return  t.getrhs() ;}private static  tom.gom.adt.rule.types.Condition  tom_get_slot_ConditionalRule_cond( tom.gom.adt.rule.types.Rule  t) { return  t.getcond() ;}private static boolean tom_is_fun_sym_Appl( tom.gom.adt.rule.types.Term  t) { return  t instanceof tom.gom.adt.rule.types.term.Appl ;}private static  String  tom_get_slot_Appl_symbol( tom.gom.adt.rule.types.Term  t) { return  t.getsymbol() ;}private static  tom.gom.adt.rule.types.TermList  tom_get_slot_Appl_args( tom.gom.adt.rule.types.Term  t) { return  t.getargs() ;}private static boolean tom_is_fun_sym_Var( tom.gom.adt.rule.types.Term  t) { return  t instanceof tom.gom.adt.rule.types.term.Var ;}private static  String  tom_get_slot_Var_name( tom.gom.adt.rule.types.Term  t) { return  t.getname() ;}private static boolean tom_is_fun_sym_BuiltinInt( tom.gom.adt.rule.types.Term  t) { return  t instanceof tom.gom.adt.rule.types.term.BuiltinInt ;}private static  int  tom_get_slot_BuiltinInt_i( tom.gom.adt.rule.types.Term  t) { return  t.geti() ;}private static boolean tom_is_fun_sym_BuiltinString( tom.gom.adt.rule.types.Term  t) { return  t instanceof tom.gom.adt.rule.types.term.BuiltinString ;}private static  String  tom_get_slot_BuiltinString_s( tom.gom.adt.rule.types.Term  t) { return  t.gets() ;}private static boolean tom_is_fun_sym_LabTerm( tom.gom.adt.rule.types.Term  t) { return  t instanceof tom.gom.adt.rule.types.term.LabTerm ;}private static  tom.gom.adt.rule.types.Term  tom_make_LabTerm( String  t0,  tom.gom.adt.rule.types.Term  t1) { return  tom.gom.adt.rule.types.term.LabTerm.make(t0, t1) ; }private static  String  tom_get_slot_LabTerm_l( tom.gom.adt.rule.types.Term  t) { return  t.getl() ;}private static  tom.gom.adt.rule.types.Term  tom_get_slot_LabTerm_t( tom.gom.adt.rule.types.Term  t) { return  t.gett() ;}private static boolean tom_is_fun_sym_RefTerm( tom.gom.adt.rule.types.Term  t) { return  t instanceof tom.gom.adt.rule.types.term.RefTerm ;}private static  tom.gom.adt.rule.types.Term  tom_make_RefTerm( String  t0) { return  tom.gom.adt.rule.types.term.RefTerm.make(t0) ; }private static  String  tom_get_slot_RefTerm_l( tom.gom.adt.rule.types.Term  t) { return  t.getl() ;}private static boolean tom_is_fun_sym_RuleList( tom.gom.adt.rule.types.RuleList  t) { return  t instanceof tom.gom.adt.rule.types.rulelist.ConsRuleList || t instanceof tom.gom.adt.rule.types.rulelist.EmptyRuleList ;}private static  tom.gom.adt.rule.types.RuleList  tom_empty_list_RuleList() { return  tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ; }private static  tom.gom.adt.rule.types.RuleList  tom_cons_list_RuleList( tom.gom.adt.rule.types.Rule  e,  tom.gom.adt.rule.types.RuleList  l) { return  tom.gom.adt.rule.types.rulelist.ConsRuleList.make(e,l) ; }private static  tom.gom.adt.rule.types.Rule  tom_get_head_RuleList_RuleList( tom.gom.adt.rule.types.RuleList  l) { return  l.getHeadRuleList() ;}private static  tom.gom.adt.rule.types.RuleList  tom_get_tail_RuleList_RuleList( tom.gom.adt.rule.types.RuleList  l) { return  l.getTailRuleList() ;}private static boolean tom_is_empty_RuleList_RuleList( tom.gom.adt.rule.types.RuleList  l) { return  l.isEmptyRuleList() ;}   private static   tom.gom.adt.rule.types.RuleList  tom_append_list_RuleList( tom.gom.adt.rule.types.RuleList l1,  tom.gom.adt.rule.types.RuleList  l2) {     if(tom_is_empty_RuleList_RuleList(l1)) {       return l2;     } else if(tom_is_empty_RuleList_RuleList(l2)) {       return l1;     } else if(tom_is_empty_RuleList_RuleList(tom_get_tail_RuleList_RuleList(l1))) {       return ( tom.gom.adt.rule.types.RuleList )tom_cons_list_RuleList(tom_get_head_RuleList_RuleList(l1),l2);     } else {       return ( tom.gom.adt.rule.types.RuleList )tom_cons_list_RuleList(tom_get_head_RuleList_RuleList(l1),tom_append_list_RuleList(tom_get_tail_RuleList_RuleList(l1),l2));     }   }   private static   tom.gom.adt.rule.types.RuleList  tom_get_slice_RuleList( tom.gom.adt.rule.types.RuleList  begin,  tom.gom.adt.rule.types.RuleList  end, tom.gom.adt.rule.types.RuleList  tail) {     if(tom_equal_term_RuleList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.rule.types.RuleList )tom_cons_list_RuleList(tom_get_head_RuleList_RuleList(begin),( tom.gom.adt.rule.types.RuleList )tom_get_slice_RuleList(tom_get_tail_RuleList_RuleList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_TermList( tom.gom.adt.rule.types.TermList  t) { return  t instanceof tom.gom.adt.rule.types.termlist.ConsTermList || t instanceof tom.gom.adt.rule.types.termlist.EmptyTermList ;}private static  tom.gom.adt.rule.types.TermList  tom_empty_list_TermList() { return  tom.gom.adt.rule.types.termlist.EmptyTermList.make() ; }private static  tom.gom.adt.rule.types.TermList  tom_cons_list_TermList( tom.gom.adt.rule.types.Term  e,  tom.gom.adt.rule.types.TermList  l) { return  tom.gom.adt.rule.types.termlist.ConsTermList.make(e,l) ; }private static  tom.gom.adt.rule.types.Term  tom_get_head_TermList_TermList( tom.gom.adt.rule.types.TermList  l) { return  l.getHeadTermList() ;}private static  tom.gom.adt.rule.types.TermList  tom_get_tail_TermList_TermList( tom.gom.adt.rule.types.TermList  l) { return  l.getTailTermList() ;}private static boolean tom_is_empty_TermList_TermList( tom.gom.adt.rule.types.TermList  l) { return  l.isEmptyTermList() ;}   private static   tom.gom.adt.rule.types.TermList  tom_append_list_TermList( tom.gom.adt.rule.types.TermList l1,  tom.gom.adt.rule.types.TermList  l2) {     if(tom_is_empty_TermList_TermList(l1)) {       return l2;     } else if(tom_is_empty_TermList_TermList(l2)) {       return l1;     } else if(tom_is_empty_TermList_TermList(tom_get_tail_TermList_TermList(l1))) {       return ( tom.gom.adt.rule.types.TermList )tom_cons_list_TermList(tom_get_head_TermList_TermList(l1),l2);     } else {       return ( tom.gom.adt.rule.types.TermList )tom_cons_list_TermList(tom_get_head_TermList_TermList(l1),tom_append_list_TermList(tom_get_tail_TermList_TermList(l1),l2));     }   }   private static   tom.gom.adt.rule.types.TermList  tom_get_slice_TermList( tom.gom.adt.rule.types.TermList  begin,  tom.gom.adt.rule.types.TermList  end, tom.gom.adt.rule.types.TermList  tail) {     if(tom_equal_term_TermList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.rule.types.TermList )tom_cons_list_TermList(tom_get_head_TermList_TermList(begin),( tom.gom.adt.rule.types.TermList )tom_get_slice_TermList(tom_get_tail_TermList_TermList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_PathTerm( tom.gom.adt.rule.types.Term  t) { return  t instanceof tom.gom.adt.rule.types.term.ConsPathTerm || t instanceof tom.gom.adt.rule.types.term.EmptyPathTerm ;}private static  tom.gom.adt.rule.types.Term  tom_empty_list_PathTerm() { return  tom.gom.adt.rule.types.term.EmptyPathTerm.make() ; }private static  tom.gom.adt.rule.types.Term  tom_cons_list_PathTerm( int  e,  tom.gom.adt.rule.types.Term  l) { return  tom.gom.adt.rule.types.term.ConsPathTerm.make(e,l) ; }private static  int  tom_get_head_PathTerm_Term( tom.gom.adt.rule.types.Term  l) { return  l.getHeadPathTerm() ;}private static  tom.gom.adt.rule.types.Term  tom_get_tail_PathTerm_Term( tom.gom.adt.rule.types.Term  l) { return  l.getTailPathTerm() ;}private static boolean tom_is_empty_PathTerm_Term( tom.gom.adt.rule.types.Term  l) { return  l.isEmptyPathTerm() ;}   private static   tom.gom.adt.rule.types.Term  tom_append_list_PathTerm( tom.gom.adt.rule.types.Term l1,  tom.gom.adt.rule.types.Term  l2) {     if(tom_is_empty_PathTerm_Term(l1)) {       return l2;     } else if(tom_is_empty_PathTerm_Term(l2)) {       return l1;     } else if(tom_is_empty_PathTerm_Term(tom_get_tail_PathTerm_Term(l1))) {       return ( tom.gom.adt.rule.types.Term )tom_cons_list_PathTerm(tom_get_head_PathTerm_Term(l1),l2);     } else {       return ( tom.gom.adt.rule.types.Term )tom_cons_list_PathTerm(tom_get_head_PathTerm_Term(l1),tom_append_list_PathTerm(tom_get_tail_PathTerm_Term(l1),l2));     }   }   private static   tom.gom.adt.rule.types.Term  tom_get_slice_PathTerm( tom.gom.adt.rule.types.Term  begin,  tom.gom.adt.rule.types.Term  end, tom.gom.adt.rule.types.Term  tail) {     if(tom_equal_term_Term(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.rule.types.Term )tom_cons_list_PathTerm(tom_get_head_PathTerm_Term(begin),( tom.gom.adt.rule.types.Term )tom_get_slice_PathTerm(tom_get_tail_PathTerm_Term(begin),end,tail));     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_Strategy(Object t1, Object t2) { return t1.equals(t2);}private static boolean tom_is_sort_Strategy(Object t) { return  t instanceof tom.library.sl.Strategy ;}/* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_mu( tom.library.sl.Strategy  var,  tom.library.sl.Strategy  v) { return  new tom.library.sl.Mu(var,v) ; }private static  tom.library.sl.Strategy  tom_make_MuVar( String  name) { return  new tom.library.sl.MuVar(name) ; }private static  tom.library.sl.Strategy  tom_make_Identity() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_make_One( tom.library.sl.Strategy  v) { return  new tom.library.sl.One(v) ; }private static  tom.library.sl.Strategy  tom_make_All( tom.library.sl.Strategy  v) { return  new tom.library.sl.All(v) ; }private static  tom.library.sl.Strategy  tom_make_Fail() { return  new tom.library.sl.Fail() ; }private static boolean tom_is_fun_sym_Sequence( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.Sequence) ;}private static  tom.library.sl.Strategy  tom_empty_list_Sequence() { return  null ; }private static  tom.library.sl.Strategy  tom_cons_list_Sequence( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  (tail==null)?head:new tom.library.sl.Sequence(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.THEN) ;}private static boolean tom_is_empty_Sequence_Strategy( tom.library.sl.Strategy  t) { return  t == null ;}   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_Sequence_Strategy(l1)) {       return l2;     } else if(tom_is_empty_Sequence_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_Sequence(l1)) {       if(tom_is_empty_Sequence_Strategy(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()))) {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),tom_append_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_head_Sequence_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_tail_Sequence_Strategy(begin):tom_empty_list_Sequence()),end,tail));     }   }   private static boolean tom_is_fun_sym_Choice( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.Choice) ;}private static  tom.library.sl.Strategy  tom_empty_list_Choice() { return  null ; }private static  tom.library.sl.Strategy  tom_cons_list_Choice( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  (tail==null)?head:new tom.library.sl.Choice(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_Choice_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Choice.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_Choice_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Choice.THEN) ;}private static boolean tom_is_empty_Choice_Strategy( tom.library.sl.Strategy  t) { return  t ==null ;}   private static   tom.library.sl.Strategy  tom_append_list_Choice( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_Choice_Strategy(l1)) {       return l2;     } else if(tom_is_empty_Choice_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_Choice(l1)) {       if(tom_is_empty_Choice_Strategy(((tom_is_fun_sym_Choice(l1))?tom_get_tail_Choice_Strategy(l1):tom_empty_list_Choice()))) {         return ( tom.library.sl.Strategy )tom_cons_list_Choice(((tom_is_fun_sym_Choice(l1))?tom_get_head_Choice_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_Choice(((tom_is_fun_sym_Choice(l1))?tom_get_head_Choice_Strategy(l1):l1),tom_append_list_Choice(((tom_is_fun_sym_Choice(l1))?tom_get_tail_Choice_Strategy(l1):tom_empty_list_Choice()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Choice(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Choice( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Choice(((tom_is_fun_sym_Choice(begin))?tom_get_head_Choice_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_Choice(((tom_is_fun_sym_Choice(begin))?tom_get_tail_Choice_Strategy(begin):tom_empty_list_Choice()),end,tail));     }   }   private static boolean tom_is_fun_sym_SequenceId( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.SequenceId) ;}private static  tom.library.sl.Strategy  tom_empty_list_SequenceId() { return  null ; }private static  tom.library.sl.Strategy  tom_cons_list_SequenceId( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  (tail==null)?head:new tom.library.sl.SequenceId(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.SequenceId.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.SequenceId.THEN) ;}private static boolean tom_is_empty_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  t == null ;}   private static   tom.library.sl.Strategy  tom_append_list_SequenceId( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_SequenceId_Strategy(l1)) {       return l2;     } else if(tom_is_empty_SequenceId_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_SequenceId(l1)) {       if(tom_is_empty_SequenceId_Strategy(((tom_is_fun_sym_SequenceId(l1))?tom_get_tail_SequenceId_Strategy(l1):tom_empty_list_SequenceId()))) {         return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_head_SequenceId_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_head_SequenceId_Strategy(l1):l1),tom_append_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_tail_SequenceId_Strategy(l1):tom_empty_list_SequenceId()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_SequenceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(begin))?tom_get_head_SequenceId_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_SequenceId(((tom_is_fun_sym_SequenceId(begin))?tom_get_tail_SequenceId_Strategy(begin):tom_empty_list_SequenceId()),end,tail));     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_AllSeq( tom.library.sl.Strategy  s) { return  new tom.library.sl.AllSeq(s) ; } /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence()))) ; }private static  tom.library.sl.Strategy  tom_make_OnceTopDown( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Choice(v,tom_cons_list_Choice(tom_make_One(tom_make_MuVar("_x")),tom_empty_list_Choice()))) ; }private static  tom.library.sl.Strategy  tom_make_Repeat( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Choice(tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_MuVar("_x"),tom_empty_list_Sequence())),tom_cons_list_Choice(tom_make_Identity(),tom_empty_list_Choice()))) ; }private static  tom.library.sl.Strategy  tom_make_InnermostIdSeq( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(tom_make_AllSeq(tom_make_MuVar("_x")),tom_cons_list_Sequence(tom_cons_list_SequenceId(v,tom_cons_list_SequenceId(tom_make_MuVar("_x"),tom_empty_list_SequenceId())),tom_empty_list_Sequence()))) ; }   /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */   static class MapEntry {   private Object key;   private Object val;   public Object getKey() { return key; }   public Object getVal() { return val; }   public MapEntry(Object key, Object val) {     this.key = key;     this.val = val;   } }  /* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_HashMap(Object l1, Object l2) { return  l1.equals(l2) ;}private static boolean tom_is_sort_HashMap(Object t) { return  t instanceof java.util.HashMap ;}   private static java.util.HashMap hashMapAppend(MapEntry e, java.util.HashMap m) {   java.util.HashMap res = (java.util.HashMap) m.clone();   res.put(e.getKey(), e.getVal());   return res; }  private static MapEntry hashMapGetHead(java.util.HashMap m) {   java.util.Set es = m.entrySet();   java.util.Iterator it = es.iterator();   java.util.Map.Entry e = (java.util.Map.Entry) it.next();   return new MapEntry(e.getKey(), e.getValue()); }  private static java.util.HashMap hashMapGetTail(java.util.HashMap m) {   java.util.HashMap res = (java.util.HashMap) m.clone();   java.util.Set es = m.entrySet();   java.util.Iterator it = es.iterator();   java.util.Map.Entry e = (java.util.Map.Entry) it.next();   res.remove(e.getKey());   return res; }   




  private ModuleList moduleList;
  private String sortname;
  private String modulename;

  public GraphRuleExpander(ModuleList data) {
    this.moduleList = data;
  }

  public HookDeclList expandGraphRules(String sortname, String stratname, String defaultstrat, String ruleCode, Decl sdecl) {
    this.sortname = sortname; 
    this.modulename = sdecl.getSort().getModuleDecl().getModuleName().getName();
    RuleLexer lexer = new RuleLexer(new ANTLRStringStream(ruleCode));
    CommonTokenStream tokens = new CommonTokenStream(lexer);
    RuleParser parser = new RuleParser(tokens);
    parser.setTreeAdaptor(new RuleAdaptor());
    RuleList rulelist = tom_empty_list_RuleList();
    try {
      RuleTree ast = (RuleTree)parser.graphruleset().getTree();
      rulelist = (RuleList) ast.getTerm();
    } catch (org.antlr.runtime.RecognitionException e) {
      getLogger().log(Level.SEVERE, "Cannot parse rules",
          new Object[]{});
      return tom_empty_list_concHookDecl();
    }
    return expand(rulelist,stratname,defaultstrat,sdecl);
  }

  public HookDeclList expandFirstGraphRules(String sortname, String stratname, String defaultstrat, String ruleCode, Decl sdecl) {
    HookDeclList expandedrules = expandGraphRules(sortname,stratname,defaultstrat,ruleCode, sdecl);
    HookDeclList commonpart = expandFirst(sdecl);
    return tom_append_list_concHookDecl(commonpart,tom_append_list_concHookDecl(expandedrules,tom_empty_list_concHookDecl()));  
  }

  private String getArobase(){
    return "@";
  }


  //add the common methods, includes and imports for all graphrule strategies of a sort 
  protected HookDeclList expandFirst(Decl sdecl) {
  StringBuffer output = new StringBuffer();
    output.append(
        "\n  %include {sl.tom }\n  %include{java/util/ArrayList.tom}\n  \n  %typeterm Position{\n      implement {Position}\n      is_sort(t)     { t instanceof Position }\n  }\n \n  %typeterm SharedLabel{\n      implement {SharedLabel}\n      is_sort(t)     { t instanceof SharedLabel }\n  }\n\n  static class SharedLabel {\n    public Position posLhs;\n    public Position posRhs;\n    public String label;\n\n    public SharedLabel(String label, Position posLhs, Position posRhs) {\n      this.label = label;\n      this.posLhs = posLhs;\n      this.posRhs = posRhs;\n    }\n  }\n\n  static class Substitution {\n    public Position omega;\n    "/* Generated by TOM (version 2.6alpha): Do not edit this file */+modulename+"AbstractType value;\n\n    public Substitution(Position omega, "/* Generated by TOM (version 2.6alpha): Do not edit this file */+modulename+"AbstractType value) {\n      this.omega = omega;\n      this.value = value;\n    }\n  }\n\n  protected static Iterator getSubstitutions("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" labelledLhs, "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" labelledRhs, Position omega) {\n    ArrayList sharedlabels = new ArrayList();\n    HashMap lhsLabels = labelledLhs.getLabels();\n    HashMap rhsLabels = labelledRhs.getLabels2();\n    Iterator itRhs = rhsLabels.keySet().iterator(); \n    while(itRhs.hasNext()) {\n      String label = (String) itRhs.next();\n      if (lhsLabels.containsKey(label)) {\n        sharedlabels.add(label);\n      }\n    }\n\n    ArrayList result = new ArrayList();\n    Iterator iter = sharedlabels.iterator(); \n    while(iter.hasNext()) {\n      String label = (String) iter.next();\n      Position posLhs = (Position)lhsLabels.get(label);\n      Position posRhs = (Position)rhsLabels.get(label);\n      Substitution subst = computeSubstitution(labelledLhs,labelledRhs,new SharedLabel(label,posLhs,posRhs),sharedlabels,omega);\n      result.add(subst);\n    }\n    // add the substitution for the root position\n    Substitution subst = computeSubstitution(labelledLhs,labelledRhs,new SharedLabel(\"\",new Position(new int[]{}),new Position(new int[]{})),sharedlabels,omega);\n    result.add(subst);\n    return result.iterator();\n  }\n\n\n  %strategy ReplaceSharedLabelByVar(sharedlabels:ArrayList,sharedlabel:SharedLabel) extends Identity() {\n    visit "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" {\n      Lab"/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+"[label"/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+"=label] -> {\n        if (`label.equals(sharedlabel.label)) {\n          throw new VisitFailure();\n        } else {\n          if(sharedlabels.contains(`label)) {\n            return `Var"/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+"(label);\n          }\n        }\n      }\n    }\n  }\n\n  private static Substitution computeSubstitution("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" labelledLhs, "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" labelledRhs, SharedLabel sharedlabel, ArrayList sharedlabels, Position omega) {\n    try {\n      "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" lhs = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") `Try(BottomUp(ReplaceSharedLabelByVar(sharedlabels,sharedlabel))).visit(labelledLhs);\n      "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" rhs = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") `Try(BottomUp(ReplaceSharedLabelByVar(sharedlabels,sharedlabel))).visit(labelledRhs);\n      lhs = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") lhs.expand();\n      rhs = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") sharedlabel.posRhs.getSubterm().visit(rhs);\n      return new Substitution((Position) omega.add(sharedlabel.posLhs),("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") `TopDown(FromVarToPath(lhs,omega)).visit(rhs));\n    } catch(VisitFailure e) { \n      throw new RuntimeException(\"Unexpected strategy failure!\");\n    }\n  }\n\n\n  %strategy FromVarToPath(lhs:"/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+",omega:Position) extends Identity() {\n"



























































































);

  if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch488NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch488NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch488NameNumber_freshVar_0=tomMatch488NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch488NameNumber_begin_2=tomMatch488NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch488NameNumber_end_3=tomMatch488NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch488NameNumber_freshVar_1=tomMatch488NameNumber_end_3;if (!(tom_is_empty_concModule_ModuleList(tomMatch488NameNumber_freshVar_1))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch488NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.SortList  tomMatch488NameNumber_freshVar_6=tom_get_slot_Module_Sorts(tom_get_head_concModule_ModuleList(tomMatch488NameNumber_freshVar_1));if (tom_is_fun_sym_concSort(tomMatch488NameNumber_freshVar_6)) {{  tom.gom.adt.gom.types.SortList  tomMatch488NameNumber_freshVar_7=tomMatch488NameNumber_freshVar_6;{  tom.gom.adt.gom.types.SortList  tomMatch488NameNumber_begin_9=tomMatch488NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch488NameNumber_end_10=tomMatch488NameNumber_freshVar_7;do {{{  tom.gom.adt.gom.types.SortList  tomMatch488NameNumber_freshVar_8=tomMatch488NameNumber_end_10;if (!(tom_is_empty_concSort_SortList(tomMatch488NameNumber_freshVar_8))) {if (tom_is_fun_sym_Sort(tom_get_head_concSort_SortList(tomMatch488NameNumber_freshVar_8))) {{  tom.gom.adt.gom.types.SortDecl  tomMatch488NameNumber_freshVar_13=tom_get_slot_Sort_Decl(tom_get_head_concSort_SortList(tomMatch488NameNumber_freshVar_8));if (tom_is_fun_sym_SortDecl(tomMatch488NameNumber_freshVar_13)) {{  String  tomMatch488NameNumber_freshVar_14=tom_get_slot_SortDecl_Name(tomMatch488NameNumber_freshVar_13);{  String  tom_name=tomMatch488NameNumber_freshVar_14;{  tom.gom.adt.gom.types.SortList  tomMatch488NameNumber_freshVar_11=tom_get_tail_concSort_SortList(tomMatch488NameNumber_freshVar_8);{  tom.gom.adt.gom.types.ModuleList  tomMatch488NameNumber_freshVar_4=tom_get_tail_concModule_ModuleList(tomMatch488NameNumber_freshVar_1);if ( true ) {

    output.append(
        "\n    visit "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+" {\n      Var"/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+"(name) -> {\n        Position wl = getVarPos(lhs,`name);\n        Position wr = getEnvironment().getPosition();\n        Position wwl = (Position) (new Position(new int[]{1})).add(omega).add(wl); \n        Position wwr = (Position) (new Position(new int[]{2})).add(wr); \n        Position res = (Position) wwl.sub(wwr);\n        return Path"/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+".make(res);\n      }\n   }      \n"










);
    }}}}}}}}}}if (tom_is_empty_concSort_SortList(tomMatch488NameNumber_end_10)) {tomMatch488NameNumber_end_10=tomMatch488NameNumber_begin_9;} else {tomMatch488NameNumber_end_10=tom_get_tail_concSort_SortList(tomMatch488NameNumber_end_10);}}} while(!(tom_equal_term_SortList(tomMatch488NameNumber_end_10, tomMatch488NameNumber_begin_9)));}}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch488NameNumber_end_3)) {tomMatch488NameNumber_end_3=tomMatch488NameNumber_begin_2;} else {tomMatch488NameNumber_end_3=tom_get_tail_concModule_ModuleList(tomMatch488NameNumber_end_3);}}} while(!(tom_equal_term_ModuleList(tomMatch488NameNumber_end_3, tomMatch488NameNumber_begin_2)));}}}}}}


  output.append("\n  }\n\n  private static Position getVarPos("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" term, String varname) {\n    Position p = new Position();\n    try {\n      `OnceTopDown(GetVarPos(p,varname)).visit(term);\n      return p;\n    } catch (VisitFailure e) {\n      throw new tom.gom.tools.error.GomRuntimeException(\"Unexpected strategy failure!\");\n      }\n  }\n\n  %strategy GetVarPos(Position p, String varname) extends Fail() {\n"













);

 if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch489NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch489NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch489NameNumber_freshVar_0=tomMatch489NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch489NameNumber_begin_2=tomMatch489NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch489NameNumber_end_3=tomMatch489NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch489NameNumber_freshVar_1=tomMatch489NameNumber_end_3;if (!(tom_is_empty_concModule_ModuleList(tomMatch489NameNumber_freshVar_1))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch489NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.SortList  tomMatch489NameNumber_freshVar_6=tom_get_slot_Module_Sorts(tom_get_head_concModule_ModuleList(tomMatch489NameNumber_freshVar_1));if (tom_is_fun_sym_concSort(tomMatch489NameNumber_freshVar_6)) {{  tom.gom.adt.gom.types.SortList  tomMatch489NameNumber_freshVar_7=tomMatch489NameNumber_freshVar_6;{  tom.gom.adt.gom.types.SortList  tomMatch489NameNumber_begin_9=tomMatch489NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch489NameNumber_end_10=tomMatch489NameNumber_freshVar_7;do {{{  tom.gom.adt.gom.types.SortList  tomMatch489NameNumber_freshVar_8=tomMatch489NameNumber_end_10;if (!(tom_is_empty_concSort_SortList(tomMatch489NameNumber_freshVar_8))) {if (tom_is_fun_sym_Sort(tom_get_head_concSort_SortList(tomMatch489NameNumber_freshVar_8))) {{  tom.gom.adt.gom.types.SortDecl  tomMatch489NameNumber_freshVar_13=tom_get_slot_Sort_Decl(tom_get_head_concSort_SortList(tomMatch489NameNumber_freshVar_8));if (tom_is_fun_sym_SortDecl(tomMatch489NameNumber_freshVar_13)) {{  String  tomMatch489NameNumber_freshVar_14=tom_get_slot_SortDecl_Name(tomMatch489NameNumber_freshVar_13);{  String  tom_name=tomMatch489NameNumber_freshVar_14;{  tom.gom.adt.gom.types.SortList  tomMatch489NameNumber_freshVar_11=tom_get_tail_concSort_SortList(tomMatch489NameNumber_freshVar_8);{  tom.gom.adt.gom.types.ModuleList  tomMatch489NameNumber_freshVar_4=tom_get_tail_concModule_ModuleList(tomMatch489NameNumber_freshVar_1);if ( true ) {

 output.append(
        "\n    visit "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+" {\n      v"/* Generated by TOM (version 2.6alpha): Do not edit this file */+getArobase()+"Var"/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+"(name) -> { \n        if (`name.equals(varname)) { \n          p.setValue(getEnvironment().getPosition().toArray()); \n          return `v; } \n      } \n    }\n   "







);
   }}}}}}}}}}if (tom_is_empty_concSort_SortList(tomMatch489NameNumber_end_10)) {tomMatch489NameNumber_end_10=tomMatch489NameNumber_begin_9;} else {tomMatch489NameNumber_end_10=tom_get_tail_concSort_SortList(tomMatch489NameNumber_end_10);}}} while(!(tom_equal_term_SortList(tomMatch489NameNumber_end_10, tomMatch489NameNumber_begin_9)));}}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch489NameNumber_end_3)) {tomMatch489NameNumber_end_3=tomMatch489NameNumber_begin_2;} else {tomMatch489NameNumber_end_3=tom_get_tail_concModule_ModuleList(tomMatch489NameNumber_end_3);}}} while(!(tom_equal_term_ModuleList(tomMatch489NameNumber_end_3, tomMatch489NameNumber_begin_2)));}}}}}}
 
  
  output.append("\n  }\n"

);

  String imports = "\nimport tom.library.sl.*;\nimport java.util.*;\n   "


;

  //import all the constructors Path<Sort> of the module
  if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch490NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch490NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch490NameNumber_freshVar_0=tomMatch490NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch490NameNumber_begin_2=tomMatch490NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch490NameNumber_end_3=tomMatch490NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch490NameNumber_freshVar_1=tomMatch490NameNumber_end_3;if (!(tom_is_empty_concModule_ModuleList(tomMatch490NameNumber_freshVar_1))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch490NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch490NameNumber_freshVar_6=tom_get_slot_Module_MDecl(tom_get_head_concModule_ModuleList(tomMatch490NameNumber_freshVar_1));{  tom.gom.adt.gom.types.SortList  tomMatch490NameNumber_freshVar_7=tom_get_slot_Module_Sorts(tom_get_head_concModule_ModuleList(tomMatch490NameNumber_freshVar_1));if (tom_is_fun_sym_ModuleDecl(tomMatch490NameNumber_freshVar_6)) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch490NameNumber_freshVar_8=tom_get_slot_ModuleDecl_ModuleName(tomMatch490NameNumber_freshVar_6);{  String  tomMatch490NameNumber_freshVar_9=tom_get_slot_ModuleDecl_Pkg(tomMatch490NameNumber_freshVar_6);if (tom_is_fun_sym_GomModuleName(tomMatch490NameNumber_freshVar_8)) {{  String  tomMatch490NameNumber_freshVar_10=tom_get_slot_GomModuleName_Name(tomMatch490NameNumber_freshVar_8);if (tom_is_fun_sym_concSort(tomMatch490NameNumber_freshVar_7)) {{  tom.gom.adt.gom.types.SortList  tomMatch490NameNumber_freshVar_11=tomMatch490NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch490NameNumber_begin_13=tomMatch490NameNumber_freshVar_11;{  tom.gom.adt.gom.types.SortList  tomMatch490NameNumber_end_14=tomMatch490NameNumber_freshVar_11;do {{{  tom.gom.adt.gom.types.SortList  tomMatch490NameNumber_freshVar_12=tomMatch490NameNumber_end_14;if (!(tom_is_empty_concSort_SortList(tomMatch490NameNumber_freshVar_12))) {if (tom_is_fun_sym_Sort(tom_get_head_concSort_SortList(tomMatch490NameNumber_freshVar_12))) {{  tom.gom.adt.gom.types.SortDecl  tomMatch490NameNumber_freshVar_17=tom_get_slot_Sort_Decl(tom_get_head_concSort_SortList(tomMatch490NameNumber_freshVar_12));if (tom_is_fun_sym_SortDecl(tomMatch490NameNumber_freshVar_17)) {{  String  tomMatch490NameNumber_freshVar_18=tom_get_slot_SortDecl_Name(tomMatch490NameNumber_freshVar_17);{  String  tom_name=tomMatch490NameNumber_freshVar_18;{  tom.gom.adt.gom.types.SortList  tomMatch490NameNumber_freshVar_15=tom_get_tail_concSort_SortList(tomMatch490NameNumber_freshVar_12);{  tom.gom.adt.gom.types.ModuleList  tomMatch490NameNumber_freshVar_4=tom_get_tail_concModule_ModuleList(tomMatch490NameNumber_freshVar_1);if ( true ) {

  imports += "\nimport "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tomMatch490NameNumber_freshVar_9+"."/* Generated by TOM (version 2.6alpha): Do not edit this file */+tomMatch490NameNumber_freshVar_10.toLowerCase()+".types."/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name.toLowerCase()+".Path"/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+"; \n  "

;
    }}}}}}}}}}if (tom_is_empty_concSort_SortList(tomMatch490NameNumber_end_14)) {tomMatch490NameNumber_end_14=tomMatch490NameNumber_begin_13;} else {tomMatch490NameNumber_end_14=tom_get_tail_concSort_SortList(tomMatch490NameNumber_end_14);}}} while(!(tom_equal_term_SortList(tomMatch490NameNumber_end_14, tomMatch490NameNumber_begin_13)));}}}}}}}}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch490NameNumber_end_3)) {tomMatch490NameNumber_end_3=tomMatch490NameNumber_begin_2;} else {tomMatch490NameNumber_end_3=tom_get_tail_concModule_ModuleList(tomMatch490NameNumber_end_3);}}} while(!(tom_equal_term_ModuleList(tomMatch490NameNumber_end_3, tomMatch490NameNumber_begin_2)));}}}}}}


   return tom_cons_list_concHookDecl(tom_make_BlockHookDecl(sdecl,tom_make_Code(output.toString())),tom_cons_list_concHookDecl(tom_make_ImportHookDecl(sdecl,tom_make_Code(imports)),tom_empty_list_concHookDecl()));
  }

  protected HookDeclList expand(RuleList rulelist, String stratname, String defaultstrat, Decl sdecl) {
    StringBuffer output = new StringBuffer();
    output.append("\n  public static Strategy "/* Generated by TOM (version 2.6alpha): Do not edit this file */+stratname+"(){\n    return `"/* Generated by TOM (version 2.6alpha): Do not edit this file */+stratname+"();\n  }\n\n  %strategy "/* Generated by TOM (version 2.6alpha): Do not edit this file */+stratname+"() extends "/* Generated by TOM (version 2.6alpha): Do not edit this file */+defaultstrat+"() {\n    visit "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" {\n      "






);

        if (tom_is_sort_RuleList(rulelist)) {{  tom.gom.adt.rule.types.RuleList  tomMatch491NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.RuleList )rulelist);if (tom_is_fun_sym_RuleList(tomMatch491NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.RuleList  tomMatch491NameNumber_freshVar_0=tomMatch491NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.RuleList  tomMatch491NameNumber_begin_2=tomMatch491NameNumber_freshVar_0;{  tom.gom.adt.rule.types.RuleList  tomMatch491NameNumber_end_3=tomMatch491NameNumber_freshVar_0;do {{{  tom.gom.adt.rule.types.RuleList  tomMatch491NameNumber_freshVar_1=tomMatch491NameNumber_end_3;if (!(tom_is_empty_RuleList_RuleList(tomMatch491NameNumber_freshVar_1))) {{ boolean tomMatch491NameNumber_freshVar_8= false ;{  tom.gom.adt.rule.types.Term  tomMatch491NameNumber_freshVar_7= null ;{  tom.gom.adt.rule.types.Term  tomMatch491NameNumber_freshVar_6= null ;if (tom_is_fun_sym_Rule(tom_get_head_RuleList_RuleList(tomMatch491NameNumber_freshVar_1))) {{tomMatch491NameNumber_freshVar_8= true ;tomMatch491NameNumber_freshVar_6=tom_get_slot_Rule_lhs(tom_get_head_RuleList_RuleList(tomMatch491NameNumber_freshVar_1));tomMatch491NameNumber_freshVar_7=tom_get_slot_Rule_rhs(tom_get_head_RuleList_RuleList(tomMatch491NameNumber_freshVar_1));}} else {if (tom_is_fun_sym_ConditionalRule(tom_get_head_RuleList_RuleList(tomMatch491NameNumber_freshVar_1))) {{tomMatch491NameNumber_freshVar_8= true ;tomMatch491NameNumber_freshVar_6=tom_get_slot_ConditionalRule_lhs(tom_get_head_RuleList_RuleList(tomMatch491NameNumber_freshVar_1));tomMatch491NameNumber_freshVar_7=tom_get_slot_ConditionalRule_rhs(tom_get_head_RuleList_RuleList(tomMatch491NameNumber_freshVar_1));}}}if ((tomMatch491NameNumber_freshVar_8 ==  true )) {{  tom.gom.adt.rule.types.Term  tom_lhs=tomMatch491NameNumber_freshVar_6;{  tom.gom.adt.rule.types.RuleList  tomMatch491NameNumber_freshVar_4=tom_get_tail_RuleList_RuleList(tomMatch491NameNumber_freshVar_1);if ( true ) {

            //TODO: verify that the lhs of the rules are of the good sort  
            //TODO: verify the linearity of lhs and rhs
            output.append("\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+genTerm(tom_lhs)+" -> {\n\n                /* 1. save the current pos w */\n                Position omega = getEnvironment().getPosition();\n                Position posFinal = new Position(new int[]{1});\n                Position posRhs = new Position(new int[]{2});\n\n                /* 2. go to the root and get the global term-graph */\n                getEnvironment().followPath(omega.inverse());\n\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" labelledLhs = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") `"/* Generated by TOM (version 2.6alpha): Do not edit this file */+genTermWithExplicitVar(tom_lhs,"root",0)+";\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" labelledRhs = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") `"/* Generated by TOM (version 2.6alpha): Do not edit this file */+genTermWithExplicitVar(tomMatch491NameNumber_freshVar_7,"root",0)+";\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" subject = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") getEnvironment().getSubject();             \n                //compute all the different substitutions\n                //TODO: manage substitutions of different sort\n                Iterator substitutions = getSubstitutions(labelledLhs,labelledRhs,omega);\n                \n                /* 3. construct tt=SubstTerm(subject,r) */\n                while (substitutions.hasNext()) {\n                Substitution subst = (Substitution) substitutions.next();\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+modulename+"AbstractType r = subst.value;\n                //System.out.println(\"subst \"+r);\n                Position posRedex = subst.omega;\n                //System.out.println(\"at the position \"+posRedex);\n                //TODO: find the sort of r and deduce which Subst to use\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" t = `Subst"/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+"(subject,("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+")r);\n                Position newomega = (Position) posFinal.add(posRedex);\n                \n                /* 4. set the global term to norm(swap(t,1.w,2))|1 */\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" tt = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") t.swap(newomega,posRhs); \n                //System.out.println(\"tt \"+tt);\n                //all pointers to the root of the old redex at posRhs must be replaced by pointers to newomega\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" ttt = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") `TopDown(globalRedirection(posRhs,newomega)).visit(tt);\n                //System.out.println(\"ttt \"+ttt);\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" res = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") ttt.normalize();\n                //System.out.println(\"res \"+res);\n                subject = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") posFinal.getSubterm().visit(res);\n                //System.out.println(\"subject \"+subject);\n               }\n\n                //expand the subject to remove labels from the rhs\n                getEnvironment().setSubject(subject.expand());\n\n                /* 5. go to the position w */\n                getEnvironment().followPath(omega);\n\n                return ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") getEnvironment().getSubject();\n                }\n                "
















































);
          }}}}}}}}}if (tom_is_empty_RuleList_RuleList(tomMatch491NameNumber_end_3)) {tomMatch491NameNumber_end_3=tomMatch491NameNumber_begin_2;} else {tomMatch491NameNumber_end_3=tom_get_tail_RuleList_RuleList(tomMatch491NameNumber_end_3);}}} while(!(tom_equal_term_RuleList(tomMatch491NameNumber_end_3, tomMatch491NameNumber_begin_2)));}}}}}}


        output.append("\n    }\n  }\n            "


);

          return tom_cons_list_concHookDecl(tom_make_BlockHookDecl(sdecl,tom_make_Code(output.toString())),tom_empty_list_concHookDecl());
  }

  private String genTerm(Term term) {
    StringBuffer output = new StringBuffer();
    term = expand(term);
    if (tom_is_sort_Term(term)) {{  tom.gom.adt.rule.types.Term  tomMatch492NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )term);if (tom_is_fun_sym_PathTerm(tomMatch492NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch492NameNumber_freshVar_0=tomMatch492NameNumberfreshSubject_1;if (!(tom_is_empty_PathTerm_Term(tomMatch492NameNumber_freshVar_0))) {{  tom.gom.adt.rule.types.Term  tomMatch492NameNumber_freshVar_1=tom_get_tail_PathTerm_Term(tomMatch492NameNumber_freshVar_0);if ( true ) {

        output.append("Path"+sortname);
        output.append("(");
        output.append(tom_get_head_PathTerm_Term(tomMatch492NameNumber_freshVar_0));
        {  tom.gom.adt.rule.types.Term  tomMatch493NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tomMatch492NameNumber_freshVar_1);if (tom_is_fun_sym_PathTerm(tomMatch493NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch493NameNumber_freshVar_0=tomMatch493NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.Term  tomMatch493NameNumber_begin_2=tomMatch493NameNumber_freshVar_0;{  tom.gom.adt.rule.types.Term  tomMatch493NameNumber_end_3=tomMatch493NameNumber_freshVar_0;do {{{  tom.gom.adt.rule.types.Term  tomMatch493NameNumber_freshVar_1=tomMatch493NameNumber_end_3;if (!(tom_is_empty_PathTerm_Term(tomMatch493NameNumber_freshVar_1))) {{  tom.gom.adt.rule.types.Term  tomMatch493NameNumber_freshVar_4=tom_get_tail_PathTerm_Term(tomMatch493NameNumber_freshVar_1);if ( true ) {

            output.append(",");
            output.append(tom_get_head_PathTerm_Term(tomMatch493NameNumber_freshVar_1));
          }}}}if (tom_is_empty_PathTerm_Term(tomMatch493NameNumber_end_3)) {tomMatch493NameNumber_end_3=tomMatch493NameNumber_begin_2;} else {tomMatch493NameNumber_end_3=tom_get_tail_PathTerm_Term(tomMatch493NameNumber_end_3);}}} while(!(tom_equal_term_Term(tomMatch493NameNumber_end_3, tomMatch493NameNumber_begin_2)));}}}}}

        output.append(")");
      }}}}}if (tom_is_fun_sym_Appl(tomMatch492NameNumberfreshSubject_1)) {{  String  tomMatch492NameNumber_freshVar_8=tom_get_slot_Appl_symbol(tomMatch492NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.TermList  tomMatch492NameNumber_freshVar_9=tom_get_slot_Appl_args(tomMatch492NameNumberfreshSubject_1);if ( true ) {

        output.append(tomMatch492NameNumber_freshVar_8);
        output.append("(");
        output.append(genTermList(tomMatch492NameNumber_freshVar_9));
        output.append(")");
      }}}}if (tom_is_fun_sym_Var(tomMatch492NameNumberfreshSubject_1)) {{  String  tomMatch492NameNumber_freshVar_10=tom_get_slot_Var_name(tomMatch492NameNumberfreshSubject_1);if ( true ) {

        output.append(tomMatch492NameNumber_freshVar_10);
      }}}if (tom_is_fun_sym_BuiltinInt(tomMatch492NameNumberfreshSubject_1)) {{  int  tomMatch492NameNumber_freshVar_11=tom_get_slot_BuiltinInt_i(tomMatch492NameNumberfreshSubject_1);if ( true ) {

        output.append(tomMatch492NameNumber_freshVar_11);
      }}}if (tom_is_fun_sym_BuiltinString(tomMatch492NameNumberfreshSubject_1)) {{  String  tomMatch492NameNumber_freshVar_12=tom_get_slot_BuiltinString_s(tomMatch492NameNumberfreshSubject_1);if ( true ) {

        output.append(tomMatch492NameNumber_freshVar_12);
      }}}}}

    return output.toString();
  }

  private String genTermList(TermList list) {
    StringBuffer output = new StringBuffer();
    if (tom_is_sort_TermList(list)) {{  tom.gom.adt.rule.types.TermList  tomMatch494NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.TermList )list);if (tom_is_fun_sym_TermList(tomMatch494NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.TermList  tomMatch494NameNumber_freshVar_0=tomMatch494NameNumberfreshSubject_1;if (tom_is_empty_TermList_TermList(tomMatch494NameNumber_freshVar_0)) {if ( true ) {
 return ""; }}}}if (tom_is_fun_sym_TermList(tomMatch494NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.TermList  tomMatch494NameNumber_freshVar_1=tomMatch494NameNumberfreshSubject_1;if (!(tom_is_empty_TermList_TermList(tomMatch494NameNumber_freshVar_1))) {{  tom.gom.adt.rule.types.TermList  tomMatch494NameNumber_freshVar_2=tom_get_tail_TermList_TermList(tomMatch494NameNumber_freshVar_1);{  tom.gom.adt.rule.types.TermList  tom_t=tomMatch494NameNumber_freshVar_2;if ( true ) {

        output.append(genTerm(tom_get_head_TermList_TermList(tomMatch494NameNumber_freshVar_1)));
        if (!tom_t.isEmptyTermList()) {
          output.append(", ");
        }
        output.append(genTermList(tom_t));
      }}}}}}}}

    return output.toString();
  }

  private String genTermWithExplicitVar(Term term, String fathersymbol, int omega) {
    StringBuffer output = new StringBuffer();
    if (tom_is_sort_Term(term)) {{  tom.gom.adt.rule.types.Term  tomMatch495NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )term);if (tom_is_fun_sym_LabTerm(tomMatch495NameNumberfreshSubject_1)) {{  String  tomMatch495NameNumber_freshVar_0=tom_get_slot_LabTerm_l(tomMatch495NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch495NameNumber_freshVar_1=tom_get_slot_LabTerm_t(tomMatch495NameNumberfreshSubject_1);if ( true ) {

        output.append("Lab"+sortname);
        output.append("(");
        output.append("\""+tomMatch495NameNumber_freshVar_0+"\"");
        output.append(",");
        output.append(genTermWithExplicitVar(tomMatch495NameNumber_freshVar_1,fathersymbol,omega));
        output.append(")");
      }}}}if (tom_is_fun_sym_RefTerm(tomMatch495NameNumberfreshSubject_1)) {{  String  tomMatch495NameNumber_freshVar_2=tom_get_slot_RefTerm_l(tomMatch495NameNumberfreshSubject_1);if ( true ) {

        output.append("Ref"+sortname);
        output.append("(");
        output.append("\""+tomMatch495NameNumber_freshVar_2+"\"");
        output.append(")");
      }}}if (tom_is_fun_sym_Appl(tomMatch495NameNumberfreshSubject_1)) {{  String  tomMatch495NameNumber_freshVar_3=tom_get_slot_Appl_symbol(tomMatch495NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.TermList  tomMatch495NameNumber_freshVar_4=tom_get_slot_Appl_args(tomMatch495NameNumberfreshSubject_1);{  String  tom_symbol=tomMatch495NameNumber_freshVar_3;if ( true ) {

        output.append(tom_symbol);
        output.append("(");
        output.append(genTermListWithExplicitVar(tom_symbol,tomMatch495NameNumber_freshVar_4));
        output.append(")");
      }}}}}if (tom_is_fun_sym_Var(tomMatch495NameNumberfreshSubject_1)) {{  String  tomMatch495NameNumber_freshVar_5=tom_get_slot_Var_name(tomMatch495NameNumberfreshSubject_1);{  String  tom_name=tomMatch495NameNumber_freshVar_5;if ( true ) {

        //the variable must be replaced by a meta representation of the var
        //in the signature of the corresponding  sort
        //test if the variable is not at the root position 
        if(omega!=0) {
          String sortvar = getSort(fathersymbol,omega);
          output.append("Var"+sortvar+"(\""+tom_name+"\")");
        } else {
          //it is necessary of the sort declared for the strategy
          output.append("Var"+sortname+"(\""+tom_name+"\")");
        }
      }}}}if (tom_is_fun_sym_BuiltinInt(tomMatch495NameNumberfreshSubject_1)) {{  int  tomMatch495NameNumber_freshVar_6=tom_get_slot_BuiltinInt_i(tomMatch495NameNumberfreshSubject_1);if ( true ) {

        output.append(tomMatch495NameNumber_freshVar_6);
      }}}if (tom_is_fun_sym_BuiltinString(tomMatch495NameNumberfreshSubject_1)) {{  String  tomMatch495NameNumber_freshVar_7=tom_get_slot_BuiltinString_s(tomMatch495NameNumberfreshSubject_1);if ( true ) {

        output.append(tomMatch495NameNumber_freshVar_7);
      }}}}}

    return output.toString();
  }

  private String genTermListWithExplicitVar(String fathersymbol, TermList list) {
    StringBuffer output = new StringBuffer();
    int omega=1;
    if (tom_is_sort_TermList(list)) {{  tom.gom.adt.rule.types.TermList  tomMatch496NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.TermList )list);if (tom_is_fun_sym_TermList(tomMatch496NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.TermList  tomMatch496NameNumber_freshVar_0=tomMatch496NameNumberfreshSubject_1;if (tom_is_empty_TermList_TermList(tomMatch496NameNumber_freshVar_0)) {if ( true ) {
 return ""; }}}}if (tom_is_fun_sym_TermList(tomMatch496NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.TermList  tomMatch496NameNumber_freshVar_1=tomMatch496NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.TermList  tomMatch496NameNumber_begin_3=tomMatch496NameNumber_freshVar_1;{  tom.gom.adt.rule.types.TermList  tomMatch496NameNumber_end_4=tomMatch496NameNumber_freshVar_1;do {{{  tom.gom.adt.rule.types.TermList  tomMatch496NameNumber_freshVar_2=tomMatch496NameNumber_end_4;if (!(tom_is_empty_TermList_TermList(tomMatch496NameNumber_freshVar_2))) {{  tom.gom.adt.rule.types.TermList  tomMatch496NameNumber_freshVar_5=tom_get_tail_TermList_TermList(tomMatch496NameNumber_freshVar_2);if ( true ) {

        output.append(genTermWithExplicitVar(tom_get_head_TermList_TermList(tomMatch496NameNumber_freshVar_2),fathersymbol,omega));
        omega++;
        if (!tomMatch496NameNumber_freshVar_5.isEmptyTermList()) {
          output.append(", ");
        }
      }}}}if (tom_is_empty_TermList_TermList(tomMatch496NameNumber_end_4)) {tomMatch496NameNumber_end_4=tomMatch496NameNumber_begin_3;} else {tomMatch496NameNumber_end_4=tom_get_tail_TermList_TermList(tomMatch496NameNumber_end_4);}}} while(!(tom_equal_term_TermList(tomMatch496NameNumber_end_4, tomMatch496NameNumber_begin_3)));}}}}}}

    return output.toString();
  }


  public static Term expand(Term t) {
    HashMap map = new HashMap();
    Term tt = null;
    try {
      tt = (Term) tom_make_InnermostIdSeq(tom_make_NormalizeLabel(map)).visit(t);
    } catch (tom.library.sl.VisitFailure e) {
      throw new tom.gom.tools.error.GomRuntimeException("Unexpected strategy failure!");
    }
    return label2path(tt);
  }

  private static boolean tom_is_sort_Info(Object t) { return 

 t instanceof Info ;}


  static class Info {
    public Position omegaRef;
    public Term sharedTerm;
  }

  private static class CollectSubterm extends  tom.gom.adt.rule.RuleBasicStrategy  {private  String  label; private Info info; public CollectSubterm( String  label, Info info) { super(tom_make_Fail());this.label=label;this.info=info;}public  String  getlabel() { return label;}public Info getinfo() { return info;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Term(tom__arg)) {{  tom.gom.adt.rule.types.Term  tomMatch497NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if (tom_is_fun_sym_LabTerm(tomMatch497NameNumberfreshSubject_1)) {{  String  tomMatch497NameNumber_freshVar_0=tom_get_slot_LabTerm_l(tomMatch497NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch497NameNumber_freshVar_1=tom_get_slot_LabTerm_t(tomMatch497NameNumberfreshSubject_1);{  String  tom_label=tomMatch497NameNumber_freshVar_0;if ( true ) {


        Position current = getEnvironment().getPosition();
        if (label.equals(tom_label)) {
          //test if it is not a cycle
          if (!info.omegaRef.hasPrefix(current)) {
            //return a ref
            info.sharedTerm = tomMatch497NameNumber_freshVar_1;
            return tom_make_RefTerm(tom_label);
          }
          else {
            //do not return a ref and stop to collect
            return tomMatch497NameNumberfreshSubject_1;  
          }
        }
      }}}}}}}return super.visit_Term(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_CollectSubterm( String  t0, Info t1) { return new CollectSubterm(t0,t1); }private static class NormalizeLabel extends  tom.gom.adt.rule.RuleBasicStrategy  {private  java.util.HashMap  map; public NormalizeLabel( java.util.HashMap  map) { super(tom_make_Identity());this.map=map;}public  java.util.HashMap  getmap() { return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Term(tom__arg)) {{  tom.gom.adt.rule.types.Term  tomMatch498NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if (tom_is_fun_sym_RefTerm(tomMatch498NameNumberfreshSubject_1)) {{  String  tomMatch498NameNumber_freshVar_0=tom_get_slot_RefTerm_l(tomMatch498NameNumberfreshSubject_1);{  String  tom_label=tomMatch498NameNumber_freshVar_0;if ( true ) {






        if (! map.containsKey(tom_label)){
          Position old = getEnvironment().getPosition();
          Position rootpos = new Position(new int[]{});
          Info info = new Info();
          info.omegaRef = old;
          getEnvironment().followPath(rootpos.sub(getEnvironment().getPosition()));           
          tom_make_OnceTopDown(tom_make_CollectSubterm(tom_label,info)).visit(getEnvironment());            
          getEnvironment().followPath(old.sub(getEnvironment().getPosition()));
          //test if is is not a ref to a cycle
          if (info.sharedTerm!=null) {
            map.put(tom_label,old);
            return tom_make_LabTerm(tom_label,info.sharedTerm);
          }
        }
      }}}}if (tom_is_fun_sym_LabTerm(tomMatch498NameNumberfreshSubject_1)) {{  String  tomMatch498NameNumber_freshVar_1=tom_get_slot_LabTerm_l(tomMatch498NameNumberfreshSubject_1);if ( true ) {

        map.put(tomMatch498NameNumber_freshVar_1,getEnvironment().getPosition());
      }}}}}return super.visit_Term(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_NormalizeLabel( java.util.HashMap  t0) { return new NormalizeLabel(t0); }



  public static Term label2path(Term t) {
    HashMap map = new HashMap();
    try {
      return (Term) tom_cons_list_Sequence(tom_make_Repeat(tom_make_OnceTopDown(tom_make_CollectLabels(map))),tom_cons_list_Sequence(tom_make_TopDown(tom_make_Label2Path(map)),tom_empty_list_Sequence())).visit(t);
    } catch (tom.library.sl.VisitFailure e) {
      throw new tom.gom.tools.error.GomRuntimeException("Unexpected strategy failure!");
    }  
  }

  private static class CollectLabels extends  tom.gom.adt.rule.RuleBasicStrategy  {private  java.util.HashMap  map; public CollectLabels( java.util.HashMap  map) { super(tom_make_Fail());this.map=map;}public  java.util.HashMap  getmap() { return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Term(tom__arg)) {{  tom.gom.adt.rule.types.Term  tomMatch499NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if (tom_is_fun_sym_LabTerm(tomMatch499NameNumberfreshSubject_1)) {{  String  tomMatch499NameNumber_freshVar_0=tom_get_slot_LabTerm_l(tomMatch499NameNumberfreshSubject_1);{  tom.gom.adt.rule.types.Term  tomMatch499NameNumber_freshVar_1=tom_get_slot_LabTerm_t(tomMatch499NameNumberfreshSubject_1);if ( true ) {


        map.put(tomMatch499NameNumber_freshVar_0,getEnvironment().getPosition());
        return tomMatch499NameNumber_freshVar_1;
      }}}}}}return super.visit_Term(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_CollectLabels( java.util.HashMap  t0) { return new CollectLabels(t0); }private static class PathForPattern extends  tom.gom.adt.rule.RuleBasicStrategy  {public PathForPattern() { super(tom_make_Identity());}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Term(tom__arg)) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if (tom_is_fun_sym_PathTerm(tomMatch500NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_1=tomMatch500NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_begin_3=tomMatch500NameNumber_freshVar_1;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_end_4=tomMatch500NameNumber_freshVar_1;do {{{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_2=tomMatch500NameNumber_end_4;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_begin_6=tomMatch500NameNumber_freshVar_2;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_end_7=tomMatch500NameNumber_freshVar_2;do {{{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_0=tom_get_slice_PathTerm(tomMatch500NameNumber_begin_6,tomMatch500NameNumber_end_7,tom_empty_list_PathTerm());{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_5=tomMatch500NameNumber_end_7;if (tom_is_fun_sym_PathTerm(tomMatch500NameNumber_freshVar_0)) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_10=tomMatch500NameNumber_freshVar_0;if (!(tom_is_empty_PathTerm_Term(tomMatch500NameNumber_freshVar_10))) {if (tom_equal_term_int(-1, tom_get_head_PathTerm_Term(tomMatch500NameNumber_freshVar_10))) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_11=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_freshVar_10);{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_begin_13=tomMatch500NameNumber_freshVar_11;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_end_14=tomMatch500NameNumber_freshVar_11;do {{{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_9=tom_get_slice_PathTerm(tomMatch500NameNumber_begin_13,tomMatch500NameNumber_end_14,tom_empty_list_PathTerm());{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_12=tomMatch500NameNumber_end_14;if (!(tom_is_empty_PathTerm_Term(tomMatch500NameNumber_freshVar_12))) {if (tom_equal_term_int(-1, tom_get_head_PathTerm_Term(tomMatch500NameNumber_freshVar_12))) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_15=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_freshVar_12);if (tom_is_empty_PathTerm_Term(tomMatch500NameNumber_freshVar_15)) {{ boolean tomMatch500NameNumber_freshVar_70= false ;tomMatch500NameNumber_freshVar_9=tomMatch500NameNumber_freshVar_9;if (tom_is_fun_sym_PathTerm(tomMatch500NameNumber_freshVar_9)) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_32=tomMatch500NameNumber_freshVar_9;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_begin_34=tomMatch500NameNumber_freshVar_32;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_end_35=tomMatch500NameNumber_freshVar_32;do {{{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_33=tomMatch500NameNumber_end_35;if (!(tom_is_empty_PathTerm_Term(tomMatch500NameNumber_freshVar_33))) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_36=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_freshVar_33);{ boolean tomMatch500NameNumber_freshVar_71= false ;if (tom_equal_term_int(-2, tom_get_head_PathTerm_Term(tomMatch500NameNumber_freshVar_33))) {tomMatch500NameNumber_freshVar_71= true ;}if ((tomMatch500NameNumber_freshVar_71 ==  false )) {tomMatch500NameNumber_freshVar_70= true ;}}}}}if (tom_is_empty_PathTerm_Term(tomMatch500NameNumber_end_35)) {tomMatch500NameNumber_end_35=tomMatch500NameNumber_begin_34;} else {tomMatch500NameNumber_end_35=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_end_35);}}} while(!(tom_equal_term_Term(tomMatch500NameNumber_end_35, tomMatch500NameNumber_begin_34)));}}}}if ((tomMatch500NameNumber_freshVar_70 ==  false )) {if ( true ) {






        int k = 1+tomMatch500NameNumber_freshVar_9.length();
        PathTerm newX = (PathTerm) tom_make_PathForPattern().visit(tom_get_slice_PathTerm(tomMatch500NameNumber_begin_3,tomMatch500NameNumber_end_4,tom_empty_list_PathTerm()));
        PathTerm newY = (PathTerm) tom_make_PathForPattern().visit(tomMatch500NameNumber_freshVar_5);
        return tom_append_list_PathTerm(newX,tom_cons_list_PathTerm(-k,tom_append_list_PathTerm(newY,tom_empty_list_PathTerm())));
      }}}}}}}}}if (tom_is_empty_PathTerm_Term(tomMatch500NameNumber_end_14)) {tomMatch500NameNumber_end_14=tomMatch500NameNumber_begin_13;} else {tomMatch500NameNumber_end_14=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_end_14);}}} while(!(tom_equal_term_Term(tomMatch500NameNumber_end_14, tomMatch500NameNumber_begin_13)));}}}}}}}}}if (tom_is_empty_PathTerm_Term(tomMatch500NameNumber_end_7)) {tomMatch500NameNumber_end_7=tomMatch500NameNumber_begin_6;} else {tomMatch500NameNumber_end_7=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_end_7);}}} while(!(tom_equal_term_Term(tomMatch500NameNumber_end_7, tomMatch500NameNumber_begin_6)));}}}if (tom_is_empty_PathTerm_Term(tomMatch500NameNumber_end_4)) {tomMatch500NameNumber_end_4=tomMatch500NameNumber_begin_3;} else {tomMatch500NameNumber_end_4=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_end_4);}}} while(!(tom_equal_term_Term(tomMatch500NameNumber_end_4, tomMatch500NameNumber_begin_3)));}}}}if (tom_is_fun_sym_PathTerm(tomMatch500NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_73=tomMatch500NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_begin_75=tomMatch500NameNumber_freshVar_73;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_end_76=tomMatch500NameNumber_freshVar_73;do {{{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_74=tomMatch500NameNumber_end_76;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_begin_78=tomMatch500NameNumber_freshVar_74;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_end_79=tomMatch500NameNumber_freshVar_74;do {{{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_72=tom_get_slice_PathTerm(tomMatch500NameNumber_begin_78,tomMatch500NameNumber_end_79,tom_empty_list_PathTerm());{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_77=tomMatch500NameNumber_end_79;if (tom_is_fun_sym_PathTerm(tomMatch500NameNumber_freshVar_72)) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_82=tomMatch500NameNumber_freshVar_72;if (!(tom_is_empty_PathTerm_Term(tomMatch500NameNumber_freshVar_82))) {if (tom_equal_term_int(1, tom_get_head_PathTerm_Term(tomMatch500NameNumber_freshVar_82))) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_83=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_freshVar_82);{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_begin_85=tomMatch500NameNumber_freshVar_83;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_end_86=tomMatch500NameNumber_freshVar_83;do {{{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_81=tom_get_slice_PathTerm(tomMatch500NameNumber_begin_85,tomMatch500NameNumber_end_86,tom_empty_list_PathTerm());{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_84=tomMatch500NameNumber_end_86;if (!(tom_is_empty_PathTerm_Term(tomMatch500NameNumber_freshVar_84))) {if (tom_equal_term_int(1, tom_get_head_PathTerm_Term(tomMatch500NameNumber_freshVar_84))) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_87=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_freshVar_84);if (tom_is_empty_PathTerm_Term(tomMatch500NameNumber_freshVar_87)) {{ boolean tomMatch500NameNumber_freshVar_142= false ;tomMatch500NameNumber_freshVar_81=tomMatch500NameNumber_freshVar_81;if (tom_is_fun_sym_PathTerm(tomMatch500NameNumber_freshVar_81)) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_104=tomMatch500NameNumber_freshVar_81;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_begin_106=tomMatch500NameNumber_freshVar_104;{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_end_107=tomMatch500NameNumber_freshVar_104;do {{{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_105=tomMatch500NameNumber_end_107;if (!(tom_is_empty_PathTerm_Term(tomMatch500NameNumber_freshVar_105))) {{  tom.gom.adt.rule.types.Term  tomMatch500NameNumber_freshVar_108=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_freshVar_105);{ boolean tomMatch500NameNumber_freshVar_143= false ;if (tom_equal_term_int(2, tom_get_head_PathTerm_Term(tomMatch500NameNumber_freshVar_105))) {tomMatch500NameNumber_freshVar_143= true ;}if ((tomMatch500NameNumber_freshVar_143 ==  false )) {tomMatch500NameNumber_freshVar_142= true ;}}}}}if (tom_is_empty_PathTerm_Term(tomMatch500NameNumber_end_107)) {tomMatch500NameNumber_end_107=tomMatch500NameNumber_begin_106;} else {tomMatch500NameNumber_end_107=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_end_107);}}} while(!(tom_equal_term_Term(tomMatch500NameNumber_end_107, tomMatch500NameNumber_begin_106)));}}}}if ((tomMatch500NameNumber_freshVar_142 ==  false )) {if ( true ) {

        int k = 1+tomMatch500NameNumber_freshVar_81.length();
        PathTerm newX = (PathTerm) tom_make_PathForPattern().visit(tom_get_slice_PathTerm(tomMatch500NameNumber_begin_75,tomMatch500NameNumber_end_76,tom_empty_list_PathTerm()));
        PathTerm newY = (PathTerm) tom_make_PathForPattern().visit(tomMatch500NameNumber_freshVar_77);
        return tom_append_list_PathTerm(newX,tom_cons_list_PathTerm(k,tom_append_list_PathTerm(newY,tom_empty_list_PathTerm())));
      }}}}}}}}}if (tom_is_empty_PathTerm_Term(tomMatch500NameNumber_end_86)) {tomMatch500NameNumber_end_86=tomMatch500NameNumber_begin_85;} else {tomMatch500NameNumber_end_86=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_end_86);}}} while(!(tom_equal_term_Term(tomMatch500NameNumber_end_86, tomMatch500NameNumber_begin_85)));}}}}}}}}}if (tom_is_empty_PathTerm_Term(tomMatch500NameNumber_end_79)) {tomMatch500NameNumber_end_79=tomMatch500NameNumber_begin_78;} else {tomMatch500NameNumber_end_79=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_end_79);}}} while(!(tom_equal_term_Term(tomMatch500NameNumber_end_79, tomMatch500NameNumber_begin_78)));}}}if (tom_is_empty_PathTerm_Term(tomMatch500NameNumber_end_76)) {tomMatch500NameNumber_end_76=tomMatch500NameNumber_begin_75;} else {tomMatch500NameNumber_end_76=tom_get_tail_PathTerm_Term(tomMatch500NameNumber_end_76);}}} while(!(tom_equal_term_Term(tomMatch500NameNumber_end_76, tomMatch500NameNumber_begin_75)));}}}}}}return super.visit_Term(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_PathForPattern() { return new PathForPattern(); }private static class Label2Path extends  tom.gom.adt.rule.RuleBasicStrategy  {private  java.util.HashMap  map; public Label2Path( java.util.HashMap  map) { super(tom_make_Identity());this.map=map;}public  java.util.HashMap  getmap() { return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Term(tom__arg)) {{  tom.gom.adt.rule.types.Term  tomMatch501NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if (tom_is_fun_sym_RefTerm(tomMatch501NameNumberfreshSubject_1)) {{  String  tomMatch501NameNumber_freshVar_0=tom_get_slot_RefTerm_l(tomMatch501NameNumberfreshSubject_1);{  String  tom_label=tomMatch501NameNumber_freshVar_0;if ( true ) {






        if (map.containsKey(tom_label)) {
          Path target = (Path) map.get(tom_label);
          Path ref = (target.sub(getEnvironment().getPosition()));
          //transform the path to obtain the corresponding one in the pattern
          Term path = tom_empty_list_PathTerm();
          int head;
          while(ref.length()!=0) {
            head = ref.getHead();
            ref  = ref.getTail();
            path = tom_append_list_PathTerm(path,tom_cons_list_PathTerm(head,tom_empty_list_PathTerm()));
          }
          Term newpath = normalize((Term)tom_make_PathForPattern().visitLight(path));
          return newpath;
        }
      }}}}}}return super.visit_Term(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_Label2Path( java.util.HashMap  t0) { return new Label2Path(t0); }



  public static Term normalize(Term path){
    if (tom_is_sort_Term(path)) {{  tom.gom.adt.rule.types.Term  tomMatch502NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )path);if (tom_is_fun_sym_PathTerm(tomMatch502NameNumberfreshSubject_1)) {{  tom.gom.adt.rule.types.Term  tomMatch502NameNumber_freshVar_0=tomMatch502NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.Term  tomMatch502NameNumber_begin_2=tomMatch502NameNumber_freshVar_0;{  tom.gom.adt.rule.types.Term  tomMatch502NameNumber_end_3=tomMatch502NameNumber_freshVar_0;do {{{  tom.gom.adt.rule.types.Term  tomMatch502NameNumber_freshVar_1=tomMatch502NameNumber_end_3;if (!(tom_is_empty_PathTerm_Term(tomMatch502NameNumber_freshVar_1))) {{  tom.gom.adt.rule.types.Term  tomMatch502NameNumber_freshVar_4=tom_get_tail_PathTerm_Term(tomMatch502NameNumber_freshVar_1);if (!(tom_is_empty_PathTerm_Term(tomMatch502NameNumber_freshVar_4))) {{  tom.gom.adt.rule.types.Term  tomMatch502NameNumber_freshVar_5=tom_get_tail_PathTerm_Term(tomMatch502NameNumber_freshVar_4);if ( true ) {

        if (tom_get_head_PathTerm_Term(tomMatch502NameNumber_freshVar_1)==-tom_get_head_PathTerm_Term(tomMatch502NameNumber_freshVar_4)) {
          return normalize(tom_append_list_PathTerm(tom_get_slice_PathTerm(tomMatch502NameNumber_begin_2,tomMatch502NameNumber_end_3,tom_empty_list_PathTerm()),tom_append_list_PathTerm(tomMatch502NameNumber_freshVar_5,tom_empty_list_PathTerm())));
        }
      }}}}}}if (tom_is_empty_PathTerm_Term(tomMatch502NameNumber_end_3)) {tomMatch502NameNumber_end_3=tomMatch502NameNumber_begin_2;} else {tomMatch502NameNumber_end_3=tom_get_tail_PathTerm_Term(tomMatch502NameNumber_end_3);}}} while(!(tom_equal_term_Term(tomMatch502NameNumber_end_3, tomMatch502NameNumber_begin_2)));}}}}}}

    return path;
  }

  private String getSort(String symbolOperator,int omega) {
    if (tom_is_sort_ModuleList(moduleList)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch503NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if (tom_is_fun_sym_concModule(tomMatch503NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.ModuleList  tomMatch503NameNumber_freshVar_0=tomMatch503NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch503NameNumber_begin_2=tomMatch503NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch503NameNumber_end_3=tomMatch503NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch503NameNumber_freshVar_1=tomMatch503NameNumber_end_3;if (!(tom_is_empty_concModule_ModuleList(tomMatch503NameNumber_freshVar_1))) {if (tom_is_fun_sym_Module(tom_get_head_concModule_ModuleList(tomMatch503NameNumber_freshVar_1))) {{  tom.gom.adt.gom.types.SortList  tomMatch503NameNumber_freshVar_6=tom_get_slot_Module_Sorts(tom_get_head_concModule_ModuleList(tomMatch503NameNumber_freshVar_1));if (tom_is_fun_sym_concSort(tomMatch503NameNumber_freshVar_6)) {{  tom.gom.adt.gom.types.SortList  tomMatch503NameNumber_freshVar_7=tomMatch503NameNumber_freshVar_6;{  tom.gom.adt.gom.types.SortList  tomMatch503NameNumber_begin_9=tomMatch503NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch503NameNumber_end_10=tomMatch503NameNumber_freshVar_7;do {{{  tom.gom.adt.gom.types.SortList  tomMatch503NameNumber_freshVar_8=tomMatch503NameNumber_end_10;if (!(tom_is_empty_concSort_SortList(tomMatch503NameNumber_freshVar_8))) {if (tom_is_fun_sym_Sort(tom_get_head_concSort_SortList(tomMatch503NameNumber_freshVar_8))) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch503NameNumber_freshVar_13=tom_get_slot_Sort_Operators(tom_get_head_concSort_SortList(tomMatch503NameNumber_freshVar_8));if (tom_is_fun_sym_concOperator(tomMatch503NameNumber_freshVar_13)) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch503NameNumber_freshVar_14=tomMatch503NameNumber_freshVar_13;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch503NameNumber_begin_16=tomMatch503NameNumber_freshVar_14;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch503NameNumber_end_17=tomMatch503NameNumber_freshVar_14;do {{{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch503NameNumber_freshVar_15=tomMatch503NameNumber_end_17;if (!(tom_is_empty_concOperator_OperatorDeclList(tomMatch503NameNumber_freshVar_15))) {if (tom_is_fun_sym_OperatorDecl(tom_get_head_concOperator_OperatorDeclList(tomMatch503NameNumber_freshVar_15))) {{  String  tomMatch503NameNumber_freshVar_20=tom_get_slot_OperatorDecl_Name(tom_get_head_concOperator_OperatorDeclList(tomMatch503NameNumber_freshVar_15));{  tom.gom.adt.gom.types.TypedProduction  tomMatch503NameNumber_freshVar_21=tom_get_slot_OperatorDecl_Prod(tom_get_head_concOperator_OperatorDeclList(tomMatch503NameNumber_freshVar_15));{  tom.gom.adt.gom.types.TypedProduction  tom_prod=tomMatch503NameNumber_freshVar_21;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch503NameNumber_freshVar_18=tom_get_tail_concOperator_OperatorDeclList(tomMatch503NameNumber_freshVar_15);{  tom.gom.adt.gom.types.SortList  tomMatch503NameNumber_freshVar_11=tom_get_tail_concSort_SortList(tomMatch503NameNumber_freshVar_8);{  tom.gom.adt.gom.types.ModuleList  tomMatch503NameNumber_freshVar_4=tom_get_tail_concModule_ModuleList(tomMatch503NameNumber_freshVar_1);if ( true ) {

        if(tomMatch503NameNumber_freshVar_20.equals(symbolOperator)) {
          int count=1;
          if (tom_is_sort_TypedProduction(tom_prod)) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch504NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.TypedProduction )tom_prod);if (tom_is_fun_sym_Variadic(tomMatch504NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SortDecl  tomMatch504NameNumber_freshVar_0=tom_get_slot_Variadic_Sort(tomMatch504NameNumberfreshSubject_1);if ( true ) {

              return tomMatch504NameNumber_freshVar_0.getName();
            }}}if (tom_is_fun_sym_Slots(tomMatch504NameNumberfreshSubject_1)) {{  tom.gom.adt.gom.types.SlotList  tomMatch504NameNumber_freshVar_1=tom_get_slot_Slots_Slots(tomMatch504NameNumberfreshSubject_1);if (tom_is_fun_sym_concSlot(tomMatch504NameNumber_freshVar_1)) {{  tom.gom.adt.gom.types.SlotList  tomMatch504NameNumber_freshVar_2=tomMatch504NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SlotList  tomMatch504NameNumber_begin_4=tomMatch504NameNumber_freshVar_2;{  tom.gom.adt.gom.types.SlotList  tomMatch504NameNumber_end_5=tomMatch504NameNumber_freshVar_2;do {{{  tom.gom.adt.gom.types.SlotList  tomMatch504NameNumber_freshVar_3=tomMatch504NameNumber_end_5;if (!(tom_is_empty_concSlot_SlotList(tomMatch504NameNumber_freshVar_3))) {if (tom_is_fun_sym_Slot(tom_get_head_concSlot_SlotList(tomMatch504NameNumber_freshVar_3))) {{  tom.gom.adt.gom.types.SortDecl  tomMatch504NameNumber_freshVar_8=tom_get_slot_Slot_Sort(tom_get_head_concSlot_SlotList(tomMatch504NameNumber_freshVar_3));if (tom_is_fun_sym_SortDecl(tomMatch504NameNumber_freshVar_8)) {{  String  tomMatch504NameNumber_freshVar_9=tom_get_slot_SortDecl_Name(tomMatch504NameNumber_freshVar_8);{  tom.gom.adt.gom.types.SlotList  tomMatch504NameNumber_freshVar_6=tom_get_tail_concSlot_SlotList(tomMatch504NameNumber_freshVar_3);if ( true ) {

              if (count==omega) {
                return tomMatch504NameNumber_freshVar_9;
              } else {
                count++;
              }
            }}}}}}}}if (tom_is_empty_concSlot_SlotList(tomMatch504NameNumber_end_5)) {tomMatch504NameNumber_end_5=tomMatch504NameNumber_begin_4;} else {tomMatch504NameNumber_end_5=tom_get_tail_concSlot_SlotList(tomMatch504NameNumber_end_5);}}} while(!(tom_equal_term_SlotList(tomMatch504NameNumber_end_5, tomMatch504NameNumber_begin_4)));}}}}}}}}

        }
      }}}}}}}}}}if (tom_is_empty_concOperator_OperatorDeclList(tomMatch503NameNumber_end_17)) {tomMatch503NameNumber_end_17=tomMatch503NameNumber_begin_16;} else {tomMatch503NameNumber_end_17=tom_get_tail_concOperator_OperatorDeclList(tomMatch503NameNumber_end_17);}}} while(!(tom_equal_term_OperatorDeclList(tomMatch503NameNumber_end_17, tomMatch503NameNumber_begin_16)));}}}}}}}}if (tom_is_empty_concSort_SortList(tomMatch503NameNumber_end_10)) {tomMatch503NameNumber_end_10=tomMatch503NameNumber_begin_9;} else {tomMatch503NameNumber_end_10=tom_get_tail_concSort_SortList(tomMatch503NameNumber_end_10);}}} while(!(tom_equal_term_SortList(tomMatch503NameNumber_end_10, tomMatch503NameNumber_begin_9)));}}}}}}}}if (tom_is_empty_concModule_ModuleList(tomMatch503NameNumber_end_3)) {tomMatch503NameNumber_end_3=tomMatch503NameNumber_begin_2;} else {tomMatch503NameNumber_end_3=tom_get_tail_concModule_ModuleList(tomMatch503NameNumber_end_3);}}} while(!(tom_equal_term_ModuleList(tomMatch503NameNumber_end_3, tomMatch503NameNumber_begin_2)));}}}}}}

    throw new RuntimeException("cannot determine the sort of the "+omega+"th child of the constructor "+symbolOperator);
  }

  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }

}

/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * GOM
 *
 * Copyright (C) 2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Emilie Balland e-mail: Emilie.Balland@loria.fr
 *
 **/

package tom.gom.expander.rule;

import org.antlr.runtime.CommonTokenStream;
import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.tree.Tree;
import java.util.logging.Level;
import java.util.Map;
import java.util.HashMap;
import java.util.Iterator;
import java.util.logging.Logger;
import tom.gom.adt.gom.types.*;
import tom.gom.adt.rule.RuleTree;
import tom.gom.adt.rule.RuleAdaptor;
import tom.gom.adt.rule.types.*;
import tom.gom.adt.rule.types.term.*;
import tom.gom.adt.objects.types.ClassName;
import tom.gom.tools.error.GomRuntimeException;
import tom.library.sl.*;

public class GraphRuleExpander {

  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.gom.adt.gom.types.OperatorDeclList  tom_append_list_concOperator( tom.gom.adt.gom.types.OperatorDeclList l1,  tom.gom.adt.gom.types.OperatorDeclList  l2) {     if( l1.isEmptyconcOperator() ) {       return l2;     } else if( l2.isEmptyconcOperator() ) {       return l1;     } else if(  l1.getTailconcOperator() .isEmptyconcOperator() ) {       return  tom.gom.adt.gom.types.operatordecllist.ConsconcOperator.make( l1.getHeadconcOperator() ,l2) ;     } else {       return  tom.gom.adt.gom.types.operatordecllist.ConsconcOperator.make( l1.getHeadconcOperator() ,tom_append_list_concOperator( l1.getTailconcOperator() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.OperatorDeclList  tom_get_slice_concOperator( tom.gom.adt.gom.types.OperatorDeclList  begin,  tom.gom.adt.gom.types.OperatorDeclList  end, tom.gom.adt.gom.types.OperatorDeclList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.operatordecllist.ConsconcOperator.make( begin.getHeadconcOperator() ,( tom.gom.adt.gom.types.OperatorDeclList )tom_get_slice_concOperator( begin.getTailconcOperator() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.HookDeclList  tom_append_list_concHookDecl( tom.gom.adt.gom.types.HookDeclList l1,  tom.gom.adt.gom.types.HookDeclList  l2) {     if( l1.isEmptyconcHookDecl() ) {       return l2;     } else if( l2.isEmptyconcHookDecl() ) {       return l1;     } else if(  l1.getTailconcHookDecl() .isEmptyconcHookDecl() ) {       return  tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make( l1.getHeadconcHookDecl() ,l2) ;     } else {       return  tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make( l1.getHeadconcHookDecl() ,tom_append_list_concHookDecl( l1.getTailconcHookDecl() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.HookDeclList  tom_get_slice_concHookDecl( tom.gom.adt.gom.types.HookDeclList  begin,  tom.gom.adt.gom.types.HookDeclList  end, tom.gom.adt.gom.types.HookDeclList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make( begin.getHeadconcHookDecl() ,( tom.gom.adt.gom.types.HookDeclList )tom_get_slice_concHookDecl( begin.getTailconcHookDecl() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.SlotList  tom_append_list_concSlot( tom.gom.adt.gom.types.SlotList l1,  tom.gom.adt.gom.types.SlotList  l2) {     if( l1.isEmptyconcSlot() ) {       return l2;     } else if( l2.isEmptyconcSlot() ) {       return l1;     } else if(  l1.getTailconcSlot() .isEmptyconcSlot() ) {       return  tom.gom.adt.gom.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,l2) ;     } else {       return  tom.gom.adt.gom.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,tom_append_list_concSlot( l1.getTailconcSlot() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.SlotList  tom_get_slice_concSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end, tom.gom.adt.gom.types.SlotList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.slotlist.ConsconcSlot.make( begin.getHeadconcSlot() ,( tom.gom.adt.gom.types.SlotList )tom_get_slice_concSlot( begin.getTailconcSlot() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.SortList  tom_append_list_concSort( tom.gom.adt.gom.types.SortList l1,  tom.gom.adt.gom.types.SortList  l2) {     if( l1.isEmptyconcSort() ) {       return l2;     } else if( l2.isEmptyconcSort() ) {       return l1;     } else if(  l1.getTailconcSort() .isEmptyconcSort() ) {       return  tom.gom.adt.gom.types.sortlist.ConsconcSort.make( l1.getHeadconcSort() ,l2) ;     } else {       return  tom.gom.adt.gom.types.sortlist.ConsconcSort.make( l1.getHeadconcSort() ,tom_append_list_concSort( l1.getTailconcSort() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.SortList  tom_get_slice_concSort( tom.gom.adt.gom.types.SortList  begin,  tom.gom.adt.gom.types.SortList  end, tom.gom.adt.gom.types.SortList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.sortlist.ConsconcSort.make( begin.getHeadconcSort() ,( tom.gom.adt.gom.types.SortList )tom_get_slice_concSort( begin.getTailconcSort() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.ModuleList  tom_append_list_concModule( tom.gom.adt.gom.types.ModuleList l1,  tom.gom.adt.gom.types.ModuleList  l2) {     if( l1.isEmptyconcModule() ) {       return l2;     } else if( l2.isEmptyconcModule() ) {       return l1;     } else if(  l1.getTailconcModule() .isEmptyconcModule() ) {       return  tom.gom.adt.gom.types.modulelist.ConsconcModule.make( l1.getHeadconcModule() ,l2) ;     } else {       return  tom.gom.adt.gom.types.modulelist.ConsconcModule.make( l1.getHeadconcModule() ,tom_append_list_concModule( l1.getTailconcModule() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.ModuleList  tom_get_slice_concModule( tom.gom.adt.gom.types.ModuleList  begin,  tom.gom.adt.gom.types.ModuleList  end, tom.gom.adt.gom.types.ModuleList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.modulelist.ConsconcModule.make( begin.getHeadconcModule() ,( tom.gom.adt.gom.types.ModuleList )tom_get_slice_concModule( begin.getTailconcModule() ,end,tail)) ;     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */   private static   tom.gom.adt.rule.types.RuleList  tom_append_list_RuleList( tom.gom.adt.rule.types.RuleList l1,  tom.gom.adt.rule.types.RuleList  l2) {     if( l1.isEmptyRuleList() ) {       return l2;     } else if( l2.isEmptyRuleList() ) {       return l1;     } else if(  l1.getTailRuleList() .isEmptyRuleList() ) {       return  tom.gom.adt.rule.types.rulelist.ConsRuleList.make( l1.getHeadRuleList() ,l2) ;     } else {       return  tom.gom.adt.rule.types.rulelist.ConsRuleList.make( l1.getHeadRuleList() ,tom_append_list_RuleList( l1.getTailRuleList() ,l2)) ;     }   }   private static   tom.gom.adt.rule.types.RuleList  tom_get_slice_RuleList( tom.gom.adt.rule.types.RuleList  begin,  tom.gom.adt.rule.types.RuleList  end, tom.gom.adt.rule.types.RuleList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.rule.types.rulelist.ConsRuleList.make( begin.getHeadRuleList() ,( tom.gom.adt.rule.types.RuleList )tom_get_slice_RuleList( begin.getTailRuleList() ,end,tail)) ;     }   }      private static   tom.gom.adt.rule.types.TermList  tom_append_list_TermList( tom.gom.adt.rule.types.TermList l1,  tom.gom.adt.rule.types.TermList  l2) {     if( l1.isEmptyTermList() ) {       return l2;     } else if( l2.isEmptyTermList() ) {       return l1;     } else if(  l1.getTailTermList() .isEmptyTermList() ) {       return  tom.gom.adt.rule.types.termlist.ConsTermList.make( l1.getHeadTermList() ,l2) ;     } else {       return  tom.gom.adt.rule.types.termlist.ConsTermList.make( l1.getHeadTermList() ,tom_append_list_TermList( l1.getTailTermList() ,l2)) ;     }   }   private static   tom.gom.adt.rule.types.TermList  tom_get_slice_TermList( tom.gom.adt.rule.types.TermList  begin,  tom.gom.adt.rule.types.TermList  end, tom.gom.adt.rule.types.TermList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.rule.types.termlist.ConsTermList.make( begin.getHeadTermList() ,( tom.gom.adt.rule.types.TermList )tom_get_slice_TermList( begin.getTailTermList() ,end,tail)) ;     }   }      private static   tom.gom.adt.rule.types.Term  tom_append_list_PathTerm( tom.gom.adt.rule.types.Term l1,  tom.gom.adt.rule.types.Term  l2) {     if( l1.isEmptyPathTerm() ) {       return l2;     } else if( l2.isEmptyPathTerm() ) {       return l1;     } else if(  l1.getTailPathTerm() .isEmptyPathTerm() ) {       return  tom.gom.adt.rule.types.term.ConsPathTerm.make( l1.getHeadPathTerm() ,l2) ;     } else {       return  tom.gom.adt.rule.types.term.ConsPathTerm.make( l1.getHeadPathTerm() ,tom_append_list_PathTerm( l1.getTailPathTerm() ,l2)) ;     }   }   private static   tom.gom.adt.rule.types.Term  tom_get_slice_PathTerm( tom.gom.adt.rule.types.Term  begin,  tom.gom.adt.rule.types.Term  end, tom.gom.adt.rule.types.Term  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.rule.types.term.ConsPathTerm.make( begin.getHeadPathTerm() ,( tom.gom.adt.rule.types.Term )tom_get_slice_PathTerm( begin.getTailPathTerm() ,end,tail)) ;     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Sequence) )) {       if(( ((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Sequence(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else {       return ( (( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin):new tom.library.sl.Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)) );     }   }      private static   tom.library.sl.Strategy  tom_append_list_Choice( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Choice) )) {       if(( ((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )) ==null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Choice(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Choice( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else {       return ( (( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin):new tom.library.sl.Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)) );     }   }      private static   tom.library.sl.Strategy  tom_append_list_SequenceId( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.SequenceId) )) {       if(( ((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1):new tom.library.sl.SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1):new tom.library.sl.SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1),tom_append_list_SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.SequenceId(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_SequenceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else {       return ( (( tom.library.sl.Strategy )tom_get_slice_SequenceId(((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.FIRST) ):begin):new tom.library.sl.SequenceId(((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_SequenceId(((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),end,tail)) );     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) ); }private static  tom.library.sl.Strategy  tom_make_OnceTopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.One(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Choice(( new tom.library.sl.One(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Choice(v,( (( null )==null)?( new tom.library.sl.One(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Choice(( new tom.library.sl.One(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) ); }private static  tom.library.sl.Strategy  tom_make_Repeat( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.Identity() ):new tom.library.sl.Choice(( new tom.library.sl.Identity() ),( null )) )==null)?( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.Sequence(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.Sequence(( new tom.library.sl.MuVar("_x") ),( null )) )) ):new tom.library.sl.Choice(( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.Sequence(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.Sequence(( new tom.library.sl.MuVar("_x") ),( null )) )) ),( (( null )==null)?( new tom.library.sl.Identity() ):new tom.library.sl.Choice(( new tom.library.sl.Identity() ),( null )) )) )) ) ); }private static  tom.library.sl.Strategy  tom_make_RepeatId( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) )) ) ); }private static  tom.library.sl.Strategy  tom_make_InnermostIdSeq( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ):new tom.library.sl.Sequence(( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ),( null )) )==null)?( new tom.library.sl.AllSeq(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.AllSeq(( new tom.library.sl.MuVar("_x") )) ),( (( null )==null)?( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ):new tom.library.sl.Sequence(( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ),( null )) )) )) ) ); }   /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */   static class MapEntry {   private Object key;   private Object val;   public Object getKey() { return key; }   public Object getVal() { return val; }   public MapEntry(Object key, Object val) {     this.key = key;     this.val = val;   } }  /* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */   private static java.util.HashMap hashMapAppend(MapEntry e, java.util.HashMap m) {   java.util.HashMap res = (java.util.HashMap) m.clone();   res.put(e.getKey(), e.getVal());   return res; }  private static MapEntry hashMapGetHead(java.util.HashMap m) {   java.util.Set es = m.entrySet();   java.util.Iterator it = es.iterator();   java.util.Map.Entry e = (java.util.Map.Entry) it.next();   return new MapEntry(e.getKey(), e.getValue()); }  private static java.util.HashMap hashMapGetTail(java.util.HashMap m) {   java.util.HashMap res = (java.util.HashMap) m.clone();   java.util.Set es = m.entrySet();   java.util.Iterator it = es.iterator();   java.util.Map.Entry e = (java.util.Map.Entry) it.next();   res.remove(e.getKey());   return res; }   




  private ModuleList moduleList;
  private String sortname;
  private String moduleName;
  private String pkgName;

  public GraphRuleExpander(ModuleList data) {
    this.moduleList = data;
  }

  private static String fullClassName(ClassName clsName) {
    {if ( (clsName instanceof tom.gom.adt.objects.types.ClassName) ) {{  tom.gom.adt.objects.types.ClassName  tomMatch1NameNumberfreshSubject_1=(( tom.gom.adt.objects.types.ClassName )clsName);if ( (tomMatch1NameNumberfreshSubject_1 instanceof tom.gom.adt.objects.types.classname.ClassName) ) {{  String  tomMatch1NameNumber_freshVar_0= tomMatch1NameNumberfreshSubject_1.getPkg() ;{  String  tomMatch1NameNumber_freshVar_1= tomMatch1NameNumberfreshSubject_1.getName() ;{  String  tom_pkgPrefix=tomMatch1NameNumber_freshVar_0;{  String  tom_name=tomMatch1NameNumber_freshVar_1;if ( true ) {

        if(tom_pkgPrefix.length()==0) {
          return tom_name;
        } else {
          return tom_pkgPrefix+"."+tom_name;
        }
      }}}}}}}}}

    throw new GomRuntimeException(
        "GomReferenceExpander:fullClassName got a strange ClassName "+clsName);
  }

  public HookDeclList expandGraphRules(String sortname, String stratname, String defaultstrat, String ruleCode, Decl sdecl) {
    this.sortname = sortname; 
    {if ( (sdecl instanceof tom.gom.adt.gom.types.Decl) ) {{  tom.gom.adt.gom.types.Decl  tomMatch2NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Decl )sdecl);if ( (tomMatch2NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.decl.CutSort) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch2NameNumber_freshVar_0= tomMatch2NameNumberfreshSubject_1.getSort() ;if ( (tomMatch2NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch2NameNumber_freshVar_1= tomMatch2NameNumber_freshVar_0.getModuleDecl() ;if ( (tomMatch2NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.moduledecl.ModuleDecl) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch2NameNumber_freshVar_2= tomMatch2NameNumber_freshVar_1.getModuleName() ;{  String  tomMatch2NameNumber_freshVar_3= tomMatch2NameNumber_freshVar_1.getPkg() ;if ( (tomMatch2NameNumber_freshVar_2 instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName) ) {{  String  tomMatch2NameNumber_freshVar_4= tomMatch2NameNumber_freshVar_2.getName() ;if ( true ) {

        this.moduleName = tomMatch2NameNumber_freshVar_4;
        this.pkgName = tomMatch2NameNumber_freshVar_3;
      }}}}}}}}}}}}}


    RuleLexer lexer = new RuleLexer(new ANTLRStringStream(ruleCode));
    CommonTokenStream tokens = new CommonTokenStream(lexer);
    RuleParser parser = new RuleParser(tokens);
    parser.setTreeAdaptor(new RuleAdaptor());
    RuleList rulelist =  tom.gom.adt.rule.types.rulelist.EmptyRuleList.make() ;
    try {
      RuleTree ast = (RuleTree)parser.graphruleset().getTree();
      rulelist = (RuleList) ast.getTerm();
    } catch (org.antlr.runtime.RecognitionException e) {
      getLogger().log(Level.SEVERE, "Cannot parse rules",
          new Object[]{});
      return  tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl.make() ;
    }
    return expand(rulelist,stratname,defaultstrat,sdecl);
  }

  public HookDeclList expandFirstGraphRules(String sortname, String stratname, String defaultstrat, String ruleCode, Decl sdecl) {
    HookDeclList expandedrules = expandGraphRules(sortname,stratname,defaultstrat,ruleCode, sdecl);
    HookDeclList commonpart = expandFirst(sdecl);
    return tom_append_list_concHookDecl(commonpart,tom_append_list_concHookDecl(expandedrules, tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl.make() ));  
  }

  //add the common methods, includes and imports for all graphrule strategies of a sort 
  protected HookDeclList expandFirst(Decl sdecl) {
    ClassName abstractType =  tom.gom.adt.objects.types.classname.ClassName.make(pkgName+"."+moduleName.toLowerCase(), moduleName+"AbstractType") ;
    ClassName visitor =  tom.gom.adt.objects.types.classname.ClassName.make(pkgName+"."+moduleName.toLowerCase(), moduleName+"Visitor") ;

    StringBuilder output = new StringBuilder();
    output.append(
        "\n  %include {sl.tom }\n  %include{java/util/ArrayList.tom}\n  \n  %typeterm Position{\n      implement {Position}\n      is_sort(t) { ($t instanceof Position) }\n  }\n \n  %typeterm SharedLabel{\n      implement {SharedLabel}\n      is_sort(t) { ($t instanceof SharedLabel) }\n  }\n\n\n  static class SharedLabel {\n    public Position posLhs;\n    public Position posRhs;\n    public String label;\n\n    public SharedLabel(String label, Position posLhs, Position posRhs) {\n      this.label = label;\n      this.posLhs = posLhs;\n      this.posRhs = posRhs;\n    }\n  }\n\n%op "/* Generated by TOM (version 2.6alpha): Do not edit this file */+abstractType.getName()+" Subst(global:"/* Generated by TOM (version 2.6alpha): Do not edit this file */+abstractType.getName()+",subst:"/* Generated by TOM (version 2.6alpha): Do not edit this file */+abstractType.getName()+") {\n  is_fsym(t) {( $t instanceof Subst )}\n  make(t1,t2) {( new Subst($t1,$t2) )}\n}\n\n%typeterm "/* Generated by TOM (version 2.6alpha): Do not edit this file */+abstractType.getName()+" {\n  implement { "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" }\n  is_sort(t) {( $t instanceof "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" )}\n}\n\nstatic class Subst extends "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" {\n    \n  "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" substitution,globalterm;\n\n  public Subst("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" globalterm, "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" substitution) {\n    this.substitution = substitution;\n    this.globalterm = globalterm;\n  }\n\n    //use the default implementation of visit in BasicStrategy\n  public "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" accept("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(visitor)+" v, tom.library.sl.Introspector i) throws tom.library.sl.VisitFailure {\n    Strategy any = (Strategy)((Visitable)v).getChildAt(0);\n    return ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") any.visit(this,i);\n  }\n\n  //abstract methods from the abstractType which are trivially implemented\n  //they must never be used\n  \n  public aterm.ATerm toATerm() {\n    return null;\n  }\n\n  public String symbolName() { return \"@\"; }\n\n  public void toStringBuilder(java.lang.StringBuilder buffer) {\n    buffer.append(\"@(\");\n    buffer.append(globalterm);\n    buffer.append(\",\");\n    buffer.append(substitution);\n    buffer.append(\")\");\n  }\n\n  public int compareTo(Object o) { return 0; }\n\n  public int compareToLPO(Object o) { return 0; }\n\n  public final int hashCode() {\n    return 0;\n  }\n\n  public final boolean equivalent(shared.SharedObject obj) {\n    return false;\n  }\n\n  public shared.SharedObject duplicate() {\n    return this;\n  }\n\n  //implementation of the Visitable interface\n  public Visitable setChildren(Visitable[] children) {\n    if (children.length == 2){\n      return new Subst(("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+")children[0],("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+")children[1]);\n    } else {\n      throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public Visitable[] getChildren() {\n    return new Visitable[]{globalterm,substitution};\n  }\n\n  public Visitable getChildAt(int i) {\n    switch(i) {\n      case 0: return globalterm;\n      case 1: return substitution;\n      default: throw new IndexOutOfBoundsException();\n    }\n  }\n\n  public Visitable setChildAt(int i, Visitable child) {\n    switch(i) {\n      case 0: return new Subst(("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+")child,substitution);\n      case 1: return new Subst(globalterm,("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+")child);\n      default: throw new IndexOutOfBoundsException();\n    }\n  } \n\n    public int getChildCount() { \n      return 2; \n    }\n\n}\n\n  static class Substitution {\n    public Position omega;\n    "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" value;\n\n    public Substitution(Position omega, "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" value) {\n      this.omega = omega;\n      this.value = value;\n    }\n  }\n\n  protected static Iterator getSubstitutions("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" labelledLhs, "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" labelledRhs, Position omega) {\n    ArrayList sharedlabels = new ArrayList();\n    HashMap lhsLabels = labelledLhs.getLabels();\n    HashMap rhsLabels = labelledRhs.getLabels2();\n    Iterator itRhs = rhsLabels.keySet().iterator(); \n    while(itRhs.hasNext()) {\n      String label = (String) itRhs.next();\n      if (lhsLabels.containsKey(label)) {\n        sharedlabels.add(label);\n      }\n    }\n\n    ArrayList result = new ArrayList();\n    Iterator iter = sharedlabels.iterator(); \n    while(iter.hasNext()) {\n      String label = (String) iter.next();\n      Position posLhs = (Position)lhsLabels.get(label);\n      Position posRhs = (Position)rhsLabels.get(label);\n      Substitution subst = computeSubstitution(labelledLhs,labelledRhs,new SharedLabel(label,posLhs,posRhs),sharedlabels,omega);\n      result.add(subst);\n    }\n    // add the substitution for the root position\n    Substitution subst = computeSubstitution(labelledLhs,labelledRhs,new SharedLabel(\"\",new Position(new int[]{}),new Position(new int[]{})),sharedlabels,omega);\n    result.add(subst);\n    return result.iterator();\n  }\n\n\n  %strategy ReplaceSharedLabelByVar(sharedlabels:ArrayList,sharedlabel:SharedLabel) extends Identity() {\n    visit "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" {\n      Lab"/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+"[label"/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+"=label] -> {\n        if (`label.equals(sharedlabel.label)) {\n          throw new VisitFailure();\n        } else {\n          if(sharedlabels.contains(`label)) {\n            return `Var"/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+"(label);\n          }\n        }\n      }\n    }\n  }\n\n  private static Substitution computeSubstitution("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" labelledLhs, "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" labelledRhs, SharedLabel sharedlabel, ArrayList sharedlabels, Position omega) {\n    try {\n      "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" lhs = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") `Try(BottomUp(ReplaceSharedLabelByVar(sharedlabels,sharedlabel))).visit(labelledLhs);\n      "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" rhs = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") `Try(BottomUp(ReplaceSharedLabelByVar(sharedlabels,sharedlabel))).visit(labelledRhs);\n      lhs = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") lhs.expand();\n      rhs = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") sharedlabel.posRhs.getSubterm().visit(rhs);\n      return new Substitution((Position) omega.add(sharedlabel.posLhs),("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") `TopDown(FromVarToPath(lhs,omega)).visit(rhs));\n    } catch(VisitFailure e) { \n      throw new RuntimeException(\"Unexpected strategy failure!\");\n    }\n  }\n\n\n  %strategy FromVarToPath(lhs:"/* Generated by TOM (version 2.6alpha): Do not edit this file */+abstractType.getName()+",omega:Position) extends Identity() {\n"

























































































































































































);

  {if ( (moduleList instanceof tom.gom.adt.gom.types.ModuleList) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch3NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if ( ((tomMatch3NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.modulelist.ConsconcModule) || (tomMatch3NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.modulelist.EmptyconcModule)) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch3NameNumber_freshVar_0=tomMatch3NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch3NameNumber_begin_2=tomMatch3NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch3NameNumber_end_3=tomMatch3NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch3NameNumber_freshVar_1=tomMatch3NameNumber_end_3;if (!( tomMatch3NameNumber_freshVar_1.isEmptyconcModule() )) {if ( ( tomMatch3NameNumber_freshVar_1.getHeadconcModule()  instanceof tom.gom.adt.gom.types.module.Module) ) {{  tom.gom.adt.gom.types.SortList  tomMatch3NameNumber_freshVar_6=  tomMatch3NameNumber_freshVar_1.getHeadconcModule() .getSorts() ;if ( ((tomMatch3NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.sortlist.ConsconcSort) || (tomMatch3NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.sortlist.EmptyconcSort)) ) {{  tom.gom.adt.gom.types.SortList  tomMatch3NameNumber_freshVar_7=tomMatch3NameNumber_freshVar_6;{  tom.gom.adt.gom.types.SortList  tomMatch3NameNumber_begin_9=tomMatch3NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch3NameNumber_end_10=tomMatch3NameNumber_freshVar_7;do {{{  tom.gom.adt.gom.types.SortList  tomMatch3NameNumber_freshVar_8=tomMatch3NameNumber_end_10;if (!( tomMatch3NameNumber_freshVar_8.isEmptyconcSort() )) {if ( ( tomMatch3NameNumber_freshVar_8.getHeadconcSort()  instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch3NameNumber_freshVar_13=  tomMatch3NameNumber_freshVar_8.getHeadconcSort() .getDecl() ;if ( (tomMatch3NameNumber_freshVar_13 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch3NameNumber_freshVar_14= tomMatch3NameNumber_freshVar_13.getName() ;{  String  tom_name=tomMatch3NameNumber_freshVar_14;{  tom.gom.adt.gom.types.SortList  tomMatch3NameNumber_freshVar_11= tomMatch3NameNumber_freshVar_8.getTailconcSort() ;{  tom.gom.adt.gom.types.ModuleList  tomMatch3NameNumber_freshVar_4= tomMatch3NameNumber_freshVar_1.getTailconcModule() ;if ( true ) {

    output.append(
        "\n    visit "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+" {\n      Var"/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+"(name) -> {\n        Position wl = getVarPos(lhs,`name);\n        Position wr = getEnvironment().getPosition();\n        Position wwl = (Position) (new Position(new int[]{1})).add(omega).add(wl); \n        Position wwr = (Position) (new Position(new int[]{2})).add(wr); \n        Position res = (Position) wwl.sub(wwr);\n        return Path"/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+".make(res);\n      }\n   }      \n"










);
    }}}}}}}}}}if ( tomMatch3NameNumber_end_10.isEmptyconcSort() ) {tomMatch3NameNumber_end_10=tomMatch3NameNumber_begin_9;} else {tomMatch3NameNumber_end_10= tomMatch3NameNumber_end_10.getTailconcSort() ;}}} while(!( tomMatch3NameNumber_end_10.equals(tomMatch3NameNumber_begin_9) ));}}}}}}}}if ( tomMatch3NameNumber_end_3.isEmptyconcModule() ) {tomMatch3NameNumber_end_3=tomMatch3NameNumber_begin_2;} else {tomMatch3NameNumber_end_3= tomMatch3NameNumber_end_3.getTailconcModule() ;}}} while(!( tomMatch3NameNumber_end_3.equals(tomMatch3NameNumber_begin_2) ));}}}}}}}


  output.append("\n  }\n\n  private static Position getVarPos("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" term, String varname) {\n    Position p = new Position();\n    try {\n      `OnceTopDown(GetVarPos(p,varname)).visit(term);\n      return p;\n    } catch (VisitFailure e) {\n      throw new tom.gom.tools.error.GomRuntimeException(\"Unexpected strategy failure!\");\n      }\n  }\n\n  %strategy GetVarPos(Position p, String varname) extends Fail() {\n"













);

 {if ( (moduleList instanceof tom.gom.adt.gom.types.ModuleList) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch4NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if ( ((tomMatch4NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.modulelist.ConsconcModule) || (tomMatch4NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.modulelist.EmptyconcModule)) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch4NameNumber_freshVar_0=tomMatch4NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch4NameNumber_begin_2=tomMatch4NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch4NameNumber_end_3=tomMatch4NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch4NameNumber_freshVar_1=tomMatch4NameNumber_end_3;if (!( tomMatch4NameNumber_freshVar_1.isEmptyconcModule() )) {if ( ( tomMatch4NameNumber_freshVar_1.getHeadconcModule()  instanceof tom.gom.adt.gom.types.module.Module) ) {{  tom.gom.adt.gom.types.SortList  tomMatch4NameNumber_freshVar_6=  tomMatch4NameNumber_freshVar_1.getHeadconcModule() .getSorts() ;if ( ((tomMatch4NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.sortlist.ConsconcSort) || (tomMatch4NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.sortlist.EmptyconcSort)) ) {{  tom.gom.adt.gom.types.SortList  tomMatch4NameNumber_freshVar_7=tomMatch4NameNumber_freshVar_6;{  tom.gom.adt.gom.types.SortList  tomMatch4NameNumber_begin_9=tomMatch4NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch4NameNumber_end_10=tomMatch4NameNumber_freshVar_7;do {{{  tom.gom.adt.gom.types.SortList  tomMatch4NameNumber_freshVar_8=tomMatch4NameNumber_end_10;if (!( tomMatch4NameNumber_freshVar_8.isEmptyconcSort() )) {if ( ( tomMatch4NameNumber_freshVar_8.getHeadconcSort()  instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch4NameNumber_freshVar_13=  tomMatch4NameNumber_freshVar_8.getHeadconcSort() .getDecl() ;if ( (tomMatch4NameNumber_freshVar_13 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch4NameNumber_freshVar_14= tomMatch4NameNumber_freshVar_13.getName() ;{  String  tom_name=tomMatch4NameNumber_freshVar_14;{  tom.gom.adt.gom.types.SortList  tomMatch4NameNumber_freshVar_11= tomMatch4NameNumber_freshVar_8.getTailconcSort() ;{  tom.gom.adt.gom.types.ModuleList  tomMatch4NameNumber_freshVar_4= tomMatch4NameNumber_freshVar_1.getTailconcModule() ;if ( true ) {

 output.append(
        "\n    visit "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+" {\n      v@Var"/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+"(name) -> { \n        if (`name.equals(varname)) { \n          p.setValue(getEnvironment().getPosition().toArray()); \n          return `v; } \n      } \n    }\n   "







);
   }}}}}}}}}}if ( tomMatch4NameNumber_end_10.isEmptyconcSort() ) {tomMatch4NameNumber_end_10=tomMatch4NameNumber_begin_9;} else {tomMatch4NameNumber_end_10= tomMatch4NameNumber_end_10.getTailconcSort() ;}}} while(!( tomMatch4NameNumber_end_10.equals(tomMatch4NameNumber_begin_9) ));}}}}}}}}if ( tomMatch4NameNumber_end_3.isEmptyconcModule() ) {tomMatch4NameNumber_end_3=tomMatch4NameNumber_begin_2;} else {tomMatch4NameNumber_end_3= tomMatch4NameNumber_end_3.getTailconcModule() ;}}} while(!( tomMatch4NameNumber_end_3.equals(tomMatch4NameNumber_begin_2) ));}}}}}}}
 
  
  output.append("\n  }\n"

);

 output.append(
        "\n  %strategy InlinePath() extends Identity() {\n"

);

  {if ( (moduleList instanceof tom.gom.adt.gom.types.ModuleList) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch5NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if ( ((tomMatch5NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.modulelist.ConsconcModule) || (tomMatch5NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.modulelist.EmptyconcModule)) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch5NameNumber_freshVar_0=tomMatch5NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch5NameNumber_begin_2=tomMatch5NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch5NameNumber_end_3=tomMatch5NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch5NameNumber_freshVar_1=tomMatch5NameNumber_end_3;if (!( tomMatch5NameNumber_freshVar_1.isEmptyconcModule() )) {if ( ( tomMatch5NameNumber_freshVar_1.getHeadconcModule()  instanceof tom.gom.adt.gom.types.module.Module) ) {{  tom.gom.adt.gom.types.SortList  tomMatch5NameNumber_freshVar_6=  tomMatch5NameNumber_freshVar_1.getHeadconcModule() .getSorts() ;if ( ((tomMatch5NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.sortlist.ConsconcSort) || (tomMatch5NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.sortlist.EmptyconcSort)) ) {{  tom.gom.adt.gom.types.SortList  tomMatch5NameNumber_freshVar_7=tomMatch5NameNumber_freshVar_6;{  tom.gom.adt.gom.types.SortList  tomMatch5NameNumber_begin_9=tomMatch5NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch5NameNumber_end_10=tomMatch5NameNumber_freshVar_7;do {{{  tom.gom.adt.gom.types.SortList  tomMatch5NameNumber_freshVar_8=tomMatch5NameNumber_end_10;if (!( tomMatch5NameNumber_freshVar_8.isEmptyconcSort() )) {if ( ( tomMatch5NameNumber_freshVar_8.getHeadconcSort()  instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch5NameNumber_freshVar_13=  tomMatch5NameNumber_freshVar_8.getHeadconcSort() .getDecl() ;if ( (tomMatch5NameNumber_freshVar_13 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch5NameNumber_freshVar_14= tomMatch5NameNumber_freshVar_13.getName() ;{  String  tom_name=tomMatch5NameNumber_freshVar_14;{  tom.gom.adt.gom.types.SortList  tomMatch5NameNumber_freshVar_11= tomMatch5NameNumber_freshVar_8.getTailconcSort() ;{  tom.gom.adt.gom.types.ModuleList  tomMatch5NameNumber_freshVar_4= tomMatch5NameNumber_freshVar_1.getTailconcModule() ;if ( true ) {

    output.append(
        "\n    visit "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+" {\n    //match non empty paths\n      p1@Path"/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+"(_,_*) -> {\n        getEnvironment().followPath((Path)`p1);\n        "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+" pointedSubterm = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+") getEnvironment().getSubject();\n        %match(pointedSubterm) {\n          p2@Path"/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+"(_,_*) -> {\n            getEnvironment().followPath(((Path)`p1).inverse());\n            return ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+") ((Path)`p1).add((Path)`p2).getCanonicalPath();\n          }\n        }\n        getEnvironment().followPath(((Path)`p1).inverse());\n      }\n   }      \n"














);
    }}}}}}}}}}if ( tomMatch5NameNumber_end_10.isEmptyconcSort() ) {tomMatch5NameNumber_end_10=tomMatch5NameNumber_begin_9;} else {tomMatch5NameNumber_end_10= tomMatch5NameNumber_end_10.getTailconcSort() ;}}} while(!( tomMatch5NameNumber_end_10.equals(tomMatch5NameNumber_begin_9) ));}}}}}}}}if ( tomMatch5NameNumber_end_3.isEmptyconcModule() ) {tomMatch5NameNumber_end_3=tomMatch5NameNumber_begin_2;} else {tomMatch5NameNumber_end_3= tomMatch5NameNumber_end_3.getTailconcModule() ;}}} while(!( tomMatch5NameNumber_end_3.equals(tomMatch5NameNumber_begin_2) ));}}}}}}}


  output.append("\n  }\n"

);

  String imports = "\nimport tom.library.sl.*;\nimport java.util.*;\n   "


;

  //import all the constructors Path<Sort> of the module
  {if ( (moduleList instanceof tom.gom.adt.gom.types.ModuleList) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch6NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if ( ((tomMatch6NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.modulelist.ConsconcModule) || (tomMatch6NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.modulelist.EmptyconcModule)) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch6NameNumber_freshVar_0=tomMatch6NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch6NameNumber_begin_2=tomMatch6NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch6NameNumber_end_3=tomMatch6NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch6NameNumber_freshVar_1=tomMatch6NameNumber_end_3;if (!( tomMatch6NameNumber_freshVar_1.isEmptyconcModule() )) {if ( ( tomMatch6NameNumber_freshVar_1.getHeadconcModule()  instanceof tom.gom.adt.gom.types.module.Module) ) {{  tom.gom.adt.gom.types.ModuleDecl  tomMatch6NameNumber_freshVar_6=  tomMatch6NameNumber_freshVar_1.getHeadconcModule() .getMDecl() ;{  tom.gom.adt.gom.types.SortList  tomMatch6NameNumber_freshVar_7=  tomMatch6NameNumber_freshVar_1.getHeadconcModule() .getSorts() ;if ( (tomMatch6NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.moduledecl.ModuleDecl) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch6NameNumber_freshVar_8= tomMatch6NameNumber_freshVar_6.getModuleName() ;{  String  tomMatch6NameNumber_freshVar_9= tomMatch6NameNumber_freshVar_6.getPkg() ;if ( (tomMatch6NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName) ) {{  String  tomMatch6NameNumber_freshVar_10= tomMatch6NameNumber_freshVar_8.getName() ;{  String  tom_pkg=tomMatch6NameNumber_freshVar_9;if ( ((tomMatch6NameNumber_freshVar_7 instanceof tom.gom.adt.gom.types.sortlist.ConsconcSort) || (tomMatch6NameNumber_freshVar_7 instanceof tom.gom.adt.gom.types.sortlist.EmptyconcSort)) ) {{  tom.gom.adt.gom.types.SortList  tomMatch6NameNumber_freshVar_11=tomMatch6NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch6NameNumber_begin_13=tomMatch6NameNumber_freshVar_11;{  tom.gom.adt.gom.types.SortList  tomMatch6NameNumber_end_14=tomMatch6NameNumber_freshVar_11;do {{{  tom.gom.adt.gom.types.SortList  tomMatch6NameNumber_freshVar_12=tomMatch6NameNumber_end_14;if (!( tomMatch6NameNumber_freshVar_12.isEmptyconcSort() )) {if ( ( tomMatch6NameNumber_freshVar_12.getHeadconcSort()  instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch6NameNumber_freshVar_17=  tomMatch6NameNumber_freshVar_12.getHeadconcSort() .getDecl() ;if ( (tomMatch6NameNumber_freshVar_17 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch6NameNumber_freshVar_18= tomMatch6NameNumber_freshVar_17.getName() ;{  String  tom_name=tomMatch6NameNumber_freshVar_18;{  tom.gom.adt.gom.types.SortList  tomMatch6NameNumber_freshVar_15= tomMatch6NameNumber_freshVar_12.getTailconcSort() ;{  tom.gom.adt.gom.types.ModuleList  tomMatch6NameNumber_freshVar_4= tomMatch6NameNumber_freshVar_1.getTailconcModule() ;if ( true ) {


  String prefix = ((tom_pkg=="")?"":tom_pkg+".")+moduleName.toLowerCase();
  imports += "\nimport "/* Generated by TOM (version 2.6alpha): Do not edit this file */+prefix+".types."/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name.toLowerCase()+".Path"/* Generated by TOM (version 2.6alpha): Do not edit this file */+tom_name+"; \n  "

;
    }}}}}}}}}}if ( tomMatch6NameNumber_end_14.isEmptyconcSort() ) {tomMatch6NameNumber_end_14=tomMatch6NameNumber_begin_13;} else {tomMatch6NameNumber_end_14= tomMatch6NameNumber_end_14.getTailconcSort() ;}}} while(!( tomMatch6NameNumber_end_14.equals(tomMatch6NameNumber_begin_13) ));}}}}}}}}}}}}}}}if ( tomMatch6NameNumber_end_3.isEmptyconcModule() ) {tomMatch6NameNumber_end_3=tomMatch6NameNumber_begin_2;} else {tomMatch6NameNumber_end_3= tomMatch6NameNumber_end_3.getTailconcModule() ;}}} while(!( tomMatch6NameNumber_end_3.equals(tomMatch6NameNumber_begin_2) ));}}}}}}}


   return  tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make( tom.gom.adt.gom.types.hookdecl.BlockHookDecl.make(sdecl,  tom.gom.adt.code.types.code.Code.make(output.toString()) ) , tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make( tom.gom.adt.gom.types.hookdecl.ImportHookDecl.make(sdecl,  tom.gom.adt.code.types.code.Code.make(imports) ) , tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl.make() ) ) ;
  }

  protected HookDeclList expand(RuleList rulelist, String stratname, String defaultstrat, Decl sdecl) {
    ClassName abstractType =  tom.gom.adt.objects.types.classname.ClassName.make(pkgName+"."+moduleName.toLowerCase(), moduleName+"AbstractType") ;
 
    StringBuilder output = new StringBuilder();
    output.append("\n  public static Strategy "/* Generated by TOM (version 2.6alpha): Do not edit this file */+stratname+"() {\n    return `"/* Generated by TOM (version 2.6alpha): Do not edit this file */+stratname+"();\n  }\n\n  %strategy "/* Generated by TOM (version 2.6alpha): Do not edit this file */+stratname+"() extends "/* Generated by TOM (version 2.6alpha): Do not edit this file */+defaultstrat+"() {\n    visit "/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+" {\n      "






);

        {if ( (rulelist instanceof tom.gom.adt.rule.types.RuleList) ) {{  tom.gom.adt.rule.types.RuleList  tomMatch7NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.RuleList )rulelist);if ( ((tomMatch7NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rulelist.ConsRuleList) || (tomMatch7NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.rulelist.EmptyRuleList)) ) {{  tom.gom.adt.rule.types.RuleList  tomMatch7NameNumber_freshVar_0=tomMatch7NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.RuleList  tomMatch7NameNumber_begin_2=tomMatch7NameNumber_freshVar_0;{  tom.gom.adt.rule.types.RuleList  tomMatch7NameNumber_end_3=tomMatch7NameNumber_freshVar_0;do {{{  tom.gom.adt.rule.types.RuleList  tomMatch7NameNumber_freshVar_1=tomMatch7NameNumber_end_3;if (!( tomMatch7NameNumber_freshVar_1.isEmptyRuleList() )) {{ boolean tomMatch7NameNumber_freshVar_8= false ;{  tom.gom.adt.rule.types.Term  tomMatch7NameNumber_freshVar_7= null ;{  tom.gom.adt.rule.types.Term  tomMatch7NameNumber_freshVar_6= null ;if ( ( tomMatch7NameNumber_freshVar_1.getHeadRuleList()  instanceof tom.gom.adt.rule.types.rule.Rule) ) {{tomMatch7NameNumber_freshVar_8= true ;tomMatch7NameNumber_freshVar_6=  tomMatch7NameNumber_freshVar_1.getHeadRuleList() .getlhs() ;tomMatch7NameNumber_freshVar_7=  tomMatch7NameNumber_freshVar_1.getHeadRuleList() .getrhs() ;}} else {if ( ( tomMatch7NameNumber_freshVar_1.getHeadRuleList()  instanceof tom.gom.adt.rule.types.rule.ConditionalRule) ) {{tomMatch7NameNumber_freshVar_8= true ;tomMatch7NameNumber_freshVar_6=  tomMatch7NameNumber_freshVar_1.getHeadRuleList() .getlhs() ;tomMatch7NameNumber_freshVar_7=  tomMatch7NameNumber_freshVar_1.getHeadRuleList() .getrhs() ;}}}if ((tomMatch7NameNumber_freshVar_8 ==  true )) {{  tom.gom.adt.rule.types.Term  tom_lhs=tomMatch7NameNumber_freshVar_6;{  tom.gom.adt.rule.types.RuleList  tomMatch7NameNumber_freshVar_4= tomMatch7NameNumber_freshVar_1.getTailRuleList() ;if ( true ) {

            //TODO: verify that the lhs of the rules are of the good sort  
            //TODO: verify the linearity of lhs and rhs
            output.append("\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+genTerm(tom_lhs)+" -> {\n\n                /* 1. save the current pos w */\n                Position omega = getEnvironment().getPosition();\n                Position posFinal = new Position(new int[]{1});\n                Position posRhs = new Position(new int[]{2});\n\n                /* 2. go to the root and get the global term-graph */\n                getEnvironment().followPath(omega.inverse());\n\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" labelledLhs = `"/* Generated by TOM (version 2.6alpha): Do not edit this file */+genTermWithExplicitVar(tom_lhs,"root",0)+";\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" labelledRhs = `"/* Generated by TOM (version 2.6alpha): Do not edit this file */+genTermWithExplicitVar(tomMatch7NameNumber_freshVar_7,"root",0)+";\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" subject = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") getEnvironment().getSubject();             \n                \n                //compute all the different substitutions\n                Iterator substitutions = getSubstitutions(labelledLhs,labelledRhs,omega);\n                \n                /* 3. construct tt=SubstTerm(subject',r') */\n                while (substitutions.hasNext()) {\n                Substitution subst = (Substitution) substitutions.next();\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" r = subst.value;\n                //System.out.println(\"subst \"+r);\n                Position posRedex = subst.omega;\n                //System.out.println(\"at the position \"+posRedex);\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" t = `Subst(subject,r);\n                Position newomega = (Position) posFinal.add(posRedex);\n                //System.out.println(\"t \"+t);\n                //replace in subject every pointer to the position newomega by\n                //a pointer to the position 2  and if in position 2 there is also a\n                //pointer inline the paths.\n                //(corresponds to dot(t) in the paper)\n                t = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") posFinal.getOmega(`TopDown(Sequence(globalRedirection(newomega,posRhs),InlinePath()))).visit(t);\n                //System.out.println(\"t \"+t);\n                //inline paths in the intermediate r\n                //(corresponds to dot(r) in the paper)\n                t = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") posRhs.getOmega(`TopDown(InlinePath())).visit(t);\n                //System.out.println(\"t \"+t);\n                \n                /* 4. set the global term to norm(swap(t,1.w,2))|1 */\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" tt = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") t.swap(newomega,posRhs); \n                //System.out.println(\"tt \"+tt);\n                "/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+" res = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") tt.normalize();\n                //System.out.println(\"res \"+res);\n                subject = ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+fullClassName(abstractType)+") posFinal.getSubterm().visit(res);\n                //System.out.println(\"subject \"+subject);\n               }\n\n                //expand the subject to remove labels from the rhs\n                getEnvironment().setSubject(subject.expand());\n\n                /* 5. go to the position w */\n                getEnvironment().followPath(omega);\n\n                return ("/* Generated by TOM (version 2.6alpha): Do not edit this file */+sortname+") getEnvironment().getSubject();\n                }\n                "























































);
          }}}}}}}}}if ( tomMatch7NameNumber_end_3.isEmptyRuleList() ) {tomMatch7NameNumber_end_3=tomMatch7NameNumber_begin_2;} else {tomMatch7NameNumber_end_3= tomMatch7NameNumber_end_3.getTailRuleList() ;}}} while(!( tomMatch7NameNumber_end_3.equals(tomMatch7NameNumber_begin_2) ));}}}}}}}


        output.append("\n    }\n  }\n            "


);

          return  tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make( tom.gom.adt.gom.types.hookdecl.BlockHookDecl.make(sdecl,  tom.gom.adt.code.types.code.Code.make(output.toString()) ) , tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl.make() ) ;
  }

  private String genTerm(Term term) {
    StringBuilder output = new StringBuilder();
    term = expand(term);
    {if ( (term instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch8NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )term);if ( ((tomMatch8NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch8NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch8NameNumber_freshVar_0=tomMatch8NameNumberfreshSubject_1;if (!( tomMatch8NameNumber_freshVar_0.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch8NameNumber_freshVar_1= tomMatch8NameNumber_freshVar_0.getTailPathTerm() ;{  tom.gom.adt.rule.types.Term  tom_tail=tomMatch8NameNumber_freshVar_1;if ( true ) {

        output.append("Path"+sortname);
        output.append("(");
        output.append( tomMatch8NameNumber_freshVar_0.getHeadPathTerm() );
        {if ( (tom_tail instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch9NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom_tail);if ( ((tomMatch9NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch9NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch9NameNumber_freshVar_0=tomMatch9NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.Term  tomMatch9NameNumber_begin_2=tomMatch9NameNumber_freshVar_0;{  tom.gom.adt.rule.types.Term  tomMatch9NameNumber_end_3=tomMatch9NameNumber_freshVar_0;do {{{  tom.gom.adt.rule.types.Term  tomMatch9NameNumber_freshVar_1=tomMatch9NameNumber_end_3;if (!( tomMatch9NameNumber_freshVar_1.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch9NameNumber_freshVar_4= tomMatch9NameNumber_freshVar_1.getTailPathTerm() ;if ( true ) {

            output.append(",");
            output.append( tomMatch9NameNumber_freshVar_1.getHeadPathTerm() );
          }}}}if ( tomMatch9NameNumber_end_3.isEmptyPathTerm() ) {tomMatch9NameNumber_end_3=tomMatch9NameNumber_begin_2;} else {tomMatch9NameNumber_end_3= tomMatch9NameNumber_end_3.getTailPathTerm() ;}}} while(!( tomMatch9NameNumber_end_3.equals(tomMatch9NameNumber_begin_2) ));}}}}}}}

        output.append(")");
      }}}}}}}}if ( (term instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch8NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )term);if ( (tomMatch8NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.Appl) ) {{  String  tomMatch8NameNumber_freshVar_3= tomMatch8NameNumberfreshSubject_1.getsymbol() ;{  tom.gom.adt.rule.types.TermList  tomMatch8NameNumber_freshVar_4= tomMatch8NameNumberfreshSubject_1.getargs() ;if ( true ) {

        output.append(tomMatch8NameNumber_freshVar_3);
        output.append("(");
        output.append(genTermList(tomMatch8NameNumber_freshVar_4));
        output.append(")");
      }}}}}}if ( (term instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch8NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )term);if ( (tomMatch8NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.Var) ) {{  String  tomMatch8NameNumber_freshVar_5= tomMatch8NameNumberfreshSubject_1.getname() ;if ( true ) {

        output.append(tomMatch8NameNumber_freshVar_5);
      }}}}}if ( (term instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch8NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )term);if ( (tomMatch8NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.BuiltinInt) ) {{  int  tomMatch8NameNumber_freshVar_6= tomMatch8NameNumberfreshSubject_1.geti() ;if ( true ) {

        output.append(tomMatch8NameNumber_freshVar_6);
      }}}}}if ( (term instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch8NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )term);if ( (tomMatch8NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.BuiltinString) ) {{  String  tomMatch8NameNumber_freshVar_7= tomMatch8NameNumberfreshSubject_1.gets() ;if ( true ) {

        output.append(tomMatch8NameNumber_freshVar_7);
      }}}}}}

    return output.toString();
  }

  private String genTermList(TermList list) {
    StringBuilder output = new StringBuilder();
    {if ( (list instanceof tom.gom.adt.rule.types.TermList) ) {{  tom.gom.adt.rule.types.TermList  tomMatch10NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.TermList )list);if ( ((tomMatch10NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch10NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {{  tom.gom.adt.rule.types.TermList  tomMatch10NameNumber_freshVar_0=tomMatch10NameNumberfreshSubject_1;if ( tomMatch10NameNumber_freshVar_0.isEmptyTermList() ) {if ( true ) {
 return ""; }}}}}}if ( (list instanceof tom.gom.adt.rule.types.TermList) ) {{  tom.gom.adt.rule.types.TermList  tomMatch10NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.TermList )list);if ( ((tomMatch10NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch10NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {{  tom.gom.adt.rule.types.TermList  tomMatch10NameNumber_freshVar_1=tomMatch10NameNumberfreshSubject_1;if (!( tomMatch10NameNumber_freshVar_1.isEmptyTermList() )) {{  tom.gom.adt.rule.types.TermList  tomMatch10NameNumber_freshVar_2= tomMatch10NameNumber_freshVar_1.getTailTermList() ;{  tom.gom.adt.rule.types.TermList  tom_t=tomMatch10NameNumber_freshVar_2;if ( true ) {

        output.append(genTerm( tomMatch10NameNumber_freshVar_1.getHeadTermList() ));
        if (!tom_t.isEmptyTermList()) {
          output.append(", ");
        }
        output.append(genTermList(tom_t));
      }}}}}}}}}

    return output.toString();
  }

  private String genTermWithExplicitVar(Term termArg, String fathersymbol, int omega) {
    StringBuilder output = new StringBuilder();
    {if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch11NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch11NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.LabTerm) ) {{  String  tomMatch11NameNumber_freshVar_0= tomMatch11NameNumberfreshSubject_1.getl() ;{  tom.gom.adt.rule.types.Term  tomMatch11NameNumber_freshVar_1= tomMatch11NameNumberfreshSubject_1.gett() ;if ( true ) {

        output.append("Lab"+sortname);
        output.append("(");
        output.append("\""+tomMatch11NameNumber_freshVar_0+"\"");
        output.append(",");
        output.append(genTermWithExplicitVar(tomMatch11NameNumber_freshVar_1,fathersymbol,omega));
        output.append(")");
      }}}}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch11NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch11NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.RefTerm) ) {{  String  tomMatch11NameNumber_freshVar_2= tomMatch11NameNumberfreshSubject_1.getl() ;if ( true ) {

        output.append("Ref"+sortname);
        output.append("(");
        output.append("\""+tomMatch11NameNumber_freshVar_2+"\"");
        output.append(")");
      }}}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch11NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch11NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.Appl) ) {{  String  tomMatch11NameNumber_freshVar_3= tomMatch11NameNumberfreshSubject_1.getsymbol() ;{  tom.gom.adt.rule.types.TermList  tomMatch11NameNumber_freshVar_4= tomMatch11NameNumberfreshSubject_1.getargs() ;{  String  tom_symbol=tomMatch11NameNumber_freshVar_3;if ( true ) {

        output.append(tom_symbol);
        output.append("(");
        output.append(genTermListWithExplicitVar(tom_symbol,tomMatch11NameNumber_freshVar_4));
        output.append(")");
      }}}}}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch11NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch11NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.Var) ) {{  String  tomMatch11NameNumber_freshVar_5= tomMatch11NameNumberfreshSubject_1.getname() ;{  String  tom_name=tomMatch11NameNumber_freshVar_5;if ( true ) {

        //the variable must be replaced by a meta representation of the var
        //in the signature of the corresponding  sort
        //test if the variable is not at the root position 
        if(omega!=0) {
          String sortvar = getSort(fathersymbol,omega);
          output.append("Var"+sortvar+"(\""+tom_name+"\")");
        } else {
          //it is necessary of the sort declared for the strategy
          output.append("Var"+sortname+"(\""+tom_name+"\")");
        }
      }}}}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch11NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch11NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.BuiltinInt) ) {{  int  tomMatch11NameNumber_freshVar_6= tomMatch11NameNumberfreshSubject_1.geti() ;if ( true ) {

        output.append(tomMatch11NameNumber_freshVar_6);
      }}}}}if ( (termArg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch11NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )termArg);if ( (tomMatch11NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.BuiltinString) ) {{  String  tomMatch11NameNumber_freshVar_7= tomMatch11NameNumberfreshSubject_1.gets() ;if ( true ) {

        output.append(tomMatch11NameNumber_freshVar_7);
      }}}}}}

    return output.toString();
  }

  private String genTermListWithExplicitVar(String fathersymbol, TermList list) {
    StringBuilder output = new StringBuilder();
    int omega=1;
    {if ( (list instanceof tom.gom.adt.rule.types.TermList) ) {{  tom.gom.adt.rule.types.TermList  tomMatch12NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.TermList )list);if ( ((tomMatch12NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch12NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {{  tom.gom.adt.rule.types.TermList  tomMatch12NameNumber_freshVar_0=tomMatch12NameNumberfreshSubject_1;if ( tomMatch12NameNumber_freshVar_0.isEmptyTermList() ) {if ( true ) {
 return ""; }}}}}}if ( (list instanceof tom.gom.adt.rule.types.TermList) ) {{  tom.gom.adt.rule.types.TermList  tomMatch12NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.TermList )list);if ( ((tomMatch12NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.ConsTermList) || (tomMatch12NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.termlist.EmptyTermList)) ) {{  tom.gom.adt.rule.types.TermList  tomMatch12NameNumber_freshVar_1=tomMatch12NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.TermList  tomMatch12NameNumber_begin_3=tomMatch12NameNumber_freshVar_1;{  tom.gom.adt.rule.types.TermList  tomMatch12NameNumber_end_4=tomMatch12NameNumber_freshVar_1;do {{{  tom.gom.adt.rule.types.TermList  tomMatch12NameNumber_freshVar_2=tomMatch12NameNumber_end_4;if (!( tomMatch12NameNumber_freshVar_2.isEmptyTermList() )) {{  tom.gom.adt.rule.types.TermList  tomMatch12NameNumber_freshVar_5= tomMatch12NameNumber_freshVar_2.getTailTermList() ;if ( true ) {

        output.append(genTermWithExplicitVar( tomMatch12NameNumber_freshVar_2.getHeadTermList() ,fathersymbol,omega));
        omega++;
        if (!tomMatch12NameNumber_freshVar_5.isEmptyTermList()) {
          output.append(", ");
        }
      }}}}if ( tomMatch12NameNumber_end_4.isEmptyTermList() ) {tomMatch12NameNumber_end_4=tomMatch12NameNumber_begin_3;} else {tomMatch12NameNumber_end_4= tomMatch12NameNumber_end_4.getTailTermList() ;}}} while(!( tomMatch12NameNumber_end_4.equals(tomMatch12NameNumber_begin_3) ));}}}}}}}

    return output.toString();
  }


  public static Term expand(Term t) {
    HashMap map = new HashMap();
    Term tt = null;
    try {
      tt = (Term) tom_make_InnermostIdSeq(tom_make_NormalizeLabel(map)).visit(t);
    } catch (tom.library.sl.VisitFailure e) {
      throw new tom.gom.tools.error.GomRuntimeException("Unexpected strategy failure!");
    }
    return label2path(tt);
  }

  




  static class Info {
    public Position omegaRef;
    public Term sharedTerm;
  }

  private static class CollectSubterm extends  tom.gom.adt.rule.RuleBasicStrategy  {private  String  label; private Info info; public CollectSubterm( String  label, Info info) { super(( new tom.library.sl.Fail() ));this.label=label;this.info=info;}public  String  getlabel() { return label;}public Info getinfo() { return info;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch13NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if ( (tomMatch13NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.LabTerm) ) {{  String  tomMatch13NameNumber_freshVar_0= tomMatch13NameNumberfreshSubject_1.getl() ;{  tom.gom.adt.rule.types.Term  tomMatch13NameNumber_freshVar_1= tomMatch13NameNumberfreshSubject_1.gett() ;{  String  tom_label=tomMatch13NameNumber_freshVar_0;if ( true ) {


        Position current = getEnvironment().getPosition();
        if (label.equals(tom_label)) {
          //test if it is not a cycle
          if (!info.omegaRef.hasPrefix(current)) {
            //return a ref
            info.sharedTerm = tomMatch13NameNumber_freshVar_1;
            return  tom.gom.adt.rule.types.term.RefTerm.make(tom_label) ;
          }
          else {
            //do not return a ref and stop to collect
            return tomMatch13NameNumberfreshSubject_1;  
          }
        }
      }}}}}}}}return super.visit_Term(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_CollectSubterm( String  t0, Info t1) { return new CollectSubterm(t0,t1); }private static class NormalizeLabel extends  tom.gom.adt.rule.RuleBasicStrategy  {private  java.util.HashMap  map; public NormalizeLabel( java.util.HashMap  map) { super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.HashMap  getmap() { return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch14NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if ( (tomMatch14NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.RefTerm) ) {{  String  tomMatch14NameNumber_freshVar_0= tomMatch14NameNumberfreshSubject_1.getl() ;{  String  tom_label=tomMatch14NameNumber_freshVar_0;if ( true ) {






        if (! map.containsKey(tom_label)){
          Position old = getEnvironment().getPosition();
          Position rootpos = new Position(new int[]{});
          Info info = new Info();
          info.omegaRef = old;
          getEnvironment().followPath(rootpos.sub(getEnvironment().getPosition()));           
          tom_make_OnceTopDown(tom_make_CollectSubterm(tom_label,info)).visit(getEnvironment());            
          getEnvironment().followPath(old.sub(getEnvironment().getPosition()));
          //test if is is not a ref to a cycle
          if (info.sharedTerm!=null) {
            map.put(tom_label,old);
            return  tom.gom.adt.rule.types.term.LabTerm.make(tom_label, info.sharedTerm) ;
          }
        }
      }}}}}}if ( (tom__arg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch14NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if ( (tomMatch14NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.LabTerm) ) {{  String  tomMatch14NameNumber_freshVar_1= tomMatch14NameNumberfreshSubject_1.getl() ;if ( true ) {

        map.put(tomMatch14NameNumber_freshVar_1,getEnvironment().getPosition());
      }}}}}}return super.visit_Term(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_NormalizeLabel( java.util.HashMap  t0) { return new NormalizeLabel(t0); }



  public static Term label2path(Term t) {
    HashMap map = new HashMap();
    try {
      return (Term) ( (( (( null )==null)?tom_make_TopDown(tom_make_Label2Path(map)):new tom.library.sl.Sequence(tom_make_TopDown(tom_make_Label2Path(map)),( null )) )==null)?tom_make_Repeat(tom_make_OnceTopDown(tom_make_CollectLabels(map))):new tom.library.sl.Sequence(tom_make_Repeat(tom_make_OnceTopDown(tom_make_CollectLabels(map))),( (( null )==null)?tom_make_TopDown(tom_make_Label2Path(map)):new tom.library.sl.Sequence(tom_make_TopDown(tom_make_Label2Path(map)),( null )) )) ).visit(t);
    } catch (tom.library.sl.VisitFailure e) {
      throw new tom.gom.tools.error.GomRuntimeException("Unexpected strategy failure!");
    }  
  }

  private static class CollectLabels extends  tom.gom.adt.rule.RuleBasicStrategy  {private  java.util.HashMap  map; public CollectLabels( java.util.HashMap  map) { super(( new tom.library.sl.Fail() ));this.map=map;}public  java.util.HashMap  getmap() { return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch15NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if ( (tomMatch15NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.LabTerm) ) {{  String  tomMatch15NameNumber_freshVar_0= tomMatch15NameNumberfreshSubject_1.getl() ;{  tom.gom.adt.rule.types.Term  tomMatch15NameNumber_freshVar_1= tomMatch15NameNumberfreshSubject_1.gett() ;if ( true ) {


        map.put(tomMatch15NameNumber_freshVar_0,getEnvironment().getPosition());
        return tomMatch15NameNumber_freshVar_1;
      }}}}}}}return super.visit_Term(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_CollectLabels( java.util.HashMap  t0) { return new CollectLabels(t0); }private static class PathForPattern extends  tom.gom.adt.rule.RuleBasicStrategy  {public PathForPattern() { super(( new tom.library.sl.Identity() ));}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if ( ((tomMatch16NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_0=tomMatch16NameNumberfreshSubject_1;if (!( tomMatch16NameNumber_freshVar_0.isEmptyPathTerm() )) {if ( -1== tomMatch16NameNumber_freshVar_0.getHeadPathTerm()  ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_1= tomMatch16NameNumber_freshVar_0.getTailPathTerm() ;if ( true ) {







        PathTerm newtail = (PathTerm) tom_make_PathForPattern().visit(tomMatch16NameNumber_freshVar_1);
        return newtail;
      }}}}}}}}if ( (tom__arg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if ( ((tomMatch16NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_4=tomMatch16NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_begin_6=tomMatch16NameNumber_freshVar_4;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_end_7=tomMatch16NameNumber_freshVar_4;do {{{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_3=tom_get_slice_PathTerm(tomMatch16NameNumber_begin_6,tomMatch16NameNumber_end_7, tom.gom.adt.rule.types.term.EmptyPathTerm.make() );{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_5=tomMatch16NameNumber_end_7;if (!( tomMatch16NameNumber_freshVar_5.isEmptyPathTerm() )) {if ( -1== tomMatch16NameNumber_freshVar_5.getHeadPathTerm()  ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_8= tomMatch16NameNumber_freshVar_5.getTailPathTerm() ;{  tom.gom.adt.rule.types.Term  tom_sublist=tomMatch16NameNumber_freshVar_3;if ( (tom_sublist instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumberfreshSubject_2=(( tom.gom.adt.rule.types.Term )tom_sublist);{ boolean tomMatch16NameNumber_freshVar_19= false ;if ( ((tomMatch16NameNumber_freshVar_3 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumber_freshVar_3 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_10=tomMatch16NameNumber_freshVar_3;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_17=tomMatch16NameNumber_freshVar_3;if ( tomMatch16NameNumber_freshVar_17.equals(tom_sublist) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_begin_12=tomMatch16NameNumber_freshVar_10;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_end_13=tomMatch16NameNumber_freshVar_10;do {{{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_11=tomMatch16NameNumber_end_13;if (!( tomMatch16NameNumber_freshVar_11.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_14= tomMatch16NameNumber_freshVar_11.getTailPathTerm() ;{ boolean tomMatch16NameNumber_freshVar_20= false ;if ( -2== tomMatch16NameNumber_freshVar_11.getHeadPathTerm()  ) {tomMatch16NameNumber_freshVar_20= true ;}if ((tomMatch16NameNumber_freshVar_20 ==  false )) {tomMatch16NameNumber_freshVar_19= true ;}}}}}if ( tomMatch16NameNumber_end_13.isEmptyPathTerm() ) {tomMatch16NameNumber_end_13=tomMatch16NameNumber_begin_12;} else {tomMatch16NameNumber_end_13= tomMatch16NameNumber_end_13.getTailPathTerm() ;}}} while(!( tomMatch16NameNumber_end_13.equals(tomMatch16NameNumber_begin_12) ));}}}}}}if ((tomMatch16NameNumber_freshVar_19 ==  false )) {{ boolean tomMatch16NameNumber_freshVar_18= false ;if ( ((tomMatch16NameNumberfreshSubject_2 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumberfreshSubject_2 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_16=tomMatch16NameNumberfreshSubject_2;if ( tomMatch16NameNumber_freshVar_16.isEmptyPathTerm() ) {tomMatch16NameNumber_freshVar_18= true ;}}}if ((tomMatch16NameNumber_freshVar_18 ==  false )) {if ( true ) {



        int upcount = tom_sublist.length();
        PathTerm newtail = (PathTerm) tom_make_PathForPattern().visit(tomMatch16NameNumber_freshVar_8);
        return  tom.gom.adt.rule.types.term.ConsPathTerm.make(-upcount,tom_append_list_PathTerm(newtail, tom.gom.adt.rule.types.term.EmptyPathTerm.make() )) ;
      }}}}}}}}}}}}}if ( tomMatch16NameNumber_end_7.isEmptyPathTerm() ) {tomMatch16NameNumber_end_7=tomMatch16NameNumber_begin_6;} else {tomMatch16NameNumber_end_7= tomMatch16NameNumber_end_7.getTailPathTerm() ;}}} while(!( tomMatch16NameNumber_end_7.equals(tomMatch16NameNumber_begin_6) ));}}}}}}if ( (tom__arg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if ( ((tomMatch16NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_22=tomMatch16NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_begin_24=tomMatch16NameNumber_freshVar_22;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_end_25=tomMatch16NameNumber_freshVar_22;do {{{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_21=tom_get_slice_PathTerm(tomMatch16NameNumber_begin_24,tomMatch16NameNumber_end_25, tom.gom.adt.rule.types.term.EmptyPathTerm.make() );{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_23=tomMatch16NameNumber_end_25;{  tom.gom.adt.rule.types.Term  tom_tail=tomMatch16NameNumber_freshVar_23;{  tom.gom.adt.rule.types.Term  tom_sublist=tomMatch16NameNumber_freshVar_21;{ boolean tomMatch16NameNumber_freshVar_45= false ;{ int tomMatch16NameNumber_freshVar_46=0;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumberfreshSubject_3= null ;do {if ( ( tomMatch16NameNumber_freshVar_46 >= 0 && tomMatch16NameNumber_freshVar_46 <= 0 ) ) {if ( (tom_tail instanceof tom.gom.adt.rule.types.Term) ) {tomMatch16NameNumberfreshSubject_3=(( tom.gom.adt.rule.types.Term )tom_tail);if ( ((tomMatch16NameNumberfreshSubject_3 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumberfreshSubject_3 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_27=tomMatch16NameNumberfreshSubject_3;if (!( tomMatch16NameNumber_freshVar_27.isEmptyPathTerm() )) {if ( 1== tomMatch16NameNumber_freshVar_27.getHeadPathTerm()  ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_28= tomMatch16NameNumber_freshVar_27.getTailPathTerm() ;tomMatch16NameNumber_freshVar_45= true ;}}}}}}}if ( ( tomMatch16NameNumber_freshVar_46 >= 1 && tomMatch16NameNumber_freshVar_46 <= 1 ) ) {if ( (tom_tail instanceof tom.gom.adt.rule.types.Term) ) {tomMatch16NameNumberfreshSubject_3=(( tom.gom.adt.rule.types.Term )tom_tail);if ( ((tomMatch16NameNumberfreshSubject_3 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumberfreshSubject_3 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_30=tomMatch16NameNumberfreshSubject_3;if (!( tomMatch16NameNumber_freshVar_30.isEmptyPathTerm() )) {if ( 2== tomMatch16NameNumber_freshVar_30.getHeadPathTerm()  ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_31= tomMatch16NameNumber_freshVar_30.getTailPathTerm() ;tomMatch16NameNumber_freshVar_45= true ;}}}}}}}if ( ( tomMatch16NameNumber_freshVar_46 >= 2 && tomMatch16NameNumber_freshVar_46 <= 2 ) ) {if ( (tom_tail instanceof tom.gom.adt.rule.types.Term) ) {tomMatch16NameNumberfreshSubject_3=(( tom.gom.adt.rule.types.Term )tom_tail);if ( ((tomMatch16NameNumberfreshSubject_3 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumberfreshSubject_3 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_33=tomMatch16NameNumberfreshSubject_3;if ( tomMatch16NameNumber_freshVar_33.isEmptyPathTerm() ) {tomMatch16NameNumber_freshVar_45= true ;}}}}}if ((tomMatch16NameNumber_freshVar_45 ==  true )) {if ( (tom_sublist instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumberfreshSubject_4=(( tom.gom.adt.rule.types.Term )tom_sublist);{ boolean tomMatch16NameNumber_freshVar_43= false ;if ( ((tomMatch16NameNumber_freshVar_21 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumber_freshVar_21 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_34=tomMatch16NameNumber_freshVar_21;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_41=tomMatch16NameNumber_freshVar_21;if ( tomMatch16NameNumber_freshVar_41.equals(tom_sublist) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_begin_36=tomMatch16NameNumber_freshVar_34;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_end_37=tomMatch16NameNumber_freshVar_34;do {{{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_35=tomMatch16NameNumber_end_37;if (!( tomMatch16NameNumber_freshVar_35.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_38= tomMatch16NameNumber_freshVar_35.getTailPathTerm() ;{ boolean tomMatch16NameNumber_freshVar_44= false ;if ( -2== tomMatch16NameNumber_freshVar_35.getHeadPathTerm()  ) {tomMatch16NameNumber_freshVar_44= true ;}if ((tomMatch16NameNumber_freshVar_44 ==  false )) {tomMatch16NameNumber_freshVar_43= true ;}}}}}if ( tomMatch16NameNumber_end_37.isEmptyPathTerm() ) {tomMatch16NameNumber_end_37=tomMatch16NameNumber_begin_36;} else {tomMatch16NameNumber_end_37= tomMatch16NameNumber_end_37.getTailPathTerm() ;}}} while(!( tomMatch16NameNumber_end_37.equals(tomMatch16NameNumber_begin_36) ));}}}}}}if ((tomMatch16NameNumber_freshVar_43 ==  false )) {{ boolean tomMatch16NameNumber_freshVar_42= false ;if ( ((tomMatch16NameNumberfreshSubject_4 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumberfreshSubject_4 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_40=tomMatch16NameNumberfreshSubject_4;if ( tomMatch16NameNumber_freshVar_40.isEmptyPathTerm() ) {tomMatch16NameNumber_freshVar_42= true ;}}}if ((tomMatch16NameNumber_freshVar_42 ==  false )) {if ( true ) {




        int downcount = tom_sublist.length();
        PathTerm newtail = (PathTerm) tom_make_PathForPattern().visit(tom_tail);
        return  tom.gom.adt.rule.types.term.ConsPathTerm.make(-downcount,tom_append_list_PathTerm(newtail, tom.gom.adt.rule.types.term.EmptyPathTerm.make() )) ;
      }}}}}}}}tomMatch16NameNumber_freshVar_46=tomMatch16NameNumber_freshVar_46 + 1;} while(tomMatch16NameNumber_freshVar_46 < 3);}}}}}}}if ( tomMatch16NameNumber_end_25.isEmptyPathTerm() ) {tomMatch16NameNumber_end_25=tomMatch16NameNumber_begin_24;} else {tomMatch16NameNumber_end_25= tomMatch16NameNumber_end_25.getTailPathTerm() ;}}} while(!( tomMatch16NameNumber_end_25.equals(tomMatch16NameNumber_begin_24) ));}}}}}}if ( (tom__arg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if ( ((tomMatch16NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_48=tomMatch16NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_begin_50=tomMatch16NameNumber_freshVar_48;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_end_51=tomMatch16NameNumber_freshVar_48;do {{{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_47=tom_get_slice_PathTerm(tomMatch16NameNumber_begin_50,tomMatch16NameNumber_end_51, tom.gom.adt.rule.types.term.EmptyPathTerm.make() );{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_49=tomMatch16NameNumber_end_51;if (!( tomMatch16NameNumber_freshVar_49.isEmptyPathTerm() )) {if ( 1== tomMatch16NameNumber_freshVar_49.getHeadPathTerm()  ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_52= tomMatch16NameNumber_freshVar_49.getTailPathTerm() ;{  tom.gom.adt.rule.types.Term  tom_sublist=tomMatch16NameNumber_freshVar_47;if ( (tom_sublist instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumberfreshSubject_5=(( tom.gom.adt.rule.types.Term )tom_sublist);{ boolean tomMatch16NameNumber_freshVar_63= false ;if ( ((tomMatch16NameNumber_freshVar_47 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumber_freshVar_47 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_54=tomMatch16NameNumber_freshVar_47;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_61=tomMatch16NameNumber_freshVar_47;if ( tomMatch16NameNumber_freshVar_61.equals(tom_sublist) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_begin_56=tomMatch16NameNumber_freshVar_54;{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_end_57=tomMatch16NameNumber_freshVar_54;do {{{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_55=tomMatch16NameNumber_end_57;if (!( tomMatch16NameNumber_freshVar_55.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_58= tomMatch16NameNumber_freshVar_55.getTailPathTerm() ;{ boolean tomMatch16NameNumber_freshVar_64= false ;if ( 2== tomMatch16NameNumber_freshVar_55.getHeadPathTerm()  ) {tomMatch16NameNumber_freshVar_64= true ;}if ((tomMatch16NameNumber_freshVar_64 ==  false )) {tomMatch16NameNumber_freshVar_63= true ;}}}}}if ( tomMatch16NameNumber_end_57.isEmptyPathTerm() ) {tomMatch16NameNumber_end_57=tomMatch16NameNumber_begin_56;} else {tomMatch16NameNumber_end_57= tomMatch16NameNumber_end_57.getTailPathTerm() ;}}} while(!( tomMatch16NameNumber_end_57.equals(tomMatch16NameNumber_begin_56) ));}}}}}}if ((tomMatch16NameNumber_freshVar_63 ==  false )) {{ boolean tomMatch16NameNumber_freshVar_62= false ;if ( ((tomMatch16NameNumberfreshSubject_5 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch16NameNumberfreshSubject_5 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch16NameNumber_freshVar_60=tomMatch16NameNumberfreshSubject_5;if ( tomMatch16NameNumber_freshVar_60.isEmptyPathTerm() ) {tomMatch16NameNumber_freshVar_62= true ;}}}if ((tomMatch16NameNumber_freshVar_62 ==  false )) {if ( true ) {



        int downcount = tom_sublist.length();
        PathTerm newtail = (PathTerm) tom_make_PathForPattern().visit(tomMatch16NameNumber_freshVar_52);
        return  tom.gom.adt.rule.types.term.ConsPathTerm.make(downcount,tom_append_list_PathTerm(newtail, tom.gom.adt.rule.types.term.EmptyPathTerm.make() )) ;
      }}}}}}}}}}}}}if ( tomMatch16NameNumber_end_51.isEmptyPathTerm() ) {tomMatch16NameNumber_end_51=tomMatch16NameNumber_begin_50;} else {tomMatch16NameNumber_end_51= tomMatch16NameNumber_end_51.getTailPathTerm() ;}}} while(!( tomMatch16NameNumber_end_51.equals(tomMatch16NameNumber_begin_50) ));}}}}}}}return super.visit_Term(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_PathForPattern() { return new PathForPattern(); }private static class Normalize extends  tom.gom.adt.rule.RuleBasicStrategy  {public Normalize() { super(( new tom.library.sl.Identity() ));}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch17NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if ( ((tomMatch17NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.ConsPathTerm) || (tomMatch17NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.EmptyPathTerm)) ) {{  tom.gom.adt.rule.types.Term  tomMatch17NameNumber_freshVar_0=tomMatch17NameNumberfreshSubject_1;{  tom.gom.adt.rule.types.Term  tomMatch17NameNumber_begin_2=tomMatch17NameNumber_freshVar_0;{  tom.gom.adt.rule.types.Term  tomMatch17NameNumber_end_3=tomMatch17NameNumber_freshVar_0;do {{{  tom.gom.adt.rule.types.Term  tomMatch17NameNumber_freshVar_1=tomMatch17NameNumber_end_3;if (!( tomMatch17NameNumber_freshVar_1.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch17NameNumber_freshVar_4= tomMatch17NameNumber_freshVar_1.getTailPathTerm() ;if (!( tomMatch17NameNumber_freshVar_4.isEmptyPathTerm() )) {{  tom.gom.adt.rule.types.Term  tomMatch17NameNumber_freshVar_5= tomMatch17NameNumber_freshVar_4.getTailPathTerm() ;if ( true ) {






        if ( tomMatch17NameNumber_freshVar_1.getHeadPathTerm() ==- tomMatch17NameNumber_freshVar_4.getHeadPathTerm() ) {
          return tom_append_list_PathTerm(tom_get_slice_PathTerm(tomMatch17NameNumber_begin_2,tomMatch17NameNumber_end_3, tom.gom.adt.rule.types.term.EmptyPathTerm.make() ),tom_append_list_PathTerm(tomMatch17NameNumber_freshVar_5, tom.gom.adt.rule.types.term.EmptyPathTerm.make() ));
        }
      }}}}}}if ( tomMatch17NameNumber_end_3.isEmptyPathTerm() ) {tomMatch17NameNumber_end_3=tomMatch17NameNumber_begin_2;} else {tomMatch17NameNumber_end_3= tomMatch17NameNumber_end_3.getTailPathTerm() ;}}} while(!( tomMatch17NameNumber_end_3.equals(tomMatch17NameNumber_begin_2) ));}}}}}}}return super.visit_Term(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_Normalize() { return new Normalize(); }private static class Label2Path extends  tom.gom.adt.rule.RuleBasicStrategy  {private  java.util.HashMap  map; public Label2Path( java.util.HashMap  map) { super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.HashMap  getmap() { return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.gom.adt.rule.types.Term  visit_Term( tom.gom.adt.rule.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.gom.adt.rule.types.Term) ) {{  tom.gom.adt.rule.types.Term  tomMatch18NameNumberfreshSubject_1=(( tom.gom.adt.rule.types.Term )tom__arg);if ( (tomMatch18NameNumberfreshSubject_1 instanceof tom.gom.adt.rule.types.term.RefTerm) ) {{  String  tomMatch18NameNumber_freshVar_0= tomMatch18NameNumberfreshSubject_1.getl() ;{  String  tom_label=tomMatch18NameNumber_freshVar_0;if ( true ) {






        if (map.containsKey(tom_label)) {
          Path target = (Path) map.get(tom_label);
          Path ref = target.sub(getEnvironment().getPosition());
          //warning: do not normalize ref because we need to transform paths that go to the root
          //construct the PathTerm corresponding to the position ref
          Term path =  tom.gom.adt.rule.types.term.EmptyPathTerm.make() ;
          int head;
          while(ref.length()!=0) {
            head = ref.getHead();
            ref  = ref.getTail();
            path = tom_append_list_PathTerm(path, tom.gom.adt.rule.types.term.ConsPathTerm.make(head, tom.gom.adt.rule.types.term.EmptyPathTerm.make() ) );
          }
          //transform the path to obtain the corresponding one in the pattern
          Term newpath = (Term) ( (( (( null )==null)?tom_make_RepeatId(tom_make_Normalize()):new tom.library.sl.Sequence(tom_make_RepeatId(tom_make_Normalize()),( null )) )==null)?tom_make_PathForPattern():new tom.library.sl.Sequence(tom_make_PathForPattern(),( (( null )==null)?tom_make_RepeatId(tom_make_Normalize()):new tom.library.sl.Sequence(tom_make_RepeatId(tom_make_Normalize()),( null )) )) ).visitLight(path);
          return newpath;
        }
      }}}}}}}return super.visit_Term(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_Label2Path( java.util.HashMap  t0) { return new Label2Path(t0); }



  private String getSort(String symbolOperator,int omega) {
    {if ( (moduleList instanceof tom.gom.adt.gom.types.ModuleList) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch19NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.ModuleList )moduleList);if ( ((tomMatch19NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.modulelist.ConsconcModule) || (tomMatch19NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.modulelist.EmptyconcModule)) ) {{  tom.gom.adt.gom.types.ModuleList  tomMatch19NameNumber_freshVar_0=tomMatch19NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.ModuleList  tomMatch19NameNumber_begin_2=tomMatch19NameNumber_freshVar_0;{  tom.gom.adt.gom.types.ModuleList  tomMatch19NameNumber_end_3=tomMatch19NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.ModuleList  tomMatch19NameNumber_freshVar_1=tomMatch19NameNumber_end_3;if (!( tomMatch19NameNumber_freshVar_1.isEmptyconcModule() )) {if ( ( tomMatch19NameNumber_freshVar_1.getHeadconcModule()  instanceof tom.gom.adt.gom.types.module.Module) ) {{  tom.gom.adt.gom.types.SortList  tomMatch19NameNumber_freshVar_6=  tomMatch19NameNumber_freshVar_1.getHeadconcModule() .getSorts() ;if ( ((tomMatch19NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.sortlist.ConsconcSort) || (tomMatch19NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.sortlist.EmptyconcSort)) ) {{  tom.gom.adt.gom.types.SortList  tomMatch19NameNumber_freshVar_7=tomMatch19NameNumber_freshVar_6;{  tom.gom.adt.gom.types.SortList  tomMatch19NameNumber_begin_9=tomMatch19NameNumber_freshVar_7;{  tom.gom.adt.gom.types.SortList  tomMatch19NameNumber_end_10=tomMatch19NameNumber_freshVar_7;do {{{  tom.gom.adt.gom.types.SortList  tomMatch19NameNumber_freshVar_8=tomMatch19NameNumber_end_10;if (!( tomMatch19NameNumber_freshVar_8.isEmptyconcSort() )) {if ( ( tomMatch19NameNumber_freshVar_8.getHeadconcSort()  instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch19NameNumber_freshVar_13=  tomMatch19NameNumber_freshVar_8.getHeadconcSort() .getOperators() ;if ( ((tomMatch19NameNumber_freshVar_13 instanceof tom.gom.adt.gom.types.operatordecllist.ConsconcOperator) || (tomMatch19NameNumber_freshVar_13 instanceof tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator)) ) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch19NameNumber_freshVar_14=tomMatch19NameNumber_freshVar_13;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch19NameNumber_begin_16=tomMatch19NameNumber_freshVar_14;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch19NameNumber_end_17=tomMatch19NameNumber_freshVar_14;do {{{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch19NameNumber_freshVar_15=tomMatch19NameNumber_end_17;if (!( tomMatch19NameNumber_freshVar_15.isEmptyconcOperator() )) {if ( ( tomMatch19NameNumber_freshVar_15.getHeadconcOperator()  instanceof tom.gom.adt.gom.types.operatordecl.OperatorDecl) ) {{  String  tomMatch19NameNumber_freshVar_20=  tomMatch19NameNumber_freshVar_15.getHeadconcOperator() .getName() ;{  tom.gom.adt.gom.types.TypedProduction  tomMatch19NameNumber_freshVar_21=  tomMatch19NameNumber_freshVar_15.getHeadconcOperator() .getProd() ;{  tom.gom.adt.gom.types.TypedProduction  tom_prod=tomMatch19NameNumber_freshVar_21;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch19NameNumber_freshVar_18= tomMatch19NameNumber_freshVar_15.getTailconcOperator() ;{  tom.gom.adt.gom.types.SortList  tomMatch19NameNumber_freshVar_11= tomMatch19NameNumber_freshVar_8.getTailconcSort() ;{  tom.gom.adt.gom.types.ModuleList  tomMatch19NameNumber_freshVar_4= tomMatch19NameNumber_freshVar_1.getTailconcModule() ;if ( true ) {

        if(tomMatch19NameNumber_freshVar_20.equals(symbolOperator)) {
          int count=1;
          {if ( (tom_prod instanceof tom.gom.adt.gom.types.TypedProduction) ) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch20NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.TypedProduction )tom_prod);if ( (tomMatch20NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.typedproduction.Variadic) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch20NameNumber_freshVar_0= tomMatch20NameNumberfreshSubject_1.getSort() ;if ( true ) {

              return tomMatch20NameNumber_freshVar_0.getName();
            }}}}}if ( (tom_prod instanceof tom.gom.adt.gom.types.TypedProduction) ) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch20NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.TypedProduction )tom_prod);if ( (tomMatch20NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.typedproduction.Slots) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch20NameNumber_freshVar_1= tomMatch20NameNumberfreshSubject_1.getSlots() ;if ( ((tomMatch20NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.slotlist.ConsconcSlot) || (tomMatch20NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.slotlist.EmptyconcSlot)) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch20NameNumber_freshVar_2=tomMatch20NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SlotList  tomMatch20NameNumber_begin_4=tomMatch20NameNumber_freshVar_2;{  tom.gom.adt.gom.types.SlotList  tomMatch20NameNumber_end_5=tomMatch20NameNumber_freshVar_2;do {{{  tom.gom.adt.gom.types.SlotList  tomMatch20NameNumber_freshVar_3=tomMatch20NameNumber_end_5;if (!( tomMatch20NameNumber_freshVar_3.isEmptyconcSlot() )) {if ( ( tomMatch20NameNumber_freshVar_3.getHeadconcSlot()  instanceof tom.gom.adt.gom.types.slot.Slot) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch20NameNumber_freshVar_8=  tomMatch20NameNumber_freshVar_3.getHeadconcSlot() .getSort() ;if ( (tomMatch20NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch20NameNumber_freshVar_9= tomMatch20NameNumber_freshVar_8.getName() ;{  tom.gom.adt.gom.types.SlotList  tomMatch20NameNumber_freshVar_6= tomMatch20NameNumber_freshVar_3.getTailconcSlot() ;if ( true ) {

              if (count==omega) {
                return tomMatch20NameNumber_freshVar_9;
              } else {
                count++;
              }
            }}}}}}}}if ( tomMatch20NameNumber_end_5.isEmptyconcSlot() ) {tomMatch20NameNumber_end_5=tomMatch20NameNumber_begin_4;} else {tomMatch20NameNumber_end_5= tomMatch20NameNumber_end_5.getTailconcSlot() ;}}} while(!( tomMatch20NameNumber_end_5.equals(tomMatch20NameNumber_begin_4) ));}}}}}}}}}

        }
      }}}}}}}}}}if ( tomMatch19NameNumber_end_17.isEmptyconcOperator() ) {tomMatch19NameNumber_end_17=tomMatch19NameNumber_begin_16;} else {tomMatch19NameNumber_end_17= tomMatch19NameNumber_end_17.getTailconcOperator() ;}}} while(!( tomMatch19NameNumber_end_17.equals(tomMatch19NameNumber_begin_16) ));}}}}}}}}if ( tomMatch19NameNumber_end_10.isEmptyconcSort() ) {tomMatch19NameNumber_end_10=tomMatch19NameNumber_begin_9;} else {tomMatch19NameNumber_end_10= tomMatch19NameNumber_end_10.getTailconcSort() ;}}} while(!( tomMatch19NameNumber_end_10.equals(tomMatch19NameNumber_begin_9) ));}}}}}}}}if ( tomMatch19NameNumber_end_3.isEmptyconcModule() ) {tomMatch19NameNumber_end_3=tomMatch19NameNumber_begin_2;} else {tomMatch19NameNumber_end_3= tomMatch19NameNumber_end_3.getTailconcModule() ;}}} while(!( tomMatch19NameNumber_end_3.equals(tomMatch19NameNumber_begin_2) ));}}}}}}}

    throw new RuntimeException("cannot determine the sort of the "+omega+"th child of the constructor "+symbolOperator);
  }

  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }

}

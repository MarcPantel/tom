/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * GOM
 *
 * Copyright (c) 2006-2008, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.expander;

import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.gom.GomMessage;
import tom.gom.GomStreamManager;
import tom.gom.tools.GomEnvironment;
import tom.gom.adt.gom.*;
import tom.gom.adt.gom.types.*;
import tom.gom.tools.error.GomRuntimeException;

public class TypeExpander {

  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.gom.adt.gom.types.GomModuleList  tom_append_list_ConcGomModule( tom.gom.adt.gom.types.GomModuleList l1,  tom.gom.adt.gom.types.GomModuleList  l2) {     if( l1.isEmptyConcGomModule() ) {       return l2;     } else if( l2.isEmptyConcGomModule() ) {       return l1;     } else if(  l1.getTailConcGomModule() .isEmptyConcGomModule() ) {       return  tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule.make( l1.getHeadConcGomModule() ,l2) ;     } else {       return  tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule.make( l1.getHeadConcGomModule() ,tom_append_list_ConcGomModule( l1.getTailConcGomModule() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.GomModuleList  tom_get_slice_ConcGomModule( tom.gom.adt.gom.types.GomModuleList  begin,  tom.gom.adt.gom.types.GomModuleList  end, tom.gom.adt.gom.types.GomModuleList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcGomModule()  ||  (end== tom.gom.adt.gom.types.gommodulelist.EmptyConcGomModule.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule.make( begin.getHeadConcGomModule() ,( tom.gom.adt.gom.types.GomModuleList )tom_get_slice_ConcGomModule( begin.getTailConcGomModule() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.GrammarList  tom_append_list_ConcGrammar( tom.gom.adt.gom.types.GrammarList l1,  tom.gom.adt.gom.types.GrammarList  l2) {     if( l1.isEmptyConcGrammar() ) {       return l2;     } else if( l2.isEmptyConcGrammar() ) {       return l1;     } else if(  l1.getTailConcGrammar() .isEmptyConcGrammar() ) {       return  tom.gom.adt.gom.types.grammarlist.ConsConcGrammar.make( l1.getHeadConcGrammar() ,l2) ;     } else {       return  tom.gom.adt.gom.types.grammarlist.ConsConcGrammar.make( l1.getHeadConcGrammar() ,tom_append_list_ConcGrammar( l1.getTailConcGrammar() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.GrammarList  tom_get_slice_ConcGrammar( tom.gom.adt.gom.types.GrammarList  begin,  tom.gom.adt.gom.types.GrammarList  end, tom.gom.adt.gom.types.GrammarList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcGrammar()  ||  (end== tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.grammarlist.ConsConcGrammar.make( begin.getHeadConcGrammar() ,( tom.gom.adt.gom.types.GrammarList )tom_get_slice_ConcGrammar( begin.getTailConcGrammar() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.SectionList  tom_append_list_ConcSection( tom.gom.adt.gom.types.SectionList l1,  tom.gom.adt.gom.types.SectionList  l2) {     if( l1.isEmptyConcSection() ) {       return l2;     } else if( l2.isEmptyConcSection() ) {       return l1;     } else if(  l1.getTailConcSection() .isEmptyConcSection() ) {       return  tom.gom.adt.gom.types.sectionlist.ConsConcSection.make( l1.getHeadConcSection() ,l2) ;     } else {       return  tom.gom.adt.gom.types.sectionlist.ConsConcSection.make( l1.getHeadConcSection() ,tom_append_list_ConcSection( l1.getTailConcSection() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.SectionList  tom_get_slice_ConcSection( tom.gom.adt.gom.types.SectionList  begin,  tom.gom.adt.gom.types.SectionList  end, tom.gom.adt.gom.types.SectionList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcSection()  ||  (end== tom.gom.adt.gom.types.sectionlist.EmptyConcSection.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.sectionlist.ConsConcSection.make( begin.getHeadConcSection() ,( tom.gom.adt.gom.types.SectionList )tom_get_slice_ConcSection( begin.getTailConcSection() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.OperatorDeclList  tom_append_list_ConcOperator( tom.gom.adt.gom.types.OperatorDeclList l1,  tom.gom.adt.gom.types.OperatorDeclList  l2) {     if( l1.isEmptyConcOperator() ) {       return l2;     } else if( l2.isEmptyConcOperator() ) {       return l1;     } else if(  l1.getTailConcOperator() .isEmptyConcOperator() ) {       return  tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make( l1.getHeadConcOperator() ,l2) ;     } else {       return  tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make( l1.getHeadConcOperator() ,tom_append_list_ConcOperator( l1.getTailConcOperator() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.OperatorDeclList  tom_get_slice_ConcOperator( tom.gom.adt.gom.types.OperatorDeclList  begin,  tom.gom.adt.gom.types.OperatorDeclList  end, tom.gom.adt.gom.types.OperatorDeclList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcOperator()  ||  (end== tom.gom.adt.gom.types.operatordecllist.EmptyConcOperator.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make( begin.getHeadConcOperator() ,( tom.gom.adt.gom.types.OperatorDeclList )tom_get_slice_ConcOperator( begin.getTailConcOperator() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.SortDeclList  tom_append_list_ConcSortDecl( tom.gom.adt.gom.types.SortDeclList l1,  tom.gom.adt.gom.types.SortDeclList  l2) {     if( l1.isEmptyConcSortDecl() ) {       return l2;     } else if( l2.isEmptyConcSortDecl() ) {       return l1;     } else if(  l1.getTailConcSortDecl() .isEmptyConcSortDecl() ) {       return  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make( l1.getHeadConcSortDecl() ,l2) ;     } else {       return  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make( l1.getHeadConcSortDecl() ,tom_append_list_ConcSortDecl( l1.getTailConcSortDecl() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.SortDeclList  tom_get_slice_ConcSortDecl( tom.gom.adt.gom.types.SortDeclList  begin,  tom.gom.adt.gom.types.SortDeclList  end, tom.gom.adt.gom.types.SortDeclList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcSortDecl()  ||  (end== tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make( begin.getHeadConcSortDecl() ,( tom.gom.adt.gom.types.SortDeclList )tom_get_slice_ConcSortDecl( begin.getTailConcSortDecl() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.GomTypeList  tom_append_list_ConcGomType( tom.gom.adt.gom.types.GomTypeList l1,  tom.gom.adt.gom.types.GomTypeList  l2) {     if( l1.isEmptyConcGomType() ) {       return l2;     } else if( l2.isEmptyConcGomType() ) {       return l1;     } else if(  l1.getTailConcGomType() .isEmptyConcGomType() ) {       return  tom.gom.adt.gom.types.gomtypelist.ConsConcGomType.make( l1.getHeadConcGomType() ,l2) ;     } else {       return  tom.gom.adt.gom.types.gomtypelist.ConsConcGomType.make( l1.getHeadConcGomType() ,tom_append_list_ConcGomType( l1.getTailConcGomType() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.GomTypeList  tom_get_slice_ConcGomType( tom.gom.adt.gom.types.GomTypeList  begin,  tom.gom.adt.gom.types.GomTypeList  end, tom.gom.adt.gom.types.GomTypeList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcGomType()  ||  (end== tom.gom.adt.gom.types.gomtypelist.EmptyConcGomType.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.gomtypelist.ConsConcGomType.make( begin.getHeadConcGomType() ,( tom.gom.adt.gom.types.GomTypeList )tom_get_slice_ConcGomType( begin.getTailConcGomType() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.ProductionList  tom_append_list_ConcProduction( tom.gom.adt.gom.types.ProductionList l1,  tom.gom.adt.gom.types.ProductionList  l2) {     if( l1.isEmptyConcProduction() ) {       return l2;     } else if( l2.isEmptyConcProduction() ) {       return l1;     } else if(  l1.getTailConcProduction() .isEmptyConcProduction() ) {       return  tom.gom.adt.gom.types.productionlist.ConsConcProduction.make( l1.getHeadConcProduction() ,l2) ;     } else {       return  tom.gom.adt.gom.types.productionlist.ConsConcProduction.make( l1.getHeadConcProduction() ,tom_append_list_ConcProduction( l1.getTailConcProduction() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.ProductionList  tom_get_slice_ConcProduction( tom.gom.adt.gom.types.ProductionList  begin,  tom.gom.adt.gom.types.ProductionList  end, tom.gom.adt.gom.types.ProductionList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcProduction()  ||  (end== tom.gom.adt.gom.types.productionlist.EmptyConcProduction.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.productionlist.ConsConcProduction.make( begin.getHeadConcProduction() ,( tom.gom.adt.gom.types.ProductionList )tom_get_slice_ConcProduction( begin.getTailConcProduction() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.ImportList  tom_append_list_ConcImportedModule( tom.gom.adt.gom.types.ImportList l1,  tom.gom.adt.gom.types.ImportList  l2) {     if( l1.isEmptyConcImportedModule() ) {       return l2;     } else if( l2.isEmptyConcImportedModule() ) {       return l1;     } else if(  l1.getTailConcImportedModule() .isEmptyConcImportedModule() ) {       return  tom.gom.adt.gom.types.importlist.ConsConcImportedModule.make( l1.getHeadConcImportedModule() ,l2) ;     } else {       return  tom.gom.adt.gom.types.importlist.ConsConcImportedModule.make( l1.getHeadConcImportedModule() ,tom_append_list_ConcImportedModule( l1.getTailConcImportedModule() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.ImportList  tom_get_slice_ConcImportedModule( tom.gom.adt.gom.types.ImportList  begin,  tom.gom.adt.gom.types.ImportList  end, tom.gom.adt.gom.types.ImportList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcImportedModule()  ||  (end== tom.gom.adt.gom.types.importlist.EmptyConcImportedModule.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.importlist.ConsConcImportedModule.make( begin.getHeadConcImportedModule() ,( tom.gom.adt.gom.types.ImportList )tom_get_slice_ConcImportedModule( begin.getTailConcImportedModule() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.ModuleDeclList  tom_append_list_ConcModuleDecl( tom.gom.adt.gom.types.ModuleDeclList l1,  tom.gom.adt.gom.types.ModuleDeclList  l2) {     if( l1.isEmptyConcModuleDecl() ) {       return l2;     } else if( l2.isEmptyConcModuleDecl() ) {       return l1;     } else if(  l1.getTailConcModuleDecl() .isEmptyConcModuleDecl() ) {       return  tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( l1.getHeadConcModuleDecl() ,l2) ;     } else {       return  tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( l1.getHeadConcModuleDecl() ,tom_append_list_ConcModuleDecl( l1.getTailConcModuleDecl() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.ModuleDeclList  tom_get_slice_ConcModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  begin,  tom.gom.adt.gom.types.ModuleDeclList  end, tom.gom.adt.gom.types.ModuleDeclList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcModuleDecl()  ||  (end== tom.gom.adt.gom.types.moduledecllist.EmptyConcModuleDecl.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( begin.getHeadConcModuleDecl() ,( tom.gom.adt.gom.types.ModuleDeclList )tom_get_slice_ConcModuleDecl( begin.getTailConcModuleDecl() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.FieldList  tom_append_list_ConcField( tom.gom.adt.gom.types.FieldList l1,  tom.gom.adt.gom.types.FieldList  l2) {     if( l1.isEmptyConcField() ) {       return l2;     } else if( l2.isEmptyConcField() ) {       return l1;     } else if(  l1.getTailConcField() .isEmptyConcField() ) {       return  tom.gom.adt.gom.types.fieldlist.ConsConcField.make( l1.getHeadConcField() ,l2) ;     } else {       return  tom.gom.adt.gom.types.fieldlist.ConsConcField.make( l1.getHeadConcField() ,tom_append_list_ConcField( l1.getTailConcField() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.FieldList  tom_get_slice_ConcField( tom.gom.adt.gom.types.FieldList  begin,  tom.gom.adt.gom.types.FieldList  end, tom.gom.adt.gom.types.FieldList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcField()  ||  (end== tom.gom.adt.gom.types.fieldlist.EmptyConcField.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.fieldlist.ConsConcField.make( begin.getHeadConcField() ,( tom.gom.adt.gom.types.FieldList )tom_get_slice_ConcField( begin.getTailConcField() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.SlotList  tom_append_list_ConcSlot( tom.gom.adt.gom.types.SlotList l1,  tom.gom.adt.gom.types.SlotList  l2) {     if( l1.isEmptyConcSlot() ) {       return l2;     } else if( l2.isEmptyConcSlot() ) {       return l1;     } else if(  l1.getTailConcSlot() .isEmptyConcSlot() ) {       return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( l1.getHeadConcSlot() ,l2) ;     } else {       return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( l1.getHeadConcSlot() ,tom_append_list_ConcSlot( l1.getTailConcSlot() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.SlotList  tom_get_slice_ConcSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end, tom.gom.adt.gom.types.SlotList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcSlot()  ||  (end== tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( begin.getHeadConcSlot() ,( tom.gom.adt.gom.types.SlotList )tom_get_slice_ConcSlot( begin.getTailConcSlot() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.SortList  tom_append_list_ConcSort( tom.gom.adt.gom.types.SortList l1,  tom.gom.adt.gom.types.SortList  l2) {     if( l1.isEmptyConcSort() ) {       return l2;     } else if( l2.isEmptyConcSort() ) {       return l1;     } else if(  l1.getTailConcSort() .isEmptyConcSort() ) {       return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( l1.getHeadConcSort() ,l2) ;     } else {       return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( l1.getHeadConcSort() ,tom_append_list_ConcSort( l1.getTailConcSort() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.SortList  tom_get_slice_ConcSort( tom.gom.adt.gom.types.SortList  begin,  tom.gom.adt.gom.types.SortList  end, tom.gom.adt.gom.types.SortList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcSort()  ||  (end== tom.gom.adt.gom.types.sortlist.EmptyConcSort.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( begin.getHeadConcSort() ,( tom.gom.adt.gom.types.SortList )tom_get_slice_ConcSort( begin.getTailConcSort() ,end,tail)) ;   }      private static   tom.gom.adt.gom.types.ModuleList  tom_append_list_ConcModule( tom.gom.adt.gom.types.ModuleList l1,  tom.gom.adt.gom.types.ModuleList  l2) {     if( l1.isEmptyConcModule() ) {       return l2;     } else if( l2.isEmptyConcModule() ) {       return l1;     } else if(  l1.getTailConcModule() .isEmptyConcModule() ) {       return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( l1.getHeadConcModule() ,l2) ;     } else {       return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( l1.getHeadConcModule() ,tom_append_list_ConcModule( l1.getTailConcModule() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.ModuleList  tom_get_slice_ConcModule( tom.gom.adt.gom.types.ModuleList  begin,  tom.gom.adt.gom.types.ModuleList  end, tom.gom.adt.gom.types.ModuleList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcModule()  ||  (end== tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( begin.getHeadConcModule() ,( tom.gom.adt.gom.types.ModuleList )tom_get_slice_ConcModule( begin.getTailConcModule() ,end,tail)) ;   }    

  private GomStreamManager streamManager;
  private GomEnvironment environment() {
    return GomEnvironment.getInstance();
  }

  public TypeExpander(GomStreamManager streamManager) {
    this.streamManager = streamManager;
  }
  /**
    * We try here to get full sort definitions for each constructs
    * Once the structure is correctly build, we can attach the hooks
    */
  public ModuleList expand(GomModuleList moduleList) {

    /* put a map giving all imported modules for each module in the path */
    buildDependencyMap(moduleList);

    /* collect all sort declarations */
    SortDeclList sortDeclList =  tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() ;
    /* The sorts declared in each module */
    Map sortsForModule = new HashMap();
    GomModuleList consum = moduleList;
    while(!consum.isEmptyConcGomModule()) {
      GomModule module = consum.getHeadConcGomModule();
      consum = consum.getTailConcGomModule();

      Collection decls = getSortDeclarations(module);
      Collection implicitdecls = getSortDeclarationInCodomain(module);

      /* Check that there are no implicit sort declarations
       * Also, check that declared sorts have at least an operator
       */
      if(!decls.containsAll(implicitdecls)) {
        // whine about non declared sorts
        Collection undeclaredSorts = new HashSet();
        undeclaredSorts.addAll(implicitdecls);
        undeclaredSorts.removeAll(decls);
        getLogger().log(Level.WARNING, GomMessage.undeclaredSorts.getMessage(),
            new Object[]{showSortList(undeclaredSorts)});
      }
      if(!implicitdecls.containsAll(decls)) {
        // whine about sorts without operators: this is a real error
        Collection emptySorts = new HashSet();
        emptySorts.addAll(decls);
        emptySorts.removeAll(implicitdecls);
        getLogger().log(Level.SEVERE, GomMessage.emptySorts.getMessage(),
            new Object[]{showSortList(emptySorts)});
        return  tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() ;
      }
      Iterator it = implicitdecls.iterator();
      while(it.hasNext()) {
        SortDecl decl = (SortDecl)it.next();
        sortDeclList =  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make(decl,tom_append_list_ConcSortDecl(sortDeclList, tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() )) ;
      }
      /* Fills sortsForModule */
      it = decls.iterator();
      SortDeclList declaredSorts =  tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() ;
      while(it.hasNext()) {
        SortDecl decl = (SortDecl)it.next();
        declaredSorts =  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make(decl,tom_append_list_ConcSortDecl(declaredSorts, tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() )) ;
      }
      GomModuleName moduleName = module.getModuleName();
      ModuleDecl mdecl =  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(moduleName, streamManager.getPackagePath(moduleName.getName())) ;
      sortsForModule.put(mdecl,declaredSorts);
    }

    /* now get all operators for each sort */
    Map operatorsForSort = new HashMap();
    Map hooksForSort = new HashMap();
    consum = moduleList;
    while(!consum.isEmptyConcGomModule()) {
      GomModule module = consum.getHeadConcGomModule();
      consum = consum.getTailConcGomModule();

      // iterate through the productions
      {{ Object tomMatch475NameNumber_freshVar_0=module;if ( (tomMatch475NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch475NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch475NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch475NameNumber_freshVar_3=tomMatch475NameNumberfreshSubject_1;if ( (tomMatch475NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch475NameNumber_freshVar_1= tomMatch475NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch475NameNumber_freshVar_2= tomMatch475NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.SectionList  tomMatch475NameNumber_freshVar_4=tomMatch475NameNumber_freshVar_2;if ( ((tomMatch475NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch475NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch475NameNumber_begin_6=tomMatch475NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch475NameNumber_end_7=tomMatch475NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch475NameNumber_freshVar_5=tomMatch475NameNumber_end_7;if (!( tomMatch475NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch475NameNumber_freshVar_11= tomMatch475NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch475NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch475NameNumber_freshVar_10= tomMatch475NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch475NameNumber_freshVar_12=tomMatch475NameNumber_freshVar_10;if ( ((tomMatch475NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch475NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch475NameNumber_begin_14=tomMatch475NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch475NameNumber_end_15=tomMatch475NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch475NameNumber_freshVar_13=tomMatch475NameNumber_end_15;if (!( tomMatch475NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch475NameNumber_freshVar_19= tomMatch475NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch475NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch475NameNumber_freshVar_18= tomMatch475NameNumber_freshVar_19.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch475NameNumber_freshVar_20=tomMatch475NameNumber_freshVar_18;if ( ((tomMatch475NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch475NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch475NameNumber_begin_22=tomMatch475NameNumber_freshVar_20;{  tom.gom.adt.gom.types.ProductionList  tomMatch475NameNumber_end_23=tomMatch475NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch475NameNumber_freshVar_21=tomMatch475NameNumber_end_23;if (!( tomMatch475NameNumber_freshVar_21.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch475NameNumber_freshVar_26= tomMatch475NameNumber_freshVar_21.getHeadConcProduction() ;if ( (tomMatch475NameNumber_freshVar_26 instanceof tom.gom.adt.gom.types.production.Production) ) {{  tom.gom.adt.gom.types.Production  tom_prod= tomMatch475NameNumber_freshVar_21.getHeadConcProduction() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch475NameNumber_freshVar_24= tomMatch475NameNumber_freshVar_21.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch475NameNumber_freshVar_16= tomMatch475NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch475NameNumber_freshVar_8= tomMatch475NameNumber_freshVar_5.getTailConcSection() ;if ( true ) {



          // we may want to pass moduleName to help resolve ambiguities with modules
          getOperatorDecl(tom_prod,sortDeclList,operatorsForSort);

        }}}}}}}}}if ( tomMatch475NameNumber_end_23.isEmptyConcProduction() ) {tomMatch475NameNumber_end_23=tomMatch475NameNumber_begin_22;} else {tomMatch475NameNumber_end_23= tomMatch475NameNumber_end_23.getTailConcProduction() ;}}} while(!( (tomMatch475NameNumber_end_23==tomMatch475NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch475NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch475NameNumber_end_15=tomMatch475NameNumber_begin_14;} else {tomMatch475NameNumber_end_15= tomMatch475NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch475NameNumber_end_15==tomMatch475NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch475NameNumber_end_7.isEmptyConcSection() ) {tomMatch475NameNumber_end_7=tomMatch475NameNumber_begin_6;} else {tomMatch475NameNumber_end_7= tomMatch475NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch475NameNumber_end_7==tomMatch475NameNumber_begin_6) ));}}}}}}}}}}}}{{ Object tomMatch476NameNumber_freshVar_0=module;if ( (tomMatch476NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch476NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch476NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch476NameNumber_freshVar_3=tomMatch476NameNumberfreshSubject_1;if ( (tomMatch476NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch476NameNumber_freshVar_1= tomMatch476NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch476NameNumber_freshVar_2= tomMatch476NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.SectionList  tomMatch476NameNumber_freshVar_4=tomMatch476NameNumber_freshVar_2;if ( ((tomMatch476NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch476NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch476NameNumber_begin_6=tomMatch476NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch476NameNumber_end_7=tomMatch476NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch476NameNumber_freshVar_5=tomMatch476NameNumber_end_7;if (!( tomMatch476NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch476NameNumber_freshVar_11= tomMatch476NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch476NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch476NameNumber_freshVar_10= tomMatch476NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch476NameNumber_freshVar_12=tomMatch476NameNumber_freshVar_10;if ( ((tomMatch476NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch476NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch476NameNumber_begin_14=tomMatch476NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch476NameNumber_end_15=tomMatch476NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch476NameNumber_freshVar_13=tomMatch476NameNumber_end_15;if (!( tomMatch476NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch476NameNumber_freshVar_19= tomMatch476NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch476NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_freshVar_18= tomMatch476NameNumber_freshVar_19.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_freshVar_20=tomMatch476NameNumber_freshVar_18;if ( ((tomMatch476NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch476NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_begin_22=tomMatch476NameNumber_freshVar_20;{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_end_23=tomMatch476NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_freshVar_21=tomMatch476NameNumber_end_23;if (!( tomMatch476NameNumber_freshVar_21.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch476NameNumber_freshVar_27= tomMatch476NameNumber_freshVar_21.getHeadConcProduction() ;if ( (tomMatch476NameNumber_freshVar_27 instanceof tom.gom.adt.gom.types.production.SortType) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_freshVar_26= tomMatch476NameNumber_freshVar_27.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_freshVar_28=tomMatch476NameNumber_freshVar_26;if ( ((tomMatch476NameNumber_freshVar_28 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch476NameNumber_freshVar_28 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_begin_30=tomMatch476NameNumber_freshVar_28;{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_end_31=tomMatch476NameNumber_freshVar_28;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_freshVar_29=tomMatch476NameNumber_end_31;if (!( tomMatch476NameNumber_freshVar_29.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch476NameNumber_freshVar_34= tomMatch476NameNumber_freshVar_29.getHeadConcProduction() ;if ( (tomMatch476NameNumber_freshVar_34 instanceof tom.gom.adt.gom.types.production.Production) ) {{  tom.gom.adt.gom.types.Production  tom_prod= tomMatch476NameNumber_freshVar_29.getHeadConcProduction() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_freshVar_32= tomMatch476NameNumber_freshVar_29.getTailConcProduction() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch476NameNumber_freshVar_24= tomMatch476NameNumber_freshVar_21.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch476NameNumber_freshVar_16= tomMatch476NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch476NameNumber_freshVar_8= tomMatch476NameNumber_freshVar_5.getTailConcSection() ;if ( true ) {








          // we may want to pass moduleName to help resolve ambiguities with modules
          getOperatorDecl(tom_prod,sortDeclList,operatorsForSort);

        }}}}}}}}}}if ( tomMatch476NameNumber_end_31.isEmptyConcProduction() ) {tomMatch476NameNumber_end_31=tomMatch476NameNumber_begin_30;} else {tomMatch476NameNumber_end_31= tomMatch476NameNumber_end_31.getTailConcProduction() ;}}} while(!( (tomMatch476NameNumber_end_31==tomMatch476NameNumber_begin_30) ));}}}}}}}}}if ( tomMatch476NameNumber_end_23.isEmptyConcProduction() ) {tomMatch476NameNumber_end_23=tomMatch476NameNumber_begin_22;} else {tomMatch476NameNumber_end_23= tomMatch476NameNumber_end_23.getTailConcProduction() ;}}} while(!( (tomMatch476NameNumber_end_23==tomMatch476NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch476NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch476NameNumber_end_15=tomMatch476NameNumber_begin_14;} else {tomMatch476NameNumber_end_15= tomMatch476NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch476NameNumber_end_15==tomMatch476NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch476NameNumber_end_7.isEmptyConcSection() ) {tomMatch476NameNumber_end_7=tomMatch476NameNumber_begin_6;} else {tomMatch476NameNumber_end_7= tomMatch476NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch476NameNumber_end_7==tomMatch476NameNumber_begin_6) ));}}}}}}}}}}}}

    }

    /*
     * build the module list using the map
     * since we already checked that the declared and used sorts do match, we
     * can use the map alone
     */
    ModuleList resultModuleList =  tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() ;
    Iterator it = sortsForModule.entrySet().iterator();
    while(it.hasNext()) {
      Map.Entry entry = (Map.Entry) it.next();
      ModuleDecl mdecl = (ModuleDecl) entry.getKey();
      SortDeclList sdeclList = (SortDeclList) entry.getValue();
      SortList sortList =  tom.gom.adt.gom.types.sortlist.EmptyConcSort.make() ;
      {{ Object tomMatch477NameNumber_freshVar_0=sdeclList;if ( (tomMatch477NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.SortDeclList) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch477NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SortDeclList )tomMatch477NameNumber_freshVar_0);{  tom.gom.adt.gom.types.SortDeclList  tomMatch477NameNumber_freshVar_1=tomMatch477NameNumberfreshSubject_1;if ( ((tomMatch477NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl) || (tomMatch477NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl)) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch477NameNumber_begin_3=tomMatch477NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SortDeclList  tomMatch477NameNumber_end_4=tomMatch477NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.SortDeclList  tomMatch477NameNumber_freshVar_2=tomMatch477NameNumber_end_4;if (!( tomMatch477NameNumber_freshVar_2.isEmptyConcSortDecl() )) {{  tom.gom.adt.gom.types.SortDecl  tom_sdecl= tomMatch477NameNumber_freshVar_2.getHeadConcSortDecl() ;{  tom.gom.adt.gom.types.SortDeclList  tomMatch477NameNumber_freshVar_5= tomMatch477NameNumber_freshVar_2.getTailConcSortDecl() ;if ( true ) {

          OperatorDeclList opdecl = (OperatorDeclList)
            operatorsForSort.get(tom_sdecl);
          Sort fullSort =  tom.gom.adt.gom.types.sort.Sort.make(tom_sdecl, opdecl) ;
          if(checkSortValidity(fullSort)) {
            sortList =  tom.gom.adt.gom.types.sortlist.ConsConcSort.make(fullSort,tom_append_list_ConcSort(sortList, tom.gom.adt.gom.types.sortlist.EmptyConcSort.make() )) ;
          }
        }}}}}if ( tomMatch477NameNumber_end_4.isEmptyConcSortDecl() ) {tomMatch477NameNumber_end_4=tomMatch477NameNumber_begin_3;} else {tomMatch477NameNumber_end_4= tomMatch477NameNumber_end_4.getTailConcSortDecl() ;}}} while(!( (tomMatch477NameNumber_end_4==tomMatch477NameNumber_begin_3) ));}}}}}}}}

      resultModuleList =  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( tom.gom.adt.gom.types.module.Module.make(mdecl, sortList) ,tom_append_list_ConcModule(resultModuleList, tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() )) 

;
    }
    return resultModuleList;
  }

  /*
   * Get an OperatorDecl from a Production, using the list of sort declarations
   * XXX: There is huge room for efficiency improvement, as we could use a map
   * sortName -> sortDeclList instead of a simple list
   */
  private OperatorDecl getOperatorDecl(Production prod,
      SortDeclList sortDeclList,
      Map operatorsForSort) {

    {{ Object tomMatch478NameNumber_freshVar_0=prod;if ( (tomMatch478NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.Production) ) {{  tom.gom.adt.gom.types.Production  tomMatch478NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Production )tomMatch478NameNumber_freshVar_0);{  tom.gom.adt.gom.types.Production  tomMatch478NameNumber_freshVar_5=tomMatch478NameNumberfreshSubject_1;if ( (tomMatch478NameNumber_freshVar_5 instanceof tom.gom.adt.gom.types.production.Production) ) {{  String  tomMatch478NameNumber_freshVar_1= tomMatch478NameNumber_freshVar_5.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch478NameNumber_freshVar_2= tomMatch478NameNumber_freshVar_5.getDomainList() ;{  tom.gom.adt.gom.types.GomType  tomMatch478NameNumber_freshVar_3= tomMatch478NameNumber_freshVar_5.getCodomain() ;{  tom.gom.adt.gom.types.Option  tomMatch478NameNumber_freshVar_4= tomMatch478NameNumber_freshVar_5.getOption() ;{  tom.gom.adt.gom.types.GomType  tomMatch478NameNumber_freshVar_7=tomMatch478NameNumber_freshVar_3;if ( (tomMatch478NameNumber_freshVar_7 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch478NameNumber_freshVar_6= tomMatch478NameNumber_freshVar_7.getName() ;if ( true ) {

        SortDecl codomainSort = declFromTypename(tomMatch478NameNumber_freshVar_6,sortDeclList);
        TypedProduction domainSorts = typedProduction(tomMatch478NameNumber_freshVar_2,sortDeclList);
        OperatorDecl decl =  tom.gom.adt.gom.types.operatordecl.OperatorDecl.make(tomMatch478NameNumber_freshVar_1, codomainSort, domainSorts) ;
        if (operatorsForSort.containsKey(codomainSort)) {
          OperatorDeclList list = (OperatorDeclList) operatorsForSort.get(codomainSort);
          operatorsForSort.put(codomainSort, tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make(decl,tom_append_list_ConcOperator(list, tom.gom.adt.gom.types.operatordecllist.EmptyConcOperator.make() )) );
        } else {
          operatorsForSort.put(codomainSort, tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make(decl, tom.gom.adt.gom.types.operatordecllist.EmptyConcOperator.make() ) );
        }
        return decl;
      }}}}}}}}}}}}}}

    throw new GomRuntimeException(
        "TypeExpander::getOperatorDecl: wrong Production?");
  }

  private SortDecl declFromTypename(String typename,
                                    SortDeclList sortDeclList) {
    if (environment().isBuiltinSort(typename)) {
      return environment().builtinSort(typename);
    }
    {{ Object tomMatch479NameNumber_freshVar_0=sortDeclList;if ( (tomMatch479NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.SortDeclList) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch479NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SortDeclList )tomMatch479NameNumber_freshVar_0);{  tom.gom.adt.gom.types.SortDeclList  tomMatch479NameNumber_freshVar_1=tomMatch479NameNumberfreshSubject_1;if ( ((tomMatch479NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl) || (tomMatch479NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl)) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch479NameNumber_begin_3=tomMatch479NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SortDeclList  tomMatch479NameNumber_end_4=tomMatch479NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.SortDeclList  tomMatch479NameNumber_freshVar_2=tomMatch479NameNumber_end_4;if (!( tomMatch479NameNumber_freshVar_2.isEmptyConcSortDecl() )) {{  tom.gom.adt.gom.types.SortDecl  tomMatch479NameNumber_freshVar_8= tomMatch479NameNumber_freshVar_2.getHeadConcSortDecl() ;if ( (tomMatch479NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch479NameNumber_freshVar_7= tomMatch479NameNumber_freshVar_8.getName() ;{  tom.gom.adt.gom.types.SortDecl  tom_sortdecl= tomMatch479NameNumber_freshVar_2.getHeadConcSortDecl() ;{  tom.gom.adt.gom.types.SortDeclList  tomMatch479NameNumber_freshVar_5= tomMatch479NameNumber_freshVar_2.getTailConcSortDecl() ;if ( true ) {

        if (typename.equals(tomMatch479NameNumber_freshVar_7)) {
          return tom_sortdecl;
        }
      }}}}}}}}if ( tomMatch479NameNumber_end_4.isEmptyConcSortDecl() ) {tomMatch479NameNumber_end_4=tomMatch479NameNumber_begin_3;} else {tomMatch479NameNumber_end_4= tomMatch479NameNumber_end_4.getTailConcSortDecl() ;}}} while(!( (tomMatch479NameNumber_end_4==tomMatch479NameNumber_begin_3) ));}}}}}}}}

    getLogger().log(Level.SEVERE, GomMessage.unknownSort.getMessage(),
        new Object[]{typename});
    /* If the sort is not known, assume it is a builtin */
    return  tom.gom.adt.gom.types.sortdecl.BuiltinSortDecl.make(typename) ;
  }

  private TypedProduction typedProduction(FieldList domain, SortDeclList sortDeclList) {
    {{ Object tomMatch480NameNumber_freshVar_0=domain;if ( (tomMatch480NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch480NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.FieldList )tomMatch480NameNumber_freshVar_0);{  tom.gom.adt.gom.types.FieldList  tomMatch480NameNumber_freshVar_1=tomMatch480NameNumberfreshSubject_1;if ( ((tomMatch480NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch480NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {if (!( tomMatch480NameNumber_freshVar_1.isEmptyConcField() )) {{  tom.gom.adt.gom.types.Field  tomMatch480NameNumber_freshVar_4= tomMatch480NameNumber_freshVar_1.getHeadConcField() ;if ( (tomMatch480NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.field.StarredField) ) {{  tom.gom.adt.gom.types.GomType  tomMatch480NameNumber_freshVar_3= tomMatch480NameNumber_freshVar_4.getFieldType() ;{  tom.gom.adt.gom.types.GomType  tomMatch480NameNumber_freshVar_6=tomMatch480NameNumber_freshVar_3;if ( (tomMatch480NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch480NameNumber_freshVar_5= tomMatch480NameNumber_freshVar_6.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch480NameNumber_freshVar_2= tomMatch480NameNumber_freshVar_1.getTailConcField() ;if ( tomMatch480NameNumber_freshVar_2.isEmptyConcField() ) {if ( true ) {

        return  tom.gom.adt.gom.types.typedproduction.Variadic.make(declFromTypename(tomMatch480NameNumber_freshVar_5,sortDeclList)) ;
      }}}}}}}}}}}}}}}{ Object tomMatch480NameNumber_freshVar_7=domain;if ( (tomMatch480NameNumber_freshVar_7 instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch480NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.FieldList )tomMatch480NameNumber_freshVar_7);{  tom.gom.adt.gom.types.FieldList  tomMatch480NameNumber_freshVar_8=tomMatch480NameNumberfreshSubject_1;if ( ((tomMatch480NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch480NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {if ( true ) {

        return  tom.gom.adt.gom.types.typedproduction.Slots.make(typedSlotList(tomMatch480NameNumber_freshVar_8,sortDeclList)) ;
      }}}}}}}

    // the error message could be more refined
    throw new GomRuntimeException("TypeExpander::typedProduction: illformed Production");
  }

  private SlotList typedSlotList(FieldList fields, SortDeclList sortDeclList) {
    {{ Object tomMatch481NameNumber_freshVar_0=fields;if ( (tomMatch481NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch481NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.FieldList )tomMatch481NameNumber_freshVar_0);{  tom.gom.adt.gom.types.FieldList  tomMatch481NameNumber_freshVar_1=tomMatch481NameNumberfreshSubject_1;if ( ((tomMatch481NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch481NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {if ( tomMatch481NameNumber_freshVar_1.isEmptyConcField() ) {if ( true ) {

        return  tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ;
      }}}}}}}{ Object tomMatch481NameNumber_freshVar_2=fields;if ( (tomMatch481NameNumber_freshVar_2 instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch481NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.FieldList )tomMatch481NameNumber_freshVar_2);{  tom.gom.adt.gom.types.FieldList  tomMatch481NameNumber_freshVar_3=tomMatch481NameNumberfreshSubject_1;if ( ((tomMatch481NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch481NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {if (!( tomMatch481NameNumber_freshVar_3.isEmptyConcField() )) {{  tom.gom.adt.gom.types.Field  tomMatch481NameNumber_freshVar_8= tomMatch481NameNumber_freshVar_3.getHeadConcField() ;if ( (tomMatch481NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.field.NamedField) ) {{  String  tomMatch481NameNumber_freshVar_6= tomMatch481NameNumber_freshVar_8.getName() ;{  tom.gom.adt.gom.types.GomType  tomMatch481NameNumber_freshVar_7= tomMatch481NameNumber_freshVar_8.getFieldType() ;{  tom.gom.adt.gom.types.GomType  tomMatch481NameNumber_freshVar_10=tomMatch481NameNumber_freshVar_7;if ( (tomMatch481NameNumber_freshVar_10 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch481NameNumber_freshVar_9= tomMatch481NameNumber_freshVar_10.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch481NameNumber_freshVar_4= tomMatch481NameNumber_freshVar_3.getTailConcField() ;if ( true ) {

        SlotList newtail = typedSlotList(tomMatch481NameNumber_freshVar_4,sortDeclList);
        return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( tom.gom.adt.gom.types.slot.Slot.make(tomMatch481NameNumber_freshVar_6, declFromTypename(tomMatch481NameNumber_freshVar_9,sortDeclList)) ,tom_append_list_ConcSlot(newtail, tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() )) ;
      }}}}}}}}}}}}}}}}

    getLogger().log(Level.SEVERE, GomMessage.malformedProduction.getMessage(),
        new Object[]{fields.toString()});
    return  tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ;
  }

  /*
   * Get all sort declarations in a module
   */
  private Collection getSortDeclarations(GomModule module) {
    Collection result = new HashSet();
    {{ Object tomMatch482NameNumber_freshVar_0=module;if ( (tomMatch482NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch482NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch482NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch482NameNumber_freshVar_3=tomMatch482NameNumberfreshSubject_1;if ( (tomMatch482NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch482NameNumber_freshVar_1= tomMatch482NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch482NameNumber_freshVar_2= tomMatch482NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch482NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch482NameNumber_freshVar_4=tomMatch482NameNumber_freshVar_2;if ( ((tomMatch482NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch482NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch482NameNumber_begin_6=tomMatch482NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch482NameNumber_end_7=tomMatch482NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch482NameNumber_freshVar_5=tomMatch482NameNumber_end_7;if (!( tomMatch482NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch482NameNumber_freshVar_11= tomMatch482NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch482NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch482NameNumber_freshVar_10= tomMatch482NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch482NameNumber_freshVar_12=tomMatch482NameNumber_freshVar_10;if ( ((tomMatch482NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch482NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch482NameNumber_begin_14=tomMatch482NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch482NameNumber_end_15=tomMatch482NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch482NameNumber_freshVar_13=tomMatch482NameNumber_end_15;if (!( tomMatch482NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch482NameNumber_freshVar_19= tomMatch482NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch482NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Sorts) ) {{  tom.gom.adt.gom.types.GomTypeList  tomMatch482NameNumber_freshVar_18= tomMatch482NameNumber_freshVar_19.getTypeList() ;{  tom.gom.adt.gom.types.GomTypeList  tomMatch482NameNumber_freshVar_20=tomMatch482NameNumber_freshVar_18;if ( ((tomMatch482NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.gomtypelist.ConsConcGomType) || (tomMatch482NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.gomtypelist.EmptyConcGomType)) ) {{  tom.gom.adt.gom.types.GomTypeList  tomMatch482NameNumber_begin_22=tomMatch482NameNumber_freshVar_20;{  tom.gom.adt.gom.types.GomTypeList  tomMatch482NameNumber_end_23=tomMatch482NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.GomTypeList  tomMatch482NameNumber_freshVar_21=tomMatch482NameNumber_end_23;if (!( tomMatch482NameNumber_freshVar_21.isEmptyConcGomType() )) {{  tom.gom.adt.gom.types.GomType  tomMatch482NameNumber_freshVar_27= tomMatch482NameNumber_freshVar_21.getHeadConcGomType() ;if ( (tomMatch482NameNumber_freshVar_27 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch482NameNumber_freshVar_26= tomMatch482NameNumber_freshVar_27.getName() ;{  String  tom_typeName=tomMatch482NameNumber_freshVar_26;{  tom.gom.adt.gom.types.GomTypeList  tomMatch482NameNumber_freshVar_24= tomMatch482NameNumber_freshVar_21.getTailConcGomType() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch482NameNumber_freshVar_16= tomMatch482NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch482NameNumber_freshVar_8= tomMatch482NameNumber_freshVar_5.getTailConcSection() ;if ( true ) {



        if (environment().isBuiltinSort(tom_typeName)) {
          getLogger().log(Level.SEVERE, GomMessage.operatorOnBuiltin.getMessage(),
            new Object[]{(tom_typeName)});
          result.add(environment().builtinSort(tom_typeName));
        } else {
          result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tom_typeName,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
        }
      }}}}}}}}}}if ( tomMatch482NameNumber_end_23.isEmptyConcGomType() ) {tomMatch482NameNumber_end_23=tomMatch482NameNumber_begin_22;} else {tomMatch482NameNumber_end_23= tomMatch482NameNumber_end_23.getTailConcGomType() ;}}} while(!( (tomMatch482NameNumber_end_23==tomMatch482NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch482NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch482NameNumber_end_15=tomMatch482NameNumber_begin_14;} else {tomMatch482NameNumber_end_15= tomMatch482NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch482NameNumber_end_15==tomMatch482NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch482NameNumber_end_7.isEmptyConcSection() ) {tomMatch482NameNumber_end_7=tomMatch482NameNumber_begin_6;} else {tomMatch482NameNumber_end_7= tomMatch482NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch482NameNumber_end_7==tomMatch482NameNumber_begin_6) ));}}}}}}}}}}}}}{{ Object tomMatch483NameNumber_freshVar_0=module;if ( (tomMatch483NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch483NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch483NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch483NameNumber_freshVar_3=tomMatch483NameNumberfreshSubject_1;if ( (tomMatch483NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch483NameNumber_freshVar_1= tomMatch483NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch483NameNumber_freshVar_2= tomMatch483NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch483NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch483NameNumber_freshVar_4=tomMatch483NameNumber_freshVar_2;if ( ((tomMatch483NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch483NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch483NameNumber_begin_6=tomMatch483NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch483NameNumber_end_7=tomMatch483NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch483NameNumber_freshVar_5=tomMatch483NameNumber_end_7;if (!( tomMatch483NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch483NameNumber_freshVar_11= tomMatch483NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch483NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch483NameNumber_freshVar_10= tomMatch483NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch483NameNumber_freshVar_12=tomMatch483NameNumber_freshVar_10;if ( ((tomMatch483NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch483NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch483NameNumber_begin_14=tomMatch483NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch483NameNumber_end_15=tomMatch483NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch483NameNumber_freshVar_13=tomMatch483NameNumber_end_15;if (!( tomMatch483NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch483NameNumber_freshVar_19= tomMatch483NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch483NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch483NameNumber_freshVar_18= tomMatch483NameNumber_freshVar_19.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch483NameNumber_freshVar_20=tomMatch483NameNumber_freshVar_18;if ( ((tomMatch483NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch483NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch483NameNumber_begin_22=tomMatch483NameNumber_freshVar_20;{  tom.gom.adt.gom.types.ProductionList  tomMatch483NameNumber_end_23=tomMatch483NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch483NameNumber_freshVar_21=tomMatch483NameNumber_end_23;if (!( tomMatch483NameNumber_freshVar_21.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch483NameNumber_freshVar_27= tomMatch483NameNumber_freshVar_21.getHeadConcProduction() ;if ( (tomMatch483NameNumber_freshVar_27 instanceof tom.gom.adt.gom.types.production.SortType) ) {{  tom.gom.adt.gom.types.GomType  tomMatch483NameNumber_freshVar_26= tomMatch483NameNumber_freshVar_27.getType() ;{  tom.gom.adt.gom.types.GomType  tomMatch483NameNumber_freshVar_29=tomMatch483NameNumber_freshVar_26;if ( (tomMatch483NameNumber_freshVar_29 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch483NameNumber_freshVar_28= tomMatch483NameNumber_freshVar_29.getName() ;{  String  tom_typeName=tomMatch483NameNumber_freshVar_28;{  tom.gom.adt.gom.types.ProductionList  tomMatch483NameNumber_freshVar_24= tomMatch483NameNumber_freshVar_21.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch483NameNumber_freshVar_16= tomMatch483NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch483NameNumber_freshVar_8= tomMatch483NameNumber_freshVar_5.getTailConcSection() ;if ( true ) {







        if (environment().isBuiltinSort(tom_typeName)) {
          getLogger().log(Level.SEVERE, GomMessage.operatorOnBuiltin.getMessage(),
            new Object[]{(tom_typeName)});
          result.add(environment().builtinSort(tom_typeName));
        } else {
          result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tom_typeName,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
        }
      }}}}}}}}}}}}}if ( tomMatch483NameNumber_end_23.isEmptyConcProduction() ) {tomMatch483NameNumber_end_23=tomMatch483NameNumber_begin_22;} else {tomMatch483NameNumber_end_23= tomMatch483NameNumber_end_23.getTailConcProduction() ;}}} while(!( (tomMatch483NameNumber_end_23==tomMatch483NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch483NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch483NameNumber_end_15=tomMatch483NameNumber_begin_14;} else {tomMatch483NameNumber_end_15= tomMatch483NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch483NameNumber_end_15==tomMatch483NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch483NameNumber_end_7.isEmptyConcSection() ) {tomMatch483NameNumber_end_7=tomMatch483NameNumber_begin_6;} else {tomMatch483NameNumber_end_7= tomMatch483NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch483NameNumber_end_7==tomMatch483NameNumber_begin_6) ));}}}}}}}}}}}}}

    return result;
  }

  /*
   * Get all sort uses in a module (as codomain of an operator)
   */
  private Collection getSortDeclarationInCodomain(GomModule module) {
    Collection result = new HashSet();
    {{ Object tomMatch484NameNumber_freshVar_0=module;if ( (tomMatch484NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch484NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch484NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch484NameNumber_freshVar_3=tomMatch484NameNumberfreshSubject_1;if ( (tomMatch484NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch484NameNumber_freshVar_1= tomMatch484NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch484NameNumber_freshVar_2= tomMatch484NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch484NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch484NameNumber_freshVar_4=tomMatch484NameNumber_freshVar_2;if ( ((tomMatch484NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch484NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch484NameNumber_begin_6=tomMatch484NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch484NameNumber_end_7=tomMatch484NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch484NameNumber_freshVar_5=tomMatch484NameNumber_end_7;if (!( tomMatch484NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch484NameNumber_freshVar_11= tomMatch484NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch484NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch484NameNumber_freshVar_10= tomMatch484NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch484NameNumber_freshVar_12=tomMatch484NameNumber_freshVar_10;if ( ((tomMatch484NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch484NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch484NameNumber_begin_14=tomMatch484NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch484NameNumber_end_15=tomMatch484NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch484NameNumber_freshVar_13=tomMatch484NameNumber_end_15;if (!( tomMatch484NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch484NameNumber_freshVar_19= tomMatch484NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch484NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch484NameNumber_freshVar_18= tomMatch484NameNumber_freshVar_19.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch484NameNumber_freshVar_20=tomMatch484NameNumber_freshVar_18;if ( ((tomMatch484NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch484NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch484NameNumber_begin_22=tomMatch484NameNumber_freshVar_20;{  tom.gom.adt.gom.types.ProductionList  tomMatch484NameNumber_end_23=tomMatch484NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch484NameNumber_freshVar_21=tomMatch484NameNumber_end_23;if (!( tomMatch484NameNumber_freshVar_21.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch484NameNumber_freshVar_30= tomMatch484NameNumber_freshVar_21.getHeadConcProduction() ;if ( (tomMatch484NameNumber_freshVar_30 instanceof tom.gom.adt.gom.types.production.Production) ) {{  String  tomMatch484NameNumber_freshVar_26= tomMatch484NameNumber_freshVar_30.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch484NameNumber_freshVar_27= tomMatch484NameNumber_freshVar_30.getDomainList() ;{  tom.gom.adt.gom.types.GomType  tomMatch484NameNumber_freshVar_28= tomMatch484NameNumber_freshVar_30.getCodomain() ;{  tom.gom.adt.gom.types.Option  tomMatch484NameNumber_freshVar_29= tomMatch484NameNumber_freshVar_30.getOption() ;{  tom.gom.adt.gom.types.GomType  tomMatch484NameNumber_freshVar_32=tomMatch484NameNumber_freshVar_28;if ( (tomMatch484NameNumber_freshVar_32 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch484NameNumber_freshVar_31= tomMatch484NameNumber_freshVar_32.getName() ;{  String  tom_typeName=tomMatch484NameNumber_freshVar_31;{  tom.gom.adt.gom.types.ProductionList  tomMatch484NameNumber_freshVar_24= tomMatch484NameNumber_freshVar_21.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch484NameNumber_freshVar_16= tomMatch484NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch484NameNumber_freshVar_8= tomMatch484NameNumber_freshVar_5.getTailConcSection() ;if ( true ) {











        if (environment().isBuiltinSort(tom_typeName)) {
          result.add(environment().builtinSort(tom_typeName));
        } else {
          result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tom_typeName,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
        }
      }}}}}}}}}}}}}}}}if ( tomMatch484NameNumber_end_23.isEmptyConcProduction() ) {tomMatch484NameNumber_end_23=tomMatch484NameNumber_begin_22;} else {tomMatch484NameNumber_end_23= tomMatch484NameNumber_end_23.getTailConcProduction() ;}}} while(!( (tomMatch484NameNumber_end_23==tomMatch484NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch484NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch484NameNumber_end_15=tomMatch484NameNumber_begin_14;} else {tomMatch484NameNumber_end_15= tomMatch484NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch484NameNumber_end_15==tomMatch484NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch484NameNumber_end_7.isEmptyConcSection() ) {tomMatch484NameNumber_end_7=tomMatch484NameNumber_begin_6;} else {tomMatch484NameNumber_end_7= tomMatch484NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch484NameNumber_end_7==tomMatch484NameNumber_begin_6) ));}}}}}}}}}}}}}{{ Object tomMatch485NameNumber_freshVar_0=module;if ( (tomMatch485NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch485NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch485NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch485NameNumber_freshVar_3=tomMatch485NameNumberfreshSubject_1;if ( (tomMatch485NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch485NameNumber_freshVar_1= tomMatch485NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_freshVar_2= tomMatch485NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch485NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_freshVar_4=tomMatch485NameNumber_freshVar_2;if ( ((tomMatch485NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch485NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_begin_6=tomMatch485NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_end_7=tomMatch485NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_freshVar_5=tomMatch485NameNumber_end_7;if (!( tomMatch485NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch485NameNumber_freshVar_11= tomMatch485NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch485NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_freshVar_10= tomMatch485NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_freshVar_12=tomMatch485NameNumber_freshVar_10;if ( ((tomMatch485NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch485NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_begin_14=tomMatch485NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_end_15=tomMatch485NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_freshVar_13=tomMatch485NameNumber_end_15;if (!( tomMatch485NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch485NameNumber_freshVar_19= tomMatch485NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch485NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_freshVar_18= tomMatch485NameNumber_freshVar_19.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_freshVar_20=tomMatch485NameNumber_freshVar_18;if ( ((tomMatch485NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch485NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_begin_22=tomMatch485NameNumber_freshVar_20;{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_end_23=tomMatch485NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_freshVar_21=tomMatch485NameNumber_end_23;if (!( tomMatch485NameNumber_freshVar_21.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch485NameNumber_freshVar_27= tomMatch485NameNumber_freshVar_21.getHeadConcProduction() ;if ( (tomMatch485NameNumber_freshVar_27 instanceof tom.gom.adt.gom.types.production.SortType) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_freshVar_26= tomMatch485NameNumber_freshVar_27.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_freshVar_28=tomMatch485NameNumber_freshVar_26;if ( ((tomMatch485NameNumber_freshVar_28 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch485NameNumber_freshVar_28 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_begin_30=tomMatch485NameNumber_freshVar_28;{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_end_31=tomMatch485NameNumber_freshVar_28;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_freshVar_29=tomMatch485NameNumber_end_31;if (!( tomMatch485NameNumber_freshVar_29.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch485NameNumber_freshVar_38= tomMatch485NameNumber_freshVar_29.getHeadConcProduction() ;if ( (tomMatch485NameNumber_freshVar_38 instanceof tom.gom.adt.gom.types.production.Production) ) {{  String  tomMatch485NameNumber_freshVar_34= tomMatch485NameNumber_freshVar_38.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch485NameNumber_freshVar_35= tomMatch485NameNumber_freshVar_38.getDomainList() ;{  tom.gom.adt.gom.types.GomType  tomMatch485NameNumber_freshVar_36= tomMatch485NameNumber_freshVar_38.getCodomain() ;{  tom.gom.adt.gom.types.Option  tomMatch485NameNumber_freshVar_37= tomMatch485NameNumber_freshVar_38.getOption() ;{  tom.gom.adt.gom.types.GomType  tomMatch485NameNumber_freshVar_40=tomMatch485NameNumber_freshVar_36;if ( (tomMatch485NameNumber_freshVar_40 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch485NameNumber_freshVar_39= tomMatch485NameNumber_freshVar_40.getName() ;{  String  tom_typeName=tomMatch485NameNumber_freshVar_39;{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_freshVar_32= tomMatch485NameNumber_freshVar_29.getTailConcProduction() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch485NameNumber_freshVar_24= tomMatch485NameNumber_freshVar_21.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_freshVar_16= tomMatch485NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_freshVar_8= tomMatch485NameNumber_freshVar_5.getTailConcSection() ;if ( true ) {













        if (environment().isBuiltinSort(tom_typeName)) {
          result.add(environment().builtinSort(tom_typeName));
        } else {
          result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tom_typeName,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
        }
      }}}}}}}}}}}}}}}}}if ( tomMatch485NameNumber_end_31.isEmptyConcProduction() ) {tomMatch485NameNumber_end_31=tomMatch485NameNumber_begin_30;} else {tomMatch485NameNumber_end_31= tomMatch485NameNumber_end_31.getTailConcProduction() ;}}} while(!( (tomMatch485NameNumber_end_31==tomMatch485NameNumber_begin_30) ));}}}}}}}}}if ( tomMatch485NameNumber_end_23.isEmptyConcProduction() ) {tomMatch485NameNumber_end_23=tomMatch485NameNumber_begin_22;} else {tomMatch485NameNumber_end_23= tomMatch485NameNumber_end_23.getTailConcProduction() ;}}} while(!( (tomMatch485NameNumber_end_23==tomMatch485NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch485NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch485NameNumber_end_15=tomMatch485NameNumber_begin_14;} else {tomMatch485NameNumber_end_15= tomMatch485NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch485NameNumber_end_15==tomMatch485NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch485NameNumber_end_7.isEmptyConcSection() ) {tomMatch485NameNumber_end_7=tomMatch485NameNumber_begin_6;} else {tomMatch485NameNumber_end_7= tomMatch485NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch485NameNumber_end_7==tomMatch485NameNumber_begin_6) ));}}}}}}}}}}}}}

    return result;
  }

  /**
   * Get directly imported modules. Skip builtins
   *
   * @param module the main module with imports
   * @return the Collection of imported GomModuleName
   */
  private Collection getImportedModules(GomModule module) {
    Set imports = new HashSet();
    {{ Object tomMatch486NameNumber_freshVar_0=module;if ( (tomMatch486NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch486NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch486NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch486NameNumber_freshVar_3=tomMatch486NameNumberfreshSubject_1;if ( (tomMatch486NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch486NameNumber_freshVar_1= tomMatch486NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch486NameNumber_freshVar_2= tomMatch486NameNumber_freshVar_3.getSectionList() ;if ( true ) {

        imports.add(tomMatch486NameNumber_freshVar_1);
        {{ Object tomMatch487NameNumber_freshVar_0=tomMatch486NameNumber_freshVar_2;if ( (tomMatch487NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.SectionList) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SectionList )tomMatch487NameNumber_freshVar_0);{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumber_freshVar_1=tomMatch487NameNumberfreshSubject_1;if ( ((tomMatch487NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch487NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumber_begin_3=tomMatch487NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumber_end_4=tomMatch487NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumber_freshVar_2=tomMatch487NameNumber_end_4;if (!( tomMatch487NameNumber_freshVar_2.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch487NameNumber_freshVar_8= tomMatch487NameNumber_freshVar_2.getHeadConcSection() ;if ( (tomMatch487NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.section.Imports) ) {{  tom.gom.adt.gom.types.ImportList  tomMatch487NameNumber_freshVar_7= tomMatch487NameNumber_freshVar_8.getImportList() ;{  tom.gom.adt.gom.types.ImportList  tomMatch487NameNumber_freshVar_9=tomMatch487NameNumber_freshVar_7;if ( ((tomMatch487NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.importlist.ConsConcImportedModule) || (tomMatch487NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.importlist.EmptyConcImportedModule)) ) {{  tom.gom.adt.gom.types.ImportList  tomMatch487NameNumber_begin_11=tomMatch487NameNumber_freshVar_9;{  tom.gom.adt.gom.types.ImportList  tomMatch487NameNumber_end_12=tomMatch487NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.ImportList  tomMatch487NameNumber_freshVar_10=tomMatch487NameNumber_end_12;if (!( tomMatch487NameNumber_freshVar_10.isEmptyConcImportedModule() )) {{  tom.gom.adt.gom.types.ImportedModule  tomMatch487NameNumber_freshVar_16= tomMatch487NameNumber_freshVar_10.getHeadConcImportedModule() ;if ( (tomMatch487NameNumber_freshVar_16 instanceof tom.gom.adt.gom.types.importedmodule.Import) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch487NameNumber_freshVar_15= tomMatch487NameNumber_freshVar_16.getModuleName() ;{  tom.gom.adt.gom.types.GomModuleName  tomMatch487NameNumber_freshVar_18=tomMatch487NameNumber_freshVar_15;if ( (tomMatch487NameNumber_freshVar_18 instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName) ) {{  String  tomMatch487NameNumber_freshVar_17= tomMatch487NameNumber_freshVar_18.getName() ;{  tom.gom.adt.gom.types.ImportList  tomMatch487NameNumber_freshVar_13= tomMatch487NameNumber_freshVar_10.getTailConcImportedModule() ;{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumber_freshVar_5= tomMatch487NameNumber_freshVar_2.getTailConcSection() ;if ( true ) {





            if (!environment().isBuiltin(tomMatch487NameNumber_freshVar_17)) {
              imports.add(tomMatch487NameNumber_freshVar_15);
            }
          }}}}}}}}}}}if ( tomMatch487NameNumber_end_12.isEmptyConcImportedModule() ) {tomMatch487NameNumber_end_12=tomMatch487NameNumber_begin_11;} else {tomMatch487NameNumber_end_12= tomMatch487NameNumber_end_12.getTailConcImportedModule() ;}}} while(!( (tomMatch487NameNumber_end_12==tomMatch487NameNumber_begin_11) ));}}}}}}}}}if ( tomMatch487NameNumber_end_4.isEmptyConcSection() ) {tomMatch487NameNumber_end_4=tomMatch487NameNumber_begin_3;} else {tomMatch487NameNumber_end_4= tomMatch487NameNumber_end_4.getTailConcSection() ;}}} while(!( (tomMatch487NameNumber_end_4==tomMatch487NameNumber_begin_3) ));}}}}}}}}

      }}}}}}}}}

    return imports;
  }

  private GomModule getModule(GomModuleName modname, GomModuleList list) {
    {{ Object tomMatch488NameNumber_freshVar_0=list;if ( (tomMatch488NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModuleList) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch488NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModuleList )tomMatch488NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModuleList  tomMatch488NameNumber_freshVar_1=tomMatch488NameNumberfreshSubject_1;if ( ((tomMatch488NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule) || (tomMatch488NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.gommodulelist.EmptyConcGomModule)) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch488NameNumber_begin_3=tomMatch488NameNumber_freshVar_1;{  tom.gom.adt.gom.types.GomModuleList  tomMatch488NameNumber_end_4=tomMatch488NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.GomModuleList  tomMatch488NameNumber_freshVar_2=tomMatch488NameNumber_end_4;if (!( tomMatch488NameNumber_freshVar_2.isEmptyConcGomModule() )) {{  tom.gom.adt.gom.types.GomModule  tomMatch488NameNumber_freshVar_8= tomMatch488NameNumber_freshVar_2.getHeadConcGomModule() ;if ( (tomMatch488NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch488NameNumber_freshVar_7= tomMatch488NameNumber_freshVar_8.getModuleName() ;{  tom.gom.adt.gom.types.GomModule  tom_module= tomMatch488NameNumber_freshVar_2.getHeadConcGomModule() ;{  tom.gom.adt.gom.types.GomModuleList  tomMatch488NameNumber_freshVar_5= tomMatch488NameNumber_freshVar_2.getTailConcGomModule() ;if ( true ) {

        if (tomMatch488NameNumber_freshVar_7.equals(modname)) {
          return tom_module;
        }
      }}}}}}}}if ( tomMatch488NameNumber_end_4.isEmptyConcGomModule() ) {tomMatch488NameNumber_end_4=tomMatch488NameNumber_begin_3;} else {tomMatch488NameNumber_end_4= tomMatch488NameNumber_end_4.getTailConcGomModule() ;}}} while(!( (tomMatch488NameNumber_end_4==tomMatch488NameNumber_begin_3) ));}}}}}}}}

    throw new GomRuntimeException("Module "+ modname +" not present");
  }

  private Collection getTransitiveClosureImports(GomModule module,
      GomModuleList moduleList) {
    Set imported = new HashSet();
    imported.addAll(getImportedModules(module));

    Set newSet = new HashSet();
    while(!newSet.equals(imported)) {
      newSet.addAll(imported);
      imported.addAll(newSet);
      Iterator it = imported.iterator();
      while(it.hasNext()) {
        GomModuleName modname = (GomModuleName) it.next();
        newSet.addAll(getImportedModules(getModule(modname,moduleList)));
      }
    }
    return newSet;
  }

  private void buildDependencyMap(GomModuleList moduleList) {
    {{ Object tomMatch489NameNumber_freshVar_0=moduleList;if ( (tomMatch489NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModuleList) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch489NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModuleList )tomMatch489NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModuleList  tomMatch489NameNumber_freshVar_1=tomMatch489NameNumberfreshSubject_1;if ( ((tomMatch489NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule) || (tomMatch489NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.gommodulelist.EmptyConcGomModule)) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch489NameNumber_begin_3=tomMatch489NameNumber_freshVar_1;{  tom.gom.adt.gom.types.GomModuleList  tomMatch489NameNumber_end_4=tomMatch489NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.GomModuleList  tomMatch489NameNumber_freshVar_2=tomMatch489NameNumber_end_4;if (!( tomMatch489NameNumber_freshVar_2.isEmptyConcGomModule() )) {{  tom.gom.adt.gom.types.GomModule  tomMatch489NameNumber_freshVar_8= tomMatch489NameNumber_freshVar_2.getHeadConcGomModule() ;if ( (tomMatch489NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch489NameNumber_freshVar_7= tomMatch489NameNumber_freshVar_8.getModuleName() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch489NameNumber_freshVar_7;{  tom.gom.adt.gom.types.GomModule  tom_module= tomMatch489NameNumber_freshVar_2.getHeadConcGomModule() ;{  tom.gom.adt.gom.types.GomModuleList  tomMatch489NameNumber_freshVar_5= tomMatch489NameNumber_freshVar_2.getTailConcGomModule() ;if ( true ) {

        ModuleDeclList importsModuleDeclList =  tom.gom.adt.gom.types.moduledecllist.EmptyConcModuleDecl.make() ;
        Iterator it = getTransitiveClosureImports(tom_module,moduleList).iterator();
        while(it.hasNext()) {
          GomModuleName importedModuleName = (GomModuleName) it.next();


          importsModuleDeclList = 
             tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(importedModuleName, streamManager.getPackagePath(importedModuleName.getName())) ,tom_append_list_ConcModuleDecl(importsModuleDeclList, tom.gom.adt.gom.types.moduledecllist.EmptyConcModuleDecl.make() )) 
;
        }
        environment().addModuleDependency(
             tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ,importsModuleDeclList);
      }}}}}}}}}if ( tomMatch489NameNumber_end_4.isEmptyConcGomModule() ) {tomMatch489NameNumber_end_4=tomMatch489NameNumber_begin_3;} else {tomMatch489NameNumber_end_4= tomMatch489NameNumber_end_4.getTailConcGomModule() ;}}} while(!( (tomMatch489NameNumber_end_4==tomMatch489NameNumber_begin_3) ));}}}}}}}}

  }

  private boolean checkSortValidity(Sort sort) {
    boolean valid = true;
    // check if the same slot name is used with different types
    Map mapNameType = new HashMap();
    {{ Object tomMatch490NameNumber_freshVar_0=sort;if ( (tomMatch490NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.Sort) ) {{  tom.gom.adt.gom.types.Sort  tomMatch490NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Sort )tomMatch490NameNumber_freshVar_0);{  tom.gom.adt.gom.types.Sort  tomMatch490NameNumber_freshVar_2=tomMatch490NameNumberfreshSubject_1;if ( (tomMatch490NameNumber_freshVar_2 instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch490NameNumber_freshVar_1= tomMatch490NameNumber_freshVar_2.getOperatorDecls() ;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch490NameNumber_freshVar_3=tomMatch490NameNumber_freshVar_1;if ( ((tomMatch490NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.operatordecllist.ConsConcOperator) || (tomMatch490NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.operatordecllist.EmptyConcOperator)) ) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch490NameNumber_begin_5=tomMatch490NameNumber_freshVar_3;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch490NameNumber_end_6=tomMatch490NameNumber_freshVar_3;do {{{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch490NameNumber_freshVar_4=tomMatch490NameNumber_end_6;if (!( tomMatch490NameNumber_freshVar_4.isEmptyConcOperator() )) {{  tom.gom.adt.gom.types.OperatorDecl  tomMatch490NameNumber_freshVar_10= tomMatch490NameNumber_freshVar_4.getHeadConcOperator() ;if ( (tomMatch490NameNumber_freshVar_10 instanceof tom.gom.adt.gom.types.operatordecl.OperatorDecl) ) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch490NameNumber_freshVar_9= tomMatch490NameNumber_freshVar_10.getProd() ;{  tom.gom.adt.gom.types.TypedProduction  tomMatch490NameNumber_freshVar_12=tomMatch490NameNumber_freshVar_9;if ( (tomMatch490NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.typedproduction.Slots) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch490NameNumber_freshVar_11= tomMatch490NameNumber_freshVar_12.getSlots() ;{  tom.gom.adt.gom.types.SlotList  tomMatch490NameNumber_freshVar_13=tomMatch490NameNumber_freshVar_11;if ( ((tomMatch490NameNumber_freshVar_13 instanceof tom.gom.adt.gom.types.slotlist.ConsConcSlot) || (tomMatch490NameNumber_freshVar_13 instanceof tom.gom.adt.gom.types.slotlist.EmptyConcSlot)) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch490NameNumber_begin_15=tomMatch490NameNumber_freshVar_13;{  tom.gom.adt.gom.types.SlotList  tomMatch490NameNumber_end_16=tomMatch490NameNumber_freshVar_13;do {{{  tom.gom.adt.gom.types.SlotList  tomMatch490NameNumber_freshVar_14=tomMatch490NameNumber_end_16;if (!( tomMatch490NameNumber_freshVar_14.isEmptyConcSlot() )) {{  tom.gom.adt.gom.types.Slot  tomMatch490NameNumber_freshVar_21= tomMatch490NameNumber_freshVar_14.getHeadConcSlot() ;if ( (tomMatch490NameNumber_freshVar_21 instanceof tom.gom.adt.gom.types.slot.Slot) ) {{  String  tomMatch490NameNumber_freshVar_19= tomMatch490NameNumber_freshVar_21.getName() ;{  tom.gom.adt.gom.types.SortDecl  tomMatch490NameNumber_freshVar_20= tomMatch490NameNumber_freshVar_21.getSort() ;{  String  tom_slotName=tomMatch490NameNumber_freshVar_19;{  tom.gom.adt.gom.types.SortDecl  tom_slotSort=tomMatch490NameNumber_freshVar_20;{  tom.gom.adt.gom.types.SlotList  tomMatch490NameNumber_freshVar_17= tomMatch490NameNumber_freshVar_14.getTailConcSlot() ;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch490NameNumber_freshVar_7= tomMatch490NameNumber_freshVar_4.getTailConcOperator() ;if ( true ) {





        if(!mapNameType.containsKey(tom_slotName)) {
          mapNameType.put(tom_slotName,tom_slotSort);
        } else {
          SortDecl prevSort = (SortDecl) mapNameType.get(tom_slotName);
          if (!prevSort.equals(tom_slotSort)) {
            getLogger().log(Level.SEVERE,
                GomMessage.slotIncompatibleTypes.getMessage(),
                new Object[]{(tom_slotName),prevSort.getName(),
                             (tom_slotSort).getName()});
            valid = false;
          }
        }
      }}}}}}}}}}}if ( tomMatch490NameNumber_end_16.isEmptyConcSlot() ) {tomMatch490NameNumber_end_16=tomMatch490NameNumber_begin_15;} else {tomMatch490NameNumber_end_16= tomMatch490NameNumber_end_16.getTailConcSlot() ;}}} while(!( (tomMatch490NameNumber_end_16==tomMatch490NameNumber_begin_15) ));}}}}}}}}}}}}if ( tomMatch490NameNumber_end_6.isEmptyConcOperator() ) {tomMatch490NameNumber_end_6=tomMatch490NameNumber_begin_5;} else {tomMatch490NameNumber_end_6= tomMatch490NameNumber_end_6.getTailConcOperator() ;}}} while(!( (tomMatch490NameNumber_end_6==tomMatch490NameNumber_begin_5) ));}}}}}}}}}}}

    return valid;
  }

  private String showSortList(Collection decls) {
    String sorts = "";
    Iterator it = decls.iterator();
    if(it.hasNext()) {
      SortDecl decl = (SortDecl)it.next();
      sorts += decl.getName();
    }
    while(it.hasNext()) {
      SortDecl decl = (SortDecl)it.next();
      sorts += ", "+decl.getName();
    }
    return sorts;
  }

  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }
}

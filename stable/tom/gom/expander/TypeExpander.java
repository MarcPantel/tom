/* Generated by TOM (version 2.5alpha): Do not edit this file *//*
 *
 * GOM
 *
 * Copyright (C) 2006-2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.expander;

import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.gom.GomMessage;
import tom.gom.GomStreamManager;
import tom.gom.tools.GomEnvironment;
import tom.gom.adt.gom.*;
import tom.gom.adt.gom.types.*;
import tom.gom.tools.error.GomRuntimeException;

public class TypeExpander {

  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_terms_equal_String(String t1, String t2) {  return  (t1.equals(t2))  ;}  private static boolean tom_terms_equal_Production(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Slot(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ModuleDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SlotList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Grammar(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomModuleName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ProductionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SortDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomModuleList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SectionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GrammarList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Section(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ModuleList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomType(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SortDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_OperatorDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_FieldList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Field(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ModuleDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Sort(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ImportList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SortList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_OperatorDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomTypeList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ImportedModule(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomModule(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Module(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TypedProduction(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_fun_sym_Production( tom.gom.adt.gom.types.Production  t) {  return  t instanceof tom.gom.adt.gom.types.production.Production  ;}private static  String  tom_get_slot_Production_Name( tom.gom.adt.gom.types.Production  t) {  return  t.getName()  ;}private static  tom.gom.adt.gom.types.FieldList  tom_get_slot_Production_Domain( tom.gom.adt.gom.types.Production  t) {  return  t.getDomain()  ;}private static  tom.gom.adt.gom.types.GomType  tom_get_slot_Production_Codomain( tom.gom.adt.gom.types.Production  t) {  return  t.getCodomain()  ;}private static boolean tom_is_fun_sym_Slot( tom.gom.adt.gom.types.Slot  t) {  return  t instanceof tom.gom.adt.gom.types.slot.Slot  ;}private static  tom.gom.adt.gom.types.Slot  tom_make_Slot( String  t0,  tom.gom.adt.gom.types.SortDecl  t1) { return  tom.gom.adt.gom.types.slot.Slot.make(t0, t1); }private static  String  tom_get_slot_Slot_Name( tom.gom.adt.gom.types.Slot  t) {  return  t.getName()  ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Slot_Sort( tom.gom.adt.gom.types.Slot  t) {  return  t.getSort()  ;}private static  tom.gom.adt.gom.types.ModuleDecl  tom_make_ModuleDecl( tom.gom.adt.gom.types.GomModuleName  t0,  String  t1) { return  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(t0, t1); }private static boolean tom_is_fun_sym_Grammar( tom.gom.adt.gom.types.Grammar  t) {  return  t instanceof tom.gom.adt.gom.types.grammar.Grammar  ;}private static  tom.gom.adt.gom.types.ProductionList  tom_get_slot_Grammar_ProductionList( tom.gom.adt.gom.types.Grammar  t) {  return  t.getProductionList()  ;}private static boolean tom_is_fun_sym_Sorts( tom.gom.adt.gom.types.Grammar  t) {  return  t instanceof tom.gom.adt.gom.types.grammar.Sorts  ;}private static  tom.gom.adt.gom.types.GomTypeList  tom_get_slot_Sorts_TypeList( tom.gom.adt.gom.types.Grammar  t) {  return  t.getTypeList()  ;}private static boolean tom_is_fun_sym_GomModuleName( tom.gom.adt.gom.types.GomModuleName  t) {  return  t instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName  ;}private static  String  tom_get_slot_GomModuleName_Name( tom.gom.adt.gom.types.GomModuleName  t) {  return  t.getName()  ;}private static boolean tom_is_fun_sym_Imports( tom.gom.adt.gom.types.Section  t) {  return  t instanceof tom.gom.adt.gom.types.section.Imports  ;}private static  tom.gom.adt.gom.types.ImportList  tom_get_slot_Imports_ImportList( tom.gom.adt.gom.types.Section  t) {  return  t.getImportList()  ;}private static boolean tom_is_fun_sym_Public( tom.gom.adt.gom.types.Section  t) {  return  t instanceof tom.gom.adt.gom.types.section.Public  ;}private static  tom.gom.adt.gom.types.GrammarList  tom_get_slot_Public_GrammarList( tom.gom.adt.gom.types.Section  t) {  return  t.getGrammarList()  ;}private static boolean tom_is_fun_sym_GomType( tom.gom.adt.gom.types.GomType  t) {  return  t instanceof tom.gom.adt.gom.types.gomtype.GomType  ;}private static  String  tom_get_slot_GomType_Name( tom.gom.adt.gom.types.GomType  t) {  return  t.getName()  ;}private static boolean tom_is_fun_sym_SortDecl( tom.gom.adt.gom.types.SortDecl  t) {  return  t instanceof tom.gom.adt.gom.types.sortdecl.SortDecl  ;}private static  tom.gom.adt.gom.types.SortDecl  tom_make_SortDecl( String  t0,  tom.gom.adt.gom.types.ModuleDecl  t1) { return  tom.gom.adt.gom.types.sortdecl.SortDecl.make(t0, t1); }private static  String  tom_get_slot_SortDecl_Name( tom.gom.adt.gom.types.SortDecl  t) {  return  t.getName()  ;}private static  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_SortDecl_ModuleDecl( tom.gom.adt.gom.types.SortDecl  t) {  return  t.getModuleDecl()  ;}private static  tom.gom.adt.gom.types.SortDecl  tom_make_BuiltinSortDecl( String  t0) { return  tom.gom.adt.gom.types.sortdecl.BuiltinSortDecl.make(t0); }private static boolean tom_is_fun_sym_StarredField( tom.gom.adt.gom.types.Field  t) {  return  t instanceof tom.gom.adt.gom.types.field.StarredField  ;}private static  tom.gom.adt.gom.types.GomType  tom_get_slot_StarredField_FieldType( tom.gom.adt.gom.types.Field  t) {  return  t.getFieldType()  ;}private static boolean tom_is_fun_sym_NamedField( tom.gom.adt.gom.types.Field  t) {  return  t instanceof tom.gom.adt.gom.types.field.NamedField  ;}private static  String  tom_get_slot_NamedField_Name( tom.gom.adt.gom.types.Field  t) {  return  t.getName()  ;}private static  tom.gom.adt.gom.types.GomType  tom_get_slot_NamedField_FieldType( tom.gom.adt.gom.types.Field  t) {  return  t.getFieldType()  ;}private static boolean tom_is_fun_sym_Sort( tom.gom.adt.gom.types.Sort  t) {  return  t instanceof tom.gom.adt.gom.types.sort.Sort  ;}private static  tom.gom.adt.gom.types.Sort  tom_make_Sort( tom.gom.adt.gom.types.SortDecl  t0,  tom.gom.adt.gom.types.OperatorDeclList  t1) { return  tom.gom.adt.gom.types.sort.Sort.make(t0, t1); }private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Sort_Decl( tom.gom.adt.gom.types.Sort  t) {  return  t.getDecl()  ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_slot_Sort_Operators( tom.gom.adt.gom.types.Sort  t) {  return  t.getOperators()  ;}private static boolean tom_is_fun_sym_OperatorDecl( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t instanceof tom.gom.adt.gom.types.operatordecl.OperatorDecl  ;}private static  tom.gom.adt.gom.types.OperatorDecl  tom_make_OperatorDecl( String  t0,  tom.gom.adt.gom.types.SortDecl  t1,  tom.gom.adt.gom.types.TypedProduction  t2) { return  tom.gom.adt.gom.types.operatordecl.OperatorDecl.make(t0, t1, t2); }private static  String  tom_get_slot_OperatorDecl_Name( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t.getName()  ;}private static  tom.gom.adt.gom.types.SortDecl  tom_get_slot_OperatorDecl_Sort( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t.getSort()  ;}private static  tom.gom.adt.gom.types.TypedProduction  tom_get_slot_OperatorDecl_Prod( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t.getProd()  ;}private static boolean tom_is_fun_sym_Import( tom.gom.adt.gom.types.ImportedModule  t) {  return  t instanceof tom.gom.adt.gom.types.importedmodule.Import  ;}private static  tom.gom.adt.gom.types.GomModuleName  tom_get_slot_Import_ModuleName( tom.gom.adt.gom.types.ImportedModule  t) {  return  t.getModuleName()  ;}private static boolean tom_is_fun_sym_GomModule( tom.gom.adt.gom.types.GomModule  t) {  return  t instanceof tom.gom.adt.gom.types.gommodule.GomModule  ;}private static  tom.gom.adt.gom.types.GomModuleName  tom_get_slot_GomModule_ModuleName( tom.gom.adt.gom.types.GomModule  t) {  return  t.getModuleName()  ;}private static  tom.gom.adt.gom.types.SectionList  tom_get_slot_GomModule_SectionList( tom.gom.adt.gom.types.GomModule  t) {  return  t.getSectionList()  ;}private static  tom.gom.adt.gom.types.Module  tom_make_Module( tom.gom.adt.gom.types.ModuleDecl  t0,  tom.gom.adt.gom.types.SortList  t1) { return  tom.gom.adt.gom.types.module.Module.make(t0, t1); }private static boolean tom_is_fun_sym_Slots( tom.gom.adt.gom.types.TypedProduction  t) {  return  t instanceof tom.gom.adt.gom.types.typedproduction.Slots  ;}private static  tom.gom.adt.gom.types.TypedProduction  tom_make_Slots( tom.gom.adt.gom.types.SlotList  t0) { return  tom.gom.adt.gom.types.typedproduction.Slots.make(t0); }private static  tom.gom.adt.gom.types.SlotList  tom_get_slot_Slots_Slots( tom.gom.adt.gom.types.TypedProduction  t) {  return  t.getSlots()  ;}private static  tom.gom.adt.gom.types.TypedProduction  tom_make_Variadic( tom.gom.adt.gom.types.SortDecl  t0) { return  tom.gom.adt.gom.types.typedproduction.Variadic.make(t0); }private static boolean tom_is_fun_sym_concSlot( tom.gom.adt.gom.types.SlotList  t) {  return  t instanceof tom.gom.adt.gom.types.slotlist.ConsconcSlot || t instanceof tom.gom.adt.gom.types.slotlist.EmptyconcSlot  ;}private static  tom.gom.adt.gom.types.SlotList  tom_empty_list_concSlot() { return  tom.gom.adt.gom.types.slotlist.EmptyconcSlot.make() ; }private static  tom.gom.adt.gom.types.SlotList  tom_cons_list_concSlot( tom.gom.adt.gom.types.Slot  e,  tom.gom.adt.gom.types.SlotList  l) { return  tom.gom.adt.gom.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.gom.adt.gom.types.Slot  tom_get_head_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) {  return  l.getHeadconcSlot()  ;}private static  tom.gom.adt.gom.types.SlotList  tom_get_tail_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) {  return  l.getTailconcSlot()  ;}private static boolean tom_is_empty_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) {  return  l.isEmptyconcSlot()  ;}private static  tom.gom.adt.gom.types.SlotList  tom_append_list_concSlot( tom.gom.adt.gom.types.SlotList  l1,  tom.gom.adt.gom.types.SlotList  l2) {    if(tom_is_empty_concSlot_SlotList(l1)) {     return l2;    } else if(tom_is_empty_concSlot_SlotList(l2)) {     return l1;    } else if(tom_is_empty_concSlot_SlotList(( tom.gom.adt.gom.types.SlotList )tom_get_tail_concSlot_SlotList(l1))) {     return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(( tom.gom.adt.gom.types.Slot )tom_get_head_concSlot_SlotList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(( tom.gom.adt.gom.types.Slot )tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(( tom.gom.adt.gom.types.SlotList )tom_get_tail_concSlot_SlotList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.SlotList  tom_get_slice_concSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end) {    if(tom_terms_equal_SlotList(begin,end)) {      return ( tom.gom.adt.gom.types.SlotList )tom_empty_list_concSlot();    } else {      return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(( tom.gom.adt.gom.types.Slot )tom_get_head_concSlot_SlotList(begin),( tom.gom.adt.gom.types.SlotList )tom_get_slice_concSlot(( tom.gom.adt.gom.types.SlotList )tom_get_tail_concSlot_SlotList(begin),end));    }   }  private static boolean tom_is_fun_sym_concProduction( tom.gom.adt.gom.types.ProductionList  t) {  return  t instanceof tom.gom.adt.gom.types.productionlist.ConsconcProduction || t instanceof tom.gom.adt.gom.types.productionlist.EmptyconcProduction  ;}private static  tom.gom.adt.gom.types.ProductionList  tom_empty_list_concProduction() { return  tom.gom.adt.gom.types.productionlist.EmptyconcProduction.make() ; }private static  tom.gom.adt.gom.types.ProductionList  tom_cons_list_concProduction( tom.gom.adt.gom.types.Production  e,  tom.gom.adt.gom.types.ProductionList  l) { return  tom.gom.adt.gom.types.productionlist.ConsconcProduction.make(e,l) ; }private static  tom.gom.adt.gom.types.Production  tom_get_head_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.getHeadconcProduction()  ;}private static  tom.gom.adt.gom.types.ProductionList  tom_get_tail_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.getTailconcProduction()  ;}private static boolean tom_is_empty_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.isEmptyconcProduction()  ;}private static  tom.gom.adt.gom.types.ProductionList  tom_append_list_concProduction( tom.gom.adt.gom.types.ProductionList  l1,  tom.gom.adt.gom.types.ProductionList  l2) {    if(tom_is_empty_concProduction_ProductionList(l1)) {     return l2;    } else if(tom_is_empty_concProduction_ProductionList(l2)) {     return l1;    } else if(tom_is_empty_concProduction_ProductionList(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(l1))) {     return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(l1),tom_append_list_concProduction(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.ProductionList  tom_get_slice_concProduction( tom.gom.adt.gom.types.ProductionList  begin,  tom.gom.adt.gom.types.ProductionList  end) {    if(tom_terms_equal_ProductionList(begin,end)) {      return ( tom.gom.adt.gom.types.ProductionList )tom_empty_list_concProduction();    } else {      return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(begin),( tom.gom.adt.gom.types.ProductionList )tom_get_slice_concProduction(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSortDecl( tom.gom.adt.gom.types.SortDeclList  t) {  return  t instanceof tom.gom.adt.gom.types.sortdecllist.ConsconcSortDecl || t instanceof tom.gom.adt.gom.types.sortdecllist.EmptyconcSortDecl  ;}private static  tom.gom.adt.gom.types.SortDeclList  tom_empty_list_concSortDecl() { return  tom.gom.adt.gom.types.sortdecllist.EmptyconcSortDecl.make() ; }private static  tom.gom.adt.gom.types.SortDeclList  tom_cons_list_concSortDecl( tom.gom.adt.gom.types.SortDecl  e,  tom.gom.adt.gom.types.SortDeclList  l) { return  tom.gom.adt.gom.types.sortdecllist.ConsconcSortDecl.make(e,l) ; }private static  tom.gom.adt.gom.types.SortDecl  tom_get_head_concSortDecl_SortDeclList( tom.gom.adt.gom.types.SortDeclList  l) {  return  l.getHeadconcSortDecl()  ;}private static  tom.gom.adt.gom.types.SortDeclList  tom_get_tail_concSortDecl_SortDeclList( tom.gom.adt.gom.types.SortDeclList  l) {  return  l.getTailconcSortDecl()  ;}private static boolean tom_is_empty_concSortDecl_SortDeclList( tom.gom.adt.gom.types.SortDeclList  l) {  return  l.isEmptyconcSortDecl()  ;}private static  tom.gom.adt.gom.types.SortDeclList  tom_append_list_concSortDecl( tom.gom.adt.gom.types.SortDeclList  l1,  tom.gom.adt.gom.types.SortDeclList  l2) {    if(tom_is_empty_concSortDecl_SortDeclList(l1)) {     return l2;    } else if(tom_is_empty_concSortDecl_SortDeclList(l2)) {     return l1;    } else if(tom_is_empty_concSortDecl_SortDeclList(( tom.gom.adt.gom.types.SortDeclList )tom_get_tail_concSortDecl_SortDeclList(l1))) {     return ( tom.gom.adt.gom.types.SortDeclList )tom_cons_list_concSortDecl(( tom.gom.adt.gom.types.SortDecl )tom_get_head_concSortDecl_SortDeclList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SortDeclList )tom_cons_list_concSortDecl(( tom.gom.adt.gom.types.SortDecl )tom_get_head_concSortDecl_SortDeclList(l1),tom_append_list_concSortDecl(( tom.gom.adt.gom.types.SortDeclList )tom_get_tail_concSortDecl_SortDeclList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.SortDeclList  tom_get_slice_concSortDecl( tom.gom.adt.gom.types.SortDeclList  begin,  tom.gom.adt.gom.types.SortDeclList  end) {    if(tom_terms_equal_SortDeclList(begin,end)) {      return ( tom.gom.adt.gom.types.SortDeclList )tom_empty_list_concSortDecl();    } else {      return ( tom.gom.adt.gom.types.SortDeclList )tom_cons_list_concSortDecl(( tom.gom.adt.gom.types.SortDecl )tom_get_head_concSortDecl_SortDeclList(begin),( tom.gom.adt.gom.types.SortDeclList )tom_get_slice_concSortDecl(( tom.gom.adt.gom.types.SortDeclList )tom_get_tail_concSortDecl_SortDeclList(begin),end));    }   }  private static boolean tom_is_fun_sym_concGomModule( tom.gom.adt.gom.types.GomModuleList  t) {  return  t instanceof tom.gom.adt.gom.types.gommodulelist.ConsconcGomModule || t instanceof tom.gom.adt.gom.types.gommodulelist.EmptyconcGomModule  ;}private static  tom.gom.adt.gom.types.GomModuleList  tom_empty_list_concGomModule() { return  tom.gom.adt.gom.types.gommodulelist.EmptyconcGomModule.make() ; }private static  tom.gom.adt.gom.types.GomModuleList  tom_cons_list_concGomModule( tom.gom.adt.gom.types.GomModule  e,  tom.gom.adt.gom.types.GomModuleList  l) { return  tom.gom.adt.gom.types.gommodulelist.ConsconcGomModule.make(e,l) ; }private static  tom.gom.adt.gom.types.GomModule  tom_get_head_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) {  return  l.getHeadconcGomModule()  ;}private static  tom.gom.adt.gom.types.GomModuleList  tom_get_tail_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) {  return  l.getTailconcGomModule()  ;}private static boolean tom_is_empty_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) {  return  l.isEmptyconcGomModule()  ;}private static  tom.gom.adt.gom.types.GomModuleList  tom_append_list_concGomModule( tom.gom.adt.gom.types.GomModuleList  l1,  tom.gom.adt.gom.types.GomModuleList  l2) {    if(tom_is_empty_concGomModule_GomModuleList(l1)) {     return l2;    } else if(tom_is_empty_concGomModule_GomModuleList(l2)) {     return l1;    } else if(tom_is_empty_concGomModule_GomModuleList(( tom.gom.adt.gom.types.GomModuleList )tom_get_tail_concGomModule_GomModuleList(l1))) {     return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule(( tom.gom.adt.gom.types.GomModule )tom_get_head_concGomModule_GomModuleList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule(( tom.gom.adt.gom.types.GomModule )tom_get_head_concGomModule_GomModuleList(l1),tom_append_list_concGomModule(( tom.gom.adt.gom.types.GomModuleList )tom_get_tail_concGomModule_GomModuleList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.GomModuleList  tom_get_slice_concGomModule( tom.gom.adt.gom.types.GomModuleList  begin,  tom.gom.adt.gom.types.GomModuleList  end) {    if(tom_terms_equal_GomModuleList(begin,end)) {      return ( tom.gom.adt.gom.types.GomModuleList )tom_empty_list_concGomModule();    } else {      return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule(( tom.gom.adt.gom.types.GomModule )tom_get_head_concGomModule_GomModuleList(begin),( tom.gom.adt.gom.types.GomModuleList )tom_get_slice_concGomModule(( tom.gom.adt.gom.types.GomModuleList )tom_get_tail_concGomModule_GomModuleList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSection( tom.gom.adt.gom.types.SectionList  t) {  return  t instanceof tom.gom.adt.gom.types.sectionlist.ConsconcSection || t instanceof tom.gom.adt.gom.types.sectionlist.EmptyconcSection  ;}private static  tom.gom.adt.gom.types.SectionList  tom_empty_list_concSection() { return  tom.gom.adt.gom.types.sectionlist.EmptyconcSection.make() ; }private static  tom.gom.adt.gom.types.SectionList  tom_cons_list_concSection( tom.gom.adt.gom.types.Section  e,  tom.gom.adt.gom.types.SectionList  l) { return  tom.gom.adt.gom.types.sectionlist.ConsconcSection.make(e,l) ; }private static  tom.gom.adt.gom.types.Section  tom_get_head_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.getHeadconcSection()  ;}private static  tom.gom.adt.gom.types.SectionList  tom_get_tail_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.getTailconcSection()  ;}private static boolean tom_is_empty_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.isEmptyconcSection()  ;}private static  tom.gom.adt.gom.types.SectionList  tom_append_list_concSection( tom.gom.adt.gom.types.SectionList  l1,  tom.gom.adt.gom.types.SectionList  l2) {    if(tom_is_empty_concSection_SectionList(l1)) {     return l2;    } else if(tom_is_empty_concSection_SectionList(l2)) {     return l1;    } else if(tom_is_empty_concSection_SectionList(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(l1))) {     return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(l1),tom_append_list_concSection(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.SectionList  tom_get_slice_concSection( tom.gom.adt.gom.types.SectionList  begin,  tom.gom.adt.gom.types.SectionList  end) {    if(tom_terms_equal_SectionList(begin,end)) {      return ( tom.gom.adt.gom.types.SectionList )tom_empty_list_concSection();    } else {      return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(begin),( tom.gom.adt.gom.types.SectionList )tom_get_slice_concSection(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(begin),end));    }   }  private static boolean tom_is_fun_sym_concGrammar( tom.gom.adt.gom.types.GrammarList  t) {  return  t instanceof tom.gom.adt.gom.types.grammarlist.ConsconcGrammar || t instanceof tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar  ;}private static  tom.gom.adt.gom.types.GrammarList  tom_empty_list_concGrammar() { return  tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar.make() ; }private static  tom.gom.adt.gom.types.GrammarList  tom_cons_list_concGrammar( tom.gom.adt.gom.types.Grammar  e,  tom.gom.adt.gom.types.GrammarList  l) { return  tom.gom.adt.gom.types.grammarlist.ConsconcGrammar.make(e,l) ; }private static  tom.gom.adt.gom.types.Grammar  tom_get_head_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.getHeadconcGrammar()  ;}private static  tom.gom.adt.gom.types.GrammarList  tom_get_tail_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.getTailconcGrammar()  ;}private static boolean tom_is_empty_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.isEmptyconcGrammar()  ;}private static  tom.gom.adt.gom.types.GrammarList  tom_append_list_concGrammar( tom.gom.adt.gom.types.GrammarList  l1,  tom.gom.adt.gom.types.GrammarList  l2) {    if(tom_is_empty_concGrammar_GrammarList(l1)) {     return l2;    } else if(tom_is_empty_concGrammar_GrammarList(l2)) {     return l1;    } else if(tom_is_empty_concGrammar_GrammarList(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(l1))) {     return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(l1),tom_append_list_concGrammar(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.GrammarList  tom_get_slice_concGrammar( tom.gom.adt.gom.types.GrammarList  begin,  tom.gom.adt.gom.types.GrammarList  end) {    if(tom_terms_equal_GrammarList(begin,end)) {      return ( tom.gom.adt.gom.types.GrammarList )tom_empty_list_concGrammar();    } else {      return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(begin),( tom.gom.adt.gom.types.GrammarList )tom_get_slice_concGrammar(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(begin),end));    }   }  private static boolean tom_is_fun_sym_concModule( tom.gom.adt.gom.types.ModuleList  t) {  return  t instanceof tom.gom.adt.gom.types.modulelist.ConsconcModule || t instanceof tom.gom.adt.gom.types.modulelist.EmptyconcModule  ;}private static  tom.gom.adt.gom.types.ModuleList  tom_empty_list_concModule() { return  tom.gom.adt.gom.types.modulelist.EmptyconcModule.make() ; }private static  tom.gom.adt.gom.types.ModuleList  tom_cons_list_concModule( tom.gom.adt.gom.types.Module  e,  tom.gom.adt.gom.types.ModuleList  l) { return  tom.gom.adt.gom.types.modulelist.ConsconcModule.make(e,l) ; }private static  tom.gom.adt.gom.types.Module  tom_get_head_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) {  return  l.getHeadconcModule()  ;}private static  tom.gom.adt.gom.types.ModuleList  tom_get_tail_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) {  return  l.getTailconcModule()  ;}private static boolean tom_is_empty_concModule_ModuleList( tom.gom.adt.gom.types.ModuleList  l) {  return  l.isEmptyconcModule()  ;}private static  tom.gom.adt.gom.types.ModuleList  tom_append_list_concModule( tom.gom.adt.gom.types.ModuleList  l1,  tom.gom.adt.gom.types.ModuleList  l2) {    if(tom_is_empty_concModule_ModuleList(l1)) {     return l2;    } else if(tom_is_empty_concModule_ModuleList(l2)) {     return l1;    } else if(tom_is_empty_concModule_ModuleList(( tom.gom.adt.gom.types.ModuleList )tom_get_tail_concModule_ModuleList(l1))) {     return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(( tom.gom.adt.gom.types.Module )tom_get_head_concModule_ModuleList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(( tom.gom.adt.gom.types.Module )tom_get_head_concModule_ModuleList(l1),tom_append_list_concModule(( tom.gom.adt.gom.types.ModuleList )tom_get_tail_concModule_ModuleList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.ModuleList  tom_get_slice_concModule( tom.gom.adt.gom.types.ModuleList  begin,  tom.gom.adt.gom.types.ModuleList  end) {    if(tom_terms_equal_ModuleList(begin,end)) {      return ( tom.gom.adt.gom.types.ModuleList )tom_empty_list_concModule();    } else {      return ( tom.gom.adt.gom.types.ModuleList )tom_cons_list_concModule(( tom.gom.adt.gom.types.Module )tom_get_head_concModule_ModuleList(begin),( tom.gom.adt.gom.types.ModuleList )tom_get_slice_concModule(( tom.gom.adt.gom.types.ModuleList )tom_get_tail_concModule_ModuleList(begin),end));    }   }  private static boolean tom_is_fun_sym_concOperator( tom.gom.adt.gom.types.OperatorDeclList  t) {  return  t instanceof tom.gom.adt.gom.types.operatordecllist.ConsconcOperator || t instanceof tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator  ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_empty_list_concOperator() { return  tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator.make() ; }private static  tom.gom.adt.gom.types.OperatorDeclList  tom_cons_list_concOperator( tom.gom.adt.gom.types.OperatorDecl  e,  tom.gom.adt.gom.types.OperatorDeclList  l) { return  tom.gom.adt.gom.types.operatordecllist.ConsconcOperator.make(e,l) ; }private static  tom.gom.adt.gom.types.OperatorDecl  tom_get_head_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) {  return  l.getHeadconcOperator()  ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_tail_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) {  return  l.getTailconcOperator()  ;}private static boolean tom_is_empty_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) {  return  l.isEmptyconcOperator()  ;}private static  tom.gom.adt.gom.types.OperatorDeclList  tom_append_list_concOperator( tom.gom.adt.gom.types.OperatorDeclList  l1,  tom.gom.adt.gom.types.OperatorDeclList  l2) {    if(tom_is_empty_concOperator_OperatorDeclList(l1)) {     return l2;    } else if(tom_is_empty_concOperator_OperatorDeclList(l2)) {     return l1;    } else if(tom_is_empty_concOperator_OperatorDeclList(( tom.gom.adt.gom.types.OperatorDeclList )tom_get_tail_concOperator_OperatorDeclList(l1))) {     return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(( tom.gom.adt.gom.types.OperatorDecl )tom_get_head_concOperator_OperatorDeclList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(( tom.gom.adt.gom.types.OperatorDecl )tom_get_head_concOperator_OperatorDeclList(l1),tom_append_list_concOperator(( tom.gom.adt.gom.types.OperatorDeclList )tom_get_tail_concOperator_OperatorDeclList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.OperatorDeclList  tom_get_slice_concOperator( tom.gom.adt.gom.types.OperatorDeclList  begin,  tom.gom.adt.gom.types.OperatorDeclList  end) {    if(tom_terms_equal_OperatorDeclList(begin,end)) {      return ( tom.gom.adt.gom.types.OperatorDeclList )tom_empty_list_concOperator();    } else {      return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(( tom.gom.adt.gom.types.OperatorDecl )tom_get_head_concOperator_OperatorDeclList(begin),( tom.gom.adt.gom.types.OperatorDeclList )tom_get_slice_concOperator(( tom.gom.adt.gom.types.OperatorDeclList )tom_get_tail_concOperator_OperatorDeclList(begin),end));    }   }  private static boolean tom_is_fun_sym_concField( tom.gom.adt.gom.types.FieldList  t) {  return  t instanceof tom.gom.adt.gom.types.fieldlist.ConsconcField || t instanceof tom.gom.adt.gom.types.fieldlist.EmptyconcField  ;}private static  tom.gom.adt.gom.types.FieldList  tom_empty_list_concField() { return  tom.gom.adt.gom.types.fieldlist.EmptyconcField.make() ; }private static  tom.gom.adt.gom.types.FieldList  tom_cons_list_concField( tom.gom.adt.gom.types.Field  e,  tom.gom.adt.gom.types.FieldList  l) { return  tom.gom.adt.gom.types.fieldlist.ConsconcField.make(e,l) ; }private static  tom.gom.adt.gom.types.Field  tom_get_head_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) {  return  l.getHeadconcField()  ;}private static  tom.gom.adt.gom.types.FieldList  tom_get_tail_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) {  return  l.getTailconcField()  ;}private static boolean tom_is_empty_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) {  return  l.isEmptyconcField()  ;}private static  tom.gom.adt.gom.types.FieldList  tom_append_list_concField( tom.gom.adt.gom.types.FieldList  l1,  tom.gom.adt.gom.types.FieldList  l2) {    if(tom_is_empty_concField_FieldList(l1)) {     return l2;    } else if(tom_is_empty_concField_FieldList(l2)) {     return l1;    } else if(tom_is_empty_concField_FieldList(( tom.gom.adt.gom.types.FieldList )tom_get_tail_concField_FieldList(l1))) {     return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(( tom.gom.adt.gom.types.Field )tom_get_head_concField_FieldList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(( tom.gom.adt.gom.types.Field )tom_get_head_concField_FieldList(l1),tom_append_list_concField(( tom.gom.adt.gom.types.FieldList )tom_get_tail_concField_FieldList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.FieldList  tom_get_slice_concField( tom.gom.adt.gom.types.FieldList  begin,  tom.gom.adt.gom.types.FieldList  end) {    if(tom_terms_equal_FieldList(begin,end)) {      return ( tom.gom.adt.gom.types.FieldList )tom_empty_list_concField();    } else {      return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(( tom.gom.adt.gom.types.Field )tom_get_head_concField_FieldList(begin),( tom.gom.adt.gom.types.FieldList )tom_get_slice_concField(( tom.gom.adt.gom.types.FieldList )tom_get_tail_concField_FieldList(begin),end));    }   }  private static boolean tom_is_fun_sym_concModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  t) {  return  t instanceof tom.gom.adt.gom.types.moduledecllist.ConsconcModuleDecl || t instanceof tom.gom.adt.gom.types.moduledecllist.EmptyconcModuleDecl  ;}private static  tom.gom.adt.gom.types.ModuleDeclList  tom_empty_list_concModuleDecl() { return  tom.gom.adt.gom.types.moduledecllist.EmptyconcModuleDecl.make() ; }private static  tom.gom.adt.gom.types.ModuleDeclList  tom_cons_list_concModuleDecl( tom.gom.adt.gom.types.ModuleDecl  e,  tom.gom.adt.gom.types.ModuleDeclList  l) { return  tom.gom.adt.gom.types.moduledecllist.ConsconcModuleDecl.make(e,l) ; }private static  tom.gom.adt.gom.types.ModuleDecl  tom_get_head_concModuleDecl_ModuleDeclList( tom.gom.adt.gom.types.ModuleDeclList  l) {  return  l.getHeadconcModuleDecl()  ;}private static  tom.gom.adt.gom.types.ModuleDeclList  tom_get_tail_concModuleDecl_ModuleDeclList( tom.gom.adt.gom.types.ModuleDeclList  l) {  return  l.getTailconcModuleDecl()  ;}private static boolean tom_is_empty_concModuleDecl_ModuleDeclList( tom.gom.adt.gom.types.ModuleDeclList  l) {  return  l.isEmptyconcModuleDecl()  ;}private static  tom.gom.adt.gom.types.ModuleDeclList  tom_append_list_concModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  l1,  tom.gom.adt.gom.types.ModuleDeclList  l2) {    if(tom_is_empty_concModuleDecl_ModuleDeclList(l1)) {     return l2;    } else if(tom_is_empty_concModuleDecl_ModuleDeclList(l2)) {     return l1;    } else if(tom_is_empty_concModuleDecl_ModuleDeclList(( tom.gom.adt.gom.types.ModuleDeclList )tom_get_tail_concModuleDecl_ModuleDeclList(l1))) {     return ( tom.gom.adt.gom.types.ModuleDeclList )tom_cons_list_concModuleDecl(( tom.gom.adt.gom.types.ModuleDecl )tom_get_head_concModuleDecl_ModuleDeclList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ModuleDeclList )tom_cons_list_concModuleDecl(( tom.gom.adt.gom.types.ModuleDecl )tom_get_head_concModuleDecl_ModuleDeclList(l1),tom_append_list_concModuleDecl(( tom.gom.adt.gom.types.ModuleDeclList )tom_get_tail_concModuleDecl_ModuleDeclList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.ModuleDeclList  tom_get_slice_concModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  begin,  tom.gom.adt.gom.types.ModuleDeclList  end) {    if(tom_terms_equal_ModuleDeclList(begin,end)) {      return ( tom.gom.adt.gom.types.ModuleDeclList )tom_empty_list_concModuleDecl();    } else {      return ( tom.gom.adt.gom.types.ModuleDeclList )tom_cons_list_concModuleDecl(( tom.gom.adt.gom.types.ModuleDecl )tom_get_head_concModuleDecl_ModuleDeclList(begin),( tom.gom.adt.gom.types.ModuleDeclList )tom_get_slice_concModuleDecl(( tom.gom.adt.gom.types.ModuleDeclList )tom_get_tail_concModuleDecl_ModuleDeclList(begin),end));    }   }  private static boolean tom_is_fun_sym_concImportedModule( tom.gom.adt.gom.types.ImportList  t) {  return  t instanceof tom.gom.adt.gom.types.importlist.ConsconcImportedModule || t instanceof tom.gom.adt.gom.types.importlist.EmptyconcImportedModule  ;}private static  tom.gom.adt.gom.types.ImportList  tom_empty_list_concImportedModule() { return  tom.gom.adt.gom.types.importlist.EmptyconcImportedModule.make() ; }private static  tom.gom.adt.gom.types.ImportList  tom_cons_list_concImportedModule( tom.gom.adt.gom.types.ImportedModule  e,  tom.gom.adt.gom.types.ImportList  l) { return  tom.gom.adt.gom.types.importlist.ConsconcImportedModule.make(e,l) ; }private static  tom.gom.adt.gom.types.ImportedModule  tom_get_head_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) {  return  l.getHeadconcImportedModule()  ;}private static  tom.gom.adt.gom.types.ImportList  tom_get_tail_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) {  return  l.getTailconcImportedModule()  ;}private static boolean tom_is_empty_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) {  return  l.isEmptyconcImportedModule()  ;}private static  tom.gom.adt.gom.types.ImportList  tom_append_list_concImportedModule( tom.gom.adt.gom.types.ImportList  l1,  tom.gom.adt.gom.types.ImportList  l2) {    if(tom_is_empty_concImportedModule_ImportList(l1)) {     return l2;    } else if(tom_is_empty_concImportedModule_ImportList(l2)) {     return l1;    } else if(tom_is_empty_concImportedModule_ImportList(( tom.gom.adt.gom.types.ImportList )tom_get_tail_concImportedModule_ImportList(l1))) {     return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(( tom.gom.adt.gom.types.ImportedModule )tom_get_head_concImportedModule_ImportList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(( tom.gom.adt.gom.types.ImportedModule )tom_get_head_concImportedModule_ImportList(l1),tom_append_list_concImportedModule(( tom.gom.adt.gom.types.ImportList )tom_get_tail_concImportedModule_ImportList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.ImportList  tom_get_slice_concImportedModule( tom.gom.adt.gom.types.ImportList  begin,  tom.gom.adt.gom.types.ImportList  end) {    if(tom_terms_equal_ImportList(begin,end)) {      return ( tom.gom.adt.gom.types.ImportList )tom_empty_list_concImportedModule();    } else {      return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(( tom.gom.adt.gom.types.ImportedModule )tom_get_head_concImportedModule_ImportList(begin),( tom.gom.adt.gom.types.ImportList )tom_get_slice_concImportedModule(( tom.gom.adt.gom.types.ImportList )tom_get_tail_concImportedModule_ImportList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSort( tom.gom.adt.gom.types.SortList  t) {  return  t instanceof tom.gom.adt.gom.types.sortlist.ConsconcSort || t instanceof tom.gom.adt.gom.types.sortlist.EmptyconcSort  ;}private static  tom.gom.adt.gom.types.SortList  tom_empty_list_concSort() { return  tom.gom.adt.gom.types.sortlist.EmptyconcSort.make() ; }private static  tom.gom.adt.gom.types.SortList  tom_cons_list_concSort( tom.gom.adt.gom.types.Sort  e,  tom.gom.adt.gom.types.SortList  l) { return  tom.gom.adt.gom.types.sortlist.ConsconcSort.make(e,l) ; }private static  tom.gom.adt.gom.types.Sort  tom_get_head_concSort_SortList( tom.gom.adt.gom.types.SortList  l) {  return  l.getHeadconcSort()  ;}private static  tom.gom.adt.gom.types.SortList  tom_get_tail_concSort_SortList( tom.gom.adt.gom.types.SortList  l) {  return  l.getTailconcSort()  ;}private static boolean tom_is_empty_concSort_SortList( tom.gom.adt.gom.types.SortList  l) {  return  l.isEmptyconcSort()  ;}private static  tom.gom.adt.gom.types.SortList  tom_append_list_concSort( tom.gom.adt.gom.types.SortList  l1,  tom.gom.adt.gom.types.SortList  l2) {    if(tom_is_empty_concSort_SortList(l1)) {     return l2;    } else if(tom_is_empty_concSort_SortList(l2)) {     return l1;    } else if(tom_is_empty_concSort_SortList(( tom.gom.adt.gom.types.SortList )tom_get_tail_concSort_SortList(l1))) {     return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(( tom.gom.adt.gom.types.Sort )tom_get_head_concSort_SortList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(( tom.gom.adt.gom.types.Sort )tom_get_head_concSort_SortList(l1),tom_append_list_concSort(( tom.gom.adt.gom.types.SortList )tom_get_tail_concSort_SortList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.SortList  tom_get_slice_concSort( tom.gom.adt.gom.types.SortList  begin,  tom.gom.adt.gom.types.SortList  end) {    if(tom_terms_equal_SortList(begin,end)) {      return ( tom.gom.adt.gom.types.SortList )tom_empty_list_concSort();    } else {      return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(( tom.gom.adt.gom.types.Sort )tom_get_head_concSort_SortList(begin),( tom.gom.adt.gom.types.SortList )tom_get_slice_concSort(( tom.gom.adt.gom.types.SortList )tom_get_tail_concSort_SortList(begin),end));    }   }  private static boolean tom_is_fun_sym_concGomType( tom.gom.adt.gom.types.GomTypeList  t) {  return  t instanceof tom.gom.adt.gom.types.gomtypelist.ConsconcGomType || t instanceof tom.gom.adt.gom.types.gomtypelist.EmptyconcGomType  ;}private static  tom.gom.adt.gom.types.GomTypeList  tom_empty_list_concGomType() { return  tom.gom.adt.gom.types.gomtypelist.EmptyconcGomType.make() ; }private static  tom.gom.adt.gom.types.GomTypeList  tom_cons_list_concGomType( tom.gom.adt.gom.types.GomType  e,  tom.gom.adt.gom.types.GomTypeList  l) { return  tom.gom.adt.gom.types.gomtypelist.ConsconcGomType.make(e,l) ; }private static  tom.gom.adt.gom.types.GomType  tom_get_head_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) {  return  l.getHeadconcGomType()  ;}private static  tom.gom.adt.gom.types.GomTypeList  tom_get_tail_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) {  return  l.getTailconcGomType()  ;}private static boolean tom_is_empty_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) {  return  l.isEmptyconcGomType()  ;}private static  tom.gom.adt.gom.types.GomTypeList  tom_append_list_concGomType( tom.gom.adt.gom.types.GomTypeList  l1,  tom.gom.adt.gom.types.GomTypeList  l2) {    if(tom_is_empty_concGomType_GomTypeList(l1)) {     return l2;    } else if(tom_is_empty_concGomType_GomTypeList(l2)) {     return l1;    } else if(tom_is_empty_concGomType_GomTypeList(( tom.gom.adt.gom.types.GomTypeList )tom_get_tail_concGomType_GomTypeList(l1))) {     return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(( tom.gom.adt.gom.types.GomType )tom_get_head_concGomType_GomTypeList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(( tom.gom.adt.gom.types.GomType )tom_get_head_concGomType_GomTypeList(l1),tom_append_list_concGomType(( tom.gom.adt.gom.types.GomTypeList )tom_get_tail_concGomType_GomTypeList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.GomTypeList  tom_get_slice_concGomType( tom.gom.adt.gom.types.GomTypeList  begin,  tom.gom.adt.gom.types.GomTypeList  end) {    if(tom_terms_equal_GomTypeList(begin,end)) {      return ( tom.gom.adt.gom.types.GomTypeList )tom_empty_list_concGomType();    } else {      return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(( tom.gom.adt.gom.types.GomType )tom_get_head_concGomType_GomTypeList(begin),( tom.gom.adt.gom.types.GomTypeList )tom_get_slice_concGomType(( tom.gom.adt.gom.types.GomTypeList )tom_get_tail_concGomType_GomTypeList(begin),end));    }   }   

  private String packagePath;
  private GomEnvironment environment() {
    return GomEnvironment.getInstance();
  }

  public TypeExpander(String packagePath) {
    this.packagePath = packagePath;
  }
  /**
    * We try here to get full sort definitions for each constructs
    * Once the structure is correctly build, we can attach the hooks
    */
  public ModuleList expand(GomModuleList moduleList) {

    /* put a map giving all imported modules for each module in the path */
    buildDependencyMap(moduleList);

    /* collect all sort declarations */
    SortDeclList sortDeclList = tom_empty_list_concSortDecl();
    /* The sorts declared in each module */
    Map sortsForModule = new HashMap();
    GomModuleList consum = moduleList;
    while(!consum.isEmptyconcGomModule()) {
      GomModule module = consum.getHeadconcGomModule();
      consum = consum.getTailconcGomModule();

      Collection decls = getSortDeclarations(module);
      Collection implicitdecls = getSortDeclarationInCodomain(module);

      /* Check that there are no implicit sort declarations
       * Also, check that declared sorts have at least an operator
       */
      if(!decls.containsAll(implicitdecls)) {
        // whine about non declared sorts
        Collection undeclaredSorts = new HashSet();
        undeclaredSorts.addAll(implicitdecls);
        undeclaredSorts.removeAll(decls);
        getLogger().log(Level.WARNING, GomMessage.undeclaredSorts.getMessage(),
            new Object[]{showSortList(undeclaredSorts)});
      }
      if(!implicitdecls.containsAll(decls)) {
        // whine about sorts without operators: this is a real error
        Collection emptySorts = new HashSet();
        emptySorts.addAll(decls);
        emptySorts.removeAll(implicitdecls);
        getLogger().log(Level.SEVERE, GomMessage.emptySorts.getMessage(),
            new Object[]{showSortList(emptySorts)});
        return tom_empty_list_concModule();
      }
      Iterator it = implicitdecls.iterator();
      while(it.hasNext()) {
        SortDecl decl = (SortDecl)it.next();
        sortDeclList = tom_cons_list_concSortDecl(decl,tom_append_list_concSortDecl(sortDeclList,tom_empty_list_concSortDecl()));
      }
      /* Fills sortsForModule */
      it = decls.iterator();
      SortDeclList declaredSorts = tom_empty_list_concSortDecl();
      while(it.hasNext()) {
        SortDecl decl = (SortDecl)it.next();
        declaredSorts = tom_cons_list_concSortDecl(decl,tom_append_list_concSortDecl(declaredSorts,tom_empty_list_concSortDecl()));
      }
      ModuleDecl mdecl = tom_make_ModuleDecl(module.getModuleName(),packagePath);
      sortsForModule.put(mdecl,declaredSorts);
    }

    /* now get all operators for each sort */
    Map operatorsForSort = new HashMap();
    Map hooksForSort = new HashMap();
    consum = moduleList;
    while(!consum.isEmptyconcGomModule()) {
      GomModule module = consum.getHeadconcGomModule();
      consum = consum.getTailconcGomModule();

      // iterate through the productions
       if(module instanceof  tom.gom.adt.gom.types.GomModule ) { { tom.gom.adt.gom.types.GomModule  tom_match1_1=(( tom.gom.adt.gom.types.GomModule )module); if ( ( tom_is_fun_sym_GomModule(tom_match1_1) ||  false  ) ) { { tom.gom.adt.gom.types.SectionList  tom_match1_1_SectionList=tom_get_slot_GomModule_SectionList(tom_match1_1); if ( ( tom_is_fun_sym_concSection(tom_match1_1_SectionList) ||  false  ) ) { { tom.gom.adt.gom.types.SectionList  tom_match1_1_SectionList_list1=tom_match1_1_SectionList; { tom.gom.adt.gom.types.SectionList  tom_match1_1_SectionList_begin1=tom_match1_1_SectionList_list1; { tom.gom.adt.gom.types.SectionList  tom_match1_1_SectionList_end1=tom_match1_1_SectionList_list1; { while (!(tom_is_empty_concSection_SectionList(tom_match1_1_SectionList_end1))) {tom_match1_1_SectionList_list1=tom_match1_1_SectionList_end1; { { tom.gom.adt.gom.types.SectionList  tom_match1_1_SectionList_end2=tom_match1_1_SectionList_list1; { { tom.gom.adt.gom.types.Section  tom_match1_1_SectionList_2=tom_get_head_concSection_SectionList(tom_match1_1_SectionList_list1);tom_match1_1_SectionList_list1=tom_get_tail_concSection_SectionList(tom_match1_1_SectionList_list1); if ( ( tom_is_fun_sym_Public(tom_match1_1_SectionList_2) ||  false  ) ) { { tom.gom.adt.gom.types.GrammarList  tom_match1_1_SectionList_2_GrammarList=tom_get_slot_Public_GrammarList(tom_match1_1_SectionList_2); if ( ( tom_is_fun_sym_concGrammar(tom_match1_1_SectionList_2_GrammarList) ||  false  ) ) { { tom.gom.adt.gom.types.GrammarList  tom_match1_1_SectionList_2_GrammarList_list1=tom_match1_1_SectionList_2_GrammarList; { tom.gom.adt.gom.types.GrammarList  tom_match1_1_SectionList_2_GrammarList_begin1=tom_match1_1_SectionList_2_GrammarList_list1; { tom.gom.adt.gom.types.GrammarList  tom_match1_1_SectionList_2_GrammarList_end1=tom_match1_1_SectionList_2_GrammarList_list1; { while (!(tom_is_empty_concGrammar_GrammarList(tom_match1_1_SectionList_2_GrammarList_end1))) {tom_match1_1_SectionList_2_GrammarList_list1=tom_match1_1_SectionList_2_GrammarList_end1; { { tom.gom.adt.gom.types.GrammarList  tom_match1_1_SectionList_2_GrammarList_end2=tom_match1_1_SectionList_2_GrammarList_list1; { { tom.gom.adt.gom.types.Grammar  tom_match1_1_SectionList_2_GrammarList_2=tom_get_head_concGrammar_GrammarList(tom_match1_1_SectionList_2_GrammarList_list1);tom_match1_1_SectionList_2_GrammarList_list1=tom_get_tail_concGrammar_GrammarList(tom_match1_1_SectionList_2_GrammarList_list1); if ( ( tom_is_fun_sym_Grammar(tom_match1_1_SectionList_2_GrammarList_2) ||  false  ) ) { { tom.gom.adt.gom.types.ProductionList  tom_match1_1_SectionList_2_GrammarList_2_ProductionList=tom_get_slot_Grammar_ProductionList(tom_match1_1_SectionList_2_GrammarList_2); if ( ( tom_is_fun_sym_concProduction(tom_match1_1_SectionList_2_GrammarList_2_ProductionList) ||  false  ) ) { { tom.gom.adt.gom.types.ProductionList  tom_match1_1_SectionList_2_GrammarList_2_ProductionList_list1=tom_match1_1_SectionList_2_GrammarList_2_ProductionList; { tom.gom.adt.gom.types.ProductionList  tom_match1_1_SectionList_2_GrammarList_2_ProductionList_begin1=tom_match1_1_SectionList_2_GrammarList_2_ProductionList_list1; { tom.gom.adt.gom.types.ProductionList  tom_match1_1_SectionList_2_GrammarList_2_ProductionList_end1=tom_match1_1_SectionList_2_GrammarList_2_ProductionList_list1; { while (!(tom_is_empty_concProduction_ProductionList(tom_match1_1_SectionList_2_GrammarList_2_ProductionList_end1))) {tom_match1_1_SectionList_2_GrammarList_2_ProductionList_list1=tom_match1_1_SectionList_2_GrammarList_2_ProductionList_end1; { { tom.gom.adt.gom.types.ProductionList  tom_match1_1_SectionList_2_GrammarList_2_ProductionList_end2=tom_match1_1_SectionList_2_GrammarList_2_ProductionList_list1; { { tom.gom.adt.gom.types.Production  tom_match1_1_SectionList_2_GrammarList_2_ProductionList_2=tom_get_head_concProduction_ProductionList(tom_match1_1_SectionList_2_GrammarList_2_ProductionList_list1);tom_match1_1_SectionList_2_GrammarList_2_ProductionList_list1=tom_get_tail_concProduction_ProductionList(tom_match1_1_SectionList_2_GrammarList_2_ProductionList_list1); if ( ( tom_is_fun_sym_Production(tom_match1_1_SectionList_2_GrammarList_2_ProductionList_2) ||  false  ) ) { { tom.gom.adt.gom.types.Production  tom_prod=tom_match1_1_SectionList_2_GrammarList_2_ProductionList_2; if ( true ) {



          // we may want to pass modulename to help resolve ambiguities with modules
          getOperatorDecl(tom_prod,sortDeclList,operatorsForSort);

         } } } }tom_match1_1_SectionList_2_GrammarList_2_ProductionList_list1=tom_match1_1_SectionList_2_GrammarList_2_ProductionList_end2; } }tom_match1_1_SectionList_2_GrammarList_2_ProductionList_end1=tom_get_tail_concProduction_ProductionList(tom_match1_1_SectionList_2_GrammarList_2_ProductionList_end1); } }tom_match1_1_SectionList_2_GrammarList_2_ProductionList_list1=tom_match1_1_SectionList_2_GrammarList_2_ProductionList_begin1; } } } } } } } }tom_match1_1_SectionList_2_GrammarList_list1=tom_match1_1_SectionList_2_GrammarList_end2; } }tom_match1_1_SectionList_2_GrammarList_end1=tom_get_tail_concGrammar_GrammarList(tom_match1_1_SectionList_2_GrammarList_end1); } }tom_match1_1_SectionList_2_GrammarList_list1=tom_match1_1_SectionList_2_GrammarList_begin1; } } } } } } } }tom_match1_1_SectionList_list1=tom_match1_1_SectionList_end2; } }tom_match1_1_SectionList_end1=tom_get_tail_concSection_SectionList(tom_match1_1_SectionList_end1); } }tom_match1_1_SectionList_list1=tom_match1_1_SectionList_begin1; } } } } } } } } }

    }

    /*
     * build the module list using the map
     * since we already checked that the declared and used sorts do match, we
     * can use the map alone
     */
    ModuleList resultModuleList = tom_empty_list_concModule();
    Iterator it = sortsForModule.entrySet().iterator();
    while(it.hasNext()) {
      Map.Entry entry = (Map.Entry) it.next();
      ModuleDecl mdecl = (ModuleDecl) entry.getKey();
      SortDeclList sdeclList = (SortDeclList) entry.getValue();
      SortList sortList = tom_empty_list_concSort();
       if(sdeclList instanceof  tom.gom.adt.gom.types.SortDeclList ) { { tom.gom.adt.gom.types.SortDeclList  tom_match2_1=(( tom.gom.adt.gom.types.SortDeclList )sdeclList); if ( ( tom_is_fun_sym_concSortDecl(tom_match2_1) ||  false  ) ) { { tom.gom.adt.gom.types.SortDeclList  tom_match2_1_list1=tom_match2_1; { tom.gom.adt.gom.types.SortDeclList  tom_match2_1_begin1=tom_match2_1_list1; { tom.gom.adt.gom.types.SortDeclList  tom_match2_1_end1=tom_match2_1_list1; { while (!(tom_is_empty_concSortDecl_SortDeclList(tom_match2_1_end1))) {tom_match2_1_list1=tom_match2_1_end1; { { tom.gom.adt.gom.types.SortDeclList  tom_match2_1_end2=tom_match2_1_list1; { { tom.gom.adt.gom.types.SortDecl  tom_sdecl=tom_get_head_concSortDecl_SortDeclList(tom_match2_1_list1);tom_match2_1_list1=tom_get_tail_concSortDecl_SortDeclList(tom_match2_1_list1); if ( true ) {

          OperatorDeclList opdecl = (OperatorDeclList)
            operatorsForSort.get(tom_sdecl);
          Sort fullSort = tom_make_Sort(tom_sdecl,opdecl);
          if(checkSortValidity(fullSort)) {
            sortList = tom_cons_list_concSort(fullSort,tom_append_list_concSort(sortList,tom_empty_list_concSort()));
          }
         } }tom_match2_1_list1=tom_match2_1_end2; } }tom_match2_1_end1=tom_get_tail_concSortDecl_SortDeclList(tom_match2_1_end1); } }tom_match2_1_list1=tom_match2_1_begin1; } } } } } } }

      resultModuleList = tom_cons_list_concModule(tom_make_Module(mdecl,sortList),tom_append_list_concModule(resultModuleList,tom_empty_list_concModule()))

;
    }
    return resultModuleList;
  }

  /*
   * Get an OperatorDecl from a Production, using the list of sort declarations
   * XXX: There is huge room for efficiency improvement, as we could use a map
   * sortName -> sortDeclList instead of a simple list
   */
  private OperatorDecl getOperatorDecl(Production prod,
      SortDeclList sortDeclList,
      Map operatorsForSort) {

     if(prod instanceof  tom.gom.adt.gom.types.Production ) { { tom.gom.adt.gom.types.Production  tom_match3_1=(( tom.gom.adt.gom.types.Production )prod); if ( ( tom_is_fun_sym_Production(tom_match3_1) ||  false  ) ) { { tom.gom.adt.gom.types.GomType  tom_match3_1_Codomain=tom_get_slot_Production_Codomain(tom_match3_1); { String  tom_name=tom_get_slot_Production_Name(tom_match3_1); { tom.gom.adt.gom.types.FieldList  tom_domain=tom_get_slot_Production_Domain(tom_match3_1); if ( ( tom_is_fun_sym_GomType(tom_match3_1_Codomain) ||  false  ) ) { { String  tom_codomain=tom_get_slot_GomType_Name(tom_match3_1_Codomain); if ( true ) {

        SortDecl codomainSort = declFromTypename(tom_codomain,sortDeclList);
        TypedProduction domainSorts = typedProduction(tom_domain,sortDeclList);
        OperatorDecl decl = tom_make_OperatorDecl(tom_name,codomainSort,domainSorts);
        if (operatorsForSort.containsKey(codomainSort)) {
          OperatorDeclList list = (OperatorDeclList) operatorsForSort.get(codomainSort);
          operatorsForSort.put(codomainSort,tom_cons_list_concOperator(decl,tom_append_list_concOperator(list,tom_empty_list_concOperator())));
        } else {
          operatorsForSort.put(codomainSort,tom_cons_list_concOperator(decl,tom_empty_list_concOperator()));
        }
        return decl;
       } } } } } } } } }

    throw new GomRuntimeException(
        "TypeExpander::getOperatorDecl: wrong Production?");
  }

  private SortDecl declFromTypename(String typename,
                                    SortDeclList sortDeclList) {
    if (environment().isBuiltinSort(typename)) {
      return environment().builtinSort(typename);
    }
     if(sortDeclList instanceof  tom.gom.adt.gom.types.SortDeclList ) { { tom.gom.adt.gom.types.SortDeclList  tom_match4_1=(( tom.gom.adt.gom.types.SortDeclList )sortDeclList); if ( ( tom_is_fun_sym_concSortDecl(tom_match4_1) ||  false  ) ) { { tom.gom.adt.gom.types.SortDeclList  tom_match4_1_list1=tom_match4_1; { tom.gom.adt.gom.types.SortDeclList  tom_match4_1_begin1=tom_match4_1_list1; { tom.gom.adt.gom.types.SortDeclList  tom_match4_1_end1=tom_match4_1_list1; { while (!(tom_is_empty_concSortDecl_SortDeclList(tom_match4_1_end1))) {tom_match4_1_list1=tom_match4_1_end1; { { tom.gom.adt.gom.types.SortDeclList  tom_match4_1_end2=tom_match4_1_list1; { { tom.gom.adt.gom.types.SortDecl  tom_match4_1_2=tom_get_head_concSortDecl_SortDeclList(tom_match4_1_list1);tom_match4_1_list1=tom_get_tail_concSortDecl_SortDeclList(tom_match4_1_list1); if ( ( tom_is_fun_sym_SortDecl(tom_match4_1_2) ||  false  ) ) { { String  tom_name=tom_get_slot_SortDecl_Name(tom_match4_1_2); { tom.gom.adt.gom.types.SortDecl  tom_sortdecl=tom_match4_1_2; if ( true ) {

        if (typename.equals(tom_name)) {
          return tom_sortdecl;
        }
       } } } } }tom_match4_1_list1=tom_match4_1_end2; } }tom_match4_1_end1=tom_get_tail_concSortDecl_SortDeclList(tom_match4_1_end1); } }tom_match4_1_list1=tom_match4_1_begin1; } } } } } } }

    getLogger().log(Level.SEVERE, GomMessage.unknownSort.getMessage(),
        new Object[]{typename});
    /* If the sort is not known, assume it is a builtin */
    return tom_make_BuiltinSortDecl(typename);
  }

  TypedProduction typedProduction(FieldList domain, SortDeclList sortDeclList) {
     if(domain instanceof  tom.gom.adt.gom.types.FieldList ) { { tom.gom.adt.gom.types.FieldList  tom_match5_1=(( tom.gom.adt.gom.types.FieldList )domain); if ( ( tom_is_fun_sym_concField(tom_match5_1) ||  false  ) ) { { tom.gom.adt.gom.types.FieldList  tom_match5_1_list1=tom_match5_1; { tom.gom.adt.gom.types.FieldList  tom_match5_1_end1=tom_match5_1_list1; { if (!(tom_is_empty_concField_FieldList(tom_match5_1_list1))) { { tom.gom.adt.gom.types.Field  tom_match5_1_1=tom_get_head_concField_FieldList(tom_match5_1_list1);tom_match5_1_list1=tom_get_tail_concField_FieldList(tom_match5_1_list1); if ( ( tom_is_fun_sym_StarredField(tom_match5_1_1) ||  false  ) ) { { tom.gom.adt.gom.types.GomType  tom_match5_1_1_FieldType=tom_get_slot_StarredField_FieldType(tom_match5_1_1); if ( ( tom_is_fun_sym_GomType(tom_match5_1_1_FieldType) ||  false  ) ) { { String  tom_typename=tom_get_slot_GomType_Name(tom_match5_1_1_FieldType); if (tom_is_empty_concField_FieldList(tom_match5_1_list1)) { if ( true ) {

        return tom_make_Variadic(declFromTypename(tom_typename,sortDeclList));
       } } } } } } } }tom_match5_1_list1=tom_match5_1_end1; } } } } if ( ( tom_is_fun_sym_concField(tom_match5_1) ||  false  ) ) { { tom.gom.adt.gom.types.FieldList  tom_match5_1_list1=tom_match5_1; { tom.gom.adt.gom.types.FieldList  tom_fieldList=tom_match5_1_list1; if ( true ) {

        return tom_make_Slots(typedSlotList(tom_fieldList,sortDeclList));
       } } } } } }

    // the error message could be more refined
    throw new GomRuntimeException("TypeExpander::typedProduction: illformed Production");
  }

  SlotList typedSlotList(FieldList fields, SortDeclList sortDeclList) {
     if(fields instanceof  tom.gom.adt.gom.types.FieldList ) { { tom.gom.adt.gom.types.FieldList  tom_match6_1=(( tom.gom.adt.gom.types.FieldList )fields); if ( ( tom_is_fun_sym_concField(tom_match6_1) ||  false  ) ) { { tom.gom.adt.gom.types.FieldList  tom_match6_1_list1=tom_match6_1; if (tom_is_empty_concField_FieldList(tom_match6_1_list1)) { if ( true ) {

        return tom_empty_list_concSlot();
       } } } } if ( ( tom_is_fun_sym_concField(tom_match6_1) ||  false  ) ) { { tom.gom.adt.gom.types.FieldList  tom_match6_1_list1=tom_match6_1; { tom.gom.adt.gom.types.FieldList  tom_match6_1_end1=tom_match6_1_list1; { if (!(tom_is_empty_concField_FieldList(tom_match6_1_list1))) { { tom.gom.adt.gom.types.Field  tom_match6_1_1=tom_get_head_concField_FieldList(tom_match6_1_list1);tom_match6_1_list1=tom_get_tail_concField_FieldList(tom_match6_1_list1); if ( ( tom_is_fun_sym_NamedField(tom_match6_1_1) ||  false  ) ) { { tom.gom.adt.gom.types.GomType  tom_match6_1_1_FieldType=tom_get_slot_NamedField_FieldType(tom_match6_1_1); { String  tom_name=tom_get_slot_NamedField_Name(tom_match6_1_1); if ( ( tom_is_fun_sym_GomType(tom_match6_1_1_FieldType) ||  false  ) ) { { String  tom_typename=tom_get_slot_GomType_Name(tom_match6_1_1_FieldType); { tom.gom.adt.gom.types.FieldList  tom_tail=tom_match6_1_list1; if ( true ) {

        SlotList newtail = typedSlotList(tom_tail,sortDeclList);
        return tom_cons_list_concSlot(tom_make_Slot(tom_name,declFromTypename(tom_typename,sortDeclList)),tom_append_list_concSlot(newtail,tom_empty_list_concSlot()));
       } } } } } } } } }tom_match6_1_list1=tom_match6_1_end1; } } } } } }

    getLogger().log(Level.SEVERE, GomMessage.malformedProduction.getMessage(),
        new Object[]{fields.toString()});
    return tom_empty_list_concSlot();
  }

  /*
   * Get all sort declarations in a module
   */
  private Collection getSortDeclarations(GomModule module) {
    Collection result = new HashSet();
     if(module instanceof  tom.gom.adt.gom.types.GomModule ) { { tom.gom.adt.gom.types.GomModule  tom_match7_1=(( tom.gom.adt.gom.types.GomModule )module); if ( ( tom_is_fun_sym_GomModule(tom_match7_1) ||  false  ) ) { { tom.gom.adt.gom.types.SectionList  tom_match7_1_SectionList=tom_get_slot_GomModule_SectionList(tom_match7_1); { tom.gom.adt.gom.types.GomModuleName  tom_modulename=tom_get_slot_GomModule_ModuleName(tom_match7_1); if ( ( tom_is_fun_sym_concSection(tom_match7_1_SectionList) ||  false  ) ) { { tom.gom.adt.gom.types.SectionList  tom_match7_1_SectionList_list1=tom_match7_1_SectionList; { tom.gom.adt.gom.types.SectionList  tom_match7_1_SectionList_begin1=tom_match7_1_SectionList_list1; { tom.gom.adt.gom.types.SectionList  tom_match7_1_SectionList_end1=tom_match7_1_SectionList_list1; { while (!(tom_is_empty_concSection_SectionList(tom_match7_1_SectionList_end1))) {tom_match7_1_SectionList_list1=tom_match7_1_SectionList_end1; { { tom.gom.adt.gom.types.SectionList  tom_match7_1_SectionList_end2=tom_match7_1_SectionList_list1; { { tom.gom.adt.gom.types.Section  tom_match7_1_SectionList_2=tom_get_head_concSection_SectionList(tom_match7_1_SectionList_list1);tom_match7_1_SectionList_list1=tom_get_tail_concSection_SectionList(tom_match7_1_SectionList_list1); if ( ( tom_is_fun_sym_Public(tom_match7_1_SectionList_2) ||  false  ) ) { { tom.gom.adt.gom.types.GrammarList  tom_match7_1_SectionList_2_GrammarList=tom_get_slot_Public_GrammarList(tom_match7_1_SectionList_2); if ( ( tom_is_fun_sym_concGrammar(tom_match7_1_SectionList_2_GrammarList) ||  false  ) ) { { tom.gom.adt.gom.types.GrammarList  tom_match7_1_SectionList_2_GrammarList_list1=tom_match7_1_SectionList_2_GrammarList; { tom.gom.adt.gom.types.GrammarList  tom_match7_1_SectionList_2_GrammarList_begin1=tom_match7_1_SectionList_2_GrammarList_list1; { tom.gom.adt.gom.types.GrammarList  tom_match7_1_SectionList_2_GrammarList_end1=tom_match7_1_SectionList_2_GrammarList_list1; { while (!(tom_is_empty_concGrammar_GrammarList(tom_match7_1_SectionList_2_GrammarList_end1))) {tom_match7_1_SectionList_2_GrammarList_list1=tom_match7_1_SectionList_2_GrammarList_end1; { { tom.gom.adt.gom.types.GrammarList  tom_match7_1_SectionList_2_GrammarList_end2=tom_match7_1_SectionList_2_GrammarList_list1; { { tom.gom.adt.gom.types.Grammar  tom_match7_1_SectionList_2_GrammarList_2=tom_get_head_concGrammar_GrammarList(tom_match7_1_SectionList_2_GrammarList_list1);tom_match7_1_SectionList_2_GrammarList_list1=tom_get_tail_concGrammar_GrammarList(tom_match7_1_SectionList_2_GrammarList_list1); if ( ( tom_is_fun_sym_Sorts(tom_match7_1_SectionList_2_GrammarList_2) ||  false  ) ) { { tom.gom.adt.gom.types.GomTypeList  tom_match7_1_SectionList_2_GrammarList_2_TypeList=tom_get_slot_Sorts_TypeList(tom_match7_1_SectionList_2_GrammarList_2); if ( ( tom_is_fun_sym_concGomType(tom_match7_1_SectionList_2_GrammarList_2_TypeList) ||  false  ) ) { { tom.gom.adt.gom.types.GomTypeList  tom_match7_1_SectionList_2_GrammarList_2_TypeList_list1=tom_match7_1_SectionList_2_GrammarList_2_TypeList; { tom.gom.adt.gom.types.GomTypeList  tom_match7_1_SectionList_2_GrammarList_2_TypeList_begin1=tom_match7_1_SectionList_2_GrammarList_2_TypeList_list1; { tom.gom.adt.gom.types.GomTypeList  tom_match7_1_SectionList_2_GrammarList_2_TypeList_end1=tom_match7_1_SectionList_2_GrammarList_2_TypeList_list1; { while (!(tom_is_empty_concGomType_GomTypeList(tom_match7_1_SectionList_2_GrammarList_2_TypeList_end1))) {tom_match7_1_SectionList_2_GrammarList_2_TypeList_list1=tom_match7_1_SectionList_2_GrammarList_2_TypeList_end1; { { tom.gom.adt.gom.types.GomTypeList  tom_match7_1_SectionList_2_GrammarList_2_TypeList_end2=tom_match7_1_SectionList_2_GrammarList_2_TypeList_list1; { { tom.gom.adt.gom.types.GomType  tom_match7_1_SectionList_2_GrammarList_2_TypeList_2=tom_get_head_concGomType_GomTypeList(tom_match7_1_SectionList_2_GrammarList_2_TypeList_list1);tom_match7_1_SectionList_2_GrammarList_2_TypeList_list1=tom_get_tail_concGomType_GomTypeList(tom_match7_1_SectionList_2_GrammarList_2_TypeList_list1); if ( ( tom_is_fun_sym_GomType(tom_match7_1_SectionList_2_GrammarList_2_TypeList_2) ||  false  ) ) { { String  tom_typeName=tom_get_slot_GomType_Name(tom_match7_1_SectionList_2_GrammarList_2_TypeList_2); if ( true ) {



        result.add(tom_make_SortDecl(tom_typeName,tom_make_ModuleDecl(tom_modulename,packagePath)));
       } } } }tom_match7_1_SectionList_2_GrammarList_2_TypeList_list1=tom_match7_1_SectionList_2_GrammarList_2_TypeList_end2; } }tom_match7_1_SectionList_2_GrammarList_2_TypeList_end1=tom_get_tail_concGomType_GomTypeList(tom_match7_1_SectionList_2_GrammarList_2_TypeList_end1); } }tom_match7_1_SectionList_2_GrammarList_2_TypeList_list1=tom_match7_1_SectionList_2_GrammarList_2_TypeList_begin1; } } } } } } } }tom_match7_1_SectionList_2_GrammarList_list1=tom_match7_1_SectionList_2_GrammarList_end2; } }tom_match7_1_SectionList_2_GrammarList_end1=tom_get_tail_concGrammar_GrammarList(tom_match7_1_SectionList_2_GrammarList_end1); } }tom_match7_1_SectionList_2_GrammarList_list1=tom_match7_1_SectionList_2_GrammarList_begin1; } } } } } } } }tom_match7_1_SectionList_list1=tom_match7_1_SectionList_end2; } }tom_match7_1_SectionList_end1=tom_get_tail_concSection_SectionList(tom_match7_1_SectionList_end1); } }tom_match7_1_SectionList_list1=tom_match7_1_SectionList_begin1; } } } } } } } } } }

    return result;
  }

  /*
   * Get all sort uses in a module (as codomain of an operator)
   */
  private Collection getSortDeclarationInCodomain(GomModule module) {
    Collection result = new HashSet();
     if(module instanceof  tom.gom.adt.gom.types.GomModule ) { { tom.gom.adt.gom.types.GomModule  tom_match8_1=(( tom.gom.adt.gom.types.GomModule )module); if ( ( tom_is_fun_sym_GomModule(tom_match8_1) ||  false  ) ) { { tom.gom.adt.gom.types.SectionList  tom_match8_1_SectionList=tom_get_slot_GomModule_SectionList(tom_match8_1); { tom.gom.adt.gom.types.GomModuleName  tom_modulename=tom_get_slot_GomModule_ModuleName(tom_match8_1); if ( ( tom_is_fun_sym_concSection(tom_match8_1_SectionList) ||  false  ) ) { { tom.gom.adt.gom.types.SectionList  tom_match8_1_SectionList_list1=tom_match8_1_SectionList; { tom.gom.adt.gom.types.SectionList  tom_match8_1_SectionList_begin1=tom_match8_1_SectionList_list1; { tom.gom.adt.gom.types.SectionList  tom_match8_1_SectionList_end1=tom_match8_1_SectionList_list1; { while (!(tom_is_empty_concSection_SectionList(tom_match8_1_SectionList_end1))) {tom_match8_1_SectionList_list1=tom_match8_1_SectionList_end1; { { tom.gom.adt.gom.types.SectionList  tom_match8_1_SectionList_end2=tom_match8_1_SectionList_list1; { { tom.gom.adt.gom.types.Section  tom_match8_1_SectionList_2=tom_get_head_concSection_SectionList(tom_match8_1_SectionList_list1);tom_match8_1_SectionList_list1=tom_get_tail_concSection_SectionList(tom_match8_1_SectionList_list1); if ( ( tom_is_fun_sym_Public(tom_match8_1_SectionList_2) ||  false  ) ) { { tom.gom.adt.gom.types.GrammarList  tom_match8_1_SectionList_2_GrammarList=tom_get_slot_Public_GrammarList(tom_match8_1_SectionList_2); if ( ( tom_is_fun_sym_concGrammar(tom_match8_1_SectionList_2_GrammarList) ||  false  ) ) { { tom.gom.adt.gom.types.GrammarList  tom_match8_1_SectionList_2_GrammarList_list1=tom_match8_1_SectionList_2_GrammarList; { tom.gom.adt.gom.types.GrammarList  tom_match8_1_SectionList_2_GrammarList_begin1=tom_match8_1_SectionList_2_GrammarList_list1; { tom.gom.adt.gom.types.GrammarList  tom_match8_1_SectionList_2_GrammarList_end1=tom_match8_1_SectionList_2_GrammarList_list1; { while (!(tom_is_empty_concGrammar_GrammarList(tom_match8_1_SectionList_2_GrammarList_end1))) {tom_match8_1_SectionList_2_GrammarList_list1=tom_match8_1_SectionList_2_GrammarList_end1; { { tom.gom.adt.gom.types.GrammarList  tom_match8_1_SectionList_2_GrammarList_end2=tom_match8_1_SectionList_2_GrammarList_list1; { { tom.gom.adt.gom.types.Grammar  tom_match8_1_SectionList_2_GrammarList_2=tom_get_head_concGrammar_GrammarList(tom_match8_1_SectionList_2_GrammarList_list1);tom_match8_1_SectionList_2_GrammarList_list1=tom_get_tail_concGrammar_GrammarList(tom_match8_1_SectionList_2_GrammarList_list1); if ( ( tom_is_fun_sym_Grammar(tom_match8_1_SectionList_2_GrammarList_2) ||  false  ) ) { { tom.gom.adt.gom.types.ProductionList  tom_match8_1_SectionList_2_GrammarList_2_ProductionList=tom_get_slot_Grammar_ProductionList(tom_match8_1_SectionList_2_GrammarList_2); if ( ( tom_is_fun_sym_concProduction(tom_match8_1_SectionList_2_GrammarList_2_ProductionList) ||  false  ) ) { { tom.gom.adt.gom.types.ProductionList  tom_match8_1_SectionList_2_GrammarList_2_ProductionList_list1=tom_match8_1_SectionList_2_GrammarList_2_ProductionList; { tom.gom.adt.gom.types.ProductionList  tom_match8_1_SectionList_2_GrammarList_2_ProductionList_begin1=tom_match8_1_SectionList_2_GrammarList_2_ProductionList_list1; { tom.gom.adt.gom.types.ProductionList  tom_match8_1_SectionList_2_GrammarList_2_ProductionList_end1=tom_match8_1_SectionList_2_GrammarList_2_ProductionList_list1; { while (!(tom_is_empty_concProduction_ProductionList(tom_match8_1_SectionList_2_GrammarList_2_ProductionList_end1))) {tom_match8_1_SectionList_2_GrammarList_2_ProductionList_list1=tom_match8_1_SectionList_2_GrammarList_2_ProductionList_end1; { { tom.gom.adt.gom.types.ProductionList  tom_match8_1_SectionList_2_GrammarList_2_ProductionList_end2=tom_match8_1_SectionList_2_GrammarList_2_ProductionList_list1; { { tom.gom.adt.gom.types.Production  tom_match8_1_SectionList_2_GrammarList_2_ProductionList_2=tom_get_head_concProduction_ProductionList(tom_match8_1_SectionList_2_GrammarList_2_ProductionList_list1);tom_match8_1_SectionList_2_GrammarList_2_ProductionList_list1=tom_get_tail_concProduction_ProductionList(tom_match8_1_SectionList_2_GrammarList_2_ProductionList_list1); if ( ( tom_is_fun_sym_Production(tom_match8_1_SectionList_2_GrammarList_2_ProductionList_2) ||  false  ) ) { { tom.gom.adt.gom.types.GomType  tom_match8_1_SectionList_2_GrammarList_2_ProductionList_2_Codomain=tom_get_slot_Production_Codomain(tom_match8_1_SectionList_2_GrammarList_2_ProductionList_2); if ( ( tom_is_fun_sym_GomType(tom_match8_1_SectionList_2_GrammarList_2_ProductionList_2_Codomain) ||  false  ) ) { { String  tom_typeName=tom_get_slot_GomType_Name(tom_match8_1_SectionList_2_GrammarList_2_ProductionList_2_Codomain); if ( true ) {

        result.add(tom_make_SortDecl(tom_typeName,tom_make_ModuleDecl(tom_modulename,packagePath)));
       } } } } } }tom_match8_1_SectionList_2_GrammarList_2_ProductionList_list1=tom_match8_1_SectionList_2_GrammarList_2_ProductionList_end2; } }tom_match8_1_SectionList_2_GrammarList_2_ProductionList_end1=tom_get_tail_concProduction_ProductionList(tom_match8_1_SectionList_2_GrammarList_2_ProductionList_end1); } }tom_match8_1_SectionList_2_GrammarList_2_ProductionList_list1=tom_match8_1_SectionList_2_GrammarList_2_ProductionList_begin1; } } } } } } } }tom_match8_1_SectionList_2_GrammarList_list1=tom_match8_1_SectionList_2_GrammarList_end2; } }tom_match8_1_SectionList_2_GrammarList_end1=tom_get_tail_concGrammar_GrammarList(tom_match8_1_SectionList_2_GrammarList_end1); } }tom_match8_1_SectionList_2_GrammarList_list1=tom_match8_1_SectionList_2_GrammarList_begin1; } } } } } } } }tom_match8_1_SectionList_list1=tom_match8_1_SectionList_end2; } }tom_match8_1_SectionList_end1=tom_get_tail_concSection_SectionList(tom_match8_1_SectionList_end1); } }tom_match8_1_SectionList_list1=tom_match8_1_SectionList_begin1; } } } } } } } } } }

    return result;
  }

  /**
   * Get directly imported modules. Skip builtins
   *
   * @param module the main module with imports
   * @return the Collection of imported GomModuleName
   */
  private Collection getImportedModules(GomModule module) {
    Set imports = new HashSet();
     if(module instanceof  tom.gom.adt.gom.types.GomModule ) { { tom.gom.adt.gom.types.GomModule  tom_match9_1=(( tom.gom.adt.gom.types.GomModule )module); if ( ( tom_is_fun_sym_GomModule(tom_match9_1) ||  false  ) ) { { tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tom_get_slot_GomModule_ModuleName(tom_match9_1); { tom.gom.adt.gom.types.SectionList  tom_sectionList=tom_get_slot_GomModule_SectionList(tom_match9_1); if ( true ) {

        imports.add(tom_moduleName);
         if(tom_sectionList instanceof  tom.gom.adt.gom.types.SectionList ) { { tom.gom.adt.gom.types.SectionList  tom_match10_1=(( tom.gom.adt.gom.types.SectionList )tom_sectionList); if ( ( tom_is_fun_sym_concSection(tom_match10_1) ||  false  ) ) { { tom.gom.adt.gom.types.SectionList  tom_match10_1_list1=tom_match10_1; { tom.gom.adt.gom.types.SectionList  tom_match10_1_begin1=tom_match10_1_list1; { tom.gom.adt.gom.types.SectionList  tom_match10_1_end1=tom_match10_1_list1; { while (!(tom_is_empty_concSection_SectionList(tom_match10_1_end1))) {tom_match10_1_list1=tom_match10_1_end1; { { tom.gom.adt.gom.types.SectionList  tom_match10_1_end2=tom_match10_1_list1; { { tom.gom.adt.gom.types.Section  tom_match10_1_2=tom_get_head_concSection_SectionList(tom_match10_1_list1);tom_match10_1_list1=tom_get_tail_concSection_SectionList(tom_match10_1_list1); if ( ( tom_is_fun_sym_Imports(tom_match10_1_2) ||  false  ) ) { { tom.gom.adt.gom.types.ImportList  tom_match10_1_2_ImportList=tom_get_slot_Imports_ImportList(tom_match10_1_2); if ( ( tom_is_fun_sym_concImportedModule(tom_match10_1_2_ImportList) ||  false  ) ) { { tom.gom.adt.gom.types.ImportList  tom_match10_1_2_ImportList_list1=tom_match10_1_2_ImportList; { tom.gom.adt.gom.types.ImportList  tom_match10_1_2_ImportList_begin1=tom_match10_1_2_ImportList_list1; { tom.gom.adt.gom.types.ImportList  tom_match10_1_2_ImportList_end1=tom_match10_1_2_ImportList_list1; { while (!(tom_is_empty_concImportedModule_ImportList(tom_match10_1_2_ImportList_end1))) {tom_match10_1_2_ImportList_list1=tom_match10_1_2_ImportList_end1; { { tom.gom.adt.gom.types.ImportList  tom_match10_1_2_ImportList_end2=tom_match10_1_2_ImportList_list1; { { tom.gom.adt.gom.types.ImportedModule  tom_match10_1_2_ImportList_2=tom_get_head_concImportedModule_ImportList(tom_match10_1_2_ImportList_list1);tom_match10_1_2_ImportList_list1=tom_get_tail_concImportedModule_ImportList(tom_match10_1_2_ImportList_list1); if ( ( tom_is_fun_sym_Import(tom_match10_1_2_ImportList_2) ||  false  ) ) { { tom.gom.adt.gom.types.GomModuleName  tom_match10_1_2_ImportList_2_ModuleName=tom_get_slot_Import_ModuleName(tom_match10_1_2_ImportList_2); if ( ( tom_is_fun_sym_GomModuleName(tom_match10_1_2_ImportList_2_ModuleName) ||  false  ) ) { { String  tom_name=tom_get_slot_GomModuleName_Name(tom_match10_1_2_ImportList_2_ModuleName); { tom.gom.adt.gom.types.GomModuleName  tom_modname=tom_match10_1_2_ImportList_2_ModuleName; if ( true ) {





            if (!environment().isBuiltin(tom_name)) {
              imports.add(tom_modname);
            }
           } } } } } } }tom_match10_1_2_ImportList_list1=tom_match10_1_2_ImportList_end2; } }tom_match10_1_2_ImportList_end1=tom_get_tail_concImportedModule_ImportList(tom_match10_1_2_ImportList_end1); } }tom_match10_1_2_ImportList_list1=tom_match10_1_2_ImportList_begin1; } } } } } } } }tom_match10_1_list1=tom_match10_1_end2; } }tom_match10_1_end1=tom_get_tail_concSection_SectionList(tom_match10_1_end1); } }tom_match10_1_list1=tom_match10_1_begin1; } } } } } } }

       } } } } } }

    return imports;
  }

  private GomModule getModule(GomModuleName modname, GomModuleList list) {
     if(list instanceof  tom.gom.adt.gom.types.GomModuleList ) { { tom.gom.adt.gom.types.GomModuleList  tom_match11_1=(( tom.gom.adt.gom.types.GomModuleList )list); if ( ( tom_is_fun_sym_concGomModule(tom_match11_1) ||  false  ) ) { { tom.gom.adt.gom.types.GomModuleList  tom_match11_1_list1=tom_match11_1; { tom.gom.adt.gom.types.GomModuleList  tom_match11_1_begin1=tom_match11_1_list1; { tom.gom.adt.gom.types.GomModuleList  tom_match11_1_end1=tom_match11_1_list1; { while (!(tom_is_empty_concGomModule_GomModuleList(tom_match11_1_end1))) {tom_match11_1_list1=tom_match11_1_end1; { { tom.gom.adt.gom.types.GomModuleList  tom_match11_1_end2=tom_match11_1_list1; { { tom.gom.adt.gom.types.GomModule  tom_match11_1_2=tom_get_head_concGomModule_GomModuleList(tom_match11_1_list1);tom_match11_1_list1=tom_get_tail_concGomModule_GomModuleList(tom_match11_1_list1); if ( ( tom_is_fun_sym_GomModule(tom_match11_1_2) ||  false  ) ) { { tom.gom.adt.gom.types.GomModuleName  tom_name=tom_get_slot_GomModule_ModuleName(tom_match11_1_2); { tom.gom.adt.gom.types.GomModule  tom_module=tom_match11_1_2; if ( true ) {

        if (tom_name.equals(modname)) {
          return tom_module;
        }
       } } } } }tom_match11_1_list1=tom_match11_1_end2; } }tom_match11_1_end1=tom_get_tail_concGomModule_GomModuleList(tom_match11_1_end1); } }tom_match11_1_list1=tom_match11_1_begin1; } } } } } } }

    throw new GomRuntimeException("Module "+ modname +" not present");
  }

  private Collection getTransitiveClosureImports(GomModule module,
      GomModuleList moduleList) {
    Set imported = new HashSet();
    imported.addAll(getImportedModules(module));

    Set newSet = new HashSet();
    while(!newSet.equals(imported)) {
      newSet.addAll(imported);
      imported.addAll(newSet);
      Iterator it = imported.iterator();
      while(it.hasNext()) {
        GomModuleName modname = (GomModuleName) it.next();
        newSet.addAll(getImportedModules(getModule(modname,moduleList)));
      }
    }
    return newSet;
  }

  private void buildDependencyMap(GomModuleList moduleList) {
     if(moduleList instanceof  tom.gom.adt.gom.types.GomModuleList ) { { tom.gom.adt.gom.types.GomModuleList  tom_match12_1=(( tom.gom.adt.gom.types.GomModuleList )moduleList); if ( ( tom_is_fun_sym_concGomModule(tom_match12_1) ||  false  ) ) { { tom.gom.adt.gom.types.GomModuleList  tom_match12_1_list1=tom_match12_1; { tom.gom.adt.gom.types.GomModuleList  tom_match12_1_begin1=tom_match12_1_list1; { tom.gom.adt.gom.types.GomModuleList  tom_match12_1_end1=tom_match12_1_list1; { while (!(tom_is_empty_concGomModule_GomModuleList(tom_match12_1_end1))) {tom_match12_1_list1=tom_match12_1_end1; { { tom.gom.adt.gom.types.GomModuleList  tom_match12_1_end2=tom_match12_1_list1; { { tom.gom.adt.gom.types.GomModule  tom_match12_1_2=tom_get_head_concGomModule_GomModuleList(tom_match12_1_list1);tom_match12_1_list1=tom_get_tail_concGomModule_GomModuleList(tom_match12_1_list1); if ( ( tom_is_fun_sym_GomModule(tom_match12_1_2) ||  false  ) ) { { tom.gom.adt.gom.types.GomModuleName  tom_name=tom_get_slot_GomModule_ModuleName(tom_match12_1_2); { tom.gom.adt.gom.types.GomModule  tom_module=tom_match12_1_2; if ( true ) {

        ModuleDeclList importsModuleDeclList = tom_empty_list_concModuleDecl();
        Iterator it = getTransitiveClosureImports(tom_module,moduleList).iterator();
        while(it.hasNext()) {
          GomModuleName importedModuleName = (GomModuleName) it.next();
          importsModuleDeclList = 
            tom_cons_list_concModuleDecl(tom_make_ModuleDecl(importedModuleName,packagePath),tom_append_list_concModuleDecl(importsModuleDeclList,tom_empty_list_concModuleDecl()))
;
        }
        environment().addModuleDependency(
            tom_make_ModuleDecl(tom_name,packagePath),importsModuleDeclList);
       } } } } }tom_match12_1_list1=tom_match12_1_end2; } }tom_match12_1_end1=tom_get_tail_concGomModule_GomModuleList(tom_match12_1_end1); } }tom_match12_1_list1=tom_match12_1_begin1; } } } } } } }

  }

  private boolean checkSortValidity(Sort sort) {
    boolean valid = true;
    // check if the same slot name is used with different types
    Map mapNameType = new HashMap();
     if(sort instanceof  tom.gom.adt.gom.types.Sort ) { { tom.gom.adt.gom.types.Sort  tom_match13_1=(( tom.gom.adt.gom.types.Sort )sort); if ( ( tom_is_fun_sym_Sort(tom_match13_1) ||  false  ) ) { { tom.gom.adt.gom.types.OperatorDeclList  tom_match13_1_Operators=tom_get_slot_Sort_Operators(tom_match13_1); if ( ( tom_is_fun_sym_concOperator(tom_match13_1_Operators) ||  false  ) ) { { tom.gom.adt.gom.types.OperatorDeclList  tom_match13_1_Operators_list1=tom_match13_1_Operators; { tom.gom.adt.gom.types.OperatorDeclList  tom_match13_1_Operators_begin1=tom_match13_1_Operators_list1; { tom.gom.adt.gom.types.OperatorDeclList  tom_match13_1_Operators_end1=tom_match13_1_Operators_list1; { while (!(tom_is_empty_concOperator_OperatorDeclList(tom_match13_1_Operators_end1))) {tom_match13_1_Operators_list1=tom_match13_1_Operators_end1; { { tom.gom.adt.gom.types.OperatorDeclList  tom_match13_1_Operators_end2=tom_match13_1_Operators_list1; { { tom.gom.adt.gom.types.OperatorDecl  tom_match13_1_Operators_2=tom_get_head_concOperator_OperatorDeclList(tom_match13_1_Operators_list1);tom_match13_1_Operators_list1=tom_get_tail_concOperator_OperatorDeclList(tom_match13_1_Operators_list1); if ( ( tom_is_fun_sym_OperatorDecl(tom_match13_1_Operators_2) ||  false  ) ) { { tom.gom.adt.gom.types.TypedProduction  tom_match13_1_Operators_2_Prod=tom_get_slot_OperatorDecl_Prod(tom_match13_1_Operators_2); if ( ( tom_is_fun_sym_Slots(tom_match13_1_Operators_2_Prod) ||  false  ) ) { { tom.gom.adt.gom.types.SlotList  tom_match13_1_Operators_2_Prod_Slots=tom_get_slot_Slots_Slots(tom_match13_1_Operators_2_Prod); if ( ( tom_is_fun_sym_concSlot(tom_match13_1_Operators_2_Prod_Slots) ||  false  ) ) { { tom.gom.adt.gom.types.SlotList  tom_match13_1_Operators_2_Prod_Slots_list1=tom_match13_1_Operators_2_Prod_Slots; { tom.gom.adt.gom.types.SlotList  tom_match13_1_Operators_2_Prod_Slots_begin1=tom_match13_1_Operators_2_Prod_Slots_list1; { tom.gom.adt.gom.types.SlotList  tom_match13_1_Operators_2_Prod_Slots_end1=tom_match13_1_Operators_2_Prod_Slots_list1; { while (!(tom_is_empty_concSlot_SlotList(tom_match13_1_Operators_2_Prod_Slots_end1))) {tom_match13_1_Operators_2_Prod_Slots_list1=tom_match13_1_Operators_2_Prod_Slots_end1; { { tom.gom.adt.gom.types.SlotList  tom_match13_1_Operators_2_Prod_Slots_end2=tom_match13_1_Operators_2_Prod_Slots_list1; { { tom.gom.adt.gom.types.Slot  tom_match13_1_Operators_2_Prod_Slots_2=tom_get_head_concSlot_SlotList(tom_match13_1_Operators_2_Prod_Slots_list1);tom_match13_1_Operators_2_Prod_Slots_list1=tom_get_tail_concSlot_SlotList(tom_match13_1_Operators_2_Prod_Slots_list1); if ( ( tom_is_fun_sym_Slot(tom_match13_1_Operators_2_Prod_Slots_2) ||  false  ) ) { { String  tom_slotName=tom_get_slot_Slot_Name(tom_match13_1_Operators_2_Prod_Slots_2); { tom.gom.adt.gom.types.SortDecl  tom_slotSort=tom_get_slot_Slot_Sort(tom_match13_1_Operators_2_Prod_Slots_2); if ( true ) {





        if(!mapNameType.containsKey(tom_slotName)) {
          mapNameType.put(tom_slotName,tom_slotSort);
        } else {
          SortDecl prevSort = (SortDecl) mapNameType.get(tom_slotName);
          if (!prevSort.equals(tom_slotSort)) {
            getLogger().log(Level.SEVERE,
                GomMessage.slotIncompatibleTypes.getMessage(),
                new Object[]{(tom_slotName),prevSort.getName(),
                             (tom_slotSort).getName()});
            valid = false;
          }
        }
       } } } } }tom_match13_1_Operators_2_Prod_Slots_list1=tom_match13_1_Operators_2_Prod_Slots_end2; } }tom_match13_1_Operators_2_Prod_Slots_end1=tom_get_tail_concSlot_SlotList(tom_match13_1_Operators_2_Prod_Slots_end1); } }tom_match13_1_Operators_2_Prod_Slots_list1=tom_match13_1_Operators_2_Prod_Slots_begin1; } } } } } } } } } }tom_match13_1_Operators_list1=tom_match13_1_Operators_end2; } }tom_match13_1_Operators_end1=tom_get_tail_concOperator_OperatorDeclList(tom_match13_1_Operators_end1); } }tom_match13_1_Operators_list1=tom_match13_1_Operators_begin1; } } } } } } } } }

    return valid;
  }

  private String showSortList(Collection decls) {
    String sorts = "";
    Iterator it = decls.iterator();
    if(it.hasNext()) {
      SortDecl decl = (SortDecl)it.next();
      sorts += decl.getName();
    }
    while(it.hasNext()) {
      SortDecl decl = (SortDecl)it.next();
      sorts += ", "+decl.getName();
    }
    return sorts;
  }

  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }
}

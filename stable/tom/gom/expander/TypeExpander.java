/* Generated by TOM (version 2.6): Do not edit this file *//*
 *
 * GOM
 *
 * Copyright (c) 2006-2008, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.expander;

import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.gom.GomMessage;
import tom.gom.GomStreamManager;
import tom.gom.tools.GomEnvironment;
import tom.gom.adt.gom.*;
import tom.gom.adt.gom.types.*;
import tom.gom.tools.error.GomRuntimeException;

public class TypeExpander {

  /* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file */  /* Generated by TOM (version 2.6): Do not edit this file */    public static   tom.gom.adt.gom.types.GomModuleList  tom_append_list_ConcGomModule( tom.gom.adt.gom.types.GomModuleList l1,  tom.gom.adt.gom.types.GomModuleList  l2) {     if( l1.isEmptyConcGomModule() ) {       return l2;     } else if( l2.isEmptyConcGomModule() ) {       return l1;     } else if(  l1.getTailConcGomModule() .isEmptyConcGomModule() ) {       return  tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule.make( l1.getHeadConcGomModule() ,l2) ;     } else {       return  tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule.make( l1.getHeadConcGomModule() ,tom_append_list_ConcGomModule( l1.getTailConcGomModule() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.GomModuleList  tom_get_slice_ConcGomModule( tom.gom.adt.gom.types.GomModuleList  begin,  tom.gom.adt.gom.types.GomModuleList  end, tom.gom.adt.gom.types.GomModuleList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcGomModule()  ||  (end== tom.gom.adt.gom.types.gommodulelist.EmptyConcGomModule.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule.make( begin.getHeadConcGomModule() ,( tom.gom.adt.gom.types.GomModuleList )tom_get_slice_ConcGomModule( begin.getTailConcGomModule() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.GrammarList  tom_append_list_ConcGrammar( tom.gom.adt.gom.types.GrammarList l1,  tom.gom.adt.gom.types.GrammarList  l2) {     if( l1.isEmptyConcGrammar() ) {       return l2;     } else if( l2.isEmptyConcGrammar() ) {       return l1;     } else if(  l1.getTailConcGrammar() .isEmptyConcGrammar() ) {       return  tom.gom.adt.gom.types.grammarlist.ConsConcGrammar.make( l1.getHeadConcGrammar() ,l2) ;     } else {       return  tom.gom.adt.gom.types.grammarlist.ConsConcGrammar.make( l1.getHeadConcGrammar() ,tom_append_list_ConcGrammar( l1.getTailConcGrammar() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.GrammarList  tom_get_slice_ConcGrammar( tom.gom.adt.gom.types.GrammarList  begin,  tom.gom.adt.gom.types.GrammarList  end, tom.gom.adt.gom.types.GrammarList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcGrammar()  ||  (end== tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.grammarlist.ConsConcGrammar.make( begin.getHeadConcGrammar() ,( tom.gom.adt.gom.types.GrammarList )tom_get_slice_ConcGrammar( begin.getTailConcGrammar() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.SectionList  tom_append_list_ConcSection( tom.gom.adt.gom.types.SectionList l1,  tom.gom.adt.gom.types.SectionList  l2) {     if( l1.isEmptyConcSection() ) {       return l2;     } else if( l2.isEmptyConcSection() ) {       return l1;     } else if(  l1.getTailConcSection() .isEmptyConcSection() ) {       return  tom.gom.adt.gom.types.sectionlist.ConsConcSection.make( l1.getHeadConcSection() ,l2) ;     } else {       return  tom.gom.adt.gom.types.sectionlist.ConsConcSection.make( l1.getHeadConcSection() ,tom_append_list_ConcSection( l1.getTailConcSection() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.SectionList  tom_get_slice_ConcSection( tom.gom.adt.gom.types.SectionList  begin,  tom.gom.adt.gom.types.SectionList  end, tom.gom.adt.gom.types.SectionList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcSection()  ||  (end== tom.gom.adt.gom.types.sectionlist.EmptyConcSection.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.sectionlist.ConsConcSection.make( begin.getHeadConcSection() ,( tom.gom.adt.gom.types.SectionList )tom_get_slice_ConcSection( begin.getTailConcSection() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.OperatorDeclList  tom_append_list_ConcOperator( tom.gom.adt.gom.types.OperatorDeclList l1,  tom.gom.adt.gom.types.OperatorDeclList  l2) {     if( l1.isEmptyConcOperator() ) {       return l2;     } else if( l2.isEmptyConcOperator() ) {       return l1;     } else if(  l1.getTailConcOperator() .isEmptyConcOperator() ) {       return  tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make( l1.getHeadConcOperator() ,l2) ;     } else {       return  tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make( l1.getHeadConcOperator() ,tom_append_list_ConcOperator( l1.getTailConcOperator() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.OperatorDeclList  tom_get_slice_ConcOperator( tom.gom.adt.gom.types.OperatorDeclList  begin,  tom.gom.adt.gom.types.OperatorDeclList  end, tom.gom.adt.gom.types.OperatorDeclList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcOperator()  ||  (end== tom.gom.adt.gom.types.operatordecllist.EmptyConcOperator.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make( begin.getHeadConcOperator() ,( tom.gom.adt.gom.types.OperatorDeclList )tom_get_slice_ConcOperator( begin.getTailConcOperator() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.SortDeclList  tom_append_list_ConcSortDecl( tom.gom.adt.gom.types.SortDeclList l1,  tom.gom.adt.gom.types.SortDeclList  l2) {     if( l1.isEmptyConcSortDecl() ) {       return l2;     } else if( l2.isEmptyConcSortDecl() ) {       return l1;     } else if(  l1.getTailConcSortDecl() .isEmptyConcSortDecl() ) {       return  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make( l1.getHeadConcSortDecl() ,l2) ;     } else {       return  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make( l1.getHeadConcSortDecl() ,tom_append_list_ConcSortDecl( l1.getTailConcSortDecl() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.SortDeclList  tom_get_slice_ConcSortDecl( tom.gom.adt.gom.types.SortDeclList  begin,  tom.gom.adt.gom.types.SortDeclList  end, tom.gom.adt.gom.types.SortDeclList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcSortDecl()  ||  (end== tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make( begin.getHeadConcSortDecl() ,( tom.gom.adt.gom.types.SortDeclList )tom_get_slice_ConcSortDecl( begin.getTailConcSortDecl() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.GomTypeList  tom_append_list_ConcGomType( tom.gom.adt.gom.types.GomTypeList l1,  tom.gom.adt.gom.types.GomTypeList  l2) {     if( l1.isEmptyConcGomType() ) {       return l2;     } else if( l2.isEmptyConcGomType() ) {       return l1;     } else if(  l1.getTailConcGomType() .isEmptyConcGomType() ) {       return  tom.gom.adt.gom.types.gomtypelist.ConsConcGomType.make( l1.getHeadConcGomType() ,l2) ;     } else {       return  tom.gom.adt.gom.types.gomtypelist.ConsConcGomType.make( l1.getHeadConcGomType() ,tom_append_list_ConcGomType( l1.getTailConcGomType() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.GomTypeList  tom_get_slice_ConcGomType( tom.gom.adt.gom.types.GomTypeList  begin,  tom.gom.adt.gom.types.GomTypeList  end, tom.gom.adt.gom.types.GomTypeList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcGomType()  ||  (end== tom.gom.adt.gom.types.gomtypelist.EmptyConcGomType.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.gomtypelist.ConsConcGomType.make( begin.getHeadConcGomType() ,( tom.gom.adt.gom.types.GomTypeList )tom_get_slice_ConcGomType( begin.getTailConcGomType() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.ProductionList  tom_append_list_ConcProduction( tom.gom.adt.gom.types.ProductionList l1,  tom.gom.adt.gom.types.ProductionList  l2) {     if( l1.isEmptyConcProduction() ) {       return l2;     } else if( l2.isEmptyConcProduction() ) {       return l1;     } else if(  l1.getTailConcProduction() .isEmptyConcProduction() ) {       return  tom.gom.adt.gom.types.productionlist.ConsConcProduction.make( l1.getHeadConcProduction() ,l2) ;     } else {       return  tom.gom.adt.gom.types.productionlist.ConsConcProduction.make( l1.getHeadConcProduction() ,tom_append_list_ConcProduction( l1.getTailConcProduction() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.ProductionList  tom_get_slice_ConcProduction( tom.gom.adt.gom.types.ProductionList  begin,  tom.gom.adt.gom.types.ProductionList  end, tom.gom.adt.gom.types.ProductionList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcProduction()  ||  (end== tom.gom.adt.gom.types.productionlist.EmptyConcProduction.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.productionlist.ConsConcProduction.make( begin.getHeadConcProduction() ,( tom.gom.adt.gom.types.ProductionList )tom_get_slice_ConcProduction( begin.getTailConcProduction() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.ImportList  tom_append_list_ConcImportedModule( tom.gom.adt.gom.types.ImportList l1,  tom.gom.adt.gom.types.ImportList  l2) {     if( l1.isEmptyConcImportedModule() ) {       return l2;     } else if( l2.isEmptyConcImportedModule() ) {       return l1;     } else if(  l1.getTailConcImportedModule() .isEmptyConcImportedModule() ) {       return  tom.gom.adt.gom.types.importlist.ConsConcImportedModule.make( l1.getHeadConcImportedModule() ,l2) ;     } else {       return  tom.gom.adt.gom.types.importlist.ConsConcImportedModule.make( l1.getHeadConcImportedModule() ,tom_append_list_ConcImportedModule( l1.getTailConcImportedModule() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.ImportList  tom_get_slice_ConcImportedModule( tom.gom.adt.gom.types.ImportList  begin,  tom.gom.adt.gom.types.ImportList  end, tom.gom.adt.gom.types.ImportList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcImportedModule()  ||  (end== tom.gom.adt.gom.types.importlist.EmptyConcImportedModule.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.importlist.ConsConcImportedModule.make( begin.getHeadConcImportedModule() ,( tom.gom.adt.gom.types.ImportList )tom_get_slice_ConcImportedModule( begin.getTailConcImportedModule() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.ModuleDeclList  tom_append_list_ConcModuleDecl( tom.gom.adt.gom.types.ModuleDeclList l1,  tom.gom.adt.gom.types.ModuleDeclList  l2) {     if( l1.isEmptyConcModuleDecl() ) {       return l2;     } else if( l2.isEmptyConcModuleDecl() ) {       return l1;     } else if(  l1.getTailConcModuleDecl() .isEmptyConcModuleDecl() ) {       return  tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( l1.getHeadConcModuleDecl() ,l2) ;     } else {       return  tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( l1.getHeadConcModuleDecl() ,tom_append_list_ConcModuleDecl( l1.getTailConcModuleDecl() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.ModuleDeclList  tom_get_slice_ConcModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  begin,  tom.gom.adt.gom.types.ModuleDeclList  end, tom.gom.adt.gom.types.ModuleDeclList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcModuleDecl()  ||  (end== tom.gom.adt.gom.types.moduledecllist.EmptyConcModuleDecl.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( begin.getHeadConcModuleDecl() ,( tom.gom.adt.gom.types.ModuleDeclList )tom_get_slice_ConcModuleDecl( begin.getTailConcModuleDecl() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.FieldList  tom_append_list_ConcField( tom.gom.adt.gom.types.FieldList l1,  tom.gom.adt.gom.types.FieldList  l2) {     if( l1.isEmptyConcField() ) {       return l2;     } else if( l2.isEmptyConcField() ) {       return l1;     } else if(  l1.getTailConcField() .isEmptyConcField() ) {       return  tom.gom.adt.gom.types.fieldlist.ConsConcField.make( l1.getHeadConcField() ,l2) ;     } else {       return  tom.gom.adt.gom.types.fieldlist.ConsConcField.make( l1.getHeadConcField() ,tom_append_list_ConcField( l1.getTailConcField() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.FieldList  tom_get_slice_ConcField( tom.gom.adt.gom.types.FieldList  begin,  tom.gom.adt.gom.types.FieldList  end, tom.gom.adt.gom.types.FieldList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcField()  ||  (end== tom.gom.adt.gom.types.fieldlist.EmptyConcField.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.fieldlist.ConsConcField.make( begin.getHeadConcField() ,( tom.gom.adt.gom.types.FieldList )tom_get_slice_ConcField( begin.getTailConcField() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.SlotList  tom_append_list_ConcSlot( tom.gom.adt.gom.types.SlotList l1,  tom.gom.adt.gom.types.SlotList  l2) {     if( l1.isEmptyConcSlot() ) {       return l2;     } else if( l2.isEmptyConcSlot() ) {       return l1;     } else if(  l1.getTailConcSlot() .isEmptyConcSlot() ) {       return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( l1.getHeadConcSlot() ,l2) ;     } else {       return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( l1.getHeadConcSlot() ,tom_append_list_ConcSlot( l1.getTailConcSlot() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.SlotList  tom_get_slice_ConcSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end, tom.gom.adt.gom.types.SlotList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcSlot()  ||  (end== tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( begin.getHeadConcSlot() ,( tom.gom.adt.gom.types.SlotList )tom_get_slice_ConcSlot( begin.getTailConcSlot() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.SortList  tom_append_list_ConcSort( tom.gom.adt.gom.types.SortList l1,  tom.gom.adt.gom.types.SortList  l2) {     if( l1.isEmptyConcSort() ) {       return l2;     } else if( l2.isEmptyConcSort() ) {       return l1;     } else if(  l1.getTailConcSort() .isEmptyConcSort() ) {       return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( l1.getHeadConcSort() ,l2) ;     } else {       return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( l1.getHeadConcSort() ,tom_append_list_ConcSort( l1.getTailConcSort() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.SortList  tom_get_slice_ConcSort( tom.gom.adt.gom.types.SortList  begin,  tom.gom.adt.gom.types.SortList  end, tom.gom.adt.gom.types.SortList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcSort()  ||  (end== tom.gom.adt.gom.types.sortlist.EmptyConcSort.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( begin.getHeadConcSort() ,( tom.gom.adt.gom.types.SortList )tom_get_slice_ConcSort( begin.getTailConcSort() ,end,tail)) ;   }      public static   tom.gom.adt.gom.types.ModuleList  tom_append_list_ConcModule( tom.gom.adt.gom.types.ModuleList l1,  tom.gom.adt.gom.types.ModuleList  l2) {     if( l1.isEmptyConcModule() ) {       return l2;     } else if( l2.isEmptyConcModule() ) {       return l1;     } else if(  l1.getTailConcModule() .isEmptyConcModule() ) {       return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( l1.getHeadConcModule() ,l2) ;     } else {       return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( l1.getHeadConcModule() ,tom_append_list_ConcModule( l1.getTailConcModule() ,l2)) ;     }   }   public static   tom.gom.adt.gom.types.ModuleList  tom_get_slice_ConcModule( tom.gom.adt.gom.types.ModuleList  begin,  tom.gom.adt.gom.types.ModuleList  end, tom.gom.adt.gom.types.ModuleList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyConcModule()  ||  (end== tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( begin.getHeadConcModule() ,( tom.gom.adt.gom.types.ModuleList )tom_get_slice_ConcModule( begin.getTailConcModule() ,end,tail)) ;   }    

  private GomStreamManager streamManager;
  private GomEnvironment environment() {
    return GomEnvironment.getInstance();
  }

  public TypeExpander(GomStreamManager streamManager) {
    this.streamManager = streamManager;
  }
  /**
    * We try here to get full sort definitions for each constructs
    * Once the structure is correctly build, we can attach the hooks
    */
  public ModuleList expand(GomModuleList moduleList) {

    /* put a map giving all imported modules for each module in the path */
    buildDependencyMap(moduleList);

    /* collect all sort declarations */
    SortDeclList sortDeclList =  tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() ;
    /* The sorts declared in each module */
    Map sortsForModule = new HashMap();
    GomModuleList consum = moduleList;
    while(!consum.isEmptyConcGomModule()) {
      GomModule module = consum.getHeadConcGomModule();
      consum = consum.getTailConcGomModule();

      Collection decls = getSortDeclarations(module);

      Collection implicitdecls = getSortDeclarationInCodomain(module);

      /* Check that there are no implicit sort declarations
       * Also, check that declared sorts have at least an operator
       */
      if(!decls.containsAll(implicitdecls)) {
        // whine about non declared sorts
        Collection undeclaredSorts = new HashSet();
        undeclaredSorts.addAll(implicitdecls);
        undeclaredSorts.removeAll(decls);
        getLogger().log(Level.WARNING, GomMessage.undeclaredSorts.getMessage(),
            new Object[]{showSortList(undeclaredSorts)});
      }
      if(!implicitdecls.containsAll(decls)) {
        // whine about sorts without operators: this is a real error
        Collection emptySorts = new HashSet();
        emptySorts.addAll(decls);
        emptySorts.removeAll(implicitdecls);
        getLogger().log(Level.SEVERE, GomMessage.emptySorts.getMessage(),
            new Object[]{showSortList(emptySorts)});
        return  tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() ;
      }
      Iterator it = implicitdecls.iterator();
      while(it.hasNext()) {
        SortDecl decl = (SortDecl)it.next();
        sortDeclList =  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make(decl,tom_append_list_ConcSortDecl(sortDeclList, tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() )) ;
      }
      /* Fills sortsForModule */
      it = decls.iterator();
      SortDeclList declaredSorts =  tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() ;
      while(it.hasNext()) {
        SortDecl decl = (SortDecl)it.next();
        declaredSorts =  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make(decl,tom_append_list_ConcSortDecl(declaredSorts, tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() )) ;
      }
      GomModuleName moduleName = module.getModuleName();
      ModuleDecl mdecl =  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(moduleName, streamManager.getPackagePath(moduleName.getName())) ;
      sortsForModule.put(mdecl,declaredSorts);
    }

    /* now get all operators for each sort */
    Map operatorsForSort = new HashMap();
    Map hooksForSort = new HashMap();
    consum = moduleList;
    while(!consum.isEmptyConcGomModule()) {
      GomModule module = consum.getHeadConcGomModule();
      consum = consum.getTailConcGomModule();

      // iterate through the productions
      {{ Object tomMatch529NameNumber_freshVar_0=module;if ( (tomMatch529NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch529NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch529NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch529NameNumber_freshVar_3=tomMatch529NameNumber_freshSubject_1;if ( (tomMatch529NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch529NameNumber_freshVar_1= tomMatch529NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch529NameNumber_freshVar_2= tomMatch529NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.SectionList  tomMatch529NameNumber_freshVar_4=tomMatch529NameNumber_freshVar_2;if ( ((tomMatch529NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch529NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch529NameNumber_begin_6=tomMatch529NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch529NameNumber_end_7=tomMatch529NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch529NameNumber_freshVar_5=tomMatch529NameNumber_end_7;if (!( tomMatch529NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch529NameNumber_freshVar_11= tomMatch529NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch529NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch529NameNumber_freshVar_10= tomMatch529NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch529NameNumber_freshVar_12=tomMatch529NameNumber_freshVar_10;if ( ((tomMatch529NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch529NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch529NameNumber_begin_14=tomMatch529NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch529NameNumber_end_15=tomMatch529NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch529NameNumber_freshVar_13=tomMatch529NameNumber_end_15;if (!( tomMatch529NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch529NameNumber_freshVar_19= tomMatch529NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch529NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch529NameNumber_freshVar_18= tomMatch529NameNumber_freshVar_19.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch529NameNumber_freshVar_20=tomMatch529NameNumber_freshVar_18;if ( ((tomMatch529NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch529NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch529NameNumber_begin_22=tomMatch529NameNumber_freshVar_20;{  tom.gom.adt.gom.types.ProductionList  tomMatch529NameNumber_end_23=tomMatch529NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch529NameNumber_freshVar_21=tomMatch529NameNumber_end_23;if (!( tomMatch529NameNumber_freshVar_21.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch529NameNumber_freshVar_26= tomMatch529NameNumber_freshVar_21.getHeadConcProduction() ;if ( (tomMatch529NameNumber_freshVar_26 instanceof tom.gom.adt.gom.types.production.Production) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch529NameNumber_freshVar_24= tomMatch529NameNumber_freshVar_21.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch529NameNumber_freshVar_16= tomMatch529NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch529NameNumber_freshVar_8= tomMatch529NameNumber_freshVar_5.getTailConcSection() ;



          // we may want to pass moduleName to help resolve ambiguities with modules
          getOperatorDecl( tomMatch529NameNumber_freshVar_21.getHeadConcProduction() ,sortDeclList,operatorsForSort);

        }}}}}}}if ( tomMatch529NameNumber_end_23.isEmptyConcProduction() ) {tomMatch529NameNumber_end_23=tomMatch529NameNumber_begin_22;} else {tomMatch529NameNumber_end_23= tomMatch529NameNumber_end_23.getTailConcProduction() ;}}} while(!( (tomMatch529NameNumber_end_23==tomMatch529NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch529NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch529NameNumber_end_15=tomMatch529NameNumber_begin_14;} else {tomMatch529NameNumber_end_15= tomMatch529NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch529NameNumber_end_15==tomMatch529NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch529NameNumber_end_7.isEmptyConcSection() ) {tomMatch529NameNumber_end_7=tomMatch529NameNumber_begin_6;} else {tomMatch529NameNumber_end_7= tomMatch529NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch529NameNumber_end_7==tomMatch529NameNumber_begin_6) ));}}}}}}}}}}}}{{ Object tomMatch530NameNumber_freshVar_0=module;if ( (tomMatch530NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch530NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch530NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch530NameNumber_freshVar_3=tomMatch530NameNumber_freshSubject_1;if ( (tomMatch530NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch530NameNumber_freshVar_1= tomMatch530NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch530NameNumber_freshVar_2= tomMatch530NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.SectionList  tomMatch530NameNumber_freshVar_4=tomMatch530NameNumber_freshVar_2;if ( ((tomMatch530NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch530NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch530NameNumber_begin_6=tomMatch530NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch530NameNumber_end_7=tomMatch530NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch530NameNumber_freshVar_5=tomMatch530NameNumber_end_7;if (!( tomMatch530NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch530NameNumber_freshVar_11= tomMatch530NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch530NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch530NameNumber_freshVar_10= tomMatch530NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch530NameNumber_freshVar_12=tomMatch530NameNumber_freshVar_10;if ( ((tomMatch530NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch530NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch530NameNumber_begin_14=tomMatch530NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch530NameNumber_end_15=tomMatch530NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch530NameNumber_freshVar_13=tomMatch530NameNumber_end_15;if (!( tomMatch530NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch530NameNumber_freshVar_19= tomMatch530NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch530NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_freshVar_18= tomMatch530NameNumber_freshVar_19.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_freshVar_20=tomMatch530NameNumber_freshVar_18;if ( ((tomMatch530NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch530NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_begin_22=tomMatch530NameNumber_freshVar_20;{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_end_23=tomMatch530NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_freshVar_21=tomMatch530NameNumber_end_23;if (!( tomMatch530NameNumber_freshVar_21.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch530NameNumber_freshVar_27= tomMatch530NameNumber_freshVar_21.getHeadConcProduction() ;if ( (tomMatch530NameNumber_freshVar_27 instanceof tom.gom.adt.gom.types.production.SortType) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_freshVar_26= tomMatch530NameNumber_freshVar_27.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_freshVar_28=tomMatch530NameNumber_freshVar_26;if ( ((tomMatch530NameNumber_freshVar_28 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch530NameNumber_freshVar_28 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_begin_30=tomMatch530NameNumber_freshVar_28;{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_end_31=tomMatch530NameNumber_freshVar_28;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_freshVar_29=tomMatch530NameNumber_end_31;if (!( tomMatch530NameNumber_freshVar_29.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch530NameNumber_freshVar_34= tomMatch530NameNumber_freshVar_29.getHeadConcProduction() ;if ( (tomMatch530NameNumber_freshVar_34 instanceof tom.gom.adt.gom.types.production.Production) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_freshVar_32= tomMatch530NameNumber_freshVar_29.getTailConcProduction() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch530NameNumber_freshVar_24= tomMatch530NameNumber_freshVar_21.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch530NameNumber_freshVar_16= tomMatch530NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch530NameNumber_freshVar_8= tomMatch530NameNumber_freshVar_5.getTailConcSection() ;








          // we may want to pass moduleName to help resolve ambiguities with modules
          getOperatorDecl( tomMatch530NameNumber_freshVar_29.getHeadConcProduction() ,sortDeclList,operatorsForSort);

        }}}}}}}}if ( tomMatch530NameNumber_end_31.isEmptyConcProduction() ) {tomMatch530NameNumber_end_31=tomMatch530NameNumber_begin_30;} else {tomMatch530NameNumber_end_31= tomMatch530NameNumber_end_31.getTailConcProduction() ;}}} while(!( (tomMatch530NameNumber_end_31==tomMatch530NameNumber_begin_30) ));}}}}}}}}}if ( tomMatch530NameNumber_end_23.isEmptyConcProduction() ) {tomMatch530NameNumber_end_23=tomMatch530NameNumber_begin_22;} else {tomMatch530NameNumber_end_23= tomMatch530NameNumber_end_23.getTailConcProduction() ;}}} while(!( (tomMatch530NameNumber_end_23==tomMatch530NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch530NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch530NameNumber_end_15=tomMatch530NameNumber_begin_14;} else {tomMatch530NameNumber_end_15= tomMatch530NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch530NameNumber_end_15==tomMatch530NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch530NameNumber_end_7.isEmptyConcSection() ) {tomMatch530NameNumber_end_7=tomMatch530NameNumber_begin_6;} else {tomMatch530NameNumber_end_7= tomMatch530NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch530NameNumber_end_7==tomMatch530NameNumber_begin_6) ));}}}}}}}}}}}}

    }

    /*
     * build the module list using the map
     * since we already checked that the declared and used sorts do match, we
     * can use the map alone
     */
    ModuleList resultModuleList =  tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() ;
    Iterator it = sortsForModule.entrySet().iterator();
    while(it.hasNext()) {
      Map.Entry entry = (Map.Entry) it.next();
      ModuleDecl mdecl = (ModuleDecl) entry.getKey();
      SortDeclList sdeclList = (SortDeclList) entry.getValue();
      SortList sortList =  tom.gom.adt.gom.types.sortlist.EmptyConcSort.make() ;
      {{ Object tomMatch531NameNumber_freshVar_0=sdeclList;if ( (tomMatch531NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.SortDeclList) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch531NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.SortDeclList )tomMatch531NameNumber_freshVar_0);{  tom.gom.adt.gom.types.SortDeclList  tomMatch531NameNumber_freshVar_1=tomMatch531NameNumber_freshSubject_1;if ( ((tomMatch531NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl) || (tomMatch531NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl)) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch531NameNumber_begin_3=tomMatch531NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SortDeclList  tomMatch531NameNumber_end_4=tomMatch531NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.SortDeclList  tomMatch531NameNumber_freshVar_2=tomMatch531NameNumber_end_4;if (!( tomMatch531NameNumber_freshVar_2.isEmptyConcSortDecl() )) {{  tom.gom.adt.gom.types.SortDecl  tom_sdecl= tomMatch531NameNumber_freshVar_2.getHeadConcSortDecl() ;{  tom.gom.adt.gom.types.SortDeclList  tomMatch531NameNumber_freshVar_5= tomMatch531NameNumber_freshVar_2.getTailConcSortDecl() ;

          OperatorDeclList opdecl = (OperatorDeclList)
            operatorsForSort.get(tom_sdecl);
          Sort fullSort =  tom.gom.adt.gom.types.sort.Sort.make(tom_sdecl, opdecl) ;
          if(checkSortValidity(fullSort)) {
            sortList =  tom.gom.adt.gom.types.sortlist.ConsConcSort.make(fullSort,tom_append_list_ConcSort(sortList, tom.gom.adt.gom.types.sortlist.EmptyConcSort.make() )) ;
          }
        }}}}if ( tomMatch531NameNumber_end_4.isEmptyConcSortDecl() ) {tomMatch531NameNumber_end_4=tomMatch531NameNumber_begin_3;} else {tomMatch531NameNumber_end_4= tomMatch531NameNumber_end_4.getTailConcSortDecl() ;}}} while(!( (tomMatch531NameNumber_end_4==tomMatch531NameNumber_begin_3) ));}}}}}}}}

      resultModuleList =  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( tom.gom.adt.gom.types.module.Module.make(mdecl, sortList) ,tom_append_list_ConcModule(resultModuleList, tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() )) 

;
    }
    return resultModuleList;
  }

  /*
   * Get an OperatorDecl from a Production, using the list of sort declarations
   * XXX: There is huge room for efficiency improvement, as we could use a map
   * sortName -> sortDeclList instead of a simple list
   */
  private OperatorDecl getOperatorDecl(Production prod,
      SortDeclList sortDeclList,
      Map operatorsForSort) {

    {{ Object tomMatch532NameNumber_freshVar_0=prod;if ( (tomMatch532NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.Production) ) {{  tom.gom.adt.gom.types.Production  tomMatch532NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.Production )tomMatch532NameNumber_freshVar_0);{  tom.gom.adt.gom.types.Production  tomMatch532NameNumber_freshVar_5=tomMatch532NameNumber_freshSubject_1;if ( (tomMatch532NameNumber_freshVar_5 instanceof tom.gom.adt.gom.types.production.Production) ) {{  String  tomMatch532NameNumber_freshVar_1= tomMatch532NameNumber_freshVar_5.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch532NameNumber_freshVar_2= tomMatch532NameNumber_freshVar_5.getDomainList() ;{  tom.gom.adt.gom.types.GomType  tomMatch532NameNumber_freshVar_3= tomMatch532NameNumber_freshVar_5.getCodomain() ;{  tom.gom.adt.gom.types.Option  tomMatch532NameNumber_freshVar_4= tomMatch532NameNumber_freshVar_5.getOption() ;{  tom.gom.adt.gom.types.GomType  tomMatch532NameNumber_freshVar_8=tomMatch532NameNumber_freshVar_3;if ( (tomMatch532NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  tom.gom.adt.gom.types.TypeSpec  tomMatch532NameNumber_freshVar_6= tomMatch532NameNumber_freshVar_8.getSpecialization() ;{  String  tomMatch532NameNumber_freshVar_7= tomMatch532NameNumber_freshVar_8.getName() ;

        SortDecl codomainSort = declFromTypename(tomMatch532NameNumber_freshVar_7,sortDeclList);
        TypedProduction domainSorts = typedProduction(tomMatch532NameNumber_freshVar_2,sortDeclList);
        OperatorDecl decl =  tom.gom.adt.gom.types.operatordecl.OperatorDecl.make(tomMatch532NameNumber_freshVar_1, codomainSort, domainSorts) ;
        if (operatorsForSort.containsKey(codomainSort)) {
          OperatorDeclList list = (OperatorDeclList) operatorsForSort.get(codomainSort);
          operatorsForSort.put(codomainSort, tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make(decl,tom_append_list_ConcOperator(list, tom.gom.adt.gom.types.operatordecllist.EmptyConcOperator.make() )) );
        } else {
          operatorsForSort.put(codomainSort, tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make(decl, tom.gom.adt.gom.types.operatordecllist.EmptyConcOperator.make() ) );
        }
        return decl;
      }}}}}}}}}}}}}}

    throw new GomRuntimeException(
        "TypeExpander::getOperatorDecl: wrong Production?");
  }

  private SortDecl declFromTypename(String typename,
                                    SortDeclList sortDeclList) {
    if (environment().isBuiltinSort(typename)) {
      return environment().builtinSort(typename);
    }
    {{ Object tomMatch533NameNumber_freshVar_0=sortDeclList;if ( (tomMatch533NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.SortDeclList) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch533NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.SortDeclList )tomMatch533NameNumber_freshVar_0);{  tom.gom.adt.gom.types.SortDeclList  tomMatch533NameNumber_freshVar_1=tomMatch533NameNumber_freshSubject_1;if ( ((tomMatch533NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl) || (tomMatch533NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl)) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch533NameNumber_begin_3=tomMatch533NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SortDeclList  tomMatch533NameNumber_end_4=tomMatch533NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.SortDeclList  tomMatch533NameNumber_freshVar_2=tomMatch533NameNumber_end_4;if (!( tomMatch533NameNumber_freshVar_2.isEmptyConcSortDecl() )) {{  tom.gom.adt.gom.types.SortDecl  tomMatch533NameNumber_freshVar_8= tomMatch533NameNumber_freshVar_2.getHeadConcSortDecl() ;if ( (tomMatch533NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch533NameNumber_freshVar_7= tomMatch533NameNumber_freshVar_8.getName() ;{  tom.gom.adt.gom.types.SortDeclList  tomMatch533NameNumber_freshVar_5= tomMatch533NameNumber_freshVar_2.getTailConcSortDecl() ;

        if (typename.equals(tomMatch533NameNumber_freshVar_7)) {
          return  tomMatch533NameNumber_freshVar_2.getHeadConcSortDecl() ;
        }
      }}}}}}if ( tomMatch533NameNumber_end_4.isEmptyConcSortDecl() ) {tomMatch533NameNumber_end_4=tomMatch533NameNumber_begin_3;} else {tomMatch533NameNumber_end_4= tomMatch533NameNumber_end_4.getTailConcSortDecl() ;}}} while(!( (tomMatch533NameNumber_end_4==tomMatch533NameNumber_begin_3) ));}}}}}}}}


    getLogger().log(Level.SEVERE, GomMessage.unknownSort.getMessage(),
        new Object[]{typename});
    /* If the sort is not known, assume it is a builtin */
    return  tom.gom.adt.gom.types.sortdecl.BuiltinSortDecl.make(typename) ;
  }

  private TypedProduction typedProduction(FieldList domain, SortDeclList sortDeclList) {
    {{ Object tomMatch534NameNumber_freshVar_0=domain;if ( (tomMatch534NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch534NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.FieldList )tomMatch534NameNumber_freshVar_0);{  tom.gom.adt.gom.types.FieldList  tomMatch534NameNumber_freshVar_1=tomMatch534NameNumber_freshSubject_1;if ( ((tomMatch534NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch534NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {if (!( tomMatch534NameNumber_freshVar_1.isEmptyConcField() )) {{  tom.gom.adt.gom.types.Field  tomMatch534NameNumber_freshVar_5= tomMatch534NameNumber_freshVar_1.getHeadConcField() ;if ( (tomMatch534NameNumber_freshVar_5 instanceof tom.gom.adt.gom.types.field.StarredField) ) {{  tom.gom.adt.gom.types.GomType  tomMatch534NameNumber_freshVar_3= tomMatch534NameNumber_freshVar_5.getFieldType() ;{  tom.gom.adt.gom.types.ScopeSpecifier  tomMatch534NameNumber_freshVar_4= tomMatch534NameNumber_freshVar_5.getSpecifier() ;{  tom.gom.adt.gom.types.GomType  tomMatch534NameNumber_freshVar_8=tomMatch534NameNumber_freshVar_3;if ( (tomMatch534NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  tom.gom.adt.gom.types.TypeSpec  tomMatch534NameNumber_freshVar_6= tomMatch534NameNumber_freshVar_8.getSpecialization() ;{  String  tomMatch534NameNumber_freshVar_7= tomMatch534NameNumber_freshVar_8.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch534NameNumber_freshVar_2= tomMatch534NameNumber_freshVar_1.getTailConcField() ;if ( tomMatch534NameNumber_freshVar_2.isEmptyConcField() ) {

        return  tom.gom.adt.gom.types.typedproduction.Variadic.make(declFromTypename(tomMatch534NameNumber_freshVar_7,sortDeclList)) ;
      }}}}}}}}}}}}}}}}{ Object tomMatch534NameNumber_freshVar_9=domain;if ( (tomMatch534NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch534NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.FieldList )tomMatch534NameNumber_freshVar_9);{  tom.gom.adt.gom.types.FieldList  tomMatch534NameNumber_freshVar_10=tomMatch534NameNumber_freshSubject_1;if ( ((tomMatch534NameNumber_freshVar_10 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch534NameNumber_freshVar_10 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {

        return  tom.gom.adt.gom.types.typedproduction.Slots.make(typedSlotList(tomMatch534NameNumber_freshVar_10,sortDeclList)) ;
      }}}}}}

    // the error message could be more refined
    throw new GomRuntimeException("TypeExpander::typedProduction: illformed Production");
  }

  private SlotList typedSlotList(FieldList fields, SortDeclList sortDeclList) {
    {{ Object tomMatch535NameNumber_freshVar_0=fields;if ( (tomMatch535NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch535NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.FieldList )tomMatch535NameNumber_freshVar_0);{  tom.gom.adt.gom.types.FieldList  tomMatch535NameNumber_freshVar_1=tomMatch535NameNumber_freshSubject_1;if ( ((tomMatch535NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch535NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {if ( tomMatch535NameNumber_freshVar_1.isEmptyConcField() ) {

        return  tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ;
      }}}}}}{ Object tomMatch535NameNumber_freshVar_2=fields;if ( (tomMatch535NameNumber_freshVar_2 instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch535NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.FieldList )tomMatch535NameNumber_freshVar_2);{  tom.gom.adt.gom.types.FieldList  tomMatch535NameNumber_freshVar_3=tomMatch535NameNumber_freshSubject_1;if ( ((tomMatch535NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch535NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {if (!( tomMatch535NameNumber_freshVar_3.isEmptyConcField() )) {{  tom.gom.adt.gom.types.Field  tomMatch535NameNumber_freshVar_9= tomMatch535NameNumber_freshVar_3.getHeadConcField() ;if ( (tomMatch535NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.field.NamedField) ) {{  tom.gom.adt.gom.types.ScopeSpecifier  tomMatch535NameNumber_freshVar_6= tomMatch535NameNumber_freshVar_9.getSpecifier() ;{  String  tomMatch535NameNumber_freshVar_7= tomMatch535NameNumber_freshVar_9.getName() ;{  tom.gom.adt.gom.types.GomType  tomMatch535NameNumber_freshVar_8= tomMatch535NameNumber_freshVar_9.getFieldType() ;{  tom.gom.adt.gom.types.GomType  tomMatch535NameNumber_freshVar_12=tomMatch535NameNumber_freshVar_8;if ( (tomMatch535NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  tom.gom.adt.gom.types.TypeSpec  tomMatch535NameNumber_freshVar_10= tomMatch535NameNumber_freshVar_12.getSpecialization() ;{  String  tomMatch535NameNumber_freshVar_11= tomMatch535NameNumber_freshVar_12.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch535NameNumber_freshVar_4= tomMatch535NameNumber_freshVar_3.getTailConcField() ;

        SlotList newtail = typedSlotList(tomMatch535NameNumber_freshVar_4,sortDeclList);
        return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( tom.gom.adt.gom.types.slot.Slot.make(tomMatch535NameNumber_freshVar_7, declFromTypename(tomMatch535NameNumber_freshVar_11,sortDeclList)) ,tom_append_list_ConcSlot(newtail, tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() )) ;
      }}}}}}}}}}}}}}}}}

    getLogger().log(Level.SEVERE, GomMessage.malformedProduction.getMessage(),
        new Object[]{fields.toString()});
    return  tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ;
  }

  /*
   * Get all sort declarations in a module
   */
  private Collection getSortDeclarations(GomModule module) {
    Collection result = new HashSet();
    {{ Object tomMatch536NameNumber_freshVar_0=module;if ( (tomMatch536NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch536NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch536NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch536NameNumber_freshVar_3=tomMatch536NameNumber_freshSubject_1;if ( (tomMatch536NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch536NameNumber_freshVar_1= tomMatch536NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch536NameNumber_freshVar_2= tomMatch536NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch536NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch536NameNumber_freshVar_4=tomMatch536NameNumber_freshVar_2;if ( ((tomMatch536NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch536NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch536NameNumber_begin_6=tomMatch536NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch536NameNumber_end_7=tomMatch536NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch536NameNumber_freshVar_5=tomMatch536NameNumber_end_7;if (!( tomMatch536NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch536NameNumber_freshVar_11= tomMatch536NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch536NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch536NameNumber_freshVar_10= tomMatch536NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch536NameNumber_freshVar_12=tomMatch536NameNumber_freshVar_10;if ( ((tomMatch536NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch536NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch536NameNumber_begin_14=tomMatch536NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch536NameNumber_end_15=tomMatch536NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch536NameNumber_freshVar_13=tomMatch536NameNumber_end_15;if (!( tomMatch536NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch536NameNumber_freshVar_19= tomMatch536NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch536NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Sorts) ) {{  tom.gom.adt.gom.types.GomTypeList  tomMatch536NameNumber_freshVar_18= tomMatch536NameNumber_freshVar_19.getTypeList() ;{  tom.gom.adt.gom.types.GomTypeList  tomMatch536NameNumber_freshVar_20=tomMatch536NameNumber_freshVar_18;if ( ((tomMatch536NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.gomtypelist.ConsConcGomType) || (tomMatch536NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.gomtypelist.EmptyConcGomType)) ) {{  tom.gom.adt.gom.types.GomTypeList  tomMatch536NameNumber_begin_22=tomMatch536NameNumber_freshVar_20;{  tom.gom.adt.gom.types.GomTypeList  tomMatch536NameNumber_end_23=tomMatch536NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.GomTypeList  tomMatch536NameNumber_freshVar_21=tomMatch536NameNumber_end_23;if (!( tomMatch536NameNumber_freshVar_21.isEmptyConcGomType() )) {{  tom.gom.adt.gom.types.GomType  tomMatch536NameNumber_freshVar_28= tomMatch536NameNumber_freshVar_21.getHeadConcGomType() ;if ( (tomMatch536NameNumber_freshVar_28 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  tom.gom.adt.gom.types.TypeSpec  tomMatch536NameNumber_freshVar_26= tomMatch536NameNumber_freshVar_28.getSpecialization() ;{  String  tomMatch536NameNumber_freshVar_27= tomMatch536NameNumber_freshVar_28.getName() ;{  String  tom_typeName=tomMatch536NameNumber_freshVar_27;{  tom.gom.adt.gom.types.GomTypeList  tomMatch536NameNumber_freshVar_24= tomMatch536NameNumber_freshVar_21.getTailConcGomType() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch536NameNumber_freshVar_16= tomMatch536NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch536NameNumber_freshVar_8= tomMatch536NameNumber_freshVar_5.getTailConcSection() ;



        if (environment().isBuiltinSort(tom_typeName)) {
          getLogger().log(Level.SEVERE, GomMessage.operatorOnBuiltin.getMessage(),
            new Object[]{(tom_typeName)});
          result.add(environment().builtinSort(tom_typeName));
        } else {
          result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tom_typeName,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
        }
      }}}}}}}}}}if ( tomMatch536NameNumber_end_23.isEmptyConcGomType() ) {tomMatch536NameNumber_end_23=tomMatch536NameNumber_begin_22;} else {tomMatch536NameNumber_end_23= tomMatch536NameNumber_end_23.getTailConcGomType() ;}}} while(!( (tomMatch536NameNumber_end_23==tomMatch536NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch536NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch536NameNumber_end_15=tomMatch536NameNumber_begin_14;} else {tomMatch536NameNumber_end_15= tomMatch536NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch536NameNumber_end_15==tomMatch536NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch536NameNumber_end_7.isEmptyConcSection() ) {tomMatch536NameNumber_end_7=tomMatch536NameNumber_begin_6;} else {tomMatch536NameNumber_end_7= tomMatch536NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch536NameNumber_end_7==tomMatch536NameNumber_begin_6) ));}}}}}}}}}}}}}{{ Object tomMatch537NameNumber_freshVar_0=module;if ( (tomMatch537NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch537NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch537NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch537NameNumber_freshVar_3=tomMatch537NameNumber_freshSubject_1;if ( (tomMatch537NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch537NameNumber_freshVar_1= tomMatch537NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch537NameNumber_freshVar_2= tomMatch537NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch537NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch537NameNumber_freshVar_4=tomMatch537NameNumber_freshVar_2;if ( ((tomMatch537NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch537NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch537NameNumber_begin_6=tomMatch537NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch537NameNumber_end_7=tomMatch537NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch537NameNumber_freshVar_5=tomMatch537NameNumber_end_7;if (!( tomMatch537NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch537NameNumber_freshVar_11= tomMatch537NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch537NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch537NameNumber_freshVar_10= tomMatch537NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch537NameNumber_freshVar_12=tomMatch537NameNumber_freshVar_10;if ( ((tomMatch537NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch537NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch537NameNumber_begin_14=tomMatch537NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch537NameNumber_end_15=tomMatch537NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch537NameNumber_freshVar_13=tomMatch537NameNumber_end_15;if (!( tomMatch537NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch537NameNumber_freshVar_19= tomMatch537NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch537NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch537NameNumber_freshVar_18= tomMatch537NameNumber_freshVar_19.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch537NameNumber_freshVar_20=tomMatch537NameNumber_freshVar_18;if ( ((tomMatch537NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch537NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch537NameNumber_begin_22=tomMatch537NameNumber_freshVar_20;{  tom.gom.adt.gom.types.ProductionList  tomMatch537NameNumber_end_23=tomMatch537NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch537NameNumber_freshVar_21=tomMatch537NameNumber_end_23;if (!( tomMatch537NameNumber_freshVar_21.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch537NameNumber_freshVar_27= tomMatch537NameNumber_freshVar_21.getHeadConcProduction() ;if ( (tomMatch537NameNumber_freshVar_27 instanceof tom.gom.adt.gom.types.production.SortType) ) {{  tom.gom.adt.gom.types.GomType  tomMatch537NameNumber_freshVar_26= tomMatch537NameNumber_freshVar_27.getType() ;{  tom.gom.adt.gom.types.GomType  tomMatch537NameNumber_freshVar_30=tomMatch537NameNumber_freshVar_26;if ( (tomMatch537NameNumber_freshVar_30 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  tom.gom.adt.gom.types.TypeSpec  tomMatch537NameNumber_freshVar_28= tomMatch537NameNumber_freshVar_30.getSpecialization() ;{  String  tomMatch537NameNumber_freshVar_29= tomMatch537NameNumber_freshVar_30.getName() ;{  String  tom_typeName=tomMatch537NameNumber_freshVar_29;{  tom.gom.adt.gom.types.ProductionList  tomMatch537NameNumber_freshVar_24= tomMatch537NameNumber_freshVar_21.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch537NameNumber_freshVar_16= tomMatch537NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch537NameNumber_freshVar_8= tomMatch537NameNumber_freshVar_5.getTailConcSection() ;







        if (environment().isBuiltinSort(tom_typeName)) {
          getLogger().log(Level.SEVERE, GomMessage.operatorOnBuiltin.getMessage(),
            new Object[]{(tom_typeName)});
          result.add(environment().builtinSort(tom_typeName));
        } else {
          result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tom_typeName,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
        }
      }}}}}}}}}}}}}if ( tomMatch537NameNumber_end_23.isEmptyConcProduction() ) {tomMatch537NameNumber_end_23=tomMatch537NameNumber_begin_22;} else {tomMatch537NameNumber_end_23= tomMatch537NameNumber_end_23.getTailConcProduction() ;}}} while(!( (tomMatch537NameNumber_end_23==tomMatch537NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch537NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch537NameNumber_end_15=tomMatch537NameNumber_begin_14;} else {tomMatch537NameNumber_end_15= tomMatch537NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch537NameNumber_end_15==tomMatch537NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch537NameNumber_end_7.isEmptyConcSection() ) {tomMatch537NameNumber_end_7=tomMatch537NameNumber_begin_6;} else {tomMatch537NameNumber_end_7= tomMatch537NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch537NameNumber_end_7==tomMatch537NameNumber_begin_6) ));}}}}}}}}}}}}}

    return result;
  }

  /*
   * Get all sort uses in a module (as codomain of an operator)
   */
  private Collection getSortDeclarationInCodomain(GomModule module) {
    Collection result = new HashSet();
    {{ Object tomMatch538NameNumber_freshVar_0=module;if ( (tomMatch538NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch538NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch538NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch538NameNumber_freshVar_3=tomMatch538NameNumber_freshSubject_1;if ( (tomMatch538NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch538NameNumber_freshVar_1= tomMatch538NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch538NameNumber_freshVar_2= tomMatch538NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch538NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch538NameNumber_freshVar_4=tomMatch538NameNumber_freshVar_2;if ( ((tomMatch538NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch538NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch538NameNumber_begin_6=tomMatch538NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch538NameNumber_end_7=tomMatch538NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch538NameNumber_freshVar_5=tomMatch538NameNumber_end_7;if (!( tomMatch538NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch538NameNumber_freshVar_11= tomMatch538NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch538NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch538NameNumber_freshVar_10= tomMatch538NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch538NameNumber_freshVar_12=tomMatch538NameNumber_freshVar_10;if ( ((tomMatch538NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch538NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch538NameNumber_begin_14=tomMatch538NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch538NameNumber_end_15=tomMatch538NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch538NameNumber_freshVar_13=tomMatch538NameNumber_end_15;if (!( tomMatch538NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch538NameNumber_freshVar_19= tomMatch538NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch538NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch538NameNumber_freshVar_18= tomMatch538NameNumber_freshVar_19.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch538NameNumber_freshVar_20=tomMatch538NameNumber_freshVar_18;if ( ((tomMatch538NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch538NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch538NameNumber_begin_22=tomMatch538NameNumber_freshVar_20;{  tom.gom.adt.gom.types.ProductionList  tomMatch538NameNumber_end_23=tomMatch538NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch538NameNumber_freshVar_21=tomMatch538NameNumber_end_23;if (!( tomMatch538NameNumber_freshVar_21.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch538NameNumber_freshVar_30= tomMatch538NameNumber_freshVar_21.getHeadConcProduction() ;if ( (tomMatch538NameNumber_freshVar_30 instanceof tom.gom.adt.gom.types.production.Production) ) {{  String  tomMatch538NameNumber_freshVar_26= tomMatch538NameNumber_freshVar_30.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch538NameNumber_freshVar_27= tomMatch538NameNumber_freshVar_30.getDomainList() ;{  tom.gom.adt.gom.types.GomType  tomMatch538NameNumber_freshVar_28= tomMatch538NameNumber_freshVar_30.getCodomain() ;{  tom.gom.adt.gom.types.Option  tomMatch538NameNumber_freshVar_29= tomMatch538NameNumber_freshVar_30.getOption() ;{  tom.gom.adt.gom.types.GomType  tomMatch538NameNumber_freshVar_33=tomMatch538NameNumber_freshVar_28;if ( (tomMatch538NameNumber_freshVar_33 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  tom.gom.adt.gom.types.TypeSpec  tomMatch538NameNumber_freshVar_31= tomMatch538NameNumber_freshVar_33.getSpecialization() ;{  String  tomMatch538NameNumber_freshVar_32= tomMatch538NameNumber_freshVar_33.getName() ;{  String  tom_typeName=tomMatch538NameNumber_freshVar_32;{  tom.gom.adt.gom.types.ProductionList  tomMatch538NameNumber_freshVar_24= tomMatch538NameNumber_freshVar_21.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch538NameNumber_freshVar_16= tomMatch538NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch538NameNumber_freshVar_8= tomMatch538NameNumber_freshVar_5.getTailConcSection() ;











        if (environment().isBuiltinSort(tom_typeName)) {
          result.add(environment().builtinSort(tom_typeName));
        } else {
          result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tom_typeName,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
        }
      }}}}}}}}}}}}}}}}if ( tomMatch538NameNumber_end_23.isEmptyConcProduction() ) {tomMatch538NameNumber_end_23=tomMatch538NameNumber_begin_22;} else {tomMatch538NameNumber_end_23= tomMatch538NameNumber_end_23.getTailConcProduction() ;}}} while(!( (tomMatch538NameNumber_end_23==tomMatch538NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch538NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch538NameNumber_end_15=tomMatch538NameNumber_begin_14;} else {tomMatch538NameNumber_end_15= tomMatch538NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch538NameNumber_end_15==tomMatch538NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch538NameNumber_end_7.isEmptyConcSection() ) {tomMatch538NameNumber_end_7=tomMatch538NameNumber_begin_6;} else {tomMatch538NameNumber_end_7= tomMatch538NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch538NameNumber_end_7==tomMatch538NameNumber_begin_6) ));}}}}}}}}}}}}}{{ Object tomMatch539NameNumber_freshVar_0=module;if ( (tomMatch539NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch539NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch539NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch539NameNumber_freshVar_3=tomMatch539NameNumber_freshSubject_1;if ( (tomMatch539NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch539NameNumber_freshVar_1= tomMatch539NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch539NameNumber_freshVar_2= tomMatch539NameNumber_freshVar_3.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch539NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch539NameNumber_freshVar_4=tomMatch539NameNumber_freshVar_2;if ( ((tomMatch539NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch539NameNumber_freshVar_4 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch539NameNumber_begin_6=tomMatch539NameNumber_freshVar_4;{  tom.gom.adt.gom.types.SectionList  tomMatch539NameNumber_end_7=tomMatch539NameNumber_freshVar_4;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch539NameNumber_freshVar_5=tomMatch539NameNumber_end_7;if (!( tomMatch539NameNumber_freshVar_5.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch539NameNumber_freshVar_11= tomMatch539NameNumber_freshVar_5.getHeadConcSection() ;if ( (tomMatch539NameNumber_freshVar_11 instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch539NameNumber_freshVar_10= tomMatch539NameNumber_freshVar_11.getGrammarList() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch539NameNumber_freshVar_12=tomMatch539NameNumber_freshVar_10;if ( ((tomMatch539NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch539NameNumber_freshVar_12 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch539NameNumber_begin_14=tomMatch539NameNumber_freshVar_12;{  tom.gom.adt.gom.types.GrammarList  tomMatch539NameNumber_end_15=tomMatch539NameNumber_freshVar_12;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch539NameNumber_freshVar_13=tomMatch539NameNumber_end_15;if (!( tomMatch539NameNumber_freshVar_13.isEmptyConcGrammar() )) {{  tom.gom.adt.gom.types.Grammar  tomMatch539NameNumber_freshVar_19= tomMatch539NameNumber_freshVar_13.getHeadConcGrammar() ;if ( (tomMatch539NameNumber_freshVar_19 instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_freshVar_18= tomMatch539NameNumber_freshVar_19.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_freshVar_20=tomMatch539NameNumber_freshVar_18;if ( ((tomMatch539NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch539NameNumber_freshVar_20 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_begin_22=tomMatch539NameNumber_freshVar_20;{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_end_23=tomMatch539NameNumber_freshVar_20;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_freshVar_21=tomMatch539NameNumber_end_23;if (!( tomMatch539NameNumber_freshVar_21.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch539NameNumber_freshVar_27= tomMatch539NameNumber_freshVar_21.getHeadConcProduction() ;if ( (tomMatch539NameNumber_freshVar_27 instanceof tom.gom.adt.gom.types.production.SortType) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_freshVar_26= tomMatch539NameNumber_freshVar_27.getProductionList() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_freshVar_28=tomMatch539NameNumber_freshVar_26;if ( ((tomMatch539NameNumber_freshVar_28 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch539NameNumber_freshVar_28 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_begin_30=tomMatch539NameNumber_freshVar_28;{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_end_31=tomMatch539NameNumber_freshVar_28;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_freshVar_29=tomMatch539NameNumber_end_31;if (!( tomMatch539NameNumber_freshVar_29.isEmptyConcProduction() )) {{  tom.gom.adt.gom.types.Production  tomMatch539NameNumber_freshVar_38= tomMatch539NameNumber_freshVar_29.getHeadConcProduction() ;if ( (tomMatch539NameNumber_freshVar_38 instanceof tom.gom.adt.gom.types.production.Production) ) {{  String  tomMatch539NameNumber_freshVar_34= tomMatch539NameNumber_freshVar_38.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch539NameNumber_freshVar_35= tomMatch539NameNumber_freshVar_38.getDomainList() ;{  tom.gom.adt.gom.types.GomType  tomMatch539NameNumber_freshVar_36= tomMatch539NameNumber_freshVar_38.getCodomain() ;{  tom.gom.adt.gom.types.Option  tomMatch539NameNumber_freshVar_37= tomMatch539NameNumber_freshVar_38.getOption() ;{  tom.gom.adt.gom.types.GomType  tomMatch539NameNumber_freshVar_41=tomMatch539NameNumber_freshVar_36;if ( (tomMatch539NameNumber_freshVar_41 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  tom.gom.adt.gom.types.TypeSpec  tomMatch539NameNumber_freshVar_39= tomMatch539NameNumber_freshVar_41.getSpecialization() ;{  String  tomMatch539NameNumber_freshVar_40= tomMatch539NameNumber_freshVar_41.getName() ;{  String  tom_typeName=tomMatch539NameNumber_freshVar_40;{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_freshVar_32= tomMatch539NameNumber_freshVar_29.getTailConcProduction() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch539NameNumber_freshVar_24= tomMatch539NameNumber_freshVar_21.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch539NameNumber_freshVar_16= tomMatch539NameNumber_freshVar_13.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch539NameNumber_freshVar_8= tomMatch539NameNumber_freshVar_5.getTailConcSection() ;













        if (environment().isBuiltinSort(tom_typeName)) {
          result.add(environment().builtinSort(tom_typeName));
        } else {
          result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tom_typeName,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
        }
      }}}}}}}}}}}}}}}}}if ( tomMatch539NameNumber_end_31.isEmptyConcProduction() ) {tomMatch539NameNumber_end_31=tomMatch539NameNumber_begin_30;} else {tomMatch539NameNumber_end_31= tomMatch539NameNumber_end_31.getTailConcProduction() ;}}} while(!( (tomMatch539NameNumber_end_31==tomMatch539NameNumber_begin_30) ));}}}}}}}}}if ( tomMatch539NameNumber_end_23.isEmptyConcProduction() ) {tomMatch539NameNumber_end_23=tomMatch539NameNumber_begin_22;} else {tomMatch539NameNumber_end_23= tomMatch539NameNumber_end_23.getTailConcProduction() ;}}} while(!( (tomMatch539NameNumber_end_23==tomMatch539NameNumber_begin_22) ));}}}}}}}}}if ( tomMatch539NameNumber_end_15.isEmptyConcGrammar() ) {tomMatch539NameNumber_end_15=tomMatch539NameNumber_begin_14;} else {tomMatch539NameNumber_end_15= tomMatch539NameNumber_end_15.getTailConcGrammar() ;}}} while(!( (tomMatch539NameNumber_end_15==tomMatch539NameNumber_begin_14) ));}}}}}}}}}if ( tomMatch539NameNumber_end_7.isEmptyConcSection() ) {tomMatch539NameNumber_end_7=tomMatch539NameNumber_begin_6;} else {tomMatch539NameNumber_end_7= tomMatch539NameNumber_end_7.getTailConcSection() ;}}} while(!( (tomMatch539NameNumber_end_7==tomMatch539NameNumber_begin_6) ));}}}}}}}}}}}}}

    return result;
  }

  /**
   * Get directly imported modules. Skip builtins
   *
   * @param module the main module with imports
   * @return the Collection of imported GomModuleName
   */
  private Collection getImportedModules(GomModule module) {
    Set imports = new HashSet();
    {{ Object tomMatch540NameNumber_freshVar_0=module;if ( (tomMatch540NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch540NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.GomModule )tomMatch540NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModule  tomMatch540NameNumber_freshVar_3=tomMatch540NameNumber_freshSubject_1;if ( (tomMatch540NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch540NameNumber_freshVar_1= tomMatch540NameNumber_freshVar_3.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch540NameNumber_freshVar_2= tomMatch540NameNumber_freshVar_3.getSectionList() ;

        imports.add(tomMatch540NameNumber_freshVar_1);
        {{ Object tomMatch541NameNumber_freshVar_0=tomMatch540NameNumber_freshVar_2;if ( (tomMatch541NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.SectionList) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch541NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.SectionList )tomMatch541NameNumber_freshVar_0);{  tom.gom.adt.gom.types.SectionList  tomMatch541NameNumber_freshVar_1=tomMatch541NameNumber_freshSubject_1;if ( ((tomMatch541NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch541NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch541NameNumber_begin_3=tomMatch541NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch541NameNumber_end_4=tomMatch541NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch541NameNumber_freshVar_2=tomMatch541NameNumber_end_4;if (!( tomMatch541NameNumber_freshVar_2.isEmptyConcSection() )) {{  tom.gom.adt.gom.types.Section  tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_2.getHeadConcSection() ;if ( (tomMatch541NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.section.Imports) ) {{  tom.gom.adt.gom.types.ImportList  tomMatch541NameNumber_freshVar_7= tomMatch541NameNumber_freshVar_8.getImportList() ;{  tom.gom.adt.gom.types.ImportList  tomMatch541NameNumber_freshVar_9=tomMatch541NameNumber_freshVar_7;if ( ((tomMatch541NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.importlist.ConsConcImportedModule) || (tomMatch541NameNumber_freshVar_9 instanceof tom.gom.adt.gom.types.importlist.EmptyConcImportedModule)) ) {{  tom.gom.adt.gom.types.ImportList  tomMatch541NameNumber_begin_11=tomMatch541NameNumber_freshVar_9;{  tom.gom.adt.gom.types.ImportList  tomMatch541NameNumber_end_12=tomMatch541NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.ImportList  tomMatch541NameNumber_freshVar_10=tomMatch541NameNumber_end_12;if (!( tomMatch541NameNumber_freshVar_10.isEmptyConcImportedModule() )) {{  tom.gom.adt.gom.types.ImportedModule  tomMatch541NameNumber_freshVar_16= tomMatch541NameNumber_freshVar_10.getHeadConcImportedModule() ;if ( (tomMatch541NameNumber_freshVar_16 instanceof tom.gom.adt.gom.types.importedmodule.Import) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch541NameNumber_freshVar_15= tomMatch541NameNumber_freshVar_16.getModuleName() ;{  tom.gom.adt.gom.types.GomModuleName  tomMatch541NameNumber_freshVar_18=tomMatch541NameNumber_freshVar_15;if ( (tomMatch541NameNumber_freshVar_18 instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName) ) {{  String  tomMatch541NameNumber_freshVar_17= tomMatch541NameNumber_freshVar_18.getName() ;{  tom.gom.adt.gom.types.ImportList  tomMatch541NameNumber_freshVar_13= tomMatch541NameNumber_freshVar_10.getTailConcImportedModule() ;{  tom.gom.adt.gom.types.SectionList  tomMatch541NameNumber_freshVar_5= tomMatch541NameNumber_freshVar_2.getTailConcSection() ;





            if (!environment().isBuiltin(tomMatch541NameNumber_freshVar_17)) {
              imports.add(tomMatch541NameNumber_freshVar_15);
            }
          }}}}}}}}}}if ( tomMatch541NameNumber_end_12.isEmptyConcImportedModule() ) {tomMatch541NameNumber_end_12=tomMatch541NameNumber_begin_11;} else {tomMatch541NameNumber_end_12= tomMatch541NameNumber_end_12.getTailConcImportedModule() ;}}} while(!( (tomMatch541NameNumber_end_12==tomMatch541NameNumber_begin_11) ));}}}}}}}}}if ( tomMatch541NameNumber_end_4.isEmptyConcSection() ) {tomMatch541NameNumber_end_4=tomMatch541NameNumber_begin_3;} else {tomMatch541NameNumber_end_4= tomMatch541NameNumber_end_4.getTailConcSection() ;}}} while(!( (tomMatch541NameNumber_end_4==tomMatch541NameNumber_begin_3) ));}}}}}}}}

      }}}}}}}}

    return imports;
  }

  private GomModule getModule(GomModuleName modname, GomModuleList list) {
    {{ Object tomMatch542NameNumber_freshVar_0=list;if ( (tomMatch542NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModuleList) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch542NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.GomModuleList )tomMatch542NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModuleList  tomMatch542NameNumber_freshVar_1=tomMatch542NameNumber_freshSubject_1;if ( ((tomMatch542NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule) || (tomMatch542NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.gommodulelist.EmptyConcGomModule)) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch542NameNumber_begin_3=tomMatch542NameNumber_freshVar_1;{  tom.gom.adt.gom.types.GomModuleList  tomMatch542NameNumber_end_4=tomMatch542NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.GomModuleList  tomMatch542NameNumber_freshVar_2=tomMatch542NameNumber_end_4;if (!( tomMatch542NameNumber_freshVar_2.isEmptyConcGomModule() )) {{  tom.gom.adt.gom.types.GomModule  tomMatch542NameNumber_freshVar_8= tomMatch542NameNumber_freshVar_2.getHeadConcGomModule() ;if ( (tomMatch542NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch542NameNumber_freshVar_7= tomMatch542NameNumber_freshVar_8.getModuleName() ;{  tom.gom.adt.gom.types.GomModuleList  tomMatch542NameNumber_freshVar_5= tomMatch542NameNumber_freshVar_2.getTailConcGomModule() ;

        if (tomMatch542NameNumber_freshVar_7.equals(modname)) {
          return  tomMatch542NameNumber_freshVar_2.getHeadConcGomModule() ;
        }
      }}}}}}if ( tomMatch542NameNumber_end_4.isEmptyConcGomModule() ) {tomMatch542NameNumber_end_4=tomMatch542NameNumber_begin_3;} else {tomMatch542NameNumber_end_4= tomMatch542NameNumber_end_4.getTailConcGomModule() ;}}} while(!( (tomMatch542NameNumber_end_4==tomMatch542NameNumber_begin_3) ));}}}}}}}}

    throw new GomRuntimeException("Module "+ modname +" not present");
  }

  private Collection getTransitiveClosureImports(GomModule module,
      GomModuleList moduleList) {
    Set imported = new HashSet();
    imported.addAll(getImportedModules(module));

    Set newSet = new HashSet();
    while(!newSet.equals(imported)) {
      newSet.addAll(imported);
      imported.addAll(newSet);
      Iterator it = imported.iterator();
      while(it.hasNext()) {
        GomModuleName modname = (GomModuleName) it.next();
        newSet.addAll(getImportedModules(getModule(modname,moduleList)));
      }
    }
    return newSet;
  }

  private void buildDependencyMap(GomModuleList moduleList) {
    {{ Object tomMatch543NameNumber_freshVar_0=moduleList;if ( (tomMatch543NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.GomModuleList) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch543NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.GomModuleList )tomMatch543NameNumber_freshVar_0);{  tom.gom.adt.gom.types.GomModuleList  tomMatch543NameNumber_freshVar_1=tomMatch543NameNumber_freshSubject_1;if ( ((tomMatch543NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule) || (tomMatch543NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.gommodulelist.EmptyConcGomModule)) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch543NameNumber_begin_3=tomMatch543NameNumber_freshVar_1;{  tom.gom.adt.gom.types.GomModuleList  tomMatch543NameNumber_end_4=tomMatch543NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.GomModuleList  tomMatch543NameNumber_freshVar_2=tomMatch543NameNumber_end_4;if (!( tomMatch543NameNumber_freshVar_2.isEmptyConcGomModule() )) {{  tom.gom.adt.gom.types.GomModule  tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_2.getHeadConcGomModule() ;if ( (tomMatch543NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch543NameNumber_freshVar_7= tomMatch543NameNumber_freshVar_8.getModuleName() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch543NameNumber_freshVar_7;{  tom.gom.adt.gom.types.GomModuleList  tomMatch543NameNumber_freshVar_5= tomMatch543NameNumber_freshVar_2.getTailConcGomModule() ;

        ModuleDeclList importsModuleDeclList =  tom.gom.adt.gom.types.moduledecllist.EmptyConcModuleDecl.make() ;
        Iterator it = getTransitiveClosureImports( tomMatch543NameNumber_freshVar_2.getHeadConcGomModule() ,moduleList).iterator();
        while(it.hasNext()) {
          GomModuleName importedModuleName = (GomModuleName) it.next();


          importsModuleDeclList = 
             tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(importedModuleName, streamManager.getPackagePath(importedModuleName.getName())) ,tom_append_list_ConcModuleDecl(importsModuleDeclList, tom.gom.adt.gom.types.moduledecllist.EmptyConcModuleDecl.make() )) 
;
        }
        environment().addModuleDependency(
             tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ,importsModuleDeclList);
      }}}}}}}if ( tomMatch543NameNumber_end_4.isEmptyConcGomModule() ) {tomMatch543NameNumber_end_4=tomMatch543NameNumber_begin_3;} else {tomMatch543NameNumber_end_4= tomMatch543NameNumber_end_4.getTailConcGomModule() ;}}} while(!( (tomMatch543NameNumber_end_4==tomMatch543NameNumber_begin_3) ));}}}}}}}}

  }

  private boolean checkSortValidity(Sort sort) {
    boolean valid = true;
    // check if the same slot name is used with different types
    Map mapNameType = new HashMap();
    {{ Object tomMatch544NameNumber_freshVar_0=sort;if ( (tomMatch544NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.Sort) ) {{  tom.gom.adt.gom.types.Sort  tomMatch544NameNumber_freshSubject_1=(( tom.gom.adt.gom.types.Sort )tomMatch544NameNumber_freshVar_0);{  tom.gom.adt.gom.types.Sort  tomMatch544NameNumber_freshVar_3=tomMatch544NameNumber_freshSubject_1;if ( (tomMatch544NameNumber_freshVar_3 instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.SortDecl  tomMatch544NameNumber_freshVar_1= tomMatch544NameNumber_freshVar_3.getDecl() ;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch544NameNumber_freshVar_2= tomMatch544NameNumber_freshVar_3.getOperatorDecls() ;{  tom.gom.adt.gom.types.SortDecl  tomMatch544NameNumber_freshVar_5=tomMatch544NameNumber_freshVar_1;{ boolean tomMatch544NameNumber_freshVar_25= false ;{  String  tomMatch544NameNumber_freshVar_4= "" ;if ( (tomMatch544NameNumber_freshVar_5 instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{tomMatch544NameNumber_freshVar_25= true ;tomMatch544NameNumber_freshVar_4= tomMatch544NameNumber_freshVar_5.getName() ;}} else {if ( (tomMatch544NameNumber_freshVar_5 instanceof tom.gom.adt.gom.types.sortdecl.BuiltinSortDecl) ) {{tomMatch544NameNumber_freshVar_25= true ;tomMatch544NameNumber_freshVar_4= tomMatch544NameNumber_freshVar_5.getName() ;}}}if ((tomMatch544NameNumber_freshVar_25 ==  true )) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch544NameNumber_freshVar_6=tomMatch544NameNumber_freshVar_2;if ( ((tomMatch544NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.operatordecllist.ConsConcOperator) || (tomMatch544NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.operatordecllist.EmptyConcOperator)) ) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch544NameNumber_begin_8=tomMatch544NameNumber_freshVar_6;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch544NameNumber_end_9=tomMatch544NameNumber_freshVar_6;do {{{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch544NameNumber_freshVar_7=tomMatch544NameNumber_end_9;if (!( tomMatch544NameNumber_freshVar_7.isEmptyConcOperator() )) {{  tom.gom.adt.gom.types.OperatorDecl  tomMatch544NameNumber_freshVar_13= tomMatch544NameNumber_freshVar_7.getHeadConcOperator() ;if ( (tomMatch544NameNumber_freshVar_13 instanceof tom.gom.adt.gom.types.operatordecl.OperatorDecl) ) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch544NameNumber_freshVar_12= tomMatch544NameNumber_freshVar_13.getProd() ;{  tom.gom.adt.gom.types.TypedProduction  tomMatch544NameNumber_freshVar_15=tomMatch544NameNumber_freshVar_12;if ( (tomMatch544NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.typedproduction.Slots) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch544NameNumber_freshVar_14= tomMatch544NameNumber_freshVar_15.getSlots() ;{  tom.gom.adt.gom.types.SlotList  tomMatch544NameNumber_freshVar_16=tomMatch544NameNumber_freshVar_14;if ( ((tomMatch544NameNumber_freshVar_16 instanceof tom.gom.adt.gom.types.slotlist.ConsConcSlot) || (tomMatch544NameNumber_freshVar_16 instanceof tom.gom.adt.gom.types.slotlist.EmptyConcSlot)) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch544NameNumber_begin_18=tomMatch544NameNumber_freshVar_16;{  tom.gom.adt.gom.types.SlotList  tomMatch544NameNumber_end_19=tomMatch544NameNumber_freshVar_16;do {{{  tom.gom.adt.gom.types.SlotList  tomMatch544NameNumber_freshVar_17=tomMatch544NameNumber_end_19;if (!( tomMatch544NameNumber_freshVar_17.isEmptyConcSlot() )) {{  tom.gom.adt.gom.types.Slot  tomMatch544NameNumber_freshVar_24= tomMatch544NameNumber_freshVar_17.getHeadConcSlot() ;if ( (tomMatch544NameNumber_freshVar_24 instanceof tom.gom.adt.gom.types.slot.Slot) ) {{  String  tomMatch544NameNumber_freshVar_22= tomMatch544NameNumber_freshVar_24.getName() ;{  tom.gom.adt.gom.types.SortDecl  tomMatch544NameNumber_freshVar_23= tomMatch544NameNumber_freshVar_24.getSort() ;{  String  tom_slotName=tomMatch544NameNumber_freshVar_22;{  tom.gom.adt.gom.types.SortDecl  tom_slotSort=tomMatch544NameNumber_freshVar_23;{  tom.gom.adt.gom.types.SlotList  tomMatch544NameNumber_freshVar_20= tomMatch544NameNumber_freshVar_17.getTailConcSlot() ;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch544NameNumber_freshVar_10= tomMatch544NameNumber_freshVar_7.getTailConcOperator() ;






        if(!mapNameType.containsKey(tom_slotName)) {
          mapNameType.put(tom_slotName,tom_slotSort);
        } else {
          SortDecl prevSort = (SortDecl) mapNameType.get(tom_slotName);
          if (!prevSort.equals(tom_slotSort)) {
            getLogger().log(Level.SEVERE,
                GomMessage.slotIncompatibleTypes.getMessage(),
                new Object[]{tomMatch544NameNumber_freshVar_4,tom_slotName,prevSort.getName(),
                             (tom_slotSort).getName()});
            valid = false;
          }
        }
      }}}}}}}}}}if ( tomMatch544NameNumber_end_19.isEmptyConcSlot() ) {tomMatch544NameNumber_end_19=tomMatch544NameNumber_begin_18;} else {tomMatch544NameNumber_end_19= tomMatch544NameNumber_end_19.getTailConcSlot() ;}}} while(!( (tomMatch544NameNumber_end_19==tomMatch544NameNumber_begin_18) ));}}}}}}}}}}}}if ( tomMatch544NameNumber_end_9.isEmptyConcOperator() ) {tomMatch544NameNumber_end_9=tomMatch544NameNumber_begin_8;} else {tomMatch544NameNumber_end_9= tomMatch544NameNumber_end_9.getTailConcOperator() ;}}} while(!( (tomMatch544NameNumber_end_9==tomMatch544NameNumber_begin_8) ));}}}}}}}}}}}}}}}}

    return valid;
  }

  private String showSortList(Collection decls) {
    String sorts = "";
    Iterator it = decls.iterator();
    if(it.hasNext()) {
      SortDecl decl = (SortDecl)it.next();
      sorts += decl.getName();
    }
    while(it.hasNext()) {
      SortDecl decl = (SortDecl)it.next();
      sorts += ", "+decl.getName();
    }
    return sorts;
  }

  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }
}

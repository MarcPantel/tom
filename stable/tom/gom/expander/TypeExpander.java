/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * GOM
 *
 * Copyright (c) 2006-2008, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Antoine Reilles  e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.expander;

import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.gom.GomMessage;
import tom.gom.GomStreamManager;
import tom.gom.tools.GomEnvironment;
import tom.gom.adt.gom.*;
import tom.gom.adt.gom.types.*;
import tom.gom.tools.error.GomRuntimeException;

public class TypeExpander {

  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.gom.adt.gom.types.GomModuleList  tom_append_list_ConcGomModule( tom.gom.adt.gom.types.GomModuleList l1,  tom.gom.adt.gom.types.GomModuleList  l2) {     if( l1.isEmptyConcGomModule() ) {       return l2;     } else if( l2.isEmptyConcGomModule() ) {       return l1;     } else if(  l1.getTailConcGomModule() .isEmptyConcGomModule() ) {       return  tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule.make( l1.getHeadConcGomModule() ,l2) ;     } else {       return  tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule.make( l1.getHeadConcGomModule() ,tom_append_list_ConcGomModule( l1.getTailConcGomModule() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.GomModuleList  tom_get_slice_ConcGomModule( tom.gom.adt.gom.types.GomModuleList  begin,  tom.gom.adt.gom.types.GomModuleList  end, tom.gom.adt.gom.types.GomModuleList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule.make( begin.getHeadConcGomModule() ,( tom.gom.adt.gom.types.GomModuleList )tom_get_slice_ConcGomModule( begin.getTailConcGomModule() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.GrammarList  tom_append_list_ConcGrammar( tom.gom.adt.gom.types.GrammarList l1,  tom.gom.adt.gom.types.GrammarList  l2) {     if( l1.isEmptyConcGrammar() ) {       return l2;     } else if( l2.isEmptyConcGrammar() ) {       return l1;     } else if(  l1.getTailConcGrammar() .isEmptyConcGrammar() ) {       return  tom.gom.adt.gom.types.grammarlist.ConsConcGrammar.make( l1.getHeadConcGrammar() ,l2) ;     } else {       return  tom.gom.adt.gom.types.grammarlist.ConsConcGrammar.make( l1.getHeadConcGrammar() ,tom_append_list_ConcGrammar( l1.getTailConcGrammar() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.GrammarList  tom_get_slice_ConcGrammar( tom.gom.adt.gom.types.GrammarList  begin,  tom.gom.adt.gom.types.GrammarList  end, tom.gom.adt.gom.types.GrammarList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.grammarlist.ConsConcGrammar.make( begin.getHeadConcGrammar() ,( tom.gom.adt.gom.types.GrammarList )tom_get_slice_ConcGrammar( begin.getTailConcGrammar() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.SectionList  tom_append_list_ConcSection( tom.gom.adt.gom.types.SectionList l1,  tom.gom.adt.gom.types.SectionList  l2) {     if( l1.isEmptyConcSection() ) {       return l2;     } else if( l2.isEmptyConcSection() ) {       return l1;     } else if(  l1.getTailConcSection() .isEmptyConcSection() ) {       return  tom.gom.adt.gom.types.sectionlist.ConsConcSection.make( l1.getHeadConcSection() ,l2) ;     } else {       return  tom.gom.adt.gom.types.sectionlist.ConsConcSection.make( l1.getHeadConcSection() ,tom_append_list_ConcSection( l1.getTailConcSection() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.SectionList  tom_get_slice_ConcSection( tom.gom.adt.gom.types.SectionList  begin,  tom.gom.adt.gom.types.SectionList  end, tom.gom.adt.gom.types.SectionList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.sectionlist.ConsConcSection.make( begin.getHeadConcSection() ,( tom.gom.adt.gom.types.SectionList )tom_get_slice_ConcSection( begin.getTailConcSection() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.OperatorDeclList  tom_append_list_ConcOperator( tom.gom.adt.gom.types.OperatorDeclList l1,  tom.gom.adt.gom.types.OperatorDeclList  l2) {     if( l1.isEmptyConcOperator() ) {       return l2;     } else if( l2.isEmptyConcOperator() ) {       return l1;     } else if(  l1.getTailConcOperator() .isEmptyConcOperator() ) {       return  tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make( l1.getHeadConcOperator() ,l2) ;     } else {       return  tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make( l1.getHeadConcOperator() ,tom_append_list_ConcOperator( l1.getTailConcOperator() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.OperatorDeclList  tom_get_slice_ConcOperator( tom.gom.adt.gom.types.OperatorDeclList  begin,  tom.gom.adt.gom.types.OperatorDeclList  end, tom.gom.adt.gom.types.OperatorDeclList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make( begin.getHeadConcOperator() ,( tom.gom.adt.gom.types.OperatorDeclList )tom_get_slice_ConcOperator( begin.getTailConcOperator() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.SortDeclList  tom_append_list_ConcSortDecl( tom.gom.adt.gom.types.SortDeclList l1,  tom.gom.adt.gom.types.SortDeclList  l2) {     if( l1.isEmptyConcSortDecl() ) {       return l2;     } else if( l2.isEmptyConcSortDecl() ) {       return l1;     } else if(  l1.getTailConcSortDecl() .isEmptyConcSortDecl() ) {       return  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make( l1.getHeadConcSortDecl() ,l2) ;     } else {       return  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make( l1.getHeadConcSortDecl() ,tom_append_list_ConcSortDecl( l1.getTailConcSortDecl() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.SortDeclList  tom_get_slice_ConcSortDecl( tom.gom.adt.gom.types.SortDeclList  begin,  tom.gom.adt.gom.types.SortDeclList  end, tom.gom.adt.gom.types.SortDeclList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make( begin.getHeadConcSortDecl() ,( tom.gom.adt.gom.types.SortDeclList )tom_get_slice_ConcSortDecl( begin.getTailConcSortDecl() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.GomTypeList  tom_append_list_ConcGomType( tom.gom.adt.gom.types.GomTypeList l1,  tom.gom.adt.gom.types.GomTypeList  l2) {     if( l1.isEmptyConcGomType() ) {       return l2;     } else if( l2.isEmptyConcGomType() ) {       return l1;     } else if(  l1.getTailConcGomType() .isEmptyConcGomType() ) {       return  tom.gom.adt.gom.types.gomtypelist.ConsConcGomType.make( l1.getHeadConcGomType() ,l2) ;     } else {       return  tom.gom.adt.gom.types.gomtypelist.ConsConcGomType.make( l1.getHeadConcGomType() ,tom_append_list_ConcGomType( l1.getTailConcGomType() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.GomTypeList  tom_get_slice_ConcGomType( tom.gom.adt.gom.types.GomTypeList  begin,  tom.gom.adt.gom.types.GomTypeList  end, tom.gom.adt.gom.types.GomTypeList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.gomtypelist.ConsConcGomType.make( begin.getHeadConcGomType() ,( tom.gom.adt.gom.types.GomTypeList )tom_get_slice_ConcGomType( begin.getTailConcGomType() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.ProductionList  tom_append_list_ConcProduction( tom.gom.adt.gom.types.ProductionList l1,  tom.gom.adt.gom.types.ProductionList  l2) {     if( l1.isEmptyConcProduction() ) {       return l2;     } else if( l2.isEmptyConcProduction() ) {       return l1;     } else if(  l1.getTailConcProduction() .isEmptyConcProduction() ) {       return  tom.gom.adt.gom.types.productionlist.ConsConcProduction.make( l1.getHeadConcProduction() ,l2) ;     } else {       return  tom.gom.adt.gom.types.productionlist.ConsConcProduction.make( l1.getHeadConcProduction() ,tom_append_list_ConcProduction( l1.getTailConcProduction() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.ProductionList  tom_get_slice_ConcProduction( tom.gom.adt.gom.types.ProductionList  begin,  tom.gom.adt.gom.types.ProductionList  end, tom.gom.adt.gom.types.ProductionList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.productionlist.ConsConcProduction.make( begin.getHeadConcProduction() ,( tom.gom.adt.gom.types.ProductionList )tom_get_slice_ConcProduction( begin.getTailConcProduction() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.ImportList  tom_append_list_ConcImportedModule( tom.gom.adt.gom.types.ImportList l1,  tom.gom.adt.gom.types.ImportList  l2) {     if( l1.isEmptyConcImportedModule() ) {       return l2;     } else if( l2.isEmptyConcImportedModule() ) {       return l1;     } else if(  l1.getTailConcImportedModule() .isEmptyConcImportedModule() ) {       return  tom.gom.adt.gom.types.importlist.ConsConcImportedModule.make( l1.getHeadConcImportedModule() ,l2) ;     } else {       return  tom.gom.adt.gom.types.importlist.ConsConcImportedModule.make( l1.getHeadConcImportedModule() ,tom_append_list_ConcImportedModule( l1.getTailConcImportedModule() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.ImportList  tom_get_slice_ConcImportedModule( tom.gom.adt.gom.types.ImportList  begin,  tom.gom.adt.gom.types.ImportList  end, tom.gom.adt.gom.types.ImportList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.importlist.ConsConcImportedModule.make( begin.getHeadConcImportedModule() ,( tom.gom.adt.gom.types.ImportList )tom_get_slice_ConcImportedModule( begin.getTailConcImportedModule() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.ModuleDeclList  tom_append_list_ConcModuleDecl( tom.gom.adt.gom.types.ModuleDeclList l1,  tom.gom.adt.gom.types.ModuleDeclList  l2) {     if( l1.isEmptyConcModuleDecl() ) {       return l2;     } else if( l2.isEmptyConcModuleDecl() ) {       return l1;     } else if(  l1.getTailConcModuleDecl() .isEmptyConcModuleDecl() ) {       return  tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( l1.getHeadConcModuleDecl() ,l2) ;     } else {       return  tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( l1.getHeadConcModuleDecl() ,tom_append_list_ConcModuleDecl( l1.getTailConcModuleDecl() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.ModuleDeclList  tom_get_slice_ConcModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  begin,  tom.gom.adt.gom.types.ModuleDeclList  end, tom.gom.adt.gom.types.ModuleDeclList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( begin.getHeadConcModuleDecl() ,( tom.gom.adt.gom.types.ModuleDeclList )tom_get_slice_ConcModuleDecl( begin.getTailConcModuleDecl() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.FieldList  tom_append_list_ConcField( tom.gom.adt.gom.types.FieldList l1,  tom.gom.adt.gom.types.FieldList  l2) {     if( l1.isEmptyConcField() ) {       return l2;     } else if( l2.isEmptyConcField() ) {       return l1;     } else if(  l1.getTailConcField() .isEmptyConcField() ) {       return  tom.gom.adt.gom.types.fieldlist.ConsConcField.make( l1.getHeadConcField() ,l2) ;     } else {       return  tom.gom.adt.gom.types.fieldlist.ConsConcField.make( l1.getHeadConcField() ,tom_append_list_ConcField( l1.getTailConcField() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.FieldList  tom_get_slice_ConcField( tom.gom.adt.gom.types.FieldList  begin,  tom.gom.adt.gom.types.FieldList  end, tom.gom.adt.gom.types.FieldList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.fieldlist.ConsConcField.make( begin.getHeadConcField() ,( tom.gom.adt.gom.types.FieldList )tom_get_slice_ConcField( begin.getTailConcField() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.SlotList  tom_append_list_ConcSlot( tom.gom.adt.gom.types.SlotList l1,  tom.gom.adt.gom.types.SlotList  l2) {     if( l1.isEmptyConcSlot() ) {       return l2;     } else if( l2.isEmptyConcSlot() ) {       return l1;     } else if(  l1.getTailConcSlot() .isEmptyConcSlot() ) {       return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( l1.getHeadConcSlot() ,l2) ;     } else {       return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( l1.getHeadConcSlot() ,tom_append_list_ConcSlot( l1.getTailConcSlot() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.SlotList  tom_get_slice_ConcSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end, tom.gom.adt.gom.types.SlotList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( begin.getHeadConcSlot() ,( tom.gom.adt.gom.types.SlotList )tom_get_slice_ConcSlot( begin.getTailConcSlot() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.SortList  tom_append_list_ConcSort( tom.gom.adt.gom.types.SortList l1,  tom.gom.adt.gom.types.SortList  l2) {     if( l1.isEmptyConcSort() ) {       return l2;     } else if( l2.isEmptyConcSort() ) {       return l1;     } else if(  l1.getTailConcSort() .isEmptyConcSort() ) {       return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( l1.getHeadConcSort() ,l2) ;     } else {       return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( l1.getHeadConcSort() ,tom_append_list_ConcSort( l1.getTailConcSort() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.SortList  tom_get_slice_ConcSort( tom.gom.adt.gom.types.SortList  begin,  tom.gom.adt.gom.types.SortList  end, tom.gom.adt.gom.types.SortList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.sortlist.ConsConcSort.make( begin.getHeadConcSort() ,( tom.gom.adt.gom.types.SortList )tom_get_slice_ConcSort( begin.getTailConcSort() ,end,tail)) ;     }   }      private static   tom.gom.adt.gom.types.ModuleList  tom_append_list_ConcModule( tom.gom.adt.gom.types.ModuleList l1,  tom.gom.adt.gom.types.ModuleList  l2) {     if( l1.isEmptyConcModule() ) {       return l2;     } else if( l2.isEmptyConcModule() ) {       return l1;     } else if(  l1.getTailConcModule() .isEmptyConcModule() ) {       return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( l1.getHeadConcModule() ,l2) ;     } else {       return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( l1.getHeadConcModule() ,tom_append_list_ConcModule( l1.getTailConcModule() ,l2)) ;     }   }   private static   tom.gom.adt.gom.types.ModuleList  tom_get_slice_ConcModule( tom.gom.adt.gom.types.ModuleList  begin,  tom.gom.adt.gom.types.ModuleList  end, tom.gom.adt.gom.types.ModuleList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( begin.getHeadConcModule() ,( tom.gom.adt.gom.types.ModuleList )tom_get_slice_ConcModule( begin.getTailConcModule() ,end,tail)) ;     }   }    

  private GomStreamManager streamManager;
  private GomEnvironment environment() {
    return GomEnvironment.getInstance();
  }

  public TypeExpander(GomStreamManager streamManager) {
    this.streamManager = streamManager;
  }
  /**
    * We try here to get full sort definitions for each constructs
    * Once the structure is correctly build, we can attach the hooks
    */
  public ModuleList expand(GomModuleList moduleList) {

    /* put a map giving all imported modules for each module in the path */
    buildDependencyMap(moduleList);

    /* collect all sort declarations */
    SortDeclList sortDeclList =  tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() ;
    /* The sorts declared in each module */
    Map sortsForModule = new HashMap();
    GomModuleList consum = moduleList;
    while(!consum.isEmptyConcGomModule()) {
      GomModule module = consum.getHeadConcGomModule();
      consum = consum.getTailConcGomModule();

      Collection decls = getSortDeclarations(module);
      Collection implicitdecls = getSortDeclarationInCodomain(module);

      /* Check that there are no implicit sort declarations
       * Also, check that declared sorts have at least an operator
       */
      if(!decls.containsAll(implicitdecls)) {
        // whine about non declared sorts
        Collection undeclaredSorts = new HashSet();
        undeclaredSorts.addAll(implicitdecls);
        undeclaredSorts.removeAll(decls);
        getLogger().log(Level.WARNING, GomMessage.undeclaredSorts.getMessage(),
            new Object[]{showSortList(undeclaredSorts)});
      }
      if(!implicitdecls.containsAll(decls)) {
        // whine about sorts without operators: this is a real error
        Collection emptySorts = new HashSet();
        emptySorts.addAll(decls);
        emptySorts.removeAll(implicitdecls);
        getLogger().log(Level.SEVERE, GomMessage.emptySorts.getMessage(),
            new Object[]{showSortList(emptySorts)});
        return  tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() ;
      }
      Iterator it = implicitdecls.iterator();
      while(it.hasNext()) {
        SortDecl decl = (SortDecl)it.next();
        sortDeclList =  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make(decl,tom_append_list_ConcSortDecl(sortDeclList, tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() )) ;
      }
      /* Fills sortsForModule */
      it = decls.iterator();
      SortDeclList declaredSorts =  tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() ;
      while(it.hasNext()) {
        SortDecl decl = (SortDecl)it.next();
        declaredSorts =  tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl.make(decl,tom_append_list_ConcSortDecl(declaredSorts, tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl.make() )) ;
      }
      GomModuleName moduleName = module.getModuleName();
      ModuleDecl mdecl =  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(moduleName, streamManager.getPackagePath(moduleName.getName())) ;
      sortsForModule.put(mdecl,declaredSorts);
    }

    /* now get all operators for each sort */
    Map operatorsForSort = new HashMap();
    Map hooksForSort = new HashMap();
    consum = moduleList;
    while(!consum.isEmptyConcGomModule()) {
      GomModule module = consum.getHeadConcGomModule();
      consum = consum.getTailConcGomModule();

      // iterate through the productions
      {if ( (module instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch478NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )module);if ( (tomMatch478NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch478NameNumber_freshVar_0= tomMatch478NameNumberfreshSubject_1.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch478NameNumber_freshVar_1= tomMatch478NameNumberfreshSubject_1.getSectionList() ;if ( ((tomMatch478NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch478NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch478NameNumber_freshVar_2=tomMatch478NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch478NameNumber_begin_4=tomMatch478NameNumber_freshVar_2;{  tom.gom.adt.gom.types.SectionList  tomMatch478NameNumber_end_5=tomMatch478NameNumber_freshVar_2;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch478NameNumber_freshVar_3=tomMatch478NameNumber_end_5;if (!( tomMatch478NameNumber_freshVar_3.isEmptyConcSection() )) {if ( ( tomMatch478NameNumber_freshVar_3.getHeadConcSection()  instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch478NameNumber_freshVar_8=  tomMatch478NameNumber_freshVar_3.getHeadConcSection() .getGrammarList() ;if ( ((tomMatch478NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch478NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch478NameNumber_freshVar_9=tomMatch478NameNumber_freshVar_8;{  tom.gom.adt.gom.types.GrammarList  tomMatch478NameNumber_begin_11=tomMatch478NameNumber_freshVar_9;{  tom.gom.adt.gom.types.GrammarList  tomMatch478NameNumber_end_12=tomMatch478NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch478NameNumber_freshVar_10=tomMatch478NameNumber_end_12;if (!( tomMatch478NameNumber_freshVar_10.isEmptyConcGrammar() )) {if ( ( tomMatch478NameNumber_freshVar_10.getHeadConcGrammar()  instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch478NameNumber_freshVar_15=  tomMatch478NameNumber_freshVar_10.getHeadConcGrammar() .getProductionList() ;if ( ((tomMatch478NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch478NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch478NameNumber_freshVar_16=tomMatch478NameNumber_freshVar_15;{  tom.gom.adt.gom.types.ProductionList  tomMatch478NameNumber_begin_18=tomMatch478NameNumber_freshVar_16;{  tom.gom.adt.gom.types.ProductionList  tomMatch478NameNumber_end_19=tomMatch478NameNumber_freshVar_16;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch478NameNumber_freshVar_17=tomMatch478NameNumber_end_19;if (!( tomMatch478NameNumber_freshVar_17.isEmptyConcProduction() )) {if ( ( tomMatch478NameNumber_freshVar_17.getHeadConcProduction()  instanceof tom.gom.adt.gom.types.production.Production) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch478NameNumber_freshVar_20= tomMatch478NameNumber_freshVar_17.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch478NameNumber_freshVar_13= tomMatch478NameNumber_freshVar_10.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch478NameNumber_freshVar_6= tomMatch478NameNumber_freshVar_3.getTailConcSection() ;if ( true ) {



          // we may want to pass moduleName to help resolve ambiguities with modules
          getOperatorDecl( tomMatch478NameNumber_freshVar_17.getHeadConcProduction() ,sortDeclList,operatorsForSort);

        }}}}}}}if ( tomMatch478NameNumber_end_19.isEmptyConcProduction() ) {tomMatch478NameNumber_end_19=tomMatch478NameNumber_begin_18;} else {tomMatch478NameNumber_end_19= tomMatch478NameNumber_end_19.getTailConcProduction() ;}}} while(!( tomMatch478NameNumber_end_19.equals(tomMatch478NameNumber_begin_18) ));}}}}}}}}if ( tomMatch478NameNumber_end_12.isEmptyConcGrammar() ) {tomMatch478NameNumber_end_12=tomMatch478NameNumber_begin_11;} else {tomMatch478NameNumber_end_12= tomMatch478NameNumber_end_12.getTailConcGrammar() ;}}} while(!( tomMatch478NameNumber_end_12.equals(tomMatch478NameNumber_begin_11) ));}}}}}}}}if ( tomMatch478NameNumber_end_5.isEmptyConcSection() ) {tomMatch478NameNumber_end_5=tomMatch478NameNumber_begin_4;} else {tomMatch478NameNumber_end_5= tomMatch478NameNumber_end_5.getTailConcSection() ;}}} while(!( tomMatch478NameNumber_end_5.equals(tomMatch478NameNumber_begin_4) ));}}}}}}}}}}{if ( (module instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch479NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )module);if ( (tomMatch479NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch479NameNumber_freshVar_0= tomMatch479NameNumberfreshSubject_1.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch479NameNumber_freshVar_1= tomMatch479NameNumberfreshSubject_1.getSectionList() ;if ( ((tomMatch479NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch479NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch479NameNumber_freshVar_2=tomMatch479NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch479NameNumber_begin_4=tomMatch479NameNumber_freshVar_2;{  tom.gom.adt.gom.types.SectionList  tomMatch479NameNumber_end_5=tomMatch479NameNumber_freshVar_2;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch479NameNumber_freshVar_3=tomMatch479NameNumber_end_5;if (!( tomMatch479NameNumber_freshVar_3.isEmptyConcSection() )) {if ( ( tomMatch479NameNumber_freshVar_3.getHeadConcSection()  instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch479NameNumber_freshVar_8=  tomMatch479NameNumber_freshVar_3.getHeadConcSection() .getGrammarList() ;if ( ((tomMatch479NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch479NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch479NameNumber_freshVar_9=tomMatch479NameNumber_freshVar_8;{  tom.gom.adt.gom.types.GrammarList  tomMatch479NameNumber_begin_11=tomMatch479NameNumber_freshVar_9;{  tom.gom.adt.gom.types.GrammarList  tomMatch479NameNumber_end_12=tomMatch479NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch479NameNumber_freshVar_10=tomMatch479NameNumber_end_12;if (!( tomMatch479NameNumber_freshVar_10.isEmptyConcGrammar() )) {if ( ( tomMatch479NameNumber_freshVar_10.getHeadConcGrammar()  instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_freshVar_15=  tomMatch479NameNumber_freshVar_10.getHeadConcGrammar() .getProductionList() ;if ( ((tomMatch479NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch479NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_freshVar_16=tomMatch479NameNumber_freshVar_15;{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_begin_18=tomMatch479NameNumber_freshVar_16;{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_end_19=tomMatch479NameNumber_freshVar_16;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_freshVar_17=tomMatch479NameNumber_end_19;if (!( tomMatch479NameNumber_freshVar_17.isEmptyConcProduction() )) {if ( ( tomMatch479NameNumber_freshVar_17.getHeadConcProduction()  instanceof tom.gom.adt.gom.types.production.SortType) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_freshVar_22=  tomMatch479NameNumber_freshVar_17.getHeadConcProduction() .getProductionList() ;if ( ((tomMatch479NameNumber_freshVar_22 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch479NameNumber_freshVar_22 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_freshVar_23=tomMatch479NameNumber_freshVar_22;{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_begin_25=tomMatch479NameNumber_freshVar_23;{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_end_26=tomMatch479NameNumber_freshVar_23;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_freshVar_24=tomMatch479NameNumber_end_26;if (!( tomMatch479NameNumber_freshVar_24.isEmptyConcProduction() )) {if ( ( tomMatch479NameNumber_freshVar_24.getHeadConcProduction()  instanceof tom.gom.adt.gom.types.production.Production) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_freshVar_27= tomMatch479NameNumber_freshVar_24.getTailConcProduction() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch479NameNumber_freshVar_20= tomMatch479NameNumber_freshVar_17.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch479NameNumber_freshVar_13= tomMatch479NameNumber_freshVar_10.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch479NameNumber_freshVar_6= tomMatch479NameNumber_freshVar_3.getTailConcSection() ;if ( true ) {








          // we may want to pass moduleName to help resolve ambiguities with modules
          getOperatorDecl( tomMatch479NameNumber_freshVar_24.getHeadConcProduction() ,sortDeclList,operatorsForSort);

        }}}}}}}}if ( tomMatch479NameNumber_end_26.isEmptyConcProduction() ) {tomMatch479NameNumber_end_26=tomMatch479NameNumber_begin_25;} else {tomMatch479NameNumber_end_26= tomMatch479NameNumber_end_26.getTailConcProduction() ;}}} while(!( tomMatch479NameNumber_end_26.equals(tomMatch479NameNumber_begin_25) ));}}}}}}}}if ( tomMatch479NameNumber_end_19.isEmptyConcProduction() ) {tomMatch479NameNumber_end_19=tomMatch479NameNumber_begin_18;} else {tomMatch479NameNumber_end_19= tomMatch479NameNumber_end_19.getTailConcProduction() ;}}} while(!( tomMatch479NameNumber_end_19.equals(tomMatch479NameNumber_begin_18) ));}}}}}}}}if ( tomMatch479NameNumber_end_12.isEmptyConcGrammar() ) {tomMatch479NameNumber_end_12=tomMatch479NameNumber_begin_11;} else {tomMatch479NameNumber_end_12= tomMatch479NameNumber_end_12.getTailConcGrammar() ;}}} while(!( tomMatch479NameNumber_end_12.equals(tomMatch479NameNumber_begin_11) ));}}}}}}}}if ( tomMatch479NameNumber_end_5.isEmptyConcSection() ) {tomMatch479NameNumber_end_5=tomMatch479NameNumber_begin_4;} else {tomMatch479NameNumber_end_5= tomMatch479NameNumber_end_5.getTailConcSection() ;}}} while(!( tomMatch479NameNumber_end_5.equals(tomMatch479NameNumber_begin_4) ));}}}}}}}}}}

    }

    /*
     * build the module list using the map
     * since we already checked that the declared and used sorts do match, we
     * can use the map alone
     */
    ModuleList resultModuleList =  tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() ;
    Iterator it = sortsForModule.entrySet().iterator();
    while(it.hasNext()) {
      Map.Entry entry = (Map.Entry) it.next();
      ModuleDecl mdecl = (ModuleDecl) entry.getKey();
      SortDeclList sdeclList = (SortDeclList) entry.getValue();
      SortList sortList =  tom.gom.adt.gom.types.sortlist.EmptyConcSort.make() ;
      {if ( (sdeclList instanceof tom.gom.adt.gom.types.SortDeclList) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch480NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SortDeclList )sdeclList);if ( ((tomMatch480NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl) || (tomMatch480NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl)) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch480NameNumber_freshVar_0=tomMatch480NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.SortDeclList  tomMatch480NameNumber_begin_2=tomMatch480NameNumber_freshVar_0;{  tom.gom.adt.gom.types.SortDeclList  tomMatch480NameNumber_end_3=tomMatch480NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.SortDeclList  tomMatch480NameNumber_freshVar_1=tomMatch480NameNumber_end_3;if (!( tomMatch480NameNumber_freshVar_1.isEmptyConcSortDecl() )) {{  tom.gom.adt.gom.types.SortDecl  tom_sdecl= tomMatch480NameNumber_freshVar_1.getHeadConcSortDecl() ;{  tom.gom.adt.gom.types.SortDeclList  tomMatch480NameNumber_freshVar_4= tomMatch480NameNumber_freshVar_1.getTailConcSortDecl() ;if ( true ) {

          OperatorDeclList opdecl = (OperatorDeclList)
            operatorsForSort.get(tom_sdecl);
          Sort fullSort =  tom.gom.adt.gom.types.sort.Sort.make(tom_sdecl, opdecl) ;
          if(checkSortValidity(fullSort)) {
            sortList =  tom.gom.adt.gom.types.sortlist.ConsConcSort.make(fullSort,tom_append_list_ConcSort(sortList, tom.gom.adt.gom.types.sortlist.EmptyConcSort.make() )) ;
          }
        }}}}}if ( tomMatch480NameNumber_end_3.isEmptyConcSortDecl() ) {tomMatch480NameNumber_end_3=tomMatch480NameNumber_begin_2;} else {tomMatch480NameNumber_end_3= tomMatch480NameNumber_end_3.getTailConcSortDecl() ;}}} while(!( tomMatch480NameNumber_end_3.equals(tomMatch480NameNumber_begin_2) ));}}}}}}}

      resultModuleList =  tom.gom.adt.gom.types.modulelist.ConsConcModule.make( tom.gom.adt.gom.types.module.Module.make(mdecl, sortList) ,tom_append_list_ConcModule(resultModuleList, tom.gom.adt.gom.types.modulelist.EmptyConcModule.make() )) 

;
    }
    return resultModuleList;
  }

  /*
   * Get an OperatorDecl from a Production, using the list of sort declarations
   * XXX: There is huge room for efficiency improvement, as we could use a map
   * sortName -> sortDeclList instead of a simple list
   */
  private OperatorDecl getOperatorDecl(Production prod,
      SortDeclList sortDeclList,
      Map operatorsForSort) {

    {if ( (prod instanceof tom.gom.adt.gom.types.Production) ) {{  tom.gom.adt.gom.types.Production  tomMatch481NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Production )prod);if ( (tomMatch481NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.production.Production) ) {{  String  tomMatch481NameNumber_freshVar_0= tomMatch481NameNumberfreshSubject_1.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch481NameNumber_freshVar_1= tomMatch481NameNumberfreshSubject_1.getDomainList() ;{  tom.gom.adt.gom.types.GomType  tomMatch481NameNumber_freshVar_2= tomMatch481NameNumberfreshSubject_1.getCodomain() ;{  tom.gom.adt.gom.types.Option  tomMatch481NameNumber_freshVar_3= tomMatch481NameNumberfreshSubject_1.getOption() ;if ( (tomMatch481NameNumber_freshVar_2 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch481NameNumber_freshVar_4= tomMatch481NameNumber_freshVar_2.getName() ;if ( true ) {

        SortDecl codomainSort = declFromTypename(tomMatch481NameNumber_freshVar_4,sortDeclList);
        TypedProduction domainSorts = typedProduction(tomMatch481NameNumber_freshVar_1,sortDeclList);
        OperatorDecl decl =  tom.gom.adt.gom.types.operatordecl.OperatorDecl.make(tomMatch481NameNumber_freshVar_0, codomainSort, domainSorts) ;
        if (operatorsForSort.containsKey(codomainSort)) {
          OperatorDeclList list = (OperatorDeclList) operatorsForSort.get(codomainSort);
          operatorsForSort.put(codomainSort, tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make(decl,tom_append_list_ConcOperator(list, tom.gom.adt.gom.types.operatordecllist.EmptyConcOperator.make() )) );
        } else {
          operatorsForSort.put(codomainSort, tom.gom.adt.gom.types.operatordecllist.ConsConcOperator.make(decl, tom.gom.adt.gom.types.operatordecllist.EmptyConcOperator.make() ) );
        }
        return decl;
      }}}}}}}}}}}

    throw new GomRuntimeException(
        "TypeExpander::getOperatorDecl: wrong Production?");
  }

  private SortDecl declFromTypename(String typename,
                                    SortDeclList sortDeclList) {
    if (environment().isBuiltinSort(typename)) {
      return environment().builtinSort(typename);
    }
    {if ( (sortDeclList instanceof tom.gom.adt.gom.types.SortDeclList) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch482NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SortDeclList )sortDeclList);if ( ((tomMatch482NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.sortdecllist.ConsConcSortDecl) || (tomMatch482NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.sortdecllist.EmptyConcSortDecl)) ) {{  tom.gom.adt.gom.types.SortDeclList  tomMatch482NameNumber_freshVar_0=tomMatch482NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.SortDeclList  tomMatch482NameNumber_begin_2=tomMatch482NameNumber_freshVar_0;{  tom.gom.adt.gom.types.SortDeclList  tomMatch482NameNumber_end_3=tomMatch482NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.SortDeclList  tomMatch482NameNumber_freshVar_1=tomMatch482NameNumber_end_3;if (!( tomMatch482NameNumber_freshVar_1.isEmptyConcSortDecl() )) {if ( ( tomMatch482NameNumber_freshVar_1.getHeadConcSortDecl()  instanceof tom.gom.adt.gom.types.sortdecl.SortDecl) ) {{  String  tomMatch482NameNumber_freshVar_6=  tomMatch482NameNumber_freshVar_1.getHeadConcSortDecl() .getName() ;{  tom.gom.adt.gom.types.SortDeclList  tomMatch482NameNumber_freshVar_4= tomMatch482NameNumber_freshVar_1.getTailConcSortDecl() ;if ( true ) {

        if (typename.equals(tomMatch482NameNumber_freshVar_6)) {
          return  tomMatch482NameNumber_freshVar_1.getHeadConcSortDecl() ;
        }
      }}}}}}if ( tomMatch482NameNumber_end_3.isEmptyConcSortDecl() ) {tomMatch482NameNumber_end_3=tomMatch482NameNumber_begin_2;} else {tomMatch482NameNumber_end_3= tomMatch482NameNumber_end_3.getTailConcSortDecl() ;}}} while(!( tomMatch482NameNumber_end_3.equals(tomMatch482NameNumber_begin_2) ));}}}}}}}

    getLogger().log(Level.SEVERE, GomMessage.unknownSort.getMessage(),
        new Object[]{typename});
    /* If the sort is not known, assume it is a builtin */
    return  tom.gom.adt.gom.types.sortdecl.BuiltinSortDecl.make(typename) ;
  }

  private TypedProduction typedProduction(FieldList domain, SortDeclList sortDeclList) {
    {if ( (domain instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch483NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.FieldList )domain);if ( ((tomMatch483NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch483NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch483NameNumber_freshVar_0=tomMatch483NameNumberfreshSubject_1;if (!( tomMatch483NameNumber_freshVar_0.isEmptyConcField() )) {if ( ( tomMatch483NameNumber_freshVar_0.getHeadConcField()  instanceof tom.gom.adt.gom.types.field.StarredField) ) {{  tom.gom.adt.gom.types.GomType  tomMatch483NameNumber_freshVar_2=  tomMatch483NameNumber_freshVar_0.getHeadConcField() .getFieldType() ;if ( (tomMatch483NameNumber_freshVar_2 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch483NameNumber_freshVar_3= tomMatch483NameNumber_freshVar_2.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch483NameNumber_freshVar_1= tomMatch483NameNumber_freshVar_0.getTailConcField() ;if ( tomMatch483NameNumber_freshVar_1.isEmptyConcField() ) {if ( true ) {

        return  tom.gom.adt.gom.types.typedproduction.Variadic.make(declFromTypename(tomMatch483NameNumber_freshVar_3,sortDeclList)) ;
      }}}}}}}}}}}}if ( (domain instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch483NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.FieldList )domain);if ( ((tomMatch483NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch483NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch483NameNumber_freshVar_4=tomMatch483NameNumberfreshSubject_1;if ( true ) {

        return  tom.gom.adt.gom.types.typedproduction.Slots.make(typedSlotList(tomMatch483NameNumber_freshVar_4,sortDeclList)) ;
      }}}}}}

    // the error message could be more refined
    throw new GomRuntimeException("TypeExpander::typedProduction: illformed Production");
  }

  private SlotList typedSlotList(FieldList fields, SortDeclList sortDeclList) {
    {if ( (fields instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch484NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.FieldList )fields);if ( ((tomMatch484NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch484NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch484NameNumber_freshVar_0=tomMatch484NameNumberfreshSubject_1;if ( tomMatch484NameNumber_freshVar_0.isEmptyConcField() ) {if ( true ) {

        return  tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ;
      }}}}}}if ( (fields instanceof tom.gom.adt.gom.types.FieldList) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch484NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.FieldList )fields);if ( ((tomMatch484NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.fieldlist.ConsConcField) || (tomMatch484NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.fieldlist.EmptyConcField)) ) {{  tom.gom.adt.gom.types.FieldList  tomMatch484NameNumber_freshVar_1=tomMatch484NameNumberfreshSubject_1;if (!( tomMatch484NameNumber_freshVar_1.isEmptyConcField() )) {if ( ( tomMatch484NameNumber_freshVar_1.getHeadConcField()  instanceof tom.gom.adt.gom.types.field.NamedField) ) {{  String  tomMatch484NameNumber_freshVar_4=  tomMatch484NameNumber_freshVar_1.getHeadConcField() .getName() ;{  tom.gom.adt.gom.types.GomType  tomMatch484NameNumber_freshVar_5=  tomMatch484NameNumber_freshVar_1.getHeadConcField() .getFieldType() ;if ( (tomMatch484NameNumber_freshVar_5 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch484NameNumber_freshVar_6= tomMatch484NameNumber_freshVar_5.getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch484NameNumber_freshVar_2= tomMatch484NameNumber_freshVar_1.getTailConcField() ;if ( true ) {

        SlotList newtail = typedSlotList(tomMatch484NameNumber_freshVar_2,sortDeclList);
        return  tom.gom.adt.gom.types.slotlist.ConsConcSlot.make( tom.gom.adt.gom.types.slot.Slot.make(tomMatch484NameNumber_freshVar_4, declFromTypename(tomMatch484NameNumber_freshVar_6,sortDeclList)) ,tom_append_list_ConcSlot(newtail, tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() )) ;
      }}}}}}}}}}}}}

    getLogger().log(Level.SEVERE, GomMessage.malformedProduction.getMessage(),
        new Object[]{fields.toString()});
    return  tom.gom.adt.gom.types.slotlist.EmptyConcSlot.make() ;
  }

  /*
   * Get all sort declarations in a module
   */
  private Collection getSortDeclarations(GomModule module) {
    Collection result = new HashSet();
    {if ( (module instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch485NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )module);if ( (tomMatch485NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch485NameNumber_freshVar_0= tomMatch485NameNumberfreshSubject_1.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_freshVar_1= tomMatch485NameNumberfreshSubject_1.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch485NameNumber_freshVar_0;if ( ((tomMatch485NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch485NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_freshVar_2=tomMatch485NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_begin_4=tomMatch485NameNumber_freshVar_2;{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_end_5=tomMatch485NameNumber_freshVar_2;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_freshVar_3=tomMatch485NameNumber_end_5;if (!( tomMatch485NameNumber_freshVar_3.isEmptyConcSection() )) {if ( ( tomMatch485NameNumber_freshVar_3.getHeadConcSection()  instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_freshVar_8=  tomMatch485NameNumber_freshVar_3.getHeadConcSection() .getGrammarList() ;if ( ((tomMatch485NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch485NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_freshVar_9=tomMatch485NameNumber_freshVar_8;{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_begin_11=tomMatch485NameNumber_freshVar_9;{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_end_12=tomMatch485NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_freshVar_10=tomMatch485NameNumber_end_12;if (!( tomMatch485NameNumber_freshVar_10.isEmptyConcGrammar() )) {if ( ( tomMatch485NameNumber_freshVar_10.getHeadConcGrammar()  instanceof tom.gom.adt.gom.types.grammar.Sorts) ) {{  tom.gom.adt.gom.types.GomTypeList  tomMatch485NameNumber_freshVar_15=  tomMatch485NameNumber_freshVar_10.getHeadConcGrammar() .getTypeList() ;if ( ((tomMatch485NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.gomtypelist.ConsConcGomType) || (tomMatch485NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.gomtypelist.EmptyConcGomType)) ) {{  tom.gom.adt.gom.types.GomTypeList  tomMatch485NameNumber_freshVar_16=tomMatch485NameNumber_freshVar_15;{  tom.gom.adt.gom.types.GomTypeList  tomMatch485NameNumber_begin_18=tomMatch485NameNumber_freshVar_16;{  tom.gom.adt.gom.types.GomTypeList  tomMatch485NameNumber_end_19=tomMatch485NameNumber_freshVar_16;do {{{  tom.gom.adt.gom.types.GomTypeList  tomMatch485NameNumber_freshVar_17=tomMatch485NameNumber_end_19;if (!( tomMatch485NameNumber_freshVar_17.isEmptyConcGomType() )) {if ( ( tomMatch485NameNumber_freshVar_17.getHeadConcGomType()  instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch485NameNumber_freshVar_22=  tomMatch485NameNumber_freshVar_17.getHeadConcGomType() .getName() ;{  tom.gom.adt.gom.types.GomTypeList  tomMatch485NameNumber_freshVar_20= tomMatch485NameNumber_freshVar_17.getTailConcGomType() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch485NameNumber_freshVar_13= tomMatch485NameNumber_freshVar_10.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch485NameNumber_freshVar_6= tomMatch485NameNumber_freshVar_3.getTailConcSection() ;if ( true ) {



        result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tomMatch485NameNumber_freshVar_22,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
      }}}}}}}}if ( tomMatch485NameNumber_end_19.isEmptyConcGomType() ) {tomMatch485NameNumber_end_19=tomMatch485NameNumber_begin_18;} else {tomMatch485NameNumber_end_19= tomMatch485NameNumber_end_19.getTailConcGomType() ;}}} while(!( tomMatch485NameNumber_end_19.equals(tomMatch485NameNumber_begin_18) ));}}}}}}}}if ( tomMatch485NameNumber_end_12.isEmptyConcGrammar() ) {tomMatch485NameNumber_end_12=tomMatch485NameNumber_begin_11;} else {tomMatch485NameNumber_end_12= tomMatch485NameNumber_end_12.getTailConcGrammar() ;}}} while(!( tomMatch485NameNumber_end_12.equals(tomMatch485NameNumber_begin_11) ));}}}}}}}}if ( tomMatch485NameNumber_end_5.isEmptyConcSection() ) {tomMatch485NameNumber_end_5=tomMatch485NameNumber_begin_4;} else {tomMatch485NameNumber_end_5= tomMatch485NameNumber_end_5.getTailConcSection() ;}}} while(!( tomMatch485NameNumber_end_5.equals(tomMatch485NameNumber_begin_4) ));}}}}}}}}}}}{if ( (module instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch486NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )module);if ( (tomMatch486NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch486NameNumber_freshVar_0= tomMatch486NameNumberfreshSubject_1.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch486NameNumber_freshVar_1= tomMatch486NameNumberfreshSubject_1.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch486NameNumber_freshVar_0;if ( ((tomMatch486NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch486NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch486NameNumber_freshVar_2=tomMatch486NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch486NameNumber_begin_4=tomMatch486NameNumber_freshVar_2;{  tom.gom.adt.gom.types.SectionList  tomMatch486NameNumber_end_5=tomMatch486NameNumber_freshVar_2;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch486NameNumber_freshVar_3=tomMatch486NameNumber_end_5;if (!( tomMatch486NameNumber_freshVar_3.isEmptyConcSection() )) {if ( ( tomMatch486NameNumber_freshVar_3.getHeadConcSection()  instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch486NameNumber_freshVar_8=  tomMatch486NameNumber_freshVar_3.getHeadConcSection() .getGrammarList() ;if ( ((tomMatch486NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch486NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch486NameNumber_freshVar_9=tomMatch486NameNumber_freshVar_8;{  tom.gom.adt.gom.types.GrammarList  tomMatch486NameNumber_begin_11=tomMatch486NameNumber_freshVar_9;{  tom.gom.adt.gom.types.GrammarList  tomMatch486NameNumber_end_12=tomMatch486NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch486NameNumber_freshVar_10=tomMatch486NameNumber_end_12;if (!( tomMatch486NameNumber_freshVar_10.isEmptyConcGrammar() )) {if ( ( tomMatch486NameNumber_freshVar_10.getHeadConcGrammar()  instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch486NameNumber_freshVar_15=  tomMatch486NameNumber_freshVar_10.getHeadConcGrammar() .getProductionList() ;if ( ((tomMatch486NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch486NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch486NameNumber_freshVar_16=tomMatch486NameNumber_freshVar_15;{  tom.gom.adt.gom.types.ProductionList  tomMatch486NameNumber_begin_18=tomMatch486NameNumber_freshVar_16;{  tom.gom.adt.gom.types.ProductionList  tomMatch486NameNumber_end_19=tomMatch486NameNumber_freshVar_16;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch486NameNumber_freshVar_17=tomMatch486NameNumber_end_19;if (!( tomMatch486NameNumber_freshVar_17.isEmptyConcProduction() )) {if ( ( tomMatch486NameNumber_freshVar_17.getHeadConcProduction()  instanceof tom.gom.adt.gom.types.production.SortType) ) {{  tom.gom.adt.gom.types.GomType  tomMatch486NameNumber_freshVar_22=  tomMatch486NameNumber_freshVar_17.getHeadConcProduction() .getType() ;if ( (tomMatch486NameNumber_freshVar_22 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch486NameNumber_freshVar_23= tomMatch486NameNumber_freshVar_22.getName() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch486NameNumber_freshVar_20= tomMatch486NameNumber_freshVar_17.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch486NameNumber_freshVar_13= tomMatch486NameNumber_freshVar_10.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch486NameNumber_freshVar_6= tomMatch486NameNumber_freshVar_3.getTailConcSection() ;if ( true ) {







        result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tomMatch486NameNumber_freshVar_23,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
      }}}}}}}}}}if ( tomMatch486NameNumber_end_19.isEmptyConcProduction() ) {tomMatch486NameNumber_end_19=tomMatch486NameNumber_begin_18;} else {tomMatch486NameNumber_end_19= tomMatch486NameNumber_end_19.getTailConcProduction() ;}}} while(!( tomMatch486NameNumber_end_19.equals(tomMatch486NameNumber_begin_18) ));}}}}}}}}if ( tomMatch486NameNumber_end_12.isEmptyConcGrammar() ) {tomMatch486NameNumber_end_12=tomMatch486NameNumber_begin_11;} else {tomMatch486NameNumber_end_12= tomMatch486NameNumber_end_12.getTailConcGrammar() ;}}} while(!( tomMatch486NameNumber_end_12.equals(tomMatch486NameNumber_begin_11) ));}}}}}}}}if ( tomMatch486NameNumber_end_5.isEmptyConcSection() ) {tomMatch486NameNumber_end_5=tomMatch486NameNumber_begin_4;} else {tomMatch486NameNumber_end_5= tomMatch486NameNumber_end_5.getTailConcSection() ;}}} while(!( tomMatch486NameNumber_end_5.equals(tomMatch486NameNumber_begin_4) ));}}}}}}}}}}}

    return result;
  }

  /*
   * Get all sort uses in a module (as codomain of an operator)
   */
  private Collection getSortDeclarationInCodomain(GomModule module) {
    Collection result = new HashSet();
    {if ( (module instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch487NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )module);if ( (tomMatch487NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch487NameNumber_freshVar_0= tomMatch487NameNumberfreshSubject_1.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumber_freshVar_1= tomMatch487NameNumberfreshSubject_1.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch487NameNumber_freshVar_0;if ( ((tomMatch487NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch487NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumber_freshVar_2=tomMatch487NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumber_begin_4=tomMatch487NameNumber_freshVar_2;{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumber_end_5=tomMatch487NameNumber_freshVar_2;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumber_freshVar_3=tomMatch487NameNumber_end_5;if (!( tomMatch487NameNumber_freshVar_3.isEmptyConcSection() )) {if ( ( tomMatch487NameNumber_freshVar_3.getHeadConcSection()  instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch487NameNumber_freshVar_8=  tomMatch487NameNumber_freshVar_3.getHeadConcSection() .getGrammarList() ;if ( ((tomMatch487NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch487NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch487NameNumber_freshVar_9=tomMatch487NameNumber_freshVar_8;{  tom.gom.adt.gom.types.GrammarList  tomMatch487NameNumber_begin_11=tomMatch487NameNumber_freshVar_9;{  tom.gom.adt.gom.types.GrammarList  tomMatch487NameNumber_end_12=tomMatch487NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch487NameNumber_freshVar_10=tomMatch487NameNumber_end_12;if (!( tomMatch487NameNumber_freshVar_10.isEmptyConcGrammar() )) {if ( ( tomMatch487NameNumber_freshVar_10.getHeadConcGrammar()  instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch487NameNumber_freshVar_15=  tomMatch487NameNumber_freshVar_10.getHeadConcGrammar() .getProductionList() ;if ( ((tomMatch487NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch487NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch487NameNumber_freshVar_16=tomMatch487NameNumber_freshVar_15;{  tom.gom.adt.gom.types.ProductionList  tomMatch487NameNumber_begin_18=tomMatch487NameNumber_freshVar_16;{  tom.gom.adt.gom.types.ProductionList  tomMatch487NameNumber_end_19=tomMatch487NameNumber_freshVar_16;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch487NameNumber_freshVar_17=tomMatch487NameNumber_end_19;if (!( tomMatch487NameNumber_freshVar_17.isEmptyConcProduction() )) {if ( ( tomMatch487NameNumber_freshVar_17.getHeadConcProduction()  instanceof tom.gom.adt.gom.types.production.Production) ) {{  String  tomMatch487NameNumber_freshVar_22=  tomMatch487NameNumber_freshVar_17.getHeadConcProduction() .getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch487NameNumber_freshVar_23=  tomMatch487NameNumber_freshVar_17.getHeadConcProduction() .getDomainList() ;{  tom.gom.adt.gom.types.GomType  tomMatch487NameNumber_freshVar_24=  tomMatch487NameNumber_freshVar_17.getHeadConcProduction() .getCodomain() ;{  tom.gom.adt.gom.types.Option  tomMatch487NameNumber_freshVar_25=  tomMatch487NameNumber_freshVar_17.getHeadConcProduction() .getOption() ;if ( (tomMatch487NameNumber_freshVar_24 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch487NameNumber_freshVar_26= tomMatch487NameNumber_freshVar_24.getName() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch487NameNumber_freshVar_20= tomMatch487NameNumber_freshVar_17.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch487NameNumber_freshVar_13= tomMatch487NameNumber_freshVar_10.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch487NameNumber_freshVar_6= tomMatch487NameNumber_freshVar_3.getTailConcSection() ;if ( true ) {











        result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tomMatch487NameNumber_freshVar_26,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
      }}}}}}}}}}}}}if ( tomMatch487NameNumber_end_19.isEmptyConcProduction() ) {tomMatch487NameNumber_end_19=tomMatch487NameNumber_begin_18;} else {tomMatch487NameNumber_end_19= tomMatch487NameNumber_end_19.getTailConcProduction() ;}}} while(!( tomMatch487NameNumber_end_19.equals(tomMatch487NameNumber_begin_18) ));}}}}}}}}if ( tomMatch487NameNumber_end_12.isEmptyConcGrammar() ) {tomMatch487NameNumber_end_12=tomMatch487NameNumber_begin_11;} else {tomMatch487NameNumber_end_12= tomMatch487NameNumber_end_12.getTailConcGrammar() ;}}} while(!( tomMatch487NameNumber_end_12.equals(tomMatch487NameNumber_begin_11) ));}}}}}}}}if ( tomMatch487NameNumber_end_5.isEmptyConcSection() ) {tomMatch487NameNumber_end_5=tomMatch487NameNumber_begin_4;} else {tomMatch487NameNumber_end_5= tomMatch487NameNumber_end_5.getTailConcSection() ;}}} while(!( tomMatch487NameNumber_end_5.equals(tomMatch487NameNumber_begin_4) ));}}}}}}}}}}}{if ( (module instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch488NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )module);if ( (tomMatch488NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch488NameNumber_freshVar_0= tomMatch488NameNumberfreshSubject_1.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch488NameNumber_freshVar_1= tomMatch488NameNumberfreshSubject_1.getSectionList() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch488NameNumber_freshVar_0;if ( ((tomMatch488NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch488NameNumber_freshVar_1 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch488NameNumber_freshVar_2=tomMatch488NameNumber_freshVar_1;{  tom.gom.adt.gom.types.SectionList  tomMatch488NameNumber_begin_4=tomMatch488NameNumber_freshVar_2;{  tom.gom.adt.gom.types.SectionList  tomMatch488NameNumber_end_5=tomMatch488NameNumber_freshVar_2;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch488NameNumber_freshVar_3=tomMatch488NameNumber_end_5;if (!( tomMatch488NameNumber_freshVar_3.isEmptyConcSection() )) {if ( ( tomMatch488NameNumber_freshVar_3.getHeadConcSection()  instanceof tom.gom.adt.gom.types.section.Public) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch488NameNumber_freshVar_8=  tomMatch488NameNumber_freshVar_3.getHeadConcSection() .getGrammarList() ;if ( ((tomMatch488NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.ConsConcGrammar) || (tomMatch488NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.grammarlist.EmptyConcGrammar)) ) {{  tom.gom.adt.gom.types.GrammarList  tomMatch488NameNumber_freshVar_9=tomMatch488NameNumber_freshVar_8;{  tom.gom.adt.gom.types.GrammarList  tomMatch488NameNumber_begin_11=tomMatch488NameNumber_freshVar_9;{  tom.gom.adt.gom.types.GrammarList  tomMatch488NameNumber_end_12=tomMatch488NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.GrammarList  tomMatch488NameNumber_freshVar_10=tomMatch488NameNumber_end_12;if (!( tomMatch488NameNumber_freshVar_10.isEmptyConcGrammar() )) {if ( ( tomMatch488NameNumber_freshVar_10.getHeadConcGrammar()  instanceof tom.gom.adt.gom.types.grammar.Grammar) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_freshVar_15=  tomMatch488NameNumber_freshVar_10.getHeadConcGrammar() .getProductionList() ;if ( ((tomMatch488NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch488NameNumber_freshVar_15 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_freshVar_16=tomMatch488NameNumber_freshVar_15;{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_begin_18=tomMatch488NameNumber_freshVar_16;{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_end_19=tomMatch488NameNumber_freshVar_16;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_freshVar_17=tomMatch488NameNumber_end_19;if (!( tomMatch488NameNumber_freshVar_17.isEmptyConcProduction() )) {if ( ( tomMatch488NameNumber_freshVar_17.getHeadConcProduction()  instanceof tom.gom.adt.gom.types.production.SortType) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_freshVar_22=  tomMatch488NameNumber_freshVar_17.getHeadConcProduction() .getProductionList() ;if ( ((tomMatch488NameNumber_freshVar_22 instanceof tom.gom.adt.gom.types.productionlist.ConsConcProduction) || (tomMatch488NameNumber_freshVar_22 instanceof tom.gom.adt.gom.types.productionlist.EmptyConcProduction)) ) {{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_freshVar_23=tomMatch488NameNumber_freshVar_22;{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_begin_25=tomMatch488NameNumber_freshVar_23;{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_end_26=tomMatch488NameNumber_freshVar_23;do {{{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_freshVar_24=tomMatch488NameNumber_end_26;if (!( tomMatch488NameNumber_freshVar_24.isEmptyConcProduction() )) {if ( ( tomMatch488NameNumber_freshVar_24.getHeadConcProduction()  instanceof tom.gom.adt.gom.types.production.Production) ) {{  String  tomMatch488NameNumber_freshVar_29=  tomMatch488NameNumber_freshVar_24.getHeadConcProduction() .getName() ;{  tom.gom.adt.gom.types.FieldList  tomMatch488NameNumber_freshVar_30=  tomMatch488NameNumber_freshVar_24.getHeadConcProduction() .getDomainList() ;{  tom.gom.adt.gom.types.GomType  tomMatch488NameNumber_freshVar_31=  tomMatch488NameNumber_freshVar_24.getHeadConcProduction() .getCodomain() ;{  tom.gom.adt.gom.types.Option  tomMatch488NameNumber_freshVar_32=  tomMatch488NameNumber_freshVar_24.getHeadConcProduction() .getOption() ;if ( (tomMatch488NameNumber_freshVar_31 instanceof tom.gom.adt.gom.types.gomtype.GomType) ) {{  String  tomMatch488NameNumber_freshVar_33= tomMatch488NameNumber_freshVar_31.getName() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_freshVar_27= tomMatch488NameNumber_freshVar_24.getTailConcProduction() ;{  tom.gom.adt.gom.types.ProductionList  tomMatch488NameNumber_freshVar_20= tomMatch488NameNumber_freshVar_17.getTailConcProduction() ;{  tom.gom.adt.gom.types.GrammarList  tomMatch488NameNumber_freshVar_13= tomMatch488NameNumber_freshVar_10.getTailConcGrammar() ;{  tom.gom.adt.gom.types.SectionList  tomMatch488NameNumber_freshVar_6= tomMatch488NameNumber_freshVar_3.getTailConcSection() ;if ( true ) {













        result.add( tom.gom.adt.gom.types.sortdecl.SortDecl.make(tomMatch488NameNumber_freshVar_33,  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ) );
      }}}}}}}}}}}}}}if ( tomMatch488NameNumber_end_26.isEmptyConcProduction() ) {tomMatch488NameNumber_end_26=tomMatch488NameNumber_begin_25;} else {tomMatch488NameNumber_end_26= tomMatch488NameNumber_end_26.getTailConcProduction() ;}}} while(!( tomMatch488NameNumber_end_26.equals(tomMatch488NameNumber_begin_25) ));}}}}}}}}if ( tomMatch488NameNumber_end_19.isEmptyConcProduction() ) {tomMatch488NameNumber_end_19=tomMatch488NameNumber_begin_18;} else {tomMatch488NameNumber_end_19= tomMatch488NameNumber_end_19.getTailConcProduction() ;}}} while(!( tomMatch488NameNumber_end_19.equals(tomMatch488NameNumber_begin_18) ));}}}}}}}}if ( tomMatch488NameNumber_end_12.isEmptyConcGrammar() ) {tomMatch488NameNumber_end_12=tomMatch488NameNumber_begin_11;} else {tomMatch488NameNumber_end_12= tomMatch488NameNumber_end_12.getTailConcGrammar() ;}}} while(!( tomMatch488NameNumber_end_12.equals(tomMatch488NameNumber_begin_11) ));}}}}}}}}if ( tomMatch488NameNumber_end_5.isEmptyConcSection() ) {tomMatch488NameNumber_end_5=tomMatch488NameNumber_begin_4;} else {tomMatch488NameNumber_end_5= tomMatch488NameNumber_end_5.getTailConcSection() ;}}} while(!( tomMatch488NameNumber_end_5.equals(tomMatch488NameNumber_begin_4) ));}}}}}}}}}}}

    return result;
  }

  /**
   * Get directly imported modules. Skip builtins
   *
   * @param module the main module with imports
   * @return the Collection of imported GomModuleName
   */
  private Collection getImportedModules(GomModule module) {
    Set imports = new HashSet();
    {if ( (module instanceof tom.gom.adt.gom.types.GomModule) ) {{  tom.gom.adt.gom.types.GomModule  tomMatch489NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModule )module);if ( (tomMatch489NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch489NameNumber_freshVar_0= tomMatch489NameNumberfreshSubject_1.getModuleName() ;{  tom.gom.adt.gom.types.SectionList  tomMatch489NameNumber_freshVar_1= tomMatch489NameNumberfreshSubject_1.getSectionList() ;{  tom.gom.adt.gom.types.SectionList  tom_sectionList=tomMatch489NameNumber_freshVar_1;if ( true ) {

        imports.add(tomMatch489NameNumber_freshVar_0);
        {if ( (tom_sectionList instanceof tom.gom.adt.gom.types.SectionList) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch490NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.SectionList )tom_sectionList);if ( ((tomMatch490NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.sectionlist.ConsConcSection) || (tomMatch490NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.sectionlist.EmptyConcSection)) ) {{  tom.gom.adt.gom.types.SectionList  tomMatch490NameNumber_freshVar_0=tomMatch490NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.SectionList  tomMatch490NameNumber_begin_2=tomMatch490NameNumber_freshVar_0;{  tom.gom.adt.gom.types.SectionList  tomMatch490NameNumber_end_3=tomMatch490NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.SectionList  tomMatch490NameNumber_freshVar_1=tomMatch490NameNumber_end_3;if (!( tomMatch490NameNumber_freshVar_1.isEmptyConcSection() )) {if ( ( tomMatch490NameNumber_freshVar_1.getHeadConcSection()  instanceof tom.gom.adt.gom.types.section.Imports) ) {{  tom.gom.adt.gom.types.ImportList  tomMatch490NameNumber_freshVar_6=  tomMatch490NameNumber_freshVar_1.getHeadConcSection() .getImportList() ;if ( ((tomMatch490NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.importlist.ConsConcImportedModule) || (tomMatch490NameNumber_freshVar_6 instanceof tom.gom.adt.gom.types.importlist.EmptyConcImportedModule)) ) {{  tom.gom.adt.gom.types.ImportList  tomMatch490NameNumber_freshVar_7=tomMatch490NameNumber_freshVar_6;{  tom.gom.adt.gom.types.ImportList  tomMatch490NameNumber_begin_9=tomMatch490NameNumber_freshVar_7;{  tom.gom.adt.gom.types.ImportList  tomMatch490NameNumber_end_10=tomMatch490NameNumber_freshVar_7;do {{{  tom.gom.adt.gom.types.ImportList  tomMatch490NameNumber_freshVar_8=tomMatch490NameNumber_end_10;if (!( tomMatch490NameNumber_freshVar_8.isEmptyConcImportedModule() )) {if ( ( tomMatch490NameNumber_freshVar_8.getHeadConcImportedModule()  instanceof tom.gom.adt.gom.types.importedmodule.Import) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch490NameNumber_freshVar_13=  tomMatch490NameNumber_freshVar_8.getHeadConcImportedModule() .getModuleName() ;if ( (tomMatch490NameNumber_freshVar_13 instanceof tom.gom.adt.gom.types.gommodulename.GomModuleName) ) {{  String  tomMatch490NameNumber_freshVar_14= tomMatch490NameNumber_freshVar_13.getName() ;{  tom.gom.adt.gom.types.ImportList  tomMatch490NameNumber_freshVar_11= tomMatch490NameNumber_freshVar_8.getTailConcImportedModule() ;{  tom.gom.adt.gom.types.SectionList  tomMatch490NameNumber_freshVar_4= tomMatch490NameNumber_freshVar_1.getTailConcSection() ;if ( true ) {





            if (!environment().isBuiltin(tomMatch490NameNumber_freshVar_14)) {
              imports.add(tomMatch490NameNumber_freshVar_13);
            }
          }}}}}}}}}if ( tomMatch490NameNumber_end_10.isEmptyConcImportedModule() ) {tomMatch490NameNumber_end_10=tomMatch490NameNumber_begin_9;} else {tomMatch490NameNumber_end_10= tomMatch490NameNumber_end_10.getTailConcImportedModule() ;}}} while(!( tomMatch490NameNumber_end_10.equals(tomMatch490NameNumber_begin_9) ));}}}}}}}}if ( tomMatch490NameNumber_end_3.isEmptyConcSection() ) {tomMatch490NameNumber_end_3=tomMatch490NameNumber_begin_2;} else {tomMatch490NameNumber_end_3= tomMatch490NameNumber_end_3.getTailConcSection() ;}}} while(!( tomMatch490NameNumber_end_3.equals(tomMatch490NameNumber_begin_2) ));}}}}}}}

      }}}}}}}}

    return imports;
  }

  private GomModule getModule(GomModuleName modname, GomModuleList list) {
    {if ( (list instanceof tom.gom.adt.gom.types.GomModuleList) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch491NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModuleList )list);if ( ((tomMatch491NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule) || (tomMatch491NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.gommodulelist.EmptyConcGomModule)) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch491NameNumber_freshVar_0=tomMatch491NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.GomModuleList  tomMatch491NameNumber_begin_2=tomMatch491NameNumber_freshVar_0;{  tom.gom.adt.gom.types.GomModuleList  tomMatch491NameNumber_end_3=tomMatch491NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.GomModuleList  tomMatch491NameNumber_freshVar_1=tomMatch491NameNumber_end_3;if (!( tomMatch491NameNumber_freshVar_1.isEmptyConcGomModule() )) {if ( ( tomMatch491NameNumber_freshVar_1.getHeadConcGomModule()  instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch491NameNumber_freshVar_6=  tomMatch491NameNumber_freshVar_1.getHeadConcGomModule() .getModuleName() ;{  tom.gom.adt.gom.types.GomModuleList  tomMatch491NameNumber_freshVar_4= tomMatch491NameNumber_freshVar_1.getTailConcGomModule() ;if ( true ) {

        if (tomMatch491NameNumber_freshVar_6.equals(modname)) {
          return  tomMatch491NameNumber_freshVar_1.getHeadConcGomModule() ;
        }
      }}}}}}if ( tomMatch491NameNumber_end_3.isEmptyConcGomModule() ) {tomMatch491NameNumber_end_3=tomMatch491NameNumber_begin_2;} else {tomMatch491NameNumber_end_3= tomMatch491NameNumber_end_3.getTailConcGomModule() ;}}} while(!( tomMatch491NameNumber_end_3.equals(tomMatch491NameNumber_begin_2) ));}}}}}}}

    throw new GomRuntimeException("Module "+ modname +" not present");
  }

  private Collection getTransitiveClosureImports(GomModule module,
      GomModuleList moduleList) {
    Set imported = new HashSet();
    imported.addAll(getImportedModules(module));

    Set newSet = new HashSet();
    while(!newSet.equals(imported)) {
      newSet.addAll(imported);
      imported.addAll(newSet);
      Iterator it = imported.iterator();
      while(it.hasNext()) {
        GomModuleName modname = (GomModuleName) it.next();
        newSet.addAll(getImportedModules(getModule(modname,moduleList)));
      }
    }
    return newSet;
  }

  private void buildDependencyMap(GomModuleList moduleList) {
    {if ( (moduleList instanceof tom.gom.adt.gom.types.GomModuleList) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch492NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.GomModuleList )moduleList);if ( ((tomMatch492NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.gommodulelist.ConsConcGomModule) || (tomMatch492NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.gommodulelist.EmptyConcGomModule)) ) {{  tom.gom.adt.gom.types.GomModuleList  tomMatch492NameNumber_freshVar_0=tomMatch492NameNumberfreshSubject_1;{  tom.gom.adt.gom.types.GomModuleList  tomMatch492NameNumber_begin_2=tomMatch492NameNumber_freshVar_0;{  tom.gom.adt.gom.types.GomModuleList  tomMatch492NameNumber_end_3=tomMatch492NameNumber_freshVar_0;do {{{  tom.gom.adt.gom.types.GomModuleList  tomMatch492NameNumber_freshVar_1=tomMatch492NameNumber_end_3;if (!( tomMatch492NameNumber_freshVar_1.isEmptyConcGomModule() )) {if ( ( tomMatch492NameNumber_freshVar_1.getHeadConcGomModule()  instanceof tom.gom.adt.gom.types.gommodule.GomModule) ) {{  tom.gom.adt.gom.types.GomModuleName  tomMatch492NameNumber_freshVar_6=  tomMatch492NameNumber_freshVar_1.getHeadConcGomModule() .getModuleName() ;{  tom.gom.adt.gom.types.GomModuleName  tom_moduleName=tomMatch492NameNumber_freshVar_6;{  tom.gom.adt.gom.types.GomModuleList  tomMatch492NameNumber_freshVar_4= tomMatch492NameNumber_freshVar_1.getTailConcGomModule() ;if ( true ) {

        ModuleDeclList importsModuleDeclList =  tom.gom.adt.gom.types.moduledecllist.EmptyConcModuleDecl.make() ;
        Iterator it = getTransitiveClosureImports( tomMatch492NameNumber_freshVar_1.getHeadConcGomModule() ,moduleList).iterator();
        while(it.hasNext()) {
          GomModuleName importedModuleName = (GomModuleName) it.next();


          importsModuleDeclList = 
             tom.gom.adt.gom.types.moduledecllist.ConsConcModuleDecl.make( tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(importedModuleName, streamManager.getPackagePath(importedModuleName.getName())) ,tom_append_list_ConcModuleDecl(importsModuleDeclList, tom.gom.adt.gom.types.moduledecllist.EmptyConcModuleDecl.make() )) 
;
        }
        environment().addModuleDependency(
             tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(tom_moduleName, streamManager.getPackagePath(tom_moduleName.getName())) ,importsModuleDeclList);
      }}}}}}}if ( tomMatch492NameNumber_end_3.isEmptyConcGomModule() ) {tomMatch492NameNumber_end_3=tomMatch492NameNumber_begin_2;} else {tomMatch492NameNumber_end_3= tomMatch492NameNumber_end_3.getTailConcGomModule() ;}}} while(!( tomMatch492NameNumber_end_3.equals(tomMatch492NameNumber_begin_2) ));}}}}}}}

  }

  private boolean checkSortValidity(Sort sort) {
    boolean valid = true;
    // check if the same slot name is used with different types
    Map mapNameType = new HashMap();
    {if ( (sort instanceof tom.gom.adt.gom.types.Sort) ) {{  tom.gom.adt.gom.types.Sort  tomMatch493NameNumberfreshSubject_1=(( tom.gom.adt.gom.types.Sort )sort);if ( (tomMatch493NameNumberfreshSubject_1 instanceof tom.gom.adt.gom.types.sort.Sort) ) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch493NameNumber_freshVar_0= tomMatch493NameNumberfreshSubject_1.getOperatorDecls() ;if ( ((tomMatch493NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.operatordecllist.ConsConcOperator) || (tomMatch493NameNumber_freshVar_0 instanceof tom.gom.adt.gom.types.operatordecllist.EmptyConcOperator)) ) {{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch493NameNumber_freshVar_1=tomMatch493NameNumber_freshVar_0;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch493NameNumber_begin_3=tomMatch493NameNumber_freshVar_1;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch493NameNumber_end_4=tomMatch493NameNumber_freshVar_1;do {{{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch493NameNumber_freshVar_2=tomMatch493NameNumber_end_4;if (!( tomMatch493NameNumber_freshVar_2.isEmptyConcOperator() )) {if ( ( tomMatch493NameNumber_freshVar_2.getHeadConcOperator()  instanceof tom.gom.adt.gom.types.operatordecl.OperatorDecl) ) {{  tom.gom.adt.gom.types.TypedProduction  tomMatch493NameNumber_freshVar_7=  tomMatch493NameNumber_freshVar_2.getHeadConcOperator() .getProd() ;if ( (tomMatch493NameNumber_freshVar_7 instanceof tom.gom.adt.gom.types.typedproduction.Slots) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch493NameNumber_freshVar_8= tomMatch493NameNumber_freshVar_7.getSlots() ;if ( ((tomMatch493NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.slotlist.ConsConcSlot) || (tomMatch493NameNumber_freshVar_8 instanceof tom.gom.adt.gom.types.slotlist.EmptyConcSlot)) ) {{  tom.gom.adt.gom.types.SlotList  tomMatch493NameNumber_freshVar_9=tomMatch493NameNumber_freshVar_8;{  tom.gom.adt.gom.types.SlotList  tomMatch493NameNumber_begin_11=tomMatch493NameNumber_freshVar_9;{  tom.gom.adt.gom.types.SlotList  tomMatch493NameNumber_end_12=tomMatch493NameNumber_freshVar_9;do {{{  tom.gom.adt.gom.types.SlotList  tomMatch493NameNumber_freshVar_10=tomMatch493NameNumber_end_12;if (!( tomMatch493NameNumber_freshVar_10.isEmptyConcSlot() )) {if ( ( tomMatch493NameNumber_freshVar_10.getHeadConcSlot()  instanceof tom.gom.adt.gom.types.slot.Slot) ) {{  String  tomMatch493NameNumber_freshVar_15=  tomMatch493NameNumber_freshVar_10.getHeadConcSlot() .getName() ;{  tom.gom.adt.gom.types.SortDecl  tomMatch493NameNumber_freshVar_16=  tomMatch493NameNumber_freshVar_10.getHeadConcSlot() .getSort() ;{  String  tom_slotName=tomMatch493NameNumber_freshVar_15;{  tom.gom.adt.gom.types.SortDecl  tom_slotSort=tomMatch493NameNumber_freshVar_16;{  tom.gom.adt.gom.types.SlotList  tomMatch493NameNumber_freshVar_13= tomMatch493NameNumber_freshVar_10.getTailConcSlot() ;{  tom.gom.adt.gom.types.OperatorDeclList  tomMatch493NameNumber_freshVar_5= tomMatch493NameNumber_freshVar_2.getTailConcOperator() ;if ( true ) {





        if(!mapNameType.containsKey(tom_slotName)) {
          mapNameType.put(tom_slotName,tom_slotSort);
        } else {
          SortDecl prevSort = (SortDecl) mapNameType.get(tom_slotName);
          if (!prevSort.equals(tom_slotSort)) {
            getLogger().log(Level.SEVERE,
                GomMessage.slotIncompatibleTypes.getMessage(),
                new Object[]{(tom_slotName),prevSort.getName(),
                             (tom_slotSort).getName()});
            valid = false;
          }
        }
      }}}}}}}}}}if ( tomMatch493NameNumber_end_12.isEmptyConcSlot() ) {tomMatch493NameNumber_end_12=tomMatch493NameNumber_begin_11;} else {tomMatch493NameNumber_end_12= tomMatch493NameNumber_end_12.getTailConcSlot() ;}}} while(!( tomMatch493NameNumber_end_12.equals(tomMatch493NameNumber_begin_11) ));}}}}}}}}}}if ( tomMatch493NameNumber_end_4.isEmptyConcOperator() ) {tomMatch493NameNumber_end_4=tomMatch493NameNumber_begin_3;} else {tomMatch493NameNumber_end_4= tomMatch493NameNumber_end_4.getTailConcOperator() ;}}} while(!( tomMatch493NameNumber_end_4.equals(tomMatch493NameNumber_begin_3) ));}}}}}}}}}

    return valid;
  }

  private String showSortList(Collection decls) {
    String sorts = "";
    Iterator it = decls.iterator();
    if(it.hasNext()) {
      SortDecl decl = (SortDecl)it.next();
      sorts += decl.getName();
    }
    while(it.hasNext()) {
      SortDecl decl = (SortDecl)it.next();
      sorts += ", "+decl.getName();
    }
    return sorts;
  }

  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }
}

/* Generated by TOM (version 2.4alpha): Do not edit this file *//*
 * Gom
 * 
 * Copyright (c) 2006, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Yoann Toussaint    e-mail: Yoann.Toussaint@loria.fr
 * 
 **/

package tom.gom.parser;

import java.util.logging.Logger;
import java.util.logging.Level;

import tom.pom.ATermAST;
import aterm.*;
import aterm.pure.*;

import tom.gom.GomMessage;
import tom.gom.tools.error.GomRuntimeException;
import tom.gom.adt.gom.*;
import tom.gom.adt.gom.types.*;

public class AST2Gom{

  /* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file */private static boolean tom_terms_equal_int( int  t1,  int  t2) {  return  (t1==t2)  ;} /* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file */ private static boolean tom_terms_equal_String( String  t1,  String  t2) {  return  (t1.equals(t2))  ;}  /* Generated by TOM (version 2.4alpha): Do not edit this file */private static boolean tom_terms_equal_ATerm(Object t1, Object t2) {  return  t1 == t2 ;} /* Generated by TOM (version 2.4alpha): Do not edit this file */private static boolean tom_terms_equal_ATermList(Object l1, Object l2) {  return  l1==l2  ;} private static boolean tom_is_fun_sym_concATerm( aterm.ATermList  t) {  return  t instanceof ATermList  ;}private static  aterm.ATermList  tom_empty_list_concATerm() { return  aterm.pure.SingletonFactory.getInstance().makeList() ; }private static  aterm.ATermList  tom_cons_list_concATerm( aterm.ATerm  e,  aterm.ATermList  l) { return  l.insert(e) ; }private static  aterm.ATerm  tom_get_head_concATerm_ATermList( aterm.ATermList  t) {  return  t.getFirst()  ;}private static  aterm.ATermList  tom_get_tail_concATerm_ATermList( aterm.ATermList  t) {  return  t.getNext()  ;}private static boolean tom_is_empty_concATerm_ATermList( aterm.ATermList  t) {  return  t.isEmpty()  ;}private static  aterm.ATermList  tom_append_list_concATerm( aterm.ATermList  l1,  aterm.ATermList  l2) {    if(tom_is_empty_concATerm_ATermList(l1)) {     return l2;    } else if(tom_is_empty_concATerm_ATermList(l2)) {     return l1;    } else if(tom_is_empty_concATerm_ATermList(( aterm.ATermList )tom_get_tail_concATerm_ATermList(l1))) {     return ( aterm.ATermList )tom_cons_list_concATerm(( aterm.ATerm )tom_get_head_concATerm_ATermList(l1),l2);    } else {      return ( aterm.ATermList )tom_cons_list_concATerm(( aterm.ATerm )tom_get_head_concATerm_ATermList(l1),tom_append_list_concATerm(( aterm.ATermList )tom_get_tail_concATerm_ATermList(l1),l2));    }   }  private static  aterm.ATermList  tom_get_slice_concATerm( aterm.ATermList  begin,  aterm.ATermList  end) {    if(tom_terms_equal_ATermList(begin,end)) {      return ( aterm.ATermList )tom_empty_list_concATerm();    } else {      return ( aterm.ATermList )tom_cons_list_concATerm(( aterm.ATerm )tom_get_head_concATerm_ATermList(begin),( aterm.ATermList )tom_get_slice_concATerm(( aterm.ATermList )tom_get_tail_concATerm_ATermList(begin),end));    }   }  private static boolean tom_is_fun_sym_NodeInfo( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("NodeInfo",3,false)  ;}private static  String  tom_get_slot_NodeInfo_text( aterm.ATerm  t) {  return  ((ATermAppl)((ATermAppl)t).getArgument(0)).getAFun().getName()  ;}private static  int  tom_get_slot_NodeInfo_line( aterm.ATerm  t) {  return  ((ATermInt)((ATermAppl)t).getArgument(1)).getInt()  ;}private static  int  tom_get_slot_NodeInfo_column( aterm.ATerm  t) {  return  ((ATermInt)((ATermAppl)t).getArgument(2)).getInt()  ;}private static boolean tom_is_fun_sym_SORTS( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("SORTS",2,false)  ;}private static  aterm.ATerm  tom_get_slot_SORTS_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_SORTS_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_INTERFACE( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("INTERFACE",2,false)  ;}private static  aterm.ATerm  tom_get_slot_INTERFACE_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_INTERFACE_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_COMMA( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("COMMA",2,false)  ;}private static  aterm.ATerm  tom_get_slot_COMMA_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_COMMA_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_PUBLIC( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("PUBLIC",2,false)  ;}private static  aterm.ATerm  tom_get_slot_PUBLIC_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_PUBLIC_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_BLOCK( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("BLOCK",2,false)  ;}private static  aterm.ATerm  tom_get_slot_BLOCK_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_BLOCK_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_MAKEINSERT( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("MAKEINSERT",2,false)  ;}private static  aterm.ATerm  tom_get_slot_MAKEINSERT_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_MAKEINSERT_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_IMPORTS( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("IMPORTS",2,false)  ;}private static  aterm.ATerm  tom_get_slot_IMPORTS_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_IMPORTS_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_IMPORT( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("IMPORT",2,false)  ;}private static  aterm.ATerm  tom_get_slot_IMPORT_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_IMPORT_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_MODULE( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("MODULE",2,false)  ;}private static  aterm.ATerm  tom_get_slot_MODULE_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_MODULE_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_COLON( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("COLON",2,false)  ;}private static  aterm.ATerm  tom_get_slot_COLON_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_COLON_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_STAR( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("STAR",2,false)  ;}private static  aterm.ATerm  tom_get_slot_STAR_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_STAR_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_ARROW( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("ARROW",2,false)  ;}private static  aterm.ATerm  tom_get_slot_ARROW_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_ARROW_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_OPERATOR( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("OPERATOR",2,false)  ;}private static  aterm.ATerm  tom_get_slot_OPERATOR_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_OPERATOR_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_EQUALS( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("EQUALS",2,false)  ;}private static  aterm.ATerm  tom_get_slot_EQUALS_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_EQUALS_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_ALT( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("ALT",2,false)  ;}private static  aterm.ATerm  tom_get_slot_ALT_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_ALT_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_MAKE( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("MAKE",2,false)  ;}private static  aterm.ATerm  tom_get_slot_MAKE_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_MAKE_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_SORT( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("SORT",2,false)  ;}private static  aterm.ATerm  tom_get_slot_SORT_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_SORT_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_SYNTAX( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("SYNTAX",2,false)  ;}private static  aterm.ATerm  tom_get_slot_SYNTAX_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_SYNTAX_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}private static boolean tom_is_fun_sym_ID( aterm.ATerm  t) {  return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("ID",2,false)  ;}private static  aterm.ATerm  tom_get_slot_ID_info( aterm.ATerm  t) {  return  ((ATermAppl)t).getArgument(0)  ;}private static  aterm.ATermList  tom_get_slot_ID_childs( aterm.ATerm  t) {  return  (ATermList)((ATermAppl)t).getArgument(1)  ;}/* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file */ /* Generated by TOM (version 2.4alpha): Do not edit this file */ private static boolean tom_terms_equal_Production(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_IdKind(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Grammar(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomModuleName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ProductionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_HookKind(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SectionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Section(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GrammarList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomType(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_FieldList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Field(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ImportList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Arg(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ArgList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomTypeList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_GomModule(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ImportedModule(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static  tom.gom.adt.gom.types.Production  tom_make_Production( String  t0,  tom.gom.adt.gom.types.FieldList  t1,  tom.gom.adt.gom.types.GomType  t2) { return  tom.gom.adt.gom.types.production.Production.make(t0, t1, t2); }private static  tom.gom.adt.gom.types.Production  tom_make_Hook( tom.gom.adt.gom.types.IdKind  t0,  String  t1,  tom.gom.adt.gom.types.HookKind  t2,  tom.gom.adt.gom.types.ArgList  t3,  String  t4) { return  tom.gom.adt.gom.types.production.Hook.make(t0, t1, t2, t3, t4); }private static  tom.gom.adt.gom.types.IdKind  tom_make_KindModule() { return  tom.gom.adt.gom.types.idkind.KindModule.make(); }private static  tom.gom.adt.gom.types.IdKind  tom_make_KindSort() { return  tom.gom.adt.gom.types.idkind.KindSort.make(); }private static  tom.gom.adt.gom.types.IdKind  tom_make_KindOperator() { return  tom.gom.adt.gom.types.idkind.KindOperator.make(); }private static  tom.gom.adt.gom.types.Grammar  tom_make_Grammar( tom.gom.adt.gom.types.ProductionList  t0) { return  tom.gom.adt.gom.types.grammar.Grammar.make(t0); }private static  tom.gom.adt.gom.types.Grammar  tom_make_Sorts( tom.gom.adt.gom.types.GomTypeList  t0) { return  tom.gom.adt.gom.types.grammar.Sorts.make(t0); }private static  tom.gom.adt.gom.types.GomModuleName  tom_make_GomModuleName( String  t0) { return  tom.gom.adt.gom.types.gommodulename.GomModuleName.make(t0); }private static  tom.gom.adt.gom.types.HookKind  tom_make_KindMakeHook() { return  tom.gom.adt.gom.types.hookkind.KindMakeHook.make(); }private static  tom.gom.adt.gom.types.HookKind  tom_make_KindMakeinsertHook() { return  tom.gom.adt.gom.types.hookkind.KindMakeinsertHook.make(); }private static  tom.gom.adt.gom.types.HookKind  tom_make_KindBlockHook() { return  tom.gom.adt.gom.types.hookkind.KindBlockHook.make(); }private static  tom.gom.adt.gom.types.HookKind  tom_make_KindInterfaceHook() { return  tom.gom.adt.gom.types.hookkind.KindInterfaceHook.make(); }private static  tom.gom.adt.gom.types.HookKind  tom_make_KindImportHook() { return  tom.gom.adt.gom.types.hookkind.KindImportHook.make(); }private static  tom.gom.adt.gom.types.Section  tom_make_Imports( tom.gom.adt.gom.types.ImportList  t0) { return  tom.gom.adt.gom.types.section.Imports.make(t0); }private static  tom.gom.adt.gom.types.Section  tom_make_Public( tom.gom.adt.gom.types.GrammarList  t0) { return  tom.gom.adt.gom.types.section.Public.make(t0); }private static  tom.gom.adt.gom.types.GomType  tom_make_GomType( String  t0) { return  tom.gom.adt.gom.types.gomtype.GomType.make(t0); }private static  tom.gom.adt.gom.types.Field  tom_make_StarredField( tom.gom.adt.gom.types.GomType  t0) { return  tom.gom.adt.gom.types.field.StarredField.make(t0); }private static  tom.gom.adt.gom.types.Field  tom_make_NamedField( String  t0,  tom.gom.adt.gom.types.GomType  t1) { return  tom.gom.adt.gom.types.field.NamedField.make(t0, t1); }private static  tom.gom.adt.gom.types.Arg  tom_make_Arg( String  t0) { return  tom.gom.adt.gom.types.arg.Arg.make(t0); }private static  tom.gom.adt.gom.types.GomModule  tom_make_GomModule( tom.gom.adt.gom.types.GomModuleName  t0,  tom.gom.adt.gom.types.SectionList  t1) { return  tom.gom.adt.gom.types.gommodule.GomModule.make(t0, t1); }private static  tom.gom.adt.gom.types.ImportedModule  tom_make_Import( tom.gom.adt.gom.types.GomModuleName  t0) { return  tom.gom.adt.gom.types.importedmodule.Import.make(t0); }private static boolean tom_is_fun_sym_concProduction( tom.gom.adt.gom.types.ProductionList  t) {  return  t instanceof tom.gom.adt.gom.types.productionlist.ConsconcProduction || t instanceof tom.gom.adt.gom.types.productionlist.EmptyconcProduction  ;}private static  tom.gom.adt.gom.types.ProductionList  tom_empty_list_concProduction() { return  tom.gom.adt.gom.types.productionlist.EmptyconcProduction.make() ; }private static  tom.gom.adt.gom.types.ProductionList  tom_cons_list_concProduction( tom.gom.adt.gom.types.Production  e,  tom.gom.adt.gom.types.ProductionList  l) { return  tom.gom.adt.gom.types.productionlist.ConsconcProduction.make(e,l) ; }private static  tom.gom.adt.gom.types.Production  tom_get_head_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.getHeadconcProduction()  ;}private static  tom.gom.adt.gom.types.ProductionList  tom_get_tail_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.getTailconcProduction()  ;}private static boolean tom_is_empty_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.isEmptyconcProduction()  ;}private static  tom.gom.adt.gom.types.ProductionList  tom_append_list_concProduction( tom.gom.adt.gom.types.ProductionList  l1,  tom.gom.adt.gom.types.ProductionList  l2) {    if(tom_is_empty_concProduction_ProductionList(l1)) {     return l2;    } else if(tom_is_empty_concProduction_ProductionList(l2)) {     return l1;    } else if(tom_is_empty_concProduction_ProductionList(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(l1))) {     return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(l1),tom_append_list_concProduction(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.ProductionList  tom_get_slice_concProduction( tom.gom.adt.gom.types.ProductionList  begin,  tom.gom.adt.gom.types.ProductionList  end) {    if(tom_terms_equal_ProductionList(begin,end)) {      return ( tom.gom.adt.gom.types.ProductionList )tom_empty_list_concProduction();    } else {      return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(begin),( tom.gom.adt.gom.types.ProductionList )tom_get_slice_concProduction(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSection( tom.gom.adt.gom.types.SectionList  t) {  return  t instanceof tom.gom.adt.gom.types.sectionlist.ConsconcSection || t instanceof tom.gom.adt.gom.types.sectionlist.EmptyconcSection  ;}private static  tom.gom.adt.gom.types.SectionList  tom_empty_list_concSection() { return  tom.gom.adt.gom.types.sectionlist.EmptyconcSection.make() ; }private static  tom.gom.adt.gom.types.SectionList  tom_cons_list_concSection( tom.gom.adt.gom.types.Section  e,  tom.gom.adt.gom.types.SectionList  l) { return  tom.gom.adt.gom.types.sectionlist.ConsconcSection.make(e,l) ; }private static  tom.gom.adt.gom.types.Section  tom_get_head_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.getHeadconcSection()  ;}private static  tom.gom.adt.gom.types.SectionList  tom_get_tail_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.getTailconcSection()  ;}private static boolean tom_is_empty_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.isEmptyconcSection()  ;}private static  tom.gom.adt.gom.types.SectionList  tom_append_list_concSection( tom.gom.adt.gom.types.SectionList  l1,  tom.gom.adt.gom.types.SectionList  l2) {    if(tom_is_empty_concSection_SectionList(l1)) {     return l2;    } else if(tom_is_empty_concSection_SectionList(l2)) {     return l1;    } else if(tom_is_empty_concSection_SectionList(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(l1))) {     return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(l1),tom_append_list_concSection(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.SectionList  tom_get_slice_concSection( tom.gom.adt.gom.types.SectionList  begin,  tom.gom.adt.gom.types.SectionList  end) {    if(tom_terms_equal_SectionList(begin,end)) {      return ( tom.gom.adt.gom.types.SectionList )tom_empty_list_concSection();    } else {      return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(begin),( tom.gom.adt.gom.types.SectionList )tom_get_slice_concSection(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(begin),end));    }   }  private static boolean tom_is_fun_sym_concGrammar( tom.gom.adt.gom.types.GrammarList  t) {  return  t instanceof tom.gom.adt.gom.types.grammarlist.ConsconcGrammar || t instanceof tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar  ;}private static  tom.gom.adt.gom.types.GrammarList  tom_empty_list_concGrammar() { return  tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar.make() ; }private static  tom.gom.adt.gom.types.GrammarList  tom_cons_list_concGrammar( tom.gom.adt.gom.types.Grammar  e,  tom.gom.adt.gom.types.GrammarList  l) { return  tom.gom.adt.gom.types.grammarlist.ConsconcGrammar.make(e,l) ; }private static  tom.gom.adt.gom.types.Grammar  tom_get_head_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.getHeadconcGrammar()  ;}private static  tom.gom.adt.gom.types.GrammarList  tom_get_tail_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.getTailconcGrammar()  ;}private static boolean tom_is_empty_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.isEmptyconcGrammar()  ;}private static  tom.gom.adt.gom.types.GrammarList  tom_append_list_concGrammar( tom.gom.adt.gom.types.GrammarList  l1,  tom.gom.adt.gom.types.GrammarList  l2) {    if(tom_is_empty_concGrammar_GrammarList(l1)) {     return l2;    } else if(tom_is_empty_concGrammar_GrammarList(l2)) {     return l1;    } else if(tom_is_empty_concGrammar_GrammarList(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(l1))) {     return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(l1),tom_append_list_concGrammar(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.GrammarList  tom_get_slice_concGrammar( tom.gom.adt.gom.types.GrammarList  begin,  tom.gom.adt.gom.types.GrammarList  end) {    if(tom_terms_equal_GrammarList(begin,end)) {      return ( tom.gom.adt.gom.types.GrammarList )tom_empty_list_concGrammar();    } else {      return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(begin),( tom.gom.adt.gom.types.GrammarList )tom_get_slice_concGrammar(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(begin),end));    }   }  private static boolean tom_is_fun_sym_concField( tom.gom.adt.gom.types.FieldList  t) {  return  t instanceof tom.gom.adt.gom.types.fieldlist.ConsconcField || t instanceof tom.gom.adt.gom.types.fieldlist.EmptyconcField  ;}private static  tom.gom.adt.gom.types.FieldList  tom_empty_list_concField() { return  tom.gom.adt.gom.types.fieldlist.EmptyconcField.make() ; }private static  tom.gom.adt.gom.types.FieldList  tom_cons_list_concField( tom.gom.adt.gom.types.Field  e,  tom.gom.adt.gom.types.FieldList  l) { return  tom.gom.adt.gom.types.fieldlist.ConsconcField.make(e,l) ; }private static  tom.gom.adt.gom.types.Field  tom_get_head_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) {  return  l.getHeadconcField()  ;}private static  tom.gom.adt.gom.types.FieldList  tom_get_tail_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) {  return  l.getTailconcField()  ;}private static boolean tom_is_empty_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) {  return  l.isEmptyconcField()  ;}private static  tom.gom.adt.gom.types.FieldList  tom_append_list_concField( tom.gom.adt.gom.types.FieldList  l1,  tom.gom.adt.gom.types.FieldList  l2) {    if(tom_is_empty_concField_FieldList(l1)) {     return l2;    } else if(tom_is_empty_concField_FieldList(l2)) {     return l1;    } else if(tom_is_empty_concField_FieldList(( tom.gom.adt.gom.types.FieldList )tom_get_tail_concField_FieldList(l1))) {     return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(( tom.gom.adt.gom.types.Field )tom_get_head_concField_FieldList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(( tom.gom.adt.gom.types.Field )tom_get_head_concField_FieldList(l1),tom_append_list_concField(( tom.gom.adt.gom.types.FieldList )tom_get_tail_concField_FieldList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.FieldList  tom_get_slice_concField( tom.gom.adt.gom.types.FieldList  begin,  tom.gom.adt.gom.types.FieldList  end) {    if(tom_terms_equal_FieldList(begin,end)) {      return ( tom.gom.adt.gom.types.FieldList )tom_empty_list_concField();    } else {      return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(( tom.gom.adt.gom.types.Field )tom_get_head_concField_FieldList(begin),( tom.gom.adt.gom.types.FieldList )tom_get_slice_concField(( tom.gom.adt.gom.types.FieldList )tom_get_tail_concField_FieldList(begin),end));    }   }  private static boolean tom_is_fun_sym_concImportedModule( tom.gom.adt.gom.types.ImportList  t) {  return  t instanceof tom.gom.adt.gom.types.importlist.ConsconcImportedModule || t instanceof tom.gom.adt.gom.types.importlist.EmptyconcImportedModule  ;}private static  tom.gom.adt.gom.types.ImportList  tom_empty_list_concImportedModule() { return  tom.gom.adt.gom.types.importlist.EmptyconcImportedModule.make() ; }private static  tom.gom.adt.gom.types.ImportList  tom_cons_list_concImportedModule( tom.gom.adt.gom.types.ImportedModule  e,  tom.gom.adt.gom.types.ImportList  l) { return  tom.gom.adt.gom.types.importlist.ConsconcImportedModule.make(e,l) ; }private static  tom.gom.adt.gom.types.ImportedModule  tom_get_head_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) {  return  l.getHeadconcImportedModule()  ;}private static  tom.gom.adt.gom.types.ImportList  tom_get_tail_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) {  return  l.getTailconcImportedModule()  ;}private static boolean tom_is_empty_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) {  return  l.isEmptyconcImportedModule()  ;}private static  tom.gom.adt.gom.types.ImportList  tom_append_list_concImportedModule( tom.gom.adt.gom.types.ImportList  l1,  tom.gom.adt.gom.types.ImportList  l2) {    if(tom_is_empty_concImportedModule_ImportList(l1)) {     return l2;    } else if(tom_is_empty_concImportedModule_ImportList(l2)) {     return l1;    } else if(tom_is_empty_concImportedModule_ImportList(( tom.gom.adt.gom.types.ImportList )tom_get_tail_concImportedModule_ImportList(l1))) {     return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(( tom.gom.adt.gom.types.ImportedModule )tom_get_head_concImportedModule_ImportList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(( tom.gom.adt.gom.types.ImportedModule )tom_get_head_concImportedModule_ImportList(l1),tom_append_list_concImportedModule(( tom.gom.adt.gom.types.ImportList )tom_get_tail_concImportedModule_ImportList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.ImportList  tom_get_slice_concImportedModule( tom.gom.adt.gom.types.ImportList  begin,  tom.gom.adt.gom.types.ImportList  end) {    if(tom_terms_equal_ImportList(begin,end)) {      return ( tom.gom.adt.gom.types.ImportList )tom_empty_list_concImportedModule();    } else {      return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(( tom.gom.adt.gom.types.ImportedModule )tom_get_head_concImportedModule_ImportList(begin),( tom.gom.adt.gom.types.ImportList )tom_get_slice_concImportedModule(( tom.gom.adt.gom.types.ImportList )tom_get_tail_concImportedModule_ImportList(begin),end));    }   }  private static boolean tom_is_fun_sym_concArg( tom.gom.adt.gom.types.ArgList  t) {  return  t instanceof tom.gom.adt.gom.types.arglist.ConsconcArg || t instanceof tom.gom.adt.gom.types.arglist.EmptyconcArg  ;}private static  tom.gom.adt.gom.types.ArgList  tom_empty_list_concArg() { return  tom.gom.adt.gom.types.arglist.EmptyconcArg.make() ; }private static  tom.gom.adt.gom.types.ArgList  tom_cons_list_concArg( tom.gom.adt.gom.types.Arg  e,  tom.gom.adt.gom.types.ArgList  l) { return  tom.gom.adt.gom.types.arglist.ConsconcArg.make(e,l) ; }private static  tom.gom.adt.gom.types.Arg  tom_get_head_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) {  return  l.getHeadconcArg()  ;}private static  tom.gom.adt.gom.types.ArgList  tom_get_tail_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) {  return  l.getTailconcArg()  ;}private static boolean tom_is_empty_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) {  return  l.isEmptyconcArg()  ;}private static  tom.gom.adt.gom.types.ArgList  tom_append_list_concArg( tom.gom.adt.gom.types.ArgList  l1,  tom.gom.adt.gom.types.ArgList  l2) {    if(tom_is_empty_concArg_ArgList(l1)) {     return l2;    } else if(tom_is_empty_concArg_ArgList(l2)) {     return l1;    } else if(tom_is_empty_concArg_ArgList(( tom.gom.adt.gom.types.ArgList )tom_get_tail_concArg_ArgList(l1))) {     return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(( tom.gom.adt.gom.types.Arg )tom_get_head_concArg_ArgList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(( tom.gom.adt.gom.types.Arg )tom_get_head_concArg_ArgList(l1),tom_append_list_concArg(( tom.gom.adt.gom.types.ArgList )tom_get_tail_concArg_ArgList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.ArgList  tom_get_slice_concArg( tom.gom.adt.gom.types.ArgList  begin,  tom.gom.adt.gom.types.ArgList  end) {    if(tom_terms_equal_ArgList(begin,end)) {      return ( tom.gom.adt.gom.types.ArgList )tom_empty_list_concArg();    } else {      return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(( tom.gom.adt.gom.types.Arg )tom_get_head_concArg_ArgList(begin),( tom.gom.adt.gom.types.ArgList )tom_get_slice_concArg(( tom.gom.adt.gom.types.ArgList )tom_get_tail_concArg_ArgList(begin),end));    }   }  private static boolean tom_is_fun_sym_concGomType( tom.gom.adt.gom.types.GomTypeList  t) {  return  t instanceof tom.gom.adt.gom.types.gomtypelist.ConsconcGomType || t instanceof tom.gom.adt.gom.types.gomtypelist.EmptyconcGomType  ;}private static  tom.gom.adt.gom.types.GomTypeList  tom_empty_list_concGomType() { return  tom.gom.adt.gom.types.gomtypelist.EmptyconcGomType.make() ; }private static  tom.gom.adt.gom.types.GomTypeList  tom_cons_list_concGomType( tom.gom.adt.gom.types.GomType  e,  tom.gom.adt.gom.types.GomTypeList  l) { return  tom.gom.adt.gom.types.gomtypelist.ConsconcGomType.make(e,l) ; }private static  tom.gom.adt.gom.types.GomType  tom_get_head_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) {  return  l.getHeadconcGomType()  ;}private static  tom.gom.adt.gom.types.GomTypeList  tom_get_tail_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) {  return  l.getTailconcGomType()  ;}private static boolean tom_is_empty_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) {  return  l.isEmptyconcGomType()  ;}private static  tom.gom.adt.gom.types.GomTypeList  tom_append_list_concGomType( tom.gom.adt.gom.types.GomTypeList  l1,  tom.gom.adt.gom.types.GomTypeList  l2) {    if(tom_is_empty_concGomType_GomTypeList(l1)) {     return l2;    } else if(tom_is_empty_concGomType_GomTypeList(l2)) {     return l1;    } else if(tom_is_empty_concGomType_GomTypeList(( tom.gom.adt.gom.types.GomTypeList )tom_get_tail_concGomType_GomTypeList(l1))) {     return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(( tom.gom.adt.gom.types.GomType )tom_get_head_concGomType_GomTypeList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(( tom.gom.adt.gom.types.GomType )tom_get_head_concGomType_GomTypeList(l1),tom_append_list_concGomType(( tom.gom.adt.gom.types.GomTypeList )tom_get_tail_concGomType_GomTypeList(l1),l2));    }   }  private static  tom.gom.adt.gom.types.GomTypeList  tom_get_slice_concGomType( tom.gom.adt.gom.types.GomTypeList  begin,  tom.gom.adt.gom.types.GomTypeList  end) {    if(tom_terms_equal_GomTypeList(begin,end)) {      return ( tom.gom.adt.gom.types.GomTypeList )tom_empty_list_concGomType();    } else {      return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(( tom.gom.adt.gom.types.GomType )tom_get_head_concGomType_GomTypeList(begin),( tom.gom.adt.gom.types.GomTypeList )tom_get_slice_concGomType(( tom.gom.adt.gom.types.GomTypeList )tom_get_tail_concGomType_GomTypeList(begin),end));    }   }   


  public static GomModule getGomModule(ATermAST t){
    return getGomModule(t.genATermFromAST(TokenTable.getTokenMap()));
  }

  private static GomModule getGomModule(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match1_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_MODULE(tom_match1_1) ||  false  ) ) { { aterm.ATerm  tom_match1_1_info=tom_get_slot_MODULE_info(tom_match1_1); { aterm.ATermList  tom_match1_1_childs=tom_get_slot_MODULE_childs(tom_match1_1); if ( ( tom_is_fun_sym_concATerm(tom_match1_1_childs) ||  false  ) ) { { aterm.ATermList  tom_match1_1_childs_list1=tom_match1_1_childs; if (!(tom_is_empty_concATerm_ATermList(tom_match1_1_childs_list1))) { { aterm.ATerm  tom_name=tom_get_head_concATerm_ATermList(tom_match1_1_childs_list1);tom_match1_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match1_1_childs_list1); if (!(tom_is_empty_concATerm_ATermList(tom_match1_1_childs_list1))) { { aterm.ATerm  tom_imports=tom_get_head_concATerm_ATermList(tom_match1_1_childs_list1);tom_match1_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match1_1_childs_list1); { aterm.ATermList  tom_section=tom_match1_1_childs_list1; if ( true ) { if(tom_imports instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match2_1=(( aterm.ATerm )tom_imports); if ( ( tom_is_fun_sym_IMPORTS(tom_match2_1) ||  false  ) ) { { aterm.ATerm  tom_match2_1_info=tom_get_slot_IMPORTS_info(tom_match2_1); { aterm.ATermList  tom_match2_1_childs=tom_get_slot_IMPORTS_childs(tom_match2_1); if ( true ) {



            return tom_make_GomModule(getGomModuleName(tom_name),tom_cons_list_concSection(getImports(tom_imports),tom_cons_list_concSection(getSection(tom_section),tom_empty_list_concSection())));
           } } } } } }

       } } } } } } } } } } } if ( ( tom_is_fun_sym_MODULE(tom_match1_1) ||  false  ) ) { { aterm.ATerm  tom_match1_1_info=tom_get_slot_MODULE_info(tom_match1_1); { aterm.ATermList  tom_match1_1_childs=tom_get_slot_MODULE_childs(tom_match1_1); if ( ( tom_is_fun_sym_concATerm(tom_match1_1_childs) ||  false  ) ) { { aterm.ATermList  tom_match1_1_childs_list1=tom_match1_1_childs; if (!(tom_is_empty_concATerm_ATermList(tom_match1_1_childs_list1))) { { aterm.ATerm  tom_name=tom_get_head_concATerm_ATermList(tom_match1_1_childs_list1);tom_match1_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match1_1_childs_list1); { aterm.ATermList  tom_section=tom_match1_1_childs_list1; if ( true ) {

        return tom_make_GomModule(getGomModuleName(tom_name),tom_cons_list_concSection(getSection(tom_section),tom_empty_list_concSection()));
       } } } } } } } } } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static GomModuleName getGomModuleName(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match3_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_ID(tom_match3_1) ||  false  ) ) { { aterm.ATerm  tom_match3_1_info=tom_get_slot_ID_info(tom_match3_1); { aterm.ATermList  tom_match3_1_childs=tom_get_slot_ID_childs(tom_match3_1); if ( ( tom_is_fun_sym_NodeInfo(tom_match3_1_info) ||  false  ) ) { { String  tom_match3_1_info_text=tom_get_slot_NodeInfo_text(tom_match3_1_info); { String  tom_text=tom_match3_1_info_text; if ( true ) {

        return tom_make_GomModuleName(tom_text);
       } } } } } } } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static Section getImports(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match4_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_IMPORTS(tom_match4_1) ||  false  ) ) { { aterm.ATerm  tom_match4_1_info=tom_get_slot_IMPORTS_info(tom_match4_1); { aterm.ATermList  tom_match4_1_childs=tom_get_slot_IMPORTS_childs(tom_match4_1); { aterm.ATermList  tom_importList=tom_match4_1_childs; if ( true ) {

        return tom_make_Imports(getImportList(tom_importList));
       } } } } } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static ImportList getImportList(ATermList l) {
     if(l instanceof  aterm.ATermList ) { { aterm.ATermList  tom_match5_1=(( aterm.ATermList )l); if ( ( tom_is_fun_sym_concATerm(tom_match5_1) ||  false  ) ) { { aterm.ATermList  tom_match5_1_list1=tom_match5_1; if (!(tom_is_empty_concATerm_ATermList(tom_match5_1_list1))) { { aterm.ATerm  tom_importM=tom_get_head_concATerm_ATermList(tom_match5_1_list1);tom_match5_1_list1=tom_get_tail_concATerm_ATermList(tom_match5_1_list1); { aterm.ATermList  tom_tail=tom_match5_1_list1; if ( true ) {

        ImportList tmpL = getImportList(tom_tail);
        return tom_cons_list_concImportedModule(getImportedModule(tom_importM),tom_append_list_concImportedModule(tmpL,tom_empty_list_concImportedModule()));
       } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match5_1) ||  false  ) ) { { aterm.ATermList  tom_match5_1_list1=tom_match5_1; if (tom_is_empty_concATerm_ATermList(tom_match5_1_list1)) { if ( true ) {

        return tom_empty_list_concImportedModule();
       } } } } } }

    throw new GomRuntimeException("Unable to translate: " + l);
  }

  private static ImportedModule getImportedModule(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match6_1=(( aterm.ATerm )t); { aterm.ATerm  tom_module=tom_match6_1; if ( true ) {

        return tom_make_Import(getGomModuleName(tom_module));
       } } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }
  private static Section getSection(ATermList l) {
     if(l instanceof  aterm.ATermList ) { { aterm.ATermList  tom_match7_1=(( aterm.ATermList )l); if ( ( tom_is_fun_sym_concATerm(tom_match7_1) ||  false  ) ) { { aterm.ATermList  tom_match7_1_list1=tom_match7_1; if (!(tom_is_empty_concATerm_ATermList(tom_match7_1_list1))) { { aterm.ATerm  tom_match7_1_1=tom_get_head_concATerm_ATermList(tom_match7_1_list1);tom_match7_1_list1=tom_get_tail_concATerm_ATermList(tom_match7_1_list1); if ( ( tom_is_fun_sym_PUBLIC(tom_match7_1_1) ||  false  ) ) { { aterm.ATerm  tom_match7_1_1_info=tom_get_slot_PUBLIC_info(tom_match7_1_1); { aterm.ATermList  tom_match7_1_1_childs=tom_get_slot_PUBLIC_childs(tom_match7_1_1); { aterm.ATermList  tom_grammar=tom_match7_1_list1; if ( true ) {

        return tom_make_Public(getGrammarList(tom_grammar));
       } } } } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match7_1) ||  false  ) ) { { aterm.ATermList  tom_match7_1_list1=tom_match7_1; { aterm.ATermList  tom_grammar=tom_match7_1_list1; if ( true ) {

        return tom_make_Public(getGrammarList(tom_grammar));
       } } } } } }

    throw new GomRuntimeException("Unable to translate: " + l);
  }
  private static GrammarList getGrammarList(ATermList l) {
     if(l instanceof  aterm.ATermList ) { { aterm.ATermList  tom_match8_1=(( aterm.ATermList )l); if ( ( tom_is_fun_sym_concATerm(tom_match8_1) ||  false  ) ) { { aterm.ATermList  tom_match8_1_list1=tom_match8_1; if (!(tom_is_empty_concATerm_ATermList(tom_match8_1_list1))) { { aterm.ATerm  tom_g=tom_get_head_concATerm_ATermList(tom_match8_1_list1);tom_match8_1_list1=tom_get_tail_concATerm_ATermList(tom_match8_1_list1); { aterm.ATermList  tom_tail=tom_match8_1_list1; if ( true ) {

        GrammarList tmpL = getGrammarList(tom_tail);
         if(tom_g instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match9_1=(( aterm.ATerm )tom_g); if ( ( tom_is_fun_sym_SORTS(tom_match9_1) ||  false  ) ) { { aterm.ATerm  tom_match9_1_info=tom_get_slot_SORTS_info(tom_match9_1); { aterm.ATermList  tom_match9_1_childs=tom_get_slot_SORTS_childs(tom_match9_1); if ( true ) {

            return tom_cons_list_concGrammar(getGrammar(tom_g),tom_append_list_concGrammar(tmpL,tom_empty_list_concGrammar()));
           } } } } if ( ( tom_is_fun_sym_SYNTAX(tom_match9_1) ||  false  ) ) { { aterm.ATerm  tom_match9_1_info=tom_get_slot_SYNTAX_info(tom_match9_1); { aterm.ATermList  tom_match9_1_childs=tom_get_slot_SYNTAX_childs(tom_match9_1); if ( true ) {

            return tom_cons_list_concGrammar(getSorts(tom_g),tom_cons_list_concGrammar(getGrammar(tom_g),tom_append_list_concGrammar(tmpL,tom_empty_list_concGrammar())));
           } } } } } }

       } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match8_1) ||  false  ) ) { { aterm.ATermList  tom_match8_1_list1=tom_match8_1; if (tom_is_empty_concATerm_ATermList(tom_match8_1_list1)) { if ( true ) {

        return tom_empty_list_concGrammar();
       } } } } } }

    throw new GomRuntimeException("Unable to translate: " + l);
  }
  //when sorts are declared with using 'sorts ...'
  private static Grammar getSorts(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match10_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_SYNTAX(tom_match10_1) ||  false  ) ) { { aterm.ATerm  tom_match10_1_info=tom_get_slot_SYNTAX_info(tom_match10_1); { aterm.ATermList  tom_match10_1_childs=tom_get_slot_SYNTAX_childs(tom_match10_1); { aterm.ATermList  tom_productions=tom_match10_1_childs; if ( true ) {

        return tom_make_Sorts(getSortsList(tom_productions));
       } } } } } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }
  private static Grammar getGrammar(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match11_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_SORTS(tom_match11_1) ||  false  ) ) { { aterm.ATerm  tom_match11_1_info=tom_get_slot_SORTS_info(tom_match11_1); { aterm.ATermList  tom_match11_1_childs=tom_get_slot_SORTS_childs(tom_match11_1); { aterm.ATermList  tom_types=tom_match11_1_childs; if ( true ) {

        return tom_make_Sorts(getGomTypeList(tom_types));
       } } } } } if ( ( tom_is_fun_sym_SYNTAX(tom_match11_1) ||  false  ) ) { { aterm.ATerm  tom_match11_1_info=tom_get_slot_SYNTAX_info(tom_match11_1); { aterm.ATermList  tom_match11_1_childs=tom_get_slot_SYNTAX_childs(tom_match11_1); { aterm.ATermList  tom_productions=tom_match11_1_childs; if ( true ) {

        return tom_make_Grammar(getProductionList(tom_productions));
       } } } } } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static GomTypeList getSortsList(ATermList l) {
     if(l instanceof  aterm.ATermList ) { { aterm.ATermList  tom_match12_1=(( aterm.ATermList )l); if ( ( tom_is_fun_sym_concATerm(tom_match12_1) ||  false  ) ) { { aterm.ATermList  tom_match12_1_list1=tom_match12_1; if (!(tom_is_empty_concATerm_ATermList(tom_match12_1_list1))) { { aterm.ATerm  tom_g=tom_get_head_concATerm_ATermList(tom_match12_1_list1);tom_match12_1_list1=tom_get_tail_concATerm_ATermList(tom_match12_1_list1); { aterm.ATermList  tom_tail=tom_match12_1_list1; if ( true ) {

        GomTypeList tmpL = getSortsList(tom_tail);
         if(tom_g instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match13_1=(( aterm.ATerm )tom_g); if ( ( tom_is_fun_sym_EQUALS(tom_match13_1) ||  false  ) ) { { aterm.ATerm  tom_match13_1_info=tom_get_slot_EQUALS_info(tom_match13_1); { aterm.ATermList  tom_match13_1_childs=tom_get_slot_EQUALS_childs(tom_match13_1); if ( ( tom_is_fun_sym_concATerm(tom_match13_1_childs) ||  false  ) ) { { aterm.ATermList  tom_match13_1_childs_list1=tom_match13_1_childs; if (!(tom_is_empty_concATerm_ATermList(tom_match13_1_childs_list1))) { { aterm.ATerm  tom_type=tom_get_head_concATerm_ATermList(tom_match13_1_childs_list1);tom_match13_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match13_1_childs_list1); if ( true ) {

            return tom_cons_list_concGomType(getGomType(tom_type),tom_append_list_concGomType(tmpL,tom_empty_list_concGomType()));
           } } } } } } } } if ( ( tom_is_fun_sym_COLON(tom_match13_1) ||  false  ) ) { { aterm.ATerm  tom_match13_1_info=tom_get_slot_COLON_info(tom_match13_1); { aterm.ATermList  tom_match13_1_childs=tom_get_slot_COLON_childs(tom_match13_1); if ( true ) {

            return tom_append_list_concGomType(tmpL,tom_empty_list_concGomType());
           } } } } if ( ( tom_is_fun_sym_ARROW(tom_match13_1) ||  false  ) ) { { aterm.ATerm  tom_match13_1_info=tom_get_slot_ARROW_info(tom_match13_1); { aterm.ATermList  tom_match13_1_childs=tom_get_slot_ARROW_childs(tom_match13_1); if ( true ) {

            return tom_append_list_concGomType(tmpL,tom_empty_list_concGomType());
           } } } } } }

       } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match12_1) ||  false  ) ) { { aterm.ATermList  tom_match12_1_list1=tom_match12_1; if (tom_is_empty_concATerm_ATermList(tom_match12_1_list1)) { if ( true ) {

        return tom_empty_list_concGomType();
       } } } } } }

    throw new GomRuntimeException("Unable to translate: " + l);
  }

  private static Production getProduction(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match14_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_ARROW(tom_match14_1) ||  false  ) ) { { aterm.ATerm  tom_match14_1_info=tom_get_slot_ARROW_info(tom_match14_1); { aterm.ATermList  tom_match14_1_childs=tom_get_slot_ARROW_childs(tom_match14_1); if ( ( tom_is_fun_sym_concATerm(tom_match14_1_childs) ||  false  ) ) { { aterm.ATermList  tom_match14_1_childs_list1=tom_match14_1_childs; if (!(tom_is_empty_concATerm_ATermList(tom_match14_1_childs_list1))) { { aterm.ATerm  tom_name=tom_get_head_concATerm_ATermList(tom_match14_1_childs_list1);tom_match14_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match14_1_childs_list1); { aterm.ATermList  tom_match14_1_childs_begin2=tom_match14_1_childs_list1; { aterm.ATermList  tom_match14_1_childs_end2=tom_match14_1_childs_list1; { while (!(tom_is_empty_concATerm_ATermList(tom_match14_1_childs_end2))) {tom_match14_1_childs_list1=tom_match14_1_childs_end2; { { aterm.ATermList  tom_fieldlist=tom_get_slice_concATerm(tom_match14_1_childs_begin2,tom_match14_1_childs_end2); { aterm.ATerm  tom_type=tom_get_head_concATerm_ATermList(tom_match14_1_childs_list1);tom_match14_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match14_1_childs_list1); if (tom_is_empty_concATerm_ATermList(tom_match14_1_childs_list1)) { if ( true ) {

        return tom_make_Production(getId(tom_name),getFieldList(tom_fieldlist),getGomType(tom_type));
       } } } }tom_match14_1_childs_end2=tom_get_tail_concATerm_ATermList(tom_match14_1_childs_end2); } }tom_match14_1_childs_list1=tom_match14_1_childs_begin2; } } } } } } } } } } if ( ( tom_is_fun_sym_COLON(tom_match14_1) ||  false  ) ) { { aterm.ATerm  tom_match14_1_info=tom_get_slot_COLON_info(tom_match14_1); { aterm.ATermList  tom_match14_1_childs=tom_get_slot_COLON_childs(tom_match14_1); if ( ( tom_is_fun_sym_NodeInfo(tom_match14_1_info) ||  false  ) ) { { String  tom_match14_1_info_text=tom_get_slot_NodeInfo_text(tom_match14_1_info); { int  tom_match14_1_info_line=tom_get_slot_NodeInfo_line(tom_match14_1_info); { int  tom_match14_1_info_column=tom_get_slot_NodeInfo_column(tom_match14_1_info); { String  tom_code=tom_match14_1_info_text; if ( ( tom_is_fun_sym_concATerm(tom_match14_1_childs) ||  false  ) ) { { aterm.ATermList  tom_match14_1_childs_list1=tom_match14_1_childs; if (!(tom_is_empty_concATerm_ATermList(tom_match14_1_childs_list1))) { { aterm.ATerm  tom_id=tom_get_head_concATerm_ATermList(tom_match14_1_childs_list1);tom_match14_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match14_1_childs_list1); if (!(tom_is_empty_concATerm_ATermList(tom_match14_1_childs_list1))) { { aterm.ATerm  tom_hook=tom_get_head_concATerm_ATermList(tom_match14_1_childs_list1);tom_match14_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match14_1_childs_list1); if (tom_is_empty_concATerm_ATermList(tom_match14_1_childs_list1)) { if ( true ) {

        return tom_make_Hook(tom_make_KindOperator(),getId(tom_id),getHookKind(tom_hook),getHookarg(tom_hook),tom_code);
       } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_COLON(tom_match14_1) ||  false  ) ) { { aterm.ATerm  tom_match14_1_info=tom_get_slot_COLON_info(tom_match14_1); { aterm.ATermList  tom_match14_1_childs=tom_get_slot_COLON_childs(tom_match14_1); if ( ( tom_is_fun_sym_NodeInfo(tom_match14_1_info) ||  false  ) ) { { String  tom_match14_1_info_text=tom_get_slot_NodeInfo_text(tom_match14_1_info); { int  tom_match14_1_info_line=tom_get_slot_NodeInfo_line(tom_match14_1_info); { int  tom_match14_1_info_column=tom_get_slot_NodeInfo_column(tom_match14_1_info); { String  tom_code=tom_match14_1_info_text; if ( ( tom_is_fun_sym_concATerm(tom_match14_1_childs) ||  false  ) ) { { aterm.ATermList  tom_match14_1_childs_list1=tom_match14_1_childs; if (!(tom_is_empty_concATerm_ATermList(tom_match14_1_childs_list1))) { { aterm.ATerm  tom_idType=tom_get_head_concATerm_ATermList(tom_match14_1_childs_list1);tom_match14_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match14_1_childs_list1); if (!(tom_is_empty_concATerm_ATermList(tom_match14_1_childs_list1))) { { aterm.ATerm  tom_id=tom_get_head_concATerm_ATermList(tom_match14_1_childs_list1);tom_match14_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match14_1_childs_list1); if (!(tom_is_empty_concATerm_ATermList(tom_match14_1_childs_list1))) { { aterm.ATerm  tom_hook=tom_get_head_concATerm_ATermList(tom_match14_1_childs_list1);tom_match14_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match14_1_childs_list1); if (tom_is_empty_concATerm_ATermList(tom_match14_1_childs_list1)) { if ( true ) {

        return tom_make_Hook(getIdkind(tom_idType),getId(tom_id),getHookKind(tom_hook),tom_empty_list_concArg(),tom_code);
       } } } } } } } } } } } } } } } } } } } }


    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static ProductionList getProductionList(ATermList l) {
     if(l instanceof  aterm.ATermList ) { { aterm.ATermList  tom_match15_1=(( aterm.ATermList )l); if ( ( tom_is_fun_sym_concATerm(tom_match15_1) ||  false  ) ) { { aterm.ATermList  tom_match15_1_list1=tom_match15_1; if (!(tom_is_empty_concATerm_ATermList(tom_match15_1_list1))) { { aterm.ATerm  tom_g=tom_get_head_concATerm_ATermList(tom_match15_1_list1);tom_match15_1_list1=tom_get_tail_concATerm_ATermList(tom_match15_1_list1); { aterm.ATermList  tom_tail=tom_match15_1_list1; if ( true ) {

        ProductionList tmpL = getProductionList(tom_tail);
         if(tom_g instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match16_1=(( aterm.ATerm )tom_g); if ( ( tom_is_fun_sym_ARROW(tom_match16_1) ||  false  ) ) { { aterm.ATerm  tom_match16_1_info=tom_get_slot_ARROW_info(tom_match16_1); { aterm.ATermList  tom_match16_1_childs=tom_get_slot_ARROW_childs(tom_match16_1); if ( true ) {

            return tom_cons_list_concProduction(getProduction(tom_g),tom_append_list_concProduction(tmpL,tom_empty_list_concProduction()));
           } } } } if ( ( tom_is_fun_sym_EQUALS(tom_match16_1) ||  false  ) ) { { aterm.ATerm  tom_match16_1_info=tom_get_slot_EQUALS_info(tom_match16_1); { aterm.ATermList  tom_match16_1_childs=tom_get_slot_EQUALS_childs(tom_match16_1); if ( true ) {

            ProductionList alter = getAlternatives(tom_g);
            return tom_append_list_concProduction(alter,tom_append_list_concProduction(tmpL,tom_empty_list_concProduction()));
           } } } } if ( ( tom_is_fun_sym_COLON(tom_match16_1) ||  false  ) ) { { aterm.ATerm  tom_match16_1_info=tom_get_slot_COLON_info(tom_match16_1); { aterm.ATermList  tom_match16_1_childs=tom_get_slot_COLON_childs(tom_match16_1); if ( true ) {


            return tom_cons_list_concProduction(getProduction(tom_g),tom_append_list_concProduction(tmpL,tom_empty_list_concProduction()));
           } } } } } }

       } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match15_1) ||  false  ) ) { { aterm.ATermList  tom_match15_1_list1=tom_match15_1; if (tom_is_empty_concATerm_ATermList(tom_match15_1_list1)) { if ( true ) {

        return tom_empty_list_concProduction();
       } } } } } }

    throw new GomRuntimeException("Unable to translate: " + l);
  }

  private static ProductionList getAlternatives(ATerm type, ATermList altL) {
     if(altL instanceof  aterm.ATermList ) { { aterm.ATermList  tom_match17_1=(( aterm.ATermList )altL); if ( ( tom_is_fun_sym_concATerm(tom_match17_1) ||  false  ) ) { { aterm.ATermList  tom_match17_1_list1=tom_match17_1; if (!(tom_is_empty_concATerm_ATermList(tom_match17_1_list1))) { { aterm.ATerm  tom_match17_1_1=tom_get_head_concATerm_ATermList(tom_match17_1_list1);tom_match17_1_list1=tom_get_tail_concATerm_ATermList(tom_match17_1_list1); if ( ( tom_is_fun_sym_ALT(tom_match17_1_1) ||  false  ) ) { { aterm.ATerm  tom_match17_1_1_info=tom_get_slot_ALT_info(tom_match17_1_1); { aterm.ATermList  tom_match17_1_1_childs=tom_get_slot_ALT_childs(tom_match17_1_1); if (!(tom_is_empty_concATerm_ATermList(tom_match17_1_list1))) { { aterm.ATerm  tom_id=tom_get_head_concATerm_ATermList(tom_match17_1_list1);tom_match17_1_list1=tom_get_tail_concATerm_ATermList(tom_match17_1_list1); { aterm.ATermList  tom_match17_1_begin3=tom_match17_1_list1; { aterm.ATermList  tom_match17_1_end3=tom_match17_1_list1; { while (!(tom_is_empty_concATerm_ATermList(tom_match17_1_end3))) {tom_match17_1_list1=tom_match17_1_end3; { { aterm.ATermList  tom_fieldlist=tom_get_slice_concATerm(tom_match17_1_begin3,tom_match17_1_end3); { aterm.ATerm  tom_match17_1_4=tom_get_head_concATerm_ATermList(tom_match17_1_list1);tom_match17_1_list1=tom_get_tail_concATerm_ATermList(tom_match17_1_list1); if ( ( tom_is_fun_sym_ALT(tom_match17_1_4) ||  false  ) ) { { aterm.ATerm  tom_match17_1_4_info=tom_get_slot_ALT_info(tom_match17_1_4); { aterm.ATermList  tom_match17_1_4_childs=tom_get_slot_ALT_childs(tom_match17_1_4); { aterm.ATermList  tom_tail=tom_match17_1_list1; if ( true ) {

        ProductionList tmpL = getAlternatives(type,tom_tail);
        return tom_cons_list_concProduction(tom_make_Production(getId(tom_id),getFieldList(tom_fieldlist),getGomType(type)),tom_append_list_concProduction(tmpL,tom_empty_list_concProduction()));
       } } } } } } }tom_match17_1_end3=tom_get_tail_concATerm_ATermList(tom_match17_1_end3); } }tom_match17_1_list1=tom_match17_1_begin3; } } } } } } } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match17_1) ||  false  ) ) { { aterm.ATermList  tom_match17_1_list1=tom_match17_1; if (!(tom_is_empty_concATerm_ATermList(tom_match17_1_list1))) { { aterm.ATerm  tom_id=tom_get_head_concATerm_ATermList(tom_match17_1_list1);tom_match17_1_list1=tom_get_tail_concATerm_ATermList(tom_match17_1_list1); { aterm.ATermList  tom_match17_1_begin2=tom_match17_1_list1; { aterm.ATermList  tom_match17_1_end2=tom_match17_1_list1; { while (!(tom_is_empty_concATerm_ATermList(tom_match17_1_end2))) {tom_match17_1_list1=tom_match17_1_end2; { { aterm.ATermList  tom_fieldlist=tom_get_slice_concATerm(tom_match17_1_begin2,tom_match17_1_end2); { aterm.ATerm  tom_match17_1_3=tom_get_head_concATerm_ATermList(tom_match17_1_list1);tom_match17_1_list1=tom_get_tail_concATerm_ATermList(tom_match17_1_list1); if ( ( tom_is_fun_sym_ALT(tom_match17_1_3) ||  false  ) ) { { aterm.ATerm  tom_match17_1_3_info=tom_get_slot_ALT_info(tom_match17_1_3); { aterm.ATermList  tom_match17_1_3_childs=tom_get_slot_ALT_childs(tom_match17_1_3); { aterm.ATermList  tom_tail=tom_match17_1_list1; if ( true ) {

        ProductionList tmpL = getAlternatives(type,tom_tail);
        return tom_cons_list_concProduction(tom_make_Production(getId(tom_id),getFieldList(tom_fieldlist),getGomType(type)),tom_append_list_concProduction(tmpL,tom_empty_list_concProduction()));
       } } } } } } }tom_match17_1_end2=tom_get_tail_concATerm_ATermList(tom_match17_1_end2); } }tom_match17_1_list1=tom_match17_1_begin2; } } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match17_1) ||  false  ) ) { { aterm.ATermList  tom_match17_1_list1=tom_match17_1; if (!(tom_is_empty_concATerm_ATermList(tom_match17_1_list1))) { { aterm.ATerm  tom_id=tom_get_head_concATerm_ATermList(tom_match17_1_list1);tom_match17_1_list1=tom_get_tail_concATerm_ATermList(tom_match17_1_list1); { aterm.ATermList  tom_fieldlist=tom_match17_1_list1; if ( true ) {

        return tom_cons_list_concProduction(tom_make_Production(getId(tom_id),getFieldList(tom_fieldlist),getGomType(type)),tom_empty_list_concProduction());
       } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match17_1) ||  false  ) ) { { aterm.ATermList  tom_match17_1_list1=tom_match17_1; if (tom_is_empty_concATerm_ATermList(tom_match17_1_list1)) { if ( true ) {

        return tom_empty_list_concProduction();
       } } } } } }

    throw new GomRuntimeException("Unable to translate: " + altL);
  }

  private static ProductionList getAlternatives(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match18_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_EQUALS(tom_match18_1) ||  false  ) ) { { aterm.ATerm  tom_match18_1_info=tom_get_slot_EQUALS_info(tom_match18_1); { aterm.ATermList  tom_match18_1_childs=tom_get_slot_EQUALS_childs(tom_match18_1); if ( ( tom_is_fun_sym_concATerm(tom_match18_1_childs) ||  false  ) ) { { aterm.ATermList  tom_match18_1_childs_list1=tom_match18_1_childs; if (!(tom_is_empty_concATerm_ATermList(tom_match18_1_childs_list1))) { { aterm.ATerm  tom_type=tom_get_head_concATerm_ATermList(tom_match18_1_childs_list1);tom_match18_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match18_1_childs_list1); { aterm.ATermList  tom_alternatives=tom_match18_1_childs_list1; if ( true ) {

        return getAlternatives(tom_type,tom_alternatives);
       } } } } } } } } } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static GomTypeList getGomTypeList(ATermList l) {
     if(l instanceof  aterm.ATermList ) { { aterm.ATermList  tom_match19_1=(( aterm.ATermList )l); if ( ( tom_is_fun_sym_concATerm(tom_match19_1) ||  false  ) ) { { aterm.ATermList  tom_match19_1_list1=tom_match19_1; if (!(tom_is_empty_concATerm_ATermList(tom_match19_1_list1))) { { aterm.ATerm  tom_g=tom_get_head_concATerm_ATermList(tom_match19_1_list1);tom_match19_1_list1=tom_get_tail_concATerm_ATermList(tom_match19_1_list1); { aterm.ATermList  tom_tail=tom_match19_1_list1; if ( true ) {

        GomTypeList tmpL = getGomTypeList(tom_tail);
        return tom_cons_list_concGomType(getGomType(tom_g),tom_append_list_concGomType(tmpL,tom_empty_list_concGomType()));
       } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match19_1) ||  false  ) ) { { aterm.ATermList  tom_match19_1_list1=tom_match19_1; if (tom_is_empty_concATerm_ATermList(tom_match19_1_list1)) { if ( true ) {

        return tom_empty_list_concGomType();
       } } } } } }

    throw new GomRuntimeException("Unable to translate: " + l);
  }
  private static GomType getGomType(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match20_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_ID(tom_match20_1) ||  false  ) ) { { aterm.ATerm  tom_match20_1_info=tom_get_slot_ID_info(tom_match20_1); { aterm.ATermList  tom_match20_1_childs=tom_get_slot_ID_childs(tom_match20_1); if ( ( tom_is_fun_sym_NodeInfo(tom_match20_1_info) ||  false  ) ) { { String  tom_match20_1_info_text=tom_get_slot_NodeInfo_text(tom_match20_1_info); { String  tom_text=tom_match20_1_info_text; if ( true ) {

        return tom_make_GomType(tom_text);
       } } } } } } } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static String getId(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match21_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_ID(tom_match21_1) ||  false  ) ) { { aterm.ATerm  tom_match21_1_info=tom_get_slot_ID_info(tom_match21_1); { aterm.ATermList  tom_match21_1_childs=tom_get_slot_ID_childs(tom_match21_1); if ( ( tom_is_fun_sym_NodeInfo(tom_match21_1_info) ||  false  ) ) { { String  tom_match21_1_info_text=tom_get_slot_NodeInfo_text(tom_match21_1_info); { String  tom_text=tom_match21_1_info_text; if ( true ) {

        return tom_text;
       } } } } } } } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static IdKind getIdkind(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match22_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_SORT(tom_match22_1) ||  false  ) ) { if ( true ) {

        return tom_make_KindSort();
       } } if ( ( tom_is_fun_sym_MODULE(tom_match22_1) ||  false  ) ) { if ( true ) {

        return tom_make_KindModule();
       } } if ( ( tom_is_fun_sym_OPERATOR(tom_match22_1) ||  false  ) ) { if ( true ) {

        return tom_make_KindOperator();
       } } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static HookKind getHookKind(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match23_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_MAKE(tom_match23_1) ||  false  ) ) { if ( true ) {

        return tom_make_KindMakeHook();
       } } if ( ( tom_is_fun_sym_MAKEINSERT(tom_match23_1) ||  false  ) ) { if ( true ) {

        return tom_make_KindMakeinsertHook();
       } } if ( ( tom_is_fun_sym_BLOCK(tom_match23_1) ||  false  ) ) { if ( true ) {

        return tom_make_KindBlockHook();
       } } if ( ( tom_is_fun_sym_IMPORT(tom_match23_1) ||  false  ) ) { if ( true ) {

        return tom_make_KindImportHook();
       } } if ( ( tom_is_fun_sym_INTERFACE(tom_match23_1) ||  false  ) ) { if ( true ) {

        return tom_make_KindInterfaceHook();
       } } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static ArgList getHookarg(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match24_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_MAKE(tom_match24_1) ||  false  ) ) { { aterm.ATerm  tom_match24_1_info=tom_get_slot_MAKE_info(tom_match24_1); { aterm.ATermList  tom_match24_1_childs=tom_get_slot_MAKE_childs(tom_match24_1); { aterm.ATermList  tom_args=tom_match24_1_childs; if ( true ) {

        return getArgList(tom_args);
       } } } } } if ( ( tom_is_fun_sym_MAKEINSERT(tom_match24_1) ||  false  ) ) { { aterm.ATerm  tom_match24_1_info=tom_get_slot_MAKEINSERT_info(tom_match24_1); { aterm.ATermList  tom_match24_1_childs=tom_get_slot_MAKEINSERT_childs(tom_match24_1); { aterm.ATermList  tom_args=tom_match24_1_childs; if ( true ) {

        return getArgList(tom_args);
       } } } } } if ( true ) {

        return tom_empty_list_concArg();
       } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static ArgList getArgList(ATermList l){
     if(l instanceof  aterm.ATermList ) { { aterm.ATermList  tom_match25_1=(( aterm.ATermList )l); if ( ( tom_is_fun_sym_concATerm(tom_match25_1) ||  false  ) ) { { aterm.ATermList  tom_match25_1_list1=tom_match25_1; if (!(tom_is_empty_concATerm_ATermList(tom_match25_1_list1))) { { aterm.ATerm  tom_a=tom_get_head_concATerm_ATermList(tom_match25_1_list1);tom_match25_1_list1=tom_get_tail_concATerm_ATermList(tom_match25_1_list1); if (!(tom_is_empty_concATerm_ATermList(tom_match25_1_list1))) { { aterm.ATerm  tom_match25_1_2=tom_get_head_concATerm_ATermList(tom_match25_1_list1);tom_match25_1_list1=tom_get_tail_concATerm_ATermList(tom_match25_1_list1); if ( ( tom_is_fun_sym_COMMA(tom_match25_1_2) ||  false  ) ) { { aterm.ATerm  tom_match25_1_2_info=tom_get_slot_COMMA_info(tom_match25_1_2); { aterm.ATermList  tom_match25_1_2_childs=tom_get_slot_COMMA_childs(tom_match25_1_2); { aterm.ATermList  tom_tail=tom_match25_1_list1; if ( true ) {

        ArgList tmpL = getArgList(tom_tail);
        return tom_cons_list_concArg(getArg(tom_a),tom_append_list_concArg(tmpL,tom_empty_list_concArg()));
       } } } } } } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match25_1) ||  false  ) ) { { aterm.ATermList  tom_match25_1_list1=tom_match25_1; if (!(tom_is_empty_concATerm_ATermList(tom_match25_1_list1))) { { aterm.ATerm  tom_a=tom_get_head_concATerm_ATermList(tom_match25_1_list1);tom_match25_1_list1=tom_get_tail_concATerm_ATermList(tom_match25_1_list1); if (tom_is_empty_concATerm_ATermList(tom_match25_1_list1)) { if ( true ) {

        return tom_cons_list_concArg(getArg(tom_a),tom_empty_list_concArg());
       } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match25_1) ||  false  ) ) { { aterm.ATermList  tom_match25_1_list1=tom_match25_1; if (tom_is_empty_concATerm_ATermList(tom_match25_1_list1)) { if ( true ) {

        return tom_empty_list_concArg();
       } } } } } }

    throw new GomRuntimeException("Unable to translate: " + l);
  }
  private static FieldList getFieldList(ATermList l){
     if(l instanceof  aterm.ATermList ) { { aterm.ATermList  tom_match26_1=(( aterm.ATermList )l); if ( ( tom_is_fun_sym_concATerm(tom_match26_1) ||  false  ) ) { { aterm.ATermList  tom_match26_1_list1=tom_match26_1; if (!(tom_is_empty_concATerm_ATermList(tom_match26_1_list1))) { { aterm.ATerm  tom_f=tom_get_head_concATerm_ATermList(tom_match26_1_list1);tom_match26_1_list1=tom_get_tail_concATerm_ATermList(tom_match26_1_list1); if (!(tom_is_empty_concATerm_ATermList(tom_match26_1_list1))) { { aterm.ATerm  tom_match26_1_2=tom_get_head_concATerm_ATermList(tom_match26_1_list1);tom_match26_1_list1=tom_get_tail_concATerm_ATermList(tom_match26_1_list1); if ( ( tom_is_fun_sym_COMMA(tom_match26_1_2) ||  false  ) ) { { aterm.ATerm  tom_match26_1_2_info=tom_get_slot_COMMA_info(tom_match26_1_2); { aterm.ATermList  tom_match26_1_2_childs=tom_get_slot_COMMA_childs(tom_match26_1_2); { aterm.ATermList  tom_tail=tom_match26_1_list1; if ( true ) {

        FieldList tmpL = getFieldList(tom_tail);
        return tom_cons_list_concField(getField(tom_f),tom_append_list_concField(tmpL,tom_empty_list_concField()));
       } } } } } } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match26_1) ||  false  ) ) { { aterm.ATermList  tom_match26_1_list1=tom_match26_1; if (!(tom_is_empty_concATerm_ATermList(tom_match26_1_list1))) { { aterm.ATerm  tom_f=tom_get_head_concATerm_ATermList(tom_match26_1_list1);tom_match26_1_list1=tom_get_tail_concATerm_ATermList(tom_match26_1_list1); if (tom_is_empty_concATerm_ATermList(tom_match26_1_list1)) { if ( true ) {

        return tom_cons_list_concField(getField(tom_f),tom_empty_list_concField());
       } } } } } } if ( ( tom_is_fun_sym_concATerm(tom_match26_1) ||  false  ) ) { { aterm.ATermList  tom_match26_1_list1=tom_match26_1; if (tom_is_empty_concATerm_ATermList(tom_match26_1_list1)) { if ( true ) {

        return tom_empty_list_concField();
       } } } } } }

    throw new GomRuntimeException("Unable to translate: " + l);
  }

  private static Arg getArg(ATerm s) {
    return tom_make_Arg(getId(s));
  }

  private static Field getField(ATerm t) {
     if(t instanceof  aterm.ATerm ) { { aterm.ATerm  tom_match27_1=(( aterm.ATerm )t); if ( ( tom_is_fun_sym_COLON(tom_match27_1) ||  false  ) ) { { aterm.ATerm  tom_match27_1_info=tom_get_slot_COLON_info(tom_match27_1); { aterm.ATermList  tom_match27_1_childs=tom_get_slot_COLON_childs(tom_match27_1); if ( ( tom_is_fun_sym_concATerm(tom_match27_1_childs) ||  false  ) ) { { aterm.ATermList  tom_match27_1_childs_list1=tom_match27_1_childs; if (!(tom_is_empty_concATerm_ATermList(tom_match27_1_childs_list1))) { { aterm.ATerm  tom_id=tom_get_head_concATerm_ATermList(tom_match27_1_childs_list1);tom_match27_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match27_1_childs_list1); if (!(tom_is_empty_concATerm_ATermList(tom_match27_1_childs_list1))) { { aterm.ATerm  tom_type=tom_get_head_concATerm_ATermList(tom_match27_1_childs_list1);tom_match27_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match27_1_childs_list1); if (tom_is_empty_concATerm_ATermList(tom_match27_1_childs_list1)) { if ( true ) {

        return tom_make_NamedField(getId(tom_id),getGomType(tom_type));
       } } } } } } } } } } } if ( ( tom_is_fun_sym_STAR(tom_match27_1) ||  false  ) ) { { aterm.ATerm  tom_match27_1_info=tom_get_slot_STAR_info(tom_match27_1); { aterm.ATermList  tom_match27_1_childs=tom_get_slot_STAR_childs(tom_match27_1); if ( ( tom_is_fun_sym_concATerm(tom_match27_1_childs) ||  false  ) ) { { aterm.ATermList  tom_match27_1_childs_list1=tom_match27_1_childs; if (!(tom_is_empty_concATerm_ATermList(tom_match27_1_childs_list1))) { { aterm.ATerm  tom_type=tom_get_head_concATerm_ATermList(tom_match27_1_childs_list1);tom_match27_1_childs_list1=tom_get_tail_concATerm_ATermList(tom_match27_1_childs_list1); if (tom_is_empty_concATerm_ATermList(tom_match27_1_childs_list1)) { if ( true ) {

        return tom_make_StarredField(getGomType(tom_type));
       } } } } } } } } } if ( true ) {

        Logger.getLogger("AST2Gom.class").log(Level.SEVERE,
            GomMessage.noSlotDeclaration.getMessage(),
            new Object[]{});
        throw new GomRuntimeException("parsing problem");
       } } }

    throw new GomRuntimeException("Unable to translate: " + t);
  }
}

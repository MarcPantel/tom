/* Generated by TOM (version 2.5): Do not edit this file *//*
 * Gom
 * 
 * Copyright (c) 2006-2007, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Yoann Toussaint    e-mail: Yoann.Toussaint@loria.fr
 * 
 **/

package tom.gom.parser;

import java.util.logging.Logger;
import java.util.logging.Level;

import tom.gom.GomStreamManager;
import tom.antlrmapper.ATermAST;
import aterm.*;
import aterm.pure.*;

import tom.gom.GomMessage;
import tom.gom.tools.error.GomRuntimeException;
import tom.gom.adt.gom.*;
import tom.gom.adt.gom.types.*;

public class AST2Gom {

  /* Generated by TOM (version 2.5): Do not edit this file *//* Generated by TOM (version 2.5): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) { return  (t1==t2) ;}private static boolean tom_is_sort_int(int t) { return  true ;} /* Generated by TOM (version 2.5): Do not edit this file *//* Generated by TOM (version 2.5): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  /* Generated by TOM (version 2.5): Do not edit this file */private static boolean tom_equal_term_ATerm(Object t1, Object t2) { return  t1 == t2;}private static boolean tom_is_sort_ATerm(Object t) { return  t instanceof aterm.ATerm ;} /* Generated by TOM (version 2.5): Do not edit this file */private static boolean tom_equal_term_ATermList(Object l1, Object l2) { return  l1==l2 ;}private static boolean tom_is_sort_ATermList(Object t) { return  t instanceof aterm.ATermList ;} private static boolean tom_is_fun_sym_concATerm( aterm.ATermList  t) { return  t instanceof ATermList ;}private static  aterm.ATermList  tom_empty_list_concATerm() { return  aterm.pure.SingletonFactory.getInstance().makeList() ; }private static  aterm.ATermList  tom_cons_list_concATerm( aterm.ATerm  e,  aterm.ATermList  l) { return  l.insert(e) ; }private static  aterm.ATerm  tom_get_head_concATerm_ATermList( aterm.ATermList  t) { return  t.getFirst() ;}private static  aterm.ATermList  tom_get_tail_concATerm_ATermList( aterm.ATermList  t) { return  t.getNext() ;}private static boolean tom_is_empty_concATerm_ATermList( aterm.ATermList  t) { return  t.isEmpty() ;}   private static   aterm.ATermList  tom_append_list_concATerm( aterm.ATermList l1,  aterm.ATermList  l2) {     if(tom_is_empty_concATerm_ATermList(l1)) {       return l2;     } else if(tom_is_empty_concATerm_ATermList(l2)) {       return l1;     } else if(tom_is_empty_concATerm_ATermList(tom_get_tail_concATerm_ATermList(l1))) {       return ( aterm.ATermList )tom_cons_list_concATerm(tom_get_head_concATerm_ATermList(l1),l2);     } else {       return ( aterm.ATermList )tom_cons_list_concATerm(tom_get_head_concATerm_ATermList(l1),tom_append_list_concATerm(tom_get_tail_concATerm_ATermList(l1),l2));     }   }   private static   aterm.ATermList  tom_get_slice_concATerm( aterm.ATermList  begin,  aterm.ATermList  end, aterm.ATermList  tail) {     if(tom_equal_term_ATermList(begin,end)) {       return tail;     } else {       return ( aterm.ATermList )tom_cons_list_concATerm(tom_get_head_concATerm_ATermList(begin),( aterm.ATermList )tom_get_slice_concATerm(tom_get_tail_concATerm_ATermList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_NodeInfo( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("NodeInfo",3,false) ;}private static  String  tom_get_slot_NodeInfo_text( aterm.ATerm  t) { return  ((ATermAppl)((ATermAppl)t).getArgument(0)).getAFun().getName() ;}private static  int  tom_get_slot_NodeInfo_line( aterm.ATerm  t) { return  ((ATermInt)((ATermAppl)t).getArgument(1)).getInt() ;}private static  int  tom_get_slot_NodeInfo_column( aterm.ATerm  t) { return  ((ATermInt)((ATermAppl)t).getArgument(2)).getInt() ;}private static boolean tom_is_fun_sym_PUBLIC( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("PUBLIC",2,false) ;}private static  aterm.ATerm  tom_get_slot_PUBLIC_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_PUBLIC_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_IMPORTS( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("IMPORTS",2,false) ;}private static  aterm.ATerm  tom_get_slot_IMPORTS_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_IMPORTS_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_STAR( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("STAR",2,false) ;}private static  aterm.ATerm  tom_get_slot_STAR_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_STAR_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_SORTS( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("SORTS",2,false) ;}private static  aterm.ATerm  tom_get_slot_SORTS_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_SORTS_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_OPERATOR( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("OPERATOR",2,false) ;}private static  aterm.ATerm  tom_get_slot_OPERATOR_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_OPERATOR_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_DOT( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("DOT",2,false) ;}private static  aterm.ATerm  tom_get_slot_DOT_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_DOT_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_ALT( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("ALT",2,false) ;}private static  aterm.ATerm  tom_get_slot_ALT_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_ALT_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_MODULE( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("MODULE",2,false) ;}private static  aterm.ATerm  tom_get_slot_MODULE_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_MODULE_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_COLON( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("COLON",2,false) ;}private static  aterm.ATerm  tom_get_slot_COLON_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_COLON_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_SYNTAX( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("SYNTAX",2,false) ;}private static  aterm.ATerm  tom_get_slot_SYNTAX_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_SYNTAX_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_ARROW( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("ARROW",2,false) ;}private static  aterm.ATerm  tom_get_slot_ARROW_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_ARROW_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_COMMA( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("COMMA",2,false) ;}private static  aterm.ATerm  tom_get_slot_COMMA_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_COMMA_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_EQUALS( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("EQUALS",2,false) ;}private static  aterm.ATerm  tom_get_slot_EQUALS_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_EQUALS_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_SORT( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("SORT",2,false) ;}private static  aterm.ATerm  tom_get_slot_SORT_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_SORT_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}private static boolean tom_is_fun_sym_ID( aterm.ATerm  t) { return  (t != null) && ((ATermAppl)t).getAFun() == SingletonFactory.getInstance().makeAFun("ID",2,false) ;}private static  aterm.ATerm  tom_get_slot_ID_info( aterm.ATerm  t) { return  ((ATermAppl)t).getArgument(0) ;}private static  aterm.ATermList  tom_get_slot_ID_childs( aterm.ATerm  t) { return  (ATermList)((ATermAppl)t).getArgument(1) ;}/* Generated by TOM (version 2.5): Do not edit this file */private static boolean tom_equal_term_ArgList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ArgList(Object t) { return  t instanceof tom.gom.adt.gom.types.ArgList ;}private static boolean tom_equal_term_IdKind(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_IdKind(Object t) { return  t instanceof tom.gom.adt.gom.types.IdKind ;}private static boolean tom_equal_term_GrammarList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GrammarList(Object t) { return  t instanceof tom.gom.adt.gom.types.GrammarList ;}private static boolean tom_equal_term_SectionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SectionList(Object t) { return  t instanceof tom.gom.adt.gom.types.SectionList ;}private static boolean tom_equal_term_GomModule(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomModule(Object t) { return  t instanceof tom.gom.adt.gom.types.GomModule ;}private static boolean tom_equal_term_Section(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Section(Object t) { return  t instanceof tom.gom.adt.gom.types.Section ;}private static boolean tom_equal_term_GomTypeList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomTypeList(Object t) { return  t instanceof tom.gom.adt.gom.types.GomTypeList ;}private static boolean tom_equal_term_ProductionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ProductionList(Object t) { return  t instanceof tom.gom.adt.gom.types.ProductionList ;}private static boolean tom_equal_term_ImportList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ImportList(Object t) { return  t instanceof tom.gom.adt.gom.types.ImportList ;}private static boolean tom_equal_term_FieldList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_FieldList(Object t) { return  t instanceof tom.gom.adt.gom.types.FieldList ;}private static boolean tom_equal_term_Grammar(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Grammar(Object t) { return  t instanceof tom.gom.adt.gom.types.Grammar ;}private static boolean tom_equal_term_Arg(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Arg(Object t) { return  t instanceof tom.gom.adt.gom.types.Arg ;}private static boolean tom_equal_term_GomModuleName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomModuleName(Object t) { return  t instanceof tom.gom.adt.gom.types.GomModuleName ;}private static boolean tom_equal_term_Field(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Field(Object t) { return  t instanceof tom.gom.adt.gom.types.Field ;}private static boolean tom_equal_term_Production(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Production(Object t) { return  t instanceof tom.gom.adt.gom.types.Production ;}private static boolean tom_equal_term_GomType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_GomType(Object t) { return  t instanceof tom.gom.adt.gom.types.GomType ;}private static boolean tom_equal_term_ImportedModule(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ImportedModule(Object t) { return  t instanceof tom.gom.adt.gom.types.ImportedModule ;}private static boolean tom_equal_term_Option(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Option(Object t) { return  t instanceof tom.gom.adt.gom.types.Option ;}private static boolean tom_equal_term_HookKind(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_HookKind(Object t) { return  t instanceof tom.gom.adt.gom.types.HookKind ;}private static  tom.gom.adt.gom.types.IdKind  tom_make_KindModule() { return  tom.gom.adt.gom.types.idkind.KindModule.make() ; }private static  tom.gom.adt.gom.types.IdKind  tom_make_KindSort() { return  tom.gom.adt.gom.types.idkind.KindSort.make() ; }private static  tom.gom.adt.gom.types.IdKind  tom_make_KindOperator() { return  tom.gom.adt.gom.types.idkind.KindOperator.make() ; }private static  tom.gom.adt.gom.types.GomModule  tom_make_GomModule( tom.gom.adt.gom.types.GomModuleName  t0,  tom.gom.adt.gom.types.SectionList  t1) { return  tom.gom.adt.gom.types.gommodule.GomModule.make(t0, t1) ; }private static  tom.gom.adt.gom.types.Section  tom_make_Imports( tom.gom.adt.gom.types.ImportList  t0) { return  tom.gom.adt.gom.types.section.Imports.make(t0) ; }private static  tom.gom.adt.gom.types.Section  tom_make_Public( tom.gom.adt.gom.types.GrammarList  t0) { return  tom.gom.adt.gom.types.section.Public.make(t0) ; }private static  tom.gom.adt.gom.types.Grammar  tom_make_Grammar( tom.gom.adt.gom.types.ProductionList  t0) { return  tom.gom.adt.gom.types.grammar.Grammar.make(t0) ; }private static  tom.gom.adt.gom.types.Grammar  tom_make_Sorts( tom.gom.adt.gom.types.GomTypeList  t0) { return  tom.gom.adt.gom.types.grammar.Sorts.make(t0) ; }private static  tom.gom.adt.gom.types.Arg  tom_make_Arg( String  t0) { return  tom.gom.adt.gom.types.arg.Arg.make(t0) ; }private static  tom.gom.adt.gom.types.GomModuleName  tom_make_GomModuleName( String  t0) { return  tom.gom.adt.gom.types.gommodulename.GomModuleName.make(t0) ; }private static  tom.gom.adt.gom.types.Field  tom_make_StarredField( tom.gom.adt.gom.types.GomType  t0) { return  tom.gom.adt.gom.types.field.StarredField.make(t0) ; }private static  tom.gom.adt.gom.types.Field  tom_make_NamedField( String  t0,  tom.gom.adt.gom.types.GomType  t1) { return  tom.gom.adt.gom.types.field.NamedField.make(t0, t1) ; }private static  tom.gom.adt.gom.types.Production  tom_make_Production( String  t0,  tom.gom.adt.gom.types.FieldList  t1,  tom.gom.adt.gom.types.GomType  t2,  tom.gom.adt.gom.types.Option  t3) { return  tom.gom.adt.gom.types.production.Production.make(t0, t1, t2, t3) ; }private static  tom.gom.adt.gom.types.Production  tom_make_Hook( tom.gom.adt.gom.types.IdKind  t0,  String  t1,  tom.gom.adt.gom.types.HookKind  t2,  tom.gom.adt.gom.types.ArgList  t3,  String  t4,  tom.gom.adt.gom.types.Option  t5) { return  tom.gom.adt.gom.types.production.Hook.make(t0, t1, t2, t3, t4, t5) ; }private static  tom.gom.adt.gom.types.GomType  tom_make_GomType( String  t0) { return  tom.gom.adt.gom.types.gomtype.GomType.make(t0) ; }private static  tom.gom.adt.gom.types.ImportedModule  tom_make_Import( tom.gom.adt.gom.types.GomModuleName  t0) { return  tom.gom.adt.gom.types.importedmodule.Import.make(t0) ; }private static  tom.gom.adt.gom.types.Option  tom_make_Origin( int  t0) { return  tom.gom.adt.gom.types.option.Origin.make(t0) ; }private static  tom.gom.adt.gom.types.HookKind  tom_make_HookKind( String  t0) { return  tom.gom.adt.gom.types.hookkind.HookKind.make(t0) ; }private static boolean tom_is_fun_sym_concArg( tom.gom.adt.gom.types.ArgList  t) { return  t instanceof tom.gom.adt.gom.types.arglist.ConsconcArg || t instanceof tom.gom.adt.gom.types.arglist.EmptyconcArg ;}private static  tom.gom.adt.gom.types.ArgList  tom_empty_list_concArg() { return  tom.gom.adt.gom.types.arglist.EmptyconcArg.make() ; }private static  tom.gom.adt.gom.types.ArgList  tom_cons_list_concArg( tom.gom.adt.gom.types.Arg  e,  tom.gom.adt.gom.types.ArgList  l) { return  tom.gom.adt.gom.types.arglist.ConsconcArg.make(e,l) ; }private static  tom.gom.adt.gom.types.Arg  tom_get_head_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) { return  l.getHeadconcArg() ;}private static  tom.gom.adt.gom.types.ArgList  tom_get_tail_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) { return  l.getTailconcArg() ;}private static boolean tom_is_empty_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) { return  l.isEmptyconcArg() ;}   private static   tom.gom.adt.gom.types.ArgList  tom_append_list_concArg( tom.gom.adt.gom.types.ArgList l1,  tom.gom.adt.gom.types.ArgList  l2) {     if(tom_is_empty_concArg_ArgList(l1)) {       return l2;     } else if(tom_is_empty_concArg_ArgList(l2)) {       return l1;     } else if(tom_is_empty_concArg_ArgList(tom_get_tail_concArg_ArgList(l1))) {       return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(tom_get_head_concArg_ArgList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(tom_get_head_concArg_ArgList(l1),tom_append_list_concArg(tom_get_tail_concArg_ArgList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.ArgList  tom_get_slice_concArg( tom.gom.adt.gom.types.ArgList  begin,  tom.gom.adt.gom.types.ArgList  end, tom.gom.adt.gom.types.ArgList  tail) {     if(tom_equal_term_ArgList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(tom_get_head_concArg_ArgList(begin),( tom.gom.adt.gom.types.ArgList )tom_get_slice_concArg(tom_get_tail_concArg_ArgList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concGrammar( tom.gom.adt.gom.types.GrammarList  t) { return  t instanceof tom.gom.adt.gom.types.grammarlist.ConsconcGrammar || t instanceof tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar ;}private static  tom.gom.adt.gom.types.GrammarList  tom_empty_list_concGrammar() { return  tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar.make() ; }private static  tom.gom.adt.gom.types.GrammarList  tom_cons_list_concGrammar( tom.gom.adt.gom.types.Grammar  e,  tom.gom.adt.gom.types.GrammarList  l) { return  tom.gom.adt.gom.types.grammarlist.ConsconcGrammar.make(e,l) ; }private static  tom.gom.adt.gom.types.Grammar  tom_get_head_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) { return  l.getHeadconcGrammar() ;}private static  tom.gom.adt.gom.types.GrammarList  tom_get_tail_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) { return  l.getTailconcGrammar() ;}private static boolean tom_is_empty_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) { return  l.isEmptyconcGrammar() ;}   private static   tom.gom.adt.gom.types.GrammarList  tom_append_list_concGrammar( tom.gom.adt.gom.types.GrammarList l1,  tom.gom.adt.gom.types.GrammarList  l2) {     if(tom_is_empty_concGrammar_GrammarList(l1)) {       return l2;     } else if(tom_is_empty_concGrammar_GrammarList(l2)) {       return l1;     } else if(tom_is_empty_concGrammar_GrammarList(tom_get_tail_concGrammar_GrammarList(l1))) {       return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(tom_get_head_concGrammar_GrammarList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(tom_get_head_concGrammar_GrammarList(l1),tom_append_list_concGrammar(tom_get_tail_concGrammar_GrammarList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.GrammarList  tom_get_slice_concGrammar( tom.gom.adt.gom.types.GrammarList  begin,  tom.gom.adt.gom.types.GrammarList  end, tom.gom.adt.gom.types.GrammarList  tail) {     if(tom_equal_term_GrammarList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(tom_get_head_concGrammar_GrammarList(begin),( tom.gom.adt.gom.types.GrammarList )tom_get_slice_concGrammar(tom_get_tail_concGrammar_GrammarList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concSection( tom.gom.adt.gom.types.SectionList  t) { return  t instanceof tom.gom.adt.gom.types.sectionlist.ConsconcSection || t instanceof tom.gom.adt.gom.types.sectionlist.EmptyconcSection ;}private static  tom.gom.adt.gom.types.SectionList  tom_empty_list_concSection() { return  tom.gom.adt.gom.types.sectionlist.EmptyconcSection.make() ; }private static  tom.gom.adt.gom.types.SectionList  tom_cons_list_concSection( tom.gom.adt.gom.types.Section  e,  tom.gom.adt.gom.types.SectionList  l) { return  tom.gom.adt.gom.types.sectionlist.ConsconcSection.make(e,l) ; }private static  tom.gom.adt.gom.types.Section  tom_get_head_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) { return  l.getHeadconcSection() ;}private static  tom.gom.adt.gom.types.SectionList  tom_get_tail_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) { return  l.getTailconcSection() ;}private static boolean tom_is_empty_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) { return  l.isEmptyconcSection() ;}   private static   tom.gom.adt.gom.types.SectionList  tom_append_list_concSection( tom.gom.adt.gom.types.SectionList l1,  tom.gom.adt.gom.types.SectionList  l2) {     if(tom_is_empty_concSection_SectionList(l1)) {       return l2;     } else if(tom_is_empty_concSection_SectionList(l2)) {       return l1;     } else if(tom_is_empty_concSection_SectionList(tom_get_tail_concSection_SectionList(l1))) {       return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(tom_get_head_concSection_SectionList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(tom_get_head_concSection_SectionList(l1),tom_append_list_concSection(tom_get_tail_concSection_SectionList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.SectionList  tom_get_slice_concSection( tom.gom.adt.gom.types.SectionList  begin,  tom.gom.adt.gom.types.SectionList  end, tom.gom.adt.gom.types.SectionList  tail) {     if(tom_equal_term_SectionList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(tom_get_head_concSection_SectionList(begin),( tom.gom.adt.gom.types.SectionList )tom_get_slice_concSection(tom_get_tail_concSection_SectionList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concGomType( tom.gom.adt.gom.types.GomTypeList  t) { return  t instanceof tom.gom.adt.gom.types.gomtypelist.ConsconcGomType || t instanceof tom.gom.adt.gom.types.gomtypelist.EmptyconcGomType ;}private static  tom.gom.adt.gom.types.GomTypeList  tom_empty_list_concGomType() { return  tom.gom.adt.gom.types.gomtypelist.EmptyconcGomType.make() ; }private static  tom.gom.adt.gom.types.GomTypeList  tom_cons_list_concGomType( tom.gom.adt.gom.types.GomType  e,  tom.gom.adt.gom.types.GomTypeList  l) { return  tom.gom.adt.gom.types.gomtypelist.ConsconcGomType.make(e,l) ; }private static  tom.gom.adt.gom.types.GomType  tom_get_head_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) { return  l.getHeadconcGomType() ;}private static  tom.gom.adt.gom.types.GomTypeList  tom_get_tail_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) { return  l.getTailconcGomType() ;}private static boolean tom_is_empty_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) { return  l.isEmptyconcGomType() ;}   private static   tom.gom.adt.gom.types.GomTypeList  tom_append_list_concGomType( tom.gom.adt.gom.types.GomTypeList l1,  tom.gom.adt.gom.types.GomTypeList  l2) {     if(tom_is_empty_concGomType_GomTypeList(l1)) {       return l2;     } else if(tom_is_empty_concGomType_GomTypeList(l2)) {       return l1;     } else if(tom_is_empty_concGomType_GomTypeList(tom_get_tail_concGomType_GomTypeList(l1))) {       return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(tom_get_head_concGomType_GomTypeList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(tom_get_head_concGomType_GomTypeList(l1),tom_append_list_concGomType(tom_get_tail_concGomType_GomTypeList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.GomTypeList  tom_get_slice_concGomType( tom.gom.adt.gom.types.GomTypeList  begin,  tom.gom.adt.gom.types.GomTypeList  end, tom.gom.adt.gom.types.GomTypeList  tail) {     if(tom_equal_term_GomTypeList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(tom_get_head_concGomType_GomTypeList(begin),( tom.gom.adt.gom.types.GomTypeList )tom_get_slice_concGomType(tom_get_tail_concGomType_GomTypeList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concProduction( tom.gom.adt.gom.types.ProductionList  t) { return  t instanceof tom.gom.adt.gom.types.productionlist.ConsconcProduction || t instanceof tom.gom.adt.gom.types.productionlist.EmptyconcProduction ;}private static  tom.gom.adt.gom.types.ProductionList  tom_empty_list_concProduction() { return  tom.gom.adt.gom.types.productionlist.EmptyconcProduction.make() ; }private static  tom.gom.adt.gom.types.ProductionList  tom_cons_list_concProduction( tom.gom.adt.gom.types.Production  e,  tom.gom.adt.gom.types.ProductionList  l) { return  tom.gom.adt.gom.types.productionlist.ConsconcProduction.make(e,l) ; }private static  tom.gom.adt.gom.types.Production  tom_get_head_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) { return  l.getHeadconcProduction() ;}private static  tom.gom.adt.gom.types.ProductionList  tom_get_tail_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) { return  l.getTailconcProduction() ;}private static boolean tom_is_empty_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) { return  l.isEmptyconcProduction() ;}   private static   tom.gom.adt.gom.types.ProductionList  tom_append_list_concProduction( tom.gom.adt.gom.types.ProductionList l1,  tom.gom.adt.gom.types.ProductionList  l2) {     if(tom_is_empty_concProduction_ProductionList(l1)) {       return l2;     } else if(tom_is_empty_concProduction_ProductionList(l2)) {       return l1;     } else if(tom_is_empty_concProduction_ProductionList(tom_get_tail_concProduction_ProductionList(l1))) {       return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(tom_get_head_concProduction_ProductionList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(tom_get_head_concProduction_ProductionList(l1),tom_append_list_concProduction(tom_get_tail_concProduction_ProductionList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.ProductionList  tom_get_slice_concProduction( tom.gom.adt.gom.types.ProductionList  begin,  tom.gom.adt.gom.types.ProductionList  end, tom.gom.adt.gom.types.ProductionList  tail) {     if(tom_equal_term_ProductionList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(tom_get_head_concProduction_ProductionList(begin),( tom.gom.adt.gom.types.ProductionList )tom_get_slice_concProduction(tom_get_tail_concProduction_ProductionList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concImportedModule( tom.gom.adt.gom.types.ImportList  t) { return  t instanceof tom.gom.adt.gom.types.importlist.ConsconcImportedModule || t instanceof tom.gom.adt.gom.types.importlist.EmptyconcImportedModule ;}private static  tom.gom.adt.gom.types.ImportList  tom_empty_list_concImportedModule() { return  tom.gom.adt.gom.types.importlist.EmptyconcImportedModule.make() ; }private static  tom.gom.adt.gom.types.ImportList  tom_cons_list_concImportedModule( tom.gom.adt.gom.types.ImportedModule  e,  tom.gom.adt.gom.types.ImportList  l) { return  tom.gom.adt.gom.types.importlist.ConsconcImportedModule.make(e,l) ; }private static  tom.gom.adt.gom.types.ImportedModule  tom_get_head_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) { return  l.getHeadconcImportedModule() ;}private static  tom.gom.adt.gom.types.ImportList  tom_get_tail_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) { return  l.getTailconcImportedModule() ;}private static boolean tom_is_empty_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) { return  l.isEmptyconcImportedModule() ;}   private static   tom.gom.adt.gom.types.ImportList  tom_append_list_concImportedModule( tom.gom.adt.gom.types.ImportList l1,  tom.gom.adt.gom.types.ImportList  l2) {     if(tom_is_empty_concImportedModule_ImportList(l1)) {       return l2;     } else if(tom_is_empty_concImportedModule_ImportList(l2)) {       return l1;     } else if(tom_is_empty_concImportedModule_ImportList(tom_get_tail_concImportedModule_ImportList(l1))) {       return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(tom_get_head_concImportedModule_ImportList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(tom_get_head_concImportedModule_ImportList(l1),tom_append_list_concImportedModule(tom_get_tail_concImportedModule_ImportList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.ImportList  tom_get_slice_concImportedModule( tom.gom.adt.gom.types.ImportList  begin,  tom.gom.adt.gom.types.ImportList  end, tom.gom.adt.gom.types.ImportList  tail) {     if(tom_equal_term_ImportList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(tom_get_head_concImportedModule_ImportList(begin),( tom.gom.adt.gom.types.ImportList )tom_get_slice_concImportedModule(tom_get_tail_concImportedModule_ImportList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concField( tom.gom.adt.gom.types.FieldList  t) { return  t instanceof tom.gom.adt.gom.types.fieldlist.ConsconcField || t instanceof tom.gom.adt.gom.types.fieldlist.EmptyconcField ;}private static  tom.gom.adt.gom.types.FieldList  tom_empty_list_concField() { return  tom.gom.adt.gom.types.fieldlist.EmptyconcField.make() ; }private static  tom.gom.adt.gom.types.FieldList  tom_cons_list_concField( tom.gom.adt.gom.types.Field  e,  tom.gom.adt.gom.types.FieldList  l) { return  tom.gom.adt.gom.types.fieldlist.ConsconcField.make(e,l) ; }private static  tom.gom.adt.gom.types.Field  tom_get_head_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) { return  l.getHeadconcField() ;}private static  tom.gom.adt.gom.types.FieldList  tom_get_tail_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) { return  l.getTailconcField() ;}private static boolean tom_is_empty_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) { return  l.isEmptyconcField() ;}   private static   tom.gom.adt.gom.types.FieldList  tom_append_list_concField( tom.gom.adt.gom.types.FieldList l1,  tom.gom.adt.gom.types.FieldList  l2) {     if(tom_is_empty_concField_FieldList(l1)) {       return l2;     } else if(tom_is_empty_concField_FieldList(l2)) {       return l1;     } else if(tom_is_empty_concField_FieldList(tom_get_tail_concField_FieldList(l1))) {       return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(tom_get_head_concField_FieldList(l1),l2);     } else {       return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(tom_get_head_concField_FieldList(l1),tom_append_list_concField(tom_get_tail_concField_FieldList(l1),l2));     }   }   private static   tom.gom.adt.gom.types.FieldList  tom_get_slice_concField( tom.gom.adt.gom.types.FieldList  begin,  tom.gom.adt.gom.types.FieldList  end, tom.gom.adt.gom.types.FieldList  tail) {     if(tom_equal_term_FieldList(begin,end)) {       return tail;     } else {       return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(tom_get_head_concField_FieldList(begin),( tom.gom.adt.gom.types.FieldList )tom_get_slice_concField(tom_get_tail_concField_FieldList(begin),end,tail));     }   }    


  public static GomModule getGomModule(ATermAST t, GomStreamManager stream) {
    return getGomModule(t.genATermFromAST(TokenTable.getTokenMap()),stream);
  }

  private static GomModule getGomModule(ATerm t, GomStreamManager stream) {
    /*
     * The first sequence of (ID DOT)* ID nodes composes the module name
     */
    GomModuleName moduleName = null;
    ATermList list = null;
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch2NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_MODULE(tomMatch2NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch2NameNumber_freshVar_0=tom_get_slot_MODULE_info(tomMatch2NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch2NameNumber_freshVar_1=tom_get_slot_MODULE_childs(tomMatch2NameNumberfreshSubject_1);if ( true ) {

        list = tomMatch2NameNumber_freshVar_1;
        ATermList modname = tom_empty_list_concATerm();
        while (true) {
          if (tom_is_sort_ATermList(list)) {{  aterm.ATermList  tomMatch1NameNumberfreshSubject_1=(( aterm.ATermList )list);if (tom_is_fun_sym_concATerm(tomMatch1NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch1NameNumber_freshVar_1=tomMatch1NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch1NameNumber_freshVar_1))) {{  aterm.ATerm  tomMatch1NameNumber_freshVar_0=tom_get_head_concATerm_ATermList(tomMatch1NameNumber_freshVar_1);{  aterm.ATermList  tomMatch1NameNumber_freshVar_2=tom_get_tail_concATerm_ATermList(tomMatch1NameNumber_freshVar_1);{ boolean tomMatch1NameNumber_freshVar_4= false ;if (tom_is_fun_sym_ID(tomMatch1NameNumber_freshVar_0)) {tomMatch1NameNumber_freshVar_4= true ;} else {if (tom_is_fun_sym_DOT(tomMatch1NameNumber_freshVar_0)) {tomMatch1NameNumber_freshVar_4= true ;}}if ((tomMatch1NameNumber_freshVar_4 ==  true )) {if ( true ) {

              modname = tom_append_list_concATerm(modname,tom_cons_list_concATerm(tomMatch1NameNumber_freshVar_0,tom_empty_list_concATerm()));
              list = list.getNext();
              continue;
            }}}}}}}}if ( true ) {
 break; }}}

        }
        moduleName = getGomModuleName(modname, stream);
      }}}}}}

    if(moduleName == null) {
      throw new GomRuntimeException("No module name here");
    }
    if (tom_is_sort_ATermList(list)) {{  aterm.ATermList  tomMatch4NameNumberfreshSubject_1=(( aterm.ATermList )list);if (tom_is_fun_sym_concATerm(tomMatch4NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch4NameNumber_freshVar_0=tomMatch4NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch4NameNumber_freshVar_0))) {{  aterm.ATerm  tom_imports=tom_get_head_concATerm_ATermList(tomMatch4NameNumber_freshVar_0);{  aterm.ATermList  tomMatch4NameNumber_freshVar_1=tom_get_tail_concATerm_ATermList(tomMatch4NameNumber_freshVar_0);if ( true ) {if (tom_is_sort_ATerm(tom_imports)) {{  aterm.ATerm  tomMatch3NameNumberfreshSubject_1=(( aterm.ATerm )tom_imports);if (tom_is_fun_sym_IMPORTS(tomMatch3NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch3NameNumber_freshVar_0=tom_get_slot_IMPORTS_info(tomMatch3NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch3NameNumber_freshVar_1=tom_get_slot_IMPORTS_childs(tomMatch3NameNumberfreshSubject_1);if ( true ) {



            return tom_make_GomModule(moduleName,tom_cons_list_concSection(getImports(tom_imports),tom_cons_list_concSection(getSection(tomMatch4NameNumber_freshVar_1),tom_empty_list_concSection())));
          }}}}}}

      }}}}}}if (tom_is_fun_sym_concATerm(tomMatch4NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch4NameNumber_freshVar_18=tomMatch4NameNumberfreshSubject_1;if ( true ) {

        return tom_make_GomModule(moduleName,tom_cons_list_concSection(getSection(tomMatch4NameNumber_freshVar_18),tom_empty_list_concSection()));
      }}}}}

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static GomModuleName getGomModuleName(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch5NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_ID(tomMatch5NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch5NameNumber_freshVar_0=tom_get_slot_ID_info(tomMatch5NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch5NameNumber_freshVar_1=tom_get_slot_ID_childs(tomMatch5NameNumberfreshSubject_1);if (tom_is_fun_sym_NodeInfo(tomMatch5NameNumber_freshVar_0)) {{  String  tomMatch5NameNumber_freshVar_2=tom_get_slot_NodeInfo_text(tomMatch5NameNumber_freshVar_0);if ( true ) {

        return tom_make_GomModuleName(tomMatch5NameNumber_freshVar_2);
      }}}}}}}}

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static GomModuleName getGomModuleName(ATermList l, GomStreamManager stream) {
    if (tom_is_sort_ATermList(l)) {{  aterm.ATermList  tomMatch6NameNumberfreshSubject_1=(( aterm.ATermList )l);if (tom_is_fun_sym_concATerm(tomMatch6NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch6NameNumber_freshVar_0=tomMatch6NameNumberfreshSubject_1;{  aterm.ATermList  tomMatch6NameNumber_begin_2=tomMatch6NameNumber_freshVar_0;{  aterm.ATermList  tomMatch6NameNumber_end_3=tomMatch6NameNumber_freshVar_0;do {{{  aterm.ATermList  tom_prefix=tom_get_slice_concATerm(tomMatch6NameNumber_begin_2,tomMatch6NameNumber_end_3,tom_empty_list_concATerm());{  aterm.ATermList  tomMatch6NameNumber_freshVar_1=tomMatch6NameNumber_end_3;if (!(tom_is_empty_concATerm_ATermList(tomMatch6NameNumber_freshVar_1))) {if (tom_is_fun_sym_ID(tom_get_head_concATerm_ATermList(tomMatch6NameNumber_freshVar_1))) {{  aterm.ATerm  tomMatch6NameNumber_freshVar_15=tom_get_slot_ID_info(tom_get_head_concATerm_ATermList(tomMatch6NameNumber_freshVar_1));{  aterm.ATermList  tomMatch6NameNumber_freshVar_16=tom_get_slot_ID_childs(tom_get_head_concATerm_ATermList(tomMatch6NameNumber_freshVar_1));if (tom_is_fun_sym_NodeInfo(tomMatch6NameNumber_freshVar_15)) {{  String  tomMatch6NameNumber_freshVar_17=tom_get_slot_NodeInfo_text(tomMatch6NameNumber_freshVar_15);{  aterm.ATermList  tomMatch6NameNumber_freshVar_4=tom_get_tail_concATerm_ATermList(tomMatch6NameNumber_freshVar_1);if (tom_is_empty_concATerm_ATermList(tomMatch6NameNumber_freshVar_4)) {if ( true ) {

        if (!tom_prefix.isEmpty()) {
          setPkgPath(tom_prefix,stream);
        }
        return tom_make_GomModuleName(tomMatch6NameNumber_freshVar_17);
      }}}}}}}}}}}if (tom_is_empty_concATerm_ATermList(tomMatch6NameNumber_end_3)) {tomMatch6NameNumber_end_3=tomMatch6NameNumber_begin_2;} else {tomMatch6NameNumber_end_3=tom_get_tail_concATerm_ATermList(tomMatch6NameNumber_end_3);}}} while(!(tom_equal_term_ATermList(tomMatch6NameNumber_end_3, tomMatch6NameNumber_begin_2)));}}}}}}

    throw new GomRuntimeException("Unable to translate: " + l);
  }

  private static void setPkgPath(ATermList l, GomStreamManager stream) {
    StringBuffer pkgPrefix = new StringBuffer("");
    while (!l.isEmpty()) {
      ATerm t = l.getFirst();
      if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch7NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_ID(tomMatch7NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch7NameNumber_freshVar_0=tom_get_slot_ID_info(tomMatch7NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch7NameNumber_freshVar_1=tom_get_slot_ID_childs(tomMatch7NameNumberfreshSubject_1);if (tom_is_fun_sym_NodeInfo(tomMatch7NameNumber_freshVar_0)) {{  String  tomMatch7NameNumber_freshVar_2=tom_get_slot_NodeInfo_text(tomMatch7NameNumber_freshVar_0);if ( true ) {
 pkgPrefix.append(tomMatch7NameNumber_freshVar_2); }}}}}}if (tom_is_fun_sym_DOT(tomMatch7NameNumberfreshSubject_1)) {if ( true ) {
 pkgPrefix.append("."); }}}}

      l = l.getNext();
    }
    /* Take care to remove the last dot */
    pkgPrefix.deleteCharAt(pkgPrefix.length()-1);
    stream.appendToPackagePath(pkgPrefix.toString());
  }

  private static Section getImports(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch8NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_IMPORTS(tomMatch8NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch8NameNumber_freshVar_0=tom_get_slot_IMPORTS_info(tomMatch8NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch8NameNumber_freshVar_1=tom_get_slot_IMPORTS_childs(tomMatch8NameNumberfreshSubject_1);if ( true ) {
 return tom_make_Imports(getImportList(tomMatch8NameNumber_freshVar_1)); }}}}}}

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static ImportList getImportList(ATermList l) {
    if (tom_is_sort_ATermList(l)) {{  aterm.ATermList  tomMatch9NameNumberfreshSubject_1=(( aterm.ATermList )l);if (tom_is_fun_sym_concATerm(tomMatch9NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch9NameNumber_freshVar_0=tomMatch9NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch9NameNumber_freshVar_0))) {{  aterm.ATermList  tomMatch9NameNumber_freshVar_1=tom_get_tail_concATerm_ATermList(tomMatch9NameNumber_freshVar_0);if ( true ) {

        ImportList tmpL = getImportList(tomMatch9NameNumber_freshVar_1);
        return tom_cons_list_concImportedModule(getImportedModule(tom_get_head_concATerm_ATermList(tomMatch9NameNumber_freshVar_0)),tom_append_list_concImportedModule(tmpL,tom_empty_list_concImportedModule()));
      }}}}}if (tom_is_fun_sym_concATerm(tomMatch9NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch9NameNumber_freshVar_18=tomMatch9NameNumberfreshSubject_1;if (tom_is_empty_concATerm_ATermList(tomMatch9NameNumber_freshVar_18)) {if ( true ) {

        return tom_empty_list_concImportedModule();
      }}}}}}

    throw new GomRuntimeException("Unable to translate: " + l);
  }

  private static ImportedModule getImportedModule(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch10NameNumberfreshSubject_1=(( aterm.ATerm )t);if ( true ) {

        /*
         * Add a list operator, as imports are unqualified names
         */
        return tom_make_Import(getGomModuleName(tomMatch10NameNumberfreshSubject_1));
      }}}

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static Section getSection(ATermList l) {
    if (tom_is_sort_ATermList(l)) {{  aterm.ATermList  tomMatch11NameNumberfreshSubject_1=(( aterm.ATermList )l);if (tom_is_fun_sym_concATerm(tomMatch11NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch11NameNumber_freshVar_0=tomMatch11NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch11NameNumber_freshVar_0))) {if (tom_is_fun_sym_PUBLIC(tom_get_head_concATerm_ATermList(tomMatch11NameNumber_freshVar_0))) {{  aterm.ATermList  tomMatch11NameNumber_freshVar_1=tom_get_tail_concATerm_ATermList(tomMatch11NameNumber_freshVar_0);if ( true ) {
 return tom_make_Public(getGrammarList(tomMatch11NameNumber_freshVar_1)); }}}}}}if (tom_is_fun_sym_concATerm(tomMatch11NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch11NameNumber_freshVar_23=tomMatch11NameNumberfreshSubject_1;if ( true ) {
 return tom_make_Public(getGrammarList(tomMatch11NameNumber_freshVar_23)); }}}}}

    throw new GomRuntimeException("Unable to translate: " + l);
  }

  private static GrammarList getGrammarList(ATermList l) {
    if (tom_is_sort_ATermList(l)) {{  aterm.ATermList  tomMatch13NameNumberfreshSubject_1=(( aterm.ATermList )l);if (tom_is_fun_sym_concATerm(tomMatch13NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch13NameNumber_freshVar_0=tomMatch13NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch13NameNumber_freshVar_0))) {{  aterm.ATerm  tom_g=tom_get_head_concATerm_ATermList(tomMatch13NameNumber_freshVar_0);{  aterm.ATermList  tomMatch13NameNumber_freshVar_1=tom_get_tail_concATerm_ATermList(tomMatch13NameNumber_freshVar_0);if ( true ) {

        GrammarList tmpL = getGrammarList(tomMatch13NameNumber_freshVar_1);
        if (tom_is_sort_ATerm(tom_g)) {{  aterm.ATerm  tomMatch12NameNumberfreshSubject_1=(( aterm.ATerm )tom_g);if (tom_is_fun_sym_SORTS(tomMatch12NameNumberfreshSubject_1)) {if ( true ) {
 return tom_cons_list_concGrammar(getGrammar(tom_g),tom_append_list_concGrammar(tmpL,tom_empty_list_concGrammar())); }}if (tom_is_fun_sym_SYNTAX(tomMatch12NameNumberfreshSubject_1)) {if ( true ) {
 return tom_cons_list_concGrammar(getSorts(tom_g),tom_cons_list_concGrammar(getGrammar(tom_g),tom_append_list_concGrammar(tmpL,tom_empty_list_concGrammar()))); }}}}

      }}}}}}if (tom_is_fun_sym_concATerm(tomMatch13NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch13NameNumber_freshVar_18=tomMatch13NameNumberfreshSubject_1;if (tom_is_empty_concATerm_ATermList(tomMatch13NameNumber_freshVar_18)) {if ( true ) {

        return tom_empty_list_concGrammar();
      }}}}}}

    throw new GomRuntimeException("Unable to translate: " + l);
  }
  //when sorts are declared with using 'sorts ...'
  private static Grammar getSorts(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch14NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_SYNTAX(tomMatch14NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch14NameNumber_freshVar_0=tom_get_slot_SYNTAX_info(tomMatch14NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch14NameNumber_freshVar_1=tom_get_slot_SYNTAX_childs(tomMatch14NameNumberfreshSubject_1);if ( true ) {

        return tom_make_Sorts(getSortsList(tomMatch14NameNumber_freshVar_1));
      }}}}}}

    throw new GomRuntimeException("Unable to translate: " + t);
  }
  private static Grammar getGrammar(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch15NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_SORTS(tomMatch15NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch15NameNumber_freshVar_0=tom_get_slot_SORTS_info(tomMatch15NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch15NameNumber_freshVar_1=tom_get_slot_SORTS_childs(tomMatch15NameNumberfreshSubject_1);if ( true ) {
 return tom_make_Sorts(getGomTypeList(tomMatch15NameNumber_freshVar_1)); }}}}if (tom_is_fun_sym_SYNTAX(tomMatch15NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch15NameNumber_freshVar_2=tom_get_slot_SYNTAX_info(tomMatch15NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch15NameNumber_freshVar_3=tom_get_slot_SYNTAX_childs(tomMatch15NameNumberfreshSubject_1);if ( true ) {
 return tom_make_Grammar(getProductionList(tomMatch15NameNumber_freshVar_3)); }}}}}}

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static GomTypeList getSortsList(ATermList l) {
    if (tom_is_sort_ATermList(l)) {{  aterm.ATermList  tomMatch17NameNumberfreshSubject_1=(( aterm.ATermList )l);if (tom_is_fun_sym_concATerm(tomMatch17NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch17NameNumber_freshVar_0=tomMatch17NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch17NameNumber_freshVar_0))) {{  aterm.ATerm  tom_g=tom_get_head_concATerm_ATermList(tomMatch17NameNumber_freshVar_0);{  aterm.ATermList  tomMatch17NameNumber_freshVar_1=tom_get_tail_concATerm_ATermList(tomMatch17NameNumber_freshVar_0);if ( true ) {

        GomTypeList tmpL = getSortsList(tomMatch17NameNumber_freshVar_1);
        if (tom_is_sort_ATerm(tom_g)) {{  aterm.ATerm  tomMatch16NameNumberfreshSubject_1=(( aterm.ATerm )tom_g);if (tom_is_fun_sym_EQUALS(tomMatch16NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch16NameNumber_freshVar_0=tom_get_slot_EQUALS_info(tomMatch16NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch16NameNumber_freshVar_1=tom_get_slot_EQUALS_childs(tomMatch16NameNumberfreshSubject_1);if (tom_is_fun_sym_concATerm(tomMatch16NameNumber_freshVar_1)) {{  aterm.ATermList  tomMatch16NameNumber_freshVar_2=tomMatch16NameNumber_freshVar_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch16NameNumber_freshVar_2))) {{  aterm.ATermList  tomMatch16NameNumber_freshVar_3=tom_get_tail_concATerm_ATermList(tomMatch16NameNumber_freshVar_2);if ( true ) {
 return tom_cons_list_concGomType(getGomType(tom_get_head_concATerm_ATermList(tomMatch16NameNumber_freshVar_2)),tom_append_list_concGomType(tmpL,tom_empty_list_concGomType())); }}}}}}}}if (tom_is_fun_sym_COLON(tomMatch16NameNumberfreshSubject_1)) {if ( true ) {
 return tom_append_list_concGomType(tmpL,tom_empty_list_concGomType()); }}if (tom_is_fun_sym_ARROW(tomMatch16NameNumberfreshSubject_1)) {if ( true ) {
 return tom_append_list_concGomType(tmpL,tom_empty_list_concGomType()); }}}}

      }}}}}}if (tom_is_fun_sym_concATerm(tomMatch17NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch17NameNumber_freshVar_18=tomMatch17NameNumberfreshSubject_1;if (tom_is_empty_concATerm_ATermList(tomMatch17NameNumber_freshVar_18)) {if ( true ) {

        return tom_empty_list_concGomType();
      }}}}}}

    throw new GomRuntimeException("Unable to translate: " + l);
  }

  private static Production getProduction(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch18NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_ARROW(tomMatch18NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch18NameNumber_freshVar_0=tom_get_slot_ARROW_info(tomMatch18NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch18NameNumber_freshVar_1=tom_get_slot_ARROW_childs(tomMatch18NameNumberfreshSubject_1);if (tom_is_fun_sym_NodeInfo(tomMatch18NameNumber_freshVar_0)) {{  int  tomMatch18NameNumber_freshVar_2=tom_get_slot_NodeInfo_line(tomMatch18NameNumber_freshVar_0);if (tom_is_fun_sym_concATerm(tomMatch18NameNumber_freshVar_1)) {{  aterm.ATermList  tomMatch18NameNumber_freshVar_3=tomMatch18NameNumber_freshVar_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch18NameNumber_freshVar_3))) {{  aterm.ATermList  tomMatch18NameNumber_freshVar_4=tom_get_tail_concATerm_ATermList(tomMatch18NameNumber_freshVar_3);{  aterm.ATermList  tomMatch18NameNumber_begin_6=tomMatch18NameNumber_freshVar_4;{  aterm.ATermList  tomMatch18NameNumber_end_7=tomMatch18NameNumber_freshVar_4;do {{{  aterm.ATermList  tomMatch18NameNumber_freshVar_5=tomMatch18NameNumber_end_7;if (!(tom_is_empty_concATerm_ATermList(tomMatch18NameNumber_freshVar_5))) {{  aterm.ATermList  tomMatch18NameNumber_freshVar_8=tom_get_tail_concATerm_ATermList(tomMatch18NameNumber_freshVar_5);if (tom_is_empty_concATerm_ATermList(tomMatch18NameNumber_freshVar_8)) {if ( true ) {

        return tom_make_Production(getId(tom_get_head_concATerm_ATermList(tomMatch18NameNumber_freshVar_3)),getFieldList(tom_get_slice_concATerm(tomMatch18NameNumber_begin_6,tomMatch18NameNumber_end_7,tom_empty_list_concATerm())),getGomType(tom_get_head_concATerm_ATermList(tomMatch18NameNumber_freshVar_5)),tom_make_Origin(tomMatch18NameNumber_freshVar_2))



;
      }}}}}if (tom_is_empty_concATerm_ATermList(tomMatch18NameNumber_end_7)) {tomMatch18NameNumber_end_7=tomMatch18NameNumber_begin_6;} else {tomMatch18NameNumber_end_7=tom_get_tail_concATerm_ATermList(tomMatch18NameNumber_end_7);}}} while(!(tom_equal_term_ATermList(tomMatch18NameNumber_end_7, tomMatch18NameNumber_begin_6)));}}}}}}}}}}}if (tom_is_fun_sym_COLON(tomMatch18NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch18NameNumber_freshVar_51=tom_get_slot_COLON_info(tomMatch18NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch18NameNumber_freshVar_52=tom_get_slot_COLON_childs(tomMatch18NameNumberfreshSubject_1);if (tom_is_fun_sym_NodeInfo(tomMatch18NameNumber_freshVar_51)) {{  String  tomMatch18NameNumber_freshVar_53=tom_get_slot_NodeInfo_text(tomMatch18NameNumber_freshVar_51);{  int  tomMatch18NameNumber_freshVar_54=tom_get_slot_NodeInfo_line(tomMatch18NameNumber_freshVar_51);if (tom_is_fun_sym_concATerm(tomMatch18NameNumber_freshVar_52)) {{  aterm.ATermList  tomMatch18NameNumber_freshVar_55=tomMatch18NameNumber_freshVar_52;if (!(tom_is_empty_concATerm_ATermList(tomMatch18NameNumber_freshVar_55))) {{  aterm.ATermList  tomMatch18NameNumber_freshVar_56=tom_get_tail_concATerm_ATermList(tomMatch18NameNumber_freshVar_55);if (!(tom_is_empty_concATerm_ATermList(tomMatch18NameNumber_freshVar_56))) {{  aterm.ATermList  tomMatch18NameNumber_freshVar_57=tom_get_tail_concATerm_ATermList(tomMatch18NameNumber_freshVar_56);if (!(tom_is_empty_concATerm_ATermList(tomMatch18NameNumber_freshVar_57))) {{  aterm.ATermList  tomMatch18NameNumber_freshVar_58=tom_get_tail_concATerm_ATermList(tomMatch18NameNumber_freshVar_57);if ( true ) {

        return tom_make_Hook(getIdkind(tom_get_head_concATerm_ATermList(tomMatch18NameNumber_freshVar_55)),getId(tom_get_head_concATerm_ATermList(tomMatch18NameNumber_freshVar_56)),getHookKind(tom_get_head_concATerm_ATermList(tomMatch18NameNumber_freshVar_57)),getArgList(tomMatch18NameNumber_freshVar_58),tomMatch18NameNumber_freshVar_53,tom_make_Origin(tomMatch18NameNumber_freshVar_54))

;
      }}}}}}}}}}}}}}}}}


    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static ProductionList getProductionList(ATermList l) {
    if (tom_is_sort_ATermList(l)) {{  aterm.ATermList  tomMatch20NameNumberfreshSubject_1=(( aterm.ATermList )l);if (tom_is_fun_sym_concATerm(tomMatch20NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch20NameNumber_freshVar_0=tomMatch20NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch20NameNumber_freshVar_0))) {{  aterm.ATerm  tom_g=tom_get_head_concATerm_ATermList(tomMatch20NameNumber_freshVar_0);{  aterm.ATermList  tomMatch20NameNumber_freshVar_1=tom_get_tail_concATerm_ATermList(tomMatch20NameNumber_freshVar_0);if ( true ) {

        ProductionList tmpL = getProductionList(tomMatch20NameNumber_freshVar_1);
        if (tom_is_sort_ATerm(tom_g)) {{  aterm.ATerm  tomMatch19NameNumberfreshSubject_1=(( aterm.ATerm )tom_g);if (tom_is_fun_sym_ARROW(tomMatch19NameNumberfreshSubject_1)) {if ( true ) {

            return tom_cons_list_concProduction(getProduction(tom_g),tom_append_list_concProduction(tmpL,tom_empty_list_concProduction()));
          }}if (tom_is_fun_sym_EQUALS(tomMatch19NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch19NameNumber_freshVar_0=tom_get_slot_EQUALS_info(tomMatch19NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch19NameNumber_freshVar_1=tom_get_slot_EQUALS_childs(tomMatch19NameNumberfreshSubject_1);if (tom_is_fun_sym_concATerm(tomMatch19NameNumber_freshVar_1)) {{  aterm.ATermList  tomMatch19NameNumber_freshVar_2=tomMatch19NameNumber_freshVar_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch19NameNumber_freshVar_2))) {{  aterm.ATermList  tomMatch19NameNumber_freshVar_3=tom_get_tail_concATerm_ATermList(tomMatch19NameNumber_freshVar_2);if ( true ) {

            ProductionList alter = getAlternatives(tom_get_head_concATerm_ATermList(tomMatch19NameNumber_freshVar_2),tomMatch19NameNumber_freshVar_3);
            return tom_append_list_concProduction(alter,tom_append_list_concProduction(tmpL,tom_empty_list_concProduction()));
          }}}}}}}}if (tom_is_fun_sym_COLON(tomMatch19NameNumberfreshSubject_1)) {if ( true ) {


            return tom_cons_list_concProduction(getProduction(tom_g),tom_append_list_concProduction(tmpL,tom_empty_list_concProduction()));
          }}}}

      }}}}}}if (tom_is_fun_sym_concATerm(tomMatch20NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch20NameNumber_freshVar_18=tomMatch20NameNumberfreshSubject_1;if (tom_is_empty_concATerm_ATermList(tomMatch20NameNumber_freshVar_18)) {if ( true ) {

        return tom_empty_list_concProduction();
      }}}}}}

    throw new GomRuntimeException("Unable to translate: " + l);
  }

  private static ProductionList getAlternatives(ATerm type, ATermList altL) {
    if (tom_is_sort_ATermList(altL)) {{  aterm.ATermList  tomMatch21NameNumberfreshSubject_1=(( aterm.ATermList )altL);if (tom_is_fun_sym_concATerm(tomMatch21NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch21NameNumber_freshVar_0=tomMatch21NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch21NameNumber_freshVar_0))) {if (tom_is_fun_sym_ALT(tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_0))) {{  aterm.ATerm  tomMatch21NameNumber_freshVar_60=tom_get_slot_ALT_info(tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_0));{  aterm.ATermList  tomMatch21NameNumber_freshVar_61=tom_get_slot_ALT_childs(tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_0));{  aterm.ATermList  tomMatch21NameNumber_freshVar_1=tom_get_tail_concATerm_ATermList(tomMatch21NameNumber_freshVar_0);if (!(tom_is_empty_concATerm_ATermList(tomMatch21NameNumber_freshVar_1))) {{  aterm.ATerm  tom_id=tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_1);{  aterm.ATermList  tomMatch21NameNumber_freshVar_2=tom_get_tail_concATerm_ATermList(tomMatch21NameNumber_freshVar_1);{  aterm.ATermList  tomMatch21NameNumber_begin_4=tomMatch21NameNumber_freshVar_2;{  aterm.ATermList  tomMatch21NameNumber_end_5=tomMatch21NameNumber_freshVar_2;do {{{  aterm.ATermList  tomMatch21NameNumber_freshVar_3=tomMatch21NameNumber_end_5;if (!(tom_is_empty_concATerm_ATermList(tomMatch21NameNumber_freshVar_3))) {if (tom_is_fun_sym_ALT(tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_3))) {{  aterm.ATerm  tomMatch21NameNumber_freshVar_62=tom_get_slot_ALT_info(tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_3));{  aterm.ATermList  tomMatch21NameNumber_freshVar_63=tom_get_slot_ALT_childs(tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_3));{  aterm.ATermList  tomMatch21NameNumber_freshVar_6=tom_get_tail_concATerm_ATermList(tomMatch21NameNumber_freshVar_3);if ( true ) {

        ProductionList tmpL = getAlternatives(type,tomMatch21NameNumber_freshVar_6);
        return tom_cons_list_concProduction(tom_make_Production(getId(tom_id),getFieldList(tom_get_slice_concATerm(tomMatch21NameNumber_begin_4,tomMatch21NameNumber_end_5,tom_empty_list_concATerm())),getGomType(type),getIdLine(tom_id)),tom_append_list_concProduction(tmpL,tom_empty_list_concProduction()));
      }}}}}}}if (tom_is_empty_concATerm_ATermList(tomMatch21NameNumber_end_5)) {tomMatch21NameNumber_end_5=tomMatch21NameNumber_begin_4;} else {tomMatch21NameNumber_end_5=tom_get_tail_concATerm_ATermList(tomMatch21NameNumber_end_5);}}} while(!(tom_equal_term_ATermList(tomMatch21NameNumber_end_5, tomMatch21NameNumber_begin_4)));}}}}}}}}}}}}if (tom_is_fun_sym_concATerm(tomMatch21NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch21NameNumber_freshVar_128=tomMatch21NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch21NameNumber_freshVar_128))) {{  aterm.ATerm  tom_id=tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_128);{  aterm.ATermList  tomMatch21NameNumber_freshVar_129=tom_get_tail_concATerm_ATermList(tomMatch21NameNumber_freshVar_128);{  aterm.ATermList  tomMatch21NameNumber_begin_131=tomMatch21NameNumber_freshVar_129;{  aterm.ATermList  tomMatch21NameNumber_end_132=tomMatch21NameNumber_freshVar_129;do {{{  aterm.ATermList  tomMatch21NameNumber_freshVar_130=tomMatch21NameNumber_end_132;if (!(tom_is_empty_concATerm_ATermList(tomMatch21NameNumber_freshVar_130))) {if (tom_is_fun_sym_ALT(tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_130))) {{  aterm.ATerm  tomMatch21NameNumber_freshVar_175=tom_get_slot_ALT_info(tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_130));{  aterm.ATermList  tomMatch21NameNumber_freshVar_176=tom_get_slot_ALT_childs(tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_130));{  aterm.ATermList  tomMatch21NameNumber_freshVar_133=tom_get_tail_concATerm_ATermList(tomMatch21NameNumber_freshVar_130);if ( true ) {

        ProductionList tmpL = getAlternatives(type,tomMatch21NameNumber_freshVar_133);
        return tom_cons_list_concProduction(tom_make_Production(getId(tom_id),getFieldList(tom_get_slice_concATerm(tomMatch21NameNumber_begin_131,tomMatch21NameNumber_end_132,tom_empty_list_concATerm())),getGomType(type),getIdLine(tom_id)),tom_append_list_concProduction(tmpL,tom_empty_list_concProduction()));
      }}}}}}}if (tom_is_empty_concATerm_ATermList(tomMatch21NameNumber_end_132)) {tomMatch21NameNumber_end_132=tomMatch21NameNumber_begin_131;} else {tomMatch21NameNumber_end_132=tom_get_tail_concATerm_ATermList(tomMatch21NameNumber_end_132);}}} while(!(tom_equal_term_ATermList(tomMatch21NameNumber_end_132, tomMatch21NameNumber_begin_131)));}}}}}}}if (tom_is_fun_sym_concATerm(tomMatch21NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch21NameNumber_freshVar_221=tomMatch21NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch21NameNumber_freshVar_221))) {{  aterm.ATerm  tom_id=tom_get_head_concATerm_ATermList(tomMatch21NameNumber_freshVar_221);{  aterm.ATermList  tomMatch21NameNumber_freshVar_222=tom_get_tail_concATerm_ATermList(tomMatch21NameNumber_freshVar_221);if ( true ) {

        return tom_cons_list_concProduction(tom_make_Production(getId(tom_id),getFieldList(tomMatch21NameNumber_freshVar_222),getGomType(type),getIdLine(tom_id)),tom_empty_list_concProduction());
      }}}}}}if (tom_is_fun_sym_concATerm(tomMatch21NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch21NameNumber_freshVar_239=tomMatch21NameNumberfreshSubject_1;if (tom_is_empty_concATerm_ATermList(tomMatch21NameNumber_freshVar_239)) {if ( true ) {

        return tom_empty_list_concProduction();
      }}}}}}

    throw new GomRuntimeException("Unable to translate: " + altL);
  }

  private static GomTypeList getGomTypeList(ATermList l) {
    if (tom_is_sort_ATermList(l)) {{  aterm.ATermList  tomMatch22NameNumberfreshSubject_1=(( aterm.ATermList )l);if (tom_is_fun_sym_concATerm(tomMatch22NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch22NameNumber_freshVar_0=tomMatch22NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch22NameNumber_freshVar_0))) {{  aterm.ATermList  tomMatch22NameNumber_freshVar_1=tom_get_tail_concATerm_ATermList(tomMatch22NameNumber_freshVar_0);if ( true ) {

        GomTypeList tmpL = getGomTypeList(tomMatch22NameNumber_freshVar_1);
        return tom_cons_list_concGomType(getGomType(tom_get_head_concATerm_ATermList(tomMatch22NameNumber_freshVar_0)),tom_append_list_concGomType(tmpL,tom_empty_list_concGomType()));
      }}}}}if (tom_is_fun_sym_concATerm(tomMatch22NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch22NameNumber_freshVar_18=tomMatch22NameNumberfreshSubject_1;if (tom_is_empty_concATerm_ATermList(tomMatch22NameNumber_freshVar_18)) {if ( true ) {

        return tom_empty_list_concGomType();
      }}}}}}

    throw new GomRuntimeException("Unable to translate: " + l);
  }
  private static GomType getGomType(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch23NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_ID(tomMatch23NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch23NameNumber_freshVar_0=tom_get_slot_ID_info(tomMatch23NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch23NameNumber_freshVar_1=tom_get_slot_ID_childs(tomMatch23NameNumberfreshSubject_1);if (tom_is_fun_sym_NodeInfo(tomMatch23NameNumber_freshVar_0)) {{  String  tomMatch23NameNumber_freshVar_2=tom_get_slot_NodeInfo_text(tomMatch23NameNumber_freshVar_0);if ( true ) {

        return tom_make_GomType(tomMatch23NameNumber_freshVar_2);
      }}}}}}}}

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static String getId(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch24NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_ID(tomMatch24NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch24NameNumber_freshVar_0=tom_get_slot_ID_info(tomMatch24NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch24NameNumber_freshVar_1=tom_get_slot_ID_childs(tomMatch24NameNumberfreshSubject_1);if (tom_is_fun_sym_NodeInfo(tomMatch24NameNumber_freshVar_0)) {{  String  tomMatch24NameNumber_freshVar_2=tom_get_slot_NodeInfo_text(tomMatch24NameNumber_freshVar_0);if ( true ) {
 return tomMatch24NameNumber_freshVar_2; }}}}}}}}

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static Option getIdLine(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch25NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_ID(tomMatch25NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch25NameNumber_freshVar_0=tom_get_slot_ID_info(tomMatch25NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch25NameNumber_freshVar_1=tom_get_slot_ID_childs(tomMatch25NameNumberfreshSubject_1);if (tom_is_fun_sym_NodeInfo(tomMatch25NameNumber_freshVar_0)) {{  int  tomMatch25NameNumber_freshVar_2=tom_get_slot_NodeInfo_line(tomMatch25NameNumber_freshVar_0);if ( true ) {
 return tom_make_Origin(tomMatch25NameNumber_freshVar_2); }}}}}}}}

    throw new GomRuntimeException("Unable to get line for id: " + t);
  }

  private static IdKind getIdkind(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch26NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_SORT(tomMatch26NameNumberfreshSubject_1)) {if ( true ) {
 return tom_make_KindSort(); }}if (tom_is_fun_sym_MODULE(tomMatch26NameNumberfreshSubject_1)) {if ( true ) {
 return tom_make_KindModule(); }}if (tom_is_fun_sym_OPERATOR(tomMatch26NameNumberfreshSubject_1)) {if ( true ) {
 return tom_make_KindOperator(); }}}}

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static HookKind getHookKind(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch27NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_ID(tomMatch27NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch27NameNumber_freshVar_0=tom_get_slot_ID_info(tomMatch27NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch27NameNumber_freshVar_1=tom_get_slot_ID_childs(tomMatch27NameNumberfreshSubject_1);if (tom_is_fun_sym_NodeInfo(tomMatch27NameNumber_freshVar_0)) {{  String  tomMatch27NameNumber_freshVar_2=tom_get_slot_NodeInfo_text(tomMatch27NameNumber_freshVar_0);if ( true ) {
 return tom_make_HookKind(tomMatch27NameNumber_freshVar_2);}}}}}}}}

    throw new GomRuntimeException("Unable to translate: " + t);
  }

  private static ArgList getArgList(ATermList l) {
    if (tom_is_sort_ATermList(l)) {{  aterm.ATermList  tomMatch28NameNumberfreshSubject_1=(( aterm.ATermList )l);if (tom_is_fun_sym_concATerm(tomMatch28NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch28NameNumber_freshVar_0=tomMatch28NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch28NameNumber_freshVar_0))) {{  aterm.ATermList  tomMatch28NameNumber_freshVar_1=tom_get_tail_concATerm_ATermList(tomMatch28NameNumber_freshVar_0);if (!(tom_is_empty_concATerm_ATermList(tomMatch28NameNumber_freshVar_1))) {if (tom_is_fun_sym_COMMA(tom_get_head_concATerm_ATermList(tomMatch28NameNumber_freshVar_1))) {{  aterm.ATerm  tomMatch28NameNumber_freshVar_20=tom_get_slot_COMMA_info(tom_get_head_concATerm_ATermList(tomMatch28NameNumber_freshVar_1));{  aterm.ATermList  tomMatch28NameNumber_freshVar_21=tom_get_slot_COMMA_childs(tom_get_head_concATerm_ATermList(tomMatch28NameNumber_freshVar_1));{  aterm.ATermList  tomMatch28NameNumber_freshVar_2=tom_get_tail_concATerm_ATermList(tomMatch28NameNumber_freshVar_1);if ( true ) {

        ArgList tmpL = getArgList(tomMatch28NameNumber_freshVar_2);
        return tom_cons_list_concArg(tom_make_Arg(getId(tom_get_head_concATerm_ATermList(tomMatch28NameNumber_freshVar_0))),tom_append_list_concArg(tmpL,tom_empty_list_concArg()));
      }}}}}}}}}}if (tom_is_fun_sym_concATerm(tomMatch28NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch28NameNumber_freshVar_42=tomMatch28NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch28NameNumber_freshVar_42))) {{  aterm.ATermList  tomMatch28NameNumber_freshVar_43=tom_get_tail_concATerm_ATermList(tomMatch28NameNumber_freshVar_42);if (tom_is_empty_concATerm_ATermList(tomMatch28NameNumber_freshVar_43)) {if ( true ) {

        return tom_cons_list_concArg(tom_make_Arg(getId(tom_get_head_concATerm_ATermList(tomMatch28NameNumber_freshVar_42))),tom_empty_list_concArg());
      }}}}}}if (tom_is_fun_sym_concATerm(tomMatch28NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch28NameNumber_freshVar_44=tomMatch28NameNumberfreshSubject_1;if (tom_is_empty_concATerm_ATermList(tomMatch28NameNumber_freshVar_44)) {if ( true ) {

        return tom_empty_list_concArg();
      }}}}}}

    throw new GomRuntimeException("Unable to translate: " + l);
  }
  private static FieldList getFieldList(ATermList l) {
    if (tom_is_sort_ATermList(l)) {{  aterm.ATermList  tomMatch29NameNumberfreshSubject_1=(( aterm.ATermList )l);if (tom_is_fun_sym_concATerm(tomMatch29NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch29NameNumber_freshVar_0=tomMatch29NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch29NameNumber_freshVar_0))) {{  aterm.ATermList  tomMatch29NameNumber_freshVar_1=tom_get_tail_concATerm_ATermList(tomMatch29NameNumber_freshVar_0);if (!(tom_is_empty_concATerm_ATermList(tomMatch29NameNumber_freshVar_1))) {if (tom_is_fun_sym_COMMA(tom_get_head_concATerm_ATermList(tomMatch29NameNumber_freshVar_1))) {{  aterm.ATerm  tomMatch29NameNumber_freshVar_20=tom_get_slot_COMMA_info(tom_get_head_concATerm_ATermList(tomMatch29NameNumber_freshVar_1));{  aterm.ATermList  tomMatch29NameNumber_freshVar_21=tom_get_slot_COMMA_childs(tom_get_head_concATerm_ATermList(tomMatch29NameNumber_freshVar_1));{  aterm.ATermList  tomMatch29NameNumber_freshVar_2=tom_get_tail_concATerm_ATermList(tomMatch29NameNumber_freshVar_1);if ( true ) {

        FieldList tmpL = getFieldList(tomMatch29NameNumber_freshVar_2);
        return tom_cons_list_concField(getField(tom_get_head_concATerm_ATermList(tomMatch29NameNumber_freshVar_0)),tom_append_list_concField(tmpL,tom_empty_list_concField()));
      }}}}}}}}}}if (tom_is_fun_sym_concATerm(tomMatch29NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch29NameNumber_freshVar_42=tomMatch29NameNumberfreshSubject_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch29NameNumber_freshVar_42))) {{  aterm.ATermList  tomMatch29NameNumber_freshVar_43=tom_get_tail_concATerm_ATermList(tomMatch29NameNumber_freshVar_42);if (tom_is_empty_concATerm_ATermList(tomMatch29NameNumber_freshVar_43)) {if ( true ) {

        return tom_cons_list_concField(getField(tom_get_head_concATerm_ATermList(tomMatch29NameNumber_freshVar_42)),tom_empty_list_concField());
      }}}}}}if (tom_is_fun_sym_concATerm(tomMatch29NameNumberfreshSubject_1)) {{  aterm.ATermList  tomMatch29NameNumber_freshVar_44=tomMatch29NameNumberfreshSubject_1;if (tom_is_empty_concATerm_ATermList(tomMatch29NameNumber_freshVar_44)) {if ( true ) {

        return tom_empty_list_concField();
      }}}}}}

    throw new GomRuntimeException("Unable to translate: " + l);
  }

  private static Field getField(ATerm t) {
    if (tom_is_sort_ATerm(t)) {{  aterm.ATerm  tomMatch30NameNumberfreshSubject_1=(( aterm.ATerm )t);if (tom_is_fun_sym_COLON(tomMatch30NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch30NameNumber_freshVar_0=tom_get_slot_COLON_info(tomMatch30NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch30NameNumber_freshVar_1=tom_get_slot_COLON_childs(tomMatch30NameNumberfreshSubject_1);if (tom_is_fun_sym_concATerm(tomMatch30NameNumber_freshVar_1)) {{  aterm.ATermList  tomMatch30NameNumber_freshVar_2=tomMatch30NameNumber_freshVar_1;if (!(tom_is_empty_concATerm_ATermList(tomMatch30NameNumber_freshVar_2))) {{  aterm.ATermList  tomMatch30NameNumber_freshVar_3=tom_get_tail_concATerm_ATermList(tomMatch30NameNumber_freshVar_2);if (!(tom_is_empty_concATerm_ATermList(tomMatch30NameNumber_freshVar_3))) {{  aterm.ATermList  tomMatch30NameNumber_freshVar_4=tom_get_tail_concATerm_ATermList(tomMatch30NameNumber_freshVar_3);if (tom_is_empty_concATerm_ATermList(tomMatch30NameNumber_freshVar_4)) {if ( true ) {

        return tom_make_NamedField(getId(tom_get_head_concATerm_ATermList(tomMatch30NameNumber_freshVar_2)),getGomType(tom_get_head_concATerm_ATermList(tomMatch30NameNumber_freshVar_3)));
      }}}}}}}}}}}if (tom_is_fun_sym_STAR(tomMatch30NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch30NameNumber_freshVar_5=tom_get_slot_STAR_info(tomMatch30NameNumberfreshSubject_1);{  aterm.ATermList  tomMatch30NameNumber_freshVar_6=tom_get_slot_STAR_childs(tomMatch30NameNumberfreshSubject_1);if (tom_is_fun_sym_concATerm(tomMatch30NameNumber_freshVar_6)) {{  aterm.ATermList  tomMatch30NameNumber_freshVar_7=tomMatch30NameNumber_freshVar_6;if (!(tom_is_empty_concATerm_ATermList(tomMatch30NameNumber_freshVar_7))) {{  aterm.ATermList  tomMatch30NameNumber_freshVar_8=tom_get_tail_concATerm_ATermList(tomMatch30NameNumber_freshVar_7);if (tom_is_empty_concATerm_ATermList(tomMatch30NameNumber_freshVar_8)) {if ( true ) {

        return tom_make_StarredField(getGomType(tom_get_head_concATerm_ATermList(tomMatch30NameNumber_freshVar_7)));
      }}}}}}}}}if ( true ) {

        Logger.getLogger("AST2Gom.class").log(Level.SEVERE,
            GomMessage.noSlotDeclaration.getMessage(),
            new Object[]{});
        throw new GomRuntimeException("parsing problem");
      }}}

    throw new GomRuntimeException("Unable to translate: " + t);
  }
}

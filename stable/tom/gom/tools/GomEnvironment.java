/* Generated by TOM (version 2.3rc1): Do not edit this file *//*
 * Gom
 * 
 * Copyright (c) 2005-2006, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Antoine Reilles      e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.gom.tools;

import tom.gom.GomStreamManager;
import tom.gom.adt.gom.types.*;
import tom.gom.adt.objects.types.*;
import tom.gom.tools.error.GomRuntimeException;

import java.util.*;

public class GomEnvironment {

  /* Generated by TOM (version 2.3rc1): Do not edit this file *//* Generated by TOM (version 2.3rc1): Do not edit this file *//*  *  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *   **/  /* Generated by TOM (version 2.3rc1): Do not edit this file *//*  *  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *   **/  static private  char  tom_set_stamp_char( char  c) {  return  c  ;}static private void tom_check_stamp_char( char  c) { ;}static private boolean tom_terms_equal_char( char  t1,  char  t2) {  return  (t1==t2)  ;}static private  Character  tom_set_stamp_Character( Character  c) {  return  c  ;}static private void tom_check_stamp_Character( Character  c) { ;}static private boolean tom_terms_equal_Character(Object t1, Object t2) {  return  (t1.equals(t2))  ;}static private boolean tom_is_fun_sym_Char( Character  t) {  return  (t!= null) && (t instanceof Character)  ;}static private  Character  tom_make_Char( char  c) { return  new Character(c) ; }static private  char  tom_get_slot_Char_c( Character  t) {  return  t.charValue()  ;} static private  String  tom_set_stamp_String( String  s) {  return  s  ;}static private void tom_check_stamp_String( String  s) { ;}static private boolean tom_terms_equal_String( String  t1,  String  t2) {  return  (t1.equals(t2))  ;}static private boolean tom_is_fun_sym_concString( String  t) {  return  (t!= null) && (t instanceof String)  ;}static private  String  tom_empty_list_concString() { return  "" ; }static private  String  tom_cons_list_concString( char  c,  String  s) { return  (c+s) ; }static private  char  tom_get_head_concString_String( String  s) {  return  s.charAt(0)  ;}static private  String  tom_get_tail_concString_String( String  s) {  return  s.substring(1)  ;}static private boolean tom_is_empty_concString_String( String  s) {  return  (s.length()==0)  ;}static private  String  tom_append_list_concString( String  l1,  String  l2) {    if(tom_is_empty_concString_String(l1)) {     return l2;    } else if(tom_is_empty_concString_String(l2)) {     return l1;    } else if(tom_is_empty_concString_String(( String )tom_get_tail_concString_String(l1))) {     return ( String )tom_cons_list_concString(( char )tom_get_head_concString_String(l1),l2);    } else {      return ( String )tom_cons_list_concString(( char )tom_get_head_concString_String(l1),tom_append_list_concString(( String )tom_get_tail_concString_String(l1),l2));    }   }  static private  String  tom_get_slice_concString( String  begin,  String  end) {    if(tom_terms_equal_String(begin,end)) {      return ( String )tom_empty_list_concString();    } else {      return ( String )tom_cons_list_concString(( char )tom_get_head_concString_String(begin),( String )tom_get_slice_concString(( String )tom_get_tail_concString_String(begin),end));    }   }    /* Generated by TOM (version 2.3rc1): Do not edit this file *//*  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */ static private boolean tom_terms_equal_int( int  t1,  int  t2) {  return  (t1==t2)  ;} /* Generated by TOM (version 2.3rc1): Do not edit this file *//*  *  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *   **/  static private boolean tom_terms_equal_double( double  t1,  double  t2) {  return  (t1==t2)  ;} /* Generated by TOM (version 2.3rc1): Do not edit this file *//*  *  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *   **/  static private boolean tom_terms_equal_ATerm(Object t1, Object t2) {  return  t1 == t2 ;} /* Generated by TOM (version 2.3rc1): Do not edit this file *//*  *  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *   **/  static private boolean tom_terms_equal_ATermList(Object l1, Object l2) {  return  l1==l2  ;} static private boolean tom_terms_equal_Slot(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_Hookkind(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_ArgList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_GomModuleList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_GrammarList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_TypedProduction(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_HookDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_OperatorDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_SectionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_OperatorDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_SortDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_GomModule(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_Section(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_GomTypeList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_ProductionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_ImportList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_Sort(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_HookDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_SortDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_ModuleDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_Grammar(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_FieldList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_SortList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_SlotList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_Arg(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_Production(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_Field(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_GomModuleName(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_ModuleDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_GomType(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_ImportedModule(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_is_fun_sym_Slot( tom.gom.adt.gom.types.Slot  t) {  return  (t!=null) && t.isSlot()  ;}static private  tom.gom.adt.gom.types.Slot  tom_make_Slot( String  t0,  tom.gom.adt.gom.types.SortDecl  t1) { return  tom.gom.adt.gom.types.slot.Slot.make(t0, t1); }static private  String  tom_get_slot_Slot_name( tom.gom.adt.gom.types.Slot  t) {  return  t.getname()  ;}static private  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Slot_sort( tom.gom.adt.gom.types.Slot  t) {  return  t.getsort()  ;}static private boolean tom_is_fun_sym_KindMakeinsertHook( tom.gom.adt.gom.types.Hookkind  t) {  return  (t!=null) && t.isKindMakeinsertHook()  ;}static private  tom.gom.adt.gom.types.Hookkind  tom_make_KindMakeinsertHook() { return  tom.gom.adt.gom.types.hookkind.KindMakeinsertHook.make(); }static private boolean tom_is_fun_sym_KindMakeHook( tom.gom.adt.gom.types.Hookkind  t) {  return  (t!=null) && t.isKindMakeHook()  ;}static private  tom.gom.adt.gom.types.Hookkind  tom_make_KindMakeHook() { return  tom.gom.adt.gom.types.hookkind.KindMakeHook.make(); }static private boolean tom_is_fun_sym_ConsconcArg( tom.gom.adt.gom.types.ArgList  t) {  return  (t!=null) && t.isConsconcArg()  ;}static private  tom.gom.adt.gom.types.ArgList  tom_make_ConsconcArg( tom.gom.adt.gom.types.Arg  t0,  tom.gom.adt.gom.types.ArgList  t1) { return  tom.gom.adt.gom.types.arglist.ConsconcArg.make(t0, t1); }static private  tom.gom.adt.gom.types.Arg  tom_get_slot_ConsconcArg_HeadconcArg( tom.gom.adt.gom.types.ArgList  t) {  return  t.getHeadconcArg()  ;}static private  tom.gom.adt.gom.types.ArgList  tom_get_slot_ConsconcArg_TailconcArg( tom.gom.adt.gom.types.ArgList  t) {  return  t.getTailconcArg()  ;}static private boolean tom_is_fun_sym_ConsconcGomModule( tom.gom.adt.gom.types.GomModuleList  t) {  return  (t!=null) && t.isConsconcGomModule()  ;}static private  tom.gom.adt.gom.types.GomModuleList  tom_make_ConsconcGomModule( tom.gom.adt.gom.types.GomModule  t0,  tom.gom.adt.gom.types.GomModuleList  t1) { return  tom.gom.adt.gom.types.gommodulelist.ConsconcGomModule.make(t0, t1); }static private  tom.gom.adt.gom.types.GomModule  tom_get_slot_ConsconcGomModule_HeadconcGomModule( tom.gom.adt.gom.types.GomModuleList  t) {  return  t.getHeadconcGomModule()  ;}static private  tom.gom.adt.gom.types.GomModuleList  tom_get_slot_ConsconcGomModule_TailconcGomModule( tom.gom.adt.gom.types.GomModuleList  t) {  return  t.getTailconcGomModule()  ;}static private boolean tom_is_fun_sym_ConsconcGrammar( tom.gom.adt.gom.types.GrammarList  t) {  return  (t!=null) && t.isConsconcGrammar()  ;}static private  tom.gom.adt.gom.types.GrammarList  tom_make_ConsconcGrammar( tom.gom.adt.gom.types.Grammar  t0,  tom.gom.adt.gom.types.GrammarList  t1) { return  tom.gom.adt.gom.types.grammarlist.ConsconcGrammar.make(t0, t1); }static private  tom.gom.adt.gom.types.Grammar  tom_get_slot_ConsconcGrammar_HeadconcGrammar( tom.gom.adt.gom.types.GrammarList  t) {  return  t.getHeadconcGrammar()  ;}static private  tom.gom.adt.gom.types.GrammarList  tom_get_slot_ConsconcGrammar_TailconcGrammar( tom.gom.adt.gom.types.GrammarList  t) {  return  t.getTailconcGrammar()  ;}static private boolean tom_is_fun_sym_Variadic( tom.gom.adt.gom.types.TypedProduction  t) {  return  (t!=null) && t.isVariadic()  ;}static private  tom.gom.adt.gom.types.TypedProduction  tom_make_Variadic( tom.gom.adt.gom.types.SortDecl  t0) { return  tom.gom.adt.gom.types.typedproduction.Variadic.make(t0); }static private  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Variadic_sort( tom.gom.adt.gom.types.TypedProduction  t) {  return  t.getsort()  ;}static private boolean tom_is_fun_sym_Slots( tom.gom.adt.gom.types.TypedProduction  t) {  return  (t!=null) && t.isSlots()  ;}static private  tom.gom.adt.gom.types.TypedProduction  tom_make_Slots( tom.gom.adt.gom.types.SlotList  t0) { return  tom.gom.adt.gom.types.typedproduction.Slots.make(t0); }static private  tom.gom.adt.gom.types.SlotList  tom_get_slot_Slots_slots( tom.gom.adt.gom.types.TypedProduction  t) {  return  t.getslots()  ;}static private boolean tom_is_fun_sym_ConsconcHookDecl( tom.gom.adt.gom.types.HookDeclList  t) {  return  (t!=null) && t.isConsconcHookDecl()  ;}static private  tom.gom.adt.gom.types.HookDeclList  tom_make_ConsconcHookDecl( tom.gom.adt.gom.types.HookDecl  t0,  tom.gom.adt.gom.types.HookDeclList  t1) { return  tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make(t0, t1); }static private  tom.gom.adt.gom.types.HookDecl  tom_get_slot_ConsconcHookDecl_HeadconcHookDecl( tom.gom.adt.gom.types.HookDeclList  t) {  return  t.getHeadconcHookDecl()  ;}static private  tom.gom.adt.gom.types.HookDeclList  tom_get_slot_ConsconcHookDecl_TailconcHookDecl( tom.gom.adt.gom.types.HookDeclList  t) {  return  t.getTailconcHookDecl()  ;}static private boolean tom_is_fun_sym_ConsconcOperator( tom.gom.adt.gom.types.OperatorDeclList  t) {  return  (t!=null) && t.isConsconcOperator()  ;}static private  tom.gom.adt.gom.types.OperatorDeclList  tom_make_ConsconcOperator( tom.gom.adt.gom.types.OperatorDecl  t0,  tom.gom.adt.gom.types.OperatorDeclList  t1) { return  tom.gom.adt.gom.types.operatordecllist.ConsconcOperator.make(t0, t1); }static private  tom.gom.adt.gom.types.OperatorDecl  tom_get_slot_ConsconcOperator_HeadconcOperator( tom.gom.adt.gom.types.OperatorDeclList  t) {  return  t.getHeadconcOperator()  ;}static private  tom.gom.adt.gom.types.OperatorDeclList  tom_get_slot_ConsconcOperator_TailconcOperator( tom.gom.adt.gom.types.OperatorDeclList  t) {  return  t.getTailconcOperator()  ;}static private boolean tom_is_fun_sym_ConsconcSection( tom.gom.adt.gom.types.SectionList  t) {  return  (t!=null) && t.isConsconcSection()  ;}static private  tom.gom.adt.gom.types.SectionList  tom_make_ConsconcSection( tom.gom.adt.gom.types.Section  t0,  tom.gom.adt.gom.types.SectionList  t1) { return  tom.gom.adt.gom.types.sectionlist.ConsconcSection.make(t0, t1); }static private  tom.gom.adt.gom.types.Section  tom_get_slot_ConsconcSection_HeadconcSection( tom.gom.adt.gom.types.SectionList  t) {  return  t.getHeadconcSection()  ;}static private  tom.gom.adt.gom.types.SectionList  tom_get_slot_ConsconcSection_TailconcSection( tom.gom.adt.gom.types.SectionList  t) {  return  t.getTailconcSection()  ;}static private boolean tom_is_fun_sym_OperatorDecl( tom.gom.adt.gom.types.OperatorDecl  t) {  return  (t!=null) && t.isOperatorDecl()  ;}static private  tom.gom.adt.gom.types.OperatorDecl  tom_make_OperatorDecl( String  t0,  tom.gom.adt.gom.types.SortDecl  t1,  tom.gom.adt.gom.types.TypedProduction  t2,  tom.gom.adt.gom.types.HookDeclList  t3) { return  tom.gom.adt.gom.types.operatordecl.OperatorDecl.make(t0, t1, t2, t3); }static private  String  tom_get_slot_OperatorDecl_name( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t.getname()  ;}static private  tom.gom.adt.gom.types.SortDecl  tom_get_slot_OperatorDecl_sort( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t.getsort()  ;}static private  tom.gom.adt.gom.types.TypedProduction  tom_get_slot_OperatorDecl_prod( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t.getprod()  ;}static private  tom.gom.adt.gom.types.HookDeclList  tom_get_slot_OperatorDecl_hooks( tom.gom.adt.gom.types.OperatorDecl  t) {  return  t.gethooks()  ;}static private boolean tom_is_fun_sym_ConsconcSortDecl( tom.gom.adt.gom.types.SortDeclList  t) {  return  (t!=null) && t.isConsconcSortDecl()  ;}static private  tom.gom.adt.gom.types.SortDeclList  tom_make_ConsconcSortDecl( tom.gom.adt.gom.types.SortDecl  t0,  tom.gom.adt.gom.types.SortDeclList  t1) { return  tom.gom.adt.gom.types.sortdecllist.ConsconcSortDecl.make(t0, t1); }static private  tom.gom.adt.gom.types.SortDecl  tom_get_slot_ConsconcSortDecl_HeadconcSortDecl( tom.gom.adt.gom.types.SortDeclList  t) {  return  t.getHeadconcSortDecl()  ;}static private  tom.gom.adt.gom.types.SortDeclList  tom_get_slot_ConsconcSortDecl_TailconcSortDecl( tom.gom.adt.gom.types.SortDeclList  t) {  return  t.getTailconcSortDecl()  ;}static private boolean tom_is_fun_sym_GomModule( tom.gom.adt.gom.types.GomModule  t) {  return  (t!=null) && t.isGomModule()  ;}static private  tom.gom.adt.gom.types.GomModule  tom_make_GomModule( tom.gom.adt.gom.types.GomModuleName  t0,  tom.gom.adt.gom.types.SectionList  t1) { return  tom.gom.adt.gom.types.gommodule.GomModule.make(t0, t1); }static private  tom.gom.adt.gom.types.GomModuleName  tom_get_slot_GomModule_moduleName( tom.gom.adt.gom.types.GomModule  t) {  return  t.getmoduleName()  ;}static private  tom.gom.adt.gom.types.SectionList  tom_get_slot_GomModule_sectionList( tom.gom.adt.gom.types.GomModule  t) {  return  t.getsectionList()  ;}static private boolean tom_is_fun_sym_Public( tom.gom.adt.gom.types.Section  t) {  return  (t!=null) && t.isPublic()  ;}static private  tom.gom.adt.gom.types.Section  tom_make_Public( tom.gom.adt.gom.types.GrammarList  t0) { return  tom.gom.adt.gom.types.section.Public.make(t0); }static private  tom.gom.adt.gom.types.GrammarList  tom_get_slot_Public_grammarList( tom.gom.adt.gom.types.Section  t) {  return  t.getgrammarList()  ;}static private boolean tom_is_fun_sym_Imports( tom.gom.adt.gom.types.Section  t) {  return  (t!=null) && t.isImports()  ;}static private  tom.gom.adt.gom.types.Section  tom_make_Imports( tom.gom.adt.gom.types.ImportList  t0) { return  tom.gom.adt.gom.types.section.Imports.make(t0); }static private  tom.gom.adt.gom.types.ImportList  tom_get_slot_Imports_importList( tom.gom.adt.gom.types.Section  t) {  return  t.getimportList()  ;}static private boolean tom_is_fun_sym_ConsconcGomType( tom.gom.adt.gom.types.GomTypeList  t) {  return  (t!=null) && t.isConsconcGomType()  ;}static private  tom.gom.adt.gom.types.GomTypeList  tom_make_ConsconcGomType( tom.gom.adt.gom.types.GomType  t0,  tom.gom.adt.gom.types.GomTypeList  t1) { return  tom.gom.adt.gom.types.gomtypelist.ConsconcGomType.make(t0, t1); }static private  tom.gom.adt.gom.types.GomType  tom_get_slot_ConsconcGomType_HeadconcGomType( tom.gom.adt.gom.types.GomTypeList  t) {  return  t.getHeadconcGomType()  ;}static private  tom.gom.adt.gom.types.GomTypeList  tom_get_slot_ConsconcGomType_TailconcGomType( tom.gom.adt.gom.types.GomTypeList  t) {  return  t.getTailconcGomType()  ;}static private boolean tom_is_fun_sym_ConsconcProduction( tom.gom.adt.gom.types.ProductionList  t) {  return  (t!=null) && t.isConsconcProduction()  ;}static private  tom.gom.adt.gom.types.ProductionList  tom_make_ConsconcProduction( tom.gom.adt.gom.types.Production  t0,  tom.gom.adt.gom.types.ProductionList  t1) { return  tom.gom.adt.gom.types.productionlist.ConsconcProduction.make(t0, t1); }static private  tom.gom.adt.gom.types.Production  tom_get_slot_ConsconcProduction_HeadconcProduction( tom.gom.adt.gom.types.ProductionList  t) {  return  t.getHeadconcProduction()  ;}static private  tom.gom.adt.gom.types.ProductionList  tom_get_slot_ConsconcProduction_TailconcProduction( tom.gom.adt.gom.types.ProductionList  t) {  return  t.getTailconcProduction()  ;}static private boolean tom_is_fun_sym_ConsconcImportedModule( tom.gom.adt.gom.types.ImportList  t) {  return  (t!=null) && t.isConsconcImportedModule()  ;}static private  tom.gom.adt.gom.types.ImportList  tom_make_ConsconcImportedModule( tom.gom.adt.gom.types.ImportedModule  t0,  tom.gom.adt.gom.types.ImportList  t1) { return  tom.gom.adt.gom.types.importlist.ConsconcImportedModule.make(t0, t1); }static private  tom.gom.adt.gom.types.ImportedModule  tom_get_slot_ConsconcImportedModule_HeadconcImportedModule( tom.gom.adt.gom.types.ImportList  t) {  return  t.getHeadconcImportedModule()  ;}static private  tom.gom.adt.gom.types.ImportList  tom_get_slot_ConsconcImportedModule_TailconcImportedModule( tom.gom.adt.gom.types.ImportList  t) {  return  t.getTailconcImportedModule()  ;}static private boolean tom_is_fun_sym_Sort( tom.gom.adt.gom.types.Sort  t) {  return  (t!=null) && t.isSort()  ;}static private  tom.gom.adt.gom.types.Sort  tom_make_Sort( tom.gom.adt.gom.types.SortDecl  t0,  tom.gom.adt.gom.types.OperatorDeclList  t1) { return  tom.gom.adt.gom.types.sort.Sort.make(t0, t1); }static private  tom.gom.adt.gom.types.SortDecl  tom_get_slot_Sort_decl( tom.gom.adt.gom.types.Sort  t) {  return  t.getdecl()  ;}static private  tom.gom.adt.gom.types.OperatorDeclList  tom_get_slot_Sort_operators( tom.gom.adt.gom.types.Sort  t) {  return  t.getoperators()  ;}static private boolean tom_is_fun_sym_MakeHookDecl( tom.gom.adt.gom.types.HookDecl  t) {  return  (t!=null) && t.isMakeHookDecl()  ;}static private  tom.gom.adt.gom.types.HookDecl  tom_make_MakeHookDecl( tom.gom.adt.gom.types.SlotList  t0,  String  t1) { return  tom.gom.adt.gom.types.hookdecl.MakeHookDecl.make(t0, t1); }static private  tom.gom.adt.gom.types.SlotList  tom_get_slot_MakeHookDecl_slotargs( tom.gom.adt.gom.types.HookDecl  t) {  return  t.getslotargs()  ;}static private  String  tom_get_slot_MakeHookDecl_code( tom.gom.adt.gom.types.HookDecl  t) {  return  t.getcode()  ;}static private boolean tom_is_fun_sym_BuiltinSortDecl( tom.gom.adt.gom.types.SortDecl  t) {  return  (t!=null) && t.isBuiltinSortDecl()  ;}static private  tom.gom.adt.gom.types.SortDecl  tom_make_BuiltinSortDecl( String  t0) { return  tom.gom.adt.gom.types.sortdecl.BuiltinSortDecl.make(t0); }static private  String  tom_get_slot_BuiltinSortDecl_name( tom.gom.adt.gom.types.SortDecl  t) {  return  t.getname()  ;}static private boolean tom_is_fun_sym_SortDecl( tom.gom.adt.gom.types.SortDecl  t) {  return  (t!=null) && t.isSortDecl()  ;}static private  tom.gom.adt.gom.types.SortDecl  tom_make_SortDecl( String  t0,  tom.gom.adt.gom.types.ModuleDecl  t1) { return  tom.gom.adt.gom.types.sortdecl.SortDecl.make(t0, t1); }static private  String  tom_get_slot_SortDecl_name( tom.gom.adt.gom.types.SortDecl  t) {  return  t.getname()  ;}static private  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_SortDecl_moduleDecl( tom.gom.adt.gom.types.SortDecl  t) {  return  t.getmoduleDecl()  ;}static private boolean tom_is_fun_sym_ConsconcModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  t) {  return  (t!=null) && t.isConsconcModuleDecl()  ;}static private  tom.gom.adt.gom.types.ModuleDeclList  tom_make_ConsconcModuleDecl( tom.gom.adt.gom.types.ModuleDecl  t0,  tom.gom.adt.gom.types.ModuleDeclList  t1) { return  tom.gom.adt.gom.types.moduledecllist.ConsconcModuleDecl.make(t0, t1); }static private  tom.gom.adt.gom.types.ModuleDecl  tom_get_slot_ConsconcModuleDecl_HeadconcModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  t) {  return  t.getHeadconcModuleDecl()  ;}static private  tom.gom.adt.gom.types.ModuleDeclList  tom_get_slot_ConsconcModuleDecl_TailconcModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  t) {  return  t.getTailconcModuleDecl()  ;}static private boolean tom_is_fun_sym_Sorts( tom.gom.adt.gom.types.Grammar  t) {  return  (t!=null) && t.isSorts()  ;}static private  tom.gom.adt.gom.types.Grammar  tom_make_Sorts( tom.gom.adt.gom.types.GomTypeList  t0) { return  tom.gom.adt.gom.types.grammar.Sorts.make(t0); }static private  tom.gom.adt.gom.types.GomTypeList  tom_get_slot_Sorts_typeList( tom.gom.adt.gom.types.Grammar  t) {  return  t.gettypeList()  ;}static private boolean tom_is_fun_sym_Grammar( tom.gom.adt.gom.types.Grammar  t) {  return  (t!=null) && t.isGrammar()  ;}static private  tom.gom.adt.gom.types.Grammar  tom_make_Grammar( tom.gom.adt.gom.types.ProductionList  t0) { return  tom.gom.adt.gom.types.grammar.Grammar.make(t0); }static private  tom.gom.adt.gom.types.ProductionList  tom_get_slot_Grammar_productionList( tom.gom.adt.gom.types.Grammar  t) {  return  t.getproductionList()  ;}static private boolean tom_is_fun_sym_ConsconcField( tom.gom.adt.gom.types.FieldList  t) {  return  (t!=null) && t.isConsconcField()  ;}static private  tom.gom.adt.gom.types.FieldList  tom_make_ConsconcField( tom.gom.adt.gom.types.Field  t0,  tom.gom.adt.gom.types.FieldList  t1) { return  tom.gom.adt.gom.types.fieldlist.ConsconcField.make(t0, t1); }static private  tom.gom.adt.gom.types.Field  tom_get_slot_ConsconcField_HeadconcField( tom.gom.adt.gom.types.FieldList  t) {  return  t.getHeadconcField()  ;}static private  tom.gom.adt.gom.types.FieldList  tom_get_slot_ConsconcField_TailconcField( tom.gom.adt.gom.types.FieldList  t) {  return  t.getTailconcField()  ;}static private boolean tom_is_fun_sym_ConsconcSort( tom.gom.adt.gom.types.SortList  t) {  return  (t!=null) && t.isConsconcSort()  ;}static private  tom.gom.adt.gom.types.SortList  tom_make_ConsconcSort( tom.gom.adt.gom.types.Sort  t0,  tom.gom.adt.gom.types.SortList  t1) { return  tom.gom.adt.gom.types.sortlist.ConsconcSort.make(t0, t1); }static private  tom.gom.adt.gom.types.Sort  tom_get_slot_ConsconcSort_HeadconcSort( tom.gom.adt.gom.types.SortList  t) {  return  t.getHeadconcSort()  ;}static private  tom.gom.adt.gom.types.SortList  tom_get_slot_ConsconcSort_TailconcSort( tom.gom.adt.gom.types.SortList  t) {  return  t.getTailconcSort()  ;}static private boolean tom_is_fun_sym_ConsconcSlot( tom.gom.adt.gom.types.SlotList  t) {  return  (t!=null) && t.isConsconcSlot()  ;}static private  tom.gom.adt.gom.types.SlotList  tom_make_ConsconcSlot( tom.gom.adt.gom.types.Slot  t0,  tom.gom.adt.gom.types.SlotList  t1) { return  tom.gom.adt.gom.types.slotlist.ConsconcSlot.make(t0, t1); }static private  tom.gom.adt.gom.types.Slot  tom_get_slot_ConsconcSlot_HeadconcSlot( tom.gom.adt.gom.types.SlotList  t) {  return  t.getHeadconcSlot()  ;}static private  tom.gom.adt.gom.types.SlotList  tom_get_slot_ConsconcSlot_TailconcSlot( tom.gom.adt.gom.types.SlotList  t) {  return  t.getTailconcSlot()  ;}static private boolean tom_is_fun_sym_Arg( tom.gom.adt.gom.types.Arg  t) {  return  (t!=null) && t.isArg()  ;}static private  tom.gom.adt.gom.types.Arg  tom_make_Arg( String  t0) { return  tom.gom.adt.gom.types.arg.Arg.make(t0); }static private  String  tom_get_slot_Arg_name( tom.gom.adt.gom.types.Arg  t) {  return  t.getname()  ;}static private boolean tom_is_fun_sym_Hook( tom.gom.adt.gom.types.Production  t) {  return  (t!=null) && t.isHook()  ;}static private  tom.gom.adt.gom.types.Production  tom_make_Hook( String  t0,  tom.gom.adt.gom.types.Hookkind  t1,  tom.gom.adt.gom.types.ArgList  t2,  String  t3) { return  tom.gom.adt.gom.types.production.Hook.make(t0, t1, t2, t3); }static private  String  tom_get_slot_Hook_name( tom.gom.adt.gom.types.Production  t) {  return  t.getname()  ;}static private  tom.gom.adt.gom.types.Hookkind  tom_get_slot_Hook_hookType( tom.gom.adt.gom.types.Production  t) {  return  t.gethookType()  ;}static private  tom.gom.adt.gom.types.ArgList  tom_get_slot_Hook_args( tom.gom.adt.gom.types.Production  t) {  return  t.getargs()  ;}static private  String  tom_get_slot_Hook_code( tom.gom.adt.gom.types.Production  t) {  return  t.getcode()  ;}static private boolean tom_is_fun_sym_Production( tom.gom.adt.gom.types.Production  t) {  return  (t!=null) && t.isProduction()  ;}static private  tom.gom.adt.gom.types.Production  tom_make_Production( String  t0,  tom.gom.adt.gom.types.FieldList  t1,  tom.gom.adt.gom.types.GomType  t2) { return  tom.gom.adt.gom.types.production.Production.make(t0, t1, t2); }static private  String  tom_get_slot_Production_name( tom.gom.adt.gom.types.Production  t) {  return  t.getname()  ;}static private  tom.gom.adt.gom.types.FieldList  tom_get_slot_Production_domain( tom.gom.adt.gom.types.Production  t) {  return  t.getdomain()  ;}static private  tom.gom.adt.gom.types.GomType  tom_get_slot_Production_codomain( tom.gom.adt.gom.types.Production  t) {  return  t.getcodomain()  ;}static private boolean tom_is_fun_sym_NamedField( tom.gom.adt.gom.types.Field  t) {  return  (t!=null) && t.isNamedField()  ;}static private  tom.gom.adt.gom.types.Field  tom_make_NamedField( String  t0,  tom.gom.adt.gom.types.GomType  t1) { return  tom.gom.adt.gom.types.field.NamedField.make(t0, t1); }static private  String  tom_get_slot_NamedField_name( tom.gom.adt.gom.types.Field  t) {  return  t.getname()  ;}static private  tom.gom.adt.gom.types.GomType  tom_get_slot_NamedField_fieldType( tom.gom.adt.gom.types.Field  t) {  return  t.getfieldType()  ;}static private boolean tom_is_fun_sym_StarredField( tom.gom.adt.gom.types.Field  t) {  return  (t!=null) && t.isStarredField()  ;}static private  tom.gom.adt.gom.types.Field  tom_make_StarredField( tom.gom.adt.gom.types.GomType  t0) { return  tom.gom.adt.gom.types.field.StarredField.make(t0); }static private  tom.gom.adt.gom.types.GomType  tom_get_slot_StarredField_fieldType( tom.gom.adt.gom.types.Field  t) {  return  t.getfieldType()  ;}static private boolean tom_is_fun_sym_GomModuleName( tom.gom.adt.gom.types.GomModuleName  t) {  return  (t!=null) && t.isGomModuleName()  ;}static private  tom.gom.adt.gom.types.GomModuleName  tom_make_GomModuleName( String  t0) { return  tom.gom.adt.gom.types.gommodulename.GomModuleName.make(t0); }static private  String  tom_get_slot_GomModuleName_name( tom.gom.adt.gom.types.GomModuleName  t) {  return  t.getname()  ;}static private boolean tom_is_fun_sym_ModuleDecl( tom.gom.adt.gom.types.ModuleDecl  t) {  return  (t!=null) && t.isModuleDecl()  ;}static private  tom.gom.adt.gom.types.ModuleDecl  tom_make_ModuleDecl( tom.gom.adt.gom.types.GomModuleName  t0,  String  t1) { return  tom.gom.adt.gom.types.moduledecl.ModuleDecl.make(t0, t1); }static private  tom.gom.adt.gom.types.GomModuleName  tom_get_slot_ModuleDecl_moduleName( tom.gom.adt.gom.types.ModuleDecl  t) {  return  t.getmoduleName()  ;}static private  String  tom_get_slot_ModuleDecl_pkg( tom.gom.adt.gom.types.ModuleDecl  t) {  return  t.getpkg()  ;}static private boolean tom_is_fun_sym_GomType( tom.gom.adt.gom.types.GomType  t) {  return  (t!=null) && t.isGomType()  ;}static private  tom.gom.adt.gom.types.GomType  tom_make_GomType( String  t0) { return  tom.gom.adt.gom.types.gomtype.GomType.make(t0); }static private  String  tom_get_slot_GomType_name( tom.gom.adt.gom.types.GomType  t) {  return  t.getname()  ;}static private boolean tom_is_fun_sym_Import( tom.gom.adt.gom.types.ImportedModule  t) {  return  (t!=null) && t.isImport()  ;}static private  tom.gom.adt.gom.types.ImportedModule  tom_make_Import( tom.gom.adt.gom.types.GomModuleName  t0) { return  tom.gom.adt.gom.types.importedmodule.Import.make(t0); }static private  tom.gom.adt.gom.types.GomModuleName  tom_get_slot_Import_moduleName( tom.gom.adt.gom.types.ImportedModule  t) {  return  t.getmoduleName()  ;}static private boolean tom_is_fun_sym_concArg( tom.gom.adt.gom.types.ArgList  t) {  return  t instanceof tom.gom.adt.gom.types.arglist.ConsconcArg || t instanceof tom.gom.adt.gom.types.arglist.EmptyconcArg  ;}static private  tom.gom.adt.gom.types.ArgList  tom_empty_list_concArg() { return  tom.gom.adt.gom.types.arglist.EmptyconcArg.make() ; }static private  tom.gom.adt.gom.types.ArgList  tom_cons_list_concArg( tom.gom.adt.gom.types.Arg  e,  tom.gom.adt.gom.types.ArgList  l) { return  tom.gom.adt.gom.types.arglist.ConsconcArg.make(e,l) ; }static private  tom.gom.adt.gom.types.Arg  tom_get_head_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) {  return  l.getHeadconcArg()  ;}static private  tom.gom.adt.gom.types.ArgList  tom_get_tail_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) {  return  l.getTailconcArg()  ;}static private boolean tom_is_empty_concArg_ArgList( tom.gom.adt.gom.types.ArgList  l) {  return  l.isEmptyconcArg()  ;}static private  tom.gom.adt.gom.types.ArgList  tom_append_list_concArg( tom.gom.adt.gom.types.ArgList  l1,  tom.gom.adt.gom.types.ArgList  l2) {    if(tom_is_empty_concArg_ArgList(l1)) {     return l2;    } else if(tom_is_empty_concArg_ArgList(l2)) {     return l1;    } else if(tom_is_empty_concArg_ArgList(( tom.gom.adt.gom.types.ArgList )tom_get_tail_concArg_ArgList(l1))) {     return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(( tom.gom.adt.gom.types.Arg )tom_get_head_concArg_ArgList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(( tom.gom.adt.gom.types.Arg )tom_get_head_concArg_ArgList(l1),tom_append_list_concArg(( tom.gom.adt.gom.types.ArgList )tom_get_tail_concArg_ArgList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.ArgList  tom_get_slice_concArg( tom.gom.adt.gom.types.ArgList  begin,  tom.gom.adt.gom.types.ArgList  end) {    if(tom_terms_equal_ArgList(begin,end)) {      return ( tom.gom.adt.gom.types.ArgList )tom_empty_list_concArg();    } else {      return ( tom.gom.adt.gom.types.ArgList )tom_cons_list_concArg(( tom.gom.adt.gom.types.Arg )tom_get_head_concArg_ArgList(begin),( tom.gom.adt.gom.types.ArgList )tom_get_slice_concArg(( tom.gom.adt.gom.types.ArgList )tom_get_tail_concArg_ArgList(begin),end));    }   }  static private boolean tom_is_fun_sym_concGomModule( tom.gom.adt.gom.types.GomModuleList  t) {  return  t instanceof tom.gom.adt.gom.types.gommodulelist.ConsconcGomModule || t instanceof tom.gom.adt.gom.types.gommodulelist.EmptyconcGomModule  ;}static private  tom.gom.adt.gom.types.GomModuleList  tom_empty_list_concGomModule() { return  tom.gom.adt.gom.types.gommodulelist.EmptyconcGomModule.make() ; }static private  tom.gom.adt.gom.types.GomModuleList  tom_cons_list_concGomModule( tom.gom.adt.gom.types.GomModule  e,  tom.gom.adt.gom.types.GomModuleList  l) { return  tom.gom.adt.gom.types.gommodulelist.ConsconcGomModule.make(e,l) ; }static private  tom.gom.adt.gom.types.GomModule  tom_get_head_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) {  return  l.getHeadconcGomModule()  ;}static private  tom.gom.adt.gom.types.GomModuleList  tom_get_tail_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) {  return  l.getTailconcGomModule()  ;}static private boolean tom_is_empty_concGomModule_GomModuleList( tom.gom.adt.gom.types.GomModuleList  l) {  return  l.isEmptyconcGomModule()  ;}static private  tom.gom.adt.gom.types.GomModuleList  tom_append_list_concGomModule( tom.gom.adt.gom.types.GomModuleList  l1,  tom.gom.adt.gom.types.GomModuleList  l2) {    if(tom_is_empty_concGomModule_GomModuleList(l1)) {     return l2;    } else if(tom_is_empty_concGomModule_GomModuleList(l2)) {     return l1;    } else if(tom_is_empty_concGomModule_GomModuleList(( tom.gom.adt.gom.types.GomModuleList )tom_get_tail_concGomModule_GomModuleList(l1))) {     return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule(( tom.gom.adt.gom.types.GomModule )tom_get_head_concGomModule_GomModuleList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule(( tom.gom.adt.gom.types.GomModule )tom_get_head_concGomModule_GomModuleList(l1),tom_append_list_concGomModule(( tom.gom.adt.gom.types.GomModuleList )tom_get_tail_concGomModule_GomModuleList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.GomModuleList  tom_get_slice_concGomModule( tom.gom.adt.gom.types.GomModuleList  begin,  tom.gom.adt.gom.types.GomModuleList  end) {    if(tom_terms_equal_GomModuleList(begin,end)) {      return ( tom.gom.adt.gom.types.GomModuleList )tom_empty_list_concGomModule();    } else {      return ( tom.gom.adt.gom.types.GomModuleList )tom_cons_list_concGomModule(( tom.gom.adt.gom.types.GomModule )tom_get_head_concGomModule_GomModuleList(begin),( tom.gom.adt.gom.types.GomModuleList )tom_get_slice_concGomModule(( tom.gom.adt.gom.types.GomModuleList )tom_get_tail_concGomModule_GomModuleList(begin),end));    }   }  static private boolean tom_is_fun_sym_concGrammar( tom.gom.adt.gom.types.GrammarList  t) {  return  t instanceof tom.gom.adt.gom.types.grammarlist.ConsconcGrammar || t instanceof tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar  ;}static private  tom.gom.adt.gom.types.GrammarList  tom_empty_list_concGrammar() { return  tom.gom.adt.gom.types.grammarlist.EmptyconcGrammar.make() ; }static private  tom.gom.adt.gom.types.GrammarList  tom_cons_list_concGrammar( tom.gom.adt.gom.types.Grammar  e,  tom.gom.adt.gom.types.GrammarList  l) { return  tom.gom.adt.gom.types.grammarlist.ConsconcGrammar.make(e,l) ; }static private  tom.gom.adt.gom.types.Grammar  tom_get_head_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.getHeadconcGrammar()  ;}static private  tom.gom.adt.gom.types.GrammarList  tom_get_tail_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.getTailconcGrammar()  ;}static private boolean tom_is_empty_concGrammar_GrammarList( tom.gom.adt.gom.types.GrammarList  l) {  return  l.isEmptyconcGrammar()  ;}static private  tom.gom.adt.gom.types.GrammarList  tom_append_list_concGrammar( tom.gom.adt.gom.types.GrammarList  l1,  tom.gom.adt.gom.types.GrammarList  l2) {    if(tom_is_empty_concGrammar_GrammarList(l1)) {     return l2;    } else if(tom_is_empty_concGrammar_GrammarList(l2)) {     return l1;    } else if(tom_is_empty_concGrammar_GrammarList(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(l1))) {     return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(l1),tom_append_list_concGrammar(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.GrammarList  tom_get_slice_concGrammar( tom.gom.adt.gom.types.GrammarList  begin,  tom.gom.adt.gom.types.GrammarList  end) {    if(tom_terms_equal_GrammarList(begin,end)) {      return ( tom.gom.adt.gom.types.GrammarList )tom_empty_list_concGrammar();    } else {      return ( tom.gom.adt.gom.types.GrammarList )tom_cons_list_concGrammar(( tom.gom.adt.gom.types.Grammar )tom_get_head_concGrammar_GrammarList(begin),( tom.gom.adt.gom.types.GrammarList )tom_get_slice_concGrammar(( tom.gom.adt.gom.types.GrammarList )tom_get_tail_concGrammar_GrammarList(begin),end));    }   }  static private boolean tom_is_fun_sym_concHookDecl( tom.gom.adt.gom.types.HookDeclList  t) {  return  t instanceof tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl || t instanceof tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl  ;}static private  tom.gom.adt.gom.types.HookDeclList  tom_empty_list_concHookDecl() { return  tom.gom.adt.gom.types.hookdecllist.EmptyconcHookDecl.make() ; }static private  tom.gom.adt.gom.types.HookDeclList  tom_cons_list_concHookDecl( tom.gom.adt.gom.types.HookDecl  e,  tom.gom.adt.gom.types.HookDeclList  l) { return  tom.gom.adt.gom.types.hookdecllist.ConsconcHookDecl.make(e,l) ; }static private  tom.gom.adt.gom.types.HookDecl  tom_get_head_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) {  return  l.getHeadconcHookDecl()  ;}static private  tom.gom.adt.gom.types.HookDeclList  tom_get_tail_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) {  return  l.getTailconcHookDecl()  ;}static private boolean tom_is_empty_concHookDecl_HookDeclList( tom.gom.adt.gom.types.HookDeclList  l) {  return  l.isEmptyconcHookDecl()  ;}static private  tom.gom.adt.gom.types.HookDeclList  tom_append_list_concHookDecl( tom.gom.adt.gom.types.HookDeclList  l1,  tom.gom.adt.gom.types.HookDeclList  l2) {    if(tom_is_empty_concHookDecl_HookDeclList(l1)) {     return l2;    } else if(tom_is_empty_concHookDecl_HookDeclList(l2)) {     return l1;    } else if(tom_is_empty_concHookDecl_HookDeclList(( tom.gom.adt.gom.types.HookDeclList )tom_get_tail_concHookDecl_HookDeclList(l1))) {     return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl(( tom.gom.adt.gom.types.HookDecl )tom_get_head_concHookDecl_HookDeclList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl(( tom.gom.adt.gom.types.HookDecl )tom_get_head_concHookDecl_HookDeclList(l1),tom_append_list_concHookDecl(( tom.gom.adt.gom.types.HookDeclList )tom_get_tail_concHookDecl_HookDeclList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.HookDeclList  tom_get_slice_concHookDecl( tom.gom.adt.gom.types.HookDeclList  begin,  tom.gom.adt.gom.types.HookDeclList  end) {    if(tom_terms_equal_HookDeclList(begin,end)) {      return ( tom.gom.adt.gom.types.HookDeclList )tom_empty_list_concHookDecl();    } else {      return ( tom.gom.adt.gom.types.HookDeclList )tom_cons_list_concHookDecl(( tom.gom.adt.gom.types.HookDecl )tom_get_head_concHookDecl_HookDeclList(begin),( tom.gom.adt.gom.types.HookDeclList )tom_get_slice_concHookDecl(( tom.gom.adt.gom.types.HookDeclList )tom_get_tail_concHookDecl_HookDeclList(begin),end));    }   }  static private boolean tom_is_fun_sym_concOperator( tom.gom.adt.gom.types.OperatorDeclList  t) {  return  t instanceof tom.gom.adt.gom.types.operatordecllist.ConsconcOperator || t instanceof tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator  ;}static private  tom.gom.adt.gom.types.OperatorDeclList  tom_empty_list_concOperator() { return  tom.gom.adt.gom.types.operatordecllist.EmptyconcOperator.make() ; }static private  tom.gom.adt.gom.types.OperatorDeclList  tom_cons_list_concOperator( tom.gom.adt.gom.types.OperatorDecl  e,  tom.gom.adt.gom.types.OperatorDeclList  l) { return  tom.gom.adt.gom.types.operatordecllist.ConsconcOperator.make(e,l) ; }static private  tom.gom.adt.gom.types.OperatorDecl  tom_get_head_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) {  return  l.getHeadconcOperator()  ;}static private  tom.gom.adt.gom.types.OperatorDeclList  tom_get_tail_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) {  return  l.getTailconcOperator()  ;}static private boolean tom_is_empty_concOperator_OperatorDeclList( tom.gom.adt.gom.types.OperatorDeclList  l) {  return  l.isEmptyconcOperator()  ;}static private  tom.gom.adt.gom.types.OperatorDeclList  tom_append_list_concOperator( tom.gom.adt.gom.types.OperatorDeclList  l1,  tom.gom.adt.gom.types.OperatorDeclList  l2) {    if(tom_is_empty_concOperator_OperatorDeclList(l1)) {     return l2;    } else if(tom_is_empty_concOperator_OperatorDeclList(l2)) {     return l1;    } else if(tom_is_empty_concOperator_OperatorDeclList(( tom.gom.adt.gom.types.OperatorDeclList )tom_get_tail_concOperator_OperatorDeclList(l1))) {     return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(( tom.gom.adt.gom.types.OperatorDecl )tom_get_head_concOperator_OperatorDeclList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(( tom.gom.adt.gom.types.OperatorDecl )tom_get_head_concOperator_OperatorDeclList(l1),tom_append_list_concOperator(( tom.gom.adt.gom.types.OperatorDeclList )tom_get_tail_concOperator_OperatorDeclList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.OperatorDeclList  tom_get_slice_concOperator( tom.gom.adt.gom.types.OperatorDeclList  begin,  tom.gom.adt.gom.types.OperatorDeclList  end) {    if(tom_terms_equal_OperatorDeclList(begin,end)) {      return ( tom.gom.adt.gom.types.OperatorDeclList )tom_empty_list_concOperator();    } else {      return ( tom.gom.adt.gom.types.OperatorDeclList )tom_cons_list_concOperator(( tom.gom.adt.gom.types.OperatorDecl )tom_get_head_concOperator_OperatorDeclList(begin),( tom.gom.adt.gom.types.OperatorDeclList )tom_get_slice_concOperator(( tom.gom.adt.gom.types.OperatorDeclList )tom_get_tail_concOperator_OperatorDeclList(begin),end));    }   }  static private boolean tom_is_fun_sym_concSection( tom.gom.adt.gom.types.SectionList  t) {  return  t instanceof tom.gom.adt.gom.types.sectionlist.ConsconcSection || t instanceof tom.gom.adt.gom.types.sectionlist.EmptyconcSection  ;}static private  tom.gom.adt.gom.types.SectionList  tom_empty_list_concSection() { return  tom.gom.adt.gom.types.sectionlist.EmptyconcSection.make() ; }static private  tom.gom.adt.gom.types.SectionList  tom_cons_list_concSection( tom.gom.adt.gom.types.Section  e,  tom.gom.adt.gom.types.SectionList  l) { return  tom.gom.adt.gom.types.sectionlist.ConsconcSection.make(e,l) ; }static private  tom.gom.adt.gom.types.Section  tom_get_head_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.getHeadconcSection()  ;}static private  tom.gom.adt.gom.types.SectionList  tom_get_tail_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.getTailconcSection()  ;}static private boolean tom_is_empty_concSection_SectionList( tom.gom.adt.gom.types.SectionList  l) {  return  l.isEmptyconcSection()  ;}static private  tom.gom.adt.gom.types.SectionList  tom_append_list_concSection( tom.gom.adt.gom.types.SectionList  l1,  tom.gom.adt.gom.types.SectionList  l2) {    if(tom_is_empty_concSection_SectionList(l1)) {     return l2;    } else if(tom_is_empty_concSection_SectionList(l2)) {     return l1;    } else if(tom_is_empty_concSection_SectionList(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(l1))) {     return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(l1),tom_append_list_concSection(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.SectionList  tom_get_slice_concSection( tom.gom.adt.gom.types.SectionList  begin,  tom.gom.adt.gom.types.SectionList  end) {    if(tom_terms_equal_SectionList(begin,end)) {      return ( tom.gom.adt.gom.types.SectionList )tom_empty_list_concSection();    } else {      return ( tom.gom.adt.gom.types.SectionList )tom_cons_list_concSection(( tom.gom.adt.gom.types.Section )tom_get_head_concSection_SectionList(begin),( tom.gom.adt.gom.types.SectionList )tom_get_slice_concSection(( tom.gom.adt.gom.types.SectionList )tom_get_tail_concSection_SectionList(begin),end));    }   }  static private boolean tom_is_fun_sym_concSortDecl( tom.gom.adt.gom.types.SortDeclList  t) {  return  t instanceof tom.gom.adt.gom.types.sortdecllist.ConsconcSortDecl || t instanceof tom.gom.adt.gom.types.sortdecllist.EmptyconcSortDecl  ;}static private  tom.gom.adt.gom.types.SortDeclList  tom_empty_list_concSortDecl() { return  tom.gom.adt.gom.types.sortdecllist.EmptyconcSortDecl.make() ; }static private  tom.gom.adt.gom.types.SortDeclList  tom_cons_list_concSortDecl( tom.gom.adt.gom.types.SortDecl  e,  tom.gom.adt.gom.types.SortDeclList  l) { return  tom.gom.adt.gom.types.sortdecllist.ConsconcSortDecl.make(e,l) ; }static private  tom.gom.adt.gom.types.SortDecl  tom_get_head_concSortDecl_SortDeclList( tom.gom.adt.gom.types.SortDeclList  l) {  return  l.getHeadconcSortDecl()  ;}static private  tom.gom.adt.gom.types.SortDeclList  tom_get_tail_concSortDecl_SortDeclList( tom.gom.adt.gom.types.SortDeclList  l) {  return  l.getTailconcSortDecl()  ;}static private boolean tom_is_empty_concSortDecl_SortDeclList( tom.gom.adt.gom.types.SortDeclList  l) {  return  l.isEmptyconcSortDecl()  ;}static private  tom.gom.adt.gom.types.SortDeclList  tom_append_list_concSortDecl( tom.gom.adt.gom.types.SortDeclList  l1,  tom.gom.adt.gom.types.SortDeclList  l2) {    if(tom_is_empty_concSortDecl_SortDeclList(l1)) {     return l2;    } else if(tom_is_empty_concSortDecl_SortDeclList(l2)) {     return l1;    } else if(tom_is_empty_concSortDecl_SortDeclList(( tom.gom.adt.gom.types.SortDeclList )tom_get_tail_concSortDecl_SortDeclList(l1))) {     return ( tom.gom.adt.gom.types.SortDeclList )tom_cons_list_concSortDecl(( tom.gom.adt.gom.types.SortDecl )tom_get_head_concSortDecl_SortDeclList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SortDeclList )tom_cons_list_concSortDecl(( tom.gom.adt.gom.types.SortDecl )tom_get_head_concSortDecl_SortDeclList(l1),tom_append_list_concSortDecl(( tom.gom.adt.gom.types.SortDeclList )tom_get_tail_concSortDecl_SortDeclList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.SortDeclList  tom_get_slice_concSortDecl( tom.gom.adt.gom.types.SortDeclList  begin,  tom.gom.adt.gom.types.SortDeclList  end) {    if(tom_terms_equal_SortDeclList(begin,end)) {      return ( tom.gom.adt.gom.types.SortDeclList )tom_empty_list_concSortDecl();    } else {      return ( tom.gom.adt.gom.types.SortDeclList )tom_cons_list_concSortDecl(( tom.gom.adt.gom.types.SortDecl )tom_get_head_concSortDecl_SortDeclList(begin),( tom.gom.adt.gom.types.SortDeclList )tom_get_slice_concSortDecl(( tom.gom.adt.gom.types.SortDeclList )tom_get_tail_concSortDecl_SortDeclList(begin),end));    }   }  static private boolean tom_is_fun_sym_concGomType( tom.gom.adt.gom.types.GomTypeList  t) {  return  t instanceof tom.gom.adt.gom.types.gomtypelist.ConsconcGomType || t instanceof tom.gom.adt.gom.types.gomtypelist.EmptyconcGomType  ;}static private  tom.gom.adt.gom.types.GomTypeList  tom_empty_list_concGomType() { return  tom.gom.adt.gom.types.gomtypelist.EmptyconcGomType.make() ; }static private  tom.gom.adt.gom.types.GomTypeList  tom_cons_list_concGomType( tom.gom.adt.gom.types.GomType  e,  tom.gom.adt.gom.types.GomTypeList  l) { return  tom.gom.adt.gom.types.gomtypelist.ConsconcGomType.make(e,l) ; }static private  tom.gom.adt.gom.types.GomType  tom_get_head_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) {  return  l.getHeadconcGomType()  ;}static private  tom.gom.adt.gom.types.GomTypeList  tom_get_tail_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) {  return  l.getTailconcGomType()  ;}static private boolean tom_is_empty_concGomType_GomTypeList( tom.gom.adt.gom.types.GomTypeList  l) {  return  l.isEmptyconcGomType()  ;}static private  tom.gom.adt.gom.types.GomTypeList  tom_append_list_concGomType( tom.gom.adt.gom.types.GomTypeList  l1,  tom.gom.adt.gom.types.GomTypeList  l2) {    if(tom_is_empty_concGomType_GomTypeList(l1)) {     return l2;    } else if(tom_is_empty_concGomType_GomTypeList(l2)) {     return l1;    } else if(tom_is_empty_concGomType_GomTypeList(( tom.gom.adt.gom.types.GomTypeList )tom_get_tail_concGomType_GomTypeList(l1))) {     return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(( tom.gom.adt.gom.types.GomType )tom_get_head_concGomType_GomTypeList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(( tom.gom.adt.gom.types.GomType )tom_get_head_concGomType_GomTypeList(l1),tom_append_list_concGomType(( tom.gom.adt.gom.types.GomTypeList )tom_get_tail_concGomType_GomTypeList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.GomTypeList  tom_get_slice_concGomType( tom.gom.adt.gom.types.GomTypeList  begin,  tom.gom.adt.gom.types.GomTypeList  end) {    if(tom_terms_equal_GomTypeList(begin,end)) {      return ( tom.gom.adt.gom.types.GomTypeList )tom_empty_list_concGomType();    } else {      return ( tom.gom.adt.gom.types.GomTypeList )tom_cons_list_concGomType(( tom.gom.adt.gom.types.GomType )tom_get_head_concGomType_GomTypeList(begin),( tom.gom.adt.gom.types.GomTypeList )tom_get_slice_concGomType(( tom.gom.adt.gom.types.GomTypeList )tom_get_tail_concGomType_GomTypeList(begin),end));    }   }  static private boolean tom_is_fun_sym_concProduction( tom.gom.adt.gom.types.ProductionList  t) {  return  t instanceof tom.gom.adt.gom.types.productionlist.ConsconcProduction || t instanceof tom.gom.adt.gom.types.productionlist.EmptyconcProduction  ;}static private  tom.gom.adt.gom.types.ProductionList  tom_empty_list_concProduction() { return  tom.gom.adt.gom.types.productionlist.EmptyconcProduction.make() ; }static private  tom.gom.adt.gom.types.ProductionList  tom_cons_list_concProduction( tom.gom.adt.gom.types.Production  e,  tom.gom.adt.gom.types.ProductionList  l) { return  tom.gom.adt.gom.types.productionlist.ConsconcProduction.make(e,l) ; }static private  tom.gom.adt.gom.types.Production  tom_get_head_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.getHeadconcProduction()  ;}static private  tom.gom.adt.gom.types.ProductionList  tom_get_tail_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.getTailconcProduction()  ;}static private boolean tom_is_empty_concProduction_ProductionList( tom.gom.adt.gom.types.ProductionList  l) {  return  l.isEmptyconcProduction()  ;}static private  tom.gom.adt.gom.types.ProductionList  tom_append_list_concProduction( tom.gom.adt.gom.types.ProductionList  l1,  tom.gom.adt.gom.types.ProductionList  l2) {    if(tom_is_empty_concProduction_ProductionList(l1)) {     return l2;    } else if(tom_is_empty_concProduction_ProductionList(l2)) {     return l1;    } else if(tom_is_empty_concProduction_ProductionList(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(l1))) {     return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(l1),tom_append_list_concProduction(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.ProductionList  tom_get_slice_concProduction( tom.gom.adt.gom.types.ProductionList  begin,  tom.gom.adt.gom.types.ProductionList  end) {    if(tom_terms_equal_ProductionList(begin,end)) {      return ( tom.gom.adt.gom.types.ProductionList )tom_empty_list_concProduction();    } else {      return ( tom.gom.adt.gom.types.ProductionList )tom_cons_list_concProduction(( tom.gom.adt.gom.types.Production )tom_get_head_concProduction_ProductionList(begin),( tom.gom.adt.gom.types.ProductionList )tom_get_slice_concProduction(( tom.gom.adt.gom.types.ProductionList )tom_get_tail_concProduction_ProductionList(begin),end));    }   }  static private boolean tom_is_fun_sym_concImportedModule( tom.gom.adt.gom.types.ImportList  t) {  return  t instanceof tom.gom.adt.gom.types.importlist.ConsconcImportedModule || t instanceof tom.gom.adt.gom.types.importlist.EmptyconcImportedModule  ;}static private  tom.gom.adt.gom.types.ImportList  tom_empty_list_concImportedModule() { return  tom.gom.adt.gom.types.importlist.EmptyconcImportedModule.make() ; }static private  tom.gom.adt.gom.types.ImportList  tom_cons_list_concImportedModule( tom.gom.adt.gom.types.ImportedModule  e,  tom.gom.adt.gom.types.ImportList  l) { return  tom.gom.adt.gom.types.importlist.ConsconcImportedModule.make(e,l) ; }static private  tom.gom.adt.gom.types.ImportedModule  tom_get_head_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) {  return  l.getHeadconcImportedModule()  ;}static private  tom.gom.adt.gom.types.ImportList  tom_get_tail_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) {  return  l.getTailconcImportedModule()  ;}static private boolean tom_is_empty_concImportedModule_ImportList( tom.gom.adt.gom.types.ImportList  l) {  return  l.isEmptyconcImportedModule()  ;}static private  tom.gom.adt.gom.types.ImportList  tom_append_list_concImportedModule( tom.gom.adt.gom.types.ImportList  l1,  tom.gom.adt.gom.types.ImportList  l2) {    if(tom_is_empty_concImportedModule_ImportList(l1)) {     return l2;    } else if(tom_is_empty_concImportedModule_ImportList(l2)) {     return l1;    } else if(tom_is_empty_concImportedModule_ImportList(( tom.gom.adt.gom.types.ImportList )tom_get_tail_concImportedModule_ImportList(l1))) {     return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(( tom.gom.adt.gom.types.ImportedModule )tom_get_head_concImportedModule_ImportList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(( tom.gom.adt.gom.types.ImportedModule )tom_get_head_concImportedModule_ImportList(l1),tom_append_list_concImportedModule(( tom.gom.adt.gom.types.ImportList )tom_get_tail_concImportedModule_ImportList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.ImportList  tom_get_slice_concImportedModule( tom.gom.adt.gom.types.ImportList  begin,  tom.gom.adt.gom.types.ImportList  end) {    if(tom_terms_equal_ImportList(begin,end)) {      return ( tom.gom.adt.gom.types.ImportList )tom_empty_list_concImportedModule();    } else {      return ( tom.gom.adt.gom.types.ImportList )tom_cons_list_concImportedModule(( tom.gom.adt.gom.types.ImportedModule )tom_get_head_concImportedModule_ImportList(begin),( tom.gom.adt.gom.types.ImportList )tom_get_slice_concImportedModule(( tom.gom.adt.gom.types.ImportList )tom_get_tail_concImportedModule_ImportList(begin),end));    }   }  static private boolean tom_is_fun_sym_concModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  t) {  return  t instanceof tom.gom.adt.gom.types.moduledecllist.ConsconcModuleDecl || t instanceof tom.gom.adt.gom.types.moduledecllist.EmptyconcModuleDecl  ;}static private  tom.gom.adt.gom.types.ModuleDeclList  tom_empty_list_concModuleDecl() { return  tom.gom.adt.gom.types.moduledecllist.EmptyconcModuleDecl.make() ; }static private  tom.gom.adt.gom.types.ModuleDeclList  tom_cons_list_concModuleDecl( tom.gom.adt.gom.types.ModuleDecl  e,  tom.gom.adt.gom.types.ModuleDeclList  l) { return  tom.gom.adt.gom.types.moduledecllist.ConsconcModuleDecl.make(e,l) ; }static private  tom.gom.adt.gom.types.ModuleDecl  tom_get_head_concModuleDecl_ModuleDeclList( tom.gom.adt.gom.types.ModuleDeclList  l) {  return  l.getHeadconcModuleDecl()  ;}static private  tom.gom.adt.gom.types.ModuleDeclList  tom_get_tail_concModuleDecl_ModuleDeclList( tom.gom.adt.gom.types.ModuleDeclList  l) {  return  l.getTailconcModuleDecl()  ;}static private boolean tom_is_empty_concModuleDecl_ModuleDeclList( tom.gom.adt.gom.types.ModuleDeclList  l) {  return  l.isEmptyconcModuleDecl()  ;}static private  tom.gom.adt.gom.types.ModuleDeclList  tom_append_list_concModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  l1,  tom.gom.adt.gom.types.ModuleDeclList  l2) {    if(tom_is_empty_concModuleDecl_ModuleDeclList(l1)) {     return l2;    } else if(tom_is_empty_concModuleDecl_ModuleDeclList(l2)) {     return l1;    } else if(tom_is_empty_concModuleDecl_ModuleDeclList(( tom.gom.adt.gom.types.ModuleDeclList )tom_get_tail_concModuleDecl_ModuleDeclList(l1))) {     return ( tom.gom.adt.gom.types.ModuleDeclList )tom_cons_list_concModuleDecl(( tom.gom.adt.gom.types.ModuleDecl )tom_get_head_concModuleDecl_ModuleDeclList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.ModuleDeclList )tom_cons_list_concModuleDecl(( tom.gom.adt.gom.types.ModuleDecl )tom_get_head_concModuleDecl_ModuleDeclList(l1),tom_append_list_concModuleDecl(( tom.gom.adt.gom.types.ModuleDeclList )tom_get_tail_concModuleDecl_ModuleDeclList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.ModuleDeclList  tom_get_slice_concModuleDecl( tom.gom.adt.gom.types.ModuleDeclList  begin,  tom.gom.adt.gom.types.ModuleDeclList  end) {    if(tom_terms_equal_ModuleDeclList(begin,end)) {      return ( tom.gom.adt.gom.types.ModuleDeclList )tom_empty_list_concModuleDecl();    } else {      return ( tom.gom.adt.gom.types.ModuleDeclList )tom_cons_list_concModuleDecl(( tom.gom.adt.gom.types.ModuleDecl )tom_get_head_concModuleDecl_ModuleDeclList(begin),( tom.gom.adt.gom.types.ModuleDeclList )tom_get_slice_concModuleDecl(( tom.gom.adt.gom.types.ModuleDeclList )tom_get_tail_concModuleDecl_ModuleDeclList(begin),end));    }   }  static private boolean tom_is_fun_sym_concField( tom.gom.adt.gom.types.FieldList  t) {  return  t instanceof tom.gom.adt.gom.types.fieldlist.ConsconcField || t instanceof tom.gom.adt.gom.types.fieldlist.EmptyconcField  ;}static private  tom.gom.adt.gom.types.FieldList  tom_empty_list_concField() { return  tom.gom.adt.gom.types.fieldlist.EmptyconcField.make() ; }static private  tom.gom.adt.gom.types.FieldList  tom_cons_list_concField( tom.gom.adt.gom.types.Field  e,  tom.gom.adt.gom.types.FieldList  l) { return  tom.gom.adt.gom.types.fieldlist.ConsconcField.make(e,l) ; }static private  tom.gom.adt.gom.types.Field  tom_get_head_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) {  return  l.getHeadconcField()  ;}static private  tom.gom.adt.gom.types.FieldList  tom_get_tail_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) {  return  l.getTailconcField()  ;}static private boolean tom_is_empty_concField_FieldList( tom.gom.adt.gom.types.FieldList  l) {  return  l.isEmptyconcField()  ;}static private  tom.gom.adt.gom.types.FieldList  tom_append_list_concField( tom.gom.adt.gom.types.FieldList  l1,  tom.gom.adt.gom.types.FieldList  l2) {    if(tom_is_empty_concField_FieldList(l1)) {     return l2;    } else if(tom_is_empty_concField_FieldList(l2)) {     return l1;    } else if(tom_is_empty_concField_FieldList(( tom.gom.adt.gom.types.FieldList )tom_get_tail_concField_FieldList(l1))) {     return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(( tom.gom.adt.gom.types.Field )tom_get_head_concField_FieldList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(( tom.gom.adt.gom.types.Field )tom_get_head_concField_FieldList(l1),tom_append_list_concField(( tom.gom.adt.gom.types.FieldList )tom_get_tail_concField_FieldList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.FieldList  tom_get_slice_concField( tom.gom.adt.gom.types.FieldList  begin,  tom.gom.adt.gom.types.FieldList  end) {    if(tom_terms_equal_FieldList(begin,end)) {      return ( tom.gom.adt.gom.types.FieldList )tom_empty_list_concField();    } else {      return ( tom.gom.adt.gom.types.FieldList )tom_cons_list_concField(( tom.gom.adt.gom.types.Field )tom_get_head_concField_FieldList(begin),( tom.gom.adt.gom.types.FieldList )tom_get_slice_concField(( tom.gom.adt.gom.types.FieldList )tom_get_tail_concField_FieldList(begin),end));    }   }  static private boolean tom_is_fun_sym_concSort( tom.gom.adt.gom.types.SortList  t) {  return  t instanceof tom.gom.adt.gom.types.sortlist.ConsconcSort || t instanceof tom.gom.adt.gom.types.sortlist.EmptyconcSort  ;}static private  tom.gom.adt.gom.types.SortList  tom_empty_list_concSort() { return  tom.gom.adt.gom.types.sortlist.EmptyconcSort.make() ; }static private  tom.gom.adt.gom.types.SortList  tom_cons_list_concSort( tom.gom.adt.gom.types.Sort  e,  tom.gom.adt.gom.types.SortList  l) { return  tom.gom.adt.gom.types.sortlist.ConsconcSort.make(e,l) ; }static private  tom.gom.adt.gom.types.Sort  tom_get_head_concSort_SortList( tom.gom.adt.gom.types.SortList  l) {  return  l.getHeadconcSort()  ;}static private  tom.gom.adt.gom.types.SortList  tom_get_tail_concSort_SortList( tom.gom.adt.gom.types.SortList  l) {  return  l.getTailconcSort()  ;}static private boolean tom_is_empty_concSort_SortList( tom.gom.adt.gom.types.SortList  l) {  return  l.isEmptyconcSort()  ;}static private  tom.gom.adt.gom.types.SortList  tom_append_list_concSort( tom.gom.adt.gom.types.SortList  l1,  tom.gom.adt.gom.types.SortList  l2) {    if(tom_is_empty_concSort_SortList(l1)) {     return l2;    } else if(tom_is_empty_concSort_SortList(l2)) {     return l1;    } else if(tom_is_empty_concSort_SortList(( tom.gom.adt.gom.types.SortList )tom_get_tail_concSort_SortList(l1))) {     return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(( tom.gom.adt.gom.types.Sort )tom_get_head_concSort_SortList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(( tom.gom.adt.gom.types.Sort )tom_get_head_concSort_SortList(l1),tom_append_list_concSort(( tom.gom.adt.gom.types.SortList )tom_get_tail_concSort_SortList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.SortList  tom_get_slice_concSort( tom.gom.adt.gom.types.SortList  begin,  tom.gom.adt.gom.types.SortList  end) {    if(tom_terms_equal_SortList(begin,end)) {      return ( tom.gom.adt.gom.types.SortList )tom_empty_list_concSort();    } else {      return ( tom.gom.adt.gom.types.SortList )tom_cons_list_concSort(( tom.gom.adt.gom.types.Sort )tom_get_head_concSort_SortList(begin),( tom.gom.adt.gom.types.SortList )tom_get_slice_concSort(( tom.gom.adt.gom.types.SortList )tom_get_tail_concSort_SortList(begin),end));    }   }  static private boolean tom_is_fun_sym_concSlot( tom.gom.adt.gom.types.SlotList  t) {  return  t instanceof tom.gom.adt.gom.types.slotlist.ConsconcSlot || t instanceof tom.gom.adt.gom.types.slotlist.EmptyconcSlot  ;}static private  tom.gom.adt.gom.types.SlotList  tom_empty_list_concSlot() { return  tom.gom.adt.gom.types.slotlist.EmptyconcSlot.make() ; }static private  tom.gom.adt.gom.types.SlotList  tom_cons_list_concSlot( tom.gom.adt.gom.types.Slot  e,  tom.gom.adt.gom.types.SlotList  l) { return  tom.gom.adt.gom.types.slotlist.ConsconcSlot.make(e,l) ; }static private  tom.gom.adt.gom.types.Slot  tom_get_head_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) {  return  l.getHeadconcSlot()  ;}static private  tom.gom.adt.gom.types.SlotList  tom_get_tail_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) {  return  l.getTailconcSlot()  ;}static private boolean tom_is_empty_concSlot_SlotList( tom.gom.adt.gom.types.SlotList  l) {  return  l.isEmptyconcSlot()  ;}static private  tom.gom.adt.gom.types.SlotList  tom_append_list_concSlot( tom.gom.adt.gom.types.SlotList  l1,  tom.gom.adt.gom.types.SlotList  l2) {    if(tom_is_empty_concSlot_SlotList(l1)) {     return l2;    } else if(tom_is_empty_concSlot_SlotList(l2)) {     return l1;    } else if(tom_is_empty_concSlot_SlotList(( tom.gom.adt.gom.types.SlotList )tom_get_tail_concSlot_SlotList(l1))) {     return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(( tom.gom.adt.gom.types.Slot )tom_get_head_concSlot_SlotList(l1),l2);    } else {      return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(( tom.gom.adt.gom.types.Slot )tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(( tom.gom.adt.gom.types.SlotList )tom_get_tail_concSlot_SlotList(l1),l2));    }   }  static private  tom.gom.adt.gom.types.SlotList  tom_get_slice_concSlot( tom.gom.adt.gom.types.SlotList  begin,  tom.gom.adt.gom.types.SlotList  end) {    if(tom_terms_equal_SlotList(begin,end)) {      return ( tom.gom.adt.gom.types.SlotList )tom_empty_list_concSlot();    } else {      return ( tom.gom.adt.gom.types.SlotList )tom_cons_list_concSlot(( tom.gom.adt.gom.types.Slot )tom_get_head_concSlot_SlotList(begin),( tom.gom.adt.gom.types.SlotList )tom_get_slice_concSlot(( tom.gom.adt.gom.types.SlotList )tom_get_tail_concSlot_SlotList(begin),end));    }   }   /* Generated by TOM (version 2.3rc1): Do not edit this file */static private boolean tom_terms_equal_Hook(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_SlotField(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_SlotFieldList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_GomClass(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_ClassName(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_GomClassList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_HookList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_terms_equal_ClassNameList(Object t1, Object t2) {  return  t1.equals(t2)  ;}static private boolean tom_is_fun_sym_MakeBeforeHook( tom.gom.adt.objects.types.Hook  t) {  return  (t!=null) && t.isMakeBeforeHook()  ;}static private  tom.gom.adt.objects.types.Hook  tom_make_MakeBeforeHook( tom.gom.adt.objects.types.SlotFieldList  t0,  String  t1) { return  tom.gom.adt.objects.types.hook.MakeBeforeHook.make(t0, t1); }static private  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_MakeBeforeHook_hookArguments( tom.gom.adt.objects.types.Hook  t) {  return  t.gethookArguments()  ;}static private  String  tom_get_slot_MakeBeforeHook_code( tom.gom.adt.objects.types.Hook  t) {  return  t.getcode()  ;}static private boolean tom_is_fun_sym_MakeHook( tom.gom.adt.objects.types.Hook  t) {  return  (t!=null) && t.isMakeHook()  ;}static private  tom.gom.adt.objects.types.Hook  tom_make_MakeHook( tom.gom.adt.objects.types.SlotFieldList  t0,  String  t1) { return  tom.gom.adt.objects.types.hook.MakeHook.make(t0, t1); }static private  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_MakeHook_hookArguments( tom.gom.adt.objects.types.Hook  t) {  return  t.gethookArguments()  ;}static private  String  tom_get_slot_MakeHook_code( tom.gom.adt.objects.types.Hook  t) {  return  t.getcode()  ;}static private boolean tom_is_fun_sym_SlotField( tom.gom.adt.objects.types.SlotField  t) {  return  (t!=null) && t.isSlotField()  ;}static private  tom.gom.adt.objects.types.SlotField  tom_make_SlotField( String  t0,  tom.gom.adt.objects.types.ClassName  t1) { return  tom.gom.adt.objects.types.slotfield.SlotField.make(t0, t1); }static private  String  tom_get_slot_SlotField_name( tom.gom.adt.objects.types.SlotField  t) {  return  t.getname()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_SlotField_domain( tom.gom.adt.objects.types.SlotField  t) {  return  t.getdomain()  ;}static private boolean tom_is_fun_sym_ConsconcSlotField( tom.gom.adt.objects.types.SlotFieldList  t) {  return  (t!=null) && t.isConsconcSlotField()  ;}static private  tom.gom.adt.objects.types.SlotFieldList  tom_make_ConsconcSlotField( tom.gom.adt.objects.types.SlotField  t0,  tom.gom.adt.objects.types.SlotFieldList  t1) { return  tom.gom.adt.objects.types.slotfieldlist.ConsconcSlotField.make(t0, t1); }static private  tom.gom.adt.objects.types.SlotField  tom_get_slot_ConsconcSlotField_HeadconcSlotField( tom.gom.adt.objects.types.SlotFieldList  t) {  return  t.getHeadconcSlotField()  ;}static private  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_ConsconcSlotField_TailconcSlotField( tom.gom.adt.objects.types.SlotFieldList  t) {  return  t.getTailconcSlotField()  ;}static private boolean tom_is_fun_sym_TomMapping( tom.gom.adt.objects.types.GomClass  t) {  return  (t!=null) && t.isTomMapping()  ;}static private  tom.gom.adt.objects.types.GomClass  tom_make_TomMapping( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.GomClassList  t2,  tom.gom.adt.objects.types.GomClassList  t3) { return  tom.gom.adt.objects.types.gomclass.TomMapping.make(t0, t1, t2, t3); }static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_TomMapping_className( tom.gom.adt.objects.types.GomClass  t) {  return  t.getclassName()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_TomMapping_basicStrategy( tom.gom.adt.objects.types.GomClass  t) {  return  t.getbasicStrategy()  ;}static private  tom.gom.adt.objects.types.GomClassList  tom_get_slot_TomMapping_sortClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getsortClasses()  ;}static private  tom.gom.adt.objects.types.GomClassList  tom_get_slot_TomMapping_operatorClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getoperatorClasses()  ;}static private boolean tom_is_fun_sym_FwdClass( tom.gom.adt.objects.types.GomClass  t) {  return  (t!=null) && t.isFwdClass()  ;}static private  tom.gom.adt.objects.types.GomClass  tom_make_FwdClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.ClassNameList  t2,  tom.gom.adt.objects.types.ClassName  t3,  tom.gom.adt.objects.types.ClassNameList  t4,  tom.gom.adt.objects.types.GomClassList  t5,  tom.gom.adt.objects.types.GomClassList  t6) { return  tom.gom.adt.objects.types.gomclass.FwdClass.make(t0, t1, t2, t3, t4, t5, t6); }static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_FwdClass_className( tom.gom.adt.objects.types.GomClass  t) {  return  t.getclassName()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_FwdClass_visitor( tom.gom.adt.objects.types.GomClass  t) {  return  t.getvisitor()  ;}static private  tom.gom.adt.objects.types.ClassNameList  tom_get_slot_FwdClass_importedVisitors( tom.gom.adt.objects.types.GomClass  t) {  return  t.getimportedVisitors()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_FwdClass_abstractType( tom.gom.adt.objects.types.GomClass  t) {  return  t.getabstractType()  ;}static private  tom.gom.adt.objects.types.ClassNameList  tom_get_slot_FwdClass_importedAbstractTypes( tom.gom.adt.objects.types.GomClass  t) {  return  t.getimportedAbstractTypes()  ;}static private  tom.gom.adt.objects.types.GomClassList  tom_get_slot_FwdClass_sortClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getsortClasses()  ;}static private  tom.gom.adt.objects.types.GomClassList  tom_get_slot_FwdClass_operatorClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getoperatorClasses()  ;}static private boolean tom_is_fun_sym_VisitorClass( tom.gom.adt.objects.types.GomClass  t) {  return  (t!=null) && t.isVisitorClass()  ;}static private  tom.gom.adt.objects.types.GomClass  tom_make_VisitorClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.GomClassList  t1,  tom.gom.adt.objects.types.GomClassList  t2) { return  tom.gom.adt.objects.types.gomclass.VisitorClass.make(t0, t1, t2); }static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_VisitorClass_className( tom.gom.adt.objects.types.GomClass  t) {  return  t.getclassName()  ;}static private  tom.gom.adt.objects.types.GomClassList  tom_get_slot_VisitorClass_sortClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getsortClasses()  ;}static private  tom.gom.adt.objects.types.GomClassList  tom_get_slot_VisitorClass_operatorClasses( tom.gom.adt.objects.types.GomClass  t) {  return  t.getoperatorClasses()  ;}static private boolean tom_is_fun_sym_VariadicOperatorClass( tom.gom.adt.objects.types.GomClass  t) {  return  (t!=null) && t.isVariadicOperatorClass()  ;}static private  tom.gom.adt.objects.types.GomClass  tom_make_VariadicOperatorClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.ClassName  t2,  tom.gom.adt.objects.types.ClassName  t3,  tom.gom.adt.objects.types.ClassName  t4,  tom.gom.adt.objects.types.SlotFieldList  t5,  tom.gom.adt.objects.types.ClassName  t6,  String  t7,  tom.gom.adt.objects.types.HookList  t8) { return  tom.gom.adt.objects.types.gomclass.VariadicOperatorClass.make(t0, t1, t2, t3, t4, t5, t6, t7, t8); }static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_className( tom.gom.adt.objects.types.GomClass  t) {  return  t.getclassName()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_abstractType( tom.gom.adt.objects.types.GomClass  t) {  return  t.getabstractType()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_mapping( tom.gom.adt.objects.types.GomClass  t) {  return  t.getmapping()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_sortName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getsortName()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_visitor( tom.gom.adt.objects.types.GomClass  t) {  return  t.getvisitor()  ;}static private  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_VariadicOperatorClass_slots( tom.gom.adt.objects.types.GomClass  t) {  return  t.getslots()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_VariadicOperatorClass_empty( tom.gom.adt.objects.types.GomClass  t) {  return  t.getempty()  ;}static private  String  tom_get_slot_VariadicOperatorClass_operator( tom.gom.adt.objects.types.GomClass  t) {  return  t.getoperator()  ;}static private  tom.gom.adt.objects.types.HookList  tom_get_slot_VariadicOperatorClass_hooks( tom.gom.adt.objects.types.GomClass  t) {  return  t.gethooks()  ;}static private boolean tom_is_fun_sym_OperatorClass( tom.gom.adt.objects.types.GomClass  t) {  return  (t!=null) && t.isOperatorClass()  ;}static private  tom.gom.adt.objects.types.GomClass  tom_make_OperatorClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.ClassName  t2,  tom.gom.adt.objects.types.ClassName  t3,  tom.gom.adt.objects.types.ClassName  t4,  tom.gom.adt.objects.types.SlotFieldList  t5,  tom.gom.adt.objects.types.HookList  t6) { return  tom.gom.adt.objects.types.gomclass.OperatorClass.make(t0, t1, t2, t3, t4, t5, t6); }static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_className( tom.gom.adt.objects.types.GomClass  t) {  return  t.getclassName()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_abstractType( tom.gom.adt.objects.types.GomClass  t) {  return  t.getabstractType()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_mapping( tom.gom.adt.objects.types.GomClass  t) {  return  t.getmapping()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_sortName( tom.gom.adt.objects.types.GomClass  t) {  return  t.getsortName()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_OperatorClass_visitor( tom.gom.adt.objects.types.GomClass  t) {  return  t.getvisitor()  ;}static private  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_OperatorClass_slots( tom.gom.adt.objects.types.GomClass  t) {  return  t.getslots()  ;}static private  tom.gom.adt.objects.types.HookList  tom_get_slot_OperatorClass_hooks( tom.gom.adt.objects.types.GomClass  t) {  return  t.gethooks()  ;}static private boolean tom_is_fun_sym_SortClass( tom.gom.adt.objects.types.GomClass  t) {  return  (t!=null) && t.isSortClass()  ;}static private  tom.gom.adt.objects.types.GomClass  tom_make_SortClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.ClassName  t2,  tom.gom.adt.objects.types.ClassName  t3,  tom.gom.adt.objects.types.ClassNameList  t4,  tom.gom.adt.objects.types.SlotFieldList  t5) { return  tom.gom.adt.objects.types.gomclass.SortClass.make(t0, t1, t2, t3, t4, t5); }static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_SortClass_className( tom.gom.adt.objects.types.GomClass  t) {  return  t.getclassName()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_SortClass_abstractType( tom.gom.adt.objects.types.GomClass  t) {  return  t.getabstractType()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_SortClass_visitor( tom.gom.adt.objects.types.GomClass  t) {  return  t.getvisitor()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_SortClass_forward( tom.gom.adt.objects.types.GomClass  t) {  return  t.getforward()  ;}static private  tom.gom.adt.objects.types.ClassNameList  tom_get_slot_SortClass_operators( tom.gom.adt.objects.types.GomClass  t) {  return  t.getoperators()  ;}static private  tom.gom.adt.objects.types.SlotFieldList  tom_get_slot_SortClass_slots( tom.gom.adt.objects.types.GomClass  t) {  return  t.getslots()  ;}static private boolean tom_is_fun_sym_AbstractTypeClass( tom.gom.adt.objects.types.GomClass  t) {  return  (t!=null) && t.isAbstractTypeClass()  ;}static private  tom.gom.adt.objects.types.GomClass  tom_make_AbstractTypeClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassName  t1,  tom.gom.adt.objects.types.ClassNameList  t2) { return  tom.gom.adt.objects.types.gomclass.AbstractTypeClass.make(t0, t1, t2); }static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_AbstractTypeClass_className( tom.gom.adt.objects.types.GomClass  t) {  return  t.getclassName()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_AbstractTypeClass_visitor( tom.gom.adt.objects.types.GomClass  t) {  return  t.getvisitor()  ;}static private  tom.gom.adt.objects.types.ClassNameList  tom_get_slot_AbstractTypeClass_sortList( tom.gom.adt.objects.types.GomClass  t) {  return  t.getsortList()  ;}static private boolean tom_is_fun_sym_VisitableFwdClass( tom.gom.adt.objects.types.GomClass  t) {  return  (t!=null) && t.isVisitableFwdClass()  ;}static private  tom.gom.adt.objects.types.GomClass  tom_make_VisitableFwdClass( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.GomClass  t1) { return  tom.gom.adt.objects.types.gomclass.VisitableFwdClass.make(t0, t1); }static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_VisitableFwdClass_className( tom.gom.adt.objects.types.GomClass  t) {  return  t.getclassName()  ;}static private  tom.gom.adt.objects.types.GomClass  tom_get_slot_VisitableFwdClass_fwd( tom.gom.adt.objects.types.GomClass  t) {  return  t.getfwd()  ;}static private boolean tom_is_fun_sym_ClassName( tom.gom.adt.objects.types.ClassName  t) {  return  (t!=null) && t.isClassName()  ;}static private  tom.gom.adt.objects.types.ClassName  tom_make_ClassName( String  t0,  String  t1) { return  tom.gom.adt.objects.types.classname.ClassName.make(t0, t1); }static private  String  tom_get_slot_ClassName_pkg( tom.gom.adt.objects.types.ClassName  t) {  return  t.getpkg()  ;}static private  String  tom_get_slot_ClassName_name( tom.gom.adt.objects.types.ClassName  t) {  return  t.getname()  ;}static private boolean tom_is_fun_sym_ConsconcGomClass( tom.gom.adt.objects.types.GomClassList  t) {  return  (t!=null) && t.isConsconcGomClass()  ;}static private  tom.gom.adt.objects.types.GomClassList  tom_make_ConsconcGomClass( tom.gom.adt.objects.types.GomClass  t0,  tom.gom.adt.objects.types.GomClassList  t1) { return  tom.gom.adt.objects.types.gomclasslist.ConsconcGomClass.make(t0, t1); }static private  tom.gom.adt.objects.types.GomClass  tom_get_slot_ConsconcGomClass_HeadconcGomClass( tom.gom.adt.objects.types.GomClassList  t) {  return  t.getHeadconcGomClass()  ;}static private  tom.gom.adt.objects.types.GomClassList  tom_get_slot_ConsconcGomClass_TailconcGomClass( tom.gom.adt.objects.types.GomClassList  t) {  return  t.getTailconcGomClass()  ;}static private boolean tom_is_fun_sym_ConsconcHook( tom.gom.adt.objects.types.HookList  t) {  return  (t!=null) && t.isConsconcHook()  ;}static private  tom.gom.adt.objects.types.HookList  tom_make_ConsconcHook( tom.gom.adt.objects.types.Hook  t0,  tom.gom.adt.objects.types.HookList  t1) { return  tom.gom.adt.objects.types.hooklist.ConsconcHook.make(t0, t1); }static private  tom.gom.adt.objects.types.Hook  tom_get_slot_ConsconcHook_HeadconcHook( tom.gom.adt.objects.types.HookList  t) {  return  t.getHeadconcHook()  ;}static private  tom.gom.adt.objects.types.HookList  tom_get_slot_ConsconcHook_TailconcHook( tom.gom.adt.objects.types.HookList  t) {  return  t.getTailconcHook()  ;}static private boolean tom_is_fun_sym_ConsconcClassName( tom.gom.adt.objects.types.ClassNameList  t) {  return  (t!=null) && t.isConsconcClassName()  ;}static private  tom.gom.adt.objects.types.ClassNameList  tom_make_ConsconcClassName( tom.gom.adt.objects.types.ClassName  t0,  tom.gom.adt.objects.types.ClassNameList  t1) { return  tom.gom.adt.objects.types.classnamelist.ConsconcClassName.make(t0, t1); }static private  tom.gom.adt.objects.types.ClassName  tom_get_slot_ConsconcClassName_HeadconcClassName( tom.gom.adt.objects.types.ClassNameList  t) {  return  t.getHeadconcClassName()  ;}static private  tom.gom.adt.objects.types.ClassNameList  tom_get_slot_ConsconcClassName_TailconcClassName( tom.gom.adt.objects.types.ClassNameList  t) {  return  t.getTailconcClassName()  ;}static private boolean tom_is_fun_sym_concSlotField( tom.gom.adt.objects.types.SlotFieldList  t) {  return  t instanceof tom.gom.adt.objects.types.slotfieldlist.ConsconcSlotField || t instanceof tom.gom.adt.objects.types.slotfieldlist.EmptyconcSlotField  ;}static private  tom.gom.adt.objects.types.SlotFieldList  tom_empty_list_concSlotField() { return  tom.gom.adt.objects.types.slotfieldlist.EmptyconcSlotField.make() ; }static private  tom.gom.adt.objects.types.SlotFieldList  tom_cons_list_concSlotField( tom.gom.adt.objects.types.SlotField  e,  tom.gom.adt.objects.types.SlotFieldList  l) { return  tom.gom.adt.objects.types.slotfieldlist.ConsconcSlotField.make(e,l) ; }static private  tom.gom.adt.objects.types.SlotField  tom_get_head_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) {  return  l.getHeadconcSlotField()  ;}static private  tom.gom.adt.objects.types.SlotFieldList  tom_get_tail_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) {  return  l.getTailconcSlotField()  ;}static private boolean tom_is_empty_concSlotField_SlotFieldList( tom.gom.adt.objects.types.SlotFieldList  l) {  return  l.isEmptyconcSlotField()  ;}static private  tom.gom.adt.objects.types.SlotFieldList  tom_append_list_concSlotField( tom.gom.adt.objects.types.SlotFieldList  l1,  tom.gom.adt.objects.types.SlotFieldList  l2) {    if(tom_is_empty_concSlotField_SlotFieldList(l1)) {     return l2;    } else if(tom_is_empty_concSlotField_SlotFieldList(l2)) {     return l1;    } else if(tom_is_empty_concSlotField_SlotFieldList(( tom.gom.adt.objects.types.SlotFieldList )tom_get_tail_concSlotField_SlotFieldList(l1))) {     return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(( tom.gom.adt.objects.types.SlotField )tom_get_head_concSlotField_SlotFieldList(l1),l2);    } else {      return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(( tom.gom.adt.objects.types.SlotField )tom_get_head_concSlotField_SlotFieldList(l1),tom_append_list_concSlotField(( tom.gom.adt.objects.types.SlotFieldList )tom_get_tail_concSlotField_SlotFieldList(l1),l2));    }   }  static private  tom.gom.adt.objects.types.SlotFieldList  tom_get_slice_concSlotField( tom.gom.adt.objects.types.SlotFieldList  begin,  tom.gom.adt.objects.types.SlotFieldList  end) {    if(tom_terms_equal_SlotFieldList(begin,end)) {      return ( tom.gom.adt.objects.types.SlotFieldList )tom_empty_list_concSlotField();    } else {      return ( tom.gom.adt.objects.types.SlotFieldList )tom_cons_list_concSlotField(( tom.gom.adt.objects.types.SlotField )tom_get_head_concSlotField_SlotFieldList(begin),( tom.gom.adt.objects.types.SlotFieldList )tom_get_slice_concSlotField(( tom.gom.adt.objects.types.SlotFieldList )tom_get_tail_concSlotField_SlotFieldList(begin),end));    }   }  static private boolean tom_is_fun_sym_concGomClass( tom.gom.adt.objects.types.GomClassList  t) {  return  t instanceof tom.gom.adt.objects.types.gomclasslist.ConsconcGomClass || t instanceof tom.gom.adt.objects.types.gomclasslist.EmptyconcGomClass  ;}static private  tom.gom.adt.objects.types.GomClassList  tom_empty_list_concGomClass() { return  tom.gom.adt.objects.types.gomclasslist.EmptyconcGomClass.make() ; }static private  tom.gom.adt.objects.types.GomClassList  tom_cons_list_concGomClass( tom.gom.adt.objects.types.GomClass  e,  tom.gom.adt.objects.types.GomClassList  l) { return  tom.gom.adt.objects.types.gomclasslist.ConsconcGomClass.make(e,l) ; }static private  tom.gom.adt.objects.types.GomClass  tom_get_head_concGomClass_GomClassList( tom.gom.adt.objects.types.GomClassList  l) {  return  l.getHeadconcGomClass()  ;}static private  tom.gom.adt.objects.types.GomClassList  tom_get_tail_concGomClass_GomClassList( tom.gom.adt.objects.types.GomClassList  l) {  return  l.getTailconcGomClass()  ;}static private boolean tom_is_empty_concGomClass_GomClassList( tom.gom.adt.objects.types.GomClassList  l) {  return  l.isEmptyconcGomClass()  ;}static private  tom.gom.adt.objects.types.GomClassList  tom_append_list_concGomClass( tom.gom.adt.objects.types.GomClassList  l1,  tom.gom.adt.objects.types.GomClassList  l2) {    if(tom_is_empty_concGomClass_GomClassList(l1)) {     return l2;    } else if(tom_is_empty_concGomClass_GomClassList(l2)) {     return l1;    } else if(tom_is_empty_concGomClass_GomClassList(( tom.gom.adt.objects.types.GomClassList )tom_get_tail_concGomClass_GomClassList(l1))) {     return ( tom.gom.adt.objects.types.GomClassList )tom_cons_list_concGomClass(( tom.gom.adt.objects.types.GomClass )tom_get_head_concGomClass_GomClassList(l1),l2);    } else {      return ( tom.gom.adt.objects.types.GomClassList )tom_cons_list_concGomClass(( tom.gom.adt.objects.types.GomClass )tom_get_head_concGomClass_GomClassList(l1),tom_append_list_concGomClass(( tom.gom.adt.objects.types.GomClassList )tom_get_tail_concGomClass_GomClassList(l1),l2));    }   }  static private  tom.gom.adt.objects.types.GomClassList  tom_get_slice_concGomClass( tom.gom.adt.objects.types.GomClassList  begin,  tom.gom.adt.objects.types.GomClassList  end) {    if(tom_terms_equal_GomClassList(begin,end)) {      return ( tom.gom.adt.objects.types.GomClassList )tom_empty_list_concGomClass();    } else {      return ( tom.gom.adt.objects.types.GomClassList )tom_cons_list_concGomClass(( tom.gom.adt.objects.types.GomClass )tom_get_head_concGomClass_GomClassList(begin),( tom.gom.adt.objects.types.GomClassList )tom_get_slice_concGomClass(( tom.gom.adt.objects.types.GomClassList )tom_get_tail_concGomClass_GomClassList(begin),end));    }   }  static private boolean tom_is_fun_sym_concHook( tom.gom.adt.objects.types.HookList  t) {  return  t instanceof tom.gom.adt.objects.types.hooklist.ConsconcHook || t instanceof tom.gom.adt.objects.types.hooklist.EmptyconcHook  ;}static private  tom.gom.adt.objects.types.HookList  tom_empty_list_concHook() { return  tom.gom.adt.objects.types.hooklist.EmptyconcHook.make() ; }static private  tom.gom.adt.objects.types.HookList  tom_cons_list_concHook( tom.gom.adt.objects.types.Hook  e,  tom.gom.adt.objects.types.HookList  l) { return  tom.gom.adt.objects.types.hooklist.ConsconcHook.make(e,l) ; }static private  tom.gom.adt.objects.types.Hook  tom_get_head_concHook_HookList( tom.gom.adt.objects.types.HookList  l) {  return  l.getHeadconcHook()  ;}static private  tom.gom.adt.objects.types.HookList  tom_get_tail_concHook_HookList( tom.gom.adt.objects.types.HookList  l) {  return  l.getTailconcHook()  ;}static private boolean tom_is_empty_concHook_HookList( tom.gom.adt.objects.types.HookList  l) {  return  l.isEmptyconcHook()  ;}static private  tom.gom.adt.objects.types.HookList  tom_append_list_concHook( tom.gom.adt.objects.types.HookList  l1,  tom.gom.adt.objects.types.HookList  l2) {    if(tom_is_empty_concHook_HookList(l1)) {     return l2;    } else if(tom_is_empty_concHook_HookList(l2)) {     return l1;    } else if(tom_is_empty_concHook_HookList(( tom.gom.adt.objects.types.HookList )tom_get_tail_concHook_HookList(l1))) {     return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(( tom.gom.adt.objects.types.Hook )tom_get_head_concHook_HookList(l1),l2);    } else {      return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(( tom.gom.adt.objects.types.Hook )tom_get_head_concHook_HookList(l1),tom_append_list_concHook(( tom.gom.adt.objects.types.HookList )tom_get_tail_concHook_HookList(l1),l2));    }   }  static private  tom.gom.adt.objects.types.HookList  tom_get_slice_concHook( tom.gom.adt.objects.types.HookList  begin,  tom.gom.adt.objects.types.HookList  end) {    if(tom_terms_equal_HookList(begin,end)) {      return ( tom.gom.adt.objects.types.HookList )tom_empty_list_concHook();    } else {      return ( tom.gom.adt.objects.types.HookList )tom_cons_list_concHook(( tom.gom.adt.objects.types.Hook )tom_get_head_concHook_HookList(begin),( tom.gom.adt.objects.types.HookList )tom_get_slice_concHook(( tom.gom.adt.objects.types.HookList )tom_get_tail_concHook_HookList(begin),end));    }   }  static private boolean tom_is_fun_sym_concClassName( tom.gom.adt.objects.types.ClassNameList  t) {  return  t instanceof tom.gom.adt.objects.types.classnamelist.ConsconcClassName || t instanceof tom.gom.adt.objects.types.classnamelist.EmptyconcClassName  ;}static private  tom.gom.adt.objects.types.ClassNameList  tom_empty_list_concClassName() { return  tom.gom.adt.objects.types.classnamelist.EmptyconcClassName.make() ; }static private  tom.gom.adt.objects.types.ClassNameList  tom_cons_list_concClassName( tom.gom.adt.objects.types.ClassName  e,  tom.gom.adt.objects.types.ClassNameList  l) { return  tom.gom.adt.objects.types.classnamelist.ConsconcClassName.make(e,l) ; }static private  tom.gom.adt.objects.types.ClassName  tom_get_head_concClassName_ClassNameList( tom.gom.adt.objects.types.ClassNameList  l) {  return  l.getHeadconcClassName()  ;}static private  tom.gom.adt.objects.types.ClassNameList  tom_get_tail_concClassName_ClassNameList( tom.gom.adt.objects.types.ClassNameList  l) {  return  l.getTailconcClassName()  ;}static private boolean tom_is_empty_concClassName_ClassNameList( tom.gom.adt.objects.types.ClassNameList  l) {  return  l.isEmptyconcClassName()  ;}static private  tom.gom.adt.objects.types.ClassNameList  tom_append_list_concClassName( tom.gom.adt.objects.types.ClassNameList  l1,  tom.gom.adt.objects.types.ClassNameList  l2) {    if(tom_is_empty_concClassName_ClassNameList(l1)) {     return l2;    } else if(tom_is_empty_concClassName_ClassNameList(l2)) {     return l1;    } else if(tom_is_empty_concClassName_ClassNameList(( tom.gom.adt.objects.types.ClassNameList )tom_get_tail_concClassName_ClassNameList(l1))) {     return ( tom.gom.adt.objects.types.ClassNameList )tom_cons_list_concClassName(( tom.gom.adt.objects.types.ClassName )tom_get_head_concClassName_ClassNameList(l1),l2);    } else {      return ( tom.gom.adt.objects.types.ClassNameList )tom_cons_list_concClassName(( tom.gom.adt.objects.types.ClassName )tom_get_head_concClassName_ClassNameList(l1),tom_append_list_concClassName(( tom.gom.adt.objects.types.ClassNameList )tom_get_tail_concClassName_ClassNameList(l1),l2));    }   }  static private  tom.gom.adt.objects.types.ClassNameList  tom_get_slice_concClassName( tom.gom.adt.objects.types.ClassNameList  begin,  tom.gom.adt.objects.types.ClassNameList  end) {    if(tom_terms_equal_ClassNameList(begin,end)) {      return ( tom.gom.adt.objects.types.ClassNameList )tom_empty_list_concClassName();    } else {      return ( tom.gom.adt.objects.types.ClassNameList )tom_cons_list_concClassName(( tom.gom.adt.objects.types.ClassName )tom_get_head_concClassName_ClassNameList(begin),( tom.gom.adt.objects.types.ClassNameList )tom_get_slice_concClassName(( tom.gom.adt.objects.types.ClassNameList )tom_get_tail_concClassName_ClassNameList(begin),end));    }   }   

  /**
   * GomEnvironment uses the Singleton pattern.
   * Unique instance of the GomEnvironment
   */
  private static GomEnvironment instance;

  private GomStreamManager streamManager;
  private String lastGeneratedMapping;
  /**
   * A private constructor method to defeat instantiation
   */
  private GomEnvironment() { 
    initBuiltins();
  }

  /**
   * Part of the Singleton pattern, get the instance or create it.
   * @returns the instance of the GomEnvironment
   */
  public static GomEnvironment getInstance() {
    if(instance == null) {
      instance = new GomEnvironment();
    }
    return instance;
  }

  private Map importedModules = new HashMap();
  // this map is filled by the GomTypeExpander
  public ModuleDeclList getModuleDependency(ModuleDecl module) {
    ModuleDeclList modulesDecl = (ModuleDeclList) importedModules.get(module);
    return modulesDecl;
  }
  public void addModuleDependency(ModuleDecl module, ModuleDeclList imported) {
    importedModules.put(module,imported);
  }
  public void setStreamManager(GomStreamManager stream) {
    this.streamManager = stream;
  }
  public GomStreamManager getStreamManager() {
    return streamManager;
  }

  private Map builtinSorts = new HashMap();
  private void initBuiltins() {
    builtinSorts.put("int",tom_make_ClassName("","int"));
    builtinSorts.put("String",tom_make_ClassName("","String"));
    builtinSorts.put("double",tom_make_ClassName("","double"));
    builtinSorts.put("ATerm",tom_make_ClassName("aterm","ATerm"));
    builtinSorts.put("ATermList",tom_make_ClassName("aterm","ATermList"));
  }
  private Map usedBuiltinSorts = new HashMap();

  /**
   * Check is the argument is a builtin module name
   * Those are not parsed, since they only declare
   * operators for the tom signature, with no support
   */
  public void markUsedBuiltin(String moduleName) {
    if (builtinSorts.containsKey(moduleName)) {
      usedBuiltinSorts.put(moduleName,builtinSorts.get(moduleName));
    } else {
      throw new GomRuntimeException("Not a builtin module: "+moduleName);
    }
  }
  public boolean isBuiltin(String moduleName) {
    return builtinSorts.containsKey(moduleName);
  }
  public boolean isBuiltinSort(String sortName) {
    return usedBuiltinSorts.containsKey(sortName);
  }
  public boolean isBuiltinClass(ClassName className) {
    return usedBuiltinSorts.containsValue(className);
  }
  public SortDecl builtinSort(String sortname) {
    if (isBuiltin(sortname)) {
      return tom_make_BuiltinSortDecl(sortname);
    } else {
      throw new GomRuntimeException("Not a builtin sort: "+sortname);
    }
  }

  public Map builtinSortClassMap() {
    Map sortClass = new HashMap();
    Iterator it = usedBuiltinSorts.keySet().iterator();
    while(it.hasNext()) {
      String name = (String) it.next();
      sortClass.put(tom_make_BuiltinSortDecl(name),(ClassName)usedBuiltinSorts.get(name));
    }
    return sortClass;
  }

  /**
   * Keep track of the file name (full canonical path) of the last Tom mapping
   * Gom generated. This is used to allow Tom to include this mapping when
   * using %gom
   */
  public String getLastGeneratedMapping() {
    return lastGeneratedMapping;
  }

  public void setLastGeneratedMapping(String fileName) {
    lastGeneratedMapping = fileName;
  }
}

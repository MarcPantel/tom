// $ANTLR 2.7.5 (20050128): "HostLanguage.g" -> "HostParser.java"$
/*
 * 
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2006, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/
  
package tom.engine.parser;


import antlr.TokenBuffer;
import antlr.TokenStreamException;
import antlr.TokenStreamIOException;
import antlr.ANTLRException;
import antlr.LLkParser;
import antlr.Token;
import antlr.TokenStream;
import antlr.RecognitionException;
import antlr.NoViableAltException;
import antlr.MismatchedTokenException;
import antlr.SemanticException;
import antlr.ParserSharedInputState;
import antlr.collections.impl.BitSet;

import java.util.HashSet;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.logging.*;
import java.io.*;

import tom.engine.Tom;
import tom.engine.TomStreamManager;
import tom.engine.TomEnvironment;
import tom.engine.TomMessage;
import tom.engine.exception.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.tools.SymbolTable;
import aterm.*;
import antlr.TokenStreamSelector;
import tom.platform.OptionManager;
import tom.platform.PluginPlatform;
import tom.platform.PlatformLogRecord;
import vas.Vas;

public class HostParser extends antlr.LLkParser       implements HostParserTokenTypes
 {

  //--------------------------
    /* Generated by TOM (version 2.3rc0): Do not edit this file *//* Generated by TOM (version 2.3rc0): Do not edit this file *//*  *  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *   **/  /* Generated by TOM (version 2.3rc0): Do not edit this file *//*  *  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *   **/  private  char  tom_set_stamp_char( char  c) {  return  c  ;}private void tom_check_stamp_char( char  c) { ;}private boolean tom_terms_equal_char( char  t1,  char  t2) {  return  (t1==t2)  ;}private  Character  tom_set_stamp_Character( Character  c) {  return  c  ;}private void tom_check_stamp_Character( Character  c) { ;}private boolean tom_terms_equal_Character(Object t1, Object t2) {  return  (t1.equals(t2))  ;}private boolean tom_is_fun_sym_Char( Character  t) {  return  (t!= null) && (t instanceof Character)  ;}private  Character  tom_make_Char( char  c) { return  new Character(c) ; }private  char  tom_get_slot_Char_c( Character  t) {  return  t.charValue()  ;} private  String  tom_set_stamp_String( String  s) {  return  s  ;}private void tom_check_stamp_String( String  s) { ;}private boolean tom_terms_equal_String( String  t1,  String  t2) {  return  (t1.equals(t2))  ;}private boolean tom_is_fun_sym_concString( String  t) {  return  (t!= null) && (t instanceof String)  ;}private  String  tom_empty_list_concString() { return  "" ; }private  String  tom_cons_list_concString( char  c,  String  s) { return  (c+s) ; }private  char  tom_get_head_concString_String( String  s) {  return  s.charAt(0)  ;}private  String  tom_get_tail_concString_String( String  s) {  return  s.substring(1)  ;}private boolean tom_is_empty_concString_String( String  s) {  return  (s.length()==0)  ;}private  String  tom_append_list_concString( String  l1,  String  l2) {    if(tom_is_empty_concString_String(l1)) {     return l2;    } else if(tom_is_empty_concString_String(l2)) {     return l1;    } else if(tom_is_empty_concString_String(( String )tom_get_tail_concString_String(l1))) {     return ( String )tom_cons_list_concString(( char )tom_get_head_concString_String(l1),l2);    } else {      return ( String )tom_cons_list_concString(( char )tom_get_head_concString_String(l1),tom_append_list_concString(( String )tom_get_tail_concString_String(l1),l2));    }   }  private  String  tom_get_slice_concString( String  begin,  String  end) {    if(tom_terms_equal_String(begin,end)) {      return ( String )tom_empty_list_concString();    } else {      return ( String )tom_cons_list_concString(( char )tom_get_head_concString_String(begin),( String )tom_get_slice_concString(( String )tom_get_tail_concString_String(begin),end));    }   }    /* Generated by TOM (version 2.3rc0): Do not edit this file *//*  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  */ private boolean tom_terms_equal_int( int  t1,  int  t2) {  return  (t1==t2)  ;} /* Generated by TOM (version 2.3rc0): Do not edit this file *//*  *  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *   **/  private boolean tom_terms_equal_double( double  t1,  double  t2) {  return  (t1==t2)  ;} /* Generated by TOM (version 2.3rc0): Do not edit this file *//*  *  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *   **/  private boolean tom_terms_equal_ATerm(Object t1, Object t2) {  return  t1 == t2 ;} /* Generated by TOM (version 2.3rc0): Do not edit this file *//*  *  * Copyright (c) 2004-2006, Pierre-Etienne Moreau  * All rights reserved.  *   * Redistribution and use in source and binary forms, with or without  * modification, are permitted provided that the following conditions are  * met:   *  - Redistributions of source code must retain the above copyright  *  notice, this list of conditions and the following disclaimer.    *  - Redistributions in binary form must reproduce the above copyright  *  notice, this list of conditions and the following disclaimer in the  *  documentation and/or other materials provided with the distribution.  *  - Neither the name of the INRIA nor the names of its  *  contributors may be used to endorse or promote products derived from  *  this software without specific prior written permission.  *   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR  * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT  * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  *   **/  private boolean tom_terms_equal_ATermList(Object l1, Object l2) {  return  l1==l2  ;} private  tom.engine.adt.tomsignature.types.Expression tom_get_implementation_Expression( tom.engine.adt.tomsignature.types.Expression t) {  return t ;}private  tom.engine.adt.tomsignature.types.Expression tom_set_stamp_Expression( tom.engine.adt.tomsignature.types.Expression t) {  return (tom.engine.adt.tomsignature.types.Expression)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_Expression( tom.engine.adt.tomsignature.types.Expression t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_Expression(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_GetSliceArray( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isGetSliceArray() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_GetSliceArray( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2,  tom.engine.adt.tomsignature.types.TomTerm t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_GetSliceArray(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetSliceArray_astName( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetSliceArray_subjectListName( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getSubjectListName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetSliceArray_variableBeginAST( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariableBeginAST() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetSliceArray_variableEndAST( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariableEndAST() ;}private boolean tom_is_fun_sym_GetSliceList( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isGetSliceList() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_GetSliceList( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_GetSliceList(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetSliceList_astName( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetSliceList_variableBeginAST( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariableBeginAST() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetSliceList_variableEndAST( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariableEndAST() ;}private boolean tom_is_fun_sym_GetElement( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isGetElement() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_GetElement( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomType t1,  tom.engine.adt.tomsignature.types.TomTerm t2,  tom.engine.adt.tomsignature.types.TomTerm t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_GetElement(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetElement_opname( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getOpname() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_GetElement_codomain( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getCodomain() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetElement_kid1( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getKid1() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetElement_kid2( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getKid2() ;}private boolean tom_is_fun_sym_GetSize( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isGetSize() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_GetSize( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_GetSize(t0, t1); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetSize_opname( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getOpname() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetSize_variable( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariable() ;}private boolean tom_is_fun_sym_AddOne( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isAddOne() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_AddOne( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_AddOne(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_AddOne_variable( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariable() ;}private boolean tom_is_fun_sym_IsEmptyArray( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isIsEmptyArray() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_IsEmptyArray( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_IsEmptyArray(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_IsEmptyArray_opname( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getOpname() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_IsEmptyArray_variable( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_IsEmptyArray_index( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getIndex() ;}private boolean tom_is_fun_sym_IsEmptyList( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isIsEmptyList() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_IsEmptyList( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_IsEmptyList(t0, t1); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_IsEmptyList_opname( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getOpname() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_IsEmptyList_variable( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariable() ;}private boolean tom_is_fun_sym_GetTail( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isGetTail() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_GetTail( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_GetTail(t0, t1); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetTail_opname( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getOpname() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetTail_variable( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariable() ;}private boolean tom_is_fun_sym_GetHead( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isGetHead() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_GetHead( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomType t1,  tom.engine.adt.tomsignature.types.TomTerm t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_GetHead(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetHead_opname( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getOpname() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_GetHead_codomain( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getCodomain() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetHead_variable( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariable() ;}private boolean tom_is_fun_sym_IsFsym( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isIsFsym() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_IsFsym( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_IsFsym(t0, t1); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_IsFsym_astName( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_IsFsym_variable( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariable() ;}private boolean tom_is_fun_sym_GetSlot( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isGetSlot() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_GetSlot( tom.engine.adt.tomsignature.types.TomType t0,  tom.engine.adt.tomsignature.types.TomName t1,  String  t2,  tom.engine.adt.tomsignature.types.TomTerm t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_GetSlot(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_GetSlot_codomain( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getCodomain() ;}private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetSlot_astName( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getAstName() ;}private  String  tom_get_slot_GetSlot_slotNameString( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getSlotNameString() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetSlot_variable( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariable() ;}private boolean tom_is_fun_sym_GetSubterm( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isGetSubterm() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_GetSubterm( tom.engine.adt.tomsignature.types.TomType t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomNumber t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_GetSubterm(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_GetSubterm_codomain( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getCodomain() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetSubterm_variable( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_get_slot_GetSubterm_number( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getNumber() ;}private boolean tom_is_fun_sym_Cast( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isCast() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_Cast( tom.engine.adt.tomsignature.types.TomType t0,  tom.engine.adt.tomsignature.types.Expression t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_Cast(t0, t1); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_Cast_astType( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getAstType() ;}private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_Cast_source( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getSource() ;}private boolean tom_is_fun_sym_EqualTerm( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isEqualTerm() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_EqualTerm( tom.engine.adt.tomsignature.types.TomType t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_EqualTerm(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_EqualTerm_tomType( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getTomType() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_EqualTerm_kid1( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getKid1() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_EqualTerm_kid2( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getKid2() ;}private boolean tom_is_fun_sym_EqualFunctionSymbol( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isEqualFunctionSymbol() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_EqualFunctionSymbol( tom.engine.adt.tomsignature.types.TomType t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_EqualFunctionSymbol(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_EqualFunctionSymbol_astType( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getAstType() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_EqualFunctionSymbol_exp1( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getExp1() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_EqualFunctionSymbol_exp2( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getExp2() ;}private boolean tom_is_fun_sym_FalseTL( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isFalseTL() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_FalseTL() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_FalseTL(); }private boolean tom_is_fun_sym_TrueTL( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isTrueTL() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_TrueTL() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_TrueTL(); }private boolean tom_is_fun_sym_GreaterThan( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isGreaterThan() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_GreaterThan( tom.engine.adt.tomsignature.types.Expression t0,  tom.engine.adt.tomsignature.types.Expression t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_GreaterThan(t0, t1); }private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_GreaterThan_arg1( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getArg1() ;}private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_GreaterThan_arg2( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getArg2() ;}private boolean tom_is_fun_sym_Or( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isOr() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_Or( tom.engine.adt.tomsignature.types.Expression t0,  tom.engine.adt.tomsignature.types.Expression t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_Or(t0, t1); }private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_Or_arg1( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getArg1() ;}private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_Or_arg2( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getArg2() ;}private boolean tom_is_fun_sym_And( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isAnd() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_And( tom.engine.adt.tomsignature.types.Expression t0,  tom.engine.adt.tomsignature.types.Expression t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_And(t0, t1); }private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_And_arg1( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getArg1() ;}private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_And_arg2( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getArg2() ;}private boolean tom_is_fun_sym_Negation( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isNegation() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_Negation( tom.engine.adt.tomsignature.types.Expression t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_Negation(t0); }private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_Negation_arg( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getArg() ;}private boolean tom_is_fun_sym_Bottom( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isBottom() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_Bottom() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_Bottom(); }private boolean tom_is_fun_sym_TomTermToExpression( tom.engine.adt.tomsignature.types.Expression t) {  return  (t!= null) && t.isTomTermToExpression() ;}private  tom.engine.adt.tomsignature.types.Expression tom_make_TomTermToExpression( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeExpression_TomTermToExpression(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_TomTermToExpression_astTerm( tom.engine.adt.tomsignature.types.Expression t) {  return  t.getAstTerm() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_implementation_Instruction( tom.engine.adt.tomsignature.types.Instruction t) {  return t ;}private  tom.engine.adt.tomsignature.types.Instruction tom_set_stamp_Instruction( tom.engine.adt.tomsignature.types.Instruction t) {  return (tom.engine.adt.tomsignature.types.Instruction)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_Instruction( tom.engine.adt.tomsignature.types.Instruction t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_Instruction(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_TypedAction( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isTypedAction() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_TypedAction( tom.engine.adt.tomsignature.types.Instruction t0,  tom.engine.adt.tomsignature.types.Pattern t1,  tom.engine.adt.tomsignature.types.PatternList t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_TypedAction(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_TypedAction_astInstruction( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getAstInstruction() ;}private  tom.engine.adt.tomsignature.types.Pattern tom_get_slot_TypedAction_positivePattern( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getPositivePattern() ;}private  tom.engine.adt.tomsignature.types.PatternList tom_get_slot_TypedAction_negativePatternList( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getNegativePatternList() ;}private boolean tom_is_fun_sym_RawAction( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isRawAction() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_RawAction( tom.engine.adt.tomsignature.types.Instruction t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_RawAction(t0); }private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_RawAction_astInstruction( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getAstInstruction() ;}private boolean tom_is_fun_sym_CheckInstance( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isCheckInstance() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_CheckInstance( tom.engine.adt.tomsignature.types.TomType t0,  tom.engine.adt.tomsignature.types.Expression t1,  tom.engine.adt.tomsignature.types.Instruction t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_CheckInstance(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_CheckInstance_astType( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getAstType() ;}private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_CheckInstance_source( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getSource() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_CheckInstance_instruction( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getInstruction() ;}private boolean tom_is_fun_sym_CheckStamp( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isCheckStamp() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_CheckStamp( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_CheckStamp(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_CheckStamp_variable( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getVariable() ;}private boolean tom_is_fun_sym_MakeFunctionEnd( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isMakeFunctionEnd() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_MakeFunctionEnd() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_MakeFunctionEnd(); }private boolean tom_is_fun_sym_MakeFunctionBegin( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isMakeFunctionBegin() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_MakeFunctionBegin( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_MakeFunctionBegin(t0, t1); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_MakeFunctionBegin_astName( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_MakeFunctionBegin_subjectListAST( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getSubjectListAST() ;}private boolean tom_is_fun_sym_EqualityCondition( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isEqualityCondition() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_EqualityCondition( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.TomTerm t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_EqualityCondition(t0, t1); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_EqualityCondition_lhs( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getLhs() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_EqualityCondition_rhs( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getRhs() ;}private boolean tom_is_fun_sym_TypedEqualityCondition( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isTypedEqualityCondition() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_TypedEqualityCondition( tom.engine.adt.tomsignature.types.TomType t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_TypedEqualityCondition(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_TypedEqualityCondition_tomType( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getTomType() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_TypedEqualityCondition_lhs( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getLhs() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_TypedEqualityCondition_rhs( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getRhs() ;}private boolean tom_is_fun_sym_MatchingCondition( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isMatchingCondition() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_MatchingCondition( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.TomTerm t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_MatchingCondition(t0, t1); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_MatchingCondition_lhs( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getLhs() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_MatchingCondition_rhs( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getRhs() ;}private boolean tom_is_fun_sym_CompiledPattern( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isCompiledPattern() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_CompiledPattern( tom.engine.adt.tomsignature.types.TomList t0,  tom.engine.adt.tomsignature.types.Instruction t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_CompiledPattern(t0, t1); }private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_CompiledPattern_patternList( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getPatternList() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_CompiledPattern_automataInst( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getAutomataInst() ;}private boolean tom_is_fun_sym_CompiledMatch( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isCompiledMatch() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_CompiledMatch( tom.engine.adt.tomsignature.types.Instruction t0,  tom.engine.adt.tomsignature.types.OptionList t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_CompiledMatch(t0, t1); }private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_CompiledMatch_automataInst( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getAutomataInst() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_CompiledMatch_option( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getOption() ;}private boolean tom_is_fun_sym_Match( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isMatch() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_Match( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.PatternInstructionList t1,  tom.engine.adt.tomsignature.types.OptionList t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_Match(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_Match_subjectList( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getSubjectList() ;}private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_get_slot_Match_astPatternInstructionList( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getAstPatternInstructionList() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_Match_option( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getOption() ;}private boolean tom_is_fun_sym_RuleSet( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isRuleSet() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_RuleSet( tom.engine.adt.tomsignature.types.TomRuleList t0,  tom.engine.adt.tomsignature.types.Option t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_RuleSet(t0, t1); }private  tom.engine.adt.tomsignature.types.TomRuleList tom_get_slot_RuleSet_ruleList( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getRuleList() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_RuleSet_orgTrack( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_NamedBlock( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isNamedBlock() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_NamedBlock( String  t0,  tom.engine.adt.tomsignature.types.InstructionList t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_NamedBlock(t0, t1); }private  String  tom_get_slot_NamedBlock_blockName( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getBlockName() ;}private  tom.engine.adt.tomsignature.types.InstructionList tom_get_slot_NamedBlock_instList( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getInstList() ;}private boolean tom_is_fun_sym_UnamedBlock( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isUnamedBlock() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_UnamedBlock( tom.engine.adt.tomsignature.types.InstructionList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_UnamedBlock(t0); }private  tom.engine.adt.tomsignature.types.InstructionList tom_get_slot_UnamedBlock_instList( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getInstList() ;}private boolean tom_is_fun_sym_AbstractBlock( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isAbstractBlock() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_AbstractBlock( tom.engine.adt.tomsignature.types.InstructionList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_AbstractBlock(t0); }private  tom.engine.adt.tomsignature.types.InstructionList tom_get_slot_AbstractBlock_instList( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getInstList() ;}private boolean tom_is_fun_sym_Nop( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isNop() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_Nop() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_Nop(); }private boolean tom_is_fun_sym_Return( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isReturn() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_Return( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_Return(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_Return_kid1( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getKid1() ;}private boolean tom_is_fun_sym_AssignMatchSubject( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isAssignMatchSubject() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_AssignMatchSubject( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.Expression t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_AssignMatchSubject(t0, t1); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_AssignMatchSubject_kid1( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getKid1() ;}private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_AssignMatchSubject_source( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getSource() ;}private boolean tom_is_fun_sym_LetAssign( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isLetAssign() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_LetAssign( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.Expression t1,  tom.engine.adt.tomsignature.types.Instruction t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_LetAssign(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_LetAssign_variable( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_LetAssign_source( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getSource() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_LetAssign_astInstruction( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getAstInstruction() ;}private boolean tom_is_fun_sym_LetRef( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isLetRef() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_LetRef( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.Expression t1,  tom.engine.adt.tomsignature.types.Instruction t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_LetRef(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_LetRef_variable( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_LetRef_source( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getSource() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_LetRef_astInstruction( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getAstInstruction() ;}private boolean tom_is_fun_sym_Let( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isLet() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_Let( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.Expression t1,  tom.engine.adt.tomsignature.types.Instruction t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_Let(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_Let_variable( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_Let_source( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getSource() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_Let_astInstruction( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getAstInstruction() ;}private boolean tom_is_fun_sym_Assign( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isAssign() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_Assign( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.Expression t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_Assign(t0, t1); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_Assign_variable( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_Assign_source( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getSource() ;}private boolean tom_is_fun_sym_WhileDo( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isWhileDo() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_WhileDo( tom.engine.adt.tomsignature.types.Expression t0,  tom.engine.adt.tomsignature.types.Instruction t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_WhileDo(t0, t1); }private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_WhileDo_condition( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getCondition() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_WhileDo_doInst( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getDoInst() ;}private boolean tom_is_fun_sym_DoWhile( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isDoWhile() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_DoWhile( tom.engine.adt.tomsignature.types.Instruction t0,  tom.engine.adt.tomsignature.types.Expression t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_DoWhile(t0, t1); }private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_DoWhile_doInst( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getDoInst() ;}private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_DoWhile_condition( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getCondition() ;}private boolean tom_is_fun_sym_If( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isIf() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_If( tom.engine.adt.tomsignature.types.Expression t0,  tom.engine.adt.tomsignature.types.Instruction t1,  tom.engine.adt.tomsignature.types.Instruction t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_If(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_If_condition( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getCondition() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_If_succesInst( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getSuccesInst() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_If_failureInst( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getFailureInst() ;}private boolean tom_is_fun_sym_TargetLanguageToInstruction( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isTargetLanguageToInstruction() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_TargetLanguageToInstruction( tom.engine.adt.tomsignature.types.TargetLanguage t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_TargetLanguageToInstruction(t0); }private  tom.engine.adt.tomsignature.types.TargetLanguage tom_get_slot_TargetLanguageToInstruction_tl( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getTl() ;}private boolean tom_is_fun_sym_TomTermToInstruction( tom.engine.adt.tomsignature.types.Instruction t) {  return  (t!= null) && t.isTomTermToInstruction() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_make_TomTermToInstruction( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstruction_TomTermToInstruction(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_TomTermToInstruction_tom( tom.engine.adt.tomsignature.types.Instruction t) {  return  t.getTom() ;}private  tom.engine.adt.tomsignature.types.InstructionList tom_get_implementation_InstructionList( tom.engine.adt.tomsignature.types.InstructionList t) {  return t ;}private  tom.engine.adt.tomsignature.types.InstructionList tom_set_stamp_InstructionList( tom.engine.adt.tomsignature.types.InstructionList t) {  return (tom.engine.adt.tomsignature.types.InstructionList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_InstructionList( tom.engine.adt.tomsignature.types.InstructionList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_InstructionList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concInstruction( tom.engine.adt.tomsignature.types.InstructionList t) {  return (t!= null) && t.isSortInstructionList() ;}private  tom.engine.adt.tomsignature.types.InstructionList tom_empty_list_concInstruction() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstructionList(); }private  tom.engine.adt.tomsignature.types.InstructionList tom_cons_list_concInstruction( tom.engine.adt.tomsignature.types.Instruction e,  tom.engine.adt.tomsignature.types.InstructionList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstructionList(e,l); }private  tom.engine.adt.tomsignature.types.Instruction tom_get_head_concInstruction_InstructionList( tom.engine.adt.tomsignature.types.InstructionList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.InstructionList tom_get_tail_concInstruction_InstructionList( tom.engine.adt.tomsignature.types.InstructionList l) {  return l.getTail() ;}private boolean tom_is_empty_concInstruction_InstructionList( tom.engine.adt.tomsignature.types.InstructionList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.InstructionList tom_append_list_concInstruction( tom.engine.adt.tomsignature.types.InstructionList l1,  tom.engine.adt.tomsignature.types.InstructionList l2) {    if(tom_is_empty_concInstruction_InstructionList(l1)) {     return l2;    } else if(tom_is_empty_concInstruction_InstructionList(l2)) {     return l1;    } else if(tom_is_empty_concInstruction_InstructionList(( tom.engine.adt.tomsignature.types.InstructionList)tom_get_tail_concInstruction_InstructionList(l1))) {     return ( tom.engine.adt.tomsignature.types.InstructionList)tom_cons_list_concInstruction(( tom.engine.adt.tomsignature.types.Instruction)tom_get_head_concInstruction_InstructionList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.InstructionList)tom_cons_list_concInstruction(( tom.engine.adt.tomsignature.types.Instruction)tom_get_head_concInstruction_InstructionList(l1),tom_append_list_concInstruction(( tom.engine.adt.tomsignature.types.InstructionList)tom_get_tail_concInstruction_InstructionList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.InstructionList tom_get_slice_concInstruction( tom.engine.adt.tomsignature.types.InstructionList begin,  tom.engine.adt.tomsignature.types.InstructionList end) {    if(tom_terms_equal_InstructionList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.InstructionList)tom_empty_list_concInstruction();    } else {      return ( tom.engine.adt.tomsignature.types.InstructionList)tom_cons_list_concInstruction(( tom.engine.adt.tomsignature.types.Instruction)tom_get_head_concInstruction_InstructionList(begin),( tom.engine.adt.tomsignature.types.InstructionList)tom_get_slice_concInstruction(( tom.engine.adt.tomsignature.types.InstructionList)tom_get_tail_concInstruction_InstructionList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyInstructionList( tom.engine.adt.tomsignature.types.InstructionList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.InstructionList tom_make_emptyInstructionList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstructionList(); }private boolean tom_is_fun_sym_manyInstructionList( tom.engine.adt.tomsignature.types.InstructionList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.InstructionList tom_make_manyInstructionList( tom.engine.adt.tomsignature.types.Instruction e,  tom.engine.adt.tomsignature.types.InstructionList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeInstructionList(e,l); }private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_manyInstructionList_head( tom.engine.adt.tomsignature.types.InstructionList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.InstructionList tom_get_slot_manyInstructionList_tail( tom.engine.adt.tomsignature.types.InstructionList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.NameList tom_get_implementation_NameList( tom.engine.adt.tomsignature.types.NameList t) {  return t ;}private  tom.engine.adt.tomsignature.types.NameList tom_set_stamp_NameList( tom.engine.adt.tomsignature.types.NameList t) {  return (tom.engine.adt.tomsignature.types.NameList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_NameList( tom.engine.adt.tomsignature.types.NameList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_NameList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomsignature.types.NameList t) {  return (t!= null) && t.isSortNameList() ;}private  tom.engine.adt.tomsignature.types.NameList tom_empty_list_concTomName() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeNameList(); }private  tom.engine.adt.tomsignature.types.NameList tom_cons_list_concTomName( tom.engine.adt.tomsignature.types.TomName e,  tom.engine.adt.tomsignature.types.NameList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeNameList(e,l); }private  tom.engine.adt.tomsignature.types.TomName tom_get_head_concTomName_NameList( tom.engine.adt.tomsignature.types.NameList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.NameList tom_get_tail_concTomName_NameList( tom.engine.adt.tomsignature.types.NameList l) {  return l.getTail() ;}private boolean tom_is_empty_concTomName_NameList( tom.engine.adt.tomsignature.types.NameList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.NameList tom_append_list_concTomName( tom.engine.adt.tomsignature.types.NameList l1,  tom.engine.adt.tomsignature.types.NameList l2) {    if(tom_is_empty_concTomName_NameList(l1)) {     return l2;    } else if(tom_is_empty_concTomName_NameList(l2)) {     return l1;    } else if(tom_is_empty_concTomName_NameList(( tom.engine.adt.tomsignature.types.NameList)tom_get_tail_concTomName_NameList(l1))) {     return ( tom.engine.adt.tomsignature.types.NameList)tom_cons_list_concTomName(( tom.engine.adt.tomsignature.types.TomName)tom_get_head_concTomName_NameList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.NameList)tom_cons_list_concTomName(( tom.engine.adt.tomsignature.types.TomName)tom_get_head_concTomName_NameList(l1),tom_append_list_concTomName(( tom.engine.adt.tomsignature.types.NameList)tom_get_tail_concTomName_NameList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.NameList tom_get_slice_concTomName( tom.engine.adt.tomsignature.types.NameList begin,  tom.engine.adt.tomsignature.types.NameList end) {    if(tom_terms_equal_NameList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.NameList)tom_empty_list_concTomName();    } else {      return ( tom.engine.adt.tomsignature.types.NameList)tom_cons_list_concTomName(( tom.engine.adt.tomsignature.types.TomName)tom_get_head_concTomName_NameList(begin),( tom.engine.adt.tomsignature.types.NameList)tom_get_slice_concTomName(( tom.engine.adt.tomsignature.types.NameList)tom_get_tail_concTomName_NameList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyNameList( tom.engine.adt.tomsignature.types.NameList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.NameList tom_make_emptyNameList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeNameList(); }private boolean tom_is_fun_sym_manyNameList( tom.engine.adt.tomsignature.types.NameList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.NameList tom_make_manyNameList( tom.engine.adt.tomsignature.types.TomName e,  tom.engine.adt.tomsignature.types.NameList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeNameList(e,l); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_manyNameList_head( tom.engine.adt.tomsignature.types.NameList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.NameList tom_get_slot_manyNameList_tail( tom.engine.adt.tomsignature.types.NameList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.SymbolList tom_get_implementation_SymbolList( tom.engine.adt.tomsignature.types.SymbolList t) {  return t ;}private  tom.engine.adt.tomsignature.types.SymbolList tom_set_stamp_SymbolList( tom.engine.adt.tomsignature.types.SymbolList t) {  return (tom.engine.adt.tomsignature.types.SymbolList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_SymbolList( tom.engine.adt.tomsignature.types.SymbolList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_SymbolList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concTomSymbol( tom.engine.adt.tomsignature.types.SymbolList t) {  return (t!= null) && t.isSortSymbolList() ;}private  tom.engine.adt.tomsignature.types.SymbolList tom_empty_list_concTomSymbol() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeSymbolList(); }private  tom.engine.adt.tomsignature.types.SymbolList tom_cons_list_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbol e,  tom.engine.adt.tomsignature.types.SymbolList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeSymbolList(e,l); }private  tom.engine.adt.tomsignature.types.TomSymbol tom_get_head_concTomSymbol_SymbolList( tom.engine.adt.tomsignature.types.SymbolList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.SymbolList tom_get_tail_concTomSymbol_SymbolList( tom.engine.adt.tomsignature.types.SymbolList l) {  return l.getTail() ;}private boolean tom_is_empty_concTomSymbol_SymbolList( tom.engine.adt.tomsignature.types.SymbolList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.SymbolList tom_append_list_concTomSymbol( tom.engine.adt.tomsignature.types.SymbolList l1,  tom.engine.adt.tomsignature.types.SymbolList l2) {    if(tom_is_empty_concTomSymbol_SymbolList(l1)) {     return l2;    } else if(tom_is_empty_concTomSymbol_SymbolList(l2)) {     return l1;    } else if(tom_is_empty_concTomSymbol_SymbolList(( tom.engine.adt.tomsignature.types.SymbolList)tom_get_tail_concTomSymbol_SymbolList(l1))) {     return ( tom.engine.adt.tomsignature.types.SymbolList)tom_cons_list_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbol)tom_get_head_concTomSymbol_SymbolList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.SymbolList)tom_cons_list_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbol)tom_get_head_concTomSymbol_SymbolList(l1),tom_append_list_concTomSymbol(( tom.engine.adt.tomsignature.types.SymbolList)tom_get_tail_concTomSymbol_SymbolList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.SymbolList tom_get_slice_concTomSymbol( tom.engine.adt.tomsignature.types.SymbolList begin,  tom.engine.adt.tomsignature.types.SymbolList end) {    if(tom_terms_equal_SymbolList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.SymbolList)tom_empty_list_concTomSymbol();    } else {      return ( tom.engine.adt.tomsignature.types.SymbolList)tom_cons_list_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbol)tom_get_head_concTomSymbol_SymbolList(begin),( tom.engine.adt.tomsignature.types.SymbolList)tom_get_slice_concTomSymbol(( tom.engine.adt.tomsignature.types.SymbolList)tom_get_tail_concTomSymbol_SymbolList(begin),end));    }   }  private boolean tom_is_fun_sym_emptySymbolList( tom.engine.adt.tomsignature.types.SymbolList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.SymbolList tom_make_emptySymbolList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeSymbolList(); }private boolean tom_is_fun_sym_manySymbolList( tom.engine.adt.tomsignature.types.SymbolList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.SymbolList tom_make_manySymbolList( tom.engine.adt.tomsignature.types.TomSymbol e,  tom.engine.adt.tomsignature.types.SymbolList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeSymbolList(e,l); }private  tom.engine.adt.tomsignature.types.TomSymbol tom_get_slot_manySymbolList_head( tom.engine.adt.tomsignature.types.SymbolList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.SymbolList tom_get_slot_manySymbolList_tail( tom.engine.adt.tomsignature.types.SymbolList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.TomEntryList tom_get_implementation_TomEntryList( tom.engine.adt.tomsignature.types.TomEntryList t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomEntryList tom_set_stamp_TomEntryList( tom.engine.adt.tomsignature.types.TomEntryList t) {  return (tom.engine.adt.tomsignature.types.TomEntryList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomEntryList( tom.engine.adt.tomsignature.types.TomEntryList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomEntryList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concTomEntry( tom.engine.adt.tomsignature.types.TomEntryList t) {  return (t!= null) && t.isSortTomEntryList() ;}private  tom.engine.adt.tomsignature.types.TomEntryList tom_empty_list_concTomEntry() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomEntryList(); }private  tom.engine.adt.tomsignature.types.TomEntryList tom_cons_list_concTomEntry( tom.engine.adt.tomsignature.types.TomEntry e,  tom.engine.adt.tomsignature.types.TomEntryList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomEntryList(e,l); }private  tom.engine.adt.tomsignature.types.TomEntry tom_get_head_concTomEntry_TomEntryList( tom.engine.adt.tomsignature.types.TomEntryList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.TomEntryList tom_get_tail_concTomEntry_TomEntryList( tom.engine.adt.tomsignature.types.TomEntryList l) {  return l.getTail() ;}private boolean tom_is_empty_concTomEntry_TomEntryList( tom.engine.adt.tomsignature.types.TomEntryList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomEntryList tom_append_list_concTomEntry( tom.engine.adt.tomsignature.types.TomEntryList l1,  tom.engine.adt.tomsignature.types.TomEntryList l2) {    if(tom_is_empty_concTomEntry_TomEntryList(l1)) {     return l2;    } else if(tom_is_empty_concTomEntry_TomEntryList(l2)) {     return l1;    } else if(tom_is_empty_concTomEntry_TomEntryList(( tom.engine.adt.tomsignature.types.TomEntryList)tom_get_tail_concTomEntry_TomEntryList(l1))) {     return ( tom.engine.adt.tomsignature.types.TomEntryList)tom_cons_list_concTomEntry(( tom.engine.adt.tomsignature.types.TomEntry)tom_get_head_concTomEntry_TomEntryList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.TomEntryList)tom_cons_list_concTomEntry(( tom.engine.adt.tomsignature.types.TomEntry)tom_get_head_concTomEntry_TomEntryList(l1),tom_append_list_concTomEntry(( tom.engine.adt.tomsignature.types.TomEntryList)tom_get_tail_concTomEntry_TomEntryList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.TomEntryList tom_get_slice_concTomEntry( tom.engine.adt.tomsignature.types.TomEntryList begin,  tom.engine.adt.tomsignature.types.TomEntryList end) {    if(tom_terms_equal_TomEntryList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.TomEntryList)tom_empty_list_concTomEntry();    } else {      return ( tom.engine.adt.tomsignature.types.TomEntryList)tom_cons_list_concTomEntry(( tom.engine.adt.tomsignature.types.TomEntry)tom_get_head_concTomEntry_TomEntryList(begin),( tom.engine.adt.tomsignature.types.TomEntryList)tom_get_slice_concTomEntry(( tom.engine.adt.tomsignature.types.TomEntryList)tom_get_tail_concTomEntry_TomEntryList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyTomEntryList( tom.engine.adt.tomsignature.types.TomEntryList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomEntryList tom_make_emptyTomEntryList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomEntryList(); }private boolean tom_is_fun_sym_manyTomEntryList( tom.engine.adt.tomsignature.types.TomEntryList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.TomEntryList tom_make_manyTomEntryList( tom.engine.adt.tomsignature.types.TomEntry e,  tom.engine.adt.tomsignature.types.TomEntryList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomEntryList(e,l); }private  tom.engine.adt.tomsignature.types.TomEntry tom_get_slot_manyTomEntryList_head( tom.engine.adt.tomsignature.types.TomEntryList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.TomEntryList tom_get_slot_manyTomEntryList_tail( tom.engine.adt.tomsignature.types.TomEntryList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.TomVisitList tom_get_implementation_TomVisitList( tom.engine.adt.tomsignature.types.TomVisitList t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomVisitList tom_set_stamp_TomVisitList( tom.engine.adt.tomsignature.types.TomVisitList t) {  return (tom.engine.adt.tomsignature.types.TomVisitList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomVisitList( tom.engine.adt.tomsignature.types.TomVisitList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomVisitList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concTomVisit( tom.engine.adt.tomsignature.types.TomVisitList t) {  return (t!= null) && t.isSortTomVisitList() ;}private  tom.engine.adt.tomsignature.types.TomVisitList tom_empty_list_concTomVisit() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomVisitList(); }private  tom.engine.adt.tomsignature.types.TomVisitList tom_cons_list_concTomVisit( tom.engine.adt.tomsignature.types.TomVisit e,  tom.engine.adt.tomsignature.types.TomVisitList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomVisitList(e,l); }private  tom.engine.adt.tomsignature.types.TomVisit tom_get_head_concTomVisit_TomVisitList( tom.engine.adt.tomsignature.types.TomVisitList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.TomVisitList tom_get_tail_concTomVisit_TomVisitList( tom.engine.adt.tomsignature.types.TomVisitList l) {  return l.getTail() ;}private boolean tom_is_empty_concTomVisit_TomVisitList( tom.engine.adt.tomsignature.types.TomVisitList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomVisitList tom_append_list_concTomVisit( tom.engine.adt.tomsignature.types.TomVisitList l1,  tom.engine.adt.tomsignature.types.TomVisitList l2) {    if(tom_is_empty_concTomVisit_TomVisitList(l1)) {     return l2;    } else if(tom_is_empty_concTomVisit_TomVisitList(l2)) {     return l1;    } else if(tom_is_empty_concTomVisit_TomVisitList(( tom.engine.adt.tomsignature.types.TomVisitList)tom_get_tail_concTomVisit_TomVisitList(l1))) {     return ( tom.engine.adt.tomsignature.types.TomVisitList)tom_cons_list_concTomVisit(( tom.engine.adt.tomsignature.types.TomVisit)tom_get_head_concTomVisit_TomVisitList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.TomVisitList)tom_cons_list_concTomVisit(( tom.engine.adt.tomsignature.types.TomVisit)tom_get_head_concTomVisit_TomVisitList(l1),tom_append_list_concTomVisit(( tom.engine.adt.tomsignature.types.TomVisitList)tom_get_tail_concTomVisit_TomVisitList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.TomVisitList tom_get_slice_concTomVisit( tom.engine.adt.tomsignature.types.TomVisitList begin,  tom.engine.adt.tomsignature.types.TomVisitList end) {    if(tom_terms_equal_TomVisitList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.TomVisitList)tom_empty_list_concTomVisit();    } else {      return ( tom.engine.adt.tomsignature.types.TomVisitList)tom_cons_list_concTomVisit(( tom.engine.adt.tomsignature.types.TomVisit)tom_get_head_concTomVisit_TomVisitList(begin),( tom.engine.adt.tomsignature.types.TomVisitList)tom_get_slice_concTomVisit(( tom.engine.adt.tomsignature.types.TomVisitList)tom_get_tail_concTomVisit_TomVisitList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyTomVisitList( tom.engine.adt.tomsignature.types.TomVisitList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomVisitList tom_make_emptyTomVisitList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomVisitList(); }private boolean tom_is_fun_sym_manyTomVisitList( tom.engine.adt.tomsignature.types.TomVisitList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.TomVisitList tom_make_manyTomVisitList( tom.engine.adt.tomsignature.types.TomVisit e,  tom.engine.adt.tomsignature.types.TomVisitList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomVisitList(e,l); }private  tom.engine.adt.tomsignature.types.TomVisit tom_get_slot_manyTomVisitList_head( tom.engine.adt.tomsignature.types.TomVisitList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.TomVisitList tom_get_slot_manyTomVisitList_tail( tom.engine.adt.tomsignature.types.TomVisitList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.TomRuleList tom_get_implementation_TomRuleList( tom.engine.adt.tomsignature.types.TomRuleList t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomRuleList tom_set_stamp_TomRuleList( tom.engine.adt.tomsignature.types.TomRuleList t) {  return (tom.engine.adt.tomsignature.types.TomRuleList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomRuleList( tom.engine.adt.tomsignature.types.TomRuleList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomRuleList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concTomRule( tom.engine.adt.tomsignature.types.TomRuleList t) {  return (t!= null) && t.isSortTomRuleList() ;}private  tom.engine.adt.tomsignature.types.TomRuleList tom_empty_list_concTomRule() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomRuleList(); }private  tom.engine.adt.tomsignature.types.TomRuleList tom_cons_list_concTomRule( tom.engine.adt.tomsignature.types.TomRule e,  tom.engine.adt.tomsignature.types.TomRuleList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomRuleList(e,l); }private  tom.engine.adt.tomsignature.types.TomRule tom_get_head_concTomRule_TomRuleList( tom.engine.adt.tomsignature.types.TomRuleList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.TomRuleList tom_get_tail_concTomRule_TomRuleList( tom.engine.adt.tomsignature.types.TomRuleList l) {  return l.getTail() ;}private boolean tom_is_empty_concTomRule_TomRuleList( tom.engine.adt.tomsignature.types.TomRuleList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomRuleList tom_append_list_concTomRule( tom.engine.adt.tomsignature.types.TomRuleList l1,  tom.engine.adt.tomsignature.types.TomRuleList l2) {    if(tom_is_empty_concTomRule_TomRuleList(l1)) {     return l2;    } else if(tom_is_empty_concTomRule_TomRuleList(l2)) {     return l1;    } else if(tom_is_empty_concTomRule_TomRuleList(( tom.engine.adt.tomsignature.types.TomRuleList)tom_get_tail_concTomRule_TomRuleList(l1))) {     return ( tom.engine.adt.tomsignature.types.TomRuleList)tom_cons_list_concTomRule(( tom.engine.adt.tomsignature.types.TomRule)tom_get_head_concTomRule_TomRuleList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.TomRuleList)tom_cons_list_concTomRule(( tom.engine.adt.tomsignature.types.TomRule)tom_get_head_concTomRule_TomRuleList(l1),tom_append_list_concTomRule(( tom.engine.adt.tomsignature.types.TomRuleList)tom_get_tail_concTomRule_TomRuleList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.TomRuleList tom_get_slice_concTomRule( tom.engine.adt.tomsignature.types.TomRuleList begin,  tom.engine.adt.tomsignature.types.TomRuleList end) {    if(tom_terms_equal_TomRuleList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.TomRuleList)tom_empty_list_concTomRule();    } else {      return ( tom.engine.adt.tomsignature.types.TomRuleList)tom_cons_list_concTomRule(( tom.engine.adt.tomsignature.types.TomRule)tom_get_head_concTomRule_TomRuleList(begin),( tom.engine.adt.tomsignature.types.TomRuleList)tom_get_slice_concTomRule(( tom.engine.adt.tomsignature.types.TomRuleList)tom_get_tail_concTomRule_TomRuleList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyTomRuleList( tom.engine.adt.tomsignature.types.TomRuleList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomRuleList tom_make_emptyTomRuleList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomRuleList(); }private boolean tom_is_fun_sym_manyTomRuleList( tom.engine.adt.tomsignature.types.TomRuleList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.TomRuleList tom_make_manyTomRuleList( tom.engine.adt.tomsignature.types.TomRule e,  tom.engine.adt.tomsignature.types.TomRuleList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomRuleList(e,l); }private  tom.engine.adt.tomsignature.types.TomRule tom_get_slot_manyTomRuleList_head( tom.engine.adt.tomsignature.types.TomRuleList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.TomRuleList tom_get_slot_manyTomRuleList_tail( tom.engine.adt.tomsignature.types.TomRuleList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.TomStructureTable tom_get_implementation_TomStructureTable( tom.engine.adt.tomsignature.types.TomStructureTable t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomStructureTable tom_set_stamp_TomStructureTable( tom.engine.adt.tomsignature.types.TomStructureTable t) {  return (tom.engine.adt.tomsignature.types.TomStructureTable)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomStructureTable( tom.engine.adt.tomsignature.types.TomStructureTable t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomStructureTable(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_StructTable( tom.engine.adt.tomsignature.types.TomStructureTable t) {  return  (t!= null) && t.isStructTable() ;}private  tom.engine.adt.tomsignature.types.TomStructureTable tom_make_StructTable( tom.engine.adt.tomsignature.types.TomList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomStructureTable_StructTable(t0); }private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_StructTable_structList( tom.engine.adt.tomsignature.types.TomStructureTable t) {  return  t.getStructList() ;}private  tom.engine.adt.tomsignature.types.TomEntry tom_get_implementation_TomEntry( tom.engine.adt.tomsignature.types.TomEntry t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomEntry tom_set_stamp_TomEntry( tom.engine.adt.tomsignature.types.TomEntry t) {  return (tom.engine.adt.tomsignature.types.TomEntry)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomEntry( tom.engine.adt.tomsignature.types.TomEntry t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomEntry(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_Entry( tom.engine.adt.tomsignature.types.TomEntry t) {  return  (t!= null) && t.isEntry() ;}private  tom.engine.adt.tomsignature.types.TomEntry tom_make_Entry( String  t0,  tom.engine.adt.tomsignature.types.TomSymbol t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomEntry_Entry(t0, t1); }private  String  tom_get_slot_Entry_strName( tom.engine.adt.tomsignature.types.TomEntry t) {  return  t.getStrName() ;}private  tom.engine.adt.tomsignature.types.TomSymbol tom_get_slot_Entry_astSymbol( tom.engine.adt.tomsignature.types.TomEntry t) {  return  t.getAstSymbol() ;}private  tom.engine.adt.tomsignature.types.TomSymbolTable tom_get_implementation_TomSymbolTable( tom.engine.adt.tomsignature.types.TomSymbolTable t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomSymbolTable tom_set_stamp_TomSymbolTable( tom.engine.adt.tomsignature.types.TomSymbolTable t) {  return (tom.engine.adt.tomsignature.types.TomSymbolTable)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomSymbolTable( tom.engine.adt.tomsignature.types.TomSymbolTable t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomSymbolTable(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_Table( tom.engine.adt.tomsignature.types.TomSymbolTable t) {  return  (t!= null) && t.isTable() ;}private  tom.engine.adt.tomsignature.types.TomSymbolTable tom_make_Table( tom.engine.adt.tomsignature.types.TomEntryList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomSymbolTable_Table(t0); }private  tom.engine.adt.tomsignature.types.TomEntryList tom_get_slot_Table_entryList( tom.engine.adt.tomsignature.types.TomSymbolTable t) {  return  t.getEntryList() ;}private  tom.engine.adt.tomsignature.types.TomSymbol tom_get_implementation_TomSymbol( tom.engine.adt.tomsignature.types.TomSymbol t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomSymbol tom_set_stamp_TomSymbol( tom.engine.adt.tomsignature.types.TomSymbol t) {  return (tom.engine.adt.tomsignature.types.TomSymbol)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomSymbol( tom.engine.adt.tomsignature.types.TomSymbol t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomSymbol(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_Symbol( tom.engine.adt.tomsignature.types.TomSymbol t) {  return  (t!= null) && t.isSymbol() ;}private  tom.engine.adt.tomsignature.types.TomSymbol tom_make_Symbol( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomType t1,  tom.engine.adt.tomsignature.types.PairNameDeclList t2,  tom.engine.adt.tomsignature.types.OptionList t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomSymbol_Symbol(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_Symbol_astName( tom.engine.adt.tomsignature.types.TomSymbol t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_Symbol_typesToType( tom.engine.adt.tomsignature.types.TomSymbol t) {  return  t.getTypesToType() ;}private  tom.engine.adt.tomsignature.types.PairNameDeclList tom_get_slot_Symbol_pairNameDeclList( tom.engine.adt.tomsignature.types.TomSymbol t) {  return  t.getPairNameDeclList() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_Symbol_option( tom.engine.adt.tomsignature.types.TomSymbol t) {  return  t.getOption() ;}private boolean tom_is_fun_sym_emptySymbol( tom.engine.adt.tomsignature.types.TomSymbol t) {  return  (t!= null) && t.isEmptySymbol() ;}private  tom.engine.adt.tomsignature.types.TomSymbol tom_make_emptySymbol() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomSymbol_EmptySymbol(); }private  tom.engine.adt.tomsignature.types.TomVisit tom_get_implementation_TomVisit( tom.engine.adt.tomsignature.types.TomVisit t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomVisit tom_set_stamp_TomVisit( tom.engine.adt.tomsignature.types.TomVisit t) {  return (tom.engine.adt.tomsignature.types.TomVisit)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomVisit( tom.engine.adt.tomsignature.types.TomVisit t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomVisit(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_VisitTerm( tom.engine.adt.tomsignature.types.TomVisit t) {  return  (t!= null) && t.isVisitTerm() ;}private  tom.engine.adt.tomsignature.types.TomVisit tom_make_VisitTerm( tom.engine.adt.tomsignature.types.TomType t0,  tom.engine.adt.tomsignature.types.PatternInstructionList t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomVisit_VisitTerm(t0, t1); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_VisitTerm_vNode( tom.engine.adt.tomsignature.types.TomVisit t) {  return  t.getVNode() ;}private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_get_slot_VisitTerm_astPatternInstructionList( tom.engine.adt.tomsignature.types.TomVisit t) {  return  t.getAstPatternInstructionList() ;}private  tom.engine.adt.tomsignature.types.TomRule tom_get_implementation_TomRule( tom.engine.adt.tomsignature.types.TomRule t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomRule tom_set_stamp_TomRule( tom.engine.adt.tomsignature.types.TomRule t) {  return (tom.engine.adt.tomsignature.types.TomRule)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomRule( tom.engine.adt.tomsignature.types.TomRule t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomRule(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_RewriteRule( tom.engine.adt.tomsignature.types.TomRule t) {  return  (t!= null) && t.isRewriteRule() ;}private  tom.engine.adt.tomsignature.types.TomRule tom_make_RewriteRule( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.InstructionList t2,  tom.engine.adt.tomsignature.types.OptionList t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomRule_RewriteRule(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_RewriteRule_lhs( tom.engine.adt.tomsignature.types.TomRule t) {  return  t.getLhs() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_RewriteRule_rhs( tom.engine.adt.tomsignature.types.TomRule t) {  return  t.getRhs() ;}private  tom.engine.adt.tomsignature.types.InstructionList tom_get_slot_RewriteRule_condList( tom.engine.adt.tomsignature.types.TomRule t) {  return  t.getCondList() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_RewriteRule_option( tom.engine.adt.tomsignature.types.TomRule t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.Position tom_get_implementation_Position( tom.engine.adt.tomsignature.types.Position t) {  return t ;}private  tom.engine.adt.tomsignature.types.Position tom_set_stamp_Position( tom.engine.adt.tomsignature.types.Position t) {  return (tom.engine.adt.tomsignature.types.Position)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_Position( tom.engine.adt.tomsignature.types.Position t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_Position(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_TextPosition( tom.engine.adt.tomsignature.types.Position t) {  return  (t!= null) && t.isTextPosition() ;}private  tom.engine.adt.tomsignature.types.Position tom_make_TextPosition( int  t0,  int  t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePosition_TextPosition(t0, t1); }private  int  tom_get_slot_TextPosition_line( tom.engine.adt.tomsignature.types.Position t) {  return  t.getLine() ;}private  int  tom_get_slot_TextPosition_column( tom.engine.adt.tomsignature.types.Position t) {  return  t.getColumn() ;}private  tom.engine.adt.tomsignature.types.TargetLanguage tom_get_implementation_TargetLanguage( tom.engine.adt.tomsignature.types.TargetLanguage t) {  return t ;}private  tom.engine.adt.tomsignature.types.TargetLanguage tom_set_stamp_TargetLanguage( tom.engine.adt.tomsignature.types.TargetLanguage t) {  return (tom.engine.adt.tomsignature.types.TargetLanguage)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TargetLanguage( tom.engine.adt.tomsignature.types.TargetLanguage t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TargetLanguage(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_noTL( tom.engine.adt.tomsignature.types.TargetLanguage t) {  return  (t!= null) && t.isNoTL() ;}private  tom.engine.adt.tomsignature.types.TargetLanguage tom_make_noTL() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTargetLanguage_NoTL(); }private boolean tom_is_fun_sym_Comment( tom.engine.adt.tomsignature.types.TargetLanguage t) {  return  (t!= null) && t.isComment() ;}private  tom.engine.adt.tomsignature.types.TargetLanguage tom_make_Comment( String  t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTargetLanguage_Comment(t0); }private  String  tom_get_slot_Comment_code( tom.engine.adt.tomsignature.types.TargetLanguage t) {  return  t.getCode() ;}private boolean tom_is_fun_sym_ITL( tom.engine.adt.tomsignature.types.TargetLanguage t) {  return  (t!= null) && t.isITL() ;}private  tom.engine.adt.tomsignature.types.TargetLanguage tom_make_ITL( String  t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTargetLanguage_ITL(t0); }private  String  tom_get_slot_ITL_code( tom.engine.adt.tomsignature.types.TargetLanguage t) {  return  t.getCode() ;}private boolean tom_is_fun_sym_TL( tom.engine.adt.tomsignature.types.TargetLanguage t) {  return  (t!= null) && t.isTL() ;}private  tom.engine.adt.tomsignature.types.TargetLanguage tom_make_TL( String  t0,  tom.engine.adt.tomsignature.types.Position t1,  tom.engine.adt.tomsignature.types.Position t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTargetLanguage_TL(t0, t1, t2); }private  String  tom_get_slot_TL_code( tom.engine.adt.tomsignature.types.TargetLanguage t) {  return  t.getCode() ;}private  tom.engine.adt.tomsignature.types.Position tom_get_slot_TL_start( tom.engine.adt.tomsignature.types.TargetLanguage t) {  return  t.getStart() ;}private  tom.engine.adt.tomsignature.types.Position tom_get_slot_TL_end( tom.engine.adt.tomsignature.types.TargetLanguage t) {  return  t.getEnd() ;}private  tom.engine.adt.tomsignature.types.TomNumberList tom_get_implementation_TomNumberList( tom.engine.adt.tomsignature.types.TomNumberList t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomNumberList tom_set_stamp_TomNumberList( tom.engine.adt.tomsignature.types.TomNumberList t) {  return (tom.engine.adt.tomsignature.types.TomNumberList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomNumberList( tom.engine.adt.tomsignature.types.TomNumberList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomNumberList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concTomNumber( tom.engine.adt.tomsignature.types.TomNumberList t) {  return (t!= null) && t.isSortTomNumberList() ;}private  tom.engine.adt.tomsignature.types.TomNumberList tom_empty_list_concTomNumber() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumberList(); }private  tom.engine.adt.tomsignature.types.TomNumberList tom_cons_list_concTomNumber( tom.engine.adt.tomsignature.types.TomNumber e,  tom.engine.adt.tomsignature.types.TomNumberList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumberList(e,l); }private  tom.engine.adt.tomsignature.types.TomNumber tom_get_head_concTomNumber_TomNumberList( tom.engine.adt.tomsignature.types.TomNumberList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.TomNumberList tom_get_tail_concTomNumber_TomNumberList( tom.engine.adt.tomsignature.types.TomNumberList l) {  return l.getTail() ;}private boolean tom_is_empty_concTomNumber_TomNumberList( tom.engine.adt.tomsignature.types.TomNumberList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomNumberList tom_append_list_concTomNumber( tom.engine.adt.tomsignature.types.TomNumberList l1,  tom.engine.adt.tomsignature.types.TomNumberList l2) {    if(tom_is_empty_concTomNumber_TomNumberList(l1)) {     return l2;    } else if(tom_is_empty_concTomNumber_TomNumberList(l2)) {     return l1;    } else if(tom_is_empty_concTomNumber_TomNumberList(( tom.engine.adt.tomsignature.types.TomNumberList)tom_get_tail_concTomNumber_TomNumberList(l1))) {     return ( tom.engine.adt.tomsignature.types.TomNumberList)tom_cons_list_concTomNumber(( tom.engine.adt.tomsignature.types.TomNumber)tom_get_head_concTomNumber_TomNumberList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.TomNumberList)tom_cons_list_concTomNumber(( tom.engine.adt.tomsignature.types.TomNumber)tom_get_head_concTomNumber_TomNumberList(l1),tom_append_list_concTomNumber(( tom.engine.adt.tomsignature.types.TomNumberList)tom_get_tail_concTomNumber_TomNumberList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.TomNumberList tom_get_slice_concTomNumber( tom.engine.adt.tomsignature.types.TomNumberList begin,  tom.engine.adt.tomsignature.types.TomNumberList end) {    if(tom_terms_equal_TomNumberList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.TomNumberList)tom_empty_list_concTomNumber();    } else {      return ( tom.engine.adt.tomsignature.types.TomNumberList)tom_cons_list_concTomNumber(( tom.engine.adt.tomsignature.types.TomNumber)tom_get_head_concTomNumber_TomNumberList(begin),( tom.engine.adt.tomsignature.types.TomNumberList)tom_get_slice_concTomNumber(( tom.engine.adt.tomsignature.types.TomNumberList)tom_get_tail_concTomNumber_TomNumberList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyTomNumberList( tom.engine.adt.tomsignature.types.TomNumberList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomNumberList tom_make_emptyTomNumberList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumberList(); }private boolean tom_is_fun_sym_manyTomNumberList( tom.engine.adt.tomsignature.types.TomNumberList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.TomNumberList tom_make_manyTomNumberList( tom.engine.adt.tomsignature.types.TomNumber e,  tom.engine.adt.tomsignature.types.TomNumberList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumberList(e,l); }private  tom.engine.adt.tomsignature.types.TomNumber tom_get_slot_manyTomNumberList_head( tom.engine.adt.tomsignature.types.TomNumberList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.TomNumberList tom_get_slot_manyTomNumberList_tail( tom.engine.adt.tomsignature.types.TomNumberList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_get_implementation_TomNumber( tom.engine.adt.tomsignature.types.TomNumber t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_set_stamp_TomNumber( tom.engine.adt.tomsignature.types.TomNumber t) {  return (tom.engine.adt.tomsignature.types.TomNumber)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomNumber( tom.engine.adt.tomsignature.types.TomNumber t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomNumber(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_RuleVar( tom.engine.adt.tomsignature.types.TomNumber t) {  return  (t!= null) && t.isRuleVar() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_make_RuleVar() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumber_RuleVar(); }private boolean tom_is_fun_sym_NameNumber( tom.engine.adt.tomsignature.types.TomNumber t) {  return  (t!= null) && t.isNameNumber() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_make_NameNumber( tom.engine.adt.tomsignature.types.TomName t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumber_NameNumber(t0); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_NameNumber_astName( tom.engine.adt.tomsignature.types.TomNumber t) {  return  t.getAstName() ;}private boolean tom_is_fun_sym_RenamedVar( tom.engine.adt.tomsignature.types.TomNumber t) {  return  (t!= null) && t.isRenamedVar() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_make_RenamedVar( tom.engine.adt.tomsignature.types.TomName t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumber_RenamedVar(t0); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_RenamedVar_astName( tom.engine.adt.tomsignature.types.TomNumber t) {  return  t.getAstName() ;}private boolean tom_is_fun_sym_AbsVar( tom.engine.adt.tomsignature.types.TomNumber t) {  return  (t!= null) && t.isAbsVar() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_make_AbsVar( tom.engine.adt.tomsignature.types.TomNumber t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumber_AbsVar(t0); }private  tom.engine.adt.tomsignature.types.TomNumber tom_get_slot_AbsVar_number( tom.engine.adt.tomsignature.types.TomNumber t) {  return  t.getNumber() ;}private boolean tom_is_fun_sym_Number( tom.engine.adt.tomsignature.types.TomNumber t) {  return  (t!= null) && t.isNumber() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_make_Number( int  t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumber_Number(t0); }private  int  tom_get_slot_Number_integer( tom.engine.adt.tomsignature.types.TomNumber t) {  return  t.getInteger() ;}private boolean tom_is_fun_sym_End( tom.engine.adt.tomsignature.types.TomNumber t) {  return  (t!= null) && t.isEnd() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_make_End( tom.engine.adt.tomsignature.types.TomNumber t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumber_End(t0); }private  tom.engine.adt.tomsignature.types.TomNumber tom_get_slot_End_number( tom.engine.adt.tomsignature.types.TomNumber t) {  return  t.getNumber() ;}private boolean tom_is_fun_sym_Begin( tom.engine.adt.tomsignature.types.TomNumber t) {  return  (t!= null) && t.isBegin() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_make_Begin( tom.engine.adt.tomsignature.types.TomNumber t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumber_Begin(t0); }private  tom.engine.adt.tomsignature.types.TomNumber tom_get_slot_Begin_number( tom.engine.adt.tomsignature.types.TomNumber t) {  return  t.getNumber() ;}private boolean tom_is_fun_sym_IndexNumber( tom.engine.adt.tomsignature.types.TomNumber t) {  return  (t!= null) && t.isIndexNumber() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_make_IndexNumber( tom.engine.adt.tomsignature.types.TomNumber t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumber_IndexNumber(t0); }private  tom.engine.adt.tomsignature.types.TomNumber tom_get_slot_IndexNumber_number( tom.engine.adt.tomsignature.types.TomNumber t) {  return  t.getNumber() ;}private boolean tom_is_fun_sym_ListNumber( tom.engine.adt.tomsignature.types.TomNumber t) {  return  (t!= null) && t.isListNumber() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_make_ListNumber( tom.engine.adt.tomsignature.types.TomNumber t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumber_ListNumber(t0); }private  tom.engine.adt.tomsignature.types.TomNumber tom_get_slot_ListNumber_number( tom.engine.adt.tomsignature.types.TomNumber t) {  return  t.getNumber() ;}private boolean tom_is_fun_sym_PatternNumber( tom.engine.adt.tomsignature.types.TomNumber t) {  return  (t!= null) && t.isPatternNumber() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_make_PatternNumber( tom.engine.adt.tomsignature.types.TomNumber t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumber_PatternNumber(t0); }private  tom.engine.adt.tomsignature.types.TomNumber tom_get_slot_PatternNumber_number( tom.engine.adt.tomsignature.types.TomNumber t) {  return  t.getNumber() ;}private boolean tom_is_fun_sym_MatchNumber( tom.engine.adt.tomsignature.types.TomNumber t) {  return  (t!= null) && t.isMatchNumber() ;}private  tom.engine.adt.tomsignature.types.TomNumber tom_make_MatchNumber( tom.engine.adt.tomsignature.types.TomNumber t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomNumber_MatchNumber(t0); }private  tom.engine.adt.tomsignature.types.TomNumber tom_get_slot_MatchNumber_number( tom.engine.adt.tomsignature.types.TomNumber t) {  return  t.getNumber() ;}private  tom.engine.adt.tomsignature.types.TomName tom_get_implementation_TomName( tom.engine.adt.tomsignature.types.TomName t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomName tom_set_stamp_TomName( tom.engine.adt.tomsignature.types.TomName t) {  return (tom.engine.adt.tomsignature.types.TomName)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomName( tom.engine.adt.tomsignature.types.TomName t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomName(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_EmptyName( tom.engine.adt.tomsignature.types.TomName t) {  return  (t!= null) && t.isEmptyName() ;}private  tom.engine.adt.tomsignature.types.TomName tom_make_EmptyName() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomName_EmptyName(); }private boolean tom_is_fun_sym_PositionName( tom.engine.adt.tomsignature.types.TomName t) {  return  (t!= null) && t.isPositionName() ;}private  tom.engine.adt.tomsignature.types.TomName tom_make_PositionName( tom.engine.adt.tomsignature.types.TomNumberList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomName_PositionName(t0); }private  tom.engine.adt.tomsignature.types.TomNumberList tom_get_slot_PositionName_numberList( tom.engine.adt.tomsignature.types.TomName t) {  return  t.getNumberList() ;}private boolean tom_is_fun_sym_Name( tom.engine.adt.tomsignature.types.TomName t) {  return  (t!= null) && t.isName() ;}private  tom.engine.adt.tomsignature.types.TomName tom_make_Name( String  t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomName_Name(t0); }private  String  tom_get_slot_Name_string( tom.engine.adt.tomsignature.types.TomName t) {  return  t.getString() ;}private  tom.engine.adt.tomsignature.types.SlotList tom_get_implementation_SlotList( tom.engine.adt.tomsignature.types.SlotList t) {  return t ;}private  tom.engine.adt.tomsignature.types.SlotList tom_set_stamp_SlotList( tom.engine.adt.tomsignature.types.SlotList t) {  return (tom.engine.adt.tomsignature.types.SlotList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_SlotList( tom.engine.adt.tomsignature.types.SlotList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_SlotList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concSlot( tom.engine.adt.tomsignature.types.SlotList t) {  return (t!= null) && t.isSortSlotList() ;}private  tom.engine.adt.tomsignature.types.SlotList tom_empty_list_concSlot() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeSlotList(); }private  tom.engine.adt.tomsignature.types.SlotList tom_cons_list_concSlot( tom.engine.adt.tomsignature.types.Slot e,  tom.engine.adt.tomsignature.types.SlotList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeSlotList(e,l); }private  tom.engine.adt.tomsignature.types.Slot tom_get_head_concSlot_SlotList( tom.engine.adt.tomsignature.types.SlotList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.SlotList tom_get_tail_concSlot_SlotList( tom.engine.adt.tomsignature.types.SlotList l) {  return l.getTail() ;}private boolean tom_is_empty_concSlot_SlotList( tom.engine.adt.tomsignature.types.SlotList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.SlotList tom_append_list_concSlot( tom.engine.adt.tomsignature.types.SlotList l1,  tom.engine.adt.tomsignature.types.SlotList l2) {    if(tom_is_empty_concSlot_SlotList(l1)) {     return l2;    } else if(tom_is_empty_concSlot_SlotList(l2)) {     return l1;    } else if(tom_is_empty_concSlot_SlotList(( tom.engine.adt.tomsignature.types.SlotList)tom_get_tail_concSlot_SlotList(l1))) {     return ( tom.engine.adt.tomsignature.types.SlotList)tom_cons_list_concSlot(( tom.engine.adt.tomsignature.types.Slot)tom_get_head_concSlot_SlotList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.SlotList)tom_cons_list_concSlot(( tom.engine.adt.tomsignature.types.Slot)tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(( tom.engine.adt.tomsignature.types.SlotList)tom_get_tail_concSlot_SlotList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.SlotList tom_get_slice_concSlot( tom.engine.adt.tomsignature.types.SlotList begin,  tom.engine.adt.tomsignature.types.SlotList end) {    if(tom_terms_equal_SlotList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.SlotList)tom_empty_list_concSlot();    } else {      return ( tom.engine.adt.tomsignature.types.SlotList)tom_cons_list_concSlot(( tom.engine.adt.tomsignature.types.Slot)tom_get_head_concSlot_SlotList(begin),( tom.engine.adt.tomsignature.types.SlotList)tom_get_slice_concSlot(( tom.engine.adt.tomsignature.types.SlotList)tom_get_tail_concSlot_SlotList(begin),end));    }   }  private boolean tom_is_fun_sym_emptySlotList( tom.engine.adt.tomsignature.types.SlotList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.SlotList tom_make_emptySlotList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeSlotList(); }private boolean tom_is_fun_sym_manySlotList( tom.engine.adt.tomsignature.types.SlotList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.SlotList tom_make_manySlotList( tom.engine.adt.tomsignature.types.Slot e,  tom.engine.adt.tomsignature.types.SlotList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeSlotList(e,l); }private  tom.engine.adt.tomsignature.types.Slot tom_get_slot_manySlotList_head( tom.engine.adt.tomsignature.types.SlotList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.SlotList tom_get_slot_manySlotList_tail( tom.engine.adt.tomsignature.types.SlotList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.Slot tom_get_implementation_Slot( tom.engine.adt.tomsignature.types.Slot t) {  return t ;}private  tom.engine.adt.tomsignature.types.Slot tom_set_stamp_Slot( tom.engine.adt.tomsignature.types.Slot t) {  return (tom.engine.adt.tomsignature.types.Slot)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_Slot( tom.engine.adt.tomsignature.types.Slot t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_Slot(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_PairSlotAppl( tom.engine.adt.tomsignature.types.Slot t) {  return  (t!= null) && t.isPairSlotAppl() ;}private  tom.engine.adt.tomsignature.types.Slot tom_make_PairSlotAppl( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeSlot_PairSlotAppl(t0, t1); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_PairSlotAppl_slotName( tom.engine.adt.tomsignature.types.Slot t) {  return  t.getSlotName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_PairSlotAppl_appl( tom.engine.adt.tomsignature.types.Slot t) {  return  t.getAppl() ;}private  tom.engine.adt.tomsignature.types.PairNameDeclList tom_get_implementation_PairNameDeclList( tom.engine.adt.tomsignature.types.PairNameDeclList t) {  return t ;}private  tom.engine.adt.tomsignature.types.PairNameDeclList tom_set_stamp_PairNameDeclList( tom.engine.adt.tomsignature.types.PairNameDeclList t) {  return (tom.engine.adt.tomsignature.types.PairNameDeclList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_PairNameDeclList( tom.engine.adt.tomsignature.types.PairNameDeclList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_PairNameDeclList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concPairNameDecl( tom.engine.adt.tomsignature.types.PairNameDeclList t) {  return (t!= null) && t.isSortPairNameDeclList() ;}private  tom.engine.adt.tomsignature.types.PairNameDeclList tom_empty_list_concPairNameDecl() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePairNameDeclList(); }private  tom.engine.adt.tomsignature.types.PairNameDeclList tom_cons_list_concPairNameDecl( tom.engine.adt.tomsignature.types.PairNameDecl e,  tom.engine.adt.tomsignature.types.PairNameDeclList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePairNameDeclList(e,l); }private  tom.engine.adt.tomsignature.types.PairNameDecl tom_get_head_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomsignature.types.PairNameDeclList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.PairNameDeclList tom_get_tail_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomsignature.types.PairNameDeclList l) {  return l.getTail() ;}private boolean tom_is_empty_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomsignature.types.PairNameDeclList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.PairNameDeclList tom_append_list_concPairNameDecl( tom.engine.adt.tomsignature.types.PairNameDeclList l1,  tom.engine.adt.tomsignature.types.PairNameDeclList l2) {    if(tom_is_empty_concPairNameDecl_PairNameDeclList(l1)) {     return l2;    } else if(tom_is_empty_concPairNameDecl_PairNameDeclList(l2)) {     return l1;    } else if(tom_is_empty_concPairNameDecl_PairNameDeclList(( tom.engine.adt.tomsignature.types.PairNameDeclList)tom_get_tail_concPairNameDecl_PairNameDeclList(l1))) {     return ( tom.engine.adt.tomsignature.types.PairNameDeclList)tom_cons_list_concPairNameDecl(( tom.engine.adt.tomsignature.types.PairNameDecl)tom_get_head_concPairNameDecl_PairNameDeclList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.PairNameDeclList)tom_cons_list_concPairNameDecl(( tom.engine.adt.tomsignature.types.PairNameDecl)tom_get_head_concPairNameDecl_PairNameDeclList(l1),tom_append_list_concPairNameDecl(( tom.engine.adt.tomsignature.types.PairNameDeclList)tom_get_tail_concPairNameDecl_PairNameDeclList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.PairNameDeclList tom_get_slice_concPairNameDecl( tom.engine.adt.tomsignature.types.PairNameDeclList begin,  tom.engine.adt.tomsignature.types.PairNameDeclList end) {    if(tom_terms_equal_PairNameDeclList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.PairNameDeclList)tom_empty_list_concPairNameDecl();    } else {      return ( tom.engine.adt.tomsignature.types.PairNameDeclList)tom_cons_list_concPairNameDecl(( tom.engine.adt.tomsignature.types.PairNameDecl)tom_get_head_concPairNameDecl_PairNameDeclList(begin),( tom.engine.adt.tomsignature.types.PairNameDeclList)tom_get_slice_concPairNameDecl(( tom.engine.adt.tomsignature.types.PairNameDeclList)tom_get_tail_concPairNameDecl_PairNameDeclList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyPairNameDeclList( tom.engine.adt.tomsignature.types.PairNameDeclList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.PairNameDeclList tom_make_emptyPairNameDeclList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePairNameDeclList(); }private boolean tom_is_fun_sym_manyPairNameDeclList( tom.engine.adt.tomsignature.types.PairNameDeclList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.PairNameDeclList tom_make_manyPairNameDeclList( tom.engine.adt.tomsignature.types.PairNameDecl e,  tom.engine.adt.tomsignature.types.PairNameDeclList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePairNameDeclList(e,l); }private  tom.engine.adt.tomsignature.types.PairNameDecl tom_get_slot_manyPairNameDeclList_head( tom.engine.adt.tomsignature.types.PairNameDeclList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.PairNameDeclList tom_get_slot_manyPairNameDeclList_tail( tom.engine.adt.tomsignature.types.PairNameDeclList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.PairNameDecl tom_get_implementation_PairNameDecl( tom.engine.adt.tomsignature.types.PairNameDecl t) {  return t ;}private  tom.engine.adt.tomsignature.types.PairNameDecl tom_set_stamp_PairNameDecl( tom.engine.adt.tomsignature.types.PairNameDecl t) {  return (tom.engine.adt.tomsignature.types.PairNameDecl)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_PairNameDecl( tom.engine.adt.tomsignature.types.PairNameDecl t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_PairNameDecl(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_PairNameDecl( tom.engine.adt.tomsignature.types.PairNameDecl t) {  return  (t!= null) && t.isPairNameDecl() ;}private  tom.engine.adt.tomsignature.types.PairNameDecl tom_make_PairNameDecl( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.Declaration t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePairNameDecl_PairNameDecl(t0, t1); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_PairNameDecl_slotName( tom.engine.adt.tomsignature.types.PairNameDecl t) {  return  t.getSlotName() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_get_slot_PairNameDecl_slotDecl( tom.engine.adt.tomsignature.types.PairNameDecl t) {  return  t.getSlotDecl() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_implementation_ConstraintList( tom.engine.adt.tomsignature.types.ConstraintList t) {  return t ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_set_stamp_ConstraintList( tom.engine.adt.tomsignature.types.ConstraintList t) {  return (tom.engine.adt.tomsignature.types.ConstraintList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_ConstraintList( tom.engine.adt.tomsignature.types.ConstraintList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_ConstraintList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concConstraint( tom.engine.adt.tomsignature.types.ConstraintList t) {  return (t!= null) && t.isSortConstraintList() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_empty_list_concConstraint() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeConstraintList(); }private  tom.engine.adt.tomsignature.types.ConstraintList tom_cons_list_concConstraint( tom.engine.adt.tomsignature.types.Constraint e,  tom.engine.adt.tomsignature.types.ConstraintList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeConstraintList(e,l); }private  tom.engine.adt.tomsignature.types.Constraint tom_get_head_concConstraint_ConstraintList( tom.engine.adt.tomsignature.types.ConstraintList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_tail_concConstraint_ConstraintList( tom.engine.adt.tomsignature.types.ConstraintList l) {  return l.getTail() ;}private boolean tom_is_empty_concConstraint_ConstraintList( tom.engine.adt.tomsignature.types.ConstraintList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_append_list_concConstraint( tom.engine.adt.tomsignature.types.ConstraintList l1,  tom.engine.adt.tomsignature.types.ConstraintList l2) {    if(tom_is_empty_concConstraint_ConstraintList(l1)) {     return l2;    } else if(tom_is_empty_concConstraint_ConstraintList(l2)) {     return l1;    } else if(tom_is_empty_concConstraint_ConstraintList(( tom.engine.adt.tomsignature.types.ConstraintList)tom_get_tail_concConstraint_ConstraintList(l1))) {     return ( tom.engine.adt.tomsignature.types.ConstraintList)tom_cons_list_concConstraint(( tom.engine.adt.tomsignature.types.Constraint)tom_get_head_concConstraint_ConstraintList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.ConstraintList)tom_cons_list_concConstraint(( tom.engine.adt.tomsignature.types.Constraint)tom_get_head_concConstraint_ConstraintList(l1),tom_append_list_concConstraint(( tom.engine.adt.tomsignature.types.ConstraintList)tom_get_tail_concConstraint_ConstraintList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_slice_concConstraint( tom.engine.adt.tomsignature.types.ConstraintList begin,  tom.engine.adt.tomsignature.types.ConstraintList end) {    if(tom_terms_equal_ConstraintList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.ConstraintList)tom_empty_list_concConstraint();    } else {      return ( tom.engine.adt.tomsignature.types.ConstraintList)tom_cons_list_concConstraint(( tom.engine.adt.tomsignature.types.Constraint)tom_get_head_concConstraint_ConstraintList(begin),( tom.engine.adt.tomsignature.types.ConstraintList)tom_get_slice_concConstraint(( tom.engine.adt.tomsignature.types.ConstraintList)tom_get_tail_concConstraint_ConstraintList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyConstraintList( tom.engine.adt.tomsignature.types.ConstraintList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_make_emptyConstraintList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeConstraintList(); }private boolean tom_is_fun_sym_manyConstraintList( tom.engine.adt.tomsignature.types.ConstraintList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_make_manyConstraintList( tom.engine.adt.tomsignature.types.Constraint e,  tom.engine.adt.tomsignature.types.ConstraintList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeConstraintList(e,l); }private  tom.engine.adt.tomsignature.types.Constraint tom_get_slot_manyConstraintList_head( tom.engine.adt.tomsignature.types.ConstraintList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_slot_manyConstraintList_tail( tom.engine.adt.tomsignature.types.ConstraintList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.Constraint tom_get_implementation_Constraint( tom.engine.adt.tomsignature.types.Constraint t) {  return t ;}private  tom.engine.adt.tomsignature.types.Constraint tom_set_stamp_Constraint( tom.engine.adt.tomsignature.types.Constraint t) {  return (tom.engine.adt.tomsignature.types.Constraint)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_Constraint( tom.engine.adt.tomsignature.types.Constraint t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_Constraint(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_AssignTo( tom.engine.adt.tomsignature.types.Constraint t) {  return  (t!= null) && t.isAssignTo() ;}private  tom.engine.adt.tomsignature.types.Constraint tom_make_AssignTo( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeConstraint_AssignTo(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_AssignTo_variable( tom.engine.adt.tomsignature.types.Constraint t) {  return  t.getVariable() ;}private boolean tom_is_fun_sym_Equal( tom.engine.adt.tomsignature.types.Constraint t) {  return  (t!= null) && t.isEqual() ;}private  tom.engine.adt.tomsignature.types.Constraint tom_make_Equal( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeConstraint_Equal(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_Equal_variable( tom.engine.adt.tomsignature.types.Constraint t) {  return  t.getVariable() ;}private boolean tom_is_fun_sym_Ensure( tom.engine.adt.tomsignature.types.Constraint t) {  return  (t!= null) && t.isEnsure() ;}private  tom.engine.adt.tomsignature.types.Constraint tom_make_Ensure( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeConstraint_Ensure(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_Ensure_variable( tom.engine.adt.tomsignature.types.Constraint t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_get_implementation_OptionList( tom.engine.adt.tomsignature.types.OptionList t) {  return t ;}private  tom.engine.adt.tomsignature.types.OptionList tom_set_stamp_OptionList( tom.engine.adt.tomsignature.types.OptionList t) {  return (tom.engine.adt.tomsignature.types.OptionList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_OptionList( tom.engine.adt.tomsignature.types.OptionList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_OptionList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concOption( tom.engine.adt.tomsignature.types.OptionList t) {  return (t!= null) && t.isSortOptionList() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_empty_list_concOption() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOptionList(); }private  tom.engine.adt.tomsignature.types.OptionList tom_cons_list_concOption( tom.engine.adt.tomsignature.types.Option e,  tom.engine.adt.tomsignature.types.OptionList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOptionList(e,l); }private  tom.engine.adt.tomsignature.types.Option tom_get_head_concOption_OptionList( tom.engine.adt.tomsignature.types.OptionList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_get_tail_concOption_OptionList( tom.engine.adt.tomsignature.types.OptionList l) {  return l.getTail() ;}private boolean tom_is_empty_concOption_OptionList( tom.engine.adt.tomsignature.types.OptionList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_append_list_concOption( tom.engine.adt.tomsignature.types.OptionList l1,  tom.engine.adt.tomsignature.types.OptionList l2) {    if(tom_is_empty_concOption_OptionList(l1)) {     return l2;    } else if(tom_is_empty_concOption_OptionList(l2)) {     return l1;    } else if(tom_is_empty_concOption_OptionList(( tom.engine.adt.tomsignature.types.OptionList)tom_get_tail_concOption_OptionList(l1))) {     return ( tom.engine.adt.tomsignature.types.OptionList)tom_cons_list_concOption(( tom.engine.adt.tomsignature.types.Option)tom_get_head_concOption_OptionList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.OptionList)tom_cons_list_concOption(( tom.engine.adt.tomsignature.types.Option)tom_get_head_concOption_OptionList(l1),tom_append_list_concOption(( tom.engine.adt.tomsignature.types.OptionList)tom_get_tail_concOption_OptionList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.OptionList tom_get_slice_concOption( tom.engine.adt.tomsignature.types.OptionList begin,  tom.engine.adt.tomsignature.types.OptionList end) {    if(tom_terms_equal_OptionList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.OptionList)tom_empty_list_concOption();    } else {      return ( tom.engine.adt.tomsignature.types.OptionList)tom_cons_list_concOption(( tom.engine.adt.tomsignature.types.Option)tom_get_head_concOption_OptionList(begin),( tom.engine.adt.tomsignature.types.OptionList)tom_get_slice_concOption(( tom.engine.adt.tomsignature.types.OptionList)tom_get_tail_concOption_OptionList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyOptionList( tom.engine.adt.tomsignature.types.OptionList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_make_emptyOptionList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOptionList(); }private boolean tom_is_fun_sym_manyOptionList( tom.engine.adt.tomsignature.types.OptionList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_make_manyOptionList( tom.engine.adt.tomsignature.types.Option e,  tom.engine.adt.tomsignature.types.OptionList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOptionList(e,l); }private  tom.engine.adt.tomsignature.types.Option tom_get_slot_manyOptionList_head( tom.engine.adt.tomsignature.types.OptionList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_manyOptionList_tail( tom.engine.adt.tomsignature.types.OptionList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_implementation_Option( tom.engine.adt.tomsignature.types.Option t) {  return t ;}private  tom.engine.adt.tomsignature.types.Option tom_set_stamp_Option( tom.engine.adt.tomsignature.types.Option t) {  return (tom.engine.adt.tomsignature.types.Option)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_Option( tom.engine.adt.tomsignature.types.Option t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_Option(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_noOption( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isNoOption() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_noOption() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_NoOption(); }private boolean tom_is_fun_sym_ImplicitXMLChild( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isImplicitXMLChild() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_ImplicitXMLChild() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_ImplicitXMLChild(); }private boolean tom_is_fun_sym_ImplicitXMLAttribut( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isImplicitXMLAttribut() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_ImplicitXMLAttribut() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_ImplicitXMLAttribut(); }private boolean tom_is_fun_sym_Debug( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isDebug() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_Debug( tom.engine.adt.tomsignature.types.TomName t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_Debug(t0); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_Debug_astName( tom.engine.adt.tomsignature.types.Option t) {  return  t.getAstName() ;}private boolean tom_is_fun_sym_Label( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isLabel() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_Label( tom.engine.adt.tomsignature.types.TomName t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_Label(t0); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_Label_astName( tom.engine.adt.tomsignature.types.Option t) {  return  t.getAstName() ;}private boolean tom_is_fun_sym_OriginalText( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isOriginalText() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_OriginalText( tom.engine.adt.tomsignature.types.TomName t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_OriginalText(t0); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_OriginalText_astName( tom.engine.adt.tomsignature.types.Option t) {  return  t.getAstName() ;}private boolean tom_is_fun_sym_Constructor( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isConstructor() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_Constructor( tom.engine.adt.tomsignature.types.NameList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_Constructor(t0); }private  tom.engine.adt.tomsignature.types.NameList tom_get_slot_Constructor_nameList( tom.engine.adt.tomsignature.types.Option t) {  return  t.getNameList() ;}private boolean tom_is_fun_sym_OriginTracking( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isOriginTracking() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_OriginTracking( tom.engine.adt.tomsignature.types.TomName t0,  int  t1,  tom.engine.adt.tomsignature.types.TomName t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_OriginTracking(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_OriginTracking_astName( tom.engine.adt.tomsignature.types.Option t) {  return  t.getAstName() ;}private  int  tom_get_slot_OriginTracking_line( tom.engine.adt.tomsignature.types.Option t) {  return  t.getLine() ;}private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_OriginTracking_fileName( tom.engine.adt.tomsignature.types.Option t) {  return  t.getFileName() ;}private boolean tom_is_fun_sym_GeneratedMatch( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isGeneratedMatch() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_GeneratedMatch() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_GeneratedMatch(); }private boolean tom_is_fun_sym_DefinedSymbol( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isDefinedSymbol() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_DefinedSymbol() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_DefinedSymbol(); }private boolean tom_is_fun_sym_TomTermToOption( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isTomTermToOption() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_TomTermToOption( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_TomTermToOption(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_TomTermToOption_astTerm( tom.engine.adt.tomsignature.types.Option t) {  return  t.getAstTerm() ;}private boolean tom_is_fun_sym_TomNameToOption( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isTomNameToOption() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_TomNameToOption( tom.engine.adt.tomsignature.types.TomName t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_TomNameToOption(t0); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_TomNameToOption_astName( tom.engine.adt.tomsignature.types.Option t) {  return  t.getAstName() ;}private boolean tom_is_fun_sym_DeclarationToOption( tom.engine.adt.tomsignature.types.Option t) {  return  (t!= null) && t.isDeclarationToOption() ;}private  tom.engine.adt.tomsignature.types.Option tom_make_DeclarationToOption( tom.engine.adt.tomsignature.types.Declaration t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeOption_DeclarationToOption(t0); }private  tom.engine.adt.tomsignature.types.Declaration tom_get_slot_DeclarationToOption_astDeclaration( tom.engine.adt.tomsignature.types.Option t) {  return  t.getAstDeclaration() ;}private  tom.engine.adt.tomsignature.types.TomTypeList tom_get_implementation_TomTypeList( tom.engine.adt.tomsignature.types.TomTypeList t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomTypeList tom_set_stamp_TomTypeList( tom.engine.adt.tomsignature.types.TomTypeList t) {  return (tom.engine.adt.tomsignature.types.TomTypeList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomTypeList( tom.engine.adt.tomsignature.types.TomTypeList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomTypeList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concTomType( tom.engine.adt.tomsignature.types.TomTypeList t) {  return (t!= null) && t.isSortTomTypeList() ;}private  tom.engine.adt.tomsignature.types.TomTypeList tom_empty_list_concTomType() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTypeList(); }private  tom.engine.adt.tomsignature.types.TomTypeList tom_cons_list_concTomType( tom.engine.adt.tomsignature.types.TomType e,  tom.engine.adt.tomsignature.types.TomTypeList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTypeList(e,l); }private  tom.engine.adt.tomsignature.types.TomType tom_get_head_concTomType_TomTypeList( tom.engine.adt.tomsignature.types.TomTypeList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.TomTypeList tom_get_tail_concTomType_TomTypeList( tom.engine.adt.tomsignature.types.TomTypeList l) {  return l.getTail() ;}private boolean tom_is_empty_concTomType_TomTypeList( tom.engine.adt.tomsignature.types.TomTypeList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomTypeList tom_append_list_concTomType( tom.engine.adt.tomsignature.types.TomTypeList l1,  tom.engine.adt.tomsignature.types.TomTypeList l2) {    if(tom_is_empty_concTomType_TomTypeList(l1)) {     return l2;    } else if(tom_is_empty_concTomType_TomTypeList(l2)) {     return l1;    } else if(tom_is_empty_concTomType_TomTypeList(( tom.engine.adt.tomsignature.types.TomTypeList)tom_get_tail_concTomType_TomTypeList(l1))) {     return ( tom.engine.adt.tomsignature.types.TomTypeList)tom_cons_list_concTomType(( tom.engine.adt.tomsignature.types.TomType)tom_get_head_concTomType_TomTypeList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.TomTypeList)tom_cons_list_concTomType(( tom.engine.adt.tomsignature.types.TomType)tom_get_head_concTomType_TomTypeList(l1),tom_append_list_concTomType(( tom.engine.adt.tomsignature.types.TomTypeList)tom_get_tail_concTomType_TomTypeList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.TomTypeList tom_get_slice_concTomType( tom.engine.adt.tomsignature.types.TomTypeList begin,  tom.engine.adt.tomsignature.types.TomTypeList end) {    if(tom_terms_equal_TomTypeList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.TomTypeList)tom_empty_list_concTomType();    } else {      return ( tom.engine.adt.tomsignature.types.TomTypeList)tom_cons_list_concTomType(( tom.engine.adt.tomsignature.types.TomType)tom_get_head_concTomType_TomTypeList(begin),( tom.engine.adt.tomsignature.types.TomTypeList)tom_get_slice_concTomType(( tom.engine.adt.tomsignature.types.TomTypeList)tom_get_tail_concTomType_TomTypeList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyTomTypeList( tom.engine.adt.tomsignature.types.TomTypeList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomTypeList tom_make_emptyTomTypeList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTypeList(); }private boolean tom_is_fun_sym_manyTomTypeList( tom.engine.adt.tomsignature.types.TomTypeList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.TomTypeList tom_make_manyTomTypeList( tom.engine.adt.tomsignature.types.TomType e,  tom.engine.adt.tomsignature.types.TomTypeList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTypeList(e,l); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_manyTomTypeList_head( tom.engine.adt.tomsignature.types.TomTypeList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.TomTypeList tom_get_slot_manyTomTypeList_tail( tom.engine.adt.tomsignature.types.TomTypeList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.TomTypeDefinition tom_get_implementation_TomTypeDefinition( tom.engine.adt.tomsignature.types.TomTypeDefinition t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomTypeDefinition tom_set_stamp_TomTypeDefinition( tom.engine.adt.tomsignature.types.TomTypeDefinition t) {  return (tom.engine.adt.tomsignature.types.TomTypeDefinition)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomTypeDefinition( tom.engine.adt.tomsignature.types.TomTypeDefinition t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomTypeDefinition(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_TypeDefinition( tom.engine.adt.tomsignature.types.TomTypeDefinition t) {  return  (t!= null) && t.isTypeDefinition() ;}private  tom.engine.adt.tomsignature.types.TomTypeDefinition tom_make_TypeDefinition( tom.engine.adt.tomsignature.types.TomType t0,  tom.engine.adt.tomsignature.types.TomForwardType t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTypeDefinition_TypeDefinition(t0, t1); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_TypeDefinition_tomType( tom.engine.adt.tomsignature.types.TomTypeDefinition t) {  return  t.getTomType() ;}private  tom.engine.adt.tomsignature.types.TomForwardType tom_get_slot_TypeDefinition_forward( tom.engine.adt.tomsignature.types.TomTypeDefinition t) {  return  t.getForward() ;}private  tom.engine.adt.tomsignature.types.TomForwardType tom_get_implementation_TomForwardType( tom.engine.adt.tomsignature.types.TomForwardType t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomForwardType tom_set_stamp_TomForwardType( tom.engine.adt.tomsignature.types.TomForwardType t) {  return (tom.engine.adt.tomsignature.types.TomForwardType)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomForwardType( tom.engine.adt.tomsignature.types.TomForwardType t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomForwardType(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_EmptyForward( tom.engine.adt.tomsignature.types.TomForwardType t) {  return  (t!= null) && t.isEmptyForward() ;}private  tom.engine.adt.tomsignature.types.TomForwardType tom_make_EmptyForward() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomForwardType_EmptyForward(); }private boolean tom_is_fun_sym_TLForward( tom.engine.adt.tomsignature.types.TomForwardType t) {  return  (t!= null) && t.isTLForward() ;}private  tom.engine.adt.tomsignature.types.TomForwardType tom_make_TLForward( tom.engine.adt.tomsignature.types.TargetLanguage t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomForwardType_TLForward(t0); }private  tom.engine.adt.tomsignature.types.TargetLanguage tom_get_slot_TLForward_tl( tom.engine.adt.tomsignature.types.TomForwardType t) {  return  t.getTl() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_implementation_TomType( tom.engine.adt.tomsignature.types.TomType t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomType tom_set_stamp_TomType( tom.engine.adt.tomsignature.types.TomType t) {  return (tom.engine.adt.tomsignature.types.TomType)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomType( tom.engine.adt.tomsignature.types.TomType t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomType(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_EmptyType( tom.engine.adt.tomsignature.types.TomType t) {  return  (t!= null) && t.isEmptyType() ;}private  tom.engine.adt.tomsignature.types.TomType tom_make_EmptyType() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomType_EmptyType(); }private boolean tom_is_fun_sym_TLType( tom.engine.adt.tomsignature.types.TomType t) {  return  (t!= null) && t.isTLType() ;}private  tom.engine.adt.tomsignature.types.TomType tom_make_TLType( tom.engine.adt.tomsignature.types.TargetLanguage t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomType_TLType(t0); }private  tom.engine.adt.tomsignature.types.TargetLanguage tom_get_slot_TLType_tl( tom.engine.adt.tomsignature.types.TomType t) {  return  t.getTl() ;}private boolean tom_is_fun_sym_TypesToType( tom.engine.adt.tomsignature.types.TomType t) {  return  (t!= null) && t.isTypesToType() ;}private  tom.engine.adt.tomsignature.types.TomType tom_make_TypesToType( tom.engine.adt.tomsignature.types.TomTypeList t0,  tom.engine.adt.tomsignature.types.TomType t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomType_TypesToType(t0, t1); }private  tom.engine.adt.tomsignature.types.TomTypeList tom_get_slot_TypesToType_domain( tom.engine.adt.tomsignature.types.TomType t) {  return  t.getDomain() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_TypesToType_codomain( tom.engine.adt.tomsignature.types.TomType t) {  return  t.getCodomain() ;}private boolean tom_is_fun_sym_ASTTomType( tom.engine.adt.tomsignature.types.TomType t) {  return  (t!= null) && t.isASTTomType() ;}private  tom.engine.adt.tomsignature.types.TomType tom_make_ASTTomType( String  t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomType_ASTTomType(t0); }private  String  tom_get_slot_ASTTomType_string( tom.engine.adt.tomsignature.types.TomType t) {  return  t.getString() ;}private boolean tom_is_fun_sym_TomTypeAlone( tom.engine.adt.tomsignature.types.TomType t) {  return  (t!= null) && t.isTomTypeAlone() ;}private  tom.engine.adt.tomsignature.types.TomType tom_make_TomTypeAlone( String  t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomType_TomTypeAlone(t0); }private  String  tom_get_slot_TomTypeAlone_string( tom.engine.adt.tomsignature.types.TomType t) {  return  t.getString() ;}private boolean tom_is_fun_sym_Type( tom.engine.adt.tomsignature.types.TomType t) {  return  (t!= null) && t.isType() ;}private  tom.engine.adt.tomsignature.types.TomType tom_make_Type( tom.engine.adt.tomsignature.types.TomType t0,  tom.engine.adt.tomsignature.types.TomType t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomType_Type(t0, t1); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_Type_tomType( tom.engine.adt.tomsignature.types.TomType t) {  return  t.getTomType() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_Type_tlType( tom.engine.adt.tomsignature.types.TomType t) {  return  t.getTlType() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_implementation_TomList( tom.engine.adt.tomsignature.types.TomList t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomList tom_set_stamp_TomList( tom.engine.adt.tomsignature.types.TomList t) {  return (tom.engine.adt.tomsignature.types.TomList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomList( tom.engine.adt.tomsignature.types.TomList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concTomTerm( tom.engine.adt.tomsignature.types.TomList t) {  return (t!= null) && t.isSortTomList() ;}private  tom.engine.adt.tomsignature.types.TomList tom_empty_list_concTomTerm() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomList(); }private  tom.engine.adt.tomsignature.types.TomList tom_cons_list_concTomTerm( tom.engine.adt.tomsignature.types.TomTerm e,  tom.engine.adt.tomsignature.types.TomList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomList(e,l); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_head_concTomTerm_TomList( tom.engine.adt.tomsignature.types.TomList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_tail_concTomTerm_TomList( tom.engine.adt.tomsignature.types.TomList l) {  return l.getTail() ;}private boolean tom_is_empty_concTomTerm_TomList( tom.engine.adt.tomsignature.types.TomList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomList tom_append_list_concTomTerm( tom.engine.adt.tomsignature.types.TomList l1,  tom.engine.adt.tomsignature.types.TomList l2) {    if(tom_is_empty_concTomTerm_TomList(l1)) {     return l2;    } else if(tom_is_empty_concTomTerm_TomList(l2)) {     return l1;    } else if(tom_is_empty_concTomTerm_TomList(( tom.engine.adt.tomsignature.types.TomList)tom_get_tail_concTomTerm_TomList(l1))) {     return ( tom.engine.adt.tomsignature.types.TomList)tom_cons_list_concTomTerm(( tom.engine.adt.tomsignature.types.TomTerm)tom_get_head_concTomTerm_TomList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.TomList)tom_cons_list_concTomTerm(( tom.engine.adt.tomsignature.types.TomTerm)tom_get_head_concTomTerm_TomList(l1),tom_append_list_concTomTerm(( tom.engine.adt.tomsignature.types.TomList)tom_get_tail_concTomTerm_TomList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.TomList tom_get_slice_concTomTerm( tom.engine.adt.tomsignature.types.TomList begin,  tom.engine.adt.tomsignature.types.TomList end) {    if(tom_terms_equal_TomList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.TomList)tom_empty_list_concTomTerm();    } else {      return ( tom.engine.adt.tomsignature.types.TomList)tom_cons_list_concTomTerm(( tom.engine.adt.tomsignature.types.TomTerm)tom_get_head_concTomTerm_TomList(begin),( tom.engine.adt.tomsignature.types.TomList)tom_get_slice_concTomTerm(( tom.engine.adt.tomsignature.types.TomList)tom_get_tail_concTomTerm_TomList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyTomList( tom.engine.adt.tomsignature.types.TomList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.TomList tom_make_emptyTomList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomList(); }private boolean tom_is_fun_sym_manyTomList( tom.engine.adt.tomsignature.types.TomList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.TomList tom_make_manyTomList( tom.engine.adt.tomsignature.types.TomTerm e,  tom.engine.adt.tomsignature.types.TomList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomList(e,l); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_manyTomList_head( tom.engine.adt.tomsignature.types.TomList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_manyTomList_tail( tom.engine.adt.tomsignature.types.TomList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.PatternList tom_get_implementation_PatternList( tom.engine.adt.tomsignature.types.PatternList t) {  return t ;}private  tom.engine.adt.tomsignature.types.PatternList tom_set_stamp_PatternList( tom.engine.adt.tomsignature.types.PatternList t) {  return (tom.engine.adt.tomsignature.types.PatternList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_PatternList( tom.engine.adt.tomsignature.types.PatternList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_PatternList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concPattern( tom.engine.adt.tomsignature.types.PatternList t) {  return (t!= null) && t.isSortPatternList() ;}private  tom.engine.adt.tomsignature.types.PatternList tom_empty_list_concPattern() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePatternList(); }private  tom.engine.adt.tomsignature.types.PatternList tom_cons_list_concPattern( tom.engine.adt.tomsignature.types.Pattern e,  tom.engine.adt.tomsignature.types.PatternList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePatternList(e,l); }private  tom.engine.adt.tomsignature.types.Pattern tom_get_head_concPattern_PatternList( tom.engine.adt.tomsignature.types.PatternList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.PatternList tom_get_tail_concPattern_PatternList( tom.engine.adt.tomsignature.types.PatternList l) {  return l.getTail() ;}private boolean tom_is_empty_concPattern_PatternList( tom.engine.adt.tomsignature.types.PatternList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.PatternList tom_append_list_concPattern( tom.engine.adt.tomsignature.types.PatternList l1,  tom.engine.adt.tomsignature.types.PatternList l2) {    if(tom_is_empty_concPattern_PatternList(l1)) {     return l2;    } else if(tom_is_empty_concPattern_PatternList(l2)) {     return l1;    } else if(tom_is_empty_concPattern_PatternList(( tom.engine.adt.tomsignature.types.PatternList)tom_get_tail_concPattern_PatternList(l1))) {     return ( tom.engine.adt.tomsignature.types.PatternList)tom_cons_list_concPattern(( tom.engine.adt.tomsignature.types.Pattern)tom_get_head_concPattern_PatternList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.PatternList)tom_cons_list_concPattern(( tom.engine.adt.tomsignature.types.Pattern)tom_get_head_concPattern_PatternList(l1),tom_append_list_concPattern(( tom.engine.adt.tomsignature.types.PatternList)tom_get_tail_concPattern_PatternList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.PatternList tom_get_slice_concPattern( tom.engine.adt.tomsignature.types.PatternList begin,  tom.engine.adt.tomsignature.types.PatternList end) {    if(tom_terms_equal_PatternList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.PatternList)tom_empty_list_concPattern();    } else {      return ( tom.engine.adt.tomsignature.types.PatternList)tom_cons_list_concPattern(( tom.engine.adt.tomsignature.types.Pattern)tom_get_head_concPattern_PatternList(begin),( tom.engine.adt.tomsignature.types.PatternList)tom_get_slice_concPattern(( tom.engine.adt.tomsignature.types.PatternList)tom_get_tail_concPattern_PatternList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyPatternList( tom.engine.adt.tomsignature.types.PatternList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.PatternList tom_make_emptyPatternList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePatternList(); }private boolean tom_is_fun_sym_manyPatternList( tom.engine.adt.tomsignature.types.PatternList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.PatternList tom_make_manyPatternList( tom.engine.adt.tomsignature.types.Pattern e,  tom.engine.adt.tomsignature.types.PatternList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePatternList(e,l); }private  tom.engine.adt.tomsignature.types.Pattern tom_get_slot_manyPatternList_head( tom.engine.adt.tomsignature.types.PatternList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.PatternList tom_get_slot_manyPatternList_tail( tom.engine.adt.tomsignature.types.PatternList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_get_implementation_PatternInstructionList( tom.engine.adt.tomsignature.types.PatternInstructionList t) {  return t ;}private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_set_stamp_PatternInstructionList( tom.engine.adt.tomsignature.types.PatternInstructionList t) {  return (tom.engine.adt.tomsignature.types.PatternInstructionList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_PatternInstructionList( tom.engine.adt.tomsignature.types.PatternInstructionList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_PatternInstructionList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concPatternInstruction( tom.engine.adt.tomsignature.types.PatternInstructionList t) {  return (t!= null) && t.isSortPatternInstructionList() ;}private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_empty_list_concPatternInstruction() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePatternInstructionList(); }private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_cons_list_concPatternInstruction( tom.engine.adt.tomsignature.types.PatternInstruction e,  tom.engine.adt.tomsignature.types.PatternInstructionList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePatternInstructionList(e,l); }private  tom.engine.adt.tomsignature.types.PatternInstruction tom_get_head_concPatternInstruction_PatternInstructionList( tom.engine.adt.tomsignature.types.PatternInstructionList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_get_tail_concPatternInstruction_PatternInstructionList( tom.engine.adt.tomsignature.types.PatternInstructionList l) {  return l.getTail() ;}private boolean tom_is_empty_concPatternInstruction_PatternInstructionList( tom.engine.adt.tomsignature.types.PatternInstructionList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_append_list_concPatternInstruction( tom.engine.adt.tomsignature.types.PatternInstructionList l1,  tom.engine.adt.tomsignature.types.PatternInstructionList l2) {    if(tom_is_empty_concPatternInstruction_PatternInstructionList(l1)) {     return l2;    } else if(tom_is_empty_concPatternInstruction_PatternInstructionList(l2)) {     return l1;    } else if(tom_is_empty_concPatternInstruction_PatternInstructionList(( tom.engine.adt.tomsignature.types.PatternInstructionList)tom_get_tail_concPatternInstruction_PatternInstructionList(l1))) {     return ( tom.engine.adt.tomsignature.types.PatternInstructionList)tom_cons_list_concPatternInstruction(( tom.engine.adt.tomsignature.types.PatternInstruction)tom_get_head_concPatternInstruction_PatternInstructionList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.PatternInstructionList)tom_cons_list_concPatternInstruction(( tom.engine.adt.tomsignature.types.PatternInstruction)tom_get_head_concPatternInstruction_PatternInstructionList(l1),tom_append_list_concPatternInstruction(( tom.engine.adt.tomsignature.types.PatternInstructionList)tom_get_tail_concPatternInstruction_PatternInstructionList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_get_slice_concPatternInstruction( tom.engine.adt.tomsignature.types.PatternInstructionList begin,  tom.engine.adt.tomsignature.types.PatternInstructionList end) {    if(tom_terms_equal_PatternInstructionList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.PatternInstructionList)tom_empty_list_concPatternInstruction();    } else {      return ( tom.engine.adt.tomsignature.types.PatternInstructionList)tom_cons_list_concPatternInstruction(( tom.engine.adt.tomsignature.types.PatternInstruction)tom_get_head_concPatternInstruction_PatternInstructionList(begin),( tom.engine.adt.tomsignature.types.PatternInstructionList)tom_get_slice_concPatternInstruction(( tom.engine.adt.tomsignature.types.PatternInstructionList)tom_get_tail_concPatternInstruction_PatternInstructionList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyPatternInstructionList( tom.engine.adt.tomsignature.types.PatternInstructionList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_make_emptyPatternInstructionList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePatternInstructionList(); }private boolean tom_is_fun_sym_manyPatternInstructionList( tom.engine.adt.tomsignature.types.PatternInstructionList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_make_manyPatternInstructionList( tom.engine.adt.tomsignature.types.PatternInstruction e,  tom.engine.adt.tomsignature.types.PatternInstructionList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePatternInstructionList(e,l); }private  tom.engine.adt.tomsignature.types.PatternInstruction tom_get_slot_manyPatternInstructionList_head( tom.engine.adt.tomsignature.types.PatternInstructionList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.PatternInstructionList tom_get_slot_manyPatternInstructionList_tail( tom.engine.adt.tomsignature.types.PatternInstructionList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.Pattern tom_get_implementation_Pattern( tom.engine.adt.tomsignature.types.Pattern t) {  return t ;}private  tom.engine.adt.tomsignature.types.Pattern tom_set_stamp_Pattern( tom.engine.adt.tomsignature.types.Pattern t) {  return (tom.engine.adt.tomsignature.types.Pattern)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_Pattern( tom.engine.adt.tomsignature.types.Pattern t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_Pattern(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_Pattern( tom.engine.adt.tomsignature.types.Pattern t) {  return  (t!= null) && t.isPattern() ;}private  tom.engine.adt.tomsignature.types.Pattern tom_make_Pattern( tom.engine.adt.tomsignature.types.TomList t0,  tom.engine.adt.tomsignature.types.TomList t1,  tom.engine.adt.tomsignature.types.TomList t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePattern_Pattern(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_Pattern_subjectList( tom.engine.adt.tomsignature.types.Pattern t) {  return  t.getSubjectList() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_Pattern_tomList( tom.engine.adt.tomsignature.types.Pattern t) {  return  t.getTomList() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_Pattern_guards( tom.engine.adt.tomsignature.types.Pattern t) {  return  t.getGuards() ;}private  tom.engine.adt.tomsignature.types.PatternInstruction tom_get_implementation_PatternInstruction( tom.engine.adt.tomsignature.types.PatternInstruction t) {  return t ;}private  tom.engine.adt.tomsignature.types.PatternInstruction tom_set_stamp_PatternInstruction( tom.engine.adt.tomsignature.types.PatternInstruction t) {  return (tom.engine.adt.tomsignature.types.PatternInstruction)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_PatternInstruction( tom.engine.adt.tomsignature.types.PatternInstruction t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_PatternInstruction(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_PatternInstruction( tom.engine.adt.tomsignature.types.PatternInstruction t) {  return  (t!= null) && t.isPatternInstruction() ;}private  tom.engine.adt.tomsignature.types.PatternInstruction tom_make_PatternInstruction( tom.engine.adt.tomsignature.types.Pattern t0,  tom.engine.adt.tomsignature.types.Instruction t1,  tom.engine.adt.tomsignature.types.OptionList t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makePatternInstruction_PatternInstruction(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.Pattern tom_get_slot_PatternInstruction_pattern( tom.engine.adt.tomsignature.types.PatternInstruction t) {  return  t.getPattern() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_PatternInstruction_action( tom.engine.adt.tomsignature.types.PatternInstruction t) {  return  t.getAction() ;}private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_PatternInstruction_option( tom.engine.adt.tomsignature.types.PatternInstruction t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_implementation_TomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return t ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_set_stamp_TomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return (tom.engine.adt.tomsignature.types.TomTerm)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_TomTerm( tom.engine.adt.tomsignature.types.TomTerm t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_TomTerm(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_Automata( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isAutomata() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_Automata( tom.engine.adt.tomsignature.types.OptionList t0,  tom.engine.adt.tomsignature.types.TomList t1,  tom.engine.adt.tomsignature.types.TomNumberList t2,  tom.engine.adt.tomsignature.types.Instruction t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_Automata(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_Automata_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_Automata_patternList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getPatternList() ;}private  tom.engine.adt.tomsignature.types.TomNumberList tom_get_slot_Automata_numberList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getNumberList() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_Automata_inst( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getInst() ;}private boolean tom_is_fun_sym_TomInclude( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isTomInclude() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_TomInclude( tom.engine.adt.tomsignature.types.TomList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_TomInclude(t0); }private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_TomInclude_tomList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getTomList() ;}private boolean tom_is_fun_sym_BuildAppendArray( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isBuildAppendArray() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_BuildAppendArray( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_BuildAppendArray(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_BuildAppendArray_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_BuildAppendArray_headTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getHeadTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_BuildAppendArray_tailTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getTailTerm() ;}private boolean tom_is_fun_sym_BuildConsArray( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isBuildConsArray() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_BuildConsArray( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_BuildConsArray(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_BuildConsArray_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_BuildConsArray_headTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getHeadTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_BuildConsArray_tailTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getTailTerm() ;}private boolean tom_is_fun_sym_BuildEmptyArray( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isBuildEmptyArray() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_BuildEmptyArray( tom.engine.adt.tomsignature.types.TomName t0,  int  t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_BuildEmptyArray(t0, t1); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_BuildEmptyArray_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private  int  tom_get_slot_BuildEmptyArray_size( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getSize() ;}private boolean tom_is_fun_sym_BuildAppendList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isBuildAppendList() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_BuildAppendList( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_BuildAppendList(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_BuildAppendList_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_BuildAppendList_headTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getHeadTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_BuildAppendList_tailTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getTailTerm() ;}private boolean tom_is_fun_sym_BuildConsList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isBuildConsList() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_BuildConsList( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_BuildConsList(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_BuildConsList_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_BuildConsList_headTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getHeadTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_BuildConsList_tailTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getTailTerm() ;}private boolean tom_is_fun_sym_BuildEmptyList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isBuildEmptyList() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_BuildEmptyList( tom.engine.adt.tomsignature.types.TomName t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_BuildEmptyList(t0); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_BuildEmptyList_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private boolean tom_is_fun_sym_BuildTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isBuildTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_BuildTerm( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomList t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_BuildTerm(t0, t1); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_BuildTerm_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_BuildTerm_args( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getArgs() ;}private boolean tom_is_fun_sym_BuildVariable( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isBuildVariable() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_BuildVariable( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomList t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_BuildVariable(t0, t1); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_BuildVariable_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_BuildVariable_args( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getArgs() ;}private boolean tom_is_fun_sym_FunctionCall( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isFunctionCall() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_FunctionCall( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomList t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_FunctionCall(t0, t1); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_FunctionCall_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_FunctionCall_args( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getArgs() ;}private boolean tom_is_fun_sym_BuildReducedTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isBuildReducedTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_BuildReducedTerm( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_BuildReducedTerm(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_BuildReducedTerm_kid1( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getKid1() ;}private boolean tom_is_fun_sym_Ref( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isRef() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_Ref( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_Ref(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_Ref_tomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getTomTerm() ;}private boolean tom_is_fun_sym_TLVar( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isTLVar() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_TLVar( String  t0,  tom.engine.adt.tomsignature.types.TomType t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_TLVar(t0, t1); }private  String  tom_get_slot_TLVar_strName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getStrName() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_TLVar_astType( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstType() ;}private boolean tom_is_fun_sym_Term( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_Term( tom.engine.adt.tomsignature.types.TomTerm t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_Term(t0); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_Term_tomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getTomTerm() ;}private boolean tom_is_fun_sym_SubjectList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isSubjectList() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_SubjectList( tom.engine.adt.tomsignature.types.TomList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_SubjectList(t0); }private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_SubjectList_tomList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getTomList() ;}private boolean tom_is_fun_sym_Composite( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isComposite() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_Composite( tom.engine.adt.tomsignature.types.TomList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_Composite(t0); }private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_Composite_args( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getArgs() ;}private boolean tom_is_fun_sym_DoubleBackQuote( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isDoubleBackQuote() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_DoubleBackQuote( tom.engine.adt.tomsignature.types.TomList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_DoubleBackQuote(t0); }private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_DoubleBackQuote_args( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getArgs() ;}private boolean tom_is_fun_sym_BackQuoteAppl( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isBackQuoteAppl() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_BackQuoteAppl( tom.engine.adt.tomsignature.types.OptionList t0,  tom.engine.adt.tomsignature.types.TomName t1,  tom.engine.adt.tomsignature.types.TomList t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_BackQuoteAppl(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_BackQuoteAppl_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_BackQuoteAppl_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_BackQuoteAppl_args( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getArgs() ;}private boolean tom_is_fun_sym_Tom( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isTom() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_Tom( tom.engine.adt.tomsignature.types.TomList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_Tom(t0); }private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_Tom_tomList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getTomList() ;}private boolean tom_is_fun_sym_InstructionToTomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isInstructionToTomTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_InstructionToTomTerm( tom.engine.adt.tomsignature.types.Instruction t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_InstructionToTomTerm(t0); }private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_InstructionToTomTerm_astInstruction( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstInstruction() ;}private boolean tom_is_fun_sym_ExpressionToTomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isExpressionToTomTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_ExpressionToTomTerm( tom.engine.adt.tomsignature.types.Expression t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_ExpressionToTomTerm(t0); }private  tom.engine.adt.tomsignature.types.Expression tom_get_slot_ExpressionToTomTerm_astExpression( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstExpression() ;}private boolean tom_is_fun_sym_OptionToTomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isOptionToTomTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_OptionToTomTerm( tom.engine.adt.tomsignature.types.OptionList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_OptionToTomTerm(t0); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_OptionToTomTerm_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private boolean tom_is_fun_sym_DeclarationToTomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isDeclarationToTomTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_DeclarationToTomTerm( tom.engine.adt.tomsignature.types.Declaration t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_DeclarationToTomTerm(t0); }private  tom.engine.adt.tomsignature.types.Declaration tom_get_slot_DeclarationToTomTerm_astDeclaration( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstDeclaration() ;}private boolean tom_is_fun_sym_TomSymbolToTomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isTomSymbolToTomTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_TomSymbolToTomTerm( tom.engine.adt.tomsignature.types.TomSymbol t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_TomSymbolToTomTerm(t0); }private  tom.engine.adt.tomsignature.types.TomSymbol tom_get_slot_TomSymbolToTomTerm_astSymbol( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstSymbol() ;}private boolean tom_is_fun_sym_TomNameToTomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isTomNameToTomTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_TomNameToTomTerm( tom.engine.adt.tomsignature.types.TomName t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_TomNameToTomTerm(t0); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_TomNameToTomTerm_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private boolean tom_is_fun_sym_TomTypeToTomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isTomTypeToTomTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_TomTypeToTomTerm( tom.engine.adt.tomsignature.types.TomType t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_TomTypeToTomTerm(t0); }private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_TomTypeToTomTerm_astType( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstType() ;}private boolean tom_is_fun_sym_TargetLanguageToTomTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isTargetLanguageToTomTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_TargetLanguageToTomTerm( tom.engine.adt.tomsignature.types.TargetLanguage t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_TargetLanguageToTomTerm(t0); }private  tom.engine.adt.tomsignature.types.TargetLanguage tom_get_slot_TargetLanguageToTomTerm_tl( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getTl() ;}private boolean tom_is_fun_sym_emptyTerm( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isEmptyTerm() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_emptyTerm() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_EmptyTerm(); }private boolean tom_is_fun_sym_UnamedVariableStar( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isUnamedVariableStar() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_UnamedVariableStar( tom.engine.adt.tomsignature.types.OptionList t0,  tom.engine.adt.tomsignature.types.TomType t1,  tom.engine.adt.tomsignature.types.ConstraintList t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_UnamedVariableStar(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_UnamedVariableStar_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_UnamedVariableStar_astType( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstType() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_slot_UnamedVariableStar_constraints( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getConstraints() ;}private boolean tom_is_fun_sym_UnamedVariable( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isUnamedVariable() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_UnamedVariable( tom.engine.adt.tomsignature.types.OptionList t0,  tom.engine.adt.tomsignature.types.TomType t1,  tom.engine.adt.tomsignature.types.ConstraintList t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_UnamedVariable(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_UnamedVariable_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_UnamedVariable_astType( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstType() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_slot_UnamedVariable_constraints( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getConstraints() ;}private boolean tom_is_fun_sym_Placeholder( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isPlaceholder() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_Placeholder( tom.engine.adt.tomsignature.types.OptionList t0,  tom.engine.adt.tomsignature.types.ConstraintList t1) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_Placeholder(t0, t1); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_Placeholder_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_slot_Placeholder_constraints( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getConstraints() ;}private boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isVariableStar() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_VariableStar( tom.engine.adt.tomsignature.types.OptionList t0,  tom.engine.adt.tomsignature.types.TomName t1,  tom.engine.adt.tomsignature.types.TomType t2,  tom.engine.adt.tomsignature.types.ConstraintList t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_VariableStar(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_VariableStar_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_VariableStar_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_VariableStar_astType( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstType() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_slot_VariableStar_constraints( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getConstraints() ;}private boolean tom_is_fun_sym_Variable( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isVariable() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_Variable( tom.engine.adt.tomsignature.types.OptionList t0,  tom.engine.adt.tomsignature.types.TomName t1,  tom.engine.adt.tomsignature.types.TomType t2,  tom.engine.adt.tomsignature.types.ConstraintList t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_Variable(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_Variable_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_Variable_astName( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_Variable_astType( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAstType() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_slot_Variable_constraints( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getConstraints() ;}private boolean tom_is_fun_sym_XMLAppl( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isXMLAppl() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_XMLAppl( tom.engine.adt.tomsignature.types.OptionList t0,  tom.engine.adt.tomsignature.types.NameList t1,  tom.engine.adt.tomsignature.types.TomList t2,  tom.engine.adt.tomsignature.types.TomList t3,  tom.engine.adt.tomsignature.types.ConstraintList t4) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_XMLAppl(t0, t1, t2, t3, t4); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_XMLAppl_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.NameList tom_get_slot_XMLAppl_nameList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getNameList() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_XMLAppl_attrList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getAttrList() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_XMLAppl_childList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getChildList() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_slot_XMLAppl_constraints( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getConstraints() ;}private boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isRecordAppl() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_RecordAppl( tom.engine.adt.tomsignature.types.OptionList t0,  tom.engine.adt.tomsignature.types.NameList t1,  tom.engine.adt.tomsignature.types.SlotList t2,  tom.engine.adt.tomsignature.types.ConstraintList t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_RecordAppl(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_RecordAppl_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.NameList tom_get_slot_RecordAppl_nameList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getNameList() ;}private  tom.engine.adt.tomsignature.types.SlotList tom_get_slot_RecordAppl_slots( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getSlots() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_slot_RecordAppl_constraints( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getConstraints() ;}private boolean tom_is_fun_sym_ListAppl( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isListAppl() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_ListAppl( tom.engine.adt.tomsignature.types.OptionList t0,  tom.engine.adt.tomsignature.types.NameList t1,  tom.engine.adt.tomsignature.types.TomList t2,  tom.engine.adt.tomsignature.types.ConstraintList t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_ListAppl(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_ListAppl_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.NameList tom_get_slot_ListAppl_nameList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getNameList() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_ListAppl_args( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getArgs() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_slot_ListAppl_constraints( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getConstraints() ;}private boolean tom_is_fun_sym_TermAppl( tom.engine.adt.tomsignature.types.TomTerm t) {  return  (t!= null) && t.isTermAppl() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_make_TermAppl( tom.engine.adt.tomsignature.types.OptionList t0,  tom.engine.adt.tomsignature.types.NameList t1,  tom.engine.adt.tomsignature.types.TomList t2,  tom.engine.adt.tomsignature.types.ConstraintList t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeTomTerm_TermAppl(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.OptionList tom_get_slot_TermAppl_option( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getOption() ;}private  tom.engine.adt.tomsignature.types.NameList tom_get_slot_TermAppl_nameList( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getNameList() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_TermAppl_args( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getArgs() ;}private  tom.engine.adt.tomsignature.types.ConstraintList tom_get_slot_TermAppl_constraints( tom.engine.adt.tomsignature.types.TomTerm t) {  return  t.getConstraints() ;}private  tom.engine.adt.tomsignature.types.DeclarationList tom_get_implementation_DeclarationList( tom.engine.adt.tomsignature.types.DeclarationList t) {  return t ;}private  tom.engine.adt.tomsignature.types.DeclarationList tom_set_stamp_DeclarationList( tom.engine.adt.tomsignature.types.DeclarationList t) {  return (tom.engine.adt.tomsignature.types.DeclarationList)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_DeclarationList( tom.engine.adt.tomsignature.types.DeclarationList t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_DeclarationList(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_concDeclaration( tom.engine.adt.tomsignature.types.DeclarationList t) {  return (t!= null) && t.isSortDeclarationList() ;}private  tom.engine.adt.tomsignature.types.DeclarationList tom_empty_list_concDeclaration() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclarationList(); }private  tom.engine.adt.tomsignature.types.DeclarationList tom_cons_list_concDeclaration( tom.engine.adt.tomsignature.types.Declaration e,  tom.engine.adt.tomsignature.types.DeclarationList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclarationList(e,l); }private  tom.engine.adt.tomsignature.types.Declaration tom_get_head_concDeclaration_DeclarationList( tom.engine.adt.tomsignature.types.DeclarationList l) {  return l.getHead() ;}private  tom.engine.adt.tomsignature.types.DeclarationList tom_get_tail_concDeclaration_DeclarationList( tom.engine.adt.tomsignature.types.DeclarationList l) {  return l.getTail() ;}private boolean tom_is_empty_concDeclaration_DeclarationList( tom.engine.adt.tomsignature.types.DeclarationList l) {  return l.isEmpty() ;}private  tom.engine.adt.tomsignature.types.DeclarationList tom_append_list_concDeclaration( tom.engine.adt.tomsignature.types.DeclarationList l1,  tom.engine.adt.tomsignature.types.DeclarationList l2) {    if(tom_is_empty_concDeclaration_DeclarationList(l1)) {     return l2;    } else if(tom_is_empty_concDeclaration_DeclarationList(l2)) {     return l1;    } else if(tom_is_empty_concDeclaration_DeclarationList(( tom.engine.adt.tomsignature.types.DeclarationList)tom_get_tail_concDeclaration_DeclarationList(l1))) {     return ( tom.engine.adt.tomsignature.types.DeclarationList)tom_cons_list_concDeclaration(( tom.engine.adt.tomsignature.types.Declaration)tom_get_head_concDeclaration_DeclarationList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.DeclarationList)tom_cons_list_concDeclaration(( tom.engine.adt.tomsignature.types.Declaration)tom_get_head_concDeclaration_DeclarationList(l1),tom_append_list_concDeclaration(( tom.engine.adt.tomsignature.types.DeclarationList)tom_get_tail_concDeclaration_DeclarationList(l1),l2));    }   }  private  tom.engine.adt.tomsignature.types.DeclarationList tom_get_slice_concDeclaration( tom.engine.adt.tomsignature.types.DeclarationList begin,  tom.engine.adt.tomsignature.types.DeclarationList end) {    if(tom_terms_equal_DeclarationList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.DeclarationList)tom_empty_list_concDeclaration();    } else {      return ( tom.engine.adt.tomsignature.types.DeclarationList)tom_cons_list_concDeclaration(( tom.engine.adt.tomsignature.types.Declaration)tom_get_head_concDeclaration_DeclarationList(begin),( tom.engine.adt.tomsignature.types.DeclarationList)tom_get_slice_concDeclaration(( tom.engine.adt.tomsignature.types.DeclarationList)tom_get_tail_concDeclaration_DeclarationList(begin),end));    }   }  private boolean tom_is_fun_sym_emptyDeclarationList( tom.engine.adt.tomsignature.types.DeclarationList t) {  return  (t!= null) && t.isEmpty() ;}private  tom.engine.adt.tomsignature.types.DeclarationList tom_make_emptyDeclarationList() { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclarationList(); }private boolean tom_is_fun_sym_manyDeclarationList( tom.engine.adt.tomsignature.types.DeclarationList t) {  return  (t!= null) && t.isMany() ;}private  tom.engine.adt.tomsignature.types.DeclarationList tom_make_manyDeclarationList( tom.engine.adt.tomsignature.types.Declaration e,  tom.engine.adt.tomsignature.types.DeclarationList l) { return tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclarationList(e,l); }private  tom.engine.adt.tomsignature.types.Declaration tom_get_slot_manyDeclarationList_head( tom.engine.adt.tomsignature.types.DeclarationList t) {  return  t.getHead() ;}private  tom.engine.adt.tomsignature.types.DeclarationList tom_get_slot_manyDeclarationList_tail( tom.engine.adt.tomsignature.types.DeclarationList t) {  return  t.getTail() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_get_implementation_Declaration( tom.engine.adt.tomsignature.types.Declaration t) {  return t ;}private  tom.engine.adt.tomsignature.types.Declaration tom_set_stamp_Declaration( tom.engine.adt.tomsignature.types.Declaration t) {  return (tom.engine.adt.tomsignature.types.Declaration)t.setAnnotation(aterm.pure.SingletonFactory.getInstance().makeList(),aterm.pure.SingletonFactory.getInstance().makeList()) ;}private void tom_check_stamp_Declaration( tom.engine.adt.tomsignature.types.Declaration t) { if(t.getAnnotation(aterm.pure.SingletonFactory.getInstance().makeList()) == aterm.pure.SingletonFactory.getInstance().makeList())  return; else throw new RuntimeException("bad stamp");}private boolean tom_terms_equal_Declaration(Object t1, Object t2) {  return t1.equals(t2) ;}private boolean tom_is_fun_sym_AbstractDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isAbstractDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_AbstractDecl( tom.engine.adt.tomsignature.types.DeclarationList t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_AbstractDecl(t0); }private  tom.engine.adt.tomsignature.types.DeclarationList tom_get_slot_AbstractDecl_declList( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getDeclList() ;}private boolean tom_is_fun_sym_EmptyDeclaration( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isEmptyDeclaration() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_EmptyDeclaration() { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_EmptyDeclaration(); }private boolean tom_is_fun_sym_ArraySymbolDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isArraySymbolDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_ArraySymbolDecl( tom.engine.adt.tomsignature.types.TomName t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_ArraySymbolDecl(t0); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_ArraySymbolDecl_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private boolean tom_is_fun_sym_ListSymbolDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isListSymbolDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_ListSymbolDecl( tom.engine.adt.tomsignature.types.TomName t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_ListSymbolDecl(t0); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_ListSymbolDecl_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private boolean tom_is_fun_sym_SymbolDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isSymbolDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_SymbolDecl( tom.engine.adt.tomsignature.types.TomName t0) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_SymbolDecl(t0); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_SymbolDecl_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private boolean tom_is_fun_sym_Class( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isClass() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_Class( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomForwardType t1,  tom.engine.adt.tomsignature.types.Declaration t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_Class(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_Class_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomForwardType tom_get_slot_Class_extendsType( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getExtendsType() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_get_slot_Class_declaration( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getDeclaration() ;}private boolean tom_is_fun_sym_FunctionDef( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isFunctionDef() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_FunctionDef( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomList t1,  tom.engine.adt.tomsignature.types.TomType t2,  tom.engine.adt.tomsignature.types.TomType t3,  tom.engine.adt.tomsignature.types.Instruction t4) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_FunctionDef(t0, t1, t2, t3, t4); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_FunctionDef_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_FunctionDef_argumentList( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getArgumentList() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_FunctionDef_codomain( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getCodomain() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_FunctionDef_throwsType( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getThrowsType() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_FunctionDef_instruction( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstruction() ;}private boolean tom_is_fun_sym_Strategy( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isStrategy() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_Strategy( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomVisitList t1,  tom.engine.adt.tomsignature.types.Option t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_Strategy(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_Strategy_sName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getSName() ;}private  tom.engine.adt.tomsignature.types.TomVisitList tom_get_slot_Strategy_visitList( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVisitList() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_Strategy_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_MakeDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isMakeDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_MakeDecl( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomType t1,  tom.engine.adt.tomsignature.types.TomList t2,  tom.engine.adt.tomsignature.types.Instruction t3,  tom.engine.adt.tomsignature.types.Option t4) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_MakeDecl(t0, t1, t2, t3, t4); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_MakeDecl_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_MakeDecl_astType( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstType() ;}private  tom.engine.adt.tomsignature.types.TomList tom_get_slot_MakeDecl_args( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getArgs() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_MakeDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_MakeDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_MakeAddArray( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isMakeAddArray() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_MakeAddArray( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2,  tom.engine.adt.tomsignature.types.Instruction t3,  tom.engine.adt.tomsignature.types.Option t4) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_MakeAddArray(t0, t1, t2, t3, t4); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_MakeAddArray_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_MakeAddArray_varElt( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVarElt() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_MakeAddArray_varList( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVarList() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_MakeAddArray_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_MakeAddArray_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_MakeEmptyArray( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isMakeEmptyArray() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_MakeEmptyArray( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.Instruction t2,  tom.engine.adt.tomsignature.types.Option t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_MakeEmptyArray(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_MakeEmptyArray_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_MakeEmptyArray_varSize( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVarSize() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_MakeEmptyArray_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_MakeEmptyArray_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_GetSizeDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isGetSizeDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_GetSizeDecl( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.Instruction t2,  tom.engine.adt.tomsignature.types.Option t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_GetSizeDecl(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetSizeDecl_opname( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOpname() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetSizeDecl_variable( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_GetSizeDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_GetSizeDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_GetElementDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isGetElementDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_GetElementDecl( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2,  tom.engine.adt.tomsignature.types.Instruction t3,  tom.engine.adt.tomsignature.types.Option t4) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_GetElementDecl(t0, t1, t2, t3, t4); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetElementDecl_opname( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOpname() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetElementDecl_variable( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetElementDecl_index( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getIndex() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_GetElementDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_GetElementDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_MakeAddList( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isMakeAddList() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_MakeAddList( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.TomTerm t2,  tom.engine.adt.tomsignature.types.Instruction t3,  tom.engine.adt.tomsignature.types.Option t4) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_MakeAddList(t0, t1, t2, t3, t4); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_MakeAddList_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_MakeAddList_varElt( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVarElt() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_MakeAddList_varList( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVarList() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_MakeAddList_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_MakeAddList_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_MakeEmptyList( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isMakeEmptyList() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_MakeEmptyList( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.Instruction t1,  tom.engine.adt.tomsignature.types.Option t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_MakeEmptyList(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_MakeEmptyList_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_MakeEmptyList_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_MakeEmptyList_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_IsEmptyDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isIsEmptyDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_IsEmptyDecl( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.Instruction t2,  tom.engine.adt.tomsignature.types.Option t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_IsEmptyDecl(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_IsEmptyDecl_opname( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOpname() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_IsEmptyDecl_variable( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_IsEmptyDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_IsEmptyDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_GetTailDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isGetTailDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_GetTailDecl( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.Instruction t2,  tom.engine.adt.tomsignature.types.Option t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_GetTailDecl(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetTailDecl_opname( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOpname() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetTailDecl_variable( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_GetTailDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_GetTailDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_GetHeadDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isGetHeadDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_GetHeadDecl( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomType t1,  tom.engine.adt.tomsignature.types.TomTerm t2,  tom.engine.adt.tomsignature.types.Instruction t3,  tom.engine.adt.tomsignature.types.Option t4) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_GetHeadDecl(t0, t1, t2, t3, t4); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetHeadDecl_opname( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOpname() ;}private  tom.engine.adt.tomsignature.types.TomType tom_get_slot_GetHeadDecl_codomain( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getCodomain() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetHeadDecl_variable( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_GetHeadDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_GetHeadDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_TermsEqualDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isTermsEqualDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_TermsEqualDecl( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.Instruction t2,  tom.engine.adt.tomsignature.types.Option t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_TermsEqualDecl(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_TermsEqualDecl_termArg1( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getTermArg1() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_TermsEqualDecl_termArg2( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getTermArg2() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_TermsEqualDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_TermsEqualDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_GetSlotDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isGetSlotDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_GetSlotDecl( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomName t1,  tom.engine.adt.tomsignature.types.TomTerm t2,  tom.engine.adt.tomsignature.types.Instruction t3,  tom.engine.adt.tomsignature.types.Option t4) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_GetSlotDecl(t0, t1, t2, t3, t4); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetSlotDecl_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_GetSlotDecl_slotName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getSlotName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetSlotDecl_variable( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_GetSlotDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_GetSlotDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_IsFsymDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isIsFsymDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_IsFsymDecl( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.TomTerm t1,  tom.engine.adt.tomsignature.types.Instruction t2,  tom.engine.adt.tomsignature.types.Option t3) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_IsFsymDecl(t0, t1, t2, t3); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_IsFsymDecl_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_IsFsymDecl_variable( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_IsFsymDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_IsFsymDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_GetImplementationDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isGetImplementationDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_GetImplementationDecl( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.Instruction t1,  tom.engine.adt.tomsignature.types.Option t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_GetImplementationDecl(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_GetImplementationDecl_variable( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_GetImplementationDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_GetImplementationDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_SetStampDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isSetStampDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_SetStampDecl( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.Instruction t1,  tom.engine.adt.tomsignature.types.Option t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_SetStampDecl(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_SetStampDecl_variable( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_SetStampDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_SetStampDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_CheckStampDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isCheckStampDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_CheckStampDecl( tom.engine.adt.tomsignature.types.TomTerm t0,  tom.engine.adt.tomsignature.types.Instruction t1,  tom.engine.adt.tomsignature.types.Option t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_CheckStampDecl(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomTerm tom_get_slot_CheckStampDecl_variable( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getVariable() ;}private  tom.engine.adt.tomsignature.types.Instruction tom_get_slot_CheckStampDecl_instr( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getInstr() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_CheckStampDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}private boolean tom_is_fun_sym_TypeTermDecl( tom.engine.adt.tomsignature.types.Declaration t) {  return  (t!= null) && t.isTypeTermDecl() ;}private  tom.engine.adt.tomsignature.types.Declaration tom_make_TypeTermDecl( tom.engine.adt.tomsignature.types.TomName t0,  tom.engine.adt.tomsignature.types.DeclarationList t1,  tom.engine.adt.tomsignature.types.Option t2) { return  tom.engine.adt.tomsignature.TomSignatureFactory.getInstance(aterm.pure.SingletonFactory.getInstance()).makeDeclaration_TypeTermDecl(t0, t1, t2); }private  tom.engine.adt.tomsignature.types.TomName tom_get_slot_TypeTermDecl_astName( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getAstName() ;}private  tom.engine.adt.tomsignature.types.DeclarationList tom_get_slot_TypeTermDecl_declarations( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getDeclarations() ;}private  tom.engine.adt.tomsignature.types.Option tom_get_slot_TypeTermDecl_orgTrack( tom.engine.adt.tomsignature.types.Declaration t) {  return  t.getOrgTrack() ;}  
  //--------------------------
  
  // the lexer selector
  private TokenStreamSelector selector = null;
  
  // the file to be parsed
  private String currentFile = null;
  
  private tom.engine.tools.ASTFactory ast() {
    return TomEnvironment.getInstance().getAstFactory();
  }

  private HashSet includedFileSet = null;
  private HashSet alreadyParsedFileSet = null;
  
  // the parser for tom constructs
  TomParser tomparser; 
  
  // the lexer for target language
  HostLexer targetlexer = null;

  BackQuoteParser bqparser;

  OptionManager optionManager;
  
  TomStreamManager streamManager;
  
  // locations of target language blocks
  private int currentLine = 1;
  private int currentColumn = 1;
  
  public HostParser(TokenStreamSelector selector, String currentFile,
                    HashSet includedFiles, HashSet alreadyParsedFiles, 
                    OptionManager optionManager, TomStreamManager streamManager){
    this(selector);
    this.selector = selector;
    this.currentFile = currentFile;
    this.optionManager = optionManager;
    this.streamManager = streamManager;        
    this.targetlexer = (HostLexer) selector.getStream("targetlexer");
    targetlexer.setParser(this);
    this.includedFileSet = new HashSet(includedFiles);
    this.alreadyParsedFileSet = alreadyParsedFiles;

    testIncludedFile(currentFile, includedFileSet);
    // then create the Tom mode parser
    tomparser = new TomParser(getInputState(),this, optionManager);
    bqparser = tomparser.bqparser;
  }

  private OptionManager getOptionManager() {
    return optionManager;
  }

  private TomStreamManager getStreamManager() {
    return streamManager;
  }
    
  public TokenStreamSelector getSelector(){
    return selector;
  }
    
  public String getCurrentFile(){
    return currentFile;
  }
    
  public SymbolTable getSymbolTable() {
    return getStreamManager().getSymbolTable();
  }
  
  public void updatePosition(){
    updatePosition(getLine(),getColumn());
  }
    
  public void updatePosition(int i, int j){
    currentLine = i;
    currentColumn = j;
  }
    
  public int currentLine(){
    return currentLine;
  }

  public int currentColumn(){
    return currentColumn;
  }

  // remove braces of a code block
  private String cleanCode(String code){
    return code.substring(code.indexOf('{')+1,code.lastIndexOf('}'));
  }
    
  // remove the last right-brace of a code block
  private String removeLastBrace(String code){
    return code.substring(0,code.lastIndexOf("}"));
  }

  // returns the current goal language code
  private String getCode(){
    String result = targetlexer.target.toString();
    targetlexer.clearTarget();
    return result;
  }

  // add a token in the target code buffer
  public void addTargetCode(Token t){
    targetlexer.target.append(t.getText());
  }

  private String pureCode(String code){
    return code.replace('\t',' ');
  }

  private boolean isCorrect(String code){
    return (! code.equals("") && ! code.matches("\\s*"));
  }

  // returns the current line number
  public int getLine(){
    return targetlexer.getLine();
  }
    
  // returns the current column number
  public int getColumn(){
    return targetlexer.getColumn();
  }

  private void includeFile(String fileName, LinkedList list) 
    throws TomException, TomIncludeException {
    TomTerm astTom;
    InputStream input;
    byte inputBuffer[];
    //  TomParser tomParser;
    HostParser parser = null;
    File file;
    String fileCanonicalName = "";
    fileName = fileName.trim();
    fileName = fileName.replace('/',File.separatorChar);
    fileName = fileName.replace('\\',File.separatorChar);
    if(fileName.equals("")) {
      throw new TomIncludeException(TomMessage.missingIncludedFile,new Object[]{currentFile, new Integer(getLine())});
    }
    
    file = new File(fileName);
    if(file.isAbsolute()) {
      try {
        file = file.getCanonicalFile();
      } catch (IOException e) {
        System.out.println("IO Exception when computing included file");
        e.printStackTrace();
      }

      if(!file.exists()) {
        file = null;
      }
    } else {
      // StreamManager shall find it
      file = getStreamManager().findFile(new File(currentFile).getParentFile(),fileName);
    }
    
    if(file == null) {
      throw new TomIncludeException(TomMessage.includedFileNotFound,new Object[]{fileName, currentFile, new Integer(getLine()), currentFile});
    }
    try {
      fileCanonicalName = file.getCanonicalPath();
      if(testIncludedFile(fileCanonicalName, includedFileSet)) {
        throw new TomIncludeException(TomMessage.includedFileCycle,new Object[]{fileName, new Integer(getLine()), currentFile});
      }
      
      // if trying to include a file twice, but not in a cycle : discard
      if(testIncludedFile(fileCanonicalName, alreadyParsedFileSet)) {    
        if(!getStreamManager().isSilentDiscardImport(fileName)) {
          getLogger().log(new PlatformLogRecord(Level.WARNING,
                TomMessage.includedFileAlreadyParsed,
                currentFile, fileName, getLine()));
        }
        return;
      }
      
      parser = TomParserPlugin.newParser(fileCanonicalName,includedFileSet,alreadyParsedFileSet, getOptionManager(), getStreamManager());
      astTom = parser.input();
      astTom = tom_make_TomInclude(astTom.getTomList());
      list.add(astTom);
    } catch (Exception e) {
      if(e instanceof TomIncludeException) {
        throw (TomIncludeException)e;
      }
      StringWriter sw = new StringWriter();
      PrintWriter pw = new PrintWriter(sw);
      e.printStackTrace(pw);
      throw new TomException(TomMessage.errorWhileIncludingFile,
          new Object[]{e.getClass(),
            fileName,
            currentFile,
            new Integer(getLine()),
            sw.toString()
          });
    }
  }

  private boolean testIncludedFile(String fileName, HashSet fileSet) {
    // !(true) if the set did not already contain the specified element.
    return !fileSet.add(fileName);
  }
    
  void p(String s){
    System.out.println(s);
  }
  
  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }

protected HostParser(TokenBuffer tokenBuf, int k) {
  super(tokenBuf,k);
  tokenNames = _tokenNames;
}

public HostParser(TokenBuffer tokenBuf) {
  this(tokenBuf,1);
}

protected HostParser(TokenStream lexer, int k) {
  super(lexer,k);
  tokenNames = _tokenNames;
}

public HostParser(TokenStream lexer) {
  this(lexer,1);
}

public HostParser(ParserSharedInputState state) {
  super(state,1);
  tokenNames = _tokenNames;
}

	public final TomTerm  input() throws RecognitionException, TokenStreamException, TomException {
		TomTerm result;
		
		Token  t = null;
		
		result = null;
		LinkedList list = new LinkedList();
		
		
		blockList(list);
		t = LT(1);
		match(Token.EOF_TYPE);
		
		// This TL is last block: do no need to specify line and column
		list.add(tom_make_TargetLanguageToTomTerm(tom_make_TL(getCode(),tom_make_TextPosition(currentLine(),currentColumn()),tom_make_TextPosition(t.getLine(),t.getColumn())))
		
		
		
		);
		String comment = 
		"Generated by TOM (version " + Tom.VERSION + "): Do not edit this file";
		list.addFirst(tom_make_TargetLanguageToTomTerm(tom_make_Comment(comment)));
		result = tom_make_Tom(ast().makeList(list));
		
		return result;
	}
	
	public final void blockList(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		
		
		{
		_loop4:
		do {
			switch ( LA(1)) {
			case MATCH:
			{
				matchConstruct(list);
				break;
			}
			case STRATEGY:
			{
				strategyConstruct(list);
				break;
			}
			case RULE:
			{
				ruleConstruct(list);
				break;
			}
			case VAS:
			{
				signature(list);
				break;
			}
			case BACKQUOTE:
			{
				backquoteTerm(list);
				break;
			}
			case OPERATOR:
			{
				operator(list);
				break;
			}
			case OPERATORLIST:
			{
				operatorList(list);
				break;
			}
			case OPERATORARRAY:
			{
				operatorArray(list);
				break;
			}
			case INCLUDE:
			{
				includeConstruct(list);
				break;
			}
			case TYPETERM:
			case TYPE:
			{
				typeTerm(list);
				break;
			}
			case STRING:
			{
				match(STRING);
				break;
			}
			case LBRACE:
			{
				match(LBRACE);
				blockList(list);
				match(RBRACE);
				break;
			}
			default:
			{
				break _loop4;
			}
			}
		} while (true);
		}
	}
	
	public final void matchConstruct(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		
		Token  t = null;
		
		TargetLanguage code = null;
		
		
		t = LT(1);
		match(MATCH);
		
		String textCode = getCode();
		if(isCorrect(textCode)) {
		code = tom_make_TL(textCode,tom_make_TextPosition(currentLine,currentColumn),tom_make_TextPosition(t.getLine(),t.getColumn())
		)
		
		
		
		;
		list.add(code);
		} 
		
		Option ot = tom_make_OriginTracking(tom_make_Name("Match"),t.getLine(),tom_make_Name(currentFile));
		
		Instruction match = tomparser.matchConstruct(ot);
		list.add(match);
		
	}
	
	public final void strategyConstruct(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		
		Token  t = null;
		
		TargetLanguage code = null;
		
		
		t = LT(1);
		match(STRATEGY);
		
		// add the target code preceeding the construct
		String textCode = getCode();
		
		if(isCorrect(textCode)) {
		code = tom_make_TL(textCode,tom_make_TextPosition(currentLine,currentColumn),tom_make_TextPosition(t.getLine(),t.getColumn())
		)
		
		
		
		;
		list.add(code);
		}
		
		Option ot = tom_make_OriginTracking(tom_make_Name("Strategy"),t.getLine(),tom_make_Name(currentFile)
		)
		
		
		
		;    
		
		// call the tomparser for the construct
		Declaration strategy = tomparser.strategyConstruct(ot);
		list.add(strategy);
		
	}
	
	public final void ruleConstruct(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		
		Token  t = null;
		
		TargetLanguage code = null;
		
		
		t = LT(1);
		match(RULE);
		
		// add the target code preceeding the construct
		String textCode = getCode();
		
		if(isCorrect(textCode)) {
		code = tom_make_TL(textCode,tom_make_TextPosition(currentLine,currentColumn),tom_make_TextPosition(t.getLine(),t.getColumn())
		)
		
		
		
		;
		list.add(code);
		}
		
		Option ot = tom_make_OriginTracking(tom_make_Name("Rule"),t.getLine(),tom_make_Name(currentFile)
		)
		
		
		
		;    
		
		// call the tomparser for the construct
		Instruction ruleSet = tomparser.ruleConstruct(ot);
		list.add(ruleSet);
		
	}
	
	public final void signature(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		
		Token  t = null;
		
		int initialVasLine;
		TargetLanguage vasTL = null, code = null;
		LinkedList blockList = new LinkedList();
		String vasCode = null, fileName = "", apiName = null, packageName = "";
		File file = null;
		
		
		t = LT(1);
		match(VAS);
		
		initialVasLine = t.getLine();
		
		String textCode = getCode();
		if(isCorrect(textCode)) {
		code = tom_make_TL(textCode,tom_make_TextPosition(currentLine,currentColumn),tom_make_TextPosition(t.getLine(),t.getColumn()))
		
		;
		list.add(code);
		} 
		
		vasTL=goalLanguage(blockList);
		
		vasCode = vasTL.getCode().trim();
		String destDir = getStreamManager().getDestDir().getPath();
		// Generated Tom, ADT and API from VAS Code
		String generatedADTName = null;
		ArrayList vasParams = new ArrayList();
		vasParams.add("--destdir");
		vasParams.add(destDir);
		packageName = getStreamManager().getPackagePath().replace(File.separatorChar, '.');
		String inputFileNameWithoutExtension = getStreamManager().getRawFileName().toLowerCase();
		String subPackageName = "";
		if(packageName.equals("")) {
		subPackageName = inputFileNameWithoutExtension;
		} else {
		subPackageName = packageName + "." + inputFileNameWithoutExtension;
		}
		vasParams.add("--package");
		vasParams.add(subPackageName);
		PluginPlatform vasPlatform = Vas.streamedCall((String[]) vasParams.toArray(new String[vasParams.size()]), new StringReader(vasCode));
		if(vasPlatform == null) {
		throw new TomException(TomMessage.vasPlatformFailure,new Object[]{currentFile,new Integer(initialVasLine)});
		}
		int vasResult = vasPlatform.run();
		if(vasResult != 0) {
		//System.out.println(platform.getAlertForInput().toString());
		throw new TomException(TomMessage.vasFailure,new Object[]{currentFile,new Integer(initialVasLine)});
		}
		
		generatedADTName = (String)vasPlatform.getLastGeneratedObjects().get(0);
		if(generatedADTName == null) {
		throw new TomException(TomMessage.vasFailure,new Object[]{currentFile,new Integer(initialVasLine)});
		}
		// Simulate the inclusion of generated Tom file
		
		File adtFile = new File(generatedADTName);
		String adtFileName = adtFile.toString();
		try {
		String moduleName = adtFile.getName().substring(0,adtFile.getName().length()-".adt".length());
		String tomFileName = adtFile.getParentFile().getCanonicalPath() + File.separatorChar + moduleName.toLowerCase() + File.separatorChar + moduleName + ".tom";
		
		//System.out.println("tomFileName = " + tomFileName);
		file = new File(tomFileName);
		fileName = file.getCanonicalPath();
		} catch (IOException e) {
		throw new TomException(TomMessage.iOExceptionWithGeneratedTomFile,
		new Object[]{fileName, currentFile, e.getMessage()});
		} catch (Exception e) {
		StringWriter sw = new StringWriter();
		PrintWriter pw = new PrintWriter(sw);
		e.printStackTrace(pw);
		throw new TomException(TomMessage.exceptionWithGeneratedTomFile, 
		new Object[]{adtFileName, currentFile, sw.toString()});
		}
		
		includeFile(fileName, list);
		
		// the vas construct is over : a new target block begins
		updatePosition();
		
	}
	
	public final void backquoteTerm(
		LinkedList list
	) throws RecognitionException, TokenStreamException {
		
		Token  t = null;
		
		TargetLanguage code = null;
		
		
		t = LT(1);
		match(BACKQUOTE);
		
		String textCode = getCode();
		if(isCorrect(textCode)) {
		code = tom_make_TL(textCode,tom_make_TextPosition(currentLine,currentColumn),tom_make_TextPosition(t.getLine(),t.getColumn())
		)
		
		
		
		;
		list.add(code);
		} 
		
		Option ot = tom_make_OriginTracking(tom_make_Name("Backquote"),t.getLine(),tom_make_Name(currentFile));
		TomTerm bqTerm = bqparser.beginBackquote();
		
		// update position for new target block
		updatePosition();
		list.add(bqTerm);
		
	}
	
	public final void operator(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		
		Token  t = null;
		
		TargetLanguage code = null;
		
		
		t = LT(1);
		match(OPERATOR);
		
		String textCode = pureCode(getCode());
		if(isCorrect(textCode)) {
		code = tom_make_TL(textCode,tom_make_TextPosition(currentLine,currentColumn),tom_make_TextPosition(t.getLine(),t.getColumn()))
		
		
		;
		list.add(tom_make_TargetLanguageToTomTerm(code));
		}
		
		Declaration operatorDecl = tomparser.operator();
		list.add(operatorDecl);
		
	}
	
	public final void operatorList(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		
		Token  t = null;
		
		TargetLanguage code = null;
		
		
		t = LT(1);
		match(OPERATORLIST);
		
		String textCode = pureCode(getCode());
		if(isCorrect(textCode)) {
		code = tom_make_TL(textCode,tom_make_TextPosition(currentLine,currentColumn),tom_make_TextPosition(t.getLine(),t.getColumn()))
		
		
		;
		list.add(tom_make_TargetLanguageToTomTerm(code));
		}
		
		Declaration operatorListDecl = tomparser.operatorList();
		list.add(operatorListDecl);
		
	}
	
	public final void operatorArray(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		
		Token  t = null;
		
		TargetLanguage code = null;
		
		
		t = LT(1);
		match(OPERATORARRAY);
		
		String textCode = pureCode(getCode());
		if(isCorrect(textCode)) {
		code = tom_make_TL(textCode,tom_make_TextPosition(currentLine,currentColumn),tom_make_TextPosition(t.getLine(),t.getColumn()))
		
		
		;
		list.add(tom_make_TargetLanguageToTomTerm(code));
		}
		
		Declaration operatorArrayDecl = tomparser.operatorArray();
		list.add(operatorArrayDecl);
		
	}
	
	public final void includeConstruct(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		
		Token  t = null;
		
		TargetLanguage tlCode = null;
		LinkedList blockList = new LinkedList();
		
		
		t = LT(1);
		match(INCLUDE);
		
		TargetLanguage code = null;
		String textCode = getCode();
		if(isCorrect(textCode)) {
		code = tom_make_TL(textCode,tom_make_TextPosition(currentLine,currentColumn),tom_make_TextPosition(t.getLine(),t.getColumn()))
		
		
		;
		list.add(tom_make_TargetLanguageToTomTerm(code));
		}
		
		tlCode=goalLanguage(blockList);
		
		includeFile(tlCode.getCode(),list);
		updatePosition();
		
	}
	
	public final void typeTerm(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		
		Token  tt = null;
		Token  t = null;
		
		TargetLanguage code = null;
		int line, column;
		
		
		{
		switch ( LA(1)) {
		case TYPETERM:
		{
			tt = LT(1);
			match(TYPETERM);
			
			line = tt.getLine();
			column = tt.getColumn();
			
			break;
		}
		case TYPE:
		{
			t = LT(1);
			match(TYPE);
			
			line = t.getLine();
			column = t.getColumn();
			
			break;
		}
		default:
		{
			throw new NoViableAltException(LT(1), getFilename());
		}
		}
		}
		
		// addPreviousCode...
		String textCode = getCode();
		if(isCorrect(textCode)) {
		code = tom_make_TL(textCode,tom_make_TextPosition(currentLine,currentColumn),tom_make_TextPosition(line,column))
		
		
		;
		list.add(code);
		}
		Declaration termdecl = tomparser.typeTerm();
		
		list.add(termdecl);
		
		
		
	}
	
	public final TargetLanguage  goalLanguage(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		TargetLanguage result;
		
		Token  t1 = null;
		Token  t2 = null;
		
		result =  null;
		
		
		t1 = LT(1);
		match(LBRACE);
		
		updatePosition(t1.getLine(),t1.getColumn());
		
		blockList(list);
		t2 = LT(1);
		match(RBRACE);
		
		result = tom_make_TL(cleanCode(getCode()),tom_make_TextPosition(currentLine(),currentColumn()),tom_make_TextPosition(t2.getLine(),t2.getColumn())
		)
		
		
		;
		targetlexer.clearTarget();
		
		return result;
	}
	
	public final TargetLanguage  targetLanguage(
		LinkedList list
	) throws RecognitionException, TokenStreamException, TomException {
		TargetLanguage result;
		
		Token  t = null;
		
		result = null;
		
		
		blockList(list);
		t = LT(1);
		match(RBRACE);
		
		String code = removeLastBrace(getCode());
		
		//System.out.println("code = " + code);
		//System.out.println("list = " + list);
		
		result = tom_make_TL(code,tom_make_TextPosition(currentLine(),currentColumn()),tom_make_TextPosition(t.getLine(),t.getColumn())
		)
		
		
		;
		targetlexer.clearTarget();
		
		return result;
	}
	
	
	public static final String[] _tokenNames = {
		"<0>",
		"EOF",
		"<2>",
		"NULL_TREE_LOOKAHEAD",
		"STRING",
		"LBRACE",
		"RBRACE",
		"STRATEGY",
		"RULE",
		"MATCH",
		"VAS",
		"BACKQUOTE",
		"OPERATOR",
		"OPERATORLIST",
		"OPERATORARRAY",
		"INCLUDE",
		"TYPETERM",
		"TYPE",
		"ESC",
		"HEX_DIGIT",
		"WS",
		"COMMENT",
		"SL_COMMENT",
		"ML_COMMENT",
		"CODE",
		"TARGET"
	};
	
	
	}

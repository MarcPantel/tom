/* Generated By:JavaCC: Do not edit this line. TomParserConstants.java */
/*
  
    TOM - To One Matching Compiler

    Copyright (C) 2000-2003  LORIA (CNRS, INPL, INRIA, UHP, U-Nancy 2)
			     Nancy, France.

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

    Pierre-Etienne Moreau	e-mail: Pierre-Etienne.Moreau@loria.fr

*/

package jtom.parser;

public interface TomParserConstants {

  int EOF = 0;
  int MATCH = 1;
  int RULE = 2;
  int MAKE_TERM = 3;
  int BACKQUOTE_TERM = 4;
  int VARIABLE = 5;
  int TYPE = 6;
  int TYPETERM = 7;
  int TYPEINT = 8;
  int TYPELIST = 9;
  int TYPEARRAY = 10;
  int INCLUDE = 11;
  int OPERATOR = 12;
  int OPERATOR_LIST = 13;
  int OPERATOR_ARRAY = 14;
  int SINGLE_LINE_COMMENT = 23;
  int FORMAL_COMMENT = 24;
  int MULTI_LINE_COMMENT = 25;
  int STRING_LITERAL = 27;
  int LBRACE = 28;
  int RBRACE = 29;
  int OTHER = 30;
  int TOM_SINGLE_LINE_COMMENT = 39;
  int TOM_FORMAL_COMMENT = 40;
  int TOM_MULTI_LINE_COMMENT = 41;
  int TOM_ARROW = 43;
  int TOM_DOUBLE_ARROW = 44;
  int TOM_ALTERNATIVE = 45;
  int TOM_COMMA = 46;
  int TOM_COLON = 47;
  int TOM_EQUAL = 48;
  int TOM_AT = 49;
  int TOM_DOT = 50;
  int TOM_LPAREN = 51;
  int TOM_RPAREN = 52;
  int TOM_LBRACKET = 53;
  int TOM_RBRACKET = 54;
  int TOM_LBRACE = 55;
  int TOM_RBRACE = 56;
  int TOM_UNDERSCORE = 57;
  int TOM_MINUS = 58;
  int TOM_STAR = 59;
  int TOM_WHERE = 60;
  int TOM_IF = 61;
  int TOM_MAKE = 62;
  int TOM_MAKE_EMPTY = 63;
  int TOM_MAKE_INSERT = 64;
  int TOM_MAKE_APPEND = 65;
  int TOM_IMPLEMENT = 66;
  int TOM_FSYM = 67;
  int TOM_GET_SLOT = 68;
  int TOM_IS_FSYM = 69;
  int TOM_GET_SUBTERM = 70;
  int TOM_GET_FUN_SYM = 71;
  int TOM_CMP_FUN_SYM = 72;
  int TOM_EQUALS = 73;
  int TOM_GET_HEAD = 74;
  int TOM_GET_TAIL = 75;
  int TOM_IS_EMPTY = 76;
  int TOM_GET_ELEMENT = 77;
  int TOM_GET_SIZE = 78;
  int TOM_INTEGER = 79;
  int TOM_IDENTIFIER = 80;
  int TOM_LETTER = 81;
  int TOM_DIGIT = 82;

  int DEFAULT = 0;
  int IN_SINGLE_LINE_COMMENT = 1;
  int IN_FORMAL_COMMENT = 2;
  int IN_MULTI_LINE_COMMENT = 3;
  int TOM = 4;
  int TOM_IN_SINGLE_LINE_COMMENT = 5;
  int TOM_IN_FORMAL_COMMENT = 6;
  int TOM_IN_MULTI_LINE_COMMENT = 7;

  String[] tokenImage = {
    "<EOF>",
    "\"%match\"",
    "\"%rule\"",
    "\"%make\"",
    "\"`\"",
    "\"%variable\"",
    "\"%type\"",
    "\"%typeterm\"",
    "\"%typeint\"",
    "\"%typelist\"",
    "\"%typearray\"",
    "\"%include\"",
    "\"%op\"",
    "\"%oplist\"",
    "\"%oparray\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 21>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 26>",
    "<STRING_LITERAL>",
    "\"{\"",
    "\"}\"",
    "<OTHER>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 37>",
    "\"/*\"",
    "<TOM_SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 42>",
    "\"->\"",
    "\"=>\"",
    "\"|\"",
    "\",\"",
    "\":\"",
    "\"=\"",
    "\"@\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"_\"",
    "\"-\"",
    "\"*\"",
    "\"where\"",
    "\"if\"",
    "\"make\"",
    "\"make_empty\"",
    "\"make_insert\"",
    "\"make_append\"",
    "\"implement\"",
    "\"fsym\"",
    "\"get_slot\"",
    "\"is_fsym\"",
    "\"get_subterm\"",
    "\"get_fun_sym\"",
    "\"cmp_fun_sym\"",
    "\"equals\"",
    "\"get_head\"",
    "\"get_tail\"",
    "\"is_empty\"",
    "\"get_element\"",
    "\"get_size\"",
    "<TOM_INTEGER>",
    "<TOM_IDENTIFIER>",
    "<TOM_LETTER>",
    "<TOM_DIGIT>",
  };

}

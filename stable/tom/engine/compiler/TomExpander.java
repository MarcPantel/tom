/* Generated by TOM (version 2.4alpha): Do not edit this file *//*
 * 
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2006, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine.compiler;

import java.util.logging.Level;
import java.util.Iterator;
import java.util.ArrayList;

import tom.engine.exception.TomRuntimeException;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.TomBase;
import tom.engine.TomMessage;
import tom.engine.tools.ASTFactory;
import tom.engine.tools.TomGenericPlugin;
import tom.engine.tools.Tools;
import tom.engine.tools.SymbolTable;
import tom.engine.xml.Constants;
import tom.platform.OptionParser;
import tom.platform.adt.platformoption.types.PlatformOptionList;
import aterm.ATerm;

import tom.library.strategy.mutraveler.MuTraveler;
import tom.library.strategy.mutraveler.Identity;
import jjtraveler.reflective.VisitableVisitor;
import jjtraveler.VisitFailure;


/**
 * The TomExpander plugin.
 * Perform syntax expansion and more.
 */
public class TomExpander extends TomGenericPlugin {

  /* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file */ private static boolean tom_terms_equal_String( String  t1,  String  t2) {  return  (t1.equals(t2))  ;}  /* Generated by TOM (version 2.4alpha): Do not edit this file */private static boolean tom_terms_equal_int( int  t1,  int  t2) {  return  (t1==t2)  ;} /* Generated by TOM (version 2.4alpha): Do not edit this file */ /* Generated by TOM (version 2.4alpha): Do not edit this file */ /* Generated by TOM (version 2.4alpha): Do not edit this file */ private static boolean tom_terms_equal_Instruction(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomTypeList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomType(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomSymbol(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Declaration(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomNameList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Expression(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomTerm(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Option(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_OptionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Constraint(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ConstraintList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Slot(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_PairNameDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SlotList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_Return( tom.engine.adt.tomterm.types.TomTerm  t0) { return  tom.engine.adt.tominstruction.types.instruction.Return.make(t0); }private static boolean tom_is_fun_sym_TypesToType( tom.engine.adt.tomtype.types.TomType  t) {  return  (t!=null) && t.isTypesToType()  ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_get_slot_TypesToType_Domain( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getDomain()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_TypesToType_Codomain( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getCodomain()  ;}private static boolean tom_is_fun_sym_Symbol( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  (t!=null) && t.isSymbol()  ;}private static  tom.engine.adt.tomsignature.types.TomSymbol  tom_make_Symbol( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomtype.types.TomType  t1,  tom.engine.adt.tomslot.types.PairNameDeclList  t2,  tom.engine.adt.tomoption.types.OptionList  t3) { return  tom.engine.adt.tomsignature.types.tomsymbol.Symbol.make(t0, t1, t2, t3); }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Symbol_AstName( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Symbol_TypesToType( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getTypesToType()  ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_slot_Symbol_PairNameDeclList( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getPairNameDeclList()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Symbol_Option( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getOption()  ;}private static boolean tom_is_fun_sym_GetHeadDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  (t!=null) && t.isGetHeadDecl()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetHeadDecl_Opname( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetHeadDecl_Codomain( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetHeadDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetHeadDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetHeadDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_IsFsymDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  (t!=null) && t.isIsFsymDecl()  ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_make_IsFsymDecl( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tominstruction.types.Instruction  t2,  tom.engine.adt.tomoption.types.Option  t3) { return  tom.engine.adt.tomdeclaration.types.declaration.IsFsymDecl.make(t0, t1, t2, t3); }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsFsymDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsFsymDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_IsFsymDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_IsFsymDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_make_EmptyName() { return  tom.engine.adt.tomname.types.tomname.EmptyName.make(); }private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) {  return  (t!=null) && t.isName()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_make_Name( String  t0) { return  tom.engine.adt.tomname.types.tomname.Name.make(t0); }private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) {  return  t.getString()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_make_FalseTL() { return  tom.engine.adt.tomexpression.types.expression.FalseTL.make(); }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_BuildTerm( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomList  t1,  String  t2) { return  tom.engine.adt.tomterm.types.tomterm.BuildTerm.make(t0, t1, t2); }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_BuildConstant( tom.engine.adt.tomname.types.TomName  t0) { return  tom.engine.adt.tomterm.types.tomterm.BuildConstant.make(t0); }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_FunctionCall( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomList  t1) { return  tom.engine.adt.tomterm.types.tomterm.FunctionCall.make(t0, t1); }private static boolean tom_is_fun_sym_BackQuoteAppl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isBackQuoteAppl()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_BackQuoteAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BackQuoteAppl_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_BackQuoteAppl_Args( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getArgs()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_ExpressionToTomTerm( tom.engine.adt.tomexpression.types.Expression  t0) { return  tom.engine.adt.tomterm.types.tomterm.ExpressionToTomTerm.make(t0); }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_TomSymbolToTomTerm( tom.engine.adt.tomsignature.types.TomSymbol  t0) { return  tom.engine.adt.tomterm.types.tomterm.TomSymbolToTomTerm.make(t0); }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_emptyTerm() { return  tom.engine.adt.tomterm.types.tomterm.emptyTerm.make(); }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_Placeholder( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomconstraint.types.ConstraintList  t1) { return  tom.engine.adt.tomterm.types.tomterm.Placeholder.make(t0, t1); }private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isVariable()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_Variable( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomName  t1,  tom.engine.adt.tomtype.types.TomType  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.Variable.make(t0, t1, t2, t3); }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_XMLAppl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isXMLAppl()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_XMLAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_XMLAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getNameList()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_XMLAppl_AttrList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAttrList()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_XMLAppl_ChildList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getChildList()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_XMLAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isRecordAppl()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_RecordAppl( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomNameList  t1,  tom.engine.adt.tomslot.types.SlotList  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(t0, t1, t2, t3); }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getNameList()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getSlots()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_TermAppl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isTermAppl()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_TermAppl( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomNameList  t1,  tom.engine.adt.tomterm.types.TomList  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.TermAppl.make(t0, t1, t2, t3); }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_TermAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_TermAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getNameList()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_TermAppl_Args( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getArgs()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_TermAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_OriginTracking( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isOriginTracking()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_make_OriginTracking( tom.engine.adt.tomname.types.TomName  t0,  int  t1,  String  t2) { return  tom.engine.adt.tomoption.types.option.OriginTracking.make(t0, t1, t2); }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_OriginTracking_AstName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getAstName()  ;}private static  int  tom_get_slot_OriginTracking_Line( tom.engine.adt.tomoption.types.Option  t) {  return  t.getLine()  ;}private static  String  tom_get_slot_OriginTracking_FileName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getFileName()  ;}private static boolean tom_is_fun_sym_DeclarationToOption( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isDeclarationToOption()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_make_DeclarationToOption( tom.engine.adt.tomdeclaration.types.Declaration  t0) { return  tom.engine.adt.tomoption.types.option.DeclarationToOption.make(t0); }private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_get_slot_DeclarationToOption_AstDeclaration( tom.engine.adt.tomoption.types.Option  t) {  return  t.getAstDeclaration()  ;}private static boolean tom_is_fun_sym_PairSlotAppl( tom.engine.adt.tomslot.types.Slot  t) {  return  (t!=null) && t.isPairSlotAppl()  ;}private static  tom.engine.adt.tomslot.types.Slot  tom_make_PairSlotAppl( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(t0, t1); }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_PairSlotAppl_SlotName( tom.engine.adt.tomslot.types.Slot  t) {  return  t.getSlotName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_PairSlotAppl_Appl( tom.engine.adt.tomslot.types.Slot  t) {  return  t.getAppl()  ;}private static boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomname.types.TomNameList  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName || t instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_empty_list_concTomName() { return  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ; }private static  tom.engine.adt.tomname.types.TomNameList  tom_cons_list_concTomName( tom.engine.adt.tomname.types.TomName  e,  tom.engine.adt.tomname.types.TomNameList  l) { return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_head_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.getHeadconcTomName()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_tail_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.getTailconcTomName()  ;}private static boolean tom_is_empty_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.isEmptyconcTomName()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList  l1,  tom.engine.adt.tomname.types.TomNameList  l2) {    if(tom_is_empty_concTomName_TomNameList(l1)) {     return l2;    } else if(tom_is_empty_concTomName_TomNameList(l2)) {     return l1;    } else if(tom_is_empty_concTomName_TomNameList(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(l1))) {     return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(l1),l2);    } else {      return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(l1),tom_append_list_concTomName(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(l1),l2));    }   }  private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end) {    if(tom_terms_equal_TomNameList(begin,end)) {      return ( tom.engine.adt.tomname.types.TomNameList )tom_empty_list_concTomName();    } else {      return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(begin),( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomTerm( tom.engine.adt.tomterm.types.TomList  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm || t instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_empty_list_concTomTerm() { return  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ; }private static  tom.engine.adt.tomterm.types.TomList  tom_cons_list_concTomTerm( tom.engine.adt.tomterm.types.TomTerm  e,  tom.engine.adt.tomterm.types.TomList  l) { return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(e,l) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_head_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.getHeadconcTomTerm()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_tail_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.getTailconcTomTerm()  ;}private static boolean tom_is_empty_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.isEmptyconcTomTerm()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList  l1,  tom.engine.adt.tomterm.types.TomList  l2) {    if(tom_is_empty_concTomTerm_TomList(l1)) {     return l2;    } else if(tom_is_empty_concTomTerm_TomList(l2)) {     return l1;    } else if(tom_is_empty_concTomTerm_TomList(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(l1))) {     return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(l1),l2);    } else {      return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(l1),tom_append_list_concTomTerm(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(l1),l2));    }   }  private static  tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end) {    if(tom_terms_equal_TomList(begin,end)) {      return ( tom.engine.adt.tomterm.types.TomList )tom_empty_list_concTomTerm();    } else {      return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(begin),( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(begin),end));    }   }  private static boolean tom_is_fun_sym_concOption( tom.engine.adt.tomoption.types.OptionList  t) {  return  t instanceof tom.engine.adt.tomoption.types.optionlist.ConsconcOption || t instanceof tom.engine.adt.tomoption.types.optionlist.EmptyconcOption  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_empty_list_concOption() { return  tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_cons_list_concOption( tom.engine.adt.tomoption.types.Option  e,  tom.engine.adt.tomoption.types.OptionList  l) { return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make(e,l) ; }private static  tom.engine.adt.tomoption.types.Option  tom_get_head_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.getHeadconcOption()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_tail_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.getTailconcOption()  ;}private static boolean tom_is_empty_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.isEmptyconcOption()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList  l1,  tom.engine.adt.tomoption.types.OptionList  l2) {    if(tom_is_empty_concOption_OptionList(l1)) {     return l2;    } else if(tom_is_empty_concOption_OptionList(l2)) {     return l1;    } else if(tom_is_empty_concOption_OptionList(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(l1))) {     return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(l1),l2);    } else {      return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(l1),tom_append_list_concOption(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(l1),l2));    }   }  private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end) {    if(tom_terms_equal_OptionList(begin,end)) {      return ( tom.engine.adt.tomoption.types.OptionList )tom_empty_list_concOption();    } else {      return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(begin),( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(begin),end));    }   }  private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_empty_list_concConstraint() { return  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ; }private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_cons_list_concConstraint( tom.engine.adt.tomconstraint.types.Constraint  e,  tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make(e,l) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_head_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.getHeadconcConstraint()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_tail_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.getTailconcConstraint()  ;}private static boolean tom_is_empty_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.isEmptyconcConstraint()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {    if(tom_is_empty_concConstraint_ConstraintList(l1)) {     return l2;    } else if(tom_is_empty_concConstraint_ConstraintList(l2)) {     return l1;    } else if(tom_is_empty_concConstraint_ConstraintList(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(l1))) {     return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(l1),l2);    } else {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(l1),tom_append_list_concConstraint(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(l1),l2));    }   }  private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end) {    if(tom_terms_equal_ConstraintList(begin,end)) {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_empty_list_concConstraint();    } else {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(begin),( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSlot( tom.engine.adt.tomslot.types.SlotList  t) {  return  t instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot || t instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_empty_list_concSlot() { return  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ; }private static  tom.engine.adt.tomslot.types.SlotList  tom_cons_list_concSlot( tom.engine.adt.tomslot.types.Slot  e,  tom.engine.adt.tomslot.types.SlotList  l) { return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.engine.adt.tomslot.types.Slot  tom_get_head_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.getHeadconcSlot()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_tail_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.getTailconcSlot()  ;}private static boolean tom_is_empty_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.isEmptyconcSlot()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList  l1,  tom.engine.adt.tomslot.types.SlotList  l2) {    if(tom_is_empty_concSlot_SlotList(l1)) {     return l2;    } else if(tom_is_empty_concSlot_SlotList(l2)) {     return l1;    } else if(tom_is_empty_concSlot_SlotList(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(l1))) {     return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(l1),l2);    } else {      return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(l1),l2));    }   }  private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end) {    if(tom_terms_equal_SlotList(begin,end)) {      return ( tom.engine.adt.tomslot.types.SlotList )tom_empty_list_concSlot();    } else {      return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(begin),( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(begin),end));    }   }   /* Generated by TOM (version 2.4alpha): Do not edit this file */private static boolean tom_terms_equal_Strategy(Object t1, Object t2) {  return t1.equals(t2) ;}private static  jjtraveler.reflective.VisitableVisitor  tom_make_mu( jjtraveler.reflective.VisitableVisitor  var,  jjtraveler.reflective.VisitableVisitor  v) { return  tom.library.strategy.mutraveler.MuTraveler.mu(var,v) ; }/* Generated by TOM (version 2.4alpha): Do not edit this file */private static  jjtraveler.reflective.VisitableVisitor  tom_make_Identity() { return  new tom.library.strategy.mutraveler.Identity() ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_All( jjtraveler.reflective.VisitableVisitor  v) { return  new tom.library.strategy.mutraveler.All(v) ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_MuVar( String  name) { return  new tom.library.strategy.mutraveler.MuVar(name) ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_ChoiceId( jjtraveler.reflective.VisitableVisitor  first,  jjtraveler.reflective.VisitableVisitor  then) { return  new tom.library.strategy.mutraveler.ChoiceId(first,then) ; }   private static  jjtraveler.reflective.VisitableVisitor  tom_make_ChoiceTopDown( jjtraveler.reflective.VisitableVisitor  v) { return tom_make_mu(tom_make_MuVar("x"),tom_make_ChoiceId(v,tom_make_All(tom_make_MuVar("x"))))







 ; }


  /** some output suffixes */
  public static final String EXPANDED_SUFFIX       = ".tfix.expanded";
  public static final String EXPANDED_TABLE_SUFFIX = ".tfix.expanded.table";

  /** the declared options string */
  public static final String DECLARED_OPTIONS =
    "<options>" +
    "<boolean name='expand' altName='' description='Expander (activated by default)' value='true'/>" +
    "</options>";

  /** the kernel expander acting at very low level */
  private TomKernelExpander tomKernelExpander;
  /** the tomfactory for creating intermediate terms */

  /** Constructor*/
  public TomExpander() {
    super("TomExpander");
    tomKernelExpander = new TomKernelExpander();
  }

  /**
   * The run() method performs expansion for tom syntax, variables,...
   */
  public void run() {
    long startChrono = System.currentTimeMillis();
    boolean intermediate = getOptionBooleanValue("intermediate");
    TomTerm expandedTerm = null;
    try {
      tomKernelExpander.setSymbolTable(getStreamManager().getSymbolTable());
      TomTerm syntaxExpandedTerm = (TomTerm) tom_make_ChoiceTopDown(tom_make_expandTermApplTomSyntax(this)).visit((TomTerm)getWorkingTerm());
      updateSymbolTable();
      TomTerm context = tom_make_emptyTerm();

      TomTerm variableExpandedTerm = expandVariable(context, syntaxExpandedTerm);
      TomTerm stringExpandedTerm = (TomTerm) tom_make_ChoiceTopDown(tom_make_expandString(this)).visit(variableExpandedTerm);
      expandedTerm = (TomTerm) tom_make_ChoiceTopDown(tom_make_updateCodomain(this)).visit(stringExpandedTerm);
      setWorkingTerm(expandedTerm);
      // verbose
      getLogger().log(Level.INFO, TomMessage.tomExpandingPhase.getMessage(),
          new Integer((int)(System.currentTimeMillis()-startChrono)));
    } catch (Exception e) {
      getLogger().log( Level.SEVERE, TomMessage.exceptionMessage.getMessage(),
          new Object[]{getClass().getName(), getStreamManager().getInputFileName(), e.getMessage()} );
      e.printStackTrace();
      return;
    }
    if(intermediate) {
      Tools.generateOutput(getStreamManager().getOutputFileNameWithoutSuffix()
          + EXPANDED_SUFFIX, expandedTerm);
      Tools.generateOutput(getStreamManager().getOutputFileNameWithoutSuffix()
          + EXPANDED_TABLE_SUFFIX, symbolTable().toTerm());
    }
  }

  /*
   * updateSymbol is called after a first syntax expansion phase
   * this phase updates the symbolTable according to the typeTable
   * this is performed by recursively traversing each symbol
   * - backquote are expanded
   * - each TomTypeAlone is replaced by the corresponding TomType
   */
  public void updateSymbolTable() {
    SymbolTable symbolTable = getStreamManager().getSymbolTable();
    Iterator it = symbolTable.keySymbolIterator();
    VisitableVisitor expandStrategy = (tom_make_ChoiceTopDown(tom_make_expandTermApplTomSyntax(this)));

    while(it.hasNext()) {
      String tomName = (String)it.next();
      TomTerm emptyContext = tom_make_emptyTerm();
      TomSymbol tomSymbol = getSymbolFromName(tomName);

      /*
       * add default isFsym and make HERE
       */
      tomSymbol = addDefaultIsFSym(tomSymbol);
      try {
        //TomTerm term = (TomTerm) expandStrategy.visit(`TomSymbolToTomTerm(tomSymbol));
        //tomSymbol = term.getAstSymbol();
        tomSymbol = (TomSymbol) expandStrategy.visit(tomSymbol);
      } catch(VisitFailure e) {
        System.out.println("should not be there");
      }
      //System.out.println("symbol = " + tomSymbol);
      tomSymbol = expandVariable(emptyContext,tom_make_TomSymbolToTomTerm(tomSymbol)).getAstSymbol();
      getStreamManager().getSymbolTable().putSymbol(tomName,tomSymbol);
    }
  }

  private TomSymbol addDefaultIsFSym(TomSymbol tomSymbol) {
     if(tomSymbol instanceof  tom.engine.adt.tomsignature.types.TomSymbol ) { { tom.engine.adt.tomsignature.types.TomSymbol  tom_match1_1=(( tom.engine.adt.tomsignature.types.TomSymbol )tomSymbol); if (tom_is_fun_sym_Symbol(tom_match1_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match1_1_Option=tom_get_slot_Symbol_Option(tom_match1_1); if (tom_is_fun_sym_concOption(tom_match1_1_Option) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match1_1_Option_list1=tom_match1_1_Option; { tom.engine.adt.tomoption.types.OptionList  tom_match1_1_Option_begin1=tom_match1_1_Option_list1; { tom.engine.adt.tomoption.types.OptionList  tom_match1_1_Option_end1=tom_match1_1_Option_list1; { while (!(tom_is_empty_concOption_OptionList(tom_match1_1_Option_end1))) {tom_match1_1_Option_list1=tom_match1_1_Option_end1; { { tom.engine.adt.tomoption.types.Option  tom_match1_1_Option_2=tom_get_head_concOption_OptionList(tom_match1_1_Option_list1);tom_match1_1_Option_list1=tom_get_tail_concOption_OptionList(tom_match1_1_Option_list1); if (tom_is_fun_sym_DeclarationToOption(tom_match1_1_Option_2) ||  false ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_match1_1_Option_2_AstDeclaration=tom_get_slot_DeclarationToOption_AstDeclaration(tom_match1_1_Option_2); if (tom_is_fun_sym_IsFsymDecl(tom_match1_1_Option_2_AstDeclaration) ||  false ) { if ( true ) {

        return tomSymbol;
       } } } } }tom_match1_1_Option_end1=tom_get_tail_concOption_OptionList(tom_match1_1_Option_end1); } }tom_match1_1_Option_list1=tom_match1_1_Option_begin1; } } } } } } } if (tom_is_fun_sym_Symbol(tom_match1_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match1_1_AstName=tom_get_slot_Symbol_AstName(tom_match1_1); { tom.engine.adt.tomtype.types.TomType  tom_match1_1_TypesToType=tom_get_slot_Symbol_TypesToType(tom_match1_1); { tom.engine.adt.tomslot.types.PairNameDeclList  tom_match1_1_PairNameDeclList=tom_get_slot_Symbol_PairNameDeclList(tom_match1_1); { tom.engine.adt.tomoption.types.OptionList  tom_match1_1_Option=tom_get_slot_Symbol_Option(tom_match1_1); { tom.engine.adt.tomname.types.TomName  tom_name=tom_match1_1_AstName; if (tom_is_fun_sym_TypesToType(tom_match1_1_TypesToType) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_t=tom_match1_1_TypesToType; { tom.engine.adt.tomtype.types.TomTypeList  tom_match1_1_TypesToType_Domain=tom_get_slot_TypesToType_Domain(tom_match1_1_TypesToType); { tom.engine.adt.tomtype.types.TomType  tom_match1_1_TypesToType_Codomain=tom_get_slot_TypesToType_Codomain(tom_match1_1_TypesToType); { tom.engine.adt.tomtype.types.TomType  tom_codom=tom_match1_1_TypesToType_Codomain; { tom.engine.adt.tomslot.types.PairNameDeclList  tom_l=tom_match1_1_PairNameDeclList; if (tom_is_fun_sym_concOption(tom_match1_1_Option) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match1_1_Option_list1=tom_match1_1_Option; { tom.engine.adt.tomoption.types.OptionList  tom_match1_1_Option_begin1=tom_match1_1_Option_list1; { tom.engine.adt.tomoption.types.OptionList  tom_match1_1_Option_end1=tom_match1_1_Option_list1; { while (!(tom_is_empty_concOption_OptionList(tom_match1_1_Option_end1))) {tom_match1_1_Option_list1=tom_match1_1_Option_end1; { { tom.engine.adt.tomoption.types.OptionList  tom_b=tom_get_slice_concOption(tom_match1_1_Option_begin1,tom_match1_1_Option_end1); { tom.engine.adt.tomoption.types.Option  tom_match1_1_Option_2=tom_get_head_concOption_OptionList(tom_match1_1_Option_list1);tom_match1_1_Option_list1=tom_get_tail_concOption_OptionList(tom_match1_1_Option_list1); if (tom_is_fun_sym_OriginTracking(tom_match1_1_Option_2) ||  false ) { { tom.engine.adt.tomoption.types.Option  tom_origin=tom_match1_1_Option_2; { tom.engine.adt.tomname.types.TomName  tom_match1_1_Option_2_AstName=tom_get_slot_OriginTracking_AstName(tom_match1_1_Option_2); { int  tom_match1_1_Option_2_Line=tom_get_slot_OriginTracking_Line(tom_match1_1_Option_2); { String  tom_match1_1_Option_2_FileName=tom_get_slot_OriginTracking_FileName(tom_match1_1_Option_2); { int  tom_line=tom_match1_1_Option_2_Line; { String  tom_file=tom_match1_1_Option_2_FileName; { tom.engine.adt.tomoption.types.OptionList  tom_a=tom_match1_1_Option_list1; if ( true ) {

        return tom_make_Symbol(tom_name,tom_t,tom_l,tom_append_list_concOption(tom_b,tom_cons_list_concOption(tom_origin,tom_cons_list_concOption(tom_make_DeclarationToOption(tom_make_IsFsymDecl(tom_name,tom_make_Variable(tom_cons_list_concOption(tom_make_OriginTracking(tom_make_Name("t"),tom_line,tom_file),tom_empty_list_concOption()),tom_make_Name("t"),tom_codom,tom_empty_list_concConstraint()),tom_make_Return(tom_make_ExpressionToTomTerm(tom_make_FalseTL())),tom_make_OriginTracking(tom_make_Name("is_fsym"),tom_line,tom_file))),tom_append_list_concOption(tom_a,tom_empty_list_concOption())))));
       } } } } } } } } } } }tom_match1_1_Option_end1=tom_get_tail_concOption_OptionList(tom_match1_1_Option_end1); } }tom_match1_1_Option_list1=tom_match1_1_Option_begin1; } } } } } } } } } } } } } } } } } } }

    return tomSymbol;
  }

  /**
   * inherited from OptionOwner interface (plugin)
   */
  public PlatformOptionList getDeclaredOptionList() {
    return OptionParser.xmlToOptionList(TomExpander.DECLARED_OPTIONS);
  }

  private TomTerm expandVariable(TomTerm contextSubject, TomTerm subject) {
    return (TomTerm)tomKernelExpander.expandVariable(contextSubject,subject);
  }

  /*
   * The 'expandTermApplTomSyntax' phase replaces:
   * - each 'TermAppl' by its expanded record form:
   *    placeholders are removed
   *    slotName are attached to arguments
   * - each BackQuoteTerm by its compiled form
   */

   private static class expandTermApplTomSyntax  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  TomExpander  expander;  public expandTermApplTomSyntax(  TomExpander  expander ) { super(tom_make_Identity() ); this.expander=expander; } public  TomExpander  getexpander() { return expander;} public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match2_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); if (tom_is_fun_sym_BackQuoteAppl(tom_match2_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_backQuoteTerm=tom_match2_1; if ( true ) {


        TomTerm t = (TomTerm) (tom_make_ChoiceTopDown(tom_make_expandBackQuoteAppl(expander))).visit(tom_backQuoteTerm);
        //System.out.println("t = " + t);
        return t;
       } } } if (tom_is_fun_sym_TermAppl(tom_match2_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match2_1_Option=tom_get_slot_TermAppl_Option(tom_match2_1); { tom.engine.adt.tomname.types.TomNameList  tom_match2_1_NameList=tom_get_slot_TermAppl_NameList(tom_match2_1); { tom.engine.adt.tomterm.types.TomList  tom_match2_1_Args=tom_get_slot_TermAppl_Args(tom_match2_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match2_1_Constraints=tom_get_slot_TermAppl_Constraints(tom_match2_1); { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match2_1_Option; { tom.engine.adt.tomname.types.TomNameList  tom_nameList=tom_match2_1_NameList; { tom.engine.adt.tomterm.types.TomList  tom_args=tom_match2_1_Args; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tom_match2_1_Constraints; if ( true ) {


        return expander.expandTermAppl(tom_option,tom_nameList,tom_args,tom_constraints);
       } } } } } } } } } } if (tom_is_fun_sym_XMLAppl(tom_match2_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match2_1_Option=tom_get_slot_XMLAppl_Option(tom_match2_1); { tom.engine.adt.tomname.types.TomNameList  tom_match2_1_NameList=tom_get_slot_XMLAppl_NameList(tom_match2_1); { tom.engine.adt.tomterm.types.TomList  tom_match2_1_AttrList=tom_get_slot_XMLAppl_AttrList(tom_match2_1); { tom.engine.adt.tomterm.types.TomList  tom_match2_1_ChildList=tom_get_slot_XMLAppl_ChildList(tom_match2_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match2_1_Constraints=tom_get_slot_XMLAppl_Constraints(tom_match2_1); { tom.engine.adt.tomoption.types.OptionList  tom_optionList=tom_match2_1_Option; { tom.engine.adt.tomname.types.TomNameList  tom_nameList=tom_match2_1_NameList; { tom.engine.adt.tomterm.types.TomList  tom_list1=tom_match2_1_AttrList; { tom.engine.adt.tomterm.types.TomList  tom_list2=tom_match2_1_ChildList; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tom_match2_1_Constraints; if ( true ) {


        //System.out.println("expandXML in:\n" + subject);
        return expander.expandXMLAppl(tom_optionList, tom_nameList, tom_list1, tom_list2,tom_constraints);
       } } } } } } } } } } } } } } return super.visit_TomTerm(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_expandTermApplTomSyntax( TomExpander  t0) { return new expandTermApplTomSyntax(t0); }



  /*
   * this post-processing phase replaces untyped (universalType) codomain
   * by their precise type (according to the symbolTable)
   */
   private static class updateCodomain  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  TomExpander  expander;  public updateCodomain(  TomExpander  expander ) { super(tom_make_Identity() ); this.expander=expander; } public  TomExpander  getexpander() { return expander;} public  tom.engine.adt.tomdeclaration.types.Declaration  visit_Declaration(  tom.engine.adt.tomdeclaration.types.Declaration  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomdeclaration.types.Declaration ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_match3_1=(( tom.engine.adt.tomdeclaration.types.Declaration )tom__arg); if (tom_is_fun_sym_GetHeadDecl(tom_match3_1) ||  false ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_decl=tom_match3_1; { tom.engine.adt.tomname.types.TomName  tom_match3_1_Opname=tom_get_slot_GetHeadDecl_Opname(tom_match3_1); if (tom_is_fun_sym_Name(tom_match3_1_Opname) ||  false ) { { String  tom_match3_1_Opname_String=tom_get_slot_Name_String(tom_match3_1_Opname); { String  tom_opName=tom_match3_1_Opname_String; if ( true ) {


        TomSymbol tomSymbol = expander.getSymbolFromName(tom_opName);
        TomTypeList codomain = getSymbolDomain(tomSymbol);
        if(codomain.length()==1) {
          Declaration t = (Declaration)tom_decl;
          t = t.setCodomain(codomain.getHeadconcTomType());
          return t;
        } else {
          throw new TomRuntimeException("updateCodomain: bad codomain: " + codomain);
        }
       } } } } } } } if (tom_is_fun_sym_GetHeadDecl(tom_match3_1) ||  false ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_decl=tom_match3_1; { tom.engine.adt.tomterm.types.TomTerm  tom_match3_1_Variable=tom_get_slot_GetHeadDecl_Variable(tom_match3_1); if (tom_is_fun_sym_Variable(tom_match3_1_Variable) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_match3_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match3_1_Variable); { tom.engine.adt.tomtype.types.TomType  tom_domain=tom_match3_1_Variable_AstType; if ( true ) {


        TomSymbol tomSymbol = expander.getSymbolFromType(tom_domain);
        if(tomSymbol != null) {
          TomTypeList codomain = getSymbolDomain(tomSymbol);

          if(codomain.length()==1) {
            Declaration t = (Declaration)tom_decl;
            t = t.setCodomain(codomain.getHeadconcTomType());
            return t;
          } else {
            throw new TomRuntimeException("updateCodomain: bad codomain: " + codomain);
          }
        }
       } } } } } } } } } return super.visit_Declaration(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_updateCodomain( TomExpander  t0) { return new updateCodomain(t0); }



  /*
   * replace 'abc' by conc('a','b','c')
   */
   private static class expandString  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  TomExpander  expander;  public expandString(  TomExpander  expander ) { super(tom_make_Identity() ); this.expander=expander; } public  TomExpander  getexpander() { return expander;} public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match4_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); if (tom_is_fun_sym_RecordAppl(tom_match4_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_appl=tom_match4_1; { tom.engine.adt.tomname.types.TomNameList  tom_match4_1_NameList=tom_get_slot_RecordAppl_NameList(tom_match4_1); { tom.engine.adt.tomslot.types.SlotList  tom_match4_1_Slots=tom_get_slot_RecordAppl_Slots(tom_match4_1); if (tom_is_fun_sym_concTomName(tom_match4_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match4_1_NameList_list1=tom_match4_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match4_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match4_1_NameList_1=tom_get_head_concTomName_TomNameList(tom_match4_1_NameList_list1);tom_match4_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match4_1_NameList_list1); if (tom_is_fun_sym_Name(tom_match4_1_NameList_1) ||  false ) { { String  tom_match4_1_NameList_1_String=tom_get_slot_Name_String(tom_match4_1_NameList_1); { String  tom_tomName=tom_match4_1_NameList_1_String; { tom.engine.adt.tomslot.types.SlotList  tom_args=tom_match4_1_Slots; if ( true ) {


            TomSymbol tomSymbol = expander.getSymbolFromName(tom_tomName);
            //System.out.println("appl = " + subject);
            if(tomSymbol != null) {
              if(isListOperator(tomSymbol) || isArrayOperator(tomSymbol)) {
                //System.out.println("appl = " + subject);
                SlotList newArgs = expander.expandChar(tom_args);
                if(newArgs!=tom_args) {
                  return tom_appl.setSlots(newArgs);
                }
              }
            }
           } } } } } } } } } } } } } } } return super.visit_TomTerm(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_expandString( TomExpander  t0) { return new expandString(t0); }



  /*
   * detect ill-formed char: 'abc'
   * and expand it into a list of char: 'a','b','c'
   */
  private SlotList expandChar(SlotList args) {
    if(args.isEmptyconcSlot()) {
      return args;
    } else {
      Slot head = args.getHeadconcSlot();
      SlotList tail = expandChar(args.getTailconcSlot());
       if(head instanceof  tom.engine.adt.tomslot.types.Slot ) { { tom.engine.adt.tomslot.types.Slot  tom_match5_1=(( tom.engine.adt.tomslot.types.Slot )head); if (tom_is_fun_sym_PairSlotAppl(tom_match5_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match5_1_SlotName=tom_get_slot_PairSlotAppl_SlotName(tom_match5_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match5_1_Appl=tom_get_slot_PairSlotAppl_Appl(tom_match5_1); { tom.engine.adt.tomname.types.TomName  tom_slotName=tom_match5_1_SlotName; if (tom_is_fun_sym_RecordAppl(tom_match5_1_Appl) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_appl=tom_match5_1_Appl; { tom.engine.adt.tomname.types.TomNameList  tom_match5_1_Appl_NameList=tom_get_slot_RecordAppl_NameList(tom_match5_1_Appl); { tom.engine.adt.tomslot.types.SlotList  tom_match5_1_Appl_Slots=tom_get_slot_RecordAppl_Slots(tom_match5_1_Appl); if (tom_is_fun_sym_concTomName(tom_match5_1_Appl_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match5_1_Appl_NameList_list1=tom_match5_1_Appl_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match5_1_Appl_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match5_1_Appl_NameList_1=tom_get_head_concTomName_TomNameList(tom_match5_1_Appl_NameList_list1);tom_match5_1_Appl_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match5_1_Appl_NameList_list1); if (tom_is_fun_sym_Name(tom_match5_1_Appl_NameList_1) ||  false ) { { String  tom_match5_1_Appl_NameList_1_String=tom_get_slot_Name_String(tom_match5_1_Appl_NameList_1); { String  tom_tomName=tom_match5_1_Appl_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match5_1_Appl_NameList_list1)) { if (tom_is_fun_sym_concSlot(tom_match5_1_Appl_Slots) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match5_1_Appl_Slots_list1=tom_match5_1_Appl_Slots; if (tom_is_empty_concSlot_SlotList(tom_match5_1_Appl_Slots_list1)) { if ( true ) {

          /*
           * ensure that the argument contains at least 1 character and 2 single quotes
           */
          TomSymbol tomSymbol = getSymbolFromName(tom_tomName);
          TomType termType = tomSymbol.getTypesToType().getCodomain();
          String type = termType.getTomType().getString();
          if(symbolTable().isCharType(type) && tom_tomName.length()>3) {
            if(tom_tomName.charAt(0)=='\'' && tom_tomName.charAt(tom_tomName.length()-1)=='\'') {
              SlotList newArgs = tail;
              //System.out.println("bingo -> " + tomSymbol);
              for(int i=tom_tomName.length()-2 ; i>0 ;  i--) {
                char c = tom_tomName.charAt(i);
                String newName = "'" + c + "'";
                TomSymbol newSymbol = tomSymbol.setAstName(tom_make_Name(newName));
                symbolTable().putSymbol(newName,newSymbol);
                Slot newHead = tom_make_PairSlotAppl(tom_slotName,tom_appl.setNameList(tom_cons_list_concTomName(tom_make_Name(newName),tom_empty_list_concTomName())));
                newArgs = tom_cons_list_concSlot(newHead,tom_append_list_concSlot(newArgs,tom_empty_list_concSlot()));
                //System.out.println("newHead = " + newHead);
                //System.out.println("newSymb = " + getSymbolFromName(newName));
              }
              return newArgs;
            } else {
              throw new TomRuntimeException("expandChar: strange char: " + tom_tomName);
            }
          }
         } } } } } } } } } } } } } } } } } } } } } }

      return tom_cons_list_concSlot(head,tom_append_list_concSlot(tail,tom_empty_list_concSlot()));
    }
  }

  /*
   * replaces 'TermAppl' by its 'RecordAppl' form
   * when no slotName exits, the position becomes the slotName
   */
  protected TomTerm expandTermAppl(OptionList option, TomNameList nameList, TomList args, ConstraintList constraints) {
    String opName = nameList.getHeadconcTomName().getString();
    TomSymbol tomSymbol = getSymbolFromName(opName);


    //System.out.println("expandTermAppl: " + tomSymbol);
    //System.out.println("  nameList = " + nameList);

    if(tomSymbol==null && args.isEmptyconcTomTerm()) {
      return tom_make_RecordAppl(option,nameList,tom_empty_list_concSlot(),constraints);
    }

    /*
       if(tomSymbol==null && !args.isEmpty() && !opName.equals("")) {
       System.out.println("expandTermAppl: " + tomSymbol);
       System.out.println("  opName = " + opName);
       System.out.println("  args = " + args);
       throw new TomRuntimeException("expandTermAppl: unknown symbol");
       }
     */

    SlotList slotList = tom_empty_list_concSlot();
    VisitableVisitor expandStrategy = (tom_make_ChoiceTopDown(tom_make_expandTermApplTomSyntax(this)));
    if(opName.equals("") || tomSymbol==null || isListOperator(tomSymbol) || isArrayOperator(tomSymbol)) {
      while(!args.isEmptyconcTomTerm()) {
        try{
          TomTerm subterm = (TomTerm) expandStrategy.visit(args.getHeadconcTomTerm());
          TomName slotName = tom_make_EmptyName();
          if(subterm.isUnamedVariable()) {
            // do nothing
          } else {
            slotList = tom_append_list_concSlot(slotList,tom_cons_list_concSlot(tom_make_PairSlotAppl(slotName,subterm),tom_empty_list_concSlot()));
          }
          args = args.getTailconcTomTerm();
        }catch(VisitFailure e){}
      }
    } else {
      PairNameDeclList pairNameDeclList = tomSymbol.getPairNameDeclList();
      while(!args.isEmptyconcTomTerm()) {
        try{
          TomTerm subterm = (TomTerm) expandStrategy.visit(args.getHeadconcTomTerm());
          TomName slotName = pairNameDeclList.getHeadconcPairNameDecl().getSlotName();
          if(subterm.isUnamedVariable()) {
            // do nothing
          } else {
            slotList = tom_append_list_concSlot(slotList,tom_cons_list_concSlot(tom_make_PairSlotAppl(slotName,subterm),tom_empty_list_concSlot()));
          }
          args = args.getTailconcTomTerm();
          pairNameDeclList = pairNameDeclList.getTailconcPairNameDecl();
        }catch(VisitFailure e){}
      }
    }

    return tom_make_RecordAppl(option,nameList,slotList,constraints);
  }

   private static class expandBackQuoteAppl  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  TomExpander  expander;  public expandBackQuoteAppl(  TomExpander  expander ) { super(tom_make_Identity() ); this.expander=expander; } public  TomExpander  getexpander() { return expander;} public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); if (tom_is_fun_sym_BackQuoteAppl(tom_match6_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match6_1_Option=tom_get_slot_BackQuoteAppl_Option(tom_match6_1); { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_BackQuoteAppl_AstName(tom_match6_1); { tom.engine.adt.tomterm.types.TomList  tom_match6_1_Args=tom_get_slot_BackQuoteAppl_Args(tom_match6_1); { tom.engine.adt.tomoption.types.OptionList  tom_optionList=tom_match6_1_Option; if (tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_name=tom_match6_1_AstName; { String  tom_match6_1_AstName_String=tom_get_slot_Name_String(tom_match6_1_AstName); { String  tom_tomName=tom_match6_1_AstName_String; { tom.engine.adt.tomterm.types.TomList  tom_l=tom_match6_1_Args; if ( true ) {


            TomSymbol tomSymbol = expander.getSymbolFromName(tom_tomName);
            TomList args  = (TomList) (tom_make_ChoiceTopDown(tom_make_expandBackQuoteAppl(expander))).visit(tom_l);

            //System.out.println("BackQuoteTerm: " + `tomName);
            //System.out.println("tomSymbol: " + tomSymbol);
            if(hasConstant(tom_optionList)) {
              return tom_make_BuildConstant(tom_name);
            } else if(tomSymbol != null) {
              if(isListOperator(tomSymbol)) {
                return ASTFactory.buildList(tom_name,args);
              } else if(isArrayOperator(tomSymbol)) {
                return ASTFactory.buildArray(tom_name,args);
              } else if(isDefinedSymbol(tomSymbol)) {
                return tom_make_FunctionCall(tom_name,args);
              } else {
                String moduleName = getModuleName(tom_optionList);
                if(moduleName==null) {
                  moduleName = TomBase.DEFAULT_MODULE_NAME;
                }
                return tom_make_BuildTerm(tom_name,args,moduleName);
              }
            } else {
              return tom_make_FunctionCall(tom_name,args);
            }
           } } } } } } } } } } } } } return super.visit_TomTerm(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_expandBackQuoteAppl( TomExpander  t0) { return new expandBackQuoteAppl(t0); }



  private static TomList sortAttributeList(TomList attrList) {
     if(attrList instanceof  tom.engine.adt.tomterm.types.TomList ) { { tom.engine.adt.tomterm.types.TomList  tom_match7_1=(( tom.engine.adt.tomterm.types.TomList )attrList); if (tom_is_fun_sym_concTomTerm(tom_match7_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match7_1_list1=tom_match7_1; if (tom_is_empty_concTomTerm_TomList(tom_match7_1_list1)) { if ( true ) {
 return attrList;  } } } } if (tom_is_fun_sym_concTomTerm(tom_match7_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match7_1_list1=tom_match7_1; { tom.engine.adt.tomterm.types.TomList  tom_match7_1_begin1=tom_match7_1_list1; { tom.engine.adt.tomterm.types.TomList  tom_match7_1_end1=tom_match7_1_list1; { while (!(tom_is_empty_concTomTerm_TomList(tom_match7_1_end1))) {tom_match7_1_list1=tom_match7_1_end1; { { tom.engine.adt.tomterm.types.TomList  tom_X1=tom_get_slice_concTomTerm(tom_match7_1_begin1,tom_match7_1_end1); { tom.engine.adt.tomterm.types.TomTerm  tom_e1=tom_get_head_concTomTerm_TomList(tom_match7_1_list1);tom_match7_1_list1=tom_get_tail_concTomTerm_TomList(tom_match7_1_list1); { tom.engine.adt.tomterm.types.TomList  tom_match7_1_begin3=tom_match7_1_list1; { tom.engine.adt.tomterm.types.TomList  tom_match7_1_end3=tom_match7_1_list1; { while (!(tom_is_empty_concTomTerm_TomList(tom_match7_1_end3))) {tom_match7_1_list1=tom_match7_1_end3; { { tom.engine.adt.tomterm.types.TomList  tom_X2=tom_get_slice_concTomTerm(tom_match7_1_begin3,tom_match7_1_end3); { tom.engine.adt.tomterm.types.TomTerm  tom_e2=tom_get_head_concTomTerm_TomList(tom_match7_1_list1);tom_match7_1_list1=tom_get_tail_concTomTerm_TomList(tom_match7_1_list1); { tom.engine.adt.tomterm.types.TomList  tom_X3=tom_match7_1_list1; if ( true ) { if(tom_e1 instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_e1); if(tom_e2 instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_e2); if (tom_is_fun_sym_TermAppl(tom_match8_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_1_Args=tom_get_slot_TermAppl_Args(tom_match8_1); if (tom_is_fun_sym_concTomTerm(tom_match8_1_Args) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_1_Args_list1=tom_match8_1_Args; if (!(tom_is_empty_concTomTerm_TomList(tom_match8_1_Args_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_1_Args_1=tom_get_head_concTomTerm_TomList(tom_match8_1_Args_list1);tom_match8_1_Args_list1=tom_get_tail_concTomTerm_TomList(tom_match8_1_Args_list1); if (tom_is_fun_sym_RecordAppl(tom_match8_1_Args_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Args_1_NameList=tom_get_slot_RecordAppl_NameList(tom_match8_1_Args_1); if (tom_is_fun_sym_concTomName(tom_match8_1_Args_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Args_1_NameList_list1=tom_match8_1_Args_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_1_Args_1_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1);tom_match8_1_Args_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_1_Args_1_NameList_1) ||  false ) { { String  tom_match8_1_Args_1_NameList_1_String=tom_get_slot_Name_String(tom_match8_1_Args_1_NameList_1); { String  tom_name1=tom_match8_1_Args_1_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1)) { if (tom_is_fun_sym_TermAppl(tom_match8_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_2_Args=tom_get_slot_TermAppl_Args(tom_match8_2); if (tom_is_fun_sym_concTomTerm(tom_match8_2_Args) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_2_Args_list1=tom_match8_2_Args; if (!(tom_is_empty_concTomTerm_TomList(tom_match8_2_Args_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_2_Args_1=tom_get_head_concTomTerm_TomList(tom_match8_2_Args_list1);tom_match8_2_Args_list1=tom_get_tail_concTomTerm_TomList(tom_match8_2_Args_list1); if (tom_is_fun_sym_RecordAppl(tom_match8_2_Args_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Args_1_NameList=tom_get_slot_RecordAppl_NameList(tom_match8_2_Args_1); if (tom_is_fun_sym_concTomName(tom_match8_2_Args_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Args_1_NameList_list1=tom_match8_2_Args_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_2_Args_1_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1);tom_match8_2_Args_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_2_Args_1_NameList_1) ||  false ) { { String  tom_match8_2_Args_1_NameList_1_String=tom_get_slot_Name_String(tom_match8_2_Args_1_NameList_1); { String  tom_name2=tom_match8_2_Args_1_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1)) { if ( true ) {




              if(tom_name1.compareTo(tom_name2) > 0) {
                return sortAttributeList(tom_append_list_concTomTerm(tom_X1,tom_cons_list_concTomTerm(tom_e2,tom_append_list_concTomTerm(tom_X2,tom_cons_list_concTomTerm(tom_e1,tom_append_list_concTomTerm(tom_X3,tom_empty_list_concTomTerm()))))));
              }
             } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_TermAppl(tom_match8_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_1_Args=tom_get_slot_TermAppl_Args(tom_match8_1); if (tom_is_fun_sym_concTomTerm(tom_match8_1_Args) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_1_Args_list1=tom_match8_1_Args; if (!(tom_is_empty_concTomTerm_TomList(tom_match8_1_Args_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_1_Args_1=tom_get_head_concTomTerm_TomList(tom_match8_1_Args_list1);tom_match8_1_Args_list1=tom_get_tail_concTomTerm_TomList(tom_match8_1_Args_list1); if (tom_is_fun_sym_TermAppl(tom_match8_1_Args_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Args_1_NameList=tom_get_slot_TermAppl_NameList(tom_match8_1_Args_1); if (tom_is_fun_sym_concTomName(tom_match8_1_Args_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Args_1_NameList_list1=tom_match8_1_Args_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_1_Args_1_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1);tom_match8_1_Args_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_1_Args_1_NameList_1) ||  false ) { { String  tom_match8_1_Args_1_NameList_1_String=tom_get_slot_Name_String(tom_match8_1_Args_1_NameList_1); { String  tom_name1=tom_match8_1_Args_1_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1)) { if (tom_is_fun_sym_TermAppl(tom_match8_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_2_Args=tom_get_slot_TermAppl_Args(tom_match8_2); if (tom_is_fun_sym_concTomTerm(tom_match8_2_Args) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_2_Args_list1=tom_match8_2_Args; if (!(tom_is_empty_concTomTerm_TomList(tom_match8_2_Args_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_2_Args_1=tom_get_head_concTomTerm_TomList(tom_match8_2_Args_list1);tom_match8_2_Args_list1=tom_get_tail_concTomTerm_TomList(tom_match8_2_Args_list1); if (tom_is_fun_sym_TermAppl(tom_match8_2_Args_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Args_1_NameList=tom_get_slot_TermAppl_NameList(tom_match8_2_Args_1); if (tom_is_fun_sym_concTomName(tom_match8_2_Args_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Args_1_NameList_list1=tom_match8_2_Args_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_2_Args_1_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1);tom_match8_2_Args_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_2_Args_1_NameList_1) ||  false ) { { String  tom_match8_2_Args_1_NameList_1_String=tom_get_slot_Name_String(tom_match8_2_Args_1_NameList_1); { String  tom_name2=tom_match8_2_Args_1_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1)) { if ( true ) {



              if(tom_name1.compareTo(tom_name2) > 0) {
                return sortAttributeList(tom_append_list_concTomTerm(tom_X1,tom_cons_list_concTomTerm(tom_e2,tom_append_list_concTomTerm(tom_X2,tom_cons_list_concTomTerm(tom_e1,tom_append_list_concTomTerm(tom_X3,tom_empty_list_concTomTerm()))))));
              }
             } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_RecordAppl(tom_match8_1) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match8_1_Slots=tom_get_slot_RecordAppl_Slots(tom_match8_1); if (tom_is_fun_sym_concSlot(tom_match8_1_Slots) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match8_1_Slots_list1=tom_match8_1_Slots; if (!(tom_is_empty_concSlot_SlotList(tom_match8_1_Slots_list1))) { { tom.engine.adt.tomslot.types.Slot  tom_match8_1_Slots_1=tom_get_head_concSlot_SlotList(tom_match8_1_Slots_list1);tom_match8_1_Slots_list1=tom_get_tail_concSlot_SlotList(tom_match8_1_Slots_list1); if (tom_is_fun_sym_PairSlotAppl(tom_match8_1_Slots_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match8_1_Slots_1_SlotName=tom_get_slot_PairSlotAppl_SlotName(tom_match8_1_Slots_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match8_1_Slots_1_Appl=tom_get_slot_PairSlotAppl_Appl(tom_match8_1_Slots_1); { tom.engine.adt.tomname.types.TomName  tom_slotName=tom_match8_1_Slots_1_SlotName; if (tom_is_fun_sym_RecordAppl(tom_match8_1_Slots_1_Appl) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Slots_1_Appl_NameList=tom_get_slot_RecordAppl_NameList(tom_match8_1_Slots_1_Appl); if (tom_is_fun_sym_concTomName(tom_match8_1_Slots_1_Appl_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Slots_1_Appl_NameList_list1=tom_match8_1_Slots_1_Appl_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_1_Slots_1_Appl_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_1_Slots_1_Appl_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_1_Slots_1_Appl_NameList_list1);tom_match8_1_Slots_1_Appl_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_1_Slots_1_Appl_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_1_Slots_1_Appl_NameList_1) ||  false ) { { String  tom_match8_1_Slots_1_Appl_NameList_1_String=tom_get_slot_Name_String(tom_match8_1_Slots_1_Appl_NameList_1); { String  tom_name1=tom_match8_1_Slots_1_Appl_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_1_Slots_1_Appl_NameList_list1)) { if (tom_is_fun_sym_RecordAppl(tom_match8_2) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match8_2_Slots=tom_get_slot_RecordAppl_Slots(tom_match8_2); if (tom_is_fun_sym_concSlot(tom_match8_2_Slots) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match8_2_Slots_list1=tom_match8_2_Slots; if (!(tom_is_empty_concSlot_SlotList(tom_match8_2_Slots_list1))) { { tom.engine.adt.tomslot.types.Slot  tom_match8_2_Slots_1=tom_get_head_concSlot_SlotList(tom_match8_2_Slots_list1);tom_match8_2_Slots_list1=tom_get_tail_concSlot_SlotList(tom_match8_2_Slots_list1); if (tom_is_fun_sym_PairSlotAppl(tom_match8_2_Slots_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match8_2_Slots_1_SlotName=tom_get_slot_PairSlotAppl_SlotName(tom_match8_2_Slots_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match8_2_Slots_1_Appl=tom_get_slot_PairSlotAppl_Appl(tom_match8_2_Slots_1); { tom.engine.adt.tomname.types.TomName  tom_renamedvar_slotName_1=tom_match8_2_Slots_1_SlotName; if (tom_terms_equal_TomName(tom_slotName, tom_renamedvar_slotName_1)) { if (tom_is_fun_sym_RecordAppl(tom_match8_2_Slots_1_Appl) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Slots_1_Appl_NameList=tom_get_slot_RecordAppl_NameList(tom_match8_2_Slots_1_Appl); if (tom_is_fun_sym_concTomName(tom_match8_2_Slots_1_Appl_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Slots_1_Appl_NameList_list1=tom_match8_2_Slots_1_Appl_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_2_Slots_1_Appl_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_2_Slots_1_Appl_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_2_Slots_1_Appl_NameList_list1);tom_match8_2_Slots_1_Appl_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_2_Slots_1_Appl_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_2_Slots_1_Appl_NameList_1) ||  false ) { { String  tom_match8_2_Slots_1_Appl_NameList_1_String=tom_get_slot_Name_String(tom_match8_2_Slots_1_Appl_NameList_1); { String  tom_name2=tom_match8_2_Slots_1_Appl_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_2_Slots_1_Appl_NameList_list1)) { if ( true ) {



              if(tom_name1.compareTo(tom_name2) > 0) {
                return sortAttributeList(tom_append_list_concTomTerm(tom_X1,tom_cons_list_concTomTerm(tom_e2,tom_append_list_concTomTerm(tom_X2,tom_cons_list_concTomTerm(tom_e1,tom_append_list_concTomTerm(tom_X3,tom_empty_list_concTomTerm()))))));
              }
             } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_RecordAppl(tom_match8_1) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match8_1_Slots=tom_get_slot_RecordAppl_Slots(tom_match8_1); if (tom_is_fun_sym_concSlot(tom_match8_1_Slots) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match8_1_Slots_list1=tom_match8_1_Slots; if (!(tom_is_empty_concSlot_SlotList(tom_match8_1_Slots_list1))) { { tom.engine.adt.tomslot.types.Slot  tom_match8_1_Slots_1=tom_get_head_concSlot_SlotList(tom_match8_1_Slots_list1);tom_match8_1_Slots_list1=tom_get_tail_concSlot_SlotList(tom_match8_1_Slots_list1); if (tom_is_fun_sym_PairSlotAppl(tom_match8_1_Slots_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match8_1_Slots_1_SlotName=tom_get_slot_PairSlotAppl_SlotName(tom_match8_1_Slots_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match8_1_Slots_1_Appl=tom_get_slot_PairSlotAppl_Appl(tom_match8_1_Slots_1); { tom.engine.adt.tomname.types.TomName  tom_slotName=tom_match8_1_Slots_1_SlotName; if (tom_is_fun_sym_TermAppl(tom_match8_1_Slots_1_Appl) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Slots_1_Appl_NameList=tom_get_slot_TermAppl_NameList(tom_match8_1_Slots_1_Appl); if (tom_is_fun_sym_concTomName(tom_match8_1_Slots_1_Appl_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Slots_1_Appl_NameList_list1=tom_match8_1_Slots_1_Appl_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_1_Slots_1_Appl_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_1_Slots_1_Appl_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_1_Slots_1_Appl_NameList_list1);tom_match8_1_Slots_1_Appl_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_1_Slots_1_Appl_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_1_Slots_1_Appl_NameList_1) ||  false ) { { String  tom_match8_1_Slots_1_Appl_NameList_1_String=tom_get_slot_Name_String(tom_match8_1_Slots_1_Appl_NameList_1); { String  tom_name1=tom_match8_1_Slots_1_Appl_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_1_Slots_1_Appl_NameList_list1)) { if (tom_is_fun_sym_RecordAppl(tom_match8_2) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match8_2_Slots=tom_get_slot_RecordAppl_Slots(tom_match8_2); if (tom_is_fun_sym_concSlot(tom_match8_2_Slots) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match8_2_Slots_list1=tom_match8_2_Slots; if (!(tom_is_empty_concSlot_SlotList(tom_match8_2_Slots_list1))) { { tom.engine.adt.tomslot.types.Slot  tom_match8_2_Slots_1=tom_get_head_concSlot_SlotList(tom_match8_2_Slots_list1);tom_match8_2_Slots_list1=tom_get_tail_concSlot_SlotList(tom_match8_2_Slots_list1); if (tom_is_fun_sym_PairSlotAppl(tom_match8_2_Slots_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match8_2_Slots_1_SlotName=tom_get_slot_PairSlotAppl_SlotName(tom_match8_2_Slots_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match8_2_Slots_1_Appl=tom_get_slot_PairSlotAppl_Appl(tom_match8_2_Slots_1); { tom.engine.adt.tomname.types.TomName  tom_renamedvar_slotName_1=tom_match8_2_Slots_1_SlotName; if (tom_terms_equal_TomName(tom_slotName, tom_renamedvar_slotName_1)) { if (tom_is_fun_sym_TermAppl(tom_match8_2_Slots_1_Appl) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Slots_1_Appl_NameList=tom_get_slot_TermAppl_NameList(tom_match8_2_Slots_1_Appl); if (tom_is_fun_sym_concTomName(tom_match8_2_Slots_1_Appl_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Slots_1_Appl_NameList_list1=tom_match8_2_Slots_1_Appl_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_2_Slots_1_Appl_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_2_Slots_1_Appl_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_2_Slots_1_Appl_NameList_list1);tom_match8_2_Slots_1_Appl_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_2_Slots_1_Appl_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_2_Slots_1_Appl_NameList_1) ||  false ) { { String  tom_match8_2_Slots_1_Appl_NameList_1_String=tom_get_slot_Name_String(tom_match8_2_Slots_1_Appl_NameList_1); { String  tom_name2=tom_match8_2_Slots_1_Appl_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_2_Slots_1_Appl_NameList_list1)) { if ( true ) {



              if(tom_name1.compareTo(tom_name2) > 0) {
                return sortAttributeList(tom_append_list_concTomTerm(tom_X1,tom_cons_list_concTomTerm(tom_e2,tom_append_list_concTomTerm(tom_X2,tom_cons_list_concTomTerm(tom_e1,tom_append_list_concTomTerm(tom_X3,tom_empty_list_concTomTerm()))))));
              }
             } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_BackQuoteAppl(tom_match8_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_1_Args=tom_get_slot_BackQuoteAppl_Args(tom_match8_1); if (tom_is_fun_sym_concTomTerm(tom_match8_1_Args) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_1_Args_list1=tom_match8_1_Args; if (!(tom_is_empty_concTomTerm_TomList(tom_match8_1_Args_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_1_Args_1=tom_get_head_concTomTerm_TomList(tom_match8_1_Args_list1);tom_match8_1_Args_list1=tom_get_tail_concTomTerm_TomList(tom_match8_1_Args_list1); if (tom_is_fun_sym_RecordAppl(tom_match8_1_Args_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Args_1_NameList=tom_get_slot_RecordAppl_NameList(tom_match8_1_Args_1); if (tom_is_fun_sym_concTomName(tom_match8_1_Args_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Args_1_NameList_list1=tom_match8_1_Args_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_1_Args_1_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1);tom_match8_1_Args_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_1_Args_1_NameList_1) ||  false ) { { String  tom_match8_1_Args_1_NameList_1_String=tom_get_slot_Name_String(tom_match8_1_Args_1_NameList_1); { String  tom_name1=tom_match8_1_Args_1_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1)) { if (tom_is_fun_sym_BackQuoteAppl(tom_match8_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_2_Args=tom_get_slot_BackQuoteAppl_Args(tom_match8_2); if (tom_is_fun_sym_concTomTerm(tom_match8_2_Args) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_2_Args_list1=tom_match8_2_Args; if (!(tom_is_empty_concTomTerm_TomList(tom_match8_2_Args_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_2_Args_1=tom_get_head_concTomTerm_TomList(tom_match8_2_Args_list1);tom_match8_2_Args_list1=tom_get_tail_concTomTerm_TomList(tom_match8_2_Args_list1); if (tom_is_fun_sym_RecordAppl(tom_match8_2_Args_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Args_1_NameList=tom_get_slot_RecordAppl_NameList(tom_match8_2_Args_1); if (tom_is_fun_sym_concTomName(tom_match8_2_Args_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Args_1_NameList_list1=tom_match8_2_Args_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_2_Args_1_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1);tom_match8_2_Args_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_2_Args_1_NameList_1) ||  false ) { { String  tom_match8_2_Args_1_NameList_1_String=tom_get_slot_Name_String(tom_match8_2_Args_1_NameList_1); { String  tom_name2=tom_match8_2_Args_1_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1)) { if ( true ) {



              if(tom_name1.compareTo(tom_name2) > 0) {
                return sortAttributeList(tom_append_list_concTomTerm(tom_X1,tom_cons_list_concTomTerm(tom_e2,tom_append_list_concTomTerm(tom_X2,tom_cons_list_concTomTerm(tom_e1,tom_append_list_concTomTerm(tom_X3,tom_empty_list_concTomTerm()))))));
              }
             } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_BackQuoteAppl(tom_match8_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_1_Args=tom_get_slot_BackQuoteAppl_Args(tom_match8_1); if (tom_is_fun_sym_concTomTerm(tom_match8_1_Args) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_1_Args_list1=tom_match8_1_Args; if (!(tom_is_empty_concTomTerm_TomList(tom_match8_1_Args_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_1_Args_1=tom_get_head_concTomTerm_TomList(tom_match8_1_Args_list1);tom_match8_1_Args_list1=tom_get_tail_concTomTerm_TomList(tom_match8_1_Args_list1); if (tom_is_fun_sym_TermAppl(tom_match8_1_Args_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Args_1_NameList=tom_get_slot_TermAppl_NameList(tom_match8_1_Args_1); if (tom_is_fun_sym_concTomName(tom_match8_1_Args_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_Args_1_NameList_list1=tom_match8_1_Args_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_1_Args_1_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1);tom_match8_1_Args_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_1_Args_1_NameList_1) ||  false ) { { String  tom_match8_1_Args_1_NameList_1_String=tom_get_slot_Name_String(tom_match8_1_Args_1_NameList_1); { String  tom_name1=tom_match8_1_Args_1_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_1_Args_1_NameList_list1)) { if (tom_is_fun_sym_BackQuoteAppl(tom_match8_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_2_Args=tom_get_slot_BackQuoteAppl_Args(tom_match8_2); if (tom_is_fun_sym_concTomTerm(tom_match8_2_Args) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_2_Args_list1=tom_match8_2_Args; if (!(tom_is_empty_concTomTerm_TomList(tom_match8_2_Args_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_2_Args_1=tom_get_head_concTomTerm_TomList(tom_match8_2_Args_list1);tom_match8_2_Args_list1=tom_get_tail_concTomTerm_TomList(tom_match8_2_Args_list1); if (tom_is_fun_sym_TermAppl(tom_match8_2_Args_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Args_1_NameList=tom_get_slot_TermAppl_NameList(tom_match8_2_Args_1); if (tom_is_fun_sym_concTomName(tom_match8_2_Args_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match8_2_Args_1_NameList_list1=tom_match8_2_Args_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match8_2_Args_1_NameList_1=tom_get_head_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1);tom_match8_2_Args_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1); if (tom_is_fun_sym_Name(tom_match8_2_Args_1_NameList_1) ||  false ) { { String  tom_match8_2_Args_1_NameList_1_String=tom_get_slot_Name_String(tom_match8_2_Args_1_NameList_1); { String  tom_name2=tom_match8_2_Args_1_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match8_2_Args_1_NameList_list1)) { if ( true ) {



              if(tom_name1.compareTo(tom_name2) > 0) {
                return sortAttributeList(tom_append_list_concTomTerm(tom_X1,tom_cons_list_concTomTerm(tom_e2,tom_append_list_concTomTerm(tom_X2,tom_cons_list_concTomTerm(tom_e1,tom_append_list_concTomTerm(tom_X3,tom_empty_list_concTomTerm()))))));
              }
             } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_BackQuoteAppl(tom_match8_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_1_Args=tom_get_slot_BackQuoteAppl_Args(tom_match8_1); if (tom_is_fun_sym_concTomTerm(tom_match8_1_Args) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_1_Args_list1=tom_match8_1_Args; if (!(tom_is_empty_concTomTerm_TomList(tom_match8_1_Args_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_1_Args_1=tom_get_head_concTomTerm_TomList(tom_match8_1_Args_list1);tom_match8_1_Args_list1=tom_get_tail_concTomTerm_TomList(tom_match8_1_Args_list1); if (tom_is_fun_sym_BackQuoteAppl(tom_match8_1_Args_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match8_1_Args_1_AstName=tom_get_slot_BackQuoteAppl_AstName(tom_match8_1_Args_1); if (tom_is_fun_sym_Name(tom_match8_1_Args_1_AstName) ||  false ) { { String  tom_match8_1_Args_1_AstName_String=tom_get_slot_Name_String(tom_match8_1_Args_1_AstName); { String  tom_name1=tom_match8_1_Args_1_AstName_String; if (tom_is_fun_sym_BackQuoteAppl(tom_match8_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_2_Args=tom_get_slot_BackQuoteAppl_Args(tom_match8_2); if (tom_is_fun_sym_concTomTerm(tom_match8_2_Args) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_2_Args_list1=tom_match8_2_Args; if (!(tom_is_empty_concTomTerm_TomList(tom_match8_2_Args_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_2_Args_1=tom_get_head_concTomTerm_TomList(tom_match8_2_Args_list1);tom_match8_2_Args_list1=tom_get_tail_concTomTerm_TomList(tom_match8_2_Args_list1); if (tom_is_fun_sym_BackQuoteAppl(tom_match8_2_Args_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match8_2_Args_1_AstName=tom_get_slot_BackQuoteAppl_AstName(tom_match8_2_Args_1); if (tom_is_fun_sym_Name(tom_match8_2_Args_1_AstName) ||  false ) { { String  tom_match8_2_Args_1_AstName_String=tom_get_slot_Name_String(tom_match8_2_Args_1_AstName); { String  tom_name2=tom_match8_2_Args_1_AstName_String; if ( true ) {



              if(tom_name1.compareTo(tom_name2) > 0) {
                return sortAttributeList(tom_append_list_concTomTerm(tom_X1,tom_cons_list_concTomTerm(tom_e2,tom_append_list_concTomTerm(tom_X2,tom_cons_list_concTomTerm(tom_e1,tom_append_list_concTomTerm(tom_X3,tom_empty_list_concTomTerm()))))));
              }
             } } } } } } } } } } } } } } } } } } } } } } } } } } }

       } } } }tom_match7_1_end3=tom_get_tail_concTomTerm_TomList(tom_match7_1_end3); } }tom_match7_1_list1=tom_match7_1_begin3; } } } } }tom_match7_1_end1=tom_get_tail_concTomTerm_TomList(tom_match7_1_end1); } }tom_match7_1_list1=tom_match7_1_begin1; } } } } } } }

    return attrList;
  }

  private static OptionList convertOriginTracking(String name,OptionList optionList) {
    Option originTracking = findOriginTracking(optionList);
     if(originTracking instanceof  tom.engine.adt.tomoption.types.Option ) { { tom.engine.adt.tomoption.types.Option  tom_match9_1=(( tom.engine.adt.tomoption.types.Option )originTracking); if (tom_is_fun_sym_OriginTracking(tom_match9_1) ||  false ) { { int  tom_match9_1_Line=tom_get_slot_OriginTracking_Line(tom_match9_1); { String  tom_match9_1_FileName=tom_get_slot_OriginTracking_FileName(tom_match9_1); { int  tom_line=tom_match9_1_Line; { String  tom_fileName=tom_match9_1_FileName; if ( true ) {

        return tom_cons_list_concOption(tom_make_OriginTracking(tom_make_Name(name),tom_line,tom_fileName),tom_empty_list_concOption());
       } } } } } } } }

    System.out.println("Warning: no OriginTracking information");
    return tom_empty_list_concOption();
  }

  protected TomTerm expandXMLAppl(OptionList optionList, TomNameList nameList,
      TomList attrList, TomList childList, ConstraintList constraints) {
    boolean implicitAttribute = hasImplicitXMLAttribut(optionList);
    boolean implicitChild     = hasImplicitXMLChild(optionList);

    TomList newAttrList  = tom_empty_list_concTomTerm();
    TomList newChildList = tom_empty_list_concTomTerm();
    TomTerm star = ASTFactory.makeUnamedVariableStar(convertOriginTracking("_*",optionList),"unknown type",tom_empty_list_concConstraint());
    if(implicitAttribute) { newAttrList  = tom_cons_list_concTomTerm(star,tom_append_list_concTomTerm(newAttrList,tom_empty_list_concTomTerm())); }
    if(implicitChild)     { newChildList = tom_cons_list_concTomTerm(star,tom_append_list_concTomTerm(newChildList,tom_empty_list_concTomTerm())); }

    /*
     * the list of attributes should not be expanded before the sort
     * the sortAttribute is extended to compare RecordAppl
     */

    //System.out.println("attrList = " + attrList);
    attrList = sortAttributeList(attrList);
    //System.out.println("sorted attrList = " + attrList);

    /*
     * Attributes: go from implicit notation to explicit notation
     */
    VisitableVisitor expandStrategy = (tom_make_ChoiceTopDown(tom_make_expandTermApplTomSyntax(this)));
    while(!attrList.isEmptyconcTomTerm()) {
      try{
        TomTerm newPattern = (TomTerm) expandStrategy.visit(attrList.getHeadconcTomTerm());
        newAttrList = tom_cons_list_concTomTerm(newPattern,tom_append_list_concTomTerm(newAttrList,tom_empty_list_concTomTerm()));
        if(implicitAttribute) {
          newAttrList = tom_cons_list_concTomTerm(star,tom_append_list_concTomTerm(newAttrList,tom_empty_list_concTomTerm()));
        }
        attrList = attrList.getTailconcTomTerm();
      }catch(VisitFailure e){}
    }
    newAttrList = ASTFactory.reverse(newAttrList);

    /*
     * Childs: go from implicit notation to explicit notation
     */
    while(!childList.isEmptyconcTomTerm()) {
      try{
        TomTerm newPattern = (TomTerm) expandStrategy.visit(childList.getHeadconcTomTerm());
        newChildList = tom_cons_list_concTomTerm(newPattern,tom_append_list_concTomTerm(newChildList,tom_empty_list_concTomTerm()));
        if(implicitChild) {
          if(newPattern.isVariableStar()) {
            // remove the previously inserted pattern
            newChildList = newChildList.getTailconcTomTerm();
            if(newChildList.getHeadconcTomTerm().isUnamedVariableStar()) {
              // remove the previously inserted star
              newChildList = newChildList.getTailconcTomTerm();
            }
            // re-insert the pattern
            newChildList = tom_cons_list_concTomTerm(newPattern,tom_append_list_concTomTerm(newChildList,tom_empty_list_concTomTerm()));
          } else {
            newChildList = tom_cons_list_concTomTerm(star,tom_append_list_concTomTerm(newChildList,tom_empty_list_concTomTerm()));
          }
        }
        childList = childList.getTailconcTomTerm();
      }catch(VisitFailure e){}
    }
    newChildList = ASTFactory.reverse(newChildList);

    /*
     * encode the name and put it into the table of symbols
     */
    TomNameList newNameList = tom_empty_list_concTomName();
matchBlock: {
               if(nameList instanceof  tom.engine.adt.tomname.types.TomNameList ) { { tom.engine.adt.tomname.types.TomNameList  tom_match10_1=(( tom.engine.adt.tomname.types.TomNameList )nameList); if (tom_is_fun_sym_concTomName(tom_match10_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match10_1_list1=tom_match10_1; if (!(tom_is_empty_concTomName_TomNameList(tom_match10_1_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match10_1_1=tom_get_head_concTomName_TomNameList(tom_match10_1_list1);tom_match10_1_list1=tom_get_tail_concTomName_TomNameList(tom_match10_1_list1); if (tom_is_fun_sym_Name(tom_match10_1_1) ||  false ) { { String  tom_match10_1_1_String=tom_get_slot_Name_String(tom_match10_1_1); if (tom_terms_equal_String("_", tom_match10_1_1_String) ||  false ) { if (tom_is_empty_concTomName_TomNameList(tom_match10_1_list1)) { if ( true ) {

                  break matchBlock;
                 } } } } } } } } } if (tom_is_fun_sym_concTomName(tom_match10_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match10_1_list1=tom_match10_1; { tom.engine.adt.tomname.types.TomNameList  tom_match10_1_begin1=tom_match10_1_list1; { tom.engine.adt.tomname.types.TomNameList  tom_match10_1_end1=tom_match10_1_list1; { while (!(tom_is_empty_concTomName_TomNameList(tom_match10_1_end1))) {tom_match10_1_list1=tom_match10_1_end1; { { tom.engine.adt.tomname.types.TomName  tom_match10_1_2=tom_get_head_concTomName_TomNameList(tom_match10_1_list1);tom_match10_1_list1=tom_get_tail_concTomName_TomNameList(tom_match10_1_list1); if (tom_is_fun_sym_Name(tom_match10_1_2) ||  false ) { { String  tom_match10_1_2_String=tom_get_slot_Name_String(tom_match10_1_2); { String  tom_name=tom_match10_1_2_String; if ( true ) {


                  newNameList = tom_append_list_concTomName(newNameList,tom_cons_list_concTomName(tom_make_Name(ASTFactory.encodeXMLString(symbolTable(),tom_name)),tom_empty_list_concTomName()));
                 } } } } }tom_match10_1_end1=tom_get_tail_concTomName_TomNameList(tom_match10_1_end1); } }tom_match10_1_list1=tom_match10_1_begin1; } } } } } } }

            }

            /*
             * a single "_" is converted into a Placeholder to match
             * any XML node
             */
            TomTerm xmlHead;

            if(newNameList.isEmptyconcTomName()){
              xmlHead = tom_make_Placeholder(tom_empty_list_concOption(),tom_empty_list_concConstraint());
            } else {
              xmlHead = tom_make_TermAppl(convertOriginTracking(newNameList.getHeadconcTomName().getString(),optionList),newNameList,tom_empty_list_concTomTerm(),tom_empty_list_concConstraint());
            }
            try {
              //VisitableVisitor expandStrategy = (ChoiceTopDown(expandTermApplTomSyntax(this)));
              SlotList newArgs = tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_make_Name(Constants.SLOT_NAME),(TomTerm) expandStrategy.visit(xmlHead)),tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_make_Name(Constants.SLOT_ATTRLIST),(TomTerm) expandStrategy.visit(tom_make_TermAppl(convertOriginTracking("CONC_TNODE",optionList),tom_cons_list_concTomName(tom_make_Name(Constants.CONC_TNODE),tom_empty_list_concTomName()),newAttrList,tom_empty_list_concConstraint()))),tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_make_Name(Constants.SLOT_CHILDLIST),(TomTerm) expandStrategy.visit(tom_make_TermAppl(convertOriginTracking("CONC_TNODE",optionList),tom_cons_list_concTomName(tom_make_Name(Constants.CONC_TNODE),tom_empty_list_concTomName()),newChildList,tom_empty_list_concConstraint()))),tom_empty_list_concSlot())))





;

              TomTerm result = tom_make_RecordAppl(optionList,tom_cons_list_concTomName(tom_make_Name(Constants.ELEMENT_NODE),tom_empty_list_concTomName()),newArgs,constraints);

              //System.out.println("expandXML out:\n" + result);
              return result;
            } catch(VisitFailure e) {
              //must never be executed
              return star;
            }

  }


} // class TomExpander

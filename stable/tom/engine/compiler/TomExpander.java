/*  Generated by TOM: Do not edit this file */  /*
  
    TOM - To One Matching Compiler

    Copyright (C) 2000-2003 INRIA
			    Nancy, France.

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

    Pierre-Etienne Moreau	e-mail: Pierre-Etienne.Moreau@loria.fr

*/

package jtom.compiler;
  
import java.util.HashSet;

import jtom.adt.tomsignature.*;
import jtom.adt.tomsignature.types.*;
import jtom.runtime.Replace1;
import jtom.runtime.Replace2;
import aterm.ATerm;
import jtom.tools.*;
import jtom.xml.Constants;
import jtom.exception.TomRuntimeException;
import jtom.TomEnvironment;

public class TomExpander extends /*TomBase implements*/ TomTask {
	
  private TomKernelExpander tomKernelExpander;
  private TomFactory tomFactory;
  
  public TomExpander(TomEnvironment environment,
                     TomKernelExpander tomKernelExpander) {
    super("Tom Expander", environment);
    this.tomKernelExpander = tomKernelExpander;
    this.tomFactory = new TomFactory(environment);
  }

// ------------------------------------------------------------
  /*  Generated by TOM: Do not edit this file */   
// ------------------------------------------------------------
		
  public void process() {
  	try {
		  long startChrono = 0;
		  boolean verbose = getInput().isVerbose(), intermediate = getInput().isIntermediate(),
		  						debugMode = getInput().isDebugMode();
	  	if(verbose) { startChrono = System.currentTimeMillis(); }
	  	
	  	TomTerm syntaxExpandedTerm = expandTomSyntax(getInput().getTerm());
      tomKernelExpander.updateSymbolTable();
      TomTerm context = tom_make_emptyTerm() ;
      TomTerm expandedTerm  = expandVariable(context, syntaxExpandedTerm);
      
      if(debugMode) {
        tomKernelExpander.expandMatchPattern(expandedTerm);
      }
	  if(verbose) {
		System.out.println("TOM expansion phase (" + (System.currentTimeMillis()-startChrono)+ " ms)");
	  }
      if(intermediate) {
          Tools.generateOutput(getInput().getBaseInputFileName() + TomTaskInput.expandedSuffix, expandedTerm);
          Tools.generateOutput(getInput().getBaseInputFileName() + TomTaskInput.expandedTableSuffix, symbolTable().toTerm());
	  }
		getInput().setTerm(expandedTerm);
		
    } catch (Exception e) {
    	addError("Exception occurs in TomExpander: "+e.getMessage(), getInput().getInputFileName(), 0, 0);
      e.printStackTrace();
      return;
    }
  }
  
    /*
     * The 'expandTomSyntax' phase replaces:
     * -each 'RecordAppl' by its expanded term form:
     *   (unused slots a replaced by placeholders)
     * - each BackQuoteTerm by its compiled form
     */
  
  public TomTerm expandTomSyntax(TomTerm subject) {
    Replace1 replace = new Replace1() { 
        public ATerm apply(ATerm subject) {
          if(subject instanceof TomTerm) {
             {  TomTerm tom_match1_1 = null; tom_match1_1 = ( TomTerm) subject;_match1_pattern1: {  TomTerm backQuoteTerm = null; if(tom_is_fun_sym_DoubleBackQuote(tom_match1_1) ||  false ) {  TomTerm tom_match1_1_1 = null; tom_match1_1_1 = ( TomTerm) tom_get_slot_DoubleBackQuote_arg(tom_match1_1); backQuoteTerm = ( TomTerm) tom_match1_1_1;
 
                TomTerm t = expandTomSyntax(backQuoteTerm);
                  //System.out.println("t1 = " + t);
                t = expandBackQuoteXMLAppl(t);
                  //System.out.println("t2 = " + t);
                return t;
               }}_match1_pattern2: {  TomTerm backQuoteTerm = null; if(tom_is_fun_sym_BackQuoteAppl(tom_match1_1) ||  false ) { backQuoteTerm = ( TomTerm) tom_match1_1;

 
                TomTerm t = expandBackQuoteAppl(backQuoteTerm);
                  //System.out.println("t = " + t);
                return t;
               }}_match1_pattern3: {  TomList args = null;  OptionList option = null;  NameList nameList = null; if(tom_is_fun_sym_RecordAppl(tom_match1_1) ||  false ) {  OptionList tom_match1_1_1 = null;  NameList tom_match1_1_2 = null;  TomList tom_match1_1_3 = null; tom_match1_1_1 = ( OptionList) tom_get_slot_RecordAppl_option(tom_match1_1); tom_match1_1_2 = ( NameList) tom_get_slot_RecordAppl_nameList(tom_match1_1); tom_match1_1_3 = ( TomList) tom_get_slot_RecordAppl_args(tom_match1_1); option = ( OptionList) tom_match1_1_1; nameList = ( NameList) tom_match1_1_2; args = ( TomList) tom_match1_1_3;

 
                return expandRecordAppl(option,nameList,args);
               }}_match1_pattern4: {  OptionList optionList = null;  TomList list2 = null;  TomList list1 = null;  NameList nameList = null; if(tom_is_fun_sym_XMLAppl(tom_match1_1) ||  false ) {  OptionList tom_match1_1_1 = null;  NameList tom_match1_1_2 = null;  TomList tom_match1_1_3 = null;  TomList tom_match1_1_4 = null; tom_match1_1_1 = ( OptionList) tom_get_slot_XMLAppl_option(tom_match1_1); tom_match1_1_2 = ( NameList) tom_get_slot_XMLAppl_nameList(tom_match1_1); tom_match1_1_3 = ( TomList) tom_get_slot_XMLAppl_attrList(tom_match1_1); tom_match1_1_4 = ( TomList) tom_get_slot_XMLAppl_childList(tom_match1_1); optionList = ( OptionList) tom_match1_1_1; nameList = ( NameList) tom_match1_1_2; list1 = ( TomList) tom_match1_1_3; list2 = ( TomList) tom_match1_1_4;

 
								//System.out.println("expandXML in:\n" + subject);
                return expandXMLAppl(optionList, nameList, list1, list2);
               }}_match1_pattern5: {

 
                return traversal().genericTraversal(subject,this);
              } }
  // end match
          } else {
            return traversal().genericTraversal(subject,this);
          }
        } // end apply
      }; // end new

    return (TomTerm) replace.apply(subject);
  }

  protected TomTerm expandRecordAppl(OptionList option, NameList nameList, TomList args) {
    TomSymbol tomSymbol = getSymbol(nameList.getHead().getString());
    SlotList slotList = tomSymbol.getSlotList();
    TomList subtermList = empty();
      // For each slotName (from tomSymbol)
    while(!slotList.isEmpty()) {
      TomName slotName = slotList.getHead().getSlotName();
        //debugPrintln("\tslotName  = " + slotName);
      TomList pairList = args;
      TomTerm newSubterm = null;
      if(!slotName.isEmptyName()) {
          // look for a same name (from record)
        whileBlock: {
          while(newSubterm==null && !pairList.isEmpty()) {
            TomTerm pairSlotName = pairList.getHead();
             {  TomName tom_match2_1 = null;  TomTerm tom_match2_2 = null; tom_match2_1 = ( TomName) slotName; tom_match2_2 = ( TomTerm) pairSlotName;_match2_pattern1: {  String name = null;  TomTerm slotSubterm = null;  String tom_renamedvar_name_1 = null; if(tom_is_fun_sym_Name(tom_match2_1) ||  false ) {  String tom_match2_1_1 = null; tom_match2_1_1 = ( String) tom_get_slot_Name_string(tom_match2_1); tom_renamedvar_name_1 = ( String) tom_match2_1_1; if(tom_is_fun_sym_PairSlotAppl(tom_match2_2) ||  false ) {  TomName tom_match2_2_1 = null;  TomTerm tom_match2_2_2 = null; tom_match2_2_1 = ( TomName) tom_get_slot_PairSlotAppl_slotName(tom_match2_2); tom_match2_2_2 = ( TomTerm) tom_get_slot_PairSlotAppl_appl(tom_match2_2); if(tom_is_fun_sym_Name(tom_match2_2_1) ||  false ) {  String tom_match2_2_1_1 = null; tom_match2_2_1_1 = ( String) tom_get_slot_Name_string(tom_match2_2_1); name = ( String) tom_match2_2_1_1; slotSubterm = ( TomTerm) tom_match2_2_2; if(tom_terms_equal_String(name, tom_renamedvar_name_1) &&  true ) {
 
                  // bingo
                newSubterm = expandTomSyntax(slotSubterm);
                break whileBlock;
               } } } }}_match2_pattern2: {
 pairList = pairList.getTail();} }
 
          }
        } // end whileBlock
      }
      
      if(newSubterm == null) {
        newSubterm = tom_make_Placeholder(emptyOption()) ;
      }
      subtermList = append(newSubterm,subtermList);
      slotList = slotList.getTail();
    }
    
    return tom_make_Appl(option,nameList,subtermList) ;
  }

  protected TomTerm expandBackQuoteAppl(TomTerm t) {
    Replace1 replaceSymbol = new Replace1() {
        public ATerm apply(ATerm t) {
          if(t instanceof TomTerm) {
             {  TomTerm tom_match3_1 = null; tom_match3_1 = ( TomTerm) t;_match3_pattern1: {  OptionList optionList = null;  TomList l = null;  TomName name = null;  String tomName = null; if(tom_is_fun_sym_BackQuoteAppl(tom_match3_1) ||  false ) {  OptionList tom_match3_1_1 = null;  TomName tom_match3_1_2 = null;  TomList tom_match3_1_3 = null; tom_match3_1_1 = ( OptionList) tom_get_slot_BackQuoteAppl_option(tom_match3_1); tom_match3_1_2 = ( TomName) tom_get_slot_BackQuoteAppl_astName(tom_match3_1); tom_match3_1_3 = ( TomList) tom_get_slot_BackQuoteAppl_args(tom_match3_1); optionList = ( OptionList) tom_match3_1_1; if(tom_is_fun_sym_Name(tom_match3_1_2) ||  false ) {  String tom_match3_1_2_1 = null; tom_match3_1_2_1 = ( String) tom_get_slot_Name_string(tom_match3_1_2); name = ( TomName) tom_match3_1_2; tomName = ( String) tom_match3_1_2_1; l = ( TomList) tom_match3_1_3;
 
                TomSymbol tomSymbol = getSymbol(tomName);
                TomList args  = (TomList) traversal().genericTraversal(l,this);
                
                if(tomSymbol != null) {
                  if(isListOperator(tomSymbol)) {
                    return tom_make_BuildList(name,args) ;
                  } else if(isArrayOperator(tomSymbol)) {
                    return tom_make_BuildArray(name,args) ;
                  } else if(isStringOperator(tomSymbol)) {
                    return tom_make_BuildVariable(name) ;
                  } else {
                    return tom_make_BuildTerm(name,args) ;
                  }
                } else if(args.isEmpty() && !hasConstructor(optionList)) {
                  return tom_make_BuildVariable(name) ;
                } else {
                  return tom_make_FunctionCall(name,args) ;
                }
               } }} }
  // end match 
          }
          return traversal().genericTraversal(t,this);
        } // end apply
      }; // end replaceSymbol
    return (TomTerm) replaceSymbol.apply(t);
  }

  private TomList sortAttributeList(TomList attrList) {
     {  TomList tom_match4_1 = null; tom_match4_1 = ( TomList) attrList;_match4_pattern1: { if(tom_is_fun_sym_concTomTerm(tom_match4_1) ||  false ) {  TomList tom_match4_1_list1 = null; tom_match4_1_list1 = ( TomList) tom_match4_1; if(tom_is_empty_TomList(tom_match4_1_list1)) {
  return attrList;  } }}_match4_pattern2: {  TomTerm e1 = null;  TomTerm e2 = null;  TomList X1;  TomList X2;  TomList X3; if(tom_is_fun_sym_concTomTerm(tom_match4_1) ||  false ) {  TomList tom_match4_1_begin1 = null;  TomList tom_match4_1_end1 = null;  TomList tom_match4_1_list1 = null; tom_match4_1_list1 = ( TomList) tom_match4_1; tom_match4_1_begin1 = ( TomList) tom_match4_1_list1; tom_match4_1_end1 = ( TomList) tom_match4_1_list1; do { X1 = ( TomList) tom_get_slice_concTomTerm(tom_match4_1_begin1,tom_match4_1_end1); if(!(tom_is_empty_TomList(tom_match4_1_list1))) { e1 = ( TomTerm) tom_get_head_TomList(tom_match4_1_list1); tom_match4_1_list1 = ( TomList) tom_get_tail_TomList(tom_match4_1_list1);  TomList tom_match4_1_begin3 = null;  TomList tom_match4_1_end3 = null; tom_match4_1_begin3 = ( TomList) tom_match4_1_list1; tom_match4_1_end3 = ( TomList) tom_match4_1_list1; do { X2 = ( TomList) tom_get_slice_concTomTerm(tom_match4_1_begin3,tom_match4_1_end3); if(!(tom_is_empty_TomList(tom_match4_1_list1))) { e2 = ( TomTerm) tom_get_head_TomList(tom_match4_1_list1); tom_match4_1_list1 = ( TomList) tom_get_tail_TomList(tom_match4_1_list1); X3 = ( TomList) tom_match4_1_list1; {  TomTerm tom_match5_1 = null;  TomTerm tom_match5_2 = null; tom_match5_1 = ( TomTerm) e1; tom_match5_2 = ( TomTerm) e2;_match5_pattern1: {  TomName tom_absvar1 = null;  TomName tom_absvar2 = null; if(tom_is_fun_sym_Appl(tom_match5_1) ||  false ) {  TomList tom_match5_1_3 = null; tom_match5_1_3 = ( TomList) tom_get_slot_Appl_args(tom_match5_1); if(tom_is_fun_sym_manyTomList(tom_match5_1_3) ||  false ) {  TomTerm tom_match5_1_3_1 = null; tom_match5_1_3_1 = ( TomTerm) tom_get_slot_manyTomList_head(tom_match5_1_3); if(tom_is_fun_sym_Appl(tom_match5_1_3_1) ||  false ) {  NameList tom_match5_1_3_1_2 = null; tom_match5_1_3_1_2 = ( NameList) tom_get_slot_Appl_nameList(tom_match5_1_3_1); if(tom_is_fun_sym_concTomName(tom_match5_1_3_1_2) ||  false ) {  NameList tom_match5_1_3_1_2_list1 = null; tom_match5_1_3_1_2_list1 = ( NameList) tom_match5_1_3_1_2; if(!(tom_is_empty_NameList(tom_match5_1_3_1_2_list1))) { tom_absvar1 = ( TomName) tom_get_head_NameList(tom_match5_1_3_1_2_list1); tom_match5_1_3_1_2_list1 = ( NameList) tom_get_tail_NameList(tom_match5_1_3_1_2_list1); if(tom_is_empty_NameList(tom_match5_1_3_1_2_list1)) { if(tom_is_fun_sym_Appl(tom_match5_2) ||  false ) {  TomList tom_match5_2_3 = null; tom_match5_2_3 = ( TomList) tom_get_slot_Appl_args(tom_match5_2); if(tom_is_fun_sym_manyTomList(tom_match5_2_3) ||  false ) {  TomTerm tom_match5_2_3_1 = null; tom_match5_2_3_1 = ( TomTerm) tom_get_slot_manyTomList_head(tom_match5_2_3); if(tom_is_fun_sym_Appl(tom_match5_2_3_1) ||  false ) {  NameList tom_match5_2_3_1_2 = null; tom_match5_2_3_1_2 = ( NameList) tom_get_slot_Appl_nameList(tom_match5_2_3_1); if(tom_is_fun_sym_concTomName(tom_match5_2_3_1_2) ||  false ) {  NameList tom_match5_2_3_1_2_list1 = null; tom_match5_2_3_1_2_list1 = ( NameList) tom_match5_2_3_1_2; if(!(tom_is_empty_NameList(tom_match5_2_3_1_2_list1))) { tom_absvar2 = ( TomName) tom_get_head_NameList(tom_match5_2_3_1_2_list1); tom_match5_2_3_1_2_list1 = ( NameList) tom_get_tail_NameList(tom_match5_2_3_1_2_list1); if(tom_is_empty_NameList(tom_match5_2_3_1_2_list1)) { {  TomName tom_match6_1 = null;  TomName tom_match6_2 = null; tom_match6_1 = ( TomName) tom_absvar1; tom_match6_2 = ( TomName) tom_absvar2;_match6_pattern1: {  String name2 = null;  String name1 = null; if(tom_is_fun_sym_Name(tom_match6_1) ||  false ) {  String tom_match6_1_1 = null; tom_match6_1_1 = ( String) tom_get_slot_Name_string(tom_match6_1); name1 = ( String) tom_match6_1_1; if(tom_is_fun_sym_Name(tom_match6_2) ||  false ) {  String tom_match6_2_1 = null; tom_match6_2_1 = ( String) tom_get_slot_Name_string(tom_match6_2); name2 = ( String) tom_match6_2_1;



 
            if(name1.compareTo(name2) >= 0) {
              return sortAttributeList(tom_insert_list_concTomTerm(X1,tom_make_insert_concTomTerm(e2,tom_insert_list_concTomTerm(X2,tom_make_insert_concTomTerm(e1,tom_insert_list_concTomTerm(X3,( TomList) tom_make_empty_concTomTerm())))))) ;
            }
           } }} } } } } } } } } } } } } }}_match5_pattern2: {  TomName tom_absvar4 = null;  TomName tom_absvar3 = null; if(tom_is_fun_sym_BackQuoteAppl(tom_match5_1) ||  false ) {  TomList tom_match5_1_3 = null; tom_match5_1_3 = ( TomList) tom_get_slot_BackQuoteAppl_args(tom_match5_1); if(tom_is_fun_sym_manyTomList(tom_match5_1_3) ||  false ) {  TomTerm tom_match5_1_3_1 = null; tom_match5_1_3_1 = ( TomTerm) tom_get_slot_manyTomList_head(tom_match5_1_3); if(tom_is_fun_sym_Appl(tom_match5_1_3_1) ||  false ) {  NameList tom_match5_1_3_1_2 = null; tom_match5_1_3_1_2 = ( NameList) tom_get_slot_Appl_nameList(tom_match5_1_3_1); if(tom_is_fun_sym_concTomName(tom_match5_1_3_1_2) ||  false ) {  NameList tom_match5_1_3_1_2_list1 = null; tom_match5_1_3_1_2_list1 = ( NameList) tom_match5_1_3_1_2; if(!(tom_is_empty_NameList(tom_match5_1_3_1_2_list1))) { tom_absvar3 = ( TomName) tom_get_head_NameList(tom_match5_1_3_1_2_list1); tom_match5_1_3_1_2_list1 = ( NameList) tom_get_tail_NameList(tom_match5_1_3_1_2_list1); if(tom_is_empty_NameList(tom_match5_1_3_1_2_list1)) { if(tom_is_fun_sym_BackQuoteAppl(tom_match5_2) ||  false ) {  TomList tom_match5_2_3 = null; tom_match5_2_3 = ( TomList) tom_get_slot_BackQuoteAppl_args(tom_match5_2); if(tom_is_fun_sym_manyTomList(tom_match5_2_3) ||  false ) {  TomTerm tom_match5_2_3_1 = null; tom_match5_2_3_1 = ( TomTerm) tom_get_slot_manyTomList_head(tom_match5_2_3); if(tom_is_fun_sym_Appl(tom_match5_2_3_1) ||  false ) {  NameList tom_match5_2_3_1_2 = null; tom_match5_2_3_1_2 = ( NameList) tom_get_slot_Appl_nameList(tom_match5_2_3_1); if(tom_is_fun_sym_concTomName(tom_match5_2_3_1_2) ||  false ) {  NameList tom_match5_2_3_1_2_list1 = null; tom_match5_2_3_1_2_list1 = ( NameList) tom_match5_2_3_1_2; if(!(tom_is_empty_NameList(tom_match5_2_3_1_2_list1))) { tom_absvar4 = ( TomName) tom_get_head_NameList(tom_match5_2_3_1_2_list1); tom_match5_2_3_1_2_list1 = ( NameList) tom_get_tail_NameList(tom_match5_2_3_1_2_list1); if(tom_is_empty_NameList(tom_match5_2_3_1_2_list1)) { {  TomName tom_match7_1 = null;  TomName tom_match7_2 = null; tom_match7_1 = ( TomName) tom_absvar3; tom_match7_2 = ( TomName) tom_absvar4;_match7_pattern1: {  String name2 = null;  String name1 = null; if(tom_is_fun_sym_Name(tom_match7_1) ||  false ) {  String tom_match7_1_1 = null; tom_match7_1_1 = ( String) tom_get_slot_Name_string(tom_match7_1); name1 = ( String) tom_match7_1_1; if(tom_is_fun_sym_Name(tom_match7_2) ||  false ) {  String tom_match7_2_1 = null; tom_match7_2_1 = ( String) tom_get_slot_Name_string(tom_match7_2); name2 = ( String) tom_match7_2_1;

 
            if(name1.compareTo(name2) >= 0) {
              return sortAttributeList(tom_insert_list_concTomTerm(X1,tom_make_insert_concTomTerm(e2,tom_insert_list_concTomTerm(X2,tom_make_insert_concTomTerm(e1,tom_insert_list_concTomTerm(X3,( TomList) tom_make_empty_concTomTerm())))))) ;
            }
           } }} } } } } } } } } } } } } }} }
 
       } if(!(tom_is_empty_TomList(tom_match4_1_end3))) { tom_match4_1_end3 = ( TomList) tom_get_tail_TomList(tom_match4_1_end3); } tom_match4_1_list1 = ( TomList) tom_match4_1_end3; } while(!(tom_is_empty_TomList(tom_match4_1_list1))); } if(!(tom_is_empty_TomList(tom_match4_1_end1))) { tom_match4_1_end1 = ( TomList) tom_get_tail_TomList(tom_match4_1_end1); } tom_match4_1_list1 = ( TomList) tom_match4_1_end1; } while(!(tom_is_empty_TomList(tom_match4_1_list1))); }} }
 
    return attrList;
  }

  private OptionList convertOriginTracking(String name,OptionList optionList) {
    Option originTracking = findOriginTracking(optionList);
     {  Option tom_match8_1 = null; tom_match8_1 = ( Option) originTracking;_match8_pattern1: {  int line;  TomName fileName = null; if(tom_is_fun_sym_OriginTracking(tom_match8_1) ||  false ) {  int tom_match8_1_2;  TomName tom_match8_1_3 = null; tom_match8_1_2 = ( int) tom_get_slot_OriginTracking_line(tom_match8_1); tom_match8_1_3 = ( TomName) tom_get_slot_OriginTracking_fileName(tom_match8_1); line = ( int) tom_match8_1_2; fileName = ( TomName) tom_match8_1_3;
 
        return tom_make_insert_concOption(tom_make_OriginTracking(tom_make_Name(name),line,fileName),( OptionList) tom_make_empty_concOption()) ;
       }} }
 
    System.out.println("Warning: no OriginTracking information");
    return emptyOption();
  }

  
  protected TomTerm expandXMLAppl(OptionList optionList, NameList nameList,
                                  TomList attrList, TomList childList) {
    boolean implicitAttribute = hasImplicitXMLAttribut(optionList);
    boolean implicitChild     = hasImplicitXMLChild(optionList);
    
    TomList newAttrList  = tom_make_emptyTomList() ;
    TomList newChildList = tom_make_emptyTomList() ;

    TomTerm star = ast().makeUnamedVariableStar(convertOriginTracking("_*",optionList),"unknown type");
    if(implicitAttribute) { newAttrList  = tom_make_manyTomList(star,newAttrList) ; }
    if(implicitChild)     { newChildList = tom_make_manyTomList(star,newChildList) ; }

    attrList = sortAttributeList(attrList);
    while(!attrList.isEmpty()) {
      TomTerm newPattern = expandTomSyntax(attrList.getHead());
      newAttrList = tom_make_manyTomList(newPattern,newAttrList) ;
      if(implicitAttribute) { newAttrList = tom_make_manyTomList(star,newAttrList) ; }
      attrList = attrList.getTail();
    }
    newAttrList = (TomList) newAttrList.reverse();
    
    while(!childList.isEmpty()) {
      TomTerm newPattern = expandTomSyntax(childList.getHead());
      newChildList = tom_make_manyTomList(newPattern,newChildList) ;
      if(implicitChild) {
        if(newPattern.isVariableStar()) {
            // remove the previously inserted pattern
          newChildList = newChildList.getTail();
          if(newChildList.getHead().isUnamedVariableStar()) {
            // remove the previously inserted star
            newChildList = newChildList.getTail();
          }
            // re-insert the pattern
          newChildList = tom_make_manyTomList(newPattern,newChildList) ;
        } else {
          newChildList = tom_make_manyTomList(star,newChildList) ;
        }
      }
      childList = childList.getTail();
    }
    newChildList = (TomList) newChildList.reverse();

      /*
       * encode the name and put it into the table of symbols
       */
    NameList newNameList = ( NameList) tom_make_empty_concTomName() ;
     {  NameList tom_match9_1 = null; tom_match9_1 = ( NameList) nameList;_match9_pattern1: {  TomName tom_absvar5 = null; if(tom_is_fun_sym_concTomName(tom_match9_1) ||  false ) {  NameList tom_match9_1_begin1 = null;  NameList tom_match9_1_end1 = null;  NameList tom_match9_1_list1 = null; tom_match9_1_list1 = ( NameList) tom_match9_1; tom_match9_1_begin1 = ( NameList) tom_match9_1_list1; tom_match9_1_end1 = ( NameList) tom_match9_1_list1; do { if(!(tom_is_empty_NameList(tom_match9_1_list1))) { tom_absvar5 = ( TomName) tom_get_head_NameList(tom_match9_1_list1); tom_match9_1_list1 = ( NameList) tom_get_tail_NameList(tom_match9_1_list1); {  TomName tom_match10_1 = null; tom_match10_1 = ( TomName) tom_absvar5;_match10_pattern1: {  String name = null; if(tom_is_fun_sym_Name(tom_match10_1) ||  false ) {  String tom_match10_1_1 = null; tom_match10_1_1 = ( String) tom_get_slot_Name_string(tom_match10_1); name = ( String) tom_match10_1_1;
 
        newNameList = (NameList)newNameList.append(tom_make_Name(tomFactory .encodeXMLString(symbolTable(), name)) );
       }} } } if(!(tom_is_empty_NameList(tom_match9_1_end1))) { tom_match9_1_end1 = ( NameList) tom_get_tail_NameList(tom_match9_1_end1); } tom_match9_1_list1 = ( NameList) tom_match9_1_end1; } while(!(tom_is_empty_NameList(tom_match9_1_list1))); }} }
 
    String tomName = newNameList.getHead().getString();
    TomList newArgs = tom_make_insert_concTomTerm(tom_make_Appl(convertOriginTracking(tomName, optionList),newNameList,empty()),tom_make_insert_concTomTerm(tom_make_Appl(convertOriginTracking( "CONC_TNODE", optionList),tom_make_insert_concTomName(tom_make_Name(Constants .CONC_TNODE),( NameList) tom_make_empty_concTomName()),newAttrList),tom_make_insert_concTomTerm(tom_make_Appl(convertOriginTracking( "CONC_TNODE", optionList),tom_make_insert_concTomName(tom_make_Name(Constants .CONC_TNODE),( NameList) tom_make_empty_concTomName()),newChildList),( TomList) tom_make_empty_concTomTerm())))


 ;
    TomTerm result = tom_make_Appl(optionList,tom_make_insert_concTomName(tom_make_Name(Constants .ELEMENT_NODE),( NameList) tom_make_empty_concTomName()),newArgs) ;
      //System.out.println("expandXML out:\n" + result);
    return result;
   
  }

    /*
     * At Tom expander level, we worry only about RewriteRule and
     *  their condlist
     * replace Name by Symbol
     * replace Name by Variable
     */

  Replace2 replace_expandVariable = new Replace2() {
      public ATerm apply(ATerm t, Object arg1) {
        TomTerm contextSubject = (TomTerm)arg1;
        return expandVariable(contextSubject, (TomTerm)t);
      }
    };

  protected TomTerm expandBackQuoteXMLAppl(TomTerm subject) {
    Replace1 replaceSymbol = new Replace1() {
        public ATerm apply(ATerm t) {
          if(t instanceof TomTerm) {
             {  TomTerm tom_match11_1 = null; tom_match11_1 = ( TomTerm) t;_match11_pattern1: {  TomList list = null; if(tom_is_fun_sym_Composite(tom_match11_1) ||  false ) {  TomList tom_match11_1_1 = null; tom_match11_1_1 = ( TomList) tom_get_slot_Composite_args(tom_match11_1); list = ( TomList) tom_match11_1_1;
 
                list = parseBackQuoteXMLAppl(list);
                list = (TomList) traversal().genericTraversal(list,this);
                return tom_make_Composite(list) ;
               }} }
  // end match 
          } 
          return traversal().genericTraversal(t,this);
        } // end apply
      }; // end replaceSymbol
    return (TomTerm) replaceSymbol.apply(subject);
  }

  private TomList parseBackQuoteXMLAppl(TomList list) {
     {  TomList tom_match12_1 = null; tom_match12_1 = ( TomList) list;_match12_pattern1: {  TomTerm tom_absvar7 = null;  TomTerm tom_absvar8 = null;  TomList tail;  TomTerm tom_absvar6 = null;  TomList value; if(tom_is_fun_sym_concTomTerm(tom_match12_1) ||  false ) {  TomList tom_match12_1_list1 = null; tom_match12_1_list1 = ( TomList) tom_match12_1; if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar6 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1); if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar7 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1);  TomList tom_match12_1_begin3 = null;  TomList tom_match12_1_end3 = null; tom_match12_1_begin3 = ( TomList) tom_match12_1_list1; tom_match12_1_end3 = ( TomList) tom_match12_1_list1; do { value = ( TomList) tom_get_slice_concTomTerm(tom_match12_1_begin3,tom_match12_1_end3); if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar8 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1); tail = ( TomList) tom_match12_1_list1; {  TomTerm tom_match13_1 = null;  TomTerm tom_match13_2 = null;  TomTerm tom_match13_3 = null; tom_match13_1 = ( TomTerm) tom_absvar6; tom_match13_2 = ( TomTerm) tom_absvar7; tom_match13_3 = ( TomTerm) tom_absvar8;_match13_pattern1: { if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match13_1) ||  false ) {  TargetLanguage tom_match13_1_1 = null; tom_match13_1_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match13_1); if(tom_is_fun_sym_ITL(tom_match13_1_1) ||  false ) {  String tom_match13_1_1_1 = null; tom_match13_1_1_1 = ( String) tom_get_slot_ITL_code(tom_match13_1_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match13_1_1_1) , "#TEXT") ||  false ) { if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match13_2) ||  false ) {  TargetLanguage tom_match13_2_1 = null; tom_match13_2_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match13_2); if(tom_is_fun_sym_ITL(tom_match13_2_1) ||  false ) {  String tom_match13_2_1_1 = null; tom_match13_2_1_1 = ( String) tom_get_slot_ITL_code(tom_match13_2_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match13_2_1_1) , "(") ||  false ) { if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match13_3) ||  false ) {  TargetLanguage tom_match13_3_1 = null; tom_match13_3_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match13_3); if(tom_is_fun_sym_ITL(tom_match13_3_1) ||  false ) {  String tom_match13_3_1_1 = null; tom_match13_3_1_1 = ( String) tom_get_slot_ITL_code(tom_match13_3_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match13_3_1_1) , ")") ||  false ) {






 
        TomTerm newBackQuoteAppl = tom_make_BackQuoteAppl(emptyOption(),tom_make_Name(Constants .TEXT_NODE),tom_make_insert_concTomTerm(tom_make_Composite(value),( TomList) tom_make_empty_concTomTerm())) ;
        TomList newTail = parseBackQuoteXMLAppl(tail);
        return tom_make_insert_concTomTerm(newBackQuoteAppl,tom_insert_list_concTomTerm(newTail,( TomList) tom_make_empty_concTomTerm())) ;
       } } } } } } } } }} } } if(!(tom_is_empty_TomList(tom_match12_1_end3))) { tom_match12_1_end3 = ( TomList) tom_get_tail_TomList(tom_match12_1_end3); } tom_match12_1_list1 = ( TomList) tom_match12_1_end3; } while(!(tom_is_empty_TomList(tom_match12_1_list1))); } } }}_match12_pattern2: {  TomTerm tom_absvar10 = null;  TomList tail;  TomTerm tom_absvar9 = null; if(tom_is_fun_sym_concTomTerm(tom_match12_1) ||  false ) {  TomList tom_match12_1_list1 = null; tom_match12_1_list1 = ( TomList) tom_match12_1; if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar9 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1); if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar10 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1); tail = ( TomList) tom_match12_1_list1; {  TomTerm tom_match14_1 = null;  TomTerm tom_match14_2 = null; tom_match14_1 = ( TomTerm) tom_absvar9; tom_match14_2 = ( TomTerm) tom_absvar10;_match14_pattern1: {  TomName name = null; if(tom_is_fun_sym_BuildVariable(tom_match14_1) ||  false ) {  TomName tom_match14_1_1 = null; tom_match14_1_1 = ( TomName) tom_get_slot_BuildVariable_astName(tom_match14_1); name = ( TomName) tom_match14_1_1; if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match14_2) ||  false ) {  TargetLanguage tom_match14_2_1 = null; tom_match14_2_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match14_2); if(tom_is_fun_sym_ITL(tom_match14_2_1) ||  false ) {  String tom_match14_2_1_1 = null; tom_match14_2_1_1 = ( String) tom_get_slot_ITL_code(tom_match14_2_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match14_2_1_1) , "*") ||  false ) {





 
        TomTerm term = tom_make_VariableStar(emptyOption(),name,tom_make_TomTypeAlone( "unknown type")) ;
        TomList newTail = parseBackQuoteXMLAppl(tail);
        return tom_make_insert_concTomTerm(term,tom_insert_list_concTomTerm(newTail,( TomList) tom_make_empty_concTomTerm())) ;
       } } } }} } } } }}label2: {_match12_pattern3: {  TomTerm tom_absvar11 = null;  TomList Body;  TomTerm tom_absvar12 = null;  TomTerm tom_absvar15 = null;  TomTerm tom_absvar13 = null;  TomList Attributes;  TomList tail;  TomTerm tom_absvar14 = null;  TomTerm tom_absvar16 = null; if(tom_is_fun_sym_concTomTerm(tom_match12_1) ||  false ) {  TomList tom_match12_1_list1 = null; tom_match12_1_list1 = ( TomList) tom_match12_1; if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar11 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1); if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar12 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1);  TomList tom_match12_1_begin3 = null;  TomList tom_match12_1_end3 = null; tom_match12_1_begin3 = ( TomList) tom_match12_1_list1; tom_match12_1_end3 = ( TomList) tom_match12_1_list1; do { Attributes = ( TomList) tom_get_slice_concTomTerm(tom_match12_1_begin3,tom_match12_1_end3); if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar13 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1);  TomList tom_match12_1_begin5 = null;  TomList tom_match12_1_end5 = null; tom_match12_1_begin5 = ( TomList) tom_match12_1_list1; tom_match12_1_end5 = ( TomList) tom_match12_1_list1; do { Body = ( TomList) tom_get_slice_concTomTerm(tom_match12_1_begin5,tom_match12_1_end5); if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar14 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1); if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar15 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1); if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar16 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1); tail = ( TomList) tom_match12_1_list1; {  TomTerm tom_match15_1 = null;  TomTerm tom_match15_2 = null;  TomTerm tom_match15_3 = null;  TomTerm tom_match15_4 = null;  TomTerm tom_match15_5 = null;  TomTerm tom_match15_6 = null; tom_match15_1 = ( TomTerm) tom_absvar11; tom_match15_2 = ( TomTerm) tom_absvar12; tom_match15_3 = ( TomTerm) tom_absvar13; tom_match15_4 = ( TomTerm) tom_absvar14; tom_match15_5 = ( TomTerm) tom_absvar15; tom_match15_6 = ( TomTerm) tom_absvar16;_match15_pattern1: {  TomName name = null;  TomName tom_renamedvar_name_1 = null; if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match15_1) ||  false ) {  TargetLanguage tom_match15_1_1 = null; tom_match15_1_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match15_1); if(tom_is_fun_sym_ITL(tom_match15_1_1) ||  false ) {  String tom_match15_1_1_1 = null; tom_match15_1_1_1 = ( String) tom_get_slot_ITL_code(tom_match15_1_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match15_1_1_1) , "<") ||  false ) { if(tom_is_fun_sym_BuildVariable(tom_match15_2) ||  false ) {  TomName tom_match15_2_1 = null; tom_match15_2_1 = ( TomName) tom_get_slot_BuildVariable_astName(tom_match15_2); tom_renamedvar_name_1 = ( TomName) tom_match15_2_1; if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match15_3) ||  false ) {  TargetLanguage tom_match15_3_1 = null; tom_match15_3_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match15_3); if(tom_is_fun_sym_ITL(tom_match15_3_1) ||  false ) {  String tom_match15_3_1_1 = null; tom_match15_3_1_1 = ( String) tom_get_slot_ITL_code(tom_match15_3_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match15_3_1_1) , ">") ||  false ) { if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match15_4) ||  false ) {  TargetLanguage tom_match15_4_1 = null; tom_match15_4_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match15_4); if(tom_is_fun_sym_ITL(tom_match15_4_1) ||  false ) {  String tom_match15_4_1_1 = null; tom_match15_4_1_1 = ( String) tom_get_slot_ITL_code(tom_match15_4_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match15_4_1_1) , "</") ||  false ) { if(tom_is_fun_sym_BuildVariable(tom_match15_5) ||  false ) {  TomName tom_match15_5_1 = null; tom_match15_5_1 = ( TomName) tom_get_slot_BuildVariable_astName(tom_match15_5); name = ( TomName) tom_match15_5_1; if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match15_6) ||  false ) {  TargetLanguage tom_match15_6_1 = null; tom_match15_6_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match15_6); if(tom_is_fun_sym_ITL(tom_match15_6_1) ||  false ) {  String tom_match15_6_1_1 = null; tom_match15_6_1_1 = ( String) tom_get_slot_ITL_code(tom_match15_6_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match15_6_1_1) , ">") ||  false ) { if(tom_terms_equal_TomName(name, tom_renamedvar_name_1) &&  true ) {











 
        if(containClosingBracket(Attributes)) {
          break label2;
        }

          //System.out.println("Attributes = " + Attributes);
          //System.out.println("Body = " + Body);
        
        TomTerm newName = tom_make_BackQuoteAppl(emptyOption(),encodeName(name),empty()) ;
        TomTerm newAttribute = metaEncodeTNodeList(aggregateXMLAttribute(Attributes));
        TomTerm newBody = metaEncodeTNodeList(aggregateXMLBody(Body));
        TomTerm newBackQuoteAppl = tom_make_BackQuoteAppl(emptyOption(),tom_make_Name(Constants .ELEMENT_NODE),tom_make_insert_concTomTerm(newName,tom_make_insert_concTomTerm(newAttribute,tom_make_insert_concTomTerm(newBody,( TomList) tom_make_empty_concTomTerm())))) ;
          //System.out.println("newBackQuoteAppl1 = " + newBackQuoteAppl);
        newBackQuoteAppl = expandTomSyntax(newBackQuoteAppl);
          //System.out.println("newBackQuoteAppl2 = " + newBackQuoteAppl);
          //TomList newTail = aggregateXMLBody(tail);
        TomList newTail = parseBackQuoteXMLAppl(tail);
        return tom_make_insert_concTomTerm(newBackQuoteAppl,tom_insert_list_concTomTerm(newTail,( TomList) tom_make_empty_concTomTerm())) ;
       } } } } } } } } } } } } } } }} } } } } if(!(tom_is_empty_TomList(tom_match12_1_end5))) { tom_match12_1_end5 = ( TomList) tom_get_tail_TomList(tom_match12_1_end5); } tom_match12_1_list1 = ( TomList) tom_match12_1_end5; } while(!(tom_is_empty_TomList(tom_match12_1_list1))); } if(!(tom_is_empty_TomList(tom_match12_1_end3))) { tom_match12_1_end3 = ( TomList) tom_get_tail_TomList(tom_match12_1_end3); } tom_match12_1_list1 = ( TomList) tom_match12_1_end3; } while(!(tom_is_empty_TomList(tom_match12_1_list1))); } } }}}label3: {_match12_pattern4: {  TomList Attributes;  TomTerm tom_absvar19 = null;  TomTerm tom_absvar17 = null;  TomTerm tom_absvar18 = null;  TomList tail; if(tom_is_fun_sym_concTomTerm(tom_match12_1) ||  false ) {  TomList tom_match12_1_list1 = null; tom_match12_1_list1 = ( TomList) tom_match12_1; if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar17 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1); if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar18 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1);  TomList tom_match12_1_begin3 = null;  TomList tom_match12_1_end3 = null; tom_match12_1_begin3 = ( TomList) tom_match12_1_list1; tom_match12_1_end3 = ( TomList) tom_match12_1_list1; do { Attributes = ( TomList) tom_get_slice_concTomTerm(tom_match12_1_begin3,tom_match12_1_end3); if(!(tom_is_empty_TomList(tom_match12_1_list1))) { tom_absvar19 = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1); tail = ( TomList) tom_match12_1_list1; {  TomTerm tom_match16_1 = null;  TomTerm tom_match16_2 = null;  TomTerm tom_match16_3 = null; tom_match16_1 = ( TomTerm) tom_absvar17; tom_match16_2 = ( TomTerm) tom_absvar18; tom_match16_3 = ( TomTerm) tom_absvar19;_match16_pattern1: {  TomName name = null; if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match16_1) ||  false ) {  TargetLanguage tom_match16_1_1 = null; tom_match16_1_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match16_1); if(tom_is_fun_sym_ITL(tom_match16_1_1) ||  false ) {  String tom_match16_1_1_1 = null; tom_match16_1_1_1 = ( String) tom_get_slot_ITL_code(tom_match16_1_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match16_1_1_1) , "<") ||  false ) { if(tom_is_fun_sym_BuildVariable(tom_match16_2) ||  false ) {  TomName tom_match16_2_1 = null; tom_match16_2_1 = ( TomName) tom_get_slot_BuildVariable_astName(tom_match16_2); name = ( TomName) tom_match16_2_1; if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match16_3) ||  false ) {  TargetLanguage tom_match16_3_1 = null; tom_match16_3_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match16_3); if(tom_is_fun_sym_ITL(tom_match16_3_1) ||  false ) {  String tom_match16_3_1_1 = null; tom_match16_3_1_1 = ( String) tom_get_slot_ITL_code(tom_match16_3_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match16_3_1_1) , "/>") ||  false ) {







 
        if(containClosingBracket(Attributes)) {
          break label3;
        }
          //System.out.println("SingleNode(" + name +")");
          //System.out.println("Attributes = " + Attributes);

        TomTerm newName = tom_make_BackQuoteAppl(emptyOption(),encodeName(name),empty()) ;
        TomTerm newAttribute = metaEncodeTNodeList(aggregateXMLAttribute(Attributes));
        TomTerm newBody = metaEncodeTNodeList(( TomList) tom_make_empty_concTomTerm() );
        TomTerm newBackQuoteAppl = tom_make_BackQuoteAppl(emptyOption(),tom_make_Name(Constants .ELEMENT_NODE),tom_make_insert_concTomTerm(newName,tom_make_insert_concTomTerm(newAttribute,tom_make_insert_concTomTerm(newBody,( TomList) tom_make_empty_concTomTerm())))) ;
          //System.out.println("newBackQuoteAppl1 = " + newBackQuoteAppl);
        newBackQuoteAppl = expandTomSyntax(newBackQuoteAppl);
          //System.out.println("newBackQuoteAppl2 = " + newBackQuoteAppl);
          //TomList newTail = aggregateXMLBody(tail);
        TomList newTail = parseBackQuoteXMLAppl(tail);
        return tom_make_insert_concTomTerm(newBackQuoteAppl,tom_insert_list_concTomTerm(newTail,( TomList) tom_make_empty_concTomTerm())) ;

       } } } } } } }} } } if(!(tom_is_empty_TomList(tom_match12_1_end3))) { tom_match12_1_end3 = ( TomList) tom_get_tail_TomList(tom_match12_1_end3); } tom_match12_1_list1 = ( TomList) tom_match12_1_end3; } while(!(tom_is_empty_TomList(tom_match12_1_list1))); } } }}}_match12_pattern5: { if(tom_is_fun_sym_concTomTerm(tom_match12_1) ||  false ) {  TomList tom_match12_1_list1 = null; tom_match12_1_list1 = ( TomList) tom_match12_1; if(tom_is_empty_TomList(tom_match12_1_list1)) {

 
        return ( TomList) tom_make_empty_concTomTerm() ;
       } }}_match12_pattern6: {  TomList tail;  TomTerm head = null; if(tom_is_fun_sym_concTomTerm(tom_match12_1) ||  false ) {  TomList tom_match12_1_list1 = null; tom_match12_1_list1 = ( TomList) tom_match12_1; if(!(tom_is_empty_TomList(tom_match12_1_list1))) { head = ( TomTerm) tom_get_head_TomList(tom_match12_1_list1); tom_match12_1_list1 = ( TomList) tom_get_tail_TomList(tom_match12_1_list1); tail = ( TomList) tom_match12_1_list1;

 
        TomList newTail = parseBackQuoteXMLAppl(tail);
        return tom_make_insert_concTomTerm(head,tom_insert_list_concTomTerm(newTail,( TomList) tom_make_empty_concTomTerm())) ;
       } }} }


 
    return list;
  }

  private boolean containClosingBracket(TomList list) {
     {  TomList tom_match17_1 = null; tom_match17_1 = ( TomList) list;_match17_pattern1: {  TomTerm tom_absvar20 = null; if(tom_is_fun_sym_concTomTerm(tom_match17_1) ||  false ) {  TomList tom_match17_1_begin1 = null;  TomList tom_match17_1_end1 = null;  TomList tom_match17_1_list1 = null; tom_match17_1_list1 = ( TomList) tom_match17_1; tom_match17_1_begin1 = ( TomList) tom_match17_1_list1; tom_match17_1_end1 = ( TomList) tom_match17_1_list1; do { if(!(tom_is_empty_TomList(tom_match17_1_list1))) { tom_absvar20 = ( TomTerm) tom_get_head_TomList(tom_match17_1_list1); tom_match17_1_list1 = ( TomList) tom_get_tail_TomList(tom_match17_1_list1); {  TomTerm tom_match18_1 = null; tom_match18_1 = ( TomTerm) tom_absvar20;_match18_pattern1: { if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match18_1) ||  false ) {  TargetLanguage tom_match18_1_1 = null; tom_match18_1_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match18_1); if(tom_is_fun_sym_ITL(tom_match18_1_1) ||  false ) {  String tom_match18_1_1_1 = null; tom_match18_1_1_1 = ( String) tom_get_slot_ITL_code(tom_match18_1_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match18_1_1_1) , ">") ||  false ) {
 
        return true;
       } } }} } } if(!(tom_is_empty_TomList(tom_match17_1_end1))) { tom_match17_1_end1 = ( TomList) tom_get_tail_TomList(tom_match17_1_end1); } tom_match17_1_list1 = ( TomList) tom_match17_1_end1; } while(!(tom_is_empty_TomList(tom_match17_1_list1))); }}_match17_pattern2: {  TomTerm tom_absvar21 = null; if(tom_is_fun_sym_concTomTerm(tom_match17_1) ||  false ) {  TomList tom_match17_1_begin1 = null;  TomList tom_match17_1_end1 = null;  TomList tom_match17_1_list1 = null; tom_match17_1_list1 = ( TomList) tom_match17_1; tom_match17_1_begin1 = ( TomList) tom_match17_1_list1; tom_match17_1_end1 = ( TomList) tom_match17_1_list1; do { if(!(tom_is_empty_TomList(tom_match17_1_list1))) { tom_absvar21 = ( TomTerm) tom_get_head_TomList(tom_match17_1_list1); tom_match17_1_list1 = ( TomList) tom_get_tail_TomList(tom_match17_1_list1); {  TomTerm tom_match19_1 = null; tom_match19_1 = ( TomTerm) tom_absvar21;_match19_pattern1: { if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match19_1) ||  false ) {  TargetLanguage tom_match19_1_1 = null; tom_match19_1_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match19_1); if(tom_is_fun_sym_ITL(tom_match19_1_1) ||  false ) {  String tom_match19_1_1_1 = null; tom_match19_1_1_1 = ( String) tom_get_slot_ITL_code(tom_match19_1_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match19_1_1_1) , "/>") ||  false ) {
 
        return true;
       } } }} } } if(!(tom_is_empty_TomList(tom_match17_1_end1))) { tom_match17_1_end1 = ( TomList) tom_get_tail_TomList(tom_match17_1_end1); } tom_match17_1_list1 = ( TomList) tom_match17_1_end1; } while(!(tom_is_empty_TomList(tom_match17_1_list1))); }} }
 
    return false;
  }
  
  private TomTerm metaEncodeTNodeList(TomList list) {
    return tom_make_BackQuoteAppl(emptyOption(),tom_make_Name(Constants .CONC_TNODE),list) ;
  }
  
  private TomList aggregateXMLBody(TomList subjectList) {
    TomTerm composite = expandBackQuoteXMLAppl(tom_make_Composite(subjectList) );
      //System.out.println("composite = " + composite);
    return composite.getArgs();
  }

  private TomName encodeName(TomName name) {
    return tom_make_Name( "\"" +name .getString() + "\"") ;
  }
  
  private TomList aggregateXMLAttribute(TomList subjectList) {
    TomList list = ( TomList) tom_make_empty_concTomTerm() ;
     {  TomList tom_match20_1 = null; tom_match20_1 = ( TomList) subjectList;_match20_pattern1: {  TomTerm value = null;  TomTerm tom_absvar23 = null;  TomList X1;  TomTerm tom_absvar22 = null;  TomList X2; if(tom_is_fun_sym_concTomTerm(tom_match20_1) ||  false ) {  TomList tom_match20_1_begin1 = null;  TomList tom_match20_1_end1 = null;  TomList tom_match20_1_list1 = null; tom_match20_1_list1 = ( TomList) tom_match20_1; tom_match20_1_begin1 = ( TomList) tom_match20_1_list1; tom_match20_1_end1 = ( TomList) tom_match20_1_list1; do { X1 = ( TomList) tom_get_slice_concTomTerm(tom_match20_1_begin1,tom_match20_1_end1); if(!(tom_is_empty_TomList(tom_match20_1_list1))) { tom_absvar22 = ( TomTerm) tom_get_head_TomList(tom_match20_1_list1); tom_match20_1_list1 = ( TomList) tom_get_tail_TomList(tom_match20_1_list1); if(!(tom_is_empty_TomList(tom_match20_1_list1))) { tom_absvar23 = ( TomTerm) tom_get_head_TomList(tom_match20_1_list1); tom_match20_1_list1 = ( TomList) tom_get_tail_TomList(tom_match20_1_list1); if(!(tom_is_empty_TomList(tom_match20_1_list1))) { value = ( TomTerm) tom_get_head_TomList(tom_match20_1_list1); tom_match20_1_list1 = ( TomList) tom_get_tail_TomList(tom_match20_1_list1); X2 = ( TomList) tom_match20_1_list1; {  TomTerm tom_match21_1 = null;  TomTerm tom_match21_2 = null; tom_match21_1 = ( TomTerm) tom_absvar22; tom_match21_2 = ( TomTerm) tom_absvar23;_match21_pattern1: {  TomName name = null; if(tom_is_fun_sym_BuildVariable(tom_match21_1) ||  false ) {  TomName tom_match21_1_1 = null; tom_match21_1_1 = ( TomName) tom_get_slot_BuildVariable_astName(tom_match21_1); name = ( TomName) tom_match21_1_1; if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match21_2) ||  false ) {  TargetLanguage tom_match21_2_1 = null; tom_match21_2_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match21_2); if(tom_is_fun_sym_ITL(tom_match21_2_1) ||  false ) {  String tom_match21_2_1_1 = null; tom_match21_2_1_1 = ( String) tom_get_slot_ITL_code(tom_match21_2_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match21_2_1_1) , "=") ||  false ) {



 
        TomTerm newValue = tom_make_BackQuoteAppl(emptyOption(),tom_make_Name(Constants .TEXT_NODE),tom_make_insert_concTomTerm(value,( TomList) tom_make_empty_concTomTerm())) ;
        TomList args = tom_make_insert_concTomTerm(tom_make_BackQuoteAppl(emptyOption(),encodeName(name),( TomList) tom_make_empty_concTomTerm()),tom_make_insert_concTomTerm(tom_make_BackQuoteAppl(emptyOption(),tom_make_Name( "\"true\""),( TomList) tom_make_empty_concTomTerm()),tom_make_insert_concTomTerm(newValue,( TomList) tom_make_empty_concTomTerm())))


 ;
        TomTerm attributeNode = tom_make_BackQuoteAppl(emptyOption(),tom_make_Name(Constants .ATTRIBUTE_NODE),args)

 ;
        list = tom_make_manyTomList(attributeNode,list) ;
       } } } }} } } } } if(!(tom_is_empty_TomList(tom_match20_1_end1))) { tom_match20_1_end1 = ( TomList) tom_get_tail_TomList(tom_match20_1_end1); } tom_match20_1_list1 = ( TomList) tom_match20_1_end1; } while(!(tom_is_empty_TomList(tom_match20_1_list1))); }}_match20_pattern2: {  TomList X2;  TomTerm tom_absvar24 = null;  TomList X1;  TomTerm tom_absvar25 = null; if(tom_is_fun_sym_concTomTerm(tom_match20_1) ||  false ) {  TomList tom_match20_1_begin1 = null;  TomList tom_match20_1_end1 = null;  TomList tom_match20_1_list1 = null; tom_match20_1_list1 = ( TomList) tom_match20_1; tom_match20_1_begin1 = ( TomList) tom_match20_1_list1; tom_match20_1_end1 = ( TomList) tom_match20_1_list1; do { X1 = ( TomList) tom_get_slice_concTomTerm(tom_match20_1_begin1,tom_match20_1_end1); if(!(tom_is_empty_TomList(tom_match20_1_list1))) { tom_absvar24 = ( TomTerm) tom_get_head_TomList(tom_match20_1_list1); tom_match20_1_list1 = ( TomList) tom_get_tail_TomList(tom_match20_1_list1); if(!(tom_is_empty_TomList(tom_match20_1_list1))) { tom_absvar25 = ( TomTerm) tom_get_head_TomList(tom_match20_1_list1); tom_match20_1_list1 = ( TomList) tom_get_tail_TomList(tom_match20_1_list1); X2 = ( TomList) tom_match20_1_list1; {  TomTerm tom_match22_1 = null;  TomTerm tom_match22_2 = null; tom_match22_1 = ( TomTerm) tom_absvar24; tom_match22_2 = ( TomTerm) tom_absvar25;_match22_pattern1: {  TomName name = null; if(tom_is_fun_sym_BuildVariable(tom_match22_1) ||  false ) {  TomName tom_match22_1_1 = null; tom_match22_1_1 = ( TomName) tom_get_slot_BuildVariable_astName(tom_match22_1); name = ( TomName) tom_match22_1_1; if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match22_2) ||  false ) {  TargetLanguage tom_match22_2_1 = null; tom_match22_2_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match22_2); if(tom_is_fun_sym_ITL(tom_match22_2_1) ||  false ) {  String tom_match22_2_1_1 = null; tom_match22_2_1_1 = ( String) tom_get_slot_ITL_code(tom_match22_2_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match22_2_1_1) , "*") ||  false ) {





 
        TomTerm attributeNode = tom_make_VariableStar(emptyOption(),name,tom_make_TomTypeAlone( "unknown type")) ;
        list = tom_make_manyTomList(attributeNode,list) ;
       } } } }} } } } if(!(tom_is_empty_TomList(tom_match20_1_end1))) { tom_match20_1_end1 = ( TomList) tom_get_tail_TomList(tom_match20_1_end1); } tom_match20_1_list1 = ( TomList) tom_match20_1_end1; } while(!(tom_is_empty_TomList(tom_match20_1_list1))); }} }
 
    list = (TomList) sortAttributeList(list).reverse();
    return list;
  }

  
  public TomTerm expandVariable(TomTerm contextSubject, TomTerm subject) {

      //System.out.println("expandVariable:\n\t" + subject );
      
     {  TomTerm tom_match23_1 = null;  TomTerm tom_match23_2 = null; tom_match23_1 = ( TomTerm) contextSubject; tom_match23_2 = ( TomTerm) subject;_match23_pattern1: {  TomList l = null;  TomTerm context = null; context = ( TomTerm) tom_match23_1; if(tom_is_fun_sym_Tom(tom_match23_2) ||  false ) {  TomList tom_match23_2_1 = null; tom_match23_2_1 = ( TomList) tom_get_slot_Tom_tomList(tom_match23_2); l = ( TomList) tom_match23_2_1;
 
        TomList newL = (TomList) traversal().genericTraversal(l,replace_expandVariable,contextSubject);
        return tom_make_Tom(newL) ;
       }}_match23_pattern2: {  TomTerm context = null;  Option orgTrack = null;  TomRuleList ruleList = null; context = ( TomTerm) tom_match23_1; if(tom_is_fun_sym_RuleSet(tom_match23_2) ||  false ) {  TomRuleList tom_match23_2_1 = null;  Option tom_match23_2_2 = null; tom_match23_2_1 = ( TomRuleList) tom_get_slot_RuleSet_ruleList(tom_match23_2); tom_match23_2_2 = ( Option) tom_get_slot_RuleSet_orgTrack(tom_match23_2); ruleList = ( TomRuleList) tom_match23_2_1; orgTrack = ( Option) tom_match23_2_2;

  
        TomRuleList newRuleList = tom_make_emptyTomRuleList() ;
        while(!ruleList.isEmpty()) {
          TomRule rule = ruleList.getHead();
          newRuleList = (TomRuleList) newRuleList.append(expandRewriteRule(context,rule));
          ruleList = ruleList.getTail();
        }
        
        return tom_make_RuleSet(newRuleList,orgTrack) ;
       }}_match23_pattern3: {  TomName tom_absvar27 = null;  TomList varList = null;  TomTerm lhs = null;  TomTerm rhs = null;  TomName tom_absvar26 = null; if(tom_is_fun_sym_Tom(tom_match23_1) ||  false ) {  TomList tom_match23_1_1 = null; tom_match23_1_1 = ( TomList) tom_get_slot_Tom_tomList(tom_match23_1); varList = ( TomList) tom_match23_1_1; if(tom_is_fun_sym_MatchingCondition(tom_match23_2) ||  false ) {  TomTerm tom_match23_2_1 = null;  TomTerm tom_match23_2_2 = null; tom_match23_2_1 = ( TomTerm) tom_get_slot_MatchingCondition_lhs(tom_match23_2); tom_match23_2_2 = ( TomTerm) tom_get_slot_MatchingCondition_rhs(tom_match23_2); if(tom_is_fun_sym_Appl(tom_match23_2_1) ||  false ) {  NameList tom_match23_2_1_2 = null; tom_match23_2_1_2 = ( NameList) tom_get_slot_Appl_nameList(tom_match23_2_1); lhs = ( TomTerm) tom_match23_2_1; if(tom_is_fun_sym_concTomName(tom_match23_2_1_2) ||  false ) {  NameList tom_match23_2_1_2_list1 = null; tom_match23_2_1_2_list1 = ( NameList) tom_match23_2_1_2; if(!(tom_is_empty_NameList(tom_match23_2_1_2_list1))) { tom_absvar26 = ( TomName) tom_get_head_NameList(tom_match23_2_1_2_list1); tom_match23_2_1_2_list1 = ( NameList) tom_get_tail_NameList(tom_match23_2_1_2_list1); if(tom_is_fun_sym_Appl(tom_match23_2_2) ||  false ) {  NameList tom_match23_2_2_2 = null; tom_match23_2_2_2 = ( NameList) tom_get_slot_Appl_nameList(tom_match23_2_2); rhs = ( TomTerm) tom_match23_2_2; if(tom_is_fun_sym_concTomName(tom_match23_2_2_2) ||  false ) {  NameList tom_match23_2_2_2_list1 = null; tom_match23_2_2_2_list1 = ( NameList) tom_match23_2_2_2; if(!(tom_is_empty_NameList(tom_match23_2_2_2_list1))) { tom_absvar27 = ( TomName) tom_get_head_NameList(tom_match23_2_2_2_list1); tom_match23_2_2_2_list1 = ( NameList) tom_get_tail_NameList(tom_match23_2_2_2_list1); if(tom_is_empty_NameList(tom_match23_2_2_2_list1)) { {  TomName tom_match24_1 = null;  TomName tom_match24_2 = null; tom_match24_1 = ( TomName) tom_absvar26; tom_match24_2 = ( TomName) tom_absvar27;_match24_pattern1: {  String rhsName = null;  String lhsName = null; if(tom_is_fun_sym_Name(tom_match24_1) ||  false ) {  String tom_match24_1_1 = null; tom_match24_1_1 = ( String) tom_get_slot_Name_string(tom_match24_1); lhsName = ( String) tom_match24_1_1; if(tom_is_fun_sym_Name(tom_match24_2) ||  false ) {  String tom_match24_2_1 = null; tom_match24_2_1 = ( String) tom_get_slot_Name_string(tom_match24_2); rhsName = ( String) tom_match24_2_1;


 
        TomSymbol lhsSymbol = getSymbol(lhsName);
        TomSymbol rhsSymbol = getSymbol(rhsName);
        TomType type;
        
        if(lhsSymbol != null) {
          type = getSymbolCodomain(lhsSymbol);
        } else if(rhsSymbol != null) {
          type = getSymbolCodomain(rhsSymbol);
        } else {
            // both lhs and rhs are variables
            // since lhs is a fresh variable, we look for rhs
          type = getTypeFromVariableList(tom_make_Name(rhsName) ,varList);
        }
        
        TomTerm newLhs = expandVariable(tom_make_TomTypeToTomTerm(type), lhs) ;
        TomTerm newRhs = expandVariable(tom_make_TomTypeToTomTerm(type), rhs) ;
        return tom_make_MatchingCondition(newLhs,newRhs) ;
       } }} } } } } } } } } } }}_match23_pattern4: {  TomTerm lhs = null;  TomName tom_absvar29 = null;  TomList varList = null;  TomTerm rhs = null;  TomName tom_absvar28 = null; if(tom_is_fun_sym_Tom(tom_match23_1) ||  false ) {  TomList tom_match23_1_1 = null; tom_match23_1_1 = ( TomList) tom_get_slot_Tom_tomList(tom_match23_1); varList = ( TomList) tom_match23_1_1; if(tom_is_fun_sym_EqualityCondition(tom_match23_2) ||  false ) {  TomTerm tom_match23_2_1 = null;  TomTerm tom_match23_2_2 = null; tom_match23_2_1 = ( TomTerm) tom_get_slot_EqualityCondition_lhs(tom_match23_2); tom_match23_2_2 = ( TomTerm) tom_get_slot_EqualityCondition_rhs(tom_match23_2); if(tom_is_fun_sym_Appl(tom_match23_2_1) ||  false ) {  NameList tom_match23_2_1_2 = null; tom_match23_2_1_2 = ( NameList) tom_get_slot_Appl_nameList(tom_match23_2_1); lhs = ( TomTerm) tom_match23_2_1; if(tom_is_fun_sym_concTomName(tom_match23_2_1_2) ||  false ) {  NameList tom_match23_2_1_2_list1 = null; tom_match23_2_1_2_list1 = ( NameList) tom_match23_2_1_2; if(!(tom_is_empty_NameList(tom_match23_2_1_2_list1))) { tom_absvar28 = ( TomName) tom_get_head_NameList(tom_match23_2_1_2_list1); tom_match23_2_1_2_list1 = ( NameList) tom_get_tail_NameList(tom_match23_2_1_2_list1); if(tom_is_empty_NameList(tom_match23_2_1_2_list1)) { if(tom_is_fun_sym_Appl(tom_match23_2_2) ||  false ) {  NameList tom_match23_2_2_2 = null; tom_match23_2_2_2 = ( NameList) tom_get_slot_Appl_nameList(tom_match23_2_2); rhs = ( TomTerm) tom_match23_2_2; if(tom_is_fun_sym_concTomName(tom_match23_2_2_2) ||  false ) {  NameList tom_match23_2_2_2_list1 = null; tom_match23_2_2_2_list1 = ( NameList) tom_match23_2_2_2; if(!(tom_is_empty_NameList(tom_match23_2_2_2_list1))) { tom_absvar29 = ( TomName) tom_get_head_NameList(tom_match23_2_2_2_list1); tom_match23_2_2_2_list1 = ( NameList) tom_get_tail_NameList(tom_match23_2_2_2_list1); if(tom_is_empty_NameList(tom_match23_2_2_2_list1)) { {  TomName tom_match25_1 = null;  TomName tom_match25_2 = null; tom_match25_1 = ( TomName) tom_absvar28; tom_match25_2 = ( TomName) tom_absvar29;_match25_pattern1: {  String lhsName = null;  String rhsName = null; if(tom_is_fun_sym_Name(tom_match25_1) ||  false ) {  String tom_match25_1_1 = null; tom_match25_1_1 = ( String) tom_get_slot_Name_string(tom_match25_1); lhsName = ( String) tom_match25_1_1; if(tom_is_fun_sym_Name(tom_match25_2) ||  false ) {  String tom_match25_2_1 = null; tom_match25_2_1 = ( String) tom_get_slot_Name_string(tom_match25_2); rhsName = ( String) tom_match25_2_1;


 
        TomSymbol lhsSymbol = getSymbol(lhsName);
        TomSymbol rhsSymbol = getSymbol(rhsName);
        TomType type;
        
        if(lhsSymbol != null) {
          type = getSymbolCodomain(lhsSymbol);
        } else if(rhsSymbol != null) {
          type = getSymbolCodomain(rhsSymbol);
        } else {
            // both lhs and rhs are variables
          type = getTypeFromVariableList(tom_make_Name(lhsName) ,varList);
        }
        
          //System.out.println("EqualityCondition type = " + type);
        
        TomTerm newLhs = expandVariable(tom_make_TomTypeToTomTerm(type), lhs) ;
        TomTerm newRhs = expandVariable(tom_make_TomTypeToTomTerm(type), rhs) ;
        
          //System.out.println("lhs    = " + lhs);
          //System.out.println("newLhs = " + newLhs);
        
        return tom_make_EqualityCondition(newLhs,newRhs) ;
       } }} } } } } } } } } } } }}_match23_pattern5: {  TomTerm context = null;  TomTerm t = null; context = ( TomTerm) tom_match23_1; t = ( TomTerm) tom_match23_2;


 
        return tomKernelExpander.expandVariable(context,t);
      } }
  // end match
  }


  public TomRule expandRewriteRule(TomTerm contextSubject, TomRule subject) {
      
     {  TomTerm tom_match26_1 = null;  TomRule tom_match26_2 = null; tom_match26_1 = ( TomTerm) contextSubject; tom_match26_2 = ( TomRule) subject;_match26_pattern1: {  TomTerm rhs = null;  TomTerm context = null;  TomName tom_absvar30 = null;  OptionList optionList = null;  OptionList option = null;  TomList condList = null;  TomTerm lhs = null; context = ( TomTerm) tom_match26_1; if(tom_is_fun_sym_RewriteRule(tom_match26_2) ||  false ) {  TomTerm tom_match26_2_1 = null;  TomTerm tom_match26_2_2 = null;  TomList tom_match26_2_3 = null;  OptionList tom_match26_2_4 = null; tom_match26_2_1 = ( TomTerm) tom_get_slot_RewriteRule_lhs(tom_match26_2); tom_match26_2_2 = ( TomTerm) tom_get_slot_RewriteRule_rhs(tom_match26_2); tom_match26_2_3 = ( TomList) tom_get_slot_RewriteRule_condList(tom_match26_2); tom_match26_2_4 = ( OptionList) tom_get_slot_RewriteRule_option(tom_match26_2); if(tom_is_fun_sym_Term(tom_match26_2_1) ||  false ) {  TomTerm tom_match26_2_1_1 = null; tom_match26_2_1_1 = ( TomTerm) tom_get_slot_Term_tomTerm(tom_match26_2_1); if(tom_is_fun_sym_Appl(tom_match26_2_1_1) ||  false ) {  OptionList tom_match26_2_1_1_1 = null;  NameList tom_match26_2_1_1_2 = null; tom_match26_2_1_1_1 = ( OptionList) tom_get_slot_Appl_option(tom_match26_2_1_1); tom_match26_2_1_1_2 = ( NameList) tom_get_slot_Appl_nameList(tom_match26_2_1_1); lhs = ( TomTerm) tom_match26_2_1_1; optionList = ( OptionList) tom_match26_2_1_1_1; if(tom_is_fun_sym_concTomName(tom_match26_2_1_1_2) ||  false ) {  NameList tom_match26_2_1_1_2_list1 = null; tom_match26_2_1_1_2_list1 = ( NameList) tom_match26_2_1_1_2; if(!(tom_is_empty_NameList(tom_match26_2_1_1_2_list1))) { tom_absvar30 = ( TomName) tom_get_head_NameList(tom_match26_2_1_1_2_list1); tom_match26_2_1_1_2_list1 = ( NameList) tom_get_tail_NameList(tom_match26_2_1_1_2_list1); if(tom_is_empty_NameList(tom_match26_2_1_1_2_list1)) { if(tom_is_fun_sym_Term(tom_match26_2_2) ||  false ) {  TomTerm tom_match26_2_2_1 = null; tom_match26_2_2_1 = ( TomTerm) tom_get_slot_Term_tomTerm(tom_match26_2_2); rhs = ( TomTerm) tom_match26_2_2_1; condList = ( TomList) tom_match26_2_3; option = ( OptionList) tom_match26_2_4; {  TomName tom_match27_1 = null; tom_match27_1 = ( TomName) tom_absvar30;_match27_pattern1: {  String tomName = null; if(tom_is_fun_sym_Name(tom_match27_1) ||  false ) {  String tom_match27_1_1 = null; tom_match27_1_1 = ( String) tom_get_slot_Name_string(tom_match27_1); tomName = ( String) tom_match27_1_1;




  
          //debugPrintln("expandVariable.13: Rule(" + lhs + "," + rhs + ")");
        TomSymbol tomSymbol = getSymbol(tomName);
        TomType symbolType = getSymbolCodomain(tomSymbol);
        TomTerm newLhs = tom_make_Term(expandVariable(context, lhs)) ;
        TomTerm newRhs = tom_make_Term(expandVariable(tom_make_TomTypeToTomTerm(symbolType), rhs)) ;
        
          // build the list of variables that occur in the lhs
        HashSet set = new HashSet();
        collectVariable(set,newLhs);
        TomList varList = ast().makeList(set);
        TomList newCondList = empty();
        while(!condList.isEmpty()) {
          TomTerm cond = condList.getHead();
          TomTerm newCond = expandVariable(tom_make_Tom(varList) ,cond);
          newCondList = append(newCond,newCondList);
          collectVariable(set,newCond);
          varList = ast().makeList(set);
          condList = condList.getTail();
        }
        
        return tom_make_RewriteRule(newLhs,newRhs,newCondList,option) ;
       }} } } } } } } } }}_match26_pattern2: {  TomTerm context = null;  TomRule t = null; context = ( TomTerm) tom_match26_1; t = ( TomRule) tom_match26_2;


 
        System.out.println("expandRewriteRule. Stange case '" + t);
        return null;
      } }
  // end match
  }

  
  private TomType getTypeFromVariableList(TomName name, TomList list) {

      //System.out.println("name = " + name);
      //System.out.println("list = " + list);
    
     {  TomName tom_match28_1 = null;  TomList tom_match28_2 = null; tom_match28_1 = ( TomName) name; tom_match28_2 = ( TomList) list;_match28_pattern1: { if(tom_is_fun_sym_emptyTomList(tom_match28_2) ||  false ) {
 
        System.out.println("getTypeFromVariableList. Stange case '" + name + "' not found");
        throw new TomRuntimeException(new Throwable("getTypeFromVariableList. Stange case '" + name + "' not found"));
       }}_match28_pattern2: {  TomName varName = null;  TomType type = null;  TomName tom_renamedvar_varName_1 = null;  TomList tail = null; tom_renamedvar_varName_1 = ( TomName) tom_match28_1; if(tom_is_fun_sym_manyTomList(tom_match28_2) ||  false ) {  TomTerm tom_match28_2_1 = null;  TomList tom_match28_2_2 = null; tom_match28_2_1 = ( TomTerm) tom_get_slot_manyTomList_head(tom_match28_2); tom_match28_2_2 = ( TomList) tom_get_slot_manyTomList_tail(tom_match28_2); if(tom_is_fun_sym_Variable(tom_match28_2_1) ||  false ) {  TomName tom_match28_2_1_2 = null;  TomType tom_match28_2_1_3 = null; tom_match28_2_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match28_2_1); tom_match28_2_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match28_2_1); varName = ( TomName) tom_match28_2_1_2; if(tom_is_fun_sym_Type(tom_match28_2_1_3) ||  false ) { type = ( TomType) tom_match28_2_1_3; tail = ( TomList) tom_match28_2_2; if(tom_terms_equal_TomName(varName, tom_renamedvar_varName_1) &&  true ) {

  return type;  } } } }}_match28_pattern3: {  TomName varName = null;  TomType type = null;  TomList tail = null;  TomName tom_renamedvar_varName_1 = null; tom_renamedvar_varName_1 = ( TomName) tom_match28_1; if(tom_is_fun_sym_manyTomList(tom_match28_2) ||  false ) {  TomTerm tom_match28_2_1 = null;  TomList tom_match28_2_2 = null; tom_match28_2_1 = ( TomTerm) tom_get_slot_manyTomList_head(tom_match28_2); tom_match28_2_2 = ( TomList) tom_get_slot_manyTomList_tail(tom_match28_2); if(tom_is_fun_sym_VariableStar(tom_match28_2_1) ||  false ) {  TomName tom_match28_2_1_2 = null;  TomType tom_match28_2_1_3 = null; tom_match28_2_1_2 = ( TomName) tom_get_slot_VariableStar_astName(tom_match28_2_1); tom_match28_2_1_3 = ( TomType) tom_get_slot_VariableStar_astType(tom_match28_2_1); varName = ( TomName) tom_match28_2_1_2; if(tom_is_fun_sym_Type(tom_match28_2_1_3) ||  false ) { type = ( TomType) tom_match28_2_1_3; tail = ( TomList) tom_match28_2_2; if(tom_terms_equal_TomName(varName, tom_renamedvar_varName_1) &&  true ) {
  return type;  } } } }}_match28_pattern4: {  TomList tail = null;  TomTerm t = null; if(tom_is_fun_sym_manyTomList(tom_match28_2) ||  false ) {  TomTerm tom_match28_2_1 = null;  TomList tom_match28_2_2 = null; tom_match28_2_1 = ( TomTerm) tom_get_slot_manyTomList_head(tom_match28_2); tom_match28_2_2 = ( TomList) tom_get_slot_manyTomList_tail(tom_match28_2); t = ( TomTerm) tom_match28_2_1; tail = ( TomList) tom_match28_2_2;
  return getTypeFromVariableList(name,tail);  }} }

 
    return null;
  }
 
} // Class TomExpander


  

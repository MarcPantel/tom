/* Generated by TOM (version 2.4alpha): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2006, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine.compiler;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;

import tom.engine.TomBase;
import tom.engine.exception.TomRuntimeException;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.tools.SymbolTable;
import tom.engine.tools.ASTFactory;
import aterm.ATerm;

import tom.library.strategy.mutraveler.MuTraveler;
import tom.library.strategy.mutraveler.Identity;
import jjtraveler.reflective.VisitableVisitor;
import jjtraveler.VisitFailure;


public class TomKernelExpander extends TomBase {

  /* Generated by TOM (version 2.4alpha): Do not edit this file */private static boolean tom_terms_equal_Strategy(Object t1, Object t2) {  return t1.equals(t2) ;}private static  jjtraveler.reflective.VisitableVisitor  tom_make_mu( jjtraveler.reflective.VisitableVisitor  var,  jjtraveler.reflective.VisitableVisitor  v) { return  tom.library.strategy.mutraveler.MuTraveler.mu(var,v) ; }/* Generated by TOM (version 2.4alpha): Do not edit this file */private static  jjtraveler.reflective.VisitableVisitor  tom_make_Identity() { return  new tom.library.strategy.mutraveler.Identity() ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_All( jjtraveler.reflective.VisitableVisitor  v) { return  new tom.library.strategy.mutraveler.All(v) ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_MuVar( String  name) { return  new tom.library.strategy.mutraveler.MuVar(name) ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_ChoiceId( jjtraveler.reflective.VisitableVisitor  first,  jjtraveler.reflective.VisitableVisitor  then) { return  new tom.library.strategy.mutraveler.ChoiceId(first,then) ; }   private static  jjtraveler.reflective.VisitableVisitor  tom_make_ChoiceTopDown( jjtraveler.reflective.VisitableVisitor  v) { return tom_make_mu(tom_make_MuVar("x"),tom_make_ChoiceId(v,tom_make_All(tom_make_MuVar("x"))))






 ; }


  private SymbolTable symbolTable;

  public TomKernelExpander() {
    super();
  }

  public void setSymbolTable(SymbolTable symbolTable) {
    this.symbolTable = symbolTable;
  }

  private SymbolTable getSymbolTable() {
    return symbolTable;
  }

  protected TomSymbol getSymbolFromName(String tomName) {
    return getSymbolFromName(tomName, getSymbolTable());
  }

  protected TomSymbol getSymbolFromType(TomType tomType) {
    return getSymbolFromType(tomType, getSymbolTable());
  }
  // ------------------------------------------------------------
  /* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file */ private static boolean tom_terms_equal_String( String  t1,  String  t2) {  return  (t1.equals(t2))  ;}  /* Generated by TOM (version 2.4alpha): Do not edit this file */private static boolean tom_terms_equal_int( int  t1,  int  t2) {  return  (t1==t2)  ;} /* Generated by TOM (version 2.4alpha): Do not edit this file */ /* Generated by TOM (version 2.4alpha): Do not edit this file */ /* Generated by TOM (version 2.4alpha): Do not edit this file */ private static boolean tom_terms_equal_Instruction(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_InstructionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomTypeList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomType(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomVisit(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomRule(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Position(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomSymbol(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TargetLanguage(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomNameList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_PatternInstructionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomTerm(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Pattern(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Option(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_OptionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Constraint(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ConstraintList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Slot(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_PairNameDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SlotList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_fun_sym_EqualityCondition( tom.engine.adt.tominstruction.types.Instruction  t) {  return  (t!=null) && t.isEqualityCondition()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualityCondition_Lhs( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getLhs()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualityCondition_Rhs( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getRhs()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_TypedEqualityCondition( tom.engine.adt.tomtype.types.TomType  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return  tom.engine.adt.tominstruction.types.instruction.TypedEqualityCondition.make(t0, t1, t2); }private static boolean tom_is_fun_sym_MatchingCondition( tom.engine.adt.tominstruction.types.Instruction  t) {  return  (t!=null) && t.isMatchingCondition()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_MatchingCondition( tom.engine.adt.tomterm.types.TomTerm  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tominstruction.types.instruction.MatchingCondition.make(t0, t1); }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MatchingCondition_Lhs( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getLhs()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MatchingCondition_Rhs( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getRhs()  ;}private static boolean tom_is_fun_sym_Match( tom.engine.adt.tominstruction.types.Instruction  t) {  return  (t!=null) && t.isMatch()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_Match( tom.engine.adt.tomterm.types.TomTerm  t0,  tom.engine.adt.tomterm.types.PatternInstructionList  t1,  tom.engine.adt.tomoption.types.OptionList  t2) { return  tom.engine.adt.tominstruction.types.instruction.Match.make(t0, t1, t2); }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Match_SubjectList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSubjectList()  ;}private static  tom.engine.adt.tomterm.types.PatternInstructionList  tom_get_slot_Match_AstPatternInstructionList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstPatternInstructionList()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Match_Option( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getOption()  ;}private static boolean tom_is_fun_sym_TypesToType( tom.engine.adt.tomtype.types.TomType  t) {  return  (t!=null) && t.isTypesToType()  ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_get_slot_TypesToType_Domain( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getDomain()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_TypesToType_Codomain( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getCodomain()  ;}private static boolean tom_is_fun_sym_TomTypeAlone( tom.engine.adt.tomtype.types.TomType  t) {  return  (t!=null) && t.isTomTypeAlone()  ;}private static  String  tom_get_slot_TomTypeAlone_String( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_Type( tom.engine.adt.tomtype.types.TomType  t) {  return  (t!=null) && t.isType()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TomType( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTomType()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TlType( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTlType()  ;}private static boolean tom_is_fun_sym_VisitTerm( tom.engine.adt.tomsignature.types.TomVisit  t) {  return  (t!=null) && t.isVisitTerm()  ;}private static  tom.engine.adt.tomsignature.types.TomVisit  tom_make_VisitTerm( tom.engine.adt.tomtype.types.TomType  t0,  tom.engine.adt.tomterm.types.PatternInstructionList  t1,  tom.engine.adt.tomoption.types.OptionList  t2) { return  tom.engine.adt.tomsignature.types.tomvisit.VisitTerm.make(t0, t1, t2); }private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VisitTerm_VNode( tom.engine.adt.tomsignature.types.TomVisit  t) {  return  t.getVNode()  ;}private static  tom.engine.adt.tomterm.types.PatternInstructionList  tom_get_slot_VisitTerm_AstPatternInstructionList( tom.engine.adt.tomsignature.types.TomVisit  t) {  return  t.getAstPatternInstructionList()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VisitTerm_Option( tom.engine.adt.tomsignature.types.TomVisit  t) {  return  t.getOption()  ;}private static boolean tom_is_fun_sym_RewriteRule( tom.engine.adt.tomsignature.types.TomRule  t) {  return  (t!=null) && t.isRewriteRule()  ;}private static  tom.engine.adt.tomsignature.types.TomRule  tom_make_RewriteRule( tom.engine.adt.tomterm.types.TomTerm  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tominstruction.types.InstructionList  t2,  tom.engine.adt.tomoption.types.OptionList  t3) { return  tom.engine.adt.tomsignature.types.tomrule.RewriteRule.make(t0, t1, t2, t3); }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_RewriteRule_Lhs( tom.engine.adt.tomsignature.types.TomRule  t) {  return  t.getLhs()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_RewriteRule_Rhs( tom.engine.adt.tomsignature.types.TomRule  t) {  return  t.getRhs()  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slot_RewriteRule_CondList( tom.engine.adt.tomsignature.types.TomRule  t) {  return  t.getCondList()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RewriteRule_Option( tom.engine.adt.tomsignature.types.TomRule  t) {  return  t.getOption()  ;}private static boolean tom_is_fun_sym_emptySymbol( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  (t!=null) && t.isemptySymbol()  ;}private static  tom.engine.adt.tomsignature.types.TomSymbol  tom_make_emptySymbol() { return  tom.engine.adt.tomsignature.types.tomsymbol.emptySymbol.make(); }private static boolean tom_is_fun_sym_Symbol( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  (t!=null) && t.isSymbol()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Symbol_AstName( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Symbol_TypesToType( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getTypesToType()  ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_slot_Symbol_PairNameDeclList( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getPairNameDeclList()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Symbol_Option( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getOption()  ;}private static boolean tom_is_fun_sym_TL( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  (t!=null) && t.isTL()  ;}private static  String  tom_get_slot_TL_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getCode()  ;}private static  tom.engine.adt.tomsignature.types.Position  tom_get_slot_TL_Start( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getStart()  ;}private static  tom.engine.adt.tomsignature.types.Position  tom_get_slot_TL_End( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getEnd()  ;}private static boolean tom_is_fun_sym_ITL( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  (t!=null) && t.isITL()  ;}private static  String  tom_get_slot_ITL_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getCode()  ;}private static boolean tom_is_fun_sym_Comment( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  (t!=null) && t.isComment()  ;}private static  String  tom_get_slot_Comment_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getCode()  ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) {  return  (t!=null) && t.isName()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_make_Name( String  t0) { return  tom.engine.adt.tomname.types.tomname.Name.make(t0); }private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_TLVar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isTLVar()  ;}private static  String  tom_get_slot_TLVar_StrName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getStrName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_TLVar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static boolean tom_is_fun_sym_Term( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isTerm()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_Term( tom.engine.adt.tomterm.types.TomTerm  t0) { return  tom.engine.adt.tomterm.types.tomterm.Term.make(t0); }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Term_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTomTerm()  ;}private static boolean tom_is_fun_sym_SubjectList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isSubjectList()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_SubjectList_TomList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTomList()  ;}private static boolean tom_is_fun_sym_Tom( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isTom()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Tom_TomList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTomList()  ;}private static boolean tom_is_fun_sym_TomTypeToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isTomTypeToTomTerm()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_TomTypeToTomTerm( tom.engine.adt.tomtype.types.TomType  t0) { return  tom.engine.adt.tomterm.types.tomterm.TomTypeToTomTerm.make(t0); }private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_TomTypeToTomTerm_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_emptyTerm() { return  tom.engine.adt.tomterm.types.tomterm.emptyTerm.make(); }private static boolean tom_is_fun_sym_UnamedVariableStar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isUnamedVariableStar()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_UnamedVariableStar( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomtype.types.TomType  t1,  tom.engine.adt.tomconstraint.types.ConstraintList  t2) { return  tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar.make(t0, t1, t2); }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_UnamedVariable( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomtype.types.TomType  t1,  tom.engine.adt.tomconstraint.types.ConstraintList  t2) { return  tom.engine.adt.tomterm.types.tomterm.UnamedVariable.make(t0, t1, t2); }private static boolean tom_is_fun_sym_Placeholder( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isPlaceholder()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Placeholder_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Placeholder_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isVariableStar()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_VariableStar( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomName  t1,  tom.engine.adt.tomtype.types.TomType  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.VariableStar.make(t0, t1, t2, t3); }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_VariableStar_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_VariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isVariable()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_Variable( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomName  t1,  tom.engine.adt.tomtype.types.TomType  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.Variable.make(t0, t1, t2, t3); }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isRecordAppl()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_RecordAppl( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomNameList  t1,  tom.engine.adt.tomslot.types.SlotList  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(t0, t1, t2, t3); }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getNameList()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getSlots()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_Pattern( tom.engine.adt.tomterm.types.Pattern  t) {  return  (t!=null) && t.isPattern()  ;}private static  tom.engine.adt.tomterm.types.Pattern  tom_make_Pattern( tom.engine.adt.tomterm.types.TomList  t0,  tom.engine.adt.tomterm.types.TomList  t1,  tom.engine.adt.tomterm.types.TomList  t2) { return  tom.engine.adt.tomterm.types.pattern.Pattern.make(t0, t1, t2); }private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_SubjectList( tom.engine.adt.tomterm.types.Pattern  t) {  return  t.getSubjectList()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_TomList( tom.engine.adt.tomterm.types.Pattern  t) {  return  t.getTomList()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_Guards( tom.engine.adt.tomterm.types.Pattern  t) {  return  t.getGuards()  ;}private static boolean tom_is_fun_sym_OriginTracking( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isOriginTracking()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_OriginTracking_AstName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getAstName()  ;}private static  int  tom_get_slot_OriginTracking_Line( tom.engine.adt.tomoption.types.Option  t) {  return  t.getLine()  ;}private static  String  tom_get_slot_OriginTracking_FileName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getFileName()  ;}private static boolean tom_is_fun_sym_PairSlotAppl( tom.engine.adt.tomslot.types.Slot  t) {  return  (t!=null) && t.isPairSlotAppl()  ;}private static  tom.engine.adt.tomslot.types.Slot  tom_make_PairSlotAppl( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(t0, t1); }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_PairSlotAppl_SlotName( tom.engine.adt.tomslot.types.Slot  t) {  return  t.getSlotName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_PairSlotAppl_Appl( tom.engine.adt.tomslot.types.Slot  t) {  return  t.getAppl()  ;}private static boolean tom_is_fun_sym_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction || t instanceof tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_empty_list_concInstruction() { return  tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction.make() ; }private static  tom.engine.adt.tominstruction.types.InstructionList  tom_cons_list_concInstruction( tom.engine.adt.tominstruction.types.Instruction  e,  tom.engine.adt.tominstruction.types.InstructionList  l) { return  tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction.make(e,l) ; }private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_head_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.getHeadconcInstruction()  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_tail_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.getTailconcInstruction()  ;}private static boolean tom_is_empty_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.isEmptyconcInstruction()  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_append_list_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  l1,  tom.engine.adt.tominstruction.types.InstructionList  l2) {    if(tom_is_empty_concInstruction_InstructionList(l1)) {     return l2;    } else if(tom_is_empty_concInstruction_InstructionList(l2)) {     return l1;    } else if(tom_is_empty_concInstruction_InstructionList(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(l1))) {     return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(l1),l2);    } else {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(l1),tom_append_list_concInstruction(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(l1),l2));    }   }  private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slice_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  begin,  tom.engine.adt.tominstruction.types.InstructionList  end) {    if(tom_terms_equal_InstructionList(begin,end)) {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_empty_list_concInstruction();    } else {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(begin),( tom.engine.adt.tominstruction.types.InstructionList )tom_get_slice_concInstruction(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomname.types.TomNameList  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName || t instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_empty_list_concTomName() { return  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ; }private static  tom.engine.adt.tomname.types.TomNameList  tom_cons_list_concTomName( tom.engine.adt.tomname.types.TomName  e,  tom.engine.adt.tomname.types.TomNameList  l) { return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_head_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.getHeadconcTomName()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_tail_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.getTailconcTomName()  ;}private static boolean tom_is_empty_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.isEmptyconcTomName()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList  l1,  tom.engine.adt.tomname.types.TomNameList  l2) {    if(tom_is_empty_concTomName_TomNameList(l1)) {     return l2;    } else if(tom_is_empty_concTomName_TomNameList(l2)) {     return l1;    } else if(tom_is_empty_concTomName_TomNameList(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(l1))) {     return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(l1),l2);    } else {      return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(l1),tom_append_list_concTomName(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(l1),l2));    }   }  private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end) {    if(tom_terms_equal_TomNameList(begin,end)) {      return ( tom.engine.adt.tomname.types.TomNameList )tom_empty_list_concTomName();    } else {      return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(begin),( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomTerm( tom.engine.adt.tomterm.types.TomList  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm || t instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_empty_list_concTomTerm() { return  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ; }private static  tom.engine.adt.tomterm.types.TomList  tom_cons_list_concTomTerm( tom.engine.adt.tomterm.types.TomTerm  e,  tom.engine.adt.tomterm.types.TomList  l) { return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(e,l) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_head_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.getHeadconcTomTerm()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_tail_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.getTailconcTomTerm()  ;}private static boolean tom_is_empty_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.isEmptyconcTomTerm()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList  l1,  tom.engine.adt.tomterm.types.TomList  l2) {    if(tom_is_empty_concTomTerm_TomList(l1)) {     return l2;    } else if(tom_is_empty_concTomTerm_TomList(l2)) {     return l1;    } else if(tom_is_empty_concTomTerm_TomList(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(l1))) {     return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(l1),l2);    } else {      return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(l1),tom_append_list_concTomTerm(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(l1),l2));    }   }  private static  tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end) {    if(tom_terms_equal_TomList(begin,end)) {      return ( tom.engine.adt.tomterm.types.TomList )tom_empty_list_concTomTerm();    } else {      return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(begin),( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(begin),end));    }   }  private static  tom.engine.adt.tomoption.types.OptionList  tom_empty_list_concOption() { return  tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_cons_list_concOption( tom.engine.adt.tomoption.types.Option  e,  tom.engine.adt.tomoption.types.OptionList  l) { return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make(e,l) ; }private static  tom.engine.adt.tomoption.types.Option  tom_get_head_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.getHeadconcOption()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_tail_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.getTailconcOption()  ;}private static boolean tom_is_empty_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.isEmptyconcOption()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList  l1,  tom.engine.adt.tomoption.types.OptionList  l2) {    if(tom_is_empty_concOption_OptionList(l1)) {     return l2;    } else if(tom_is_empty_concOption_OptionList(l2)) {     return l1;    } else if(tom_is_empty_concOption_OptionList(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(l1))) {     return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(l1),l2);    } else {      return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(l1),tom_append_list_concOption(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(l1),l2));    }   }  private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end) {    if(tom_terms_equal_OptionList(begin,end)) {      return ( tom.engine.adt.tomoption.types.OptionList )tom_empty_list_concOption();    } else {      return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(begin),( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(begin),end));    }   }  private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_empty_list_concConstraint() { return  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ; }private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_cons_list_concConstraint( tom.engine.adt.tomconstraint.types.Constraint  e,  tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make(e,l) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_head_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.getHeadconcConstraint()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_tail_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.getTailconcConstraint()  ;}private static boolean tom_is_empty_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.isEmptyconcConstraint()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {    if(tom_is_empty_concConstraint_ConstraintList(l1)) {     return l2;    } else if(tom_is_empty_concConstraint_ConstraintList(l2)) {     return l1;    } else if(tom_is_empty_concConstraint_ConstraintList(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(l1))) {     return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(l1),l2);    } else {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(l1),tom_append_list_concConstraint(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(l1),l2));    }   }  private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end) {    if(tom_terms_equal_ConstraintList(begin,end)) {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_empty_list_concConstraint();    } else {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(begin),( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSlot( tom.engine.adt.tomslot.types.SlotList  t) {  return  t instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot || t instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_empty_list_concSlot() { return  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ; }private static  tom.engine.adt.tomslot.types.SlotList  tom_cons_list_concSlot( tom.engine.adt.tomslot.types.Slot  e,  tom.engine.adt.tomslot.types.SlotList  l) { return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.engine.adt.tomslot.types.Slot  tom_get_head_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.getHeadconcSlot()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_tail_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.getTailconcSlot()  ;}private static boolean tom_is_empty_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.isEmptyconcSlot()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList  l1,  tom.engine.adt.tomslot.types.SlotList  l2) {    if(tom_is_empty_concSlot_SlotList(l1)) {     return l2;    } else if(tom_is_empty_concSlot_SlotList(l2)) {     return l1;    } else if(tom_is_empty_concSlot_SlotList(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(l1))) {     return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(l1),l2);    } else {      return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(l1),l2));    }   }  private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end) {    if(tom_terms_equal_SlotList(begin,end)) {      return ( tom.engine.adt.tomslot.types.SlotList )tom_empty_list_concSlot();    } else {      return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(begin),( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(begin),end));    }   }   
  // ------------------------------------------------------------

  /*
   * The "expandVariable" phase expands RecordAppl into Variable
   * we focus on
   * - RewriteRule
   * - MatchingCondition
   * - EqualityCondition
   * - Match
   *
   * Variable and TermAppl are are expanded in the TomTerm case
   */

   private static class replace_expandVariable  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  tom.engine.adt.tomterm.types.TomTerm  contextSubject;  private  TomKernelExpander  expander;  public replace_expandVariable(  tom.engine.adt.tomterm.types.TomTerm  contextSubject ,   TomKernelExpander  expander ) { super(tom_make_Identity() ); this.contextSubject=contextSubject; this.expander=expander; } public  tom.engine.adt.tomterm.types.TomTerm  getcontextSubject() { return contextSubject;} public  TomKernelExpander  getexpander() { return expander;} public  tom.engine.adt.tomoption.types.Option  visit_Option(  tom.engine.adt.tomoption.types.Option  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomoption.types.Option ) { { tom.engine.adt.tomoption.types.Option  tom_match1_1=(( tom.engine.adt.tomoption.types.Option )tom__arg); if (tom_is_fun_sym_OriginTracking(tom_match1_1) ||  false ) { { tom.engine.adt.tomoption.types.Option  tom_subject=tom_match1_1; if ( true ) {


 return tom_subject;  } } } } } return super.visit_Option(tom__arg) ;  } public  tom.engine.adt.tomsignature.types.TargetLanguage  visit_TargetLanguage(  tom.engine.adt.tomsignature.types.TargetLanguage  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomsignature.types.TargetLanguage ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tom_match2_1=(( tom.engine.adt.tomsignature.types.TargetLanguage )tom__arg); if (tom_is_fun_sym_TL(tom_match2_1) ||  false ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tom_subject=tom_match2_1; if ( true ) {



 return tom_subject;  } } } if (tom_is_fun_sym_ITL(tom_match2_1) ||  false ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tom_subject=tom_match2_1; if ( true ) {
 return tom_subject;  } } } if (tom_is_fun_sym_Comment(tom_match2_1) ||  false ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tom_subject=tom_match2_1; if ( true ) {
 return tom_subject;  } } } } } return super.visit_TargetLanguage(tom__arg) ;  } public  tom.engine.adt.tomtype.types.TomType  visit_TomType(  tom.engine.adt.tomtype.types.TomType  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomtype.types.TomType ) { { tom.engine.adt.tomtype.types.TomType  tom_match3_1=(( tom.engine.adt.tomtype.types.TomType )tom__arg); if (tom_is_fun_sym_TomTypeAlone(tom_match3_1) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_subject=tom_match3_1; { String  tom_match3_1_String=tom_get_slot_TomTypeAlone_String(tom_match3_1); { String  tom_tomType=tom_match3_1_String; if ( true ) {




        TomType type = expander.getType(tom_tomType);
        if(type != null) {
          return type;
        } else {
          return tom_subject; // useful for TomTypeAlone("unknown type")
        }
       } } } } } } } return super.visit_TomType(tom__arg) ;  } public  tom.engine.adt.tomsignature.types.TomRule  visit_TomRule(  tom.engine.adt.tomsignature.types.TomRule  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomsignature.types.TomRule ) { { tom.engine.adt.tomsignature.types.TomRule  tom_match4_1=(( tom.engine.adt.tomsignature.types.TomRule )tom__arg); if (tom_is_fun_sym_RewriteRule(tom_match4_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match4_1_Lhs=tom_get_slot_RewriteRule_Lhs(tom_match4_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match4_1_Rhs=tom_get_slot_RewriteRule_Rhs(tom_match4_1); { tom.engine.adt.tominstruction.types.InstructionList  tom_match4_1_CondList=tom_get_slot_RewriteRule_CondList(tom_match4_1); { tom.engine.adt.tomoption.types.OptionList  tom_match4_1_Option=tom_get_slot_RewriteRule_Option(tom_match4_1); if (tom_is_fun_sym_Term(tom_match4_1_Lhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match4_1_Lhs_TomTerm=tom_get_slot_Term_TomTerm(tom_match4_1_Lhs); if (tom_is_fun_sym_RecordAppl(tom_match4_1_Lhs_TomTerm) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_lhs=tom_match4_1_Lhs_TomTerm; { tom.engine.adt.tomname.types.TomNameList  tom_match4_1_Lhs_TomTerm_NameList=tom_get_slot_RecordAppl_NameList(tom_match4_1_Lhs_TomTerm); if (tom_is_fun_sym_concTomName(tom_match4_1_Lhs_TomTerm_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match4_1_Lhs_TomTerm_NameList_list1=tom_match4_1_Lhs_TomTerm_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match4_1_Lhs_TomTerm_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match4_1_Lhs_TomTerm_NameList_1=tom_get_head_concTomName_TomNameList(tom_match4_1_Lhs_TomTerm_NameList_list1);tom_match4_1_Lhs_TomTerm_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match4_1_Lhs_TomTerm_NameList_list1); if (tom_is_fun_sym_Name(tom_match4_1_Lhs_TomTerm_NameList_1) ||  false ) { { String  tom_match4_1_Lhs_TomTerm_NameList_1_String=tom_get_slot_Name_String(tom_match4_1_Lhs_TomTerm_NameList_1); { String  tom_tomName=tom_match4_1_Lhs_TomTerm_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match4_1_Lhs_TomTerm_NameList_list1)) { if (tom_is_fun_sym_Term(tom_match4_1_Rhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match4_1_Rhs_TomTerm=tom_get_slot_Term_TomTerm(tom_match4_1_Rhs); { tom.engine.adt.tomterm.types.TomTerm  tom_rhs=tom_match4_1_Rhs_TomTerm; { tom.engine.adt.tominstruction.types.InstructionList  tom_condList=tom_match4_1_CondList; { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match4_1_Option; if ( true ) {







        TomSymbol tomSymbol = expander.getSymbolFromName(tom_tomName);
        TomType symbolType = getSymbolCodomain(tomSymbol);
        TomTerm newLhs = tom_make_Term((TomTerm)expander.expandVariable(contextSubject,tom_lhs));
        // build the list of variables that occur in the lhs
        HashSet set = new HashSet();
        collectVariable(set,newLhs);
        TomList varList = ASTFactory.makeList(set);
        InstructionList newCondList = tom_empty_list_concInstruction();
        while(!tom_condList.isEmptyconcInstruction()) {
          Instruction cond = tom_condList.getHeadconcInstruction();

          Instruction newCond = (Instruction)expander.replaceInstantiatedVariable(varList,cond);
          newCond = (Instruction) expander.expandVariable(contextSubject,newCond);

          newCondList = tom_cons_list_concInstruction(newCond,tom_append_list_concInstruction(newCondList,tom_empty_list_concInstruction()));
          collectVariable(set,newCond);
          varList = ASTFactory.makeList(set);
          tom_condList= tom_condList.getTailconcInstruction();
        }

        TomTerm newRhs = (TomTerm)expander.replaceInstantiatedVariable(varList,tom_rhs);
        newRhs = tom_make_Term((TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(symbolType),newRhs));

        return tom_make_RewriteRule(newLhs,newRhs,newCondList,tom_option);
       } } } } } } } } } } } } } } } } } } } } } } } } } } return super.visit_TomRule(tom__arg) ;  } public  tom.engine.adt.tomsignature.types.TomVisit  visit_TomVisit(  tom.engine.adt.tomsignature.types.TomVisit  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomsignature.types.TomVisit ) { { tom.engine.adt.tomsignature.types.TomVisit  tom_match5_1=(( tom.engine.adt.tomsignature.types.TomVisit )tom__arg); if (tom_is_fun_sym_VisitTerm(tom_match5_1) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_match5_1_VNode=tom_get_slot_VisitTerm_VNode(tom_match5_1); { tom.engine.adt.tomterm.types.PatternInstructionList  tom_match5_1_AstPatternInstructionList=tom_get_slot_VisitTerm_AstPatternInstructionList(tom_match5_1); { tom.engine.adt.tomoption.types.OptionList  tom_match5_1_Option=tom_get_slot_VisitTerm_Option(tom_match5_1); { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match5_1_VNode; { tom.engine.adt.tomterm.types.PatternInstructionList  tom_patternInstructionList=tom_match5_1_AstPatternInstructionList; { tom.engine.adt.tomoption.types.OptionList  tom_options=tom_match5_1_Option; if ( true ) {




        TomType newType = (TomType)expander.expandVariable(contextSubject,tom_type);
        PatternInstructionList newPatternInstructionList = (PatternInstructionList)expander.expandVariable(tom_make_TomTypeToTomTerm(newType),tom_patternInstructionList);
        return tom_make_VisitTerm(newType,newPatternInstructionList,tom_options);
       } } } } } } } } } } return super.visit_TomVisit(tom__arg) ;  } public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction(  tom.engine.adt.tominstruction.types.Instruction  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tominstruction.types.Instruction ) { { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg); if (tom_is_fun_sym_MatchingCondition(tom_match6_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Lhs=tom_get_slot_MatchingCondition_Lhs(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Rhs=tom_get_slot_MatchingCondition_Rhs(tom_match6_1); if (tom_is_fun_sym_Variable(tom_match6_1_Lhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_lhs=tom_match6_1_Lhs; { tom.engine.adt.tomname.types.TomName  tom_match6_1_Lhs_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Lhs); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Lhs_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Lhs); if (tom_is_fun_sym_Name(tom_match6_1_Lhs_AstName) ||  false ) { { String  tom_match6_1_Lhs_AstName_String=tom_get_slot_Name_String(tom_match6_1_Lhs_AstName); if (tom_is_fun_sym_Variable(tom_match6_1_Rhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_rhs=tom_match6_1_Rhs; { tom.engine.adt.tomname.types.TomName  tom_match6_1_Rhs_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Rhs); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Rhs_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Rhs); if (tom_is_fun_sym_Name(tom_match6_1_Rhs_AstName) ||  false ) { { String  tom_match6_1_Rhs_AstName_String=tom_get_slot_Name_String(tom_match6_1_Rhs_AstName); { tom.engine.adt.tomtype.types.TomType  tom_rhsType=tom_match6_1_Rhs_AstType; if ( true ) {




          TomTerm newLhs = (TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(tom_rhsType),tom_lhs);
          return tom_make_MatchingCondition(newLhs,tom_rhs);
         } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_MatchingCondition(tom_match6_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Lhs=tom_get_slot_MatchingCondition_Lhs(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Rhs=tom_get_slot_MatchingCondition_Rhs(tom_match6_1); if (tom_is_fun_sym_RecordAppl(tom_match6_1_Lhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_lhs=tom_match6_1_Lhs; { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Lhs_NameList=tom_get_slot_RecordAppl_NameList(tom_match6_1_Lhs); if (tom_is_fun_sym_concTomName(tom_match6_1_Lhs_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Lhs_NameList_list1=tom_match6_1_Lhs_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Lhs_NameList_1=tom_get_head_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1);tom_match6_1_Lhs_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1); if (tom_is_fun_sym_Name(tom_match6_1_Lhs_NameList_1) ||  false ) { { String  tom_match6_1_Lhs_NameList_1_String=tom_get_slot_Name_String(tom_match6_1_Lhs_NameList_1); { String  tom_lhsName=tom_match6_1_Lhs_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1)) { if (tom_is_fun_sym_Variable(tom_match6_1_Rhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_rhs=tom_match6_1_Rhs; { tom.engine.adt.tomname.types.TomName  tom_match6_1_Rhs_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Rhs); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Rhs_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Rhs); if (tom_is_fun_sym_Name(tom_match6_1_Rhs_AstName) ||  false ) { { String  tom_match6_1_Rhs_AstName_String=tom_get_slot_Name_String(tom_match6_1_Rhs_AstName); { tom.engine.adt.tomtype.types.TomType  tom_rhsType=tom_match6_1_Rhs_AstType; if ( true ) {



          TomSymbol lhsSymbol = expander.getSymbolFromName(tom_lhsName);
          TomType type;
          if(lhsSymbol != null) {
            type = getSymbolCodomain(lhsSymbol);
          } else {
            throw new TomRuntimeException("lhs has an unknown sort: " + tom_lhsName);
          }

          TomTerm newLhs = (TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(type),tom_lhs);
          TomTerm newRhs = (TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(type),tom_rhs);
          return tom_make_MatchingCondition(newLhs,newRhs);
         } } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_MatchingCondition(tom_match6_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Lhs=tom_get_slot_MatchingCondition_Lhs(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Rhs=tom_get_slot_MatchingCondition_Rhs(tom_match6_1); if (tom_is_fun_sym_Variable(tom_match6_1_Lhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_lhs=tom_match6_1_Lhs; { tom.engine.adt.tomname.types.TomName  tom_match6_1_Lhs_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Lhs); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Lhs_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Lhs); if (tom_is_fun_sym_Name(tom_match6_1_Lhs_AstName) ||  false ) { { String  tom_match6_1_Lhs_AstName_String=tom_get_slot_Name_String(tom_match6_1_Lhs_AstName); { tom.engine.adt.tomtype.types.TomType  tom_lhsType=tom_match6_1_Lhs_AstType; if (tom_is_fun_sym_RecordAppl(tom_match6_1_Rhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_rhs=tom_match6_1_Rhs; { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Rhs_NameList=tom_get_slot_RecordAppl_NameList(tom_match6_1_Rhs); if (tom_is_fun_sym_concTomName(tom_match6_1_Rhs_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Rhs_NameList_list1=tom_match6_1_Rhs_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Rhs_NameList_1=tom_get_head_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1);tom_match6_1_Rhs_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1); if (tom_is_fun_sym_Name(tom_match6_1_Rhs_NameList_1) ||  false ) { { String  tom_match6_1_Rhs_NameList_1_String=tom_get_slot_Name_String(tom_match6_1_Rhs_NameList_1); { String  tom_rhsName=tom_match6_1_Rhs_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1)) { if ( true ) {



          TomSymbol rhsSymbol = expander.getSymbolFromName(tom_rhsName);
          TomType type;
          if(rhsSymbol != null) {
            type = getSymbolCodomain(rhsSymbol);
          } else {
            throw new TomRuntimeException("rhs has an unknown sort: " + tom_rhsName);
          }

          TomTerm newLhs = (TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(type),tom_lhs);
          TomTerm newRhs = (TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(type),tom_rhs);
          return tom_make_MatchingCondition(newLhs,newRhs);
         } } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_MatchingCondition(tom_match6_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Lhs=tom_get_slot_MatchingCondition_Lhs(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Rhs=tom_get_slot_MatchingCondition_Rhs(tom_match6_1); if (tom_is_fun_sym_RecordAppl(tom_match6_1_Lhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_lhs=tom_match6_1_Lhs; { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Lhs_NameList=tom_get_slot_RecordAppl_NameList(tom_match6_1_Lhs); if (tom_is_fun_sym_concTomName(tom_match6_1_Lhs_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Lhs_NameList_list1=tom_match6_1_Lhs_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Lhs_NameList_1=tom_get_head_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1);tom_match6_1_Lhs_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1); if (tom_is_fun_sym_Name(tom_match6_1_Lhs_NameList_1) ||  false ) { { String  tom_match6_1_Lhs_NameList_1_String=tom_get_slot_Name_String(tom_match6_1_Lhs_NameList_1); { String  tom_lhsName=tom_match6_1_Lhs_NameList_1_String; if (tom_is_fun_sym_RecordAppl(tom_match6_1_Rhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_rhs=tom_match6_1_Rhs; { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Rhs_NameList=tom_get_slot_RecordAppl_NameList(tom_match6_1_Rhs); if (tom_is_fun_sym_concTomName(tom_match6_1_Rhs_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Rhs_NameList_list1=tom_match6_1_Rhs_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Rhs_NameList_1=tom_get_head_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1);tom_match6_1_Rhs_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1); if (tom_is_fun_sym_Name(tom_match6_1_Rhs_NameList_1) ||  false ) { { String  tom_match6_1_Rhs_NameList_1_String=tom_get_slot_Name_String(tom_match6_1_Rhs_NameList_1); { String  tom_rhsName=tom_match6_1_Rhs_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1)) { if ( true ) {



          TomSymbol lhsSymbol = expander.getSymbolFromName(tom_lhsName);
          TomSymbol rhsSymbol = expander.getSymbolFromName(tom_rhsName);
          TomType type;
          // rhs is an application
          if(lhsSymbol != null) {
            type = getSymbolCodomain(lhsSymbol);
          } else if(rhsSymbol != null) {
            type = getSymbolCodomain(rhsSymbol);
          } else {
            // lhs is a variable, but rhs has an unknown top symbol
            // since lhs is a fresh variable, we look for rhs type
            throw new TomRuntimeException("rhs has an unknown sort: " + tom_rhsName);
          }

          TomTerm newLhs = (TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(type),tom_lhs);
          TomTerm newRhs = (TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(type),tom_rhs);
          return tom_make_MatchingCondition(newLhs,newRhs);
         } } } } } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_EqualityCondition(tom_match6_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Lhs=tom_get_slot_EqualityCondition_Lhs(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Rhs=tom_get_slot_EqualityCondition_Rhs(tom_match6_1); if (tom_is_fun_sym_Variable(tom_match6_1_Lhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_lhs=tom_match6_1_Lhs; { tom.engine.adt.tomname.types.TomName  tom_match6_1_Lhs_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Lhs); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Lhs_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Lhs); if (tom_is_fun_sym_Name(tom_match6_1_Lhs_AstName) ||  false ) { { String  tom_match6_1_Lhs_AstName_String=tom_get_slot_Name_String(tom_match6_1_Lhs_AstName); { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match6_1_Lhs_AstType; if (tom_is_fun_sym_Variable(tom_match6_1_Rhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_rhs=tom_match6_1_Rhs; { tom.engine.adt.tomname.types.TomName  tom_match6_1_Rhs_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Rhs); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Rhs_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Rhs); if (tom_is_fun_sym_Name(tom_match6_1_Rhs_AstName) ||  false ) { { String  tom_match6_1_Rhs_AstName_String=tom_get_slot_Name_String(tom_match6_1_Rhs_AstName); { tom.engine.adt.tomtype.types.TomType  tom_renamedvar_type_1=tom_match6_1_Rhs_AstType; if (tom_terms_equal_TomType(tom_type, tom_renamedvar_type_1)) { if ( true ) {



          return tom_make_TypedEqualityCondition(tom_type,tom_lhs,tom_rhs);
         } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_EqualityCondition(tom_match6_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Lhs=tom_get_slot_EqualityCondition_Lhs(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Rhs=tom_get_slot_EqualityCondition_Rhs(tom_match6_1); if (tom_is_fun_sym_Variable(tom_match6_1_Lhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_lhs=tom_match6_1_Lhs; { tom.engine.adt.tomname.types.TomName  tom_match6_1_Lhs_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Lhs); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Lhs_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Lhs); if (tom_is_fun_sym_Name(tom_match6_1_Lhs_AstName) ||  false ) { { String  tom_match6_1_Lhs_AstName_String=tom_get_slot_Name_String(tom_match6_1_Lhs_AstName); { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match6_1_Lhs_AstType; if (tom_is_fun_sym_RecordAppl(tom_match6_1_Rhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_rhs=tom_match6_1_Rhs; { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Rhs_NameList=tom_get_slot_RecordAppl_NameList(tom_match6_1_Rhs); if (tom_is_fun_sym_concTomName(tom_match6_1_Rhs_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Rhs_NameList_list1=tom_match6_1_Rhs_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Rhs_NameList_1=tom_get_head_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1);tom_match6_1_Rhs_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1); if (tom_is_fun_sym_Name(tom_match6_1_Rhs_NameList_1) ||  false ) { { String  tom_match6_1_Rhs_NameList_1_String=tom_get_slot_Name_String(tom_match6_1_Rhs_NameList_1); if (tom_is_empty_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1)) { if ( true ) {



          TomTerm newRhs = (TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(tom_type),tom_rhs);
          return tom_make_TypedEqualityCondition(tom_type,tom_lhs,newRhs);
         } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_EqualityCondition(tom_match6_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Lhs=tom_get_slot_EqualityCondition_Lhs(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Rhs=tom_get_slot_EqualityCondition_Rhs(tom_match6_1); if (tom_is_fun_sym_RecordAppl(tom_match6_1_Lhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_lhs=tom_match6_1_Lhs; { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Lhs_NameList=tom_get_slot_RecordAppl_NameList(tom_match6_1_Lhs); if (tom_is_fun_sym_concTomName(tom_match6_1_Lhs_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Lhs_NameList_list1=tom_match6_1_Lhs_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Lhs_NameList_1=tom_get_head_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1);tom_match6_1_Lhs_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1); if (tom_is_fun_sym_Name(tom_match6_1_Lhs_NameList_1) ||  false ) { { String  tom_match6_1_Lhs_NameList_1_String=tom_get_slot_Name_String(tom_match6_1_Lhs_NameList_1); if (tom_is_empty_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1)) { if (tom_is_fun_sym_Variable(tom_match6_1_Rhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_rhs=tom_match6_1_Rhs; { tom.engine.adt.tomname.types.TomName  tom_match6_1_Rhs_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Rhs); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Rhs_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Rhs); if (tom_is_fun_sym_Name(tom_match6_1_Rhs_AstName) ||  false ) { { String  tom_match6_1_Rhs_AstName_String=tom_get_slot_Name_String(tom_match6_1_Rhs_AstName); { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match6_1_Rhs_AstType; if ( true ) {



          TomTerm newLhs = (TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(tom_type),tom_lhs);
          return tom_make_TypedEqualityCondition(tom_type,newLhs,tom_rhs);
         } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_EqualityCondition(tom_match6_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Lhs=tom_get_slot_EqualityCondition_Lhs(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Rhs=tom_get_slot_EqualityCondition_Rhs(tom_match6_1); if (tom_is_fun_sym_RecordAppl(tom_match6_1_Lhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_lhs=tom_match6_1_Lhs; { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Lhs_NameList=tom_get_slot_RecordAppl_NameList(tom_match6_1_Lhs); if (tom_is_fun_sym_concTomName(tom_match6_1_Lhs_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Lhs_NameList_list1=tom_match6_1_Lhs_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Lhs_NameList_1=tom_get_head_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1);tom_match6_1_Lhs_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1); if (tom_is_fun_sym_Name(tom_match6_1_Lhs_NameList_1) ||  false ) { { String  tom_match6_1_Lhs_NameList_1_String=tom_get_slot_Name_String(tom_match6_1_Lhs_NameList_1); { String  tom_lhsName=tom_match6_1_Lhs_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match6_1_Lhs_NameList_list1)) { if (tom_is_fun_sym_RecordAppl(tom_match6_1_Rhs) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_rhs=tom_match6_1_Rhs; { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Rhs_NameList=tom_get_slot_RecordAppl_NameList(tom_match6_1_Rhs); if (tom_is_fun_sym_concTomName(tom_match6_1_Rhs_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match6_1_Rhs_NameList_list1=tom_match6_1_Rhs_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Rhs_NameList_1=tom_get_head_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1);tom_match6_1_Rhs_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1); if (tom_is_fun_sym_Name(tom_match6_1_Rhs_NameList_1) ||  false ) { { String  tom_match6_1_Rhs_NameList_1_String=tom_get_slot_Name_String(tom_match6_1_Rhs_NameList_1); { String  tom_rhsName=tom_match6_1_Rhs_NameList_1_String; if (tom_is_empty_concTomName_TomNameList(tom_match6_1_Rhs_NameList_list1)) { if ( true ) {



          TomSymbol lhsSymbol = expander.getSymbolFromName(tom_lhsName);
          TomSymbol rhsSymbol = expander.getSymbolFromName(tom_rhsName);
          TomType type;

          if(lhsSymbol != null) {
            type = getSymbolCodomain(lhsSymbol);
          } else if(rhsSymbol != null) {
            type = getSymbolCodomain(rhsSymbol);
          } else {
            // lhs and rhs have an unknown top symbol
            throw new TomRuntimeException("lhs and rhs have an unknown sort: " + tom_lhsName+ ",  " + tom_rhsName);
          }

          //System.out.println("EqualityCondition type = " + type);

          TomTerm newLhs = (TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(type),tom_lhs);
          TomTerm newRhs = (TomTerm)expander.expandVariable(tom_make_TomTypeToTomTerm(type),tom_rhs);

          //System.out.println("lhs    = " + lhs);
          //System.out.println("newLhs = " + newLhs);

          return tom_make_TypedEqualityCondition(type,newLhs,newRhs);
         } } } } } } } } } } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_Match(tom_match6_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_SubjectList=tom_get_slot_Match_SubjectList(tom_match6_1); { tom.engine.adt.tomterm.types.PatternInstructionList  tom_match6_1_AstPatternInstructionList=tom_get_slot_Match_AstPatternInstructionList(tom_match6_1); { tom.engine.adt.tomoption.types.OptionList  tom_match6_1_Option=tom_get_slot_Match_Option(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_tomSubjectList=tom_match6_1_SubjectList; { tom.engine.adt.tomterm.types.PatternInstructionList  tom_patternInstructionList=tom_match6_1_AstPatternInstructionList; { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match6_1_Option; if ( true ) {


        //System.out.println("tomSubjectList = " + tomSubjectList);
        TomTerm newSubjectList = (TomTerm)expander.expandVariable(contextSubject,tom_tomSubjectList);
        //System.out.println("newSubjectList = " + newSubjectList);
        PatternInstructionList newPatternInstructionList = (PatternInstructionList)expander.expandVariable(newSubjectList,tom_patternInstructionList);
        return tom_make_Match(newSubjectList,newPatternInstructionList,tom_option);
       } } } } } } } } } } return super.visit_Instruction(tom__arg) ;  } public  tom.engine.adt.tomterm.types.Pattern  visit_Pattern(  tom.engine.adt.tomterm.types.Pattern  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomterm.types.Pattern ) { { tom.engine.adt.tomterm.types.Pattern  tom_match7_1=(( tom.engine.adt.tomterm.types.Pattern )tom__arg); if (tom_is_fun_sym_Pattern(tom_match7_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match7_1_SubjectList=tom_get_slot_Pattern_SubjectList(tom_match7_1); { tom.engine.adt.tomterm.types.TomList  tom_match7_1_TomList=tom_get_slot_Pattern_TomList(tom_match7_1); { tom.engine.adt.tomterm.types.TomList  tom_match7_1_Guards=tom_get_slot_Pattern_Guards(tom_match7_1); { tom.engine.adt.tomterm.types.TomList  tom_subjectList=tom_match7_1_SubjectList; { tom.engine.adt.tomterm.types.TomList  tom_termList=tom_match7_1_TomList; { tom.engine.adt.tomterm.types.TomList  tom_guardList=tom_match7_1_Guards; if ( true ) { if(contextSubject instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_1=(( tom.engine.adt.tomterm.types.TomTerm )contextSubject); if (tom_is_fun_sym_SubjectList(tom_match8_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match8_1_TomList=tom_get_slot_SubjectList_TomList(tom_match8_1); { tom.engine.adt.tomterm.types.TomList  tom_l1=tom_match8_1_TomList; if ( true ) {






            //System.out.println("expandVariable.9: "+l1+"(" + termList + ")");

            // process a list of subterms
            ArrayList list = new ArrayList();
            while(!tom_termList.isEmptyconcTomTerm()) {
              list.add((TomTerm)expander.expandVariable(tom_l1.getHeadconcTomTerm(), tom_termList.getHeadconcTomTerm()));
              tom_termList= tom_termList.getTailconcTomTerm();
              tom_l1= tom_l1.getTailconcTomTerm();
            }
            TomList newTermList = ASTFactory.makeList(list);

            // process a list of guards
            list.clear();
            // build the list of variables that occur in the lhs
            HashSet set = new HashSet();
            collectVariable(set,newTermList);
            TomList varList = ASTFactory.makeList(set);
            //System.out.println("varList = " + varList);
            while(!tom_guardList.isEmptyconcTomTerm()) {
              list.add((TomTerm)expander.replaceInstantiatedVariable(varList, tom_guardList.getHeadconcTomTerm()));
              tom_guardList= tom_guardList.getTailconcTomTerm();
            }
            TomList newGuardList = ASTFactory.makeList(list);
            //System.out.println("newGuardList = " + newGuardList);
            return tom_make_Pattern(tom_subjectList,newTermList,newGuardList);
           } } } } } }

       } } } } } } } } } } return super.visit_Pattern(tom__arg) ;  } public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match9_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); if (tom_is_fun_sym_RecordAppl(tom_match9_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match9_1_Option=tom_get_slot_RecordAppl_Option(tom_match9_1); { tom.engine.adt.tomname.types.TomNameList  tom_match9_1_NameList=tom_get_slot_RecordAppl_NameList(tom_match9_1); { tom.engine.adt.tomslot.types.SlotList  tom_match9_1_Slots=tom_get_slot_RecordAppl_Slots(tom_match9_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match9_1_Constraints=tom_get_slot_RecordAppl_Constraints(tom_match9_1); { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match9_1_Option; if (tom_is_fun_sym_concTomName(tom_match9_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_nameList=tom_match9_1_NameList; { tom.engine.adt.tomname.types.TomNameList  tom_match9_1_NameList_list1=tom_match9_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match9_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match9_1_NameList_1=tom_get_head_concTomName_TomNameList(tom_match9_1_NameList_list1);tom_match9_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match9_1_NameList_list1); if (tom_is_fun_sym_Name(tom_match9_1_NameList_1) ||  false ) { { String  tom_match9_1_NameList_1_String=tom_get_slot_Name_String(tom_match9_1_NameList_1); { String  tom_tomName=tom_match9_1_NameList_1_String; { tom.engine.adt.tomslot.types.SlotList  tom_slotList=tom_match9_1_Slots; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tom_match9_1_Constraints; if ( true ) {



        TomSymbol tomSymbol = null;
        if(tom_tomName.equals("")) {
          try {
            tomSymbol = expander.getSymbolFromType(contextSubject.getAstType());
            if(tomSymbol==null) {
              throw new TomRuntimeException("No symbol found for type '" + contextSubject.getAstType() + "'");
            }
            tom_nameList= tom_cons_list_concTomName(tomSymbol.getAstName(),tom_empty_list_concTomName());
          } catch(UnsupportedOperationException e) {
            // contextSubject has no AstType slot
            tomSymbol = null;
          }
        } else {
          tomSymbol = expander.getSymbolFromName(tom_tomName);
        }

        if(tomSymbol != null) {
          SlotList subterm = expander.expandVariableList(tomSymbol, tom_slotList);
          ConstraintList newConstraints = (ConstraintList)expander.expandVariable(tom_make_TomTypeToTomTerm(getSymbolCodomain(tomSymbol)),tom_constraints);
          return tom_make_RecordAppl(tom_option,tom_nameList,subterm,newConstraints);
        } else {
           if(contextSubject instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match10_1=(( tom.engine.adt.tomterm.types.TomTerm )contextSubject); if (tom_is_fun_sym_TomTypeToTomTerm(tom_match10_1) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_match10_1_AstType=tom_get_slot_TomTypeToTomTerm_AstType(tom_match10_1); if (tom_is_fun_sym_Type(tom_match10_1_AstType) ||  false ) { if ( true ) {

              SlotList subterm = expander.expandVariableList(tom_make_emptySymbol(), tom_slotList);
              ConstraintList newConstraints = (ConstraintList)expander.expandVariable(tom_make_emptyTerm(),tom_constraints);
              return tom_make_RecordAppl(tom_option,tom_nameList,subterm,newConstraints);
             } } } } if (tom_is_fun_sym_Variable(tom_match10_1) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_match10_1_AstType=tom_get_slot_Variable_AstType(tom_match10_1); { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match10_1_AstType; if ( true ) {

              ConstraintList newConstraints = (ConstraintList)expander.expandVariable(tom_make_TomTypeToTomTerm(tom_type),tom_constraints);
              SlotList subterm = expander.expandVariableList(tom_make_emptySymbol(), tom_slotList);
              return tom_make_RecordAppl(tom_option,tom_nameList,subterm,newConstraints);
             } } } } if (tom_is_fun_sym_Tom(tom_match10_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match10_1_TomList=tom_get_slot_Tom_TomList(tom_match10_1); if (tom_is_fun_sym_concTomTerm(tom_match10_1_TomList) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match10_1_TomList_list1=tom_match10_1_TomList; { tom.engine.adt.tomterm.types.TomList  tom_match10_1_TomList_begin1=tom_match10_1_TomList_list1; { tom.engine.adt.tomterm.types.TomList  tom_match10_1_TomList_end1=tom_match10_1_TomList_list1; { while (!(tom_is_empty_concTomTerm_TomList(tom_match10_1_TomList_end1))) {tom_match10_1_TomList_list1=tom_match10_1_TomList_end1; { { tom.engine.adt.tomterm.types.TomTerm  tom_match10_1_TomList_2=tom_get_head_concTomTerm_TomList(tom_match10_1_TomList_list1);tom_match10_1_TomList_list1=tom_get_tail_concTomTerm_TomList(tom_match10_1_TomList_list1); if (tom_is_fun_sym_Variable(tom_match10_1_TomList_2) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match10_1_TomList_2_AstName=tom_get_slot_Variable_AstName(tom_match10_1_TomList_2); if (tom_is_fun_sym_Name(tom_match10_1_TomList_2_AstName) ||  false ) { { String  tom_match10_1_TomList_2_AstName_String=tom_get_slot_Name_String(tom_match10_1_TomList_2_AstName); if ( true ) {

              ConstraintList newConstraints = (ConstraintList)expander.expandVariable(contextSubject,tom_constraints);
              SlotList subterm = expander.expandVariableList(tom_make_emptySymbol(), tom_slotList);
              return tom_make_RecordAppl(tom_option,tom_nameList,subterm,newConstraints);
             } } } } } }tom_match10_1_TomList_end1=tom_get_tail_concTomTerm_TomList(tom_match10_1_TomList_end1); } }tom_match10_1_TomList_list1=tom_match10_1_TomList_begin1; } } } } } } } if ( true ) {


              // do nothing

              //System.out.println("contextSubject = " + contextSubject);
              //System.out.println("subject        = " + subject);

             } } }

        }
       } } } } } } } } } } } } } } } } } if (tom_is_fun_sym_Variable(tom_match9_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match9_1_Option=tom_get_slot_Variable_Option(tom_match9_1); { tom.engine.adt.tomname.types.TomName  tom_match9_1_AstName=tom_get_slot_Variable_AstName(tom_match9_1); { tom.engine.adt.tomtype.types.TomType  tom_match9_1_AstType=tom_get_slot_Variable_AstType(tom_match9_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match9_1_Constraints=tom_get_slot_Variable_Constraints(tom_match9_1); { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match9_1_Option; { tom.engine.adt.tomname.types.TomName  tom_astName=tom_match9_1_AstName; if (tom_is_fun_sym_TomTypeAlone(tom_match9_1_AstType) ||  false ) { { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tom_match9_1_Constraints; if ( true ) { if(contextSubject instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match11_1=(( tom.engine.adt.tomterm.types.TomTerm )contextSubject); if (tom_is_fun_sym_TomTypeToTomTerm(tom_match11_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_context=tom_match11_1; { tom.engine.adt.tomtype.types.TomType  tom_match11_1_AstType=tom_get_slot_TomTypeToTomTerm_AstType(tom_match11_1); if (tom_is_fun_sym_Type(tom_match11_1_AstType) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match11_1_AstType; if ( true ) {





            // create a variable
            return tom_make_Variable(tom_option,tom_astName,tom_type,(ConstraintList)expander.expandVariable(tom_context,tom_constraints));
           } } } } } } } }

       } } } } } } } } } } if (tom_is_fun_sym_Variable(tom_match9_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match9_1_Option=tom_get_slot_Variable_Option(tom_match9_1); { tom.engine.adt.tomname.types.TomName  tom_match9_1_AstName=tom_get_slot_Variable_AstName(tom_match9_1); { tom.engine.adt.tomtype.types.TomType  tom_match9_1_AstType=tom_get_slot_Variable_AstType(tom_match9_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match9_1_Constraints=tom_get_slot_Variable_Constraints(tom_match9_1); { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match9_1_Option; { tom.engine.adt.tomname.types.TomName  tom_astName=tom_match9_1_AstName; if (tom_is_fun_sym_TomTypeAlone(tom_match9_1_AstType) ||  false ) { { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tom_match9_1_Constraints; if ( true ) { if(contextSubject instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match12_1=(( tom.engine.adt.tomterm.types.TomTerm )contextSubject); if (tom_is_fun_sym_Variable(tom_match12_1) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_match12_1_AstType=tom_get_slot_Variable_AstType(tom_match12_1); { tom.engine.adt.tomtype.types.TomType  tom_type1=tom_match12_1_AstType; if ( true ) {




            ConstraintList newConstraints = (ConstraintList)expander.expandVariable(tom_make_TomTypeToTomTerm(tom_type1),tom_constraints);
            // create a variable
            return tom_make_Variable(tom_option,tom_astName,tom_type1,newConstraints);
           } } } } } }

       } } } } } } } } } } if (tom_is_fun_sym_Variable(tom_match9_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match9_1_Option=tom_get_slot_Variable_Option(tom_match9_1); { tom.engine.adt.tomname.types.TomName  tom_match9_1_AstName=tom_get_slot_Variable_AstName(tom_match9_1); { tom.engine.adt.tomtype.types.TomType  tom_match9_1_AstType=tom_get_slot_Variable_AstType(tom_match9_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match9_1_Constraints=tom_get_slot_Variable_Constraints(tom_match9_1); { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match9_1_Option; if (tom_is_fun_sym_Name(tom_match9_1_AstName) ||  false ) { { String  tom_match9_1_AstName_String=tom_get_slot_Name_String(tom_match9_1_AstName); { String  tom_strName=tom_match9_1_AstName_String; if (tom_is_fun_sym_TomTypeAlone(tom_match9_1_AstType) ||  false ) { { String  tom_match9_1_AstType_String=tom_get_slot_TomTypeAlone_String(tom_match9_1_AstType); { String  tom_tomType=tom_match9_1_AstType_String; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tom_match9_1_Constraints; if ( true ) {


        // create a variable
        TomType localType = expander.getType(tom_tomType);
        if(localType != null) {
          return tom_make_Variable(tom_option,tom_make_Name(tom_strName),localType,tom_constraints);
        } else {
          // do nothing
        }
       } } } } } } } } } } } } } } if (tom_is_fun_sym_Placeholder(tom_match9_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match9_1_Option=tom_get_slot_Placeholder_Option(tom_match9_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match9_1_Constraints=tom_get_slot_Placeholder_Constraints(tom_match9_1); { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match9_1_Option; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tom_match9_1_Constraints; if ( true ) { if(contextSubject instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match13_1=(( tom.engine.adt.tomterm.types.TomTerm )contextSubject); if (tom_is_fun_sym_TomTypeToTomTerm(tom_match13_1) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_match13_1_AstType=tom_get_slot_TomTypeToTomTerm_AstType(tom_match13_1); if (tom_is_fun_sym_Type(tom_match13_1_AstType) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match13_1_AstType; if ( true ) {



 
            ConstraintList newConstraints = (ConstraintList)expander.expandVariable(tom_make_TomTypeToTomTerm(tom_type),tom_constraints);
            // create an unamed variable
            return tom_make_UnamedVariable(tom_option,tom_type,newConstraints);
           } } } } } } }

       } } } } } } if (tom_is_fun_sym_Placeholder(tom_match9_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match9_1_Option=tom_get_slot_Placeholder_Option(tom_match9_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match9_1_Constraints=tom_get_slot_Placeholder_Constraints(tom_match9_1); { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match9_1_Option; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tom_match9_1_Constraints; if ( true ) { if(contextSubject instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match14_1=(( tom.engine.adt.tomterm.types.TomTerm )contextSubject); if (tom_is_fun_sym_Variable(tom_match14_1) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_match14_1_AstType=tom_get_slot_Variable_AstType(tom_match14_1); { tom.engine.adt.tomtype.types.TomType  tom_type1=tom_match14_1_AstType; if ( true ) {




            ConstraintList newConstraints = (ConstraintList)expander.expandVariable(tom_make_TomTypeToTomTerm(tom_type1),tom_constraints);
            // create an unamed variable
            return tom_make_UnamedVariable(tom_option,tom_type1,newConstraints);
           } } } } } }

       } } } } } } if (tom_is_fun_sym_TLVar(tom_match9_1) ||  false ) { { String  tom_match9_1_StrName=tom_get_slot_TLVar_StrName(tom_match9_1); { tom.engine.adt.tomtype.types.TomType  tom_match9_1_AstType=tom_get_slot_TLVar_AstType(tom_match9_1); { String  tom_strName=tom_match9_1_StrName; if (tom_is_fun_sym_TomTypeAlone(tom_match9_1_AstType) ||  false ) { { String  tom_match9_1_AstType_String=tom_get_slot_TomTypeAlone_String(tom_match9_1_AstType); { String  tom_tomType=tom_match9_1_AstType_String; if ( true ) {


        // create a variable: its type is ensured by checker
        TomType localType = expander.getType(tom_tomType);
        OptionList option = tom_empty_list_concOption();
        return tom_make_Variable(option,tom_make_Name(tom_strName),localType,tom_empty_list_concConstraint());
       } } } } } } } } if (tom_is_fun_sym_TLVar(tom_match9_1) ||  false ) { { String  tom_match9_1_StrName=tom_get_slot_TLVar_StrName(tom_match9_1); { tom.engine.adt.tomtype.types.TomType  tom_match9_1_AstType=tom_get_slot_TLVar_AstType(tom_match9_1); { String  tom_strName=tom_match9_1_StrName; if (tom_is_fun_sym_Type(tom_match9_1_AstType) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_localType=tom_match9_1_AstType; if ( true ) {


        // create a variable: its type is ensured by checker
        OptionList option = tom_empty_list_concOption();
        return tom_make_Variable(option,tom_make_Name(tom_strName),tom_localType,tom_empty_list_concConstraint());
       } } } } } } } } } return super.visit_TomTerm(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_replace_expandVariable( tom.engine.adt.tomterm.types.TomTerm  t0,  TomKernelExpander  t1) { return new replace_expandVariable(t0,t1); }




  protected jjtraveler.Visitable expandVariable(TomTerm contextSubject, jjtraveler.Visitable subject) {
    if(contextSubject == null) {
      throw new TomRuntimeException("expandVariable: null contextSubject");
    }
    try{
      return tom_make_ChoiceTopDown(tom_make_replace_expandVariable(contextSubject,this)).visit(subject);
    } catch(VisitFailure e) {
      return subject;
    }
  }

  private TomType getTypeFromVariableList(TomName name, TomList list) {

    //System.out.println("name = " + name);
    //System.out.println("list = " + list);

     if(name instanceof  tom.engine.adt.tomname.types.TomName ) { { tom.engine.adt.tomname.types.TomName  tom_match15_1=(( tom.engine.adt.tomname.types.TomName )name); if(list instanceof  tom.engine.adt.tomterm.types.TomList ) { { tom.engine.adt.tomterm.types.TomList  tom_match15_2=(( tom.engine.adt.tomterm.types.TomList )list); if (tom_is_fun_sym_concTomTerm(tom_match15_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match15_2_list1=tom_match15_2; if (tom_is_empty_concTomTerm_TomList(tom_match15_2_list1)) { if ( true ) {

        System.out.println("getTypeFromVariableList. Stange case '" + name + "' not found");
        throw new TomRuntimeException("getTypeFromVariableList. Stange case '" + name + "' not found");
       } } } } { tom.engine.adt.tomname.types.TomName  tom_varName=tom_match15_1; if (tom_is_fun_sym_concTomTerm(tom_match15_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match15_2_list1=tom_match15_2; if (!(tom_is_empty_concTomTerm_TomList(tom_match15_2_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match15_2_1=tom_get_head_concTomTerm_TomList(tom_match15_2_list1);tom_match15_2_list1=tom_get_tail_concTomTerm_TomList(tom_match15_2_list1); if (tom_is_fun_sym_Variable(tom_match15_2_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match15_2_1_AstName=tom_get_slot_Variable_AstName(tom_match15_2_1); { tom.engine.adt.tomtype.types.TomType  tom_match15_2_1_AstType=tom_get_slot_Variable_AstType(tom_match15_2_1); { tom.engine.adt.tomname.types.TomName  tom_renamedvar_varName_1=tom_match15_2_1_AstName; if (tom_terms_equal_TomName(tom_varName, tom_renamedvar_varName_1)) { if (tom_is_fun_sym_Type(tom_match15_2_1_AstType) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match15_2_1_AstType; if ( true ) {

 return tom_type;  } } } } } } } } } } } } } { tom.engine.adt.tomname.types.TomName  tom_varName=tom_match15_1; if (tom_is_fun_sym_concTomTerm(tom_match15_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match15_2_list1=tom_match15_2; if (!(tom_is_empty_concTomTerm_TomList(tom_match15_2_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_match15_2_1=tom_get_head_concTomTerm_TomList(tom_match15_2_list1);tom_match15_2_list1=tom_get_tail_concTomTerm_TomList(tom_match15_2_list1); if (tom_is_fun_sym_VariableStar(tom_match15_2_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match15_2_1_AstName=tom_get_slot_VariableStar_AstName(tom_match15_2_1); { tom.engine.adt.tomtype.types.TomType  tom_match15_2_1_AstType=tom_get_slot_VariableStar_AstType(tom_match15_2_1); { tom.engine.adt.tomname.types.TomName  tom_renamedvar_varName_1=tom_match15_2_1_AstName; if (tom_terms_equal_TomName(tom_varName, tom_renamedvar_varName_1)) { if (tom_is_fun_sym_Type(tom_match15_2_1_AstType) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match15_2_1_AstType; if ( true ) {
 return tom_type;  } } } } } } } } } } } } } if (tom_is_fun_sym_concTomTerm(tom_match15_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match15_2_list1=tom_match15_2; if (!(tom_is_empty_concTomTerm_TomList(tom_match15_2_list1))) {tom_match15_2_list1=tom_get_tail_concTomTerm_TomList(tom_match15_2_list1); { tom.engine.adt.tomterm.types.TomList  tom_tail=tom_match15_2_list1; if ( true ) {
 return getTypeFromVariableList(name,tom_tail);  } } } } } } } } }


    return null;
  }

  /*
   * perform type inference of subterms (subtermList)
   * under a given operator (symbol)
   */
  private SlotList expandVariableList(TomSymbol symbol, SlotList subtermList) {
    if(symbol == null) {
      throw new TomRuntimeException("expandVariableList: null symbol");
    }

    if(subtermList.isEmptyconcSlot()) {
      return tom_empty_list_concSlot();
    }

    //System.out.println("symbol = " + subject.getastname());
     if(symbol instanceof  tom.engine.adt.tomsignature.types.TomSymbol ) { { tom.engine.adt.tomsignature.types.TomSymbol  tom_match16_1=(( tom.engine.adt.tomsignature.types.TomSymbol )symbol); if(subtermList instanceof  tom.engine.adt.tomslot.types.SlotList ) { { tom.engine.adt.tomslot.types.SlotList  tom_match16_2=(( tom.engine.adt.tomslot.types.SlotList )subtermList); if (tom_is_fun_sym_emptySymbol(tom_match16_1) ||  false ) { if (tom_is_fun_sym_concSlot(tom_match16_2) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match16_2_list1=tom_match16_2; if (!(tom_is_empty_concSlot_SlotList(tom_match16_2_list1))) { { tom.engine.adt.tomslot.types.Slot  tom_match16_2_1=tom_get_head_concSlot_SlotList(tom_match16_2_list1);tom_match16_2_list1=tom_get_tail_concSlot_SlotList(tom_match16_2_list1); if (tom_is_fun_sym_PairSlotAppl(tom_match16_2_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match16_2_1_SlotName=tom_get_slot_PairSlotAppl_SlotName(tom_match16_2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match16_2_1_Appl=tom_get_slot_PairSlotAppl_Appl(tom_match16_2_1); { tom.engine.adt.tomname.types.TomName  tom_slotName=tom_match16_2_1_SlotName; { tom.engine.adt.tomterm.types.TomTerm  tom_slotAppl=tom_match16_2_1_Appl; { tom.engine.adt.tomslot.types.SlotList  tom_tail=tom_match16_2_list1; if ( true ) {

        /*
         * if the top symbol is unknown, the subterms
         * are expanded in an empty context
         */
        SlotList sl = expandVariableList(symbol,tom_tail);
        return tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_slotName,(TomTerm)expandVariable(tom_make_emptyTerm(),tom_slotAppl)),tom_append_list_concSlot(sl,tom_empty_list_concSlot()));
       } } } } } } } } } } } } if (tom_is_fun_sym_Symbol(tom_match16_1) ||  false ) { { tom.engine.adt.tomsignature.types.TomSymbol  tom_symb=tom_match16_1; { tom.engine.adt.tomtype.types.TomType  tom_match16_1_TypesToType=tom_get_slot_Symbol_TypesToType(tom_match16_1); if (tom_is_fun_sym_TypesToType(tom_match16_1_TypesToType) ||  false ) { { tom.engine.adt.tomtype.types.TomTypeList  tom_match16_1_TypesToType_Domain=tom_get_slot_TypesToType_Domain(tom_match16_1_TypesToType); { tom.engine.adt.tomtype.types.TomType  tom_match16_1_TypesToType_Codomain=tom_get_slot_TypesToType_Codomain(tom_match16_1_TypesToType); { tom.engine.adt.tomtype.types.TomTypeList  tom_typelist=tom_match16_1_TypesToType_Domain; { tom.engine.adt.tomtype.types.TomType  tom_codomain=tom_match16_1_TypesToType_Codomain; if (tom_is_fun_sym_concSlot(tom_match16_2) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match16_2_list1=tom_match16_2; if (!(tom_is_empty_concSlot_SlotList(tom_match16_2_list1))) { { tom.engine.adt.tomslot.types.Slot  tom_match16_2_1=tom_get_head_concSlot_SlotList(tom_match16_2_list1);tom_match16_2_list1=tom_get_tail_concSlot_SlotList(tom_match16_2_list1); if (tom_is_fun_sym_PairSlotAppl(tom_match16_2_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match16_2_1_SlotName=tom_get_slot_PairSlotAppl_SlotName(tom_match16_2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match16_2_1_Appl=tom_get_slot_PairSlotAppl_Appl(tom_match16_2_1); { tom.engine.adt.tomname.types.TomName  tom_slotName=tom_match16_2_1_SlotName; { tom.engine.adt.tomterm.types.TomTerm  tom_slotAppl=tom_match16_2_1_Appl; { tom.engine.adt.tomslot.types.SlotList  tom_tail=tom_match16_2_list1; if ( true ) {



          // process a list of subterms and a list of types
          if(isListOperator(tom_symb) || isArrayOperator(tom_symb)) {
            /*
             * todo:
             * when the symbol is an associative operator,
             * the signature has the form: list conc( element* )
             * the list of types is reduced to the singleton { element }
             *
             * consider a pattern: conc(e1*,x,e2*,y,e3*)
             *  assign the type "element" to each subterm: x and y
             *  assign the type "list" to each subtermlist: e1*,e2* and e3*
             */

            //System.out.println("listoperator: " + symb);
            //System.out.println("subtermlist: " + subtermlist);

             if(tom_slotAppl instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match17_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_slotAppl); if (tom_is_fun_sym_VariableStar(tom_match17_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match17_1_Option=tom_get_slot_VariableStar_Option(tom_match17_1); { tom.engine.adt.tomname.types.TomName  tom_match17_1_AstName=tom_get_slot_VariableStar_AstName(tom_match17_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match17_1_Constraints=tom_get_slot_VariableStar_Constraints(tom_match17_1); { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match17_1_Option; { tom.engine.adt.tomname.types.TomName  tom_name=tom_match17_1_AstName; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tom_match17_1_Constraints; if ( true ) {

                ConstraintList newconstraints = (ConstraintList)expandVariable(tom_make_TomTypeToTomTerm(tom_codomain),tom_constraints);
                SlotList sl = expandVariableList(symbol,tom_tail);
                return tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_slotName,tom_make_VariableStar(tom_option,tom_name,tom_codomain,newconstraints)),tom_append_list_concSlot(sl,tom_empty_list_concSlot()));
               } } } } } } } } if (tom_is_fun_sym_UnamedVariableStar(tom_match17_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match17_1_Option=tom_get_slot_UnamedVariableStar_Option(tom_match17_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match17_1_Constraints=tom_get_slot_UnamedVariableStar_Constraints(tom_match17_1); { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match17_1_Option; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tom_match17_1_Constraints; if ( true ) {


                ConstraintList newconstraints = (ConstraintList)expandVariable(tom_make_TomTypeToTomTerm(tom_codomain),tom_constraints);
                SlotList sl = expandVariableList(symbol,tom_tail);
                return tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_slotName,tom_make_UnamedVariableStar(tom_option,tom_codomain,newconstraints)),tom_append_list_concSlot(sl,tom_empty_list_concSlot()));
               } } } } } } if ( true ) {


                TomType domaintype = tom_typelist.getHeadconcTomType();
                SlotList sl = expandVariableList(symbol,tom_tail);
                return tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_slotName,(TomTerm)expandVariable(tom_make_TomTypeToTomTerm(domaintype),tom_slotAppl)),tom_append_list_concSlot(sl,tom_empty_list_concSlot()));

               } } }

          } else {
            SlotList sl = expandVariableList(symbol,tom_tail);
            return tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_slotName,(TomTerm)expandVariable(tom_make_TomTypeToTomTerm(getSlotType(tom_symb,tom_slotName)),tom_slotAppl)),tom_append_list_concSlot(sl,tom_empty_list_concSlot()));
          }
         } } } } } } } } } } } } } } } } } } } } } } }

    System.out.println("expandVariableList: strange case: '" + symbol + "'");
    throw new TomRuntimeException("expandVariableList: strange case: '" + symbol + "'");
  }

   private static class replace_replaceInstantiatedVariable  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  tom.engine.adt.tomterm.types.TomList  instantiatedVariable;  public replace_replaceInstantiatedVariable(  tom.engine.adt.tomterm.types.TomList  instantiatedVariable ) { super(tom_make_Identity() ); this.instantiatedVariable=instantiatedVariable; } public  tom.engine.adt.tomterm.types.TomList  getinstantiatedVariable() { return instantiatedVariable;} public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match18_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); { tom.engine.adt.tomterm.types.TomTerm  tom_subject=tom_match18_1; if ( true ) { if(tom_subject instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match19_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_subject); if(instantiatedVariable instanceof  tom.engine.adt.tomterm.types.TomList ) { { tom.engine.adt.tomterm.types.TomList  tom_match19_2=(( tom.engine.adt.tomterm.types.TomList )instantiatedVariable); if (tom_is_fun_sym_RecordAppl(tom_match19_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match19_1_NameList=tom_get_slot_RecordAppl_NameList(tom_match19_1); { tom.engine.adt.tomslot.types.SlotList  tom_match19_1_Slots=tom_get_slot_RecordAppl_Slots(tom_match19_1); if (tom_is_fun_sym_concTomName(tom_match19_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match19_1_NameList_list1=tom_match19_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match19_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_get_head_concTomName_TomNameList(tom_match19_1_NameList_list1);tom_match19_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match19_1_NameList_list1); if (tom_is_empty_concTomName_TomNameList(tom_match19_1_NameList_list1)) { if (tom_is_fun_sym_concSlot(tom_match19_1_Slots) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match19_1_Slots_list1=tom_match19_1_Slots; if (tom_is_empty_concSlot_SlotList(tom_match19_1_Slots_list1)) { if (tom_is_fun_sym_concTomTerm(tom_match19_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match19_2_list1=tom_match19_2; { tom.engine.adt.tomterm.types.TomList  tom_match19_2_begin1=tom_match19_2_list1; { tom.engine.adt.tomterm.types.TomList  tom_match19_2_end1=tom_match19_2_list1; { while (!(tom_is_empty_concTomTerm_TomList(tom_match19_2_end1))) {tom_match19_2_list1=tom_match19_2_end1; { { tom.engine.adt.tomterm.types.TomTerm  tom_match19_2_2=tom_get_head_concTomTerm_TomList(tom_match19_2_list1);tom_match19_2_list1=tom_get_tail_concTomTerm_TomList(tom_match19_2_list1); { tom.engine.adt.tomterm.types.TomTerm  tom_var=tom_match19_2_2; {boolean tom_bool_match19_2_2= false ; { tom.engine.adt.tomname.types.TomName  tom_match19_2_2_AstName= null ; if (tom_is_fun_sym_Variable(tom_match19_2_2)) {tom_bool_match19_2_2= true ;tom_match19_2_2_AstName=tom_get_slot_Variable_AstName(tom_match19_2_2); } else { if (tom_is_fun_sym_VariableStar(tom_match19_2_2)) {tom_bool_match19_2_2= true ;tom_match19_2_2_AstName=tom_get_slot_VariableStar_AstName(tom_match19_2_2); } } if (tom_bool_match19_2_2) { { tom.engine.adt.tomname.types.TomName  tom_renamedvar_opNameAST_1=tom_match19_2_2_AstName; if (tom_terms_equal_TomName(tom_opNameAST, tom_renamedvar_opNameAST_1)) { if ( true ) {




            return tom_var;
           } } } } } } } }tom_match19_2_end1=tom_get_tail_concTomTerm_TomList(tom_match19_2_end1); } }tom_match19_2_list1=tom_match19_2_begin1; } } } } } } } } } } } } } } } } if (tom_is_fun_sym_Variable(tom_match19_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match19_1_AstName=tom_get_slot_Variable_AstName(tom_match19_1); { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_match19_1_AstName; if (tom_is_fun_sym_concTomTerm(tom_match19_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match19_2_list1=tom_match19_2; { tom.engine.adt.tomterm.types.TomList  tom_match19_2_begin1=tom_match19_2_list1; { tom.engine.adt.tomterm.types.TomList  tom_match19_2_end1=tom_match19_2_list1; { while (!(tom_is_empty_concTomTerm_TomList(tom_match19_2_end1))) {tom_match19_2_list1=tom_match19_2_end1; { { tom.engine.adt.tomterm.types.TomTerm  tom_match19_2_2=tom_get_head_concTomTerm_TomList(tom_match19_2_list1);tom_match19_2_list1=tom_get_tail_concTomTerm_TomList(tom_match19_2_list1); if (tom_is_fun_sym_Variable(tom_match19_2_2) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_var=tom_match19_2_2; { tom.engine.adt.tomname.types.TomName  tom_match19_2_2_AstName=tom_get_slot_Variable_AstName(tom_match19_2_2); { tom.engine.adt.tomname.types.TomName  tom_renamedvar_opNameAST_1=tom_match19_2_2_AstName; if (tom_terms_equal_TomName(tom_opNameAST, tom_renamedvar_opNameAST_1)) { if ( true ) {

            return tom_var;
           } } } } } } }tom_match19_2_end1=tom_get_tail_concTomTerm_TomList(tom_match19_2_end1); } }tom_match19_2_list1=tom_match19_2_begin1; } } } } } } } } if (tom_is_fun_sym_VariableStar(tom_match19_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match19_1_AstName=tom_get_slot_VariableStar_AstName(tom_match19_1); { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_match19_1_AstName; if (tom_is_fun_sym_concTomTerm(tom_match19_2) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match19_2_list1=tom_match19_2; { tom.engine.adt.tomterm.types.TomList  tom_match19_2_begin1=tom_match19_2_list1; { tom.engine.adt.tomterm.types.TomList  tom_match19_2_end1=tom_match19_2_list1; { while (!(tom_is_empty_concTomTerm_TomList(tom_match19_2_end1))) {tom_match19_2_list1=tom_match19_2_end1; { { tom.engine.adt.tomterm.types.TomTerm  tom_match19_2_2=tom_get_head_concTomTerm_TomList(tom_match19_2_list1);tom_match19_2_list1=tom_get_tail_concTomTerm_TomList(tom_match19_2_list1); if (tom_is_fun_sym_VariableStar(tom_match19_2_2) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_var=tom_match19_2_2; { tom.engine.adt.tomname.types.TomName  tom_match19_2_2_AstName=tom_get_slot_VariableStar_AstName(tom_match19_2_2); { tom.engine.adt.tomname.types.TomName  tom_renamedvar_opNameAST_1=tom_match19_2_2_AstName; if (tom_terms_equal_TomName(tom_opNameAST, tom_renamedvar_opNameAST_1)) { if ( true ) {

            return tom_var;
           } } } } } } }tom_match19_2_end1=tom_get_tail_concTomTerm_TomList(tom_match19_2_end1); } }tom_match19_2_list1=tom_match19_2_begin1; } } } } } } } } } } } }

       } } } } return super.visit_TomTerm(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_replace_replaceInstantiatedVariable( tom.engine.adt.tomterm.types.TomList  t0) { return new replace_replaceInstantiatedVariable(t0); }



  protected jjtraveler.Visitable replaceInstantiatedVariable(TomList instantiatedVariable, jjtraveler.Visitable subject) {
    if(instantiatedVariable == null) {
      throw new TomRuntimeException("replaceInstantiatedVariable: null instantiatedVariable");
    }
    try {
      return tom_make_ChoiceTopDown(tom_make_replace_replaceInstantiatedVariable(instantiatedVariable)).visit(subject);
    } catch(VisitFailure e) {
      return subject;
    }
  }

  private TomType getType(String tomName) {
    TomType tomType = getSymbolTable().getType(tomName);
    return tomType;
  }

}

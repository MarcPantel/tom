/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2008, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Radu Kopetz e-mail: Radu.Kopetz@loria.fr
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/
package tom.engine.compiler.propagator;

import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomtype.types.*;
import tom.engine.adt.tomname.types.*;
import tom.library.sl.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.tools.SymbolTable;
import tom.engine.compiler.*;
import tom.engine.TomBase;
import tom.engine.tools.SymbolTable;
import java.util.*;
import tom.engine.exception.TomRuntimeException;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.compiler.Compiler;

/**
 * A propagator that contains rules that don't depend on the theory (or that are applicable for more than one)
 */
public class GeneralPurposePropagator implements IBasePropagator {

//--------------------------------------------------------
  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if( l1.isEmptyconcTomName() ) {       return l2;     } else if( l2.isEmptyconcTomName() ) {       return l1;     } else if(  l1.getTailconcTomName() .isEmptyconcTomName() ) {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,l2) ;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,tom_append_list_concTomName( l1.getTailconcTomName() ,l2)) ;     }   }   private static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcTomName()  ||  (end== tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( begin.getHeadconcTomName() ,( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName( begin.getTailconcTomName() ,end,tail)) ;   }      private static   tom.engine.adt.tomconstraint.types.Constraint  tom_append_list_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  l1,  tom.engine.adt.tomconstraint.types.Constraint  l2) {     if( l1.isEmptyAndConstraint() ) {       return l2;     } else if( l2.isEmptyAndConstraint() ) {       return l1;     } else if( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) ) {       if( (( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getTailAndConstraint() : tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ).isEmptyAndConstraint() ) {         return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getHeadAndConstraint() :l1),l2) ;       } else {         return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getHeadAndConstraint() :l1),tom_append_list_AndConstraint((( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getTailAndConstraint() : tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ),l2)) ;       }     } else {       return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(l1,l2) ;     }   }   private static   tom.engine.adt.tomconstraint.types.Constraint  tom_get_slice_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  begin,  tom.engine.adt.tomconstraint.types.Constraint  end, tom.engine.adt.tomconstraint.types.Constraint  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyAndConstraint()  ||  (end== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((begin instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (begin instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? begin.getHeadAndConstraint() :begin),( tom.engine.adt.tomconstraint.types.Constraint )tom_get_slice_AndConstraint((( ((begin instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (begin instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? begin.getTailAndConstraint() : tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ),end,tail)) ;   }      private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {     if( l1.isEmptyconcConstraint() ) {       return l2;     } else if( l2.isEmptyconcConstraint() ) {       return l1;     } else if(  l1.getTailconcConstraint() .isEmptyconcConstraint() ) {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,l2) ;     } else {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,tom_append_list_concConstraint( l1.getTailconcConstraint() ,l2)) ;     }   }   private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end, tom.engine.adt.tomconstraint.types.ConstraintList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcConstraint()  ||  (end== tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( begin.getHeadconcConstraint() ,( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint( begin.getTailconcConstraint() ,end,tail)) ;   }      private static   tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList l1,  tom.engine.adt.tomslot.types.SlotList  l2) {     if( l1.isEmptyconcSlot() ) {       return l2;     } else if( l2.isEmptyconcSlot() ) {       return l1;     } else if(  l1.getTailconcSlot() .isEmptyconcSlot() ) {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,l2) ;     } else {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,tom_append_list_concSlot( l1.getTailconcSlot() ,l2)) ;     }   }   private static   tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end, tom.engine.adt.tomslot.types.SlotList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcSlot()  ||  (end== tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( begin.getHeadconcSlot() ,( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot( begin.getTailconcSlot() ,end,tail)) ;   }    /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Sequence) )) {       if(( ((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Sequence(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end == null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin):new tom.library.sl.Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)) );   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) );}   
	
//--------------------------------------------------------

  // contains variables that were already replaced (for optimizing reasons)
  private static ArrayList replacedVariables = null; 

  public Constraint propagate(Constraint constraint) throws VisitFailure {
    replacedVariables = new ArrayList();
    return  (Constraint)tom_make_TopDown(tom_make_GeneralPropagations()).visitLight(constraint);
  }	

  private static class GeneralPropagations extends tom.library.sl.BasicStrategy {public GeneralPropagations() {super(( new tom.library.sl.Identity() ));}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_2=tomMatch168NameNumberfreshSubject_1;if ( (tomMatch168NameNumber_freshVar_2 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_0= tomMatch168NameNumber_freshVar_2.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_1= tomMatch168NameNumber_freshVar_2.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_4=tomMatch168NameNumber_freshVar_0;if ( (tomMatch168NameNumber_freshVar_4 instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_3= tomMatch168NameNumber_freshVar_4.getTomTerm() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_5=tomMatch168NameNumber_freshVar_3;{ boolean tomMatch168NameNumber_freshVar_6= false ;if ( (tomMatch168NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {tomMatch168NameNumber_freshVar_6= true ;} else {if ( (tomMatch168NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {tomMatch168NameNumber_freshVar_6= true ;}}if ((tomMatch168NameNumber_freshVar_6 ==  true )) {{  tom.engine.adt.tomterm.types.TomTerm  tom_term=tomMatch168NameNumber_freshVar_3;{  tom.engine.adt.tomterm.types.TomTerm  tom_s=tomMatch168NameNumber_freshVar_1;if ( true ) {







        
        return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.AntiMatchConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_term, tom_s) ) , tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(ConstraintPropagator.performDetach( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_term, tom_s) ), tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) 
;
      }}}}}}}}}}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_7=tomMatch168NameNumberfreshSubject_1;if ( ((tomMatch168NameNumber_freshVar_7 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_freshVar_7 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_begin_9=tomMatch168NameNumber_freshVar_7;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_end_10=tomMatch168NameNumber_freshVar_7;do {{{  tom.engine.adt.tomconstraint.types.Constraint  tom_X=tom_get_slice_AndConstraint(tomMatch168NameNumber_begin_9,tomMatch168NameNumber_end_10, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() );{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_8=tomMatch168NameNumber_end_10;if (!( (  tomMatch168NameNumber_freshVar_8.isEmptyAndConstraint()  ||  (tomMatch168NameNumber_freshVar_8== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) )) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_17=(( ((tomMatch168NameNumber_freshVar_8 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_freshVar_8 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_freshVar_8.getHeadAndConstraint() ):(tomMatch168NameNumber_freshVar_8));if ( (tomMatch168NameNumber_freshVar_17 instanceof tom.engine.adt.tomconstraint.types.constraint.AntiMatchConstraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tom_antiMatch=(( ((tomMatch168NameNumber_freshVar_8 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_freshVar_8 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_freshVar_8.getHeadAndConstraint() ):(tomMatch168NameNumber_freshVar_8));{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_11=(( ((tomMatch168NameNumber_freshVar_8 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_freshVar_8 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_freshVar_8.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_begin_13=tomMatch168NameNumber_freshVar_11;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_end_14=tomMatch168NameNumber_freshVar_11;do {{{  tom.engine.adt.tomconstraint.types.Constraint  tom_Y=tom_get_slice_AndConstraint(tomMatch168NameNumber_begin_13,tomMatch168NameNumber_end_14, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() );{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_12=tomMatch168NameNumber_end_14;if (!( (  tomMatch168NameNumber_freshVar_12.isEmptyAndConstraint()  ||  (tomMatch168NameNumber_freshVar_12== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) )) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_18=(( ((tomMatch168NameNumber_freshVar_12 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_freshVar_12 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_freshVar_12.getHeadAndConstraint() ):(tomMatch168NameNumber_freshVar_12));if ( (tomMatch168NameNumber_freshVar_18 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tom_match=(( ((tomMatch168NameNumber_freshVar_12 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_freshVar_12 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_freshVar_12.getHeadAndConstraint() ):(tomMatch168NameNumber_freshVar_12));{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_15=(( ((tomMatch168NameNumber_freshVar_12 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_freshVar_12 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_freshVar_12.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));if ( true ) {







        return tom_append_list_AndConstraint(tom_X,tom_append_list_AndConstraint(tom_Y, tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(tom_match, tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(tom_antiMatch,tom_append_list_AndConstraint(tomMatch168NameNumber_freshVar_15, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )) ) ));        
      }}}}}}}}if ( (  tomMatch168NameNumber_end_14.isEmptyAndConstraint()  ||  (tomMatch168NameNumber_end_14== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) ) {tomMatch168NameNumber_end_14=tomMatch168NameNumber_begin_13;} else {tomMatch168NameNumber_end_14=(( ((tomMatch168NameNumber_end_14 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_end_14 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_end_14.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));}}} while(!( (tomMatch168NameNumber_end_14==tomMatch168NameNumber_begin_13) ));}}}}}}}}}if ( (  tomMatch168NameNumber_end_10.isEmptyAndConstraint()  ||  (tomMatch168NameNumber_end_10== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) ) {tomMatch168NameNumber_end_10=tomMatch168NameNumber_begin_9;} else {tomMatch168NameNumber_end_10=(( ((tomMatch168NameNumber_end_10 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_end_10 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_end_10.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));}}} while(!( (tomMatch168NameNumber_end_10==tomMatch168NameNumber_begin_9) ));}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_19=tomMatch168NameNumberfreshSubject_1;if ( ((tomMatch168NameNumber_freshVar_19 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_freshVar_19 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_begin_21=tomMatch168NameNumber_freshVar_19;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_end_22=tomMatch168NameNumber_freshVar_19;do {{{  tom.engine.adt.tomconstraint.types.Constraint  tom_X=tom_get_slice_AndConstraint(tomMatch168NameNumber_begin_21,tomMatch168NameNumber_end_22, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() );{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_20=tomMatch168NameNumber_end_22;if (!( (  tomMatch168NameNumber_freshVar_20.isEmptyAndConstraint()  ||  (tomMatch168NameNumber_freshVar_20== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) )) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_27=(( ((tomMatch168NameNumber_freshVar_20 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_freshVar_20 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_freshVar_20.getHeadAndConstraint() ):(tomMatch168NameNumber_freshVar_20));if ( (tomMatch168NameNumber_freshVar_27 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_25= tomMatch168NameNumber_freshVar_27.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_26= tomMatch168NameNumber_freshVar_27.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_30=tomMatch168NameNumber_freshVar_25;{ boolean tomMatch168NameNumber_freshVar_34= false ;{  tom.engine.adt.tomtype.types.TomType  tomMatch168NameNumber_freshVar_29= null ;{  tom.engine.adt.tomname.types.TomName  tomMatch168NameNumber_freshVar_28= null ;if ( (tomMatch168NameNumber_freshVar_30 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch168NameNumber_freshVar_34= true ;tomMatch168NameNumber_freshVar_28= tomMatch168NameNumber_freshVar_30.getAstName() ;tomMatch168NameNumber_freshVar_29= tomMatch168NameNumber_freshVar_30.getAstType() ;}} else {if ( (tomMatch168NameNumber_freshVar_30 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch168NameNumber_freshVar_34= true ;tomMatch168NameNumber_freshVar_28= tomMatch168NameNumber_freshVar_30.getAstName() ;tomMatch168NameNumber_freshVar_29= tomMatch168NameNumber_freshVar_30.getAstType() ;}}}if ((tomMatch168NameNumber_freshVar_34 ==  true )) {{  tom.engine.adt.tomname.types.TomName  tom_x=tomMatch168NameNumber_freshVar_28;{  tom.engine.adt.tomconstraint.types.Constraint  tom_eq=(( ((tomMatch168NameNumber_freshVar_20 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_freshVar_20 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_freshVar_20.getHeadAndConstraint() ):(tomMatch168NameNumber_freshVar_20));{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_23=(( ((tomMatch168NameNumber_freshVar_20 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_freshVar_20 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_freshVar_20.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));{ boolean tomMatch168NameNumber_freshVar_33= false ;{  tom.engine.adt.tomname.types.TomName  tomMatch168NameNumber_freshVar_31=tomMatch168NameNumber_freshVar_28;if ( (tomMatch168NameNumber_freshVar_31 instanceof tom.engine.adt.tomname.types.tomname.PositionName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch168NameNumber_freshVar_32=tomMatch168NameNumber_freshVar_28;if ( (tomMatch168NameNumber_freshVar_32==tom_x) ) {tomMatch168NameNumber_freshVar_33= true ;}}}}if ((tomMatch168NameNumber_freshVar_33 ==  false )) {if ( true ) {







        if (!replacedVariables.contains(tom_x)){
          replacedVariables.add(tom_x);
          Constraint toApplyOn = tom_append_list_AndConstraint(tomMatch168NameNumber_freshVar_23, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() );
          Constraint res = (Constraint)tom_make_TopDown(tom_make_ReplaceMatchConstraint(tom_x,tomMatch168NameNumber_freshVar_25,tomMatch168NameNumber_freshVar_26)).visitLight(toApplyOn);
          if(res != toApplyOn) {
            return tom_append_list_AndConstraint(tom_X, tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(tom_eq, tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(res, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) );
          }
        }
      }}}}}}}}}}}}}}}}}}if ( (  tomMatch168NameNumber_end_22.isEmptyAndConstraint()  ||  (tomMatch168NameNumber_end_22== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) ) {tomMatch168NameNumber_end_22=tomMatch168NameNumber_begin_21;} else {tomMatch168NameNumber_end_22=(( ((tomMatch168NameNumber_end_22 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch168NameNumber_end_22 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch168NameNumber_end_22.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));}}} while(!( (tomMatch168NameNumber_end_22==tomMatch168NameNumber_begin_21) ));}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_37=tomMatch168NameNumberfreshSubject_1;if ( (tomMatch168NameNumber_freshVar_37 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_35= tomMatch168NameNumber_freshVar_37.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_36= tomMatch168NameNumber_freshVar_37.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_39=tomMatch168NameNumber_freshVar_35;{ boolean tomMatch168NameNumber_freshVar_42= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch168NameNumber_freshVar_38= null ;if ( (tomMatch168NameNumber_freshVar_39 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch168NameNumber_freshVar_42= true ;tomMatch168NameNumber_freshVar_38= tomMatch168NameNumber_freshVar_39.getConstraints() ;}} else {if ( (tomMatch168NameNumber_freshVar_39 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch168NameNumber_freshVar_42= true ;tomMatch168NameNumber_freshVar_38= tomMatch168NameNumber_freshVar_39.getConstraints() ;}} else {if ( (tomMatch168NameNumber_freshVar_39 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar) ) {{tomMatch168NameNumber_freshVar_42= true ;tomMatch168NameNumber_freshVar_38= tomMatch168NameNumber_freshVar_39.getConstraints() ;}} else {if ( (tomMatch168NameNumber_freshVar_39 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable) ) {{tomMatch168NameNumber_freshVar_42= true ;tomMatch168NameNumber_freshVar_38= tomMatch168NameNumber_freshVar_39.getConstraints() ;}}}}}if ((tomMatch168NameNumber_freshVar_42 ==  true )) {{  tom.engine.adt.tomterm.types.TomTerm  tom_term=tomMatch168NameNumber_freshVar_35;{ boolean tomMatch168NameNumber_freshVar_41= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch168NameNumber_freshVar_40=tomMatch168NameNumber_freshVar_38;if ( ((tomMatch168NameNumber_freshVar_40 instanceof tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint) || (tomMatch168NameNumber_freshVar_40 instanceof tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint)) ) {if ( tomMatch168NameNumber_freshVar_40.isEmptyconcConstraint() ) {tomMatch168NameNumber_freshVar_41= true ;}}}if ((tomMatch168NameNumber_freshVar_41 ==  false )) {if ( true ) {







        Constraint result = ConstraintPropagator.performDetach(tomMatch168NameNumberfreshSubject_1);
        if (tom_term.isVariable()) {
          result =  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_term.setConstraints( tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ), tomMatch168NameNumber_freshVar_36) , tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(result, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) ;
        }
        return result;
      }}}}}}}}}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch168NameNumber_freshVar_45=tomMatch168NameNumberfreshSubject_1;if ( (tomMatch168NameNumber_freshVar_45 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_43= tomMatch168NameNumber_freshVar_45.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_44= tomMatch168NameNumber_freshVar_45.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch168NameNumber_freshVar_46=tomMatch168NameNumber_freshVar_44;if ( (tomMatch168NameNumber_freshVar_46==tomMatch168NameNumber_freshVar_43) ) {if ( true ) {




        return  tom.engine.adt.tomconstraint.types.constraint.TrueConstraint.make() ;
      }}}}}}}}}}return _visit_Constraint(tom__arg,introspector); }public  tom.engine.adt.tomconstraint.types.Constraint  _visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {return visit_Constraint((( tom.engine.adt.tomconstraint.types.Constraint )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_GeneralPropagations() { return new GeneralPropagations();}


// end %strategy
  
  /**
   * Detach sublists
   * 
   * Make sure that the sublists in a list are replaced by star variables - this is only happening 
   * when the lists and the sublists have the same name
   * 
   * conc(X*,conc(some_pattern),Y*) << t -> conc(X*,Z*,Y*) << t /\ conc(some_pattern) << Z*  
   * 
   */ 
  public static Constraint detachSublists(Constraint constraint) {
    // will hold the new slots of t
    SlotList newSlots =  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ;
    Constraint constraintList =  tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ;
    {if ( (constraint instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )constraint);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_2=tomMatch169NameNumberfreshSubject_1;if ( (tomMatch169NameNumber_freshVar_2 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_0= tomMatch169NameNumber_freshVar_2.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_1= tomMatch169NameNumber_freshVar_2.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_5=tomMatch169NameNumber_freshVar_0;if ( (tomMatch169NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch169NameNumber_freshVar_3= tomMatch169NameNumber_freshVar_5.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch169NameNumber_freshVar_4= tomMatch169NameNumber_freshVar_5.getSlots() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch169NameNumber_freshVar_6=tomMatch169NameNumber_freshVar_3;if ( ((tomMatch169NameNumber_freshVar_6 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch169NameNumber_freshVar_6 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {if (!( tomMatch169NameNumber_freshVar_6.isEmptyconcTomName() )) {{  tom.engine.adt.tomname.types.TomName  tomMatch169NameNumber_freshVar_8= tomMatch169NameNumber_freshVar_6.getHeadconcTomName() ;if ( (tomMatch169NameNumber_freshVar_8 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  tom.engine.adt.tomname.types.TomName  tom_name= tomMatch169NameNumber_freshVar_6.getHeadconcTomName() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch169NameNumber_freshVar_7= tomMatch169NameNumber_freshVar_6.getTailconcTomName() ;if ( tomMatch169NameNumber_freshVar_7.isEmptyconcTomName() ) {{  tom.engine.adt.tomslot.types.SlotList  tom_slots=tomMatch169NameNumber_freshVar_4;{  tom.engine.adt.tomterm.types.TomTerm  tom_t=tomMatch169NameNumber_freshVar_0;{ boolean tomMatch169NameNumber_freshVar_11= false ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch169NameNumber_freshVar_9=tomMatch169NameNumber_freshVar_4;if ( ((tomMatch169NameNumber_freshVar_9 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch169NameNumber_freshVar_9 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch169NameNumber_freshVar_10=tomMatch169NameNumber_freshVar_4;if ( (tomMatch169NameNumber_freshVar_10==tom_slots) ) {if ( tomMatch169NameNumber_freshVar_9.isEmptyconcSlot() ) {tomMatch169NameNumber_freshVar_11= true ;}}}}}if ((tomMatch169NameNumber_freshVar_11 ==  false )) {if ( true ) {{if ( (tom_slots instanceof tom.engine.adt.tomslot.types.SlotList) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch170NameNumberfreshSubject_1=(( tom.engine.adt.tomslot.types.SlotList )tom_slots);{  tom.engine.adt.tomslot.types.SlotList  tomMatch170NameNumber_freshVar_0=tomMatch170NameNumberfreshSubject_1;if ( ((tomMatch170NameNumber_freshVar_0 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch170NameNumber_freshVar_0 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch170NameNumber_begin_2=tomMatch170NameNumber_freshVar_0;{  tom.engine.adt.tomslot.types.SlotList  tomMatch170NameNumber_end_3=tomMatch170NameNumber_freshVar_0;do {{{  tom.engine.adt.tomslot.types.SlotList  tomMatch170NameNumber_freshVar_1=tomMatch170NameNumber_end_3;if (!( tomMatch170NameNumber_freshVar_1.isEmptyconcSlot() )) {{  tom.engine.adt.tomslot.types.Slot  tom_slot= tomMatch170NameNumber_freshVar_1.getHeadconcSlot() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch170NameNumber_freshVar_4= tomMatch170NameNumber_freshVar_1.getTailconcSlot() ;if ( true ) {



matchSlot:  {if ( (tom_slot instanceof tom.engine.adt.tomslot.types.Slot) ) {{  tom.engine.adt.tomslot.types.Slot  tomMatch171NameNumberfreshSubject_1=(( tom.engine.adt.tomslot.types.Slot )tom_slot);{  tom.engine.adt.tomslot.types.Slot  tomMatch171NameNumber_freshVar_1=tomMatch171NameNumberfreshSubject_1;if ( (tomMatch171NameNumber_freshVar_1 instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch171NameNumber_freshVar_0= tomMatch171NameNumber_freshVar_1.getAppl() ;{  tom.engine.adt.tomterm.types.TomTerm  tom_appl=tomMatch171NameNumber_freshVar_0;if ( (tom_name instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch171NameNumberfreshSubject_2=(( tom.engine.adt.tomname.types.TomName )tom_name);{  tom.engine.adt.tomname.types.TomName  tom_childName=tomMatch171NameNumberfreshSubject_2;{ int tomMatch171NameNumber_freshVar_15=0;{  tom.engine.adt.tomname.types.TomName  tomMatch171NameNumber_freshVar_13= null ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch171NameNumber_freshVar_6= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch171NameNumber_freshVar_7= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch171NameNumber_freshVar_4= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch171NameNumber_freshVar_5= null ;{  tom.engine.adt.tomname.types.TomName  tomMatch171NameNumber_freshVar_12= null ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch171NameNumber_freshVar_2= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch171NameNumber_freshVar_3= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch171NameNumberfreshSubject_3= null ;do {{ boolean tomMatch171NameNumber_freshVar_14= false ;if ( ( tomMatch171NameNumber_freshVar_15 >= 0 && tomMatch171NameNumber_freshVar_15 <= 0 ) ) {if ( (tom_appl instanceof tom.engine.adt.tomterm.types.TomTerm) ) {tomMatch171NameNumberfreshSubject_3=(( tom.engine.adt.tomterm.types.TomTerm )tom_appl);tomMatch171NameNumber_freshVar_3=tomMatch171NameNumberfreshSubject_3;if ( (tomMatch171NameNumber_freshVar_3 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {tomMatch171NameNumber_freshVar_2= tomMatch171NameNumber_freshVar_3.getNameList() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch171NameNumber_freshVar_8=tomMatch171NameNumber_freshVar_2;if ( ((tomMatch171NameNumber_freshVar_8 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch171NameNumber_freshVar_8 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {if (!( tomMatch171NameNumber_freshVar_8.isEmptyconcTomName() )) {tomMatch171NameNumber_freshVar_12= tomMatch171NameNumber_freshVar_8.getHeadconcTomName() ;if ( (tomMatch171NameNumber_freshVar_12==tom_childName) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch171NameNumber_freshVar_9= tomMatch171NameNumber_freshVar_8.getTailconcTomName() ;if ( tomMatch171NameNumber_freshVar_9.isEmptyconcTomName() ) {tomMatch171NameNumber_freshVar_14= true ;}}}}}}}}} else {if ( ( tomMatch171NameNumber_freshVar_15 >= 1 && tomMatch171NameNumber_freshVar_15 <= 1 ) ) {if ( (tom_appl instanceof tom.engine.adt.tomterm.types.TomTerm) ) {tomMatch171NameNumberfreshSubject_3=(( tom.engine.adt.tomterm.types.TomTerm )tom_appl);tomMatch171NameNumber_freshVar_5=tomMatch171NameNumberfreshSubject_3;if ( (tomMatch171NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm) ) {tomMatch171NameNumber_freshVar_4= tomMatch171NameNumber_freshVar_5.getTomTerm() ;tomMatch171NameNumber_freshVar_7=tomMatch171NameNumber_freshVar_4;if ( (tomMatch171NameNumber_freshVar_7 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {tomMatch171NameNumber_freshVar_6= tomMatch171NameNumber_freshVar_7.getNameList() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch171NameNumber_freshVar_10=tomMatch171NameNumber_freshVar_6;if ( ((tomMatch171NameNumber_freshVar_10 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch171NameNumber_freshVar_10 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {if (!( tomMatch171NameNumber_freshVar_10.isEmptyconcTomName() )) {tomMatch171NameNumber_freshVar_13= tomMatch171NameNumber_freshVar_10.getHeadconcTomName() ;if ( (tomMatch171NameNumber_freshVar_13==tom_childName) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch171NameNumber_freshVar_11= tomMatch171NameNumber_freshVar_10.getTailconcTomName() ;if ( tomMatch171NameNumber_freshVar_11.isEmptyconcTomName() ) {tomMatch171NameNumber_freshVar_14= true ;}}}}}}}}}}}if ((tomMatch171NameNumber_freshVar_14 ==  true )) {if ( true ) {


              TomTerm freshVariable = Compiler.getFreshVariableStar(Compiler.getTermTypeFromTerm(tom_t));                
              constraintList =  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_appl, freshVariable) ,tom_append_list_AndConstraint(constraintList, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )) ;
              newSlots = tom_append_list_concSlot(newSlots, tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(tomMatch171NameNumberfreshSubject_1.setAppl(freshVariable), tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) );
              break matchSlot;
            }}tomMatch171NameNumber_freshVar_15=tomMatch171NameNumber_freshVar_15 + 1;}} while(tomMatch171NameNumber_freshVar_15 < 2);}}}}}}}}}}}}}}}}}}}if ( (tom_slot instanceof tom.engine.adt.tomslot.types.Slot) ) {{  tom.engine.adt.tomslot.types.Slot  tomMatch171NameNumberfreshSubject_1=(( tom.engine.adt.tomslot.types.Slot )tom_slot);if ( (tom_name instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch171NameNumberfreshSubject_2=(( tom.engine.adt.tomname.types.TomName )tom_name);if ( true ) {


              newSlots = tom_append_list_concSlot(newSlots, tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(tomMatch171NameNumberfreshSubject_1, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) );
            }}}}}}
            
        }}}}}if ( tomMatch170NameNumber_end_3.isEmptyconcSlot() ) {tomMatch170NameNumber_end_3=tomMatch170NameNumber_begin_2;} else {tomMatch170NameNumber_end_3= tomMatch170NameNumber_end_3.getTailconcSlot() ;}}} while(!( (tomMatch170NameNumber_end_3==tomMatch170NameNumber_begin_2) ));}}}}}}}
  
      return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_t.setSlots(newSlots), tomMatch169NameNumber_freshVar_1) ,tom_append_list_AndConstraint(constraintList, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )) ;   
    }}}}}}}}}}}}}}}}}}}}}}}}

    // never gets here
    throw new TomRuntimeException("GeneralPurposePropagator:detachSublists - unexpected result");
  }
  
  
  private static class ReplaceMatchConstraint extends tom.library.sl.BasicStrategy {private  tom.engine.adt.tomname.types.TomName  varName;private  tom.engine.adt.tomterm.types.TomTerm  var;private  tom.engine.adt.tomterm.types.TomTerm  value;public ReplaceMatchConstraint( tom.engine.adt.tomname.types.TomName  varName,  tom.engine.adt.tomterm.types.TomTerm  var,  tom.engine.adt.tomterm.types.TomTerm  value) {super(( new tom.library.sl.Identity() ));this.varName=varName;this.var=var;this.value=value;}public  tom.engine.adt.tomname.types.TomName  getvarName() {return varName;}public  tom.engine.adt.tomterm.types.TomTerm  getvar() {return var;}public  tom.engine.adt.tomterm.types.TomTerm  getvalue() {return value;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch172NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch172NameNumber_freshVar_2=tomMatch172NameNumberfreshSubject_1;if ( (tomMatch172NameNumber_freshVar_2 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch172NameNumber_freshVar_0= tomMatch172NameNumber_freshVar_2.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch172NameNumber_freshVar_1= tomMatch172NameNumber_freshVar_2.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch172NameNumber_freshVar_5=tomMatch172NameNumber_freshVar_0;{ boolean tomMatch172NameNumber_freshVar_7= false ;{  tom.engine.adt.tomtype.types.TomType  tomMatch172NameNumber_freshVar_4= null ;{  tom.engine.adt.tomname.types.TomName  tomMatch172NameNumber_freshVar_3= null ;if ( (tomMatch172NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch172NameNumber_freshVar_7= true ;tomMatch172NameNumber_freshVar_3= tomMatch172NameNumber_freshVar_5.getAstName() ;tomMatch172NameNumber_freshVar_4= tomMatch172NameNumber_freshVar_5.getAstType() ;}} else {if ( (tomMatch172NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch172NameNumber_freshVar_7= true ;tomMatch172NameNumber_freshVar_3= tomMatch172NameNumber_freshVar_5.getAstName() ;tomMatch172NameNumber_freshVar_4= tomMatch172NameNumber_freshVar_5.getAstType() ;}}}if ((tomMatch172NameNumber_freshVar_7 ==  true )) {{  tom.engine.adt.tomtype.types.TomType  tom_type=tomMatch172NameNumber_freshVar_4;if ( (varName instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch172NameNumberfreshSubject_2=(( tom.engine.adt.tomname.types.TomName )varName);{  tom.engine.adt.tomname.types.TomName  tomMatch172NameNumber_freshVar_6=tomMatch172NameNumberfreshSubject_2;if ( (tomMatch172NameNumber_freshVar_6==tomMatch172NameNumber_freshVar_3) ) {if ( true ) {



        
        TomTerm freshVar = tomMatch172NameNumber_freshVar_0.isVariable() ? Compiler.getFreshVariable(tom_type) : Compiler.getFreshVariableStar(tom_type);
        return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(freshVar, tomMatch172NameNumber_freshVar_1) , tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make( tom.engine.adt.tomterm.types.tomterm.TestVar.make(freshVar) , var) , tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) ;
      }}}}}}}}}}}}}}}}}}return _visit_Constraint(tom__arg,introspector); }public  tom.engine.adt.tomconstraint.types.Constraint  _visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {return visit_Constraint((( tom.engine.adt.tomconstraint.types.Constraint )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_ReplaceMatchConstraint( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return new ReplaceMatchConstraint(t0,t1,t2);}



}

/* Generated by TOM (version 2.6): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2008, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Radu Kopetz e-mail: Radu.Kopetz@loria.fr
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/
package tom.engine.compiler.propagator;

import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomtype.types.*;
import tom.engine.adt.tomname.types.*;
import tom.library.sl.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.tools.SymbolTable;
import tom.engine.compiler.*;
import tom.engine.TomBase;
import tom.engine.tools.SymbolTable;
import java.util.*;
import tom.engine.exception.TomRuntimeException;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.compiler.Compiler;

/**
 * A propagator that contains rules that don't depend on the theory (or that are applicable for more than one)
 */
public class GeneralPurposePropagator implements IBasePropagator {

//--------------------------------------------------------
  /* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file */  /* Generated by TOM (version 2.6): Do not edit this file */    public static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if( l1.isEmptyconcTomName() ) {       return l2;     } else if( l2.isEmptyconcTomName() ) {       return l1;     } else if(  l1.getTailconcTomName() .isEmptyconcTomName() ) {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,l2) ;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,tom_append_list_concTomName( l1.getTailconcTomName() ,l2)) ;     }   }   public static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcTomName()  ||  (end== tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( begin.getHeadconcTomName() ,( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName( begin.getTailconcTomName() ,end,tail)) ;   }      public static   tom.engine.adt.tomconstraint.types.Constraint  tom_append_list_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  l1,  tom.engine.adt.tomconstraint.types.Constraint  l2) {     if( l1.isEmptyAndConstraint() ) {       return l2;     } else if( l2.isEmptyAndConstraint() ) {       return l1;     } else if( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) ) {       if( (( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getTailAndConstraint() : tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ).isEmptyAndConstraint() ) {         return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getHeadAndConstraint() :l1),l2) ;       } else {         return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getHeadAndConstraint() :l1),tom_append_list_AndConstraint((( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getTailAndConstraint() : tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ),l2)) ;       }     } else {       return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(l1,l2) ;     }   }   public static   tom.engine.adt.tomconstraint.types.Constraint  tom_get_slice_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  begin,  tom.engine.adt.tomconstraint.types.Constraint  end, tom.engine.adt.tomconstraint.types.Constraint  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyAndConstraint()  ||  (end== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((begin instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (begin instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? begin.getHeadAndConstraint() :begin),( tom.engine.adt.tomconstraint.types.Constraint )tom_get_slice_AndConstraint((( ((begin instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (begin instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? begin.getTailAndConstraint() : tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ),end,tail)) ;   }      public static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {     if( l1.isEmptyconcConstraint() ) {       return l2;     } else if( l2.isEmptyconcConstraint() ) {       return l1;     } else if(  l1.getTailconcConstraint() .isEmptyconcConstraint() ) {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,l2) ;     } else {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,tom_append_list_concConstraint( l1.getTailconcConstraint() ,l2)) ;     }   }   public static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end, tom.engine.adt.tomconstraint.types.ConstraintList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcConstraint()  ||  (end== tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( begin.getHeadconcConstraint() ,( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint( begin.getTailconcConstraint() ,end,tail)) ;   }      public static   tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList l1,  tom.engine.adt.tomslot.types.SlotList  l2) {     if( l1.isEmptyconcSlot() ) {       return l2;     } else if( l2.isEmptyconcSlot() ) {       return l1;     } else if(  l1.getTailconcSlot() .isEmptyconcSlot() ) {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,l2) ;     } else {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,tom_append_list_concSlot( l1.getTailconcSlot() ,l2)) ;     }   }   public static   tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end, tom.engine.adt.tomslot.types.SlotList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcSlot()  ||  (end== tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( begin.getHeadconcSlot() ,( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot( begin.getTailconcSlot() ,end,tail)) ;   }    /* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file */   public static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Sequence) )) {       if(( ((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Sequence(l1,l2) );     }   }   public static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end == null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin):new tom.library.sl.Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)) );   }    /* Generated by TOM (version 2.6): Do not edit this file */ /* Generated by TOM (version 2.6): Do not edit this file */public static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) );}   
	
//--------------------------------------------------------

  public Constraint propagate(Constraint constraint) throws VisitFailure {
    return (Constraint)tom_make_TopDown(tom_make_GeneralPropagations()).visitLight(constraint);
  }	

  public static class GeneralPropagations extends tom.library.sl.BasicStrategy {public GeneralPropagations() {super(( new tom.library.sl.Identity() ));}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch169NameNumber_freshVar_0=tom__arg;if ( (tomMatch169NameNumber_freshVar_0 instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tomMatch169NameNumber_freshVar_0);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_3=tomMatch169NameNumber_freshSubject_1;if ( (tomMatch169NameNumber_freshVar_3 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_1= tomMatch169NameNumber_freshVar_3.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_2= tomMatch169NameNumber_freshVar_3.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_5=tomMatch169NameNumber_freshVar_1;if ( (tomMatch169NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_4= tomMatch169NameNumber_freshVar_5.getTomTerm() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_6=tomMatch169NameNumber_freshVar_4;{ boolean tomMatch169NameNumber_freshVar_7= false ;if ( (tomMatch169NameNumber_freshVar_6 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {tomMatch169NameNumber_freshVar_7= true ;} else {if ( (tomMatch169NameNumber_freshVar_6 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {tomMatch169NameNumber_freshVar_7= true ;}}if ((tomMatch169NameNumber_freshVar_7 ==  true )) {{  tom.engine.adt.tomterm.types.TomTerm  tom_term=tomMatch169NameNumber_freshVar_4;{  tom.engine.adt.tomterm.types.TomTerm  tom_s=tomMatch169NameNumber_freshVar_2;







        
        return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.AntiMatchConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_term, tom_s) ) , tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(ConstraintPropagator.performDetach( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_term, tom_s) ), tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) 
;
      }}}}}}}}}}}}}}}{ Object tomMatch169NameNumber_freshVar_8=tom__arg;if ( (tomMatch169NameNumber_freshVar_8 instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tomMatch169NameNumber_freshVar_8);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_9=tomMatch169NameNumber_freshSubject_1;if ( ((tomMatch169NameNumber_freshVar_9 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_freshVar_9 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_begin_11=tomMatch169NameNumber_freshVar_9;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_end_12=tomMatch169NameNumber_freshVar_9;do {{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_10=tomMatch169NameNumber_end_12;if (!( (  tomMatch169NameNumber_freshVar_10.isEmptyAndConstraint()  ||  (tomMatch169NameNumber_freshVar_10== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) )) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_19=(( ((tomMatch169NameNumber_freshVar_10 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_freshVar_10 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_freshVar_10.getHeadAndConstraint() ):(tomMatch169NameNumber_freshVar_10));if ( (tomMatch169NameNumber_freshVar_19 instanceof tom.engine.adt.tomconstraint.types.constraint.AntiMatchConstraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_13=(( ((tomMatch169NameNumber_freshVar_10 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_freshVar_10 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_freshVar_10.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_begin_15=tomMatch169NameNumber_freshVar_13;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_end_16=tomMatch169NameNumber_freshVar_13;do {{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_14=tomMatch169NameNumber_end_16;if (!( (  tomMatch169NameNumber_freshVar_14.isEmptyAndConstraint()  ||  (tomMatch169NameNumber_freshVar_14== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) )) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_20=(( ((tomMatch169NameNumber_freshVar_14 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_freshVar_14 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_freshVar_14.getHeadAndConstraint() ):(tomMatch169NameNumber_freshVar_14));if ( (tomMatch169NameNumber_freshVar_20 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_17=(( ((tomMatch169NameNumber_freshVar_14 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_freshVar_14 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_freshVar_14.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));







        return tom_append_list_AndConstraint(tom_get_slice_AndConstraint(tomMatch169NameNumber_begin_11,tomMatch169NameNumber_end_12, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ),tom_append_list_AndConstraint(tom_get_slice_AndConstraint(tomMatch169NameNumber_begin_15,tomMatch169NameNumber_end_16, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ), tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((tomMatch169NameNumber_freshVar_14 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_freshVar_14 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_freshVar_14.getHeadAndConstraint() ):(tomMatch169NameNumber_freshVar_14)), tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((tomMatch169NameNumber_freshVar_10 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_freshVar_10 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_freshVar_10.getHeadAndConstraint() ):(tomMatch169NameNumber_freshVar_10)),tom_append_list_AndConstraint(tomMatch169NameNumber_freshVar_17, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )) ) ));        
      }}}}}if ( (  tomMatch169NameNumber_end_16.isEmptyAndConstraint()  ||  (tomMatch169NameNumber_end_16== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) ) {tomMatch169NameNumber_end_16=tomMatch169NameNumber_begin_15;} else {tomMatch169NameNumber_end_16=(( ((tomMatch169NameNumber_end_16 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_end_16 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_end_16.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));}}} while(!( (tomMatch169NameNumber_end_16==tomMatch169NameNumber_begin_15) ));}}}}}}}if ( (  tomMatch169NameNumber_end_12.isEmptyAndConstraint()  ||  (tomMatch169NameNumber_end_12== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) ) {tomMatch169NameNumber_end_12=tomMatch169NameNumber_begin_11;} else {tomMatch169NameNumber_end_12=(( ((tomMatch169NameNumber_end_12 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_end_12 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_end_12.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));}}} while(!( (tomMatch169NameNumber_end_12==tomMatch169NameNumber_begin_11) ));}}}}}}}{ Object tomMatch169NameNumber_freshVar_21=tom__arg;if ( (tomMatch169NameNumber_freshVar_21 instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tomMatch169NameNumber_freshVar_21);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_22=tomMatch169NameNumber_freshSubject_1;if ( (tomMatch169NameNumber_freshVar_22 instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_begin_24=tomMatch169NameNumber_freshVar_22;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_end_25=tomMatch169NameNumber_freshVar_22;do {{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_23=tomMatch169NameNumber_end_25;if (!( (  tomMatch169NameNumber_freshVar_23.isEmptyAndConstraint()  ||  (tomMatch169NameNumber_freshVar_23== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) )) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_29=(( ((tomMatch169NameNumber_freshVar_23 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_freshVar_23 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_freshVar_23.getHeadAndConstraint() ):(tomMatch169NameNumber_freshVar_23));if ( (tomMatch169NameNumber_freshVar_29 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_28= tomMatch169NameNumber_freshVar_29.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_31=tomMatch169NameNumber_freshVar_28;{ boolean tomMatch169NameNumber_freshVar_35= false ;{  tom.engine.adt.tomname.types.TomName  tomMatch169NameNumber_freshVar_30= null ;if ( (tomMatch169NameNumber_freshVar_31 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch169NameNumber_freshVar_35= true ;tomMatch169NameNumber_freshVar_30= tomMatch169NameNumber_freshVar_31.getAstName() ;}} else {if ( (tomMatch169NameNumber_freshVar_31 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch169NameNumber_freshVar_35= true ;tomMatch169NameNumber_freshVar_30= tomMatch169NameNumber_freshVar_31.getAstName() ;}}}if ((tomMatch169NameNumber_freshVar_35 ==  true )) {{  tom.engine.adt.tomname.types.TomName  tom_varName=tomMatch169NameNumber_freshVar_30;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_26=(( ((tomMatch169NameNumber_freshVar_23 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_freshVar_23 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_freshVar_23.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));{  tom.engine.adt.tomconstraint.types.Constraint  tom_Y=tomMatch169NameNumber_freshVar_26;{ boolean tomMatch169NameNumber_freshVar_34= false ;{  tom.engine.adt.tomname.types.TomName  tomMatch169NameNumber_freshVar_32=tomMatch169NameNumber_freshVar_30;if ( (tomMatch169NameNumber_freshVar_32 instanceof tom.engine.adt.tomname.types.tomname.PositionName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch169NameNumber_freshVar_33=tomMatch169NameNumber_freshVar_30;if ( (tomMatch169NameNumber_freshVar_33==tom_varName) ) {tomMatch169NameNumber_freshVar_34= true ;}}}}if ((tomMatch169NameNumber_freshVar_34 ==  false )) {







        // we cannot cache already renamed variables, because disjunctions have to be taken into account
        // for example: g(x) || f(x,x) -> ...
        Constraint res = (Constraint)tom_make_TopDown(tom_make_ReplaceMatchConstraint(tom_varName)).visitLight(tom_Y);
        if(res != tom_Y) {
          return tom_append_list_AndConstraint(tom_get_slice_AndConstraint(tomMatch169NameNumber_begin_24,tomMatch169NameNumber_end_25, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ), tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((tomMatch169NameNumber_freshVar_23 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_freshVar_23 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_freshVar_23.getHeadAndConstraint() ):(tomMatch169NameNumber_freshVar_23)), tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(res, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) );
        }
      }}}}}}}}}}}}}}if ( (  tomMatch169NameNumber_end_25.isEmptyAndConstraint()  ||  (tomMatch169NameNumber_end_25== tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) ) {tomMatch169NameNumber_end_25=tomMatch169NameNumber_begin_24;} else {tomMatch169NameNumber_end_25=(( ((tomMatch169NameNumber_end_25 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch169NameNumber_end_25 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch169NameNumber_end_25.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));}}} while(!( (tomMatch169NameNumber_end_25==tomMatch169NameNumber_begin_24) ));}}}}}}}{ Object tomMatch169NameNumber_freshVar_36=tom__arg;if ( (tomMatch169NameNumber_freshVar_36 instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tomMatch169NameNumber_freshVar_36);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_39=tomMatch169NameNumber_freshSubject_1;if ( (tomMatch169NameNumber_freshVar_39 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_37= tomMatch169NameNumber_freshVar_39.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_38= tomMatch169NameNumber_freshVar_39.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_41=tomMatch169NameNumber_freshVar_37;{ boolean tomMatch169NameNumber_freshVar_44= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch169NameNumber_freshVar_40= null ;if ( (tomMatch169NameNumber_freshVar_41 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch169NameNumber_freshVar_44= true ;tomMatch169NameNumber_freshVar_40= tomMatch169NameNumber_freshVar_41.getConstraints() ;}} else {if ( (tomMatch169NameNumber_freshVar_41 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch169NameNumber_freshVar_44= true ;tomMatch169NameNumber_freshVar_40= tomMatch169NameNumber_freshVar_41.getConstraints() ;}} else {if ( (tomMatch169NameNumber_freshVar_41 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar) ) {{tomMatch169NameNumber_freshVar_44= true ;tomMatch169NameNumber_freshVar_40= tomMatch169NameNumber_freshVar_41.getConstraints() ;}} else {if ( (tomMatch169NameNumber_freshVar_41 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable) ) {{tomMatch169NameNumber_freshVar_44= true ;tomMatch169NameNumber_freshVar_40= tomMatch169NameNumber_freshVar_41.getConstraints() ;}}}}}if ((tomMatch169NameNumber_freshVar_44 ==  true )) {{  tom.engine.adt.tomterm.types.TomTerm  tom_term=tomMatch169NameNumber_freshVar_37;{ boolean tomMatch169NameNumber_freshVar_43= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch169NameNumber_freshVar_42=tomMatch169NameNumber_freshVar_40;if ( ((tomMatch169NameNumber_freshVar_42 instanceof tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint) || (tomMatch169NameNumber_freshVar_42 instanceof tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint)) ) {if ( tomMatch169NameNumber_freshVar_42.isEmptyconcConstraint() ) {tomMatch169NameNumber_freshVar_43= true ;}}}if ((tomMatch169NameNumber_freshVar_43 ==  false )) {







        Constraint result = ConstraintPropagator.performDetach(tomMatch169NameNumber_freshSubject_1);
        if(tom_term.isVariable()) {
          result =  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_term.setConstraints( tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ), tomMatch169NameNumber_freshVar_38) , tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(result, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) ;
        }
        return result;
      }}}}}}}}}}}}}}{ Object tomMatch169NameNumber_freshVar_45=tom__arg;if ( (tomMatch169NameNumber_freshVar_45 instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tomMatch169NameNumber_freshVar_45);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch169NameNumber_freshVar_48=tomMatch169NameNumber_freshSubject_1;if ( (tomMatch169NameNumber_freshVar_48 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_46= tomMatch169NameNumber_freshVar_48.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_47= tomMatch169NameNumber_freshVar_48.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_49=tomMatch169NameNumber_freshVar_47;if ( (tomMatch169NameNumber_freshVar_49==tomMatch169NameNumber_freshVar_46) ) {




        return  tom.engine.adt.tomconstraint.types.constraint.TrueConstraint.make() ;
      }}}}}}}}}}return _visit_Constraint(tom__arg,introspector); }public  tom.engine.adt.tomconstraint.types.Constraint  _visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {return visit_Constraint((( tom.engine.adt.tomconstraint.types.Constraint )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}public static  tom.library.sl.Strategy  tom_make_GeneralPropagations() { return new GeneralPropagations();}


// end %strategy
  
  /**
   * Detach sublists
   * 
   * Make sure that the sublists in a list are replaced by star variables 
   * this is only happening when the lists and the sublists have the same name
   * 
   * conc(X*,conc(some_pattern),Y*) << t -> conc(X*,Z*,Y*) << t /\ conc(some_pattern) << Z*  
   * 
   */ 
  public static Constraint detachSublists(Constraint constraint) {
    // will hold the new slots of t
    SlotList newSlots =  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ;
    Constraint constraintList =  tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ;
    {{ Object tomMatch170NameNumber_freshVar_0=constraint;if ( (tomMatch170NameNumber_freshVar_0 instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch170NameNumber_freshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tomMatch170NameNumber_freshVar_0);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch170NameNumber_freshVar_3=tomMatch170NameNumber_freshSubject_1;if ( (tomMatch170NameNumber_freshVar_3 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch170NameNumber_freshVar_1= tomMatch170NameNumber_freshVar_3.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch170NameNumber_freshVar_2= tomMatch170NameNumber_freshVar_3.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch170NameNumber_freshVar_6=tomMatch170NameNumber_freshVar_1;if ( (tomMatch170NameNumber_freshVar_6 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch170NameNumber_freshVar_4= tomMatch170NameNumber_freshVar_6.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch170NameNumber_freshVar_5= tomMatch170NameNumber_freshVar_6.getSlots() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch170NameNumber_freshVar_7=tomMatch170NameNumber_freshVar_4;if ( ((tomMatch170NameNumber_freshVar_7 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch170NameNumber_freshVar_7 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {if (!( tomMatch170NameNumber_freshVar_7.isEmptyconcTomName() )) {{  tom.engine.adt.tomname.types.TomName  tomMatch170NameNumber_freshVar_9= tomMatch170NameNumber_freshVar_7.getHeadconcTomName() ;if ( (tomMatch170NameNumber_freshVar_9 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  tom.engine.adt.tomname.types.TomName  tom_name= tomMatch170NameNumber_freshVar_7.getHeadconcTomName() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch170NameNumber_freshVar_8= tomMatch170NameNumber_freshVar_7.getTailconcTomName() ;if ( tomMatch170NameNumber_freshVar_8.isEmptyconcTomName() ) {{  tom.engine.adt.tomslot.types.SlotList  tom_slots=tomMatch170NameNumber_freshVar_5;{  tom.engine.adt.tomterm.types.TomTerm  tom_t=tomMatch170NameNumber_freshVar_1;{ boolean tomMatch170NameNumber_freshVar_12= false ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch170NameNumber_freshVar_10=tomMatch170NameNumber_freshVar_5;if ( ((tomMatch170NameNumber_freshVar_10 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch170NameNumber_freshVar_10 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch170NameNumber_freshVar_11=tomMatch170NameNumber_freshVar_5;if ( (tomMatch170NameNumber_freshVar_11==tom_slots) ) {if ( tomMatch170NameNumber_freshVar_10.isEmptyconcSlot() ) {tomMatch170NameNumber_freshVar_12= true ;}}}}}if ((tomMatch170NameNumber_freshVar_12 ==  false )) {{{ Object tomMatch171NameNumber_freshVar_0=tom_slots;if ( (tomMatch171NameNumber_freshVar_0 instanceof tom.engine.adt.tomslot.types.SlotList) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch171NameNumber_freshSubject_1=(( tom.engine.adt.tomslot.types.SlotList )tomMatch171NameNumber_freshVar_0);{  tom.engine.adt.tomslot.types.SlotList  tomMatch171NameNumber_freshVar_1=tomMatch171NameNumber_freshSubject_1;if ( ((tomMatch171NameNumber_freshVar_1 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch171NameNumber_freshVar_1 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch171NameNumber_begin_3=tomMatch171NameNumber_freshVar_1;{  tom.engine.adt.tomslot.types.SlotList  tomMatch171NameNumber_end_4=tomMatch171NameNumber_freshVar_1;do {{{  tom.engine.adt.tomslot.types.SlotList  tomMatch171NameNumber_freshVar_2=tomMatch171NameNumber_end_4;if (!( tomMatch171NameNumber_freshVar_2.isEmptyconcSlot() )) {{  tom.engine.adt.tomslot.types.Slot  tom_slot= tomMatch171NameNumber_freshVar_2.getHeadconcSlot() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch171NameNumber_freshVar_5= tomMatch171NameNumber_freshVar_2.getTailconcSlot() ;




matchSlot:  {{ Object tomMatch172NameNumber_freshVar_0=tom_slot;if ( (tomMatch172NameNumber_freshVar_0 instanceof tom.engine.adt.tomslot.types.Slot) ) {{  tom.engine.adt.tomslot.types.Slot  tomMatch172NameNumber_freshSubject_1=(( tom.engine.adt.tomslot.types.Slot )tomMatch172NameNumber_freshVar_0);{  tom.engine.adt.tomslot.types.Slot  tomMatch172NameNumber_freshVar_5=tomMatch172NameNumber_freshSubject_1;if ( (tomMatch172NameNumber_freshVar_5 instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch172NameNumber_freshVar_4= tomMatch172NameNumber_freshVar_5.getAppl() ;{  tom.engine.adt.tomterm.types.TomTerm  tom_appl=tomMatch172NameNumber_freshVar_4;{ Object tomMatch172NameNumber_freshVar_1=tom_name;if ( (tomMatch172NameNumber_freshVar_1 instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch172NameNumber_freshSubject_2=(( tom.engine.adt.tomname.types.TomName )tomMatch172NameNumber_freshVar_1);{  tom.engine.adt.tomname.types.TomName  tom_childName=tomMatch172NameNumber_freshSubject_2;{ int tomMatch172NameNumber_freshVar_19=0;{  tom.engine.adt.tomname.types.TomName  tomMatch172NameNumber_freshVar_17= null ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch172NameNumber_freshVar_10= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch172NameNumber_freshVar_11= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch172NameNumber_freshVar_8= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch172NameNumber_freshVar_9= null ;{ Object tomMatch172NameNumber_freshVar_3= null ;{  tom.engine.adt.tomname.types.TomName  tomMatch172NameNumber_freshVar_16= null ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch172NameNumber_freshVar_6= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch172NameNumber_freshVar_7= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch172NameNumber_freshSubject_3= null ;{ Object tomMatch172NameNumber_freshVar_2= null ;do {{ boolean tomMatch172NameNumber_freshVar_18= false ;if ( ( tomMatch172NameNumber_freshVar_19 >= 0 && tomMatch172NameNumber_freshVar_19 <= 0 ) ) {tomMatch172NameNumber_freshVar_2=tom_appl;if ( (tomMatch172NameNumber_freshVar_2 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {tomMatch172NameNumber_freshSubject_3=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch172NameNumber_freshVar_2);tomMatch172NameNumber_freshVar_7=tomMatch172NameNumber_freshSubject_3;if ( (tomMatch172NameNumber_freshVar_7 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {tomMatch172NameNumber_freshVar_6= tomMatch172NameNumber_freshVar_7.getNameList() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch172NameNumber_freshVar_12=tomMatch172NameNumber_freshVar_6;if ( ((tomMatch172NameNumber_freshVar_12 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch172NameNumber_freshVar_12 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {if (!( tomMatch172NameNumber_freshVar_12.isEmptyconcTomName() )) {tomMatch172NameNumber_freshVar_16= tomMatch172NameNumber_freshVar_12.getHeadconcTomName() ;if ( (tomMatch172NameNumber_freshVar_16==tom_childName) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch172NameNumber_freshVar_13= tomMatch172NameNumber_freshVar_12.getTailconcTomName() ;if ( tomMatch172NameNumber_freshVar_13.isEmptyconcTomName() ) {tomMatch172NameNumber_freshVar_18= true ;}}}}}}}}} else {if ( ( tomMatch172NameNumber_freshVar_19 >= 1 && tomMatch172NameNumber_freshVar_19 <= 1 ) ) {tomMatch172NameNumber_freshVar_3=tom_appl;if ( (tomMatch172NameNumber_freshVar_3 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {tomMatch172NameNumber_freshSubject_3=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch172NameNumber_freshVar_3);tomMatch172NameNumber_freshVar_9=tomMatch172NameNumber_freshSubject_3;if ( (tomMatch172NameNumber_freshVar_9 instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm) ) {tomMatch172NameNumber_freshVar_8= tomMatch172NameNumber_freshVar_9.getTomTerm() ;tomMatch172NameNumber_freshVar_11=tomMatch172NameNumber_freshVar_8;if ( (tomMatch172NameNumber_freshVar_11 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {tomMatch172NameNumber_freshVar_10= tomMatch172NameNumber_freshVar_11.getNameList() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch172NameNumber_freshVar_14=tomMatch172NameNumber_freshVar_10;if ( ((tomMatch172NameNumber_freshVar_14 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch172NameNumber_freshVar_14 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {if (!( tomMatch172NameNumber_freshVar_14.isEmptyconcTomName() )) {tomMatch172NameNumber_freshVar_17= tomMatch172NameNumber_freshVar_14.getHeadconcTomName() ;if ( (tomMatch172NameNumber_freshVar_17==tom_childName) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch172NameNumber_freshVar_15= tomMatch172NameNumber_freshVar_14.getTailconcTomName() ;if ( tomMatch172NameNumber_freshVar_15.isEmptyconcTomName() ) {tomMatch172NameNumber_freshVar_18= true ;}}}}}}}}}}}if ((tomMatch172NameNumber_freshVar_18 ==  true )) {


                  TomTerm freshVariable = Compiler.getFreshVariableStar(Compiler.getTermTypeFromTerm(tom_t));                
                  constraintList =  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_appl, freshVariable) ,tom_append_list_AndConstraint(constraintList, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )) ;
                  newSlots = tom_append_list_concSlot(newSlots, tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(tomMatch172NameNumber_freshSubject_1.setAppl(freshVariable), tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) );
                  break matchSlot;
                }tomMatch172NameNumber_freshVar_19=tomMatch172NameNumber_freshVar_19 + 1;}} while(tomMatch172NameNumber_freshVar_19 < 2);}}}}}}}}}}}}}}}}}}}}}}}{ Object tomMatch172NameNumber_freshVar_20=tom_slot;if ( (tomMatch172NameNumber_freshVar_20 instanceof tom.engine.adt.tomslot.types.Slot) ) {{  tom.engine.adt.tomslot.types.Slot  tomMatch172NameNumber_freshSubject_1=(( tom.engine.adt.tomslot.types.Slot )tomMatch172NameNumber_freshVar_20);{ Object tomMatch172NameNumber_freshVar_21=tom_name;if ( (tomMatch172NameNumber_freshVar_21 instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch172NameNumber_freshSubject_2=(( tom.engine.adt.tomname.types.TomName )tomMatch172NameNumber_freshVar_21);


                newSlots = tom_append_list_concSlot(newSlots, tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(tomMatch172NameNumber_freshSubject_1, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) );
              }}}}}}}

          }}}}if ( tomMatch171NameNumber_end_4.isEmptyconcSlot() ) {tomMatch171NameNumber_end_4=tomMatch171NameNumber_begin_3;} else {tomMatch171NameNumber_end_4= tomMatch171NameNumber_end_4.getTailconcSlot() ;}}} while(!( (tomMatch171NameNumber_end_4==tomMatch171NameNumber_begin_3) ));}}}}}}}}

        return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_t.setSlots(newSlots), tomMatch170NameNumber_freshVar_2) ,tom_append_list_AndConstraint(constraintList, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )) ;   
      }}}}}}}}}}}}}}}}}}}}}}}}

    // never gets here
    throw new TomRuntimeException("GeneralPurposePropagator:detachSublists - unexpected result");
  }
 
  /*
   * x << s -> fresh << s ^ fresh==x
   */
  public static class ReplaceMatchConstraint extends tom.library.sl.BasicStrategy {private  tom.engine.adt.tomname.types.TomName  varName;public ReplaceMatchConstraint( tom.engine.adt.tomname.types.TomName  varName) {super(( new tom.library.sl.Identity() ));this.varName=varName;}public  tom.engine.adt.tomname.types.TomName  getvarName() {return varName;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch173NameNumber_freshVar_0=tom__arg;if ( (tomMatch173NameNumber_freshVar_0 instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch173NameNumber_freshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tomMatch173NameNumber_freshVar_0);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch173NameNumber_freshVar_3=tomMatch173NameNumber_freshSubject_1;if ( (tomMatch173NameNumber_freshVar_3 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch173NameNumber_freshVar_1= tomMatch173NameNumber_freshVar_3.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch173NameNumber_freshVar_2= tomMatch173NameNumber_freshVar_3.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch173NameNumber_freshVar_6=tomMatch173NameNumber_freshVar_1;{ boolean tomMatch173NameNumber_freshVar_7= false ;{  tom.engine.adt.tomtype.types.TomType  tomMatch173NameNumber_freshVar_5= null ;{  tom.engine.adt.tomname.types.TomName  tomMatch173NameNumber_freshVar_4= null ;if ( (tomMatch173NameNumber_freshVar_6 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch173NameNumber_freshVar_7= true ;tomMatch173NameNumber_freshVar_4= tomMatch173NameNumber_freshVar_6.getAstName() ;tomMatch173NameNumber_freshVar_5= tomMatch173NameNumber_freshVar_6.getAstType() ;}} else {if ( (tomMatch173NameNumber_freshVar_6 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch173NameNumber_freshVar_7= true ;tomMatch173NameNumber_freshVar_4= tomMatch173NameNumber_freshVar_6.getAstName() ;tomMatch173NameNumber_freshVar_5= tomMatch173NameNumber_freshVar_6.getAstType() ;}}}if ((tomMatch173NameNumber_freshVar_7 ==  true )) {if ( (varName==tomMatch173NameNumber_freshVar_4) ) {{  tom.engine.adt.tomtype.types.TomType  tom_type=tomMatch173NameNumber_freshVar_5;{  tom.engine.adt.tomterm.types.TomTerm  tom_var=tomMatch173NameNumber_freshVar_1;



        
        TomTerm freshVar = tom_var.isVariable() ? Compiler.getFreshVariable(tom_type) : Compiler.getFreshVariableStar(tom_type);
        return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(freshVar, tomMatch173NameNumber_freshVar_2) , tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make( tom.engine.adt.tomterm.types.tomterm.TestVar.make(freshVar) , tom_var) , tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) ;
      }}}}}}}}}}}}}}}}return _visit_Constraint(tom__arg,introspector); }public  tom.engine.adt.tomconstraint.types.Constraint  _visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {return visit_Constraint((( tom.engine.adt.tomconstraint.types.Constraint )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}public static  tom.library.sl.Strategy  tom_make_ReplaceMatchConstraint( tom.engine.adt.tomname.types.TomName  t0) { return new ReplaceMatchConstraint(t0);}



}

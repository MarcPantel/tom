/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Radu Kopetz e-mail: Radu.Kopetz@loria.fr
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/
package tom.engine.compiler.propagator;

import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomtype.types.*;
import tom.engine.adt.tomname.types.*;
import tom.library.sl.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.tools.SymbolTable;
import tom.engine.compiler.*;
import tom.engine.TomBase;
import tom.engine.tools.SymbolTable;
import java.util.*;
import tom.engine.exception.TomRuntimeException;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.compiler.Compiler;

/**
 * A propagator that contains rules that don't depend on the theory (or that are applicable for more than one)
 */
public class GeneralPurposePropagator implements IBasePropagator {

//--------------------------------------------------------
  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if( l1.isEmptyconcTomName() ) {       return l2;     } else if( l2.isEmptyconcTomName() ) {       return l1;     } else if(  l1.getTailconcTomName() .isEmptyconcTomName() ) {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,l2) ;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,tom_append_list_concTomName( l1.getTailconcTomName() ,l2)) ;     }   }   private static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( begin.getHeadconcTomName() ,( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName( begin.getTailconcTomName() ,end,tail)) ;     }   }      private static   tom.engine.adt.tomconstraint.types.Constraint  tom_append_list_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  l1,  tom.engine.adt.tomconstraint.types.Constraint  l2) {     if( l1.isEmptyAndConstraint() ) {       return l2;     } else if( l2.isEmptyAndConstraint() ) {       return l1;     } else if( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) ) {       if( (( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getTailAndConstraint() : tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ).isEmptyAndConstraint() ) {         return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getHeadAndConstraint() :l1),l2) ;       } else {         return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getHeadAndConstraint() :l1),tom_append_list_AndConstraint((( ((l1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (l1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? l1.getTailAndConstraint() : tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ),l2)) ;       }     } else {       return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(l1,l2) ;     }   }   private static   tom.engine.adt.tomconstraint.types.Constraint  tom_get_slice_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  begin,  tom.engine.adt.tomconstraint.types.Constraint  end, tom.engine.adt.tomconstraint.types.Constraint  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((begin instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (begin instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? begin.getHeadAndConstraint() :begin),( tom.engine.adt.tomconstraint.types.Constraint )tom_get_slice_AndConstraint((( ((begin instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (begin instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )? begin.getTailAndConstraint() : tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ),end,tail)) ;     }   }      private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {     if( l1.isEmptyconcConstraint() ) {       return l2;     } else if( l2.isEmptyconcConstraint() ) {       return l1;     } else if(  l1.getTailconcConstraint() .isEmptyconcConstraint() ) {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,l2) ;     } else {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,tom_append_list_concConstraint( l1.getTailconcConstraint() ,l2)) ;     }   }   private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end, tom.engine.adt.tomconstraint.types.ConstraintList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( begin.getHeadconcConstraint() ,( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint( begin.getTailconcConstraint() ,end,tail)) ;     }   }      private static   tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList l1,  tom.engine.adt.tomslot.types.SlotList  l2) {     if( l1.isEmptyconcSlot() ) {       return l2;     } else if( l2.isEmptyconcSlot() ) {       return l1;     } else if(  l1.getTailconcSlot() .isEmptyconcSlot() ) {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,l2) ;     } else {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,tom_append_list_concSlot( l1.getTailconcSlot() ,l2)) ;     }   }   private static   tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end, tom.engine.adt.tomslot.types.SlotList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( begin.getHeadconcSlot() ,( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot( begin.getTailconcSlot() ,end,tail)) ;     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Sequence) )) {       if(( ((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Sequence(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else {       return ( (( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin):new tom.library.sl.Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)) );     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) ); }   
	
//--------------------------------------------------------

  // contains variables that were already replaced (for optimizing reasons)
  private static ArrayList replacedVariables = null; 

  public Constraint propagate(Constraint constraint) throws VisitFailure {
    replacedVariables = new ArrayList();
    return  (Constraint)tom_make_TopDown(tom_make_GeneralPropagations()).visitLight(constraint);
  }	

  private static class GeneralPropagations extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {public GeneralPropagations() { super(( new tom.library.sl.Identity() ));}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if ( (tomMatch166NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch166NameNumber_freshVar_0= tomMatch166NameNumberfreshSubject_1.getpattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch166NameNumber_freshVar_1= tomMatch166NameNumberfreshSubject_1.getsubject() ;if ( (tomMatch166NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch166NameNumber_freshVar_2= tomMatch166NameNumber_freshVar_0.getTomTerm() ;{ boolean tomMatch166NameNumber_freshVar_3= false ;if ( (tomMatch166NameNumber_freshVar_2 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {tomMatch166NameNumber_freshVar_3= true ;} else {if ( (tomMatch166NameNumber_freshVar_2 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {tomMatch166NameNumber_freshVar_3= true ;}}if ((tomMatch166NameNumber_freshVar_3 ==  true )) {{  tom.engine.adt.tomterm.types.TomTerm  tom_term=tomMatch166NameNumber_freshVar_2;{  tom.engine.adt.tomterm.types.TomTerm  tom_s=tomMatch166NameNumber_freshVar_1;if ( true ) {







        
        return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.AntiMatchConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_term, tom_s) ) , tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(ConstraintPropagator.performDetach( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_term, tom_s) ), tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) 
;
      }}}}}}}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if ( ((tomMatch166NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_freshVar_4=tomMatch166NameNumberfreshSubject_1;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_begin_6=tomMatch166NameNumber_freshVar_4;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_end_7=tomMatch166NameNumber_freshVar_4;do {{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_freshVar_5=tomMatch166NameNumber_end_7;if (!( (  tomMatch166NameNumber_freshVar_5.isEmptyAndConstraint()  ||  tomMatch166NameNumber_freshVar_5.equals( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) )) {if ( ((( ((tomMatch166NameNumber_freshVar_5 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_freshVar_5 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_freshVar_5.getHeadAndConstraint() ):(tomMatch166NameNumber_freshVar_5)) instanceof tom.engine.adt.tomconstraint.types.constraint.AntiMatchConstraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_freshVar_8=(( ((tomMatch166NameNumber_freshVar_5 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_freshVar_5 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_freshVar_5.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_begin_10=tomMatch166NameNumber_freshVar_8;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_end_11=tomMatch166NameNumber_freshVar_8;do {{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_freshVar_9=tomMatch166NameNumber_end_11;if (!( (  tomMatch166NameNumber_freshVar_9.isEmptyAndConstraint()  ||  tomMatch166NameNumber_freshVar_9.equals( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) )) {if ( ((( ((tomMatch166NameNumber_freshVar_9 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_freshVar_9 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_freshVar_9.getHeadAndConstraint() ):(tomMatch166NameNumber_freshVar_9)) instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_freshVar_12=(( ((tomMatch166NameNumber_freshVar_9 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_freshVar_9 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_freshVar_9.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));if ( true ) {







        return tom_append_list_AndConstraint(tom_get_slice_AndConstraint(tomMatch166NameNumber_begin_6,tomMatch166NameNumber_end_7, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ),tom_append_list_AndConstraint(tom_get_slice_AndConstraint(tomMatch166NameNumber_begin_10,tomMatch166NameNumber_end_11, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ), tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((tomMatch166NameNumber_freshVar_9 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_freshVar_9 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_freshVar_9.getHeadAndConstraint() ):(tomMatch166NameNumber_freshVar_9)), tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((tomMatch166NameNumber_freshVar_5 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_freshVar_5 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_freshVar_5.getHeadAndConstraint() ):(tomMatch166NameNumber_freshVar_5)),tom_append_list_AndConstraint(tomMatch166NameNumber_freshVar_12, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )) ) ));        
      }}}}}if ( (  tomMatch166NameNumber_end_11.isEmptyAndConstraint()  ||  tomMatch166NameNumber_end_11.equals( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) ) {tomMatch166NameNumber_end_11=tomMatch166NameNumber_begin_10;} else {tomMatch166NameNumber_end_11=(( ((tomMatch166NameNumber_end_11 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_end_11 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_end_11.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));}}} while(!( tomMatch166NameNumber_end_11.equals(tomMatch166NameNumber_begin_10) ));}}}}}}if ( (  tomMatch166NameNumber_end_7.isEmptyAndConstraint()  ||  tomMatch166NameNumber_end_7.equals( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) ) {tomMatch166NameNumber_end_7=tomMatch166NameNumber_begin_6;} else {tomMatch166NameNumber_end_7=(( ((tomMatch166NameNumber_end_7 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_end_7 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_end_7.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));}}} while(!( tomMatch166NameNumber_end_7.equals(tomMatch166NameNumber_begin_6) ));}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if ( ((tomMatch166NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_freshVar_14=tomMatch166NameNumberfreshSubject_1;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_begin_16=tomMatch166NameNumber_freshVar_14;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_end_17=tomMatch166NameNumber_freshVar_14;do {{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_freshVar_15=tomMatch166NameNumber_end_17;if (!( (  tomMatch166NameNumber_freshVar_15.isEmptyAndConstraint()  ||  tomMatch166NameNumber_freshVar_15.equals( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) )) {if ( ((( ((tomMatch166NameNumber_freshVar_15 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_freshVar_15 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_freshVar_15.getHeadAndConstraint() ):(tomMatch166NameNumber_freshVar_15)) instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch166NameNumber_freshVar_20= (( ((tomMatch166NameNumber_freshVar_15 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_freshVar_15 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_freshVar_15.getHeadAndConstraint() ):(tomMatch166NameNumber_freshVar_15)).getpattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch166NameNumber_freshVar_21= (( ((tomMatch166NameNumber_freshVar_15 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_freshVar_15 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_freshVar_15.getHeadAndConstraint() ):(tomMatch166NameNumber_freshVar_15)).getsubject() ;{ boolean tomMatch166NameNumber_freshVar_26= false ;{  tom.engine.adt.tomtype.types.TomType  tomMatch166NameNumber_freshVar_23= null ;{  tom.engine.adt.tomname.types.TomName  tomMatch166NameNumber_freshVar_22= null ;if ( (tomMatch166NameNumber_freshVar_20 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch166NameNumber_freshVar_26= true ;tomMatch166NameNumber_freshVar_22= tomMatch166NameNumber_freshVar_20.getAstName() ;tomMatch166NameNumber_freshVar_23= tomMatch166NameNumber_freshVar_20.getAstType() ;}} else {if ( (tomMatch166NameNumber_freshVar_20 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch166NameNumber_freshVar_26= true ;tomMatch166NameNumber_freshVar_22= tomMatch166NameNumber_freshVar_20.getAstName() ;tomMatch166NameNumber_freshVar_23= tomMatch166NameNumber_freshVar_20.getAstType() ;}}}if ((tomMatch166NameNumber_freshVar_26 ==  true )) {{  tom.engine.adt.tomname.types.TomName  tom_x=tomMatch166NameNumber_freshVar_22;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumber_freshVar_18=(( ((tomMatch166NameNumber_freshVar_15 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_freshVar_15 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_freshVar_15.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));{ boolean tomMatch166NameNumber_freshVar_25= false ;if ( (tomMatch166NameNumber_freshVar_22 instanceof tom.engine.adt.tomname.types.tomname.PositionName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch166NameNumber_freshVar_24=tomMatch166NameNumber_freshVar_22;if ( tomMatch166NameNumber_freshVar_24.equals(tom_x) ) {tomMatch166NameNumber_freshVar_25= true ;}}}if ((tomMatch166NameNumber_freshVar_25 ==  false )) {if ( true ) {











        if (!replacedVariables.contains(tom_x)){
          replacedVariables.add(tom_x);
          Constraint toApplyOn = tom_append_list_AndConstraint(tomMatch166NameNumber_freshVar_18, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() );
          Constraint res = (Constraint)tom_make_TopDown(tom_make_ReplaceMatchConstraint(tom_x,tomMatch166NameNumber_freshVar_20,tomMatch166NameNumber_freshVar_21)).visitLight(toApplyOn);
          if(res != toApplyOn) {
            return tom_append_list_AndConstraint(tom_get_slice_AndConstraint(tomMatch166NameNumber_begin_16,tomMatch166NameNumber_end_17, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ), tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make((( ((tomMatch166NameNumber_freshVar_15 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_freshVar_15 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_freshVar_15.getHeadAndConstraint() ):(tomMatch166NameNumber_freshVar_15)), tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(res, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) );
          }
        }
      }}}}}}}}}}}}}}if ( (  tomMatch166NameNumber_end_17.isEmptyAndConstraint()  ||  tomMatch166NameNumber_end_17.equals( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )  ) ) {tomMatch166NameNumber_end_17=tomMatch166NameNumber_begin_16;} else {tomMatch166NameNumber_end_17=(( ((tomMatch166NameNumber_end_17 instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint) || (tomMatch166NameNumber_end_17 instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint)) )?( tomMatch166NameNumber_end_17.getTailAndConstraint() ):( tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ));}}} while(!( tomMatch166NameNumber_end_17.equals(tomMatch166NameNumber_begin_16) ));}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if ( (tomMatch166NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch166NameNumber_freshVar_27= tomMatch166NameNumberfreshSubject_1.getpattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch166NameNumber_freshVar_28= tomMatch166NameNumberfreshSubject_1.getsubject() ;{ boolean tomMatch166NameNumber_freshVar_32= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch166NameNumber_freshVar_29= null ;if ( (tomMatch166NameNumber_freshVar_27 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch166NameNumber_freshVar_32= true ;tomMatch166NameNumber_freshVar_29= tomMatch166NameNumber_freshVar_27.getConstraints() ;}} else {if ( (tomMatch166NameNumber_freshVar_27 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch166NameNumber_freshVar_32= true ;tomMatch166NameNumber_freshVar_29= tomMatch166NameNumber_freshVar_27.getConstraints() ;}} else {if ( (tomMatch166NameNumber_freshVar_27 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar) ) {{tomMatch166NameNumber_freshVar_32= true ;tomMatch166NameNumber_freshVar_29= tomMatch166NameNumber_freshVar_27.getConstraints() ;}} else {if ( (tomMatch166NameNumber_freshVar_27 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable) ) {{tomMatch166NameNumber_freshVar_32= true ;tomMatch166NameNumber_freshVar_29= tomMatch166NameNumber_freshVar_27.getConstraints() ;}}}}}if ((tomMatch166NameNumber_freshVar_32 ==  true )) {{  tom.engine.adt.tomterm.types.TomTerm  tom_term=tomMatch166NameNumber_freshVar_27;{ boolean tomMatch166NameNumber_freshVar_31= false ;if ( ((tomMatch166NameNumber_freshVar_29 instanceof tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint) || (tomMatch166NameNumber_freshVar_29 instanceof tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint)) ) {{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch166NameNumber_freshVar_30=tomMatch166NameNumber_freshVar_29;if ( tomMatch166NameNumber_freshVar_30.isEmptyconcConstraint() ) {tomMatch166NameNumber_freshVar_31= true ;}}}if ((tomMatch166NameNumber_freshVar_31 ==  false )) {if ( true ) {







        Constraint result = ConstraintPropagator.performDetach(tomMatch166NameNumberfreshSubject_1);
        if (tom_term.isVariable()) {
          result =  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_term.setConstraints( tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ), tomMatch166NameNumber_freshVar_28) , tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(result, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) ;
        }
        return result;
      }}}}}}}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch166NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if ( (tomMatch166NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch166NameNumber_freshVar_33= tomMatch166NameNumberfreshSubject_1.getpattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch166NameNumber_freshVar_34= tomMatch166NameNumberfreshSubject_1.getsubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch166NameNumber_freshVar_35=tomMatch166NameNumber_freshVar_34;if ( tomMatch166NameNumber_freshVar_35.equals(tomMatch166NameNumber_freshVar_33) ) {if ( true ) {




        return  tom.engine.adt.tomconstraint.types.constraint.TrueConstraint.make() ;
      }}}}}}}}}return super.visit_Constraint(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_GeneralPropagations() { return new GeneralPropagations(); }


// end %strategy
  
  /**
   * Detach sublists
   * 
   * Make sure that the sublists in a list are replaced by star variables - this is only happening 
   * when the lists and the sublists have the same name
   * 
   * conc(X*,conc(some_pattern),Y*) << t -> conc(X*,Z*,Y*) << t /\ conc(some_pattern) << Z*  
   * 
   */ 
  public static Constraint detachSublists(Constraint constraint) {
    // will hold the new slots of t
    SlotList newSlots =  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ;
    Constraint constraintList =  tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ;
    {if ( (constraint instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch167NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )constraint);if ( (tomMatch167NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch167NameNumber_freshVar_0= tomMatch167NameNumberfreshSubject_1.getpattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch167NameNumber_freshVar_1= tomMatch167NameNumberfreshSubject_1.getsubject() ;if ( (tomMatch167NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch167NameNumber_freshVar_2= tomMatch167NameNumber_freshVar_0.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch167NameNumber_freshVar_3= tomMatch167NameNumber_freshVar_0.getSlots() ;if ( ((tomMatch167NameNumber_freshVar_2 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch167NameNumber_freshVar_2 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch167NameNumber_freshVar_4=tomMatch167NameNumber_freshVar_2;if (!( tomMatch167NameNumber_freshVar_4.isEmptyconcTomName() )) {if ( ( tomMatch167NameNumber_freshVar_4.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  tom.engine.adt.tomname.types.TomName  tom_name= tomMatch167NameNumber_freshVar_4.getHeadconcTomName() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch167NameNumber_freshVar_5= tomMatch167NameNumber_freshVar_4.getTailconcTomName() ;if ( tomMatch167NameNumber_freshVar_5.isEmptyconcTomName() ) {{  tom.engine.adt.tomslot.types.SlotList  tom_slots=tomMatch167NameNumber_freshVar_3;{  tom.engine.adt.tomterm.types.TomTerm  tom_t=tomMatch167NameNumber_freshVar_0;{ boolean tomMatch167NameNumber_freshVar_8= false ;if ( ((tomMatch167NameNumber_freshVar_3 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch167NameNumber_freshVar_3 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch167NameNumber_freshVar_6=tomMatch167NameNumber_freshVar_3;{  tom.engine.adt.tomslot.types.SlotList  tomMatch167NameNumber_freshVar_7=tomMatch167NameNumber_freshVar_3;if ( tomMatch167NameNumber_freshVar_7.equals(tom_slots) ) {if ( tomMatch167NameNumber_freshVar_6.isEmptyconcSlot() ) {tomMatch167NameNumber_freshVar_8= true ;}}}}}if ((tomMatch167NameNumber_freshVar_8 ==  false )) {if ( true ) {{if ( (tom_slots instanceof tom.engine.adt.tomslot.types.SlotList) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch168NameNumberfreshSubject_1=(( tom.engine.adt.tomslot.types.SlotList )tom_slots);if ( ((tomMatch168NameNumberfreshSubject_1 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch168NameNumberfreshSubject_1 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch168NameNumber_freshVar_0=tomMatch168NameNumberfreshSubject_1;{  tom.engine.adt.tomslot.types.SlotList  tomMatch168NameNumber_begin_2=tomMatch168NameNumber_freshVar_0;{  tom.engine.adt.tomslot.types.SlotList  tomMatch168NameNumber_end_3=tomMatch168NameNumber_freshVar_0;do {{{  tom.engine.adt.tomslot.types.SlotList  tomMatch168NameNumber_freshVar_1=tomMatch168NameNumber_end_3;if (!( tomMatch168NameNumber_freshVar_1.isEmptyconcSlot() )) {{  tom.engine.adt.tomslot.types.Slot  tom_slot= tomMatch168NameNumber_freshVar_1.getHeadconcSlot() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch168NameNumber_freshVar_4= tomMatch168NameNumber_freshVar_1.getTailconcSlot() ;if ( true ) {



matchSlot:  {if ( (tom_slot instanceof tom.engine.adt.tomslot.types.Slot) ) {{  tom.engine.adt.tomslot.types.Slot  tomMatch169NameNumberfreshSubject_1=(( tom.engine.adt.tomslot.types.Slot )tom_slot);if ( (tomMatch169NameNumberfreshSubject_1 instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_0= tomMatch169NameNumberfreshSubject_1.getAppl() ;if ( (tomMatch169NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch169NameNumber_freshVar_1= tomMatch169NameNumber_freshVar_0.getNameList() ;if ( ((tomMatch169NameNumber_freshVar_1 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch169NameNumber_freshVar_1 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch169NameNumber_freshVar_2=tomMatch169NameNumber_freshVar_1;if (!( tomMatch169NameNumber_freshVar_2.isEmptyconcTomName() )) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch169NameNumber_freshVar_3= tomMatch169NameNumber_freshVar_2.getTailconcTomName() ;if ( tomMatch169NameNumber_freshVar_3.isEmptyconcTomName() ) {if ( (tom_name instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch169NameNumberfreshSubject_2=(( tom.engine.adt.tomname.types.TomName )tom_name);{  tom.engine.adt.tomname.types.TomName  tomMatch169NameNumber_freshVar_4=tomMatch169NameNumberfreshSubject_2;if ( tomMatch169NameNumber_freshVar_4.equals( tomMatch169NameNumber_freshVar_2.getHeadconcTomName() ) ) {if ( true ) {

              TomTerm freshVariable = Compiler.getFreshVariableStar(Compiler.getTermTypeFromTerm(tom_t));                
              constraintList =  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tomMatch169NameNumber_freshVar_0, freshVariable) ,tom_append_list_AndConstraint(constraintList, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )) ;
              newSlots = tom_append_list_concSlot(newSlots, tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(tomMatch169NameNumberfreshSubject_1.setAppl(freshVariable), tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) );
              break matchSlot;
            }}}}}}}}}}}}}}}}if ( (tom_slot instanceof tom.engine.adt.tomslot.types.Slot) ) {{  tom.engine.adt.tomslot.types.Slot  tomMatch169NameNumberfreshSubject_1=(( tom.engine.adt.tomslot.types.Slot )tom_slot);if ( (tomMatch169NameNumberfreshSubject_1 instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_5= tomMatch169NameNumberfreshSubject_1.getAppl() ;if ( (tomMatch169NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch169NameNumber_freshVar_6= tomMatch169NameNumber_freshVar_5.getTomTerm() ;if ( (tomMatch169NameNumber_freshVar_6 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch169NameNumber_freshVar_7= tomMatch169NameNumber_freshVar_6.getNameList() ;if ( ((tomMatch169NameNumber_freshVar_7 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch169NameNumber_freshVar_7 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch169NameNumber_freshVar_8=tomMatch169NameNumber_freshVar_7;if (!( tomMatch169NameNumber_freshVar_8.isEmptyconcTomName() )) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch169NameNumber_freshVar_9= tomMatch169NameNumber_freshVar_8.getTailconcTomName() ;if ( tomMatch169NameNumber_freshVar_9.isEmptyconcTomName() ) {if ( (tom_name instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch169NameNumberfreshSubject_2=(( tom.engine.adt.tomname.types.TomName )tom_name);{  tom.engine.adt.tomname.types.TomName  tomMatch169NameNumber_freshVar_10=tomMatch169NameNumberfreshSubject_2;if ( tomMatch169NameNumber_freshVar_10.equals( tomMatch169NameNumber_freshVar_8.getHeadconcTomName() ) ) {if ( true ) {


              TomTerm freshVariable = Compiler.getFreshVariableStar(Compiler.getTermTypeFromTerm(tom_t)); 
              constraintList =  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tomMatch169NameNumber_freshVar_5, freshVariable) ,tom_append_list_AndConstraint(constraintList, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )) ;
              newSlots = tom_append_list_concSlot(newSlots, tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(tomMatch169NameNumberfreshSubject_1.setAppl(freshVariable), tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) );
              break matchSlot;
            }}}}}}}}}}}}}}}}}}if ( (tom_slot instanceof tom.engine.adt.tomslot.types.Slot) ) {{  tom.engine.adt.tomslot.types.Slot  tomMatch169NameNumberfreshSubject_1=(( tom.engine.adt.tomslot.types.Slot )tom_slot);if ( (tom_name instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch169NameNumberfreshSubject_2=(( tom.engine.adt.tomname.types.TomName )tom_name);if ( true ) {


              newSlots = tom_append_list_concSlot(newSlots, tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(tomMatch169NameNumberfreshSubject_1, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) );
            }}}}}}
            
        }}}}}if ( tomMatch168NameNumber_end_3.isEmptyconcSlot() ) {tomMatch168NameNumber_end_3=tomMatch168NameNumber_begin_2;} else {tomMatch168NameNumber_end_3= tomMatch168NameNumber_end_3.getTailconcSlot() ;}}} while(!( tomMatch168NameNumber_end_3.equals(tomMatch168NameNumber_begin_2) ));}}}}}}}
  
      return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_t.setSlots(newSlots), tomMatch167NameNumber_freshVar_1) ,tom_append_list_AndConstraint(constraintList, tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() )) ;   
    }}}}}}}}}}}}}}}}}}}}}

    // never gets here
    throw new TomRuntimeException("GeneralPurposePropagator:detachSublists - unexpected result");
  }
  
  
  private static class ReplaceMatchConstraint extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  tom.engine.adt.tomname.types.TomName  varName; private  tom.engine.adt.tomterm.types.TomTerm  var; private  tom.engine.adt.tomterm.types.TomTerm  value; public ReplaceMatchConstraint( tom.engine.adt.tomname.types.TomName  varName,  tom.engine.adt.tomterm.types.TomTerm  var,  tom.engine.adt.tomterm.types.TomTerm  value) { super(( new tom.library.sl.Identity() ));this.varName=varName;this.var=var;this.value=value;}public  tom.engine.adt.tomname.types.TomName  getvarName() { return varName;}public  tom.engine.adt.tomterm.types.TomTerm  getvar() { return var;}public  tom.engine.adt.tomterm.types.TomTerm  getvalue() { return value;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch170NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if ( (tomMatch170NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch170NameNumber_freshVar_0= tomMatch170NameNumberfreshSubject_1.getpattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch170NameNumber_freshVar_1= tomMatch170NameNumberfreshSubject_1.getsubject() ;{ boolean tomMatch170NameNumber_freshVar_5= false ;{  tom.engine.adt.tomtype.types.TomType  tomMatch170NameNumber_freshVar_3= null ;{  tom.engine.adt.tomname.types.TomName  tomMatch170NameNumber_freshVar_2= null ;if ( (tomMatch170NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch170NameNumber_freshVar_5= true ;tomMatch170NameNumber_freshVar_2= tomMatch170NameNumber_freshVar_0.getAstName() ;tomMatch170NameNumber_freshVar_3= tomMatch170NameNumber_freshVar_0.getAstType() ;}} else {if ( (tomMatch170NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch170NameNumber_freshVar_5= true ;tomMatch170NameNumber_freshVar_2= tomMatch170NameNumber_freshVar_0.getAstName() ;tomMatch170NameNumber_freshVar_3= tomMatch170NameNumber_freshVar_0.getAstType() ;}}}if ((tomMatch170NameNumber_freshVar_5 ==  true )) {{  tom.engine.adt.tomtype.types.TomType  tom_type=tomMatch170NameNumber_freshVar_3;if ( (varName instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch170NameNumberfreshSubject_2=(( tom.engine.adt.tomname.types.TomName )varName);{  tom.engine.adt.tomname.types.TomName  tomMatch170NameNumber_freshVar_4=tomMatch170NameNumberfreshSubject_2;if ( tomMatch170NameNumber_freshVar_4.equals(tomMatch170NameNumber_freshVar_2) ) {if ( true ) {



        
        TomTerm freshVar = tomMatch170NameNumber_freshVar_0.isVariable() ? Compiler.getFreshVariable(tom_type) : Compiler.getFreshVariableStar(tom_type);
        return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(freshVar, tomMatch170NameNumber_freshVar_1) , tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make( tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make( tom.engine.adt.tomterm.types.tomterm.TestVar.make(freshVar) , var) , tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ) ) ;
      }}}}}}}}}}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch170NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if ( (tomMatch170NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch170NameNumber_freshVar_6= tomMatch170NameNumberfreshSubject_1.getpattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch170NameNumber_freshVar_7= tomMatch170NameNumberfreshSubject_1.getsubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tom_p=tomMatch170NameNumber_freshVar_6;{ boolean tomMatch170NameNumber_freshVar_12= false ;{  tom.engine.adt.tomname.types.TomName  tomMatch170NameNumber_freshVar_8= null ;if ( (tomMatch170NameNumber_freshVar_7 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch170NameNumber_freshVar_12= true ;tomMatch170NameNumber_freshVar_8= tomMatch170NameNumber_freshVar_7.getAstName() ;}} else {if ( (tomMatch170NameNumber_freshVar_7 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch170NameNumber_freshVar_12= true ;tomMatch170NameNumber_freshVar_8= tomMatch170NameNumber_freshVar_7.getAstName() ;}}}if ((tomMatch170NameNumber_freshVar_12 ==  true )) {if ( (varName instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch170NameNumberfreshSubject_3=(( tom.engine.adt.tomname.types.TomName )varName);{  tom.engine.adt.tomname.types.TomName  tomMatch170NameNumber_freshVar_9=tomMatch170NameNumberfreshSubject_3;if ( tomMatch170NameNumber_freshVar_9.equals(tomMatch170NameNumber_freshVar_8) ) {{ boolean tomMatch170NameNumber_freshVar_11= false ;if ( (tomMatch170NameNumber_freshVar_6 instanceof tom.engine.adt.tomterm.types.tomterm.TestVar) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch170NameNumber_freshVar_10=tomMatch170NameNumber_freshVar_6;if ( tomMatch170NameNumber_freshVar_10.equals(tom_p) ) {tomMatch170NameNumber_freshVar_11= true ;}}}if ((tomMatch170NameNumber_freshVar_11 ==  false )) {if ( true ) {
        
        return  tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(tom_p, value) ;
      }}}}}}}}}}}}}}}}}return super.visit_Constraint(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_ReplaceMatchConstraint( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return new ReplaceMatchConstraint(t0,t1,t2); }



}

/* Generated by TOM (version 2.5alpha): Do not edit this file */package tom.engine.compiler.propagator;

import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomtype.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomterm.types.tomterm.*;
import tom.library.sl.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.compiler.*;
import tom.engine.TomBase;

/**
 * Syntactic propagator
 */
public class TomVariadicPropagator implements TomIBasePropagator {

//--------------------------------------------------------	
  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) { return  (t1==t2) ;} private static boolean tom_equal_term_TomType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomType(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomType ;}private static boolean tom_equal_term_TomNumberList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNumberList(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNumberList ;}private static boolean tom_equal_term_TomNameList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNameList(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNameList ;}private static boolean tom_equal_term_TomName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomName(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomName ;}private static boolean tom_equal_term_TomTerm(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTerm(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomTerm ;}private static boolean tom_equal_term_OptionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OptionList(Object t) { return  t instanceof tom.engine.adt.tomoption.types.OptionList ;}private static boolean tom_equal_term_Constraint(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Constraint(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.Constraint ;}private static boolean tom_equal_term_ConstraintList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ConstraintList(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.ConstraintList ;}private static boolean tom_equal_term_SlotList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotList(Object t) { return  t instanceof tom.engine.adt.tomslot.types.SlotList ;}private static boolean tom_equal_term_Slot(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Slot(Object t) { return  t instanceof tom.engine.adt.tomslot.types.Slot ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) { return  t instanceof tom.engine.adt.tomname.types.tomname.Name ;}private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) { return  t.getString() ;}private static boolean tom_is_fun_sym_PositionName( tom.engine.adt.tomname.types.TomName  t) { return  t instanceof tom.engine.adt.tomname.types.tomname.PositionName ;}private static  tom.engine.adt.tomname.types.TomNumberList  tom_get_slot_PositionName_NumberList( tom.engine.adt.tomname.types.TomName  t) { return  t.getNumberList() ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_RecordAppl( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomNameList  t1,  tom.engine.adt.tomslot.types.SlotList  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(t0, t1, t2, t3) ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getSlots() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_VariableStar_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_VariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_UnamedVariableStar( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_VariableHeadList( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return  tom.engine.adt.tomterm.types.tomterm.VariableHeadList.make(t0, t1, t2) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_TestVar( tom.engine.adt.tomterm.types.TomTerm  t0) { return  tom.engine.adt.tomterm.types.tomterm.TestVar.make(t0) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_ListHead( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomtype.types.TomType  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return  tom.engine.adt.tomterm.types.tomterm.ListHead.make(t0, t1, t2) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_ListTail( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomterm.types.tomterm.ListTail.make(t0, t1) ; }private static boolean tom_is_fun_sym_SymbolOf( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.SymbolOf ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_SymbolOf( tom.engine.adt.tomterm.types.TomTerm  t0) { return  tom.engine.adt.tomterm.types.tomterm.SymbolOf.make(t0) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_SymbolOf_GroundTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getGroundTerm() ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_make_Negate( tom.engine.adt.tomconstraint.types.Constraint  t0) { return  tom.engine.adt.tomconstraint.types.constraint.Negate.make(t0) ; }private static boolean tom_is_fun_sym_MatchConstraint( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_make_MatchConstraint( tom.engine.adt.tomterm.types.TomTerm  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(t0, t1) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MatchConstraint_pattern( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t.getpattern() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MatchConstraint_subject( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t.getsubject() ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_make_EmptyListConstraint( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomconstraint.types.constraint.EmptyListConstraint.make(t0, t1) ; }private static boolean tom_is_fun_sym_PairSlotAppl( tom.engine.adt.tomslot.types.Slot  t) { return  t instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_PairSlotAppl_SlotName( tom.engine.adt.tomslot.types.Slot  t) { return  t.getSlotName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_PairSlotAppl_Appl( tom.engine.adt.tomslot.types.Slot  t) { return  t.getAppl() ;}private static boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomname.types.TomNameList  t) { return  t instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName || t instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_empty_list_concTomName() { return  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ; }private static  tom.engine.adt.tomname.types.TomNameList  tom_cons_list_concTomName( tom.engine.adt.tomname.types.TomName  e,  tom.engine.adt.tomname.types.TomNameList  l) { return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_head_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getHeadconcTomName() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_tail_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getTailconcTomName() ;}private static boolean tom_is_empty_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.isEmptyconcTomName() ;}   private static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if(tom_is_empty_concTomName_TomNameList(l1)) {       return l2;     } else if(tom_is_empty_concTomName_TomNameList(l2)) {       return l1;     } else if(tom_is_empty_concTomName_TomNameList(tom_get_tail_concTomName_TomNameList(l1))) {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(l1),l2);     } else {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(l1),tom_append_list_concTomName(tom_get_tail_concTomName_TomNameList(l1),l2));     }   }   private static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if(tom_equal_term_TomNameList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(begin),( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName(tom_get_tail_concTomName_TomNameList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint || t instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_empty_list_AndConstraint() { return  tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_cons_list_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  e,  tom.engine.adt.tomconstraint.types.Constraint  l) { return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(e,l) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_head_AndConstraint_Constraint( tom.engine.adt.tomconstraint.types.Constraint  l) { return  l.getHeadAndConstraint() ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_tail_AndConstraint_Constraint( tom.engine.adt.tomconstraint.types.Constraint  l) { return  l.getTailAndConstraint() ;}private static boolean tom_is_empty_AndConstraint_Constraint( tom.engine.adt.tomconstraint.types.Constraint  l) { return  l.isEmptyAndConstraint() ;}   private static   tom.engine.adt.tomconstraint.types.Constraint  tom_append_list_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint l1,  tom.engine.adt.tomconstraint.types.Constraint  l2) {     if(tom_is_empty_AndConstraint_Constraint(l1)) {       return l2;     } else if(tom_is_empty_AndConstraint_Constraint(l2)) {       return l1;     } else if(tom_is_fun_sym_AndConstraint(l1)) {       if(tom_is_empty_AndConstraint_Constraint(((tom_is_fun_sym_AndConstraint(l1))?tom_get_tail_AndConstraint_Constraint(l1):tom_empty_list_AndConstraint()))) {         return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_AndConstraint(((tom_is_fun_sym_AndConstraint(l1))?tom_get_head_AndConstraint_Constraint(l1):l1),l2);       } else {         return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_AndConstraint(((tom_is_fun_sym_AndConstraint(l1))?tom_get_head_AndConstraint_Constraint(l1):l1),tom_append_list_AndConstraint(((tom_is_fun_sym_AndConstraint(l1))?tom_get_tail_AndConstraint_Constraint(l1):tom_empty_list_AndConstraint()),l2));       }     } else {       return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_AndConstraint(l1, l2);     }   }   private static   tom.engine.adt.tomconstraint.types.Constraint  tom_get_slice_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  begin,  tom.engine.adt.tomconstraint.types.Constraint  end, tom.engine.adt.tomconstraint.types.Constraint  tail) {     if(tom_equal_term_Constraint(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_AndConstraint(((tom_is_fun_sym_AndConstraint(begin))?tom_get_head_AndConstraint_Constraint(begin):begin),( tom.engine.adt.tomconstraint.types.Constraint )tom_get_slice_AndConstraint(((tom_is_fun_sym_AndConstraint(begin))?tom_get_tail_AndConstraint_Constraint(begin):tom_empty_list_AndConstraint()),end,tail));     }   }   private static boolean tom_is_fun_sym_concSlot( tom.engine.adt.tomslot.types.SlotList  t) { return  t instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot || t instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_empty_list_concSlot() { return  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ; }private static  tom.engine.adt.tomslot.types.SlotList  tom_cons_list_concSlot( tom.engine.adt.tomslot.types.Slot  e,  tom.engine.adt.tomslot.types.SlotList  l) { return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.engine.adt.tomslot.types.Slot  tom_get_head_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.getHeadconcSlot() ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_tail_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.getTailconcSlot() ;}private static boolean tom_is_empty_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.isEmptyconcSlot() ;}   private static   tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList l1,  tom.engine.adt.tomslot.types.SlotList  l2) {     if(tom_is_empty_concSlot_SlotList(l1)) {       return l2;     } else if(tom_is_empty_concSlot_SlotList(l2)) {       return l1;     } else if(tom_is_empty_concSlot_SlotList(tom_get_tail_concSlot_SlotList(l1))) {       return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(l1),l2);     } else {       return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(tom_get_tail_concSlot_SlotList(l1),l2));     }   }   private static   tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end, tom.engine.adt.tomslot.types.SlotList  tail) {     if(tom_equal_term_SlotList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(begin),( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot(tom_get_tail_concSlot_SlotList(begin),end,tail));     }   }    /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_Strategy(Object t1, Object t2) { return t1.equals(t2);}private static boolean tom_is_sort_Strategy(Object t) { return  t instanceof tom.library.sl.Strategy ;}/* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_mu( tom.library.sl.Strategy  var,  tom.library.sl.Strategy  v) { return  new tom.library.sl.Mu(var,v) ; }private static  tom.library.sl.Strategy  tom_make_MuVar( String  name) { return  new tom.library.sl.MuVar(name) ; }private static  tom.library.sl.Strategy  tom_make_Identity() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_make_All( tom.library.sl.Strategy  v) { return  new tom.library.sl.All(v) ; }private static boolean tom_is_fun_sym_Sequence( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.Sequence) ;}private static  tom.library.sl.Strategy  tom_empty_list_Sequence() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_cons_list_Sequence( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  new tom.library.sl.Sequence(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.THEN) ;}private static boolean tom_is_empty_Sequence_Strategy( tom.library.sl.Strategy  t) { return  t instanceof tom.library.sl.Identity ;}   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_Sequence_Strategy(l1)) {       return l2;     } else if(tom_is_empty_Sequence_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_Sequence(l1)) {       if(tom_is_empty_Sequence_Strategy(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()))) {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),tom_append_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_head_Sequence_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_tail_Sequence_Strategy(begin):tom_empty_list_Sequence()),end,tail));     }   }   private static boolean tom_is_fun_sym_SequenceId( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.SequenceId) ;}private static  tom.library.sl.Strategy  tom_empty_list_SequenceId() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_cons_list_SequenceId( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  new tom.library.sl.SequenceId(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.SequenceId.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.SequenceId.THEN) ;}private static boolean tom_is_empty_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  t instanceof tom.library.sl.Identity ;}   private static   tom.library.sl.Strategy  tom_append_list_SequenceId( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_SequenceId_Strategy(l1)) {       return l2;     } else if(tom_is_empty_SequenceId_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_SequenceId(l1)) {       if(tom_is_empty_SequenceId_Strategy(((tom_is_fun_sym_SequenceId(l1))?tom_get_tail_SequenceId_Strategy(l1):tom_empty_list_SequenceId()))) {         return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_head_SequenceId_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_head_SequenceId_Strategy(l1):l1),tom_append_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_tail_SequenceId_Strategy(l1):tom_empty_list_SequenceId()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_SequenceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(begin))?tom_get_head_SequenceId_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_SequenceId(((tom_is_fun_sym_SequenceId(begin))?tom_get_tail_SequenceId_Strategy(begin):tom_empty_list_SequenceId()),end,tail));     }   }   private static  tom.library.sl.Strategy  tom_make_ChoiceId( tom.library.sl.Strategy  first,  tom.library.sl.Strategy  then) { return  new tom.library.sl.ChoiceId(first,then) ; }private static  tom.library.sl.Strategy  tom_make_OneId( tom.library.sl.Strategy  v) { return  new tom.library.sl.OneId(v) ; } /* Generated by TOM (version 2.5alpha): Do not edit this file */ /* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_InnermostId( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_cons_list_Sequence(tom_cons_list_SequenceId(v,tom_cons_list_SequenceId(tom_make_MuVar("_x"),tom_empty_list_SequenceId())),tom_empty_list_Sequence()))) ; }private static  tom.library.sl.Strategy  tom_make_OnceTopDownId( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_make_ChoiceId(v,tom_make_OneId(tom_make_MuVar("_x")))) ; }   

//--------------------------------------------------------

  private static short beginEndCounter = 0;

  public Constraint propagate(Constraint constraint) {
    return (Constraint)tom_make_InnermostId(tom_make_VariadicPatternMatching()).fire(constraint);		
  }	

  private static class VariadicPatternMatching extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {public VariadicPatternMatching() { super(tom_make_Identity());}public int getChildCount() { return 1; }public jjtraveler.Visitable getChildAt(int i) {switch (i) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) {switch (i) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg) throws jjtraveler.VisitFailure {if (tom_is_sort_Constraint(tom__arg)) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);{ boolean tomMatch1NameNumbertom_anti_constraints_status= true ;if ( ( tom_is_fun_sym_MatchConstraint(tomMatch1Position1) ||  false  ) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch1Position1NameNumberpattern=tom_get_slot_MatchConstraint_pattern(tomMatch1Position1);if ( ( tom_is_fun_sym_RecordAppl(tomMatch1Position1NameNumberpattern) ||  false  ) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch1Position1NameNumberpatternNameNumberNameList=tom_get_slot_RecordAppl_NameList(tomMatch1Position1NameNumberpattern);if ( ( tom_is_fun_sym_concTomName(tomMatch1Position1NameNumberpatternNameNumberNameList) ||  false  ) ) {{ int tomMatch1Position1NameNumberpatternNameNumberNameListIndex1=0;{  tom.engine.adt.tomname.types.TomNameList  tomMatch1Position1NameNumberpatternNameNumberNameListList1=tomMatch1Position1NameNumberpatternNameNumberNameList;{  tom.engine.adt.tomname.types.TomNameList  tomMatch1Position1NameNumberpatternNameNumberNameListSave1=tomMatch1Position1NameNumberpatternNameNumberNameListList1;{if (!(tom_is_empty_concTomName_TomNameList(tomMatch1Position1NameNumberpatternNameNumberNameListList1))) {{  tom.engine.adt.tomname.types.TomName  tomMatch1Position1NameNumberpatternNameNumberNameListPosition1=tom_get_head_concTomName_TomNameList(tomMatch1Position1NameNumberpatternNameNumberNameListList1);tomMatch1Position1NameNumberpatternNameNumberNameListIndex1=tomMatch1Position1NameNumberpatternNameNumberNameListIndex1 + 1;tomMatch1Position1NameNumberpatternNameNumberNameListList1=tom_get_tail_concTomName_TomNameList(tomMatch1Position1NameNumberpatternNameNumberNameListList1);if ( ( tom_is_fun_sym_Name(tomMatch1Position1NameNumberpatternNameNumberNameListPosition1) ||  false  ) ) {{  tom.engine.adt.tomname.types.TomName  tom_name=tomMatch1Position1NameNumberpatternNameNumberNameListPosition1;{  tom.engine.adt.tomslot.types.SlotList  tom_slots=tom_get_slot_RecordAppl_Slots(tomMatch1Position1NameNumberpattern);{  tom.engine.adt.tomterm.types.TomTerm  _tom_fresh_var_12=tom_get_slot_MatchConstraint_subject(tomMatch1Position1);{  tom.engine.adt.tomterm.types.TomTerm  tom_g=_tom_fresh_var_12;{if ( ( tom_is_fun_sym_SymbolOf(_tom_fresh_var_12) ||  false  ) ) {tomMatch1NameNumbertom_anti_constraints_status= (  false  && tomMatch1NameNumbertom_anti_constraints_status ) ;} else {tomMatch1NameNumbertom_anti_constraints_status= (  true  && tomMatch1NameNumbertom_anti_constraints_status ) ;}if ((tomMatch1NameNumbertom_anti_constraints_status ==  true )) {if ( true ) {









        
        // if this is not a list, nothing to do
        if(!TomBase.isListOperator(TomConstraintCompiler.getSymbolTable().
            getSymbolFromName(tom_get_slot_Name_String(tomMatch1Position1NameNumberpatternNameNumberNameListPosition1)))) { return tomMatch1Position1; }
        // declare fresh variable
        TomType listType = TomConstraintCompiler.getTermTypeFromTerm(tomMatch1Position1NameNumberpattern);
        TomTerm freshVariable = TomConstraintCompiler.getFreshVariableStar(listType);				
        Constraint freshVarDeclaration = tom_make_MatchConstraint(freshVariable,tom_g);
        Constraint l = tom_empty_list_AndConstraint();        
mSlots:  if (tom_is_sort_SlotList(tom_slots)) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch2Position1=(( tom.engine.adt.tomslot.types.SlotList )tom_slots);if ( ( tom_is_fun_sym_concSlot(tomMatch2Position1) ||  false  ) ) {{ int tomMatch2Position1Index1=0;{  tom.engine.adt.tomslot.types.SlotList  tomMatch2Position1List1=tomMatch2Position1;if (tom_is_empty_concSlot_SlotList(tomMatch2Position1List1)) {if ( true ) {

            l = tom_append_list_AndConstraint(l,tom_cons_list_AndConstraint(tom_make_EmptyListConstraint(tom_name,freshVariable),tom_empty_list_AndConstraint()));
          }}}}}if ( ( tom_is_fun_sym_concSlot(tomMatch2Position1) ||  false  ) ) {{ int tomMatch2Position1Index1=0;{  tom.engine.adt.tomslot.types.SlotList  tomMatch2Position1List1=tomMatch2Position1;{  tom.engine.adt.tomslot.types.SlotList  tomMatch2Position1Begin1=tomMatch2Position1List1;{  tom.engine.adt.tomslot.types.SlotList  tomMatch2Position1End1=tomMatch2Position1List1;{while (!(tom_is_empty_concSlot_SlotList(tomMatch2Position1End1))) {tomMatch2Position1List1=tomMatch2Position1End1;{{  tom.engine.adt.tomslot.types.SlotList  tomMatch2Position1Save2=tomMatch2Position1List1;{{  tom.engine.adt.tomslot.types.Slot  tomMatch2Position1Position2=tom_get_head_concSlot_SlotList(tomMatch2Position1List1);tomMatch2Position1Index1=tomMatch2Position1Index1 + 1;tomMatch2Position1List1=tom_get_tail_concSlot_SlotList(tomMatch2Position1List1);if ( ( tom_is_fun_sym_PairSlotAppl(tomMatch2Position1Position2) ||  false  ) ) {{  tom.engine.adt.tomterm.types.TomTerm  tom_appl=tom_get_slot_PairSlotAppl_Appl(tomMatch2Position1Position2);{  tom.engine.adt.tomslot.types.SlotList  tom_X=tomMatch2Position1List1;if ( true ) {

            TomTerm newFreshVarList = TomConstraintCompiler.getFreshVariableStar(listType);            
// [pem] I would have extracted the X.length==0 outside the mAppl match
// [pem] if(X.lenght==0) { if(appl.isVariableStar) ... else ... }
// [radu] it would duplicate  all the assignments for the last part           
//            // if it is the last element               
//            if(`X.length() == 0) {
//              // and if it is a varStar we should only assign it, without generating a loop
//              // (if it is unamed, we do nothing)
//              if((`appl).isVariableStar()) {
//                l = `AndConstraint(l*,MatchConstraint(appl,freshVariable));
//              } else {
//                if (!(`appl).isUnamedVariableStar()){
//                  // for the last element, we should also check that the list ends
//                  l = `AndConstraint(l*, EmptyListConstraint(name,newFreshVarList));
//                }
//              }              
//            }// end if(X.lenght==0) 
            
      mAppl:if (tom_is_sort_TomTerm(tom_appl)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch3Position1=(( tom.engine.adt.tomterm.types.TomTerm )tom_appl);if ( ( tom_is_fun_sym_UnamedVariableStar(tomMatch3Position1) ||  ( tom_is_fun_sym_VariableStar(tomMatch3Position1) ||  false  )  ) ) {if ( true ) {

                
                // if it is the last element               
                if(tom_X.length() == 0) {
                  // and if it is a varStar we should only assign it, without generating a loop
                  // (if it is unamed, we do nothing)
                  if((tom_appl).isVariableStar()) {
                    l = tom_append_list_AndConstraint(l,tom_cons_list_AndConstraint(tom_make_MatchConstraint(tom_appl,freshVariable),tom_empty_list_AndConstraint()));
                  }
                } else {
                  TomTerm beginSublist = getBeginVariableStar(listType);
                  TomTerm endSublist = getEndVariableStar(listType);              
                  l = tom_append_list_AndConstraint(l,tom_cons_list_AndConstraint(tom_make_MatchConstraint(beginSublist,freshVariable),tom_cons_list_AndConstraint(tom_make_MatchConstraint(endSublist,freshVariable),tom_cons_list_AndConstraint(tom_make_MatchConstraint(tom_appl,tom_make_VariableHeadList(tom_name,beginSublist,endSublist)),tom_cons_list_AndConstraint(tom_make_MatchConstraint(newFreshVarList,endSublist),tom_empty_list_AndConstraint())))))



;
                }
                break mAppl;
              }}if ( true ) {

                l = tom_append_list_AndConstraint(l,tom_cons_list_AndConstraint(tom_make_Negate(tom_make_EmptyListConstraint(tom_name,freshVariable)),tom_cons_list_AndConstraint(tom_make_MatchConstraint(tom_appl,tom_make_ListHead(tom_name,TomConstraintCompiler.getTermTypeFromTerm(tom_appl),freshVariable)),tom_cons_list_AndConstraint(tom_make_MatchConstraint(newFreshVarList,tom_make_ListTail(tom_name,freshVariable)),tom_empty_list_AndConstraint()))))


;
                // for the last element, we should also check that the list ends
                if (tom_X.length() == 0) {                  
                  l = tom_append_list_AndConstraint(l,tom_cons_list_AndConstraint(tom_make_EmptyListConstraint(tom_name,newFreshVarList),tom_empty_list_AndConstraint()));
                }
              }}}
// end match
            freshVariable = newFreshVarList;
          }}}}}tomMatch2Position1List1=tomMatch2Position1Save2;}}tomMatch2Position1End1=tom_get_tail_concSlot_SlotList(tomMatch2Position1End1);}}tomMatch2Position1List1=tomMatch2Position1Begin1;}}}}}}}}
// end match
        // add head equality condition + fresh var declaration
        l = tom_cons_list_AndConstraint(tom_make_MatchConstraint(tom_make_RecordAppl(tom_get_slot_RecordAppl_Option(tomMatch1Position1NameNumberpattern),tomMatch1Position1NameNumberpatternNameNumberNameList,tom_empty_list_concSlot(),tom_get_slot_RecordAppl_Constraints(tomMatch1Position1NameNumberpattern)),tom_make_SymbolOf(tom_g)),tom_cons_list_AndConstraint(freshVarDeclaration,tom_append_list_AndConstraint(l,tom_empty_list_AndConstraint())))
;
        return l;
      }}tomMatch1NameNumbertom_anti_constraints_status= true ;}}}}}}}}tomMatch1Position1NameNumberpatternNameNumberNameListList1=tomMatch1Position1NameNumberpatternNameNumberNameListSave1;}}}}}}}}}}{ boolean tomMatch1NameNumbertom_anti_constraints_status= true ;if ( ( tom_is_fun_sym_AndConstraint(tomMatch1Position1) ||  false  ) ) {{ int tomMatch1Position1Index1=0;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1List1=tomMatch1Position1;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Begin1=tomMatch1Position1List1;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1End1=tomMatch1Position1List1;{while (!( ( tom_is_empty_AndConstraint_Constraint(tomMatch1Position1End1) || tom_equal_term_Constraint(tomMatch1Position1End1, tom_empty_list_AndConstraint()) ) )) {tomMatch1Position1List1=tomMatch1Position1End1;{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Save2=tomMatch1Position1List1;{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Position2=((tom_is_fun_sym_AndConstraint(tomMatch1Position1List1))?(tom_get_head_AndConstraint_Constraint(tomMatch1Position1List1)):(tomMatch1Position1List1));tomMatch1Position1Index1=tomMatch1Position1Index1 + 1;tomMatch1Position1List1=((tom_is_fun_sym_AndConstraint(tomMatch1Position1List1))?(tom_get_tail_AndConstraint_Constraint(tomMatch1Position1List1)):(tom_empty_list_AndConstraint()));if ( ( tom_is_fun_sym_MatchConstraint(tomMatch1Position1Position2) ||  false  ) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch1Position1Position2NameNumberpattern=tom_get_slot_MatchConstraint_pattern(tomMatch1Position1Position2);if ( ( tom_is_fun_sym_VariableStar(tomMatch1Position1Position2NameNumberpattern) ||  false  ) ) {{  tom.engine.adt.tomname.types.TomName  _tom_fresh_var_14=tom_get_slot_VariableStar_AstName(tomMatch1Position1Position2NameNumberpattern);{if ( ( tom_is_fun_sym_PositionName(_tom_fresh_var_14) ||  false  ) ) {tomMatch1NameNumbertom_anti_constraints_status= (  false  && tomMatch1NameNumbertom_anti_constraints_status ) ;} else {tomMatch1NameNumbertom_anti_constraints_status= (  true  && tomMatch1NameNumbertom_anti_constraints_status ) ;}if ((tomMatch1NameNumbertom_anti_constraints_status ==  true )) {if ( true ) {





        Constraint toApplyOn = tom_append_list_AndConstraint(tomMatch1Position1List1,tom_empty_list_AndConstraint());        
        TomTerm freshVar = TomConstraintCompiler.getFreshVariableStar(tom_get_slot_VariableStar_AstType(tomMatch1Position1Position2NameNumberpattern));
        Constraint res = (Constraint)tom_make_OnceTopDownId(tom_make_ReplaceMatchConstraint(_tom_fresh_var_14,freshVar)).fire(toApplyOn);
        if(res != toApplyOn) {
          return tom_get_slice_AndConstraint(tomMatch1Position1Begin1,tomMatch1Position1End1,tom_append_list_AndConstraint(tom_empty_list_AndConstraint(),tom_cons_list_AndConstraint(tomMatch1Position1Position2,tom_cons_list_AndConstraint(res,tom_empty_list_AndConstraint()))));
        }
      }}tomMatch1NameNumbertom_anti_constraints_status= true ;}}}}}}tomMatch1Position1List1=tomMatch1Position1Save2;}}tomMatch1Position1End1=((tom_is_fun_sym_AndConstraint(tomMatch1Position1End1))?(tom_get_tail_AndConstraint_Constraint(tomMatch1Position1End1)):(tom_empty_list_AndConstraint()));}}tomMatch1Position1List1=tomMatch1Position1Begin1;}}}}}}}}}return super.visit_Constraint(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_VariadicPatternMatching() { return new VariadicPatternMatching(); }

// end %strategy

  private static class ReplaceMatchConstraint extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  tom.engine.adt.tomname.types.TomName  varName; private  tom.engine.adt.tomterm.types.TomTerm  freshVar; public ReplaceMatchConstraint( tom.engine.adt.tomname.types.TomName  varName,  tom.engine.adt.tomterm.types.TomTerm  freshVar) { super(tom_make_Identity());this.varName=varName;this.freshVar=freshVar;}public  tom.engine.adt.tomname.types.TomName  getvarName() { return varName;}public  tom.engine.adt.tomterm.types.TomTerm  getfreshVar() { return freshVar;}public int getChildCount() { return 1; }public jjtraveler.Visitable getChildAt(int i) {switch (i) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) {switch (i) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg) throws jjtraveler.VisitFailure {if (tom_is_sort_Constraint(tom__arg)) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch6Position1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if ( ( tom_is_fun_sym_MatchConstraint(tomMatch6Position1) ||  false  ) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch6Position1NameNumberpattern=tom_get_slot_MatchConstraint_pattern(tomMatch6Position1);if ( ( tom_is_fun_sym_VariableStar(tomMatch6Position1NameNumberpattern) ||  false  ) ) {if ( true ) {

        
        if(tom_get_slot_VariableStar_AstName(tomMatch6Position1NameNumberpattern)== varName) {					
          return tom_cons_list_AndConstraint(tom_make_MatchConstraint(freshVar,tom_get_slot_MatchConstraint_subject(tomMatch6Position1)),tom_cons_list_AndConstraint(tom_make_MatchConstraint(tom_make_TestVar(freshVar),tomMatch6Position1NameNumberpattern),tom_empty_list_AndConstraint()));
        }				  
      }}}}}}return super.visit_Constraint(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_ReplaceMatchConstraint( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return new ReplaceMatchConstraint(t0,t1); }



  private static TomTerm getBeginVariableStar(TomType type) {
    return TomConstraintCompiler.getFreshVariableStar("begin_" + (++beginEndCounter),type);
  }

  private static TomTerm getEndVariableStar(TomType type) {
    return TomConstraintCompiler.getFreshVariableStar("end_" + beginEndCounter,type);
  }
}

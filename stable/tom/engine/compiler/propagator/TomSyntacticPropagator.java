/* Generated by TOM (version 2.5alpha): Do not edit this file */package tom.engine.compiler.propagator;

import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomtype.types.*;
import tom.engine.adt.tomname.types.*;
import tom.library.sl.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.tools.SymbolTable;
import tom.engine.compiler.*;
import tom.engine.TomBase;
import java.util.*;

/**
 * Syntactic propagator
 */
public class TomSyntacticPropagator implements TomIBasePropagator {

//--------------------------------------------------------
  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) { return  (t1==t2) ;} private static boolean tom_equal_term_TomType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomType(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomType ;}private static boolean tom_equal_term_TomNameList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNameList(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNameList ;}private static boolean tom_equal_term_TomName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomName(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomName ;}private static boolean tom_equal_term_TomTerm(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTerm(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomTerm ;}private static boolean tom_equal_term_OptionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OptionList(Object t) { return  t instanceof tom.engine.adt.tomoption.types.OptionList ;}private static boolean tom_equal_term_Constraint(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Constraint(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.Constraint ;}private static boolean tom_equal_term_ConstraintList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ConstraintList(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.ConstraintList ;}private static boolean tom_equal_term_SlotList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotList(Object t) { return  t instanceof tom.engine.adt.tomslot.types.SlotList ;}private static boolean tom_equal_term_Slot(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Slot(Object t) { return  t instanceof tom.engine.adt.tomslot.types.Slot ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) { return  t instanceof tom.engine.adt.tomname.types.tomname.Name ;}private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) { return  t.getString() ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_RecordAppl( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomNameList  t1,  tom.engine.adt.tomslot.types.SlotList  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(t0, t1, t2, t3) ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getSlots() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.Variable ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_TestVar( tom.engine.adt.tomterm.types.TomTerm  t0) { return  tom.engine.adt.tomterm.types.tomterm.TestVar.make(t0) ; }private static boolean tom_is_fun_sym_AntiTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_AntiTerm_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getTomTerm() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_Subterm( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomname.types.TomName  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return  tom.engine.adt.tomterm.types.tomterm.Subterm.make(t0, t1, t2) ; }private static boolean tom_is_fun_sym_SymbolOf( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.SymbolOf ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_SymbolOf( tom.engine.adt.tomterm.types.TomTerm  t0) { return  tom.engine.adt.tomterm.types.tomterm.SymbolOf.make(t0) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_SymbolOf_GroundTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getGroundTerm() ;}private static boolean tom_is_fun_sym_AssignTo( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t instanceof tom.engine.adt.tomconstraint.types.constraint.AssignTo ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_AssignTo_Variable( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t.getVariable() ;}private static boolean tom_is_fun_sym_MatchConstraint( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_make_MatchConstraint( tom.engine.adt.tomterm.types.TomTerm  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(t0, t1) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MatchConstraint_pattern( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t.getpattern() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MatchConstraint_subject( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t.getsubject() ;}private static boolean tom_is_fun_sym_AntiMatchConstraint( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t instanceof tom.engine.adt.tomconstraint.types.constraint.AntiMatchConstraint ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_make_AntiMatchConstraint( tom.engine.adt.tomconstraint.types.Constraint  t0) { return  tom.engine.adt.tomconstraint.types.constraint.AntiMatchConstraint.make(t0) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_slot_AntiMatchConstraint_Constraint( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t.getConstraint() ;}private static boolean tom_is_fun_sym_PairSlotAppl( tom.engine.adt.tomslot.types.Slot  t) { return  t instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_PairSlotAppl_SlotName( tom.engine.adt.tomslot.types.Slot  t) { return  t.getSlotName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_PairSlotAppl_Appl( tom.engine.adt.tomslot.types.Slot  t) { return  t.getAppl() ;}private static boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomname.types.TomNameList  t) { return  t instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName || t instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_empty_list_concTomName() { return  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ; }private static  tom.engine.adt.tomname.types.TomNameList  tom_cons_list_concTomName( tom.engine.adt.tomname.types.TomName  e,  tom.engine.adt.tomname.types.TomNameList  l) { return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_head_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getHeadconcTomName() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_tail_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getTailconcTomName() ;}private static boolean tom_is_empty_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.isEmptyconcTomName() ;}   private static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if(tom_is_empty_concTomName_TomNameList(l1)) {       return l2;     } else if(tom_is_empty_concTomName_TomNameList(l2)) {       return l1;     } else if(tom_is_empty_concTomName_TomNameList(tom_get_tail_concTomName_TomNameList(l1))) {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(l1),l2);     } else {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(l1),tom_append_list_concTomName(tom_get_tail_concTomName_TomNameList(l1),l2));     }   }   private static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if(tom_equal_term_TomNameList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(begin),( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName(tom_get_tail_concTomName_TomNameList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t instanceof tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint || t instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_empty_list_AndConstraint() { return  tom.engine.adt.tomconstraint.types.constraint.EmptyAndConstraint.make() ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_cons_list_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  e,  tom.engine.adt.tomconstraint.types.Constraint  l) { return  tom.engine.adt.tomconstraint.types.constraint.ConsAndConstraint.make(e,l) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_head_AndConstraint_Constraint( tom.engine.adt.tomconstraint.types.Constraint  l) { return  l.getHeadAndConstraint() ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_tail_AndConstraint_Constraint( tom.engine.adt.tomconstraint.types.Constraint  l) { return  l.getTailAndConstraint() ;}private static boolean tom_is_empty_AndConstraint_Constraint( tom.engine.adt.tomconstraint.types.Constraint  l) { return  l.isEmptyAndConstraint() ;}   private static   tom.engine.adt.tomconstraint.types.Constraint  tom_append_list_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint l1,  tom.engine.adt.tomconstraint.types.Constraint  l2) {     if(tom_is_empty_AndConstraint_Constraint(l1)) {       return l2;     } else if(tom_is_empty_AndConstraint_Constraint(l2)) {       return l1;     } else if(tom_is_fun_sym_AndConstraint(l1)) {       if(tom_is_empty_AndConstraint_Constraint(((tom_is_fun_sym_AndConstraint(l1))?tom_get_tail_AndConstraint_Constraint(l1):tom_empty_list_AndConstraint()))) {         return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_AndConstraint(((tom_is_fun_sym_AndConstraint(l1))?tom_get_head_AndConstraint_Constraint(l1):l1),l2);       } else {         return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_AndConstraint(((tom_is_fun_sym_AndConstraint(l1))?tom_get_head_AndConstraint_Constraint(l1):l1),tom_append_list_AndConstraint(((tom_is_fun_sym_AndConstraint(l1))?tom_get_tail_AndConstraint_Constraint(l1):tom_empty_list_AndConstraint()),l2));       }     } else {       return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_AndConstraint(l1, l2);     }   }   private static   tom.engine.adt.tomconstraint.types.Constraint  tom_get_slice_AndConstraint( tom.engine.adt.tomconstraint.types.Constraint  begin,  tom.engine.adt.tomconstraint.types.Constraint  end, tom.engine.adt.tomconstraint.types.Constraint  tail) {     if(tom_equal_term_Constraint(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_AndConstraint(((tom_is_fun_sym_AndConstraint(begin))?tom_get_head_AndConstraint_Constraint(begin):begin),( tom.engine.adt.tomconstraint.types.Constraint )tom_get_slice_AndConstraint(((tom_is_fun_sym_AndConstraint(begin))?tom_get_tail_AndConstraint_Constraint(begin):tom_empty_list_AndConstraint()),end,tail));     }   }   private static boolean tom_is_fun_sym_OrConstraintDisjunction( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t instanceof tom.engine.adt.tomconstraint.types.constraint.ConsOrConstraintDisjunction || t instanceof tom.engine.adt.tomconstraint.types.constraint.EmptyOrConstraintDisjunction ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_empty_list_OrConstraintDisjunction() { return  tom.engine.adt.tomconstraint.types.constraint.EmptyOrConstraintDisjunction.make() ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_cons_list_OrConstraintDisjunction( tom.engine.adt.tomconstraint.types.Constraint  e,  tom.engine.adt.tomconstraint.types.Constraint  l) { return  tom.engine.adt.tomconstraint.types.constraint.ConsOrConstraintDisjunction.make(e,l) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_head_OrConstraintDisjunction_Constraint( tom.engine.adt.tomconstraint.types.Constraint  l) { return  l.getHeadOrConstraintDisjunction() ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_tail_OrConstraintDisjunction_Constraint( tom.engine.adt.tomconstraint.types.Constraint  l) { return  l.getTailOrConstraintDisjunction() ;}private static boolean tom_is_empty_OrConstraintDisjunction_Constraint( tom.engine.adt.tomconstraint.types.Constraint  l) { return  l.isEmptyOrConstraintDisjunction() ;}   private static   tom.engine.adt.tomconstraint.types.Constraint  tom_append_list_OrConstraintDisjunction( tom.engine.adt.tomconstraint.types.Constraint l1,  tom.engine.adt.tomconstraint.types.Constraint  l2) {     if(tom_is_empty_OrConstraintDisjunction_Constraint(l1)) {       return l2;     } else if(tom_is_empty_OrConstraintDisjunction_Constraint(l2)) {       return l1;     } else if(tom_is_fun_sym_OrConstraintDisjunction(l1)) {       if(tom_is_empty_OrConstraintDisjunction_Constraint(((tom_is_fun_sym_OrConstraintDisjunction(l1))?tom_get_tail_OrConstraintDisjunction_Constraint(l1):tom_empty_list_OrConstraintDisjunction()))) {         return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_OrConstraintDisjunction(((tom_is_fun_sym_OrConstraintDisjunction(l1))?tom_get_head_OrConstraintDisjunction_Constraint(l1):l1),l2);       } else {         return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_OrConstraintDisjunction(((tom_is_fun_sym_OrConstraintDisjunction(l1))?tom_get_head_OrConstraintDisjunction_Constraint(l1):l1),tom_append_list_OrConstraintDisjunction(((tom_is_fun_sym_OrConstraintDisjunction(l1))?tom_get_tail_OrConstraintDisjunction_Constraint(l1):tom_empty_list_OrConstraintDisjunction()),l2));       }     } else {       return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_OrConstraintDisjunction(l1, l2);     }   }   private static   tom.engine.adt.tomconstraint.types.Constraint  tom_get_slice_OrConstraintDisjunction( tom.engine.adt.tomconstraint.types.Constraint  begin,  tom.engine.adt.tomconstraint.types.Constraint  end, tom.engine.adt.tomconstraint.types.Constraint  tail) {     if(tom_equal_term_Constraint(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomconstraint.types.Constraint )tom_cons_list_OrConstraintDisjunction(((tom_is_fun_sym_OrConstraintDisjunction(begin))?tom_get_head_OrConstraintDisjunction_Constraint(begin):begin),( tom.engine.adt.tomconstraint.types.Constraint )tom_get_slice_OrConstraintDisjunction(((tom_is_fun_sym_OrConstraintDisjunction(begin))?tom_get_tail_OrConstraintDisjunction_Constraint(begin):tom_empty_list_OrConstraintDisjunction()),end,tail));     }   }   private static boolean tom_is_fun_sym_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  t) { return  t instanceof tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint || t instanceof tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_empty_list_concConstraint() { return  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ; }private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_cons_list_concConstraint( tom.engine.adt.tomconstraint.types.Constraint  e,  tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make(e,l) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_head_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  l.getHeadconcConstraint() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_tail_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  l.getTailconcConstraint() ;}private static boolean tom_is_empty_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  l.isEmptyconcConstraint() ;}   private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {     if(tom_is_empty_concConstraint_ConstraintList(l1)) {       return l2;     } else if(tom_is_empty_concConstraint_ConstraintList(l2)) {       return l1;     } else if(tom_is_empty_concConstraint_ConstraintList(tom_get_tail_concConstraint_ConstraintList(l1))) {       return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(tom_get_head_concConstraint_ConstraintList(l1),l2);     } else {       return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(tom_get_head_concConstraint_ConstraintList(l1),tom_append_list_concConstraint(tom_get_tail_concConstraint_ConstraintList(l1),l2));     }   }   private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end, tom.engine.adt.tomconstraint.types.ConstraintList  tail) {     if(tom_equal_term_ConstraintList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(tom_get_head_concConstraint_ConstraintList(begin),( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint(tom_get_tail_concConstraint_ConstraintList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concSlot( tom.engine.adt.tomslot.types.SlotList  t) { return  t instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot || t instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_empty_list_concSlot() { return  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ; }private static  tom.engine.adt.tomslot.types.SlotList  tom_cons_list_concSlot( tom.engine.adt.tomslot.types.Slot  e,  tom.engine.adt.tomslot.types.SlotList  l) { return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.engine.adt.tomslot.types.Slot  tom_get_head_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.getHeadconcSlot() ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_tail_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.getTailconcSlot() ;}private static boolean tom_is_empty_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.isEmptyconcSlot() ;}   private static   tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList l1,  tom.engine.adt.tomslot.types.SlotList  l2) {     if(tom_is_empty_concSlot_SlotList(l1)) {       return l2;     } else if(tom_is_empty_concSlot_SlotList(l2)) {       return l1;     } else if(tom_is_empty_concSlot_SlotList(tom_get_tail_concSlot_SlotList(l1))) {       return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(l1),l2);     } else {       return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(tom_get_tail_concSlot_SlotList(l1),l2));     }   }   private static   tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end, tom.engine.adt.tomslot.types.SlotList  tail) {     if(tom_equal_term_SlotList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(begin),( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot(tom_get_tail_concSlot_SlotList(begin),end,tail));     }   }    /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_Strategy(Object t1, Object t2) { return t1.equals(t2);}private static boolean tom_is_sort_Strategy(Object t) { return  t instanceof tom.library.sl.Strategy ;}/* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_mu( tom.library.sl.Strategy  var,  tom.library.sl.Strategy  v) { return  new tom.library.sl.Mu(var,v) ; }private static  tom.library.sl.Strategy  tom_make_MuVar( String  name) { return  new tom.library.sl.MuVar(name) ; }private static  tom.library.sl.Strategy  tom_make_Identity() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_make_All( tom.library.sl.Strategy  v) { return  new tom.library.sl.All(v) ; }private static boolean tom_is_fun_sym_Sequence( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.Sequence) ;}private static  tom.library.sl.Strategy  tom_empty_list_Sequence() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_cons_list_Sequence( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  new tom.library.sl.Sequence(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.THEN) ;}private static boolean tom_is_empty_Sequence_Strategy( tom.library.sl.Strategy  t) { return  t instanceof tom.library.sl.Identity ;}   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_Sequence_Strategy(l1)) {       return l2;     } else if(tom_is_empty_Sequence_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_Sequence(l1)) {       if(tom_is_empty_Sequence_Strategy(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()))) {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),tom_append_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_head_Sequence_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_tail_Sequence_Strategy(begin):tom_empty_list_Sequence()),end,tail));     }   }   private static boolean tom_is_fun_sym_SequenceId( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.SequenceId) ;}private static  tom.library.sl.Strategy  tom_empty_list_SequenceId() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_cons_list_SequenceId( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  new tom.library.sl.SequenceId(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.SequenceId.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.SequenceId.THEN) ;}private static boolean tom_is_empty_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  t instanceof tom.library.sl.Identity ;}   private static   tom.library.sl.Strategy  tom_append_list_SequenceId( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_SequenceId_Strategy(l1)) {       return l2;     } else if(tom_is_empty_SequenceId_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_SequenceId(l1)) {       if(tom_is_empty_SequenceId_Strategy(((tom_is_fun_sym_SequenceId(l1))?tom_get_tail_SequenceId_Strategy(l1):tom_empty_list_SequenceId()))) {         return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_head_SequenceId_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_head_SequenceId_Strategy(l1):l1),tom_append_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_tail_SequenceId_Strategy(l1):tom_empty_list_SequenceId()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_SequenceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(begin))?tom_get_head_SequenceId_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_SequenceId(((tom_is_fun_sym_SequenceId(begin))?tom_get_tail_SequenceId_Strategy(begin):tom_empty_list_SequenceId()),end,tail));     }   }    /* Generated by TOM (version 2.5alpha): Do not edit this file */ /* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence()))) ; }private static  tom.library.sl.Strategy  tom_make_InnermostId( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_cons_list_Sequence(tom_cons_list_SequenceId(v,tom_cons_list_SequenceId(tom_make_MuVar("_x"),tom_empty_list_SequenceId())),tom_empty_list_Sequence()))) ; }   
	
//--------------------------------------------------------

  public Constraint propagate(Constraint constraint) {
    return  (Constraint)tom_make_InnermostId(tom_make_SyntacticPatternMatching()).fire(constraint);
  }	

  private static class SyntacticPatternMatching extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {public SyntacticPatternMatching() { super(tom_make_Identity());}public int getChildCount() { return 1; }public jjtraveler.Visitable getChildAt(int i) {switch (i) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) {switch (i) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg) throws jjtraveler.VisitFailure {if (tom_is_sort_Constraint(tom__arg)) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);{ boolean tomMatch1NameNumbertom_anti_constraints_status= true ;if ( ( tom_is_fun_sym_MatchConstraint(tomMatch1Position1) ||  false  ) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch1Position1NameNumberpattern=tom_get_slot_MatchConstraint_pattern(tomMatch1Position1);if ( ( tom_is_fun_sym_RecordAppl(tomMatch1Position1NameNumberpattern) ||  false  ) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch1Position1NameNumberpatternNameNumberNameList=tom_get_slot_RecordAppl_NameList(tomMatch1Position1NameNumberpattern);if ( ( tom_is_fun_sym_concTomName(tomMatch1Position1NameNumberpatternNameNumberNameList) ||  false  ) ) {{ int tomMatch1Position1NameNumberpatternNameNumberNameListIndex1=0;{  tom.engine.adt.tomname.types.TomNameList  tomMatch1Position1NameNumberpatternNameNumberNameListList1=tomMatch1Position1NameNumberpatternNameNumberNameList;{  tom.engine.adt.tomname.types.TomNameList  tomMatch1Position1NameNumberpatternNameNumberNameListSave1=tomMatch1Position1NameNumberpatternNameNumberNameListList1;{if (!(tom_is_empty_concTomName_TomNameList(tomMatch1Position1NameNumberpatternNameNumberNameListList1))) {{  tom.engine.adt.tomname.types.TomName  tomMatch1Position1NameNumberpatternNameNumberNameListPosition1=tom_get_head_concTomName_TomNameList(tomMatch1Position1NameNumberpatternNameNumberNameListList1);tomMatch1Position1NameNumberpatternNameNumberNameListIndex1=tomMatch1Position1NameNumberpatternNameNumberNameListIndex1 + 1;tomMatch1Position1NameNumberpatternNameNumberNameListList1=tom_get_tail_concTomName_TomNameList(tomMatch1Position1NameNumberpatternNameNumberNameListList1);if ( ( tom_is_fun_sym_Name(tomMatch1Position1NameNumberpatternNameNumberNameListPosition1) ||  false  ) ) {{  tom.engine.adt.tomname.types.TomNameList  tom_nameList=tomMatch1Position1NameNumberpatternNameNumberNameList;{  tom.engine.adt.tomslot.types.SlotList  tom_slots=tom_get_slot_RecordAppl_Slots(tomMatch1Position1NameNumberpattern);{  tom.engine.adt.tomterm.types.TomTerm  _tom_fresh_var_10=tom_get_slot_MatchConstraint_subject(tomMatch1Position1);{  tom.engine.adt.tomterm.types.TomTerm  tom_g=_tom_fresh_var_10;{if ( ( tom_is_fun_sym_SymbolOf(_tom_fresh_var_10) ||  false  ) ) {tomMatch1NameNumbertom_anti_constraints_status= (  false  && tomMatch1NameNumbertom_anti_constraints_status ) ;} else {tomMatch1NameNumbertom_anti_constraints_status= (  true  && tomMatch1NameNumbertom_anti_constraints_status ) ;}if ((tomMatch1NameNumbertom_anti_constraints_status ==  true )) {if ( true ) {
















        // if this a list or array, nothing to do
        if(!TomBase.isSyntacticOperator(
            TomConstraintCompiler.getSymbolTable().getSymbolFromName(tom_get_slot_Name_String(tomMatch1Position1NameNumberpatternNameNumberNameListPosition1)))) { return tomMatch1Position1; }
        
        Constraint lastPart = tom_empty_list_AndConstraint();
        ArrayList<TomTerm> freshVarList = new ArrayList<TomTerm>();
        // we build the last part only once, and we store the fresh variables we generate
        if (tom_is_sort_SlotList(tom_slots)) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch2Position1=(( tom.engine.adt.tomslot.types.SlotList )tom_slots);if ( ( tom_is_fun_sym_concSlot(tomMatch2Position1) ||  false  ) ) {{ int tomMatch2Position1Index1=0;{  tom.engine.adt.tomslot.types.SlotList  tomMatch2Position1List1=tomMatch2Position1;{  tom.engine.adt.tomslot.types.SlotList  tomMatch2Position1Begin1=tomMatch2Position1List1;{  tom.engine.adt.tomslot.types.SlotList  tomMatch2Position1End1=tomMatch2Position1List1;{while (!(tom_is_empty_concSlot_SlotList(tomMatch2Position1End1))) {tomMatch2Position1List1=tomMatch2Position1End1;{{  tom.engine.adt.tomslot.types.SlotList  tomMatch2Position1Save2=tomMatch2Position1List1;{{  tom.engine.adt.tomslot.types.Slot  tomMatch2Position1Position2=tom_get_head_concSlot_SlotList(tomMatch2Position1List1);tomMatch2Position1Index1=tomMatch2Position1Index1 + 1;tomMatch2Position1List1=tom_get_tail_concSlot_SlotList(tomMatch2Position1List1);if ( ( tom_is_fun_sym_PairSlotAppl(tomMatch2Position1Position2) ||  false  ) ) {if ( true ) {

            TomTerm freshVar = TomConstraintCompiler.getFreshVariable(TomConstraintCompiler.getSlotType(tomMatch1Position1NameNumberpatternNameNumberNameListPosition1,tom_get_slot_PairSlotAppl_SlotName(tomMatch2Position1Position2)));
            // store the fresh variable
            freshVarList.add(freshVar);
            // build the last part
            lastPart = tom_append_list_AndConstraint(lastPart,tom_cons_list_AndConstraint(tom_make_MatchConstraint(tom_get_slot_PairSlotAppl_Appl(tomMatch2Position1Position2),freshVar),tom_empty_list_AndConstraint()));              
          }}}tomMatch2Position1List1=tomMatch2Position1Save2;}}tomMatch2Position1End1=tom_get_tail_concSlot_SlotList(tomMatch2Position1End1);}}tomMatch2Position1List1=tomMatch2Position1Begin1;}}}}}}}}

        // take each symbol and build the disjunction
        Constraint l = tom_empty_list_OrConstraintDisjunction();
        if (tom_is_sort_TomNameList(tom_nameList)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch3Position1=(( tom.engine.adt.tomname.types.TomNameList )tom_nameList);if ( ( tom_is_fun_sym_concTomName(tomMatch3Position1) ||  false  ) ) {{ int tomMatch3Position1Index1=0;{  tom.engine.adt.tomname.types.TomNameList  tomMatch3Position1List1=tomMatch3Position1;{  tom.engine.adt.tomname.types.TomNameList  tomMatch3Position1Begin1=tomMatch3Position1List1;{  tom.engine.adt.tomname.types.TomNameList  tomMatch3Position1End1=tomMatch3Position1List1;{while (!(tom_is_empty_concTomName_TomNameList(tomMatch3Position1End1))) {tomMatch3Position1List1=tomMatch3Position1End1;{{  tom.engine.adt.tomname.types.TomNameList  tomMatch3Position1Save2=tomMatch3Position1List1;{{  tom.engine.adt.tomname.types.TomName  tom_name=tom_get_head_concTomName_TomNameList(tomMatch3Position1List1);tomMatch3Position1Index1=tomMatch3Position1Index1 + 1;tomMatch3Position1List1=tom_get_tail_concTomName_TomNameList(tomMatch3Position1List1);if ( true ) {

            // the 'and' conjunction for each name
            Constraint andForName = tom_empty_list_AndConstraint();
            // add condition for symbolOf
            andForName = tom_cons_list_AndConstraint(tom_make_MatchConstraint(tom_make_RecordAppl(tom_get_slot_RecordAppl_Option(tomMatch1Position1NameNumberpattern),tom_cons_list_concTomName(tom_name,tom_empty_list_concTomName()),tom_empty_list_concSlot(),tom_get_slot_RecordAppl_Constraints(tomMatch1Position1NameNumberpattern)),tom_make_SymbolOf(tom_g)),tom_empty_list_AndConstraint());
            int counter = 0;          
            // for each slot
            if (tom_is_sort_SlotList(tom_slots)) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch4Position1=(( tom.engine.adt.tomslot.types.SlotList )tom_slots);if ( ( tom_is_fun_sym_concSlot(tomMatch4Position1) ||  false  ) ) {{ int tomMatch4Position1Index1=0;{  tom.engine.adt.tomslot.types.SlotList  tomMatch4Position1List1=tomMatch4Position1;{  tom.engine.adt.tomslot.types.SlotList  tomMatch4Position1Begin1=tomMatch4Position1List1;{  tom.engine.adt.tomslot.types.SlotList  tomMatch4Position1End1=tomMatch4Position1List1;{while (!(tom_is_empty_concSlot_SlotList(tomMatch4Position1End1))) {tomMatch4Position1List1=tomMatch4Position1End1;{{  tom.engine.adt.tomslot.types.SlotList  tomMatch4Position1Save2=tomMatch4Position1List1;{{  tom.engine.adt.tomslot.types.Slot  tomMatch4Position1Position2=tom_get_head_concSlot_SlotList(tomMatch4Position1List1);tomMatch4Position1Index1=tomMatch4Position1Index1 + 1;tomMatch4Position1List1=tom_get_tail_concSlot_SlotList(tomMatch4Position1List1);if ( ( tom_is_fun_sym_PairSlotAppl(tomMatch4Position1Position2) ||  false  ) ) {if ( true ) {
                                          
                TomTerm freshVar = freshVarList.get(counter);          
                andForName = tom_append_list_AndConstraint(andForName,tom_cons_list_AndConstraint(tom_make_MatchConstraint(freshVar,tom_make_Subterm(tom_name,tom_get_slot_PairSlotAppl_SlotName(tomMatch4Position1Position2),tom_g)),tom_empty_list_AndConstraint()));
                counter++;
              }}}tomMatch4Position1List1=tomMatch4Position1Save2;}}tomMatch4Position1End1=tom_get_tail_concSlot_SlotList(tomMatch4Position1End1);}}tomMatch4Position1List1=tomMatch4Position1Begin1;}}}}}}}}
// match slots
            l = tom_append_list_OrConstraintDisjunction(l,tom_cons_list_OrConstraintDisjunction(andForName,tom_empty_list_OrConstraintDisjunction()));
          }}tomMatch3Position1List1=tomMatch3Position1Save2;}}tomMatch3Position1End1=tom_get_tail_concTomName_TomNameList(tomMatch3Position1End1);}}tomMatch3Position1List1=tomMatch3Position1Begin1;}}}}}}}}

        return tom_append_list_AndConstraint(l,tom_append_list_AndConstraint(lastPart,tom_empty_list_AndConstraint()));
      }}tomMatch1NameNumbertom_anti_constraints_status= true ;}}}}}}}}tomMatch1Position1NameNumberpatternNameNumberNameListList1=tomMatch1Position1NameNumberpatternNameNumberNameListSave1;}}}}}}}}}}if ( ( tom_is_fun_sym_AndConstraint(tomMatch1Position1) ||  false  ) ) {{ int tomMatch1Position1Index1=0;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1List1=tomMatch1Position1;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Begin1=tomMatch1Position1List1;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1End1=tomMatch1Position1List1;{while (!( ( tom_is_empty_AndConstraint_Constraint(tomMatch1Position1End1) || tom_equal_term_Constraint(tomMatch1Position1End1, tom_empty_list_AndConstraint()) ) )) {tomMatch1Position1List1=tomMatch1Position1End1;{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Save2=tomMatch1Position1List1;{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Position2=((tom_is_fun_sym_AndConstraint(tomMatch1Position1List1))?(tom_get_head_AndConstraint_Constraint(tomMatch1Position1List1)):(tomMatch1Position1List1));tomMatch1Position1Index1=tomMatch1Position1Index1 + 1;tomMatch1Position1List1=((tom_is_fun_sym_AndConstraint(tomMatch1Position1List1))?(tom_get_tail_AndConstraint_Constraint(tomMatch1Position1List1)):(tom_empty_list_AndConstraint()));if ( ( tom_is_fun_sym_AntiMatchConstraint(tomMatch1Position1Position2) ||  false  ) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Begin3=tomMatch1Position1List1;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1End3=tomMatch1Position1List1;{while (!( ( tom_is_empty_AndConstraint_Constraint(tomMatch1Position1End3) || tom_equal_term_Constraint(tomMatch1Position1End3, tom_empty_list_AndConstraint()) ) )) {tomMatch1Position1List1=tomMatch1Position1End3;{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Save4=tomMatch1Position1List1;{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Position4=((tom_is_fun_sym_AndConstraint(tomMatch1Position1List1))?(tom_get_head_AndConstraint_Constraint(tomMatch1Position1List1)):(tomMatch1Position1List1));tomMatch1Position1Index1=tomMatch1Position1Index1 + 1;tomMatch1Position1List1=((tom_is_fun_sym_AndConstraint(tomMatch1Position1List1))?(tom_get_tail_AndConstraint_Constraint(tomMatch1Position1List1)):(tom_empty_list_AndConstraint()));if ( ( tom_is_fun_sym_MatchConstraint(tomMatch1Position1Position4) ||  false  ) ) {if ( true ) {










        return tom_get_slice_AndConstraint(tomMatch1Position1Begin1,tomMatch1Position1End1,tom_append_list_AndConstraint(tom_empty_list_AndConstraint(),tom_get_slice_AndConstraint(tomMatch1Position1Begin3,tomMatch1Position1End3,tom_append_list_AndConstraint(tom_empty_list_AndConstraint(),tom_cons_list_AndConstraint(tomMatch1Position1Position4,tom_cons_list_AndConstraint(tomMatch1Position1Position2,tom_append_list_AndConstraint(tomMatch1Position1List1,tom_empty_list_AndConstraint())))))));        
      }}}tomMatch1Position1List1=tomMatch1Position1Save4;}}tomMatch1Position1End3=((tom_is_fun_sym_AndConstraint(tomMatch1Position1End3))?(tom_get_tail_AndConstraint_Constraint(tomMatch1Position1End3)):(tom_empty_list_AndConstraint()));}}tomMatch1Position1List1=tomMatch1Position1Begin3;}}}}}tomMatch1Position1List1=tomMatch1Position1Save2;}}tomMatch1Position1End1=((tom_is_fun_sym_AndConstraint(tomMatch1Position1End1))?(tom_get_tail_AndConstraint_Constraint(tomMatch1Position1End1)):(tom_empty_list_AndConstraint()));}}tomMatch1Position1List1=tomMatch1Position1Begin1;}}}}}}if ( ( tom_is_fun_sym_MatchConstraint(tomMatch1Position1) ||  false  ) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch1Position1NameNumberpattern=tom_get_slot_MatchConstraint_pattern(tomMatch1Position1);if ( ( tom_is_fun_sym_AntiTerm(tomMatch1Position1NameNumberpattern) ||  false  ) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch1Position1NameNumberpatternNameNumberTomTerm=tom_get_slot_AntiTerm_TomTerm(tomMatch1Position1NameNumberpattern);{ boolean tomNameNumberboolMatch1Position1NameNumberpatternNameNumberTomTerm= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch1Position1NameNumberpatternNameNumberTomTermNameNumberConstraints= null ;if (tom_is_fun_sym_Variable(tomMatch1Position1NameNumberpatternNameNumberTomTerm)) {tomNameNumberboolMatch1Position1NameNumberpatternNameNumberTomTerm= true ;tomMatch1Position1NameNumberpatternNameNumberTomTermNameNumberConstraints=tom_get_slot_Variable_Constraints(tomMatch1Position1NameNumberpatternNameNumberTomTerm);} else {if (tom_is_fun_sym_RecordAppl(tomMatch1Position1NameNumberpatternNameNumberTomTerm)) {tomNameNumberboolMatch1Position1NameNumberpatternNameNumberTomTerm= true ;tomMatch1Position1NameNumberpatternNameNumberTomTermNameNumberConstraints=tom_get_slot_RecordAppl_Constraints(tomMatch1Position1NameNumberpatternNameNumberTomTerm);}}if (tomNameNumberboolMatch1Position1NameNumberpatternNameNumberTomTerm) {{  tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tomMatch1Position1NameNumberpatternNameNumberTomTermNameNumberConstraints;{  tom.engine.adt.tomterm.types.TomTerm  tom_term=tomMatch1Position1NameNumberpatternNameNumberTomTerm;if ( true ) {








        TomTerm freshVar = TomConstraintCompiler.getFreshVariable(TomConstraintCompiler.getTermTypeFromTerm(tom_term));
        Constraint assigns = tom_cons_list_AndConstraint(tom_make_AntiMatchConstraint(tom_make_MatchConstraint(tom_term,freshVar)),tom_empty_list_AndConstraint());
        // for each constraint
        if (tom_is_sort_ConstraintList(tom_constraints)) {{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch6Position1=(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_constraints);if ( ( tom_is_fun_sym_concConstraint(tomMatch6Position1) ||  false  ) ) {{ int tomMatch6Position1Index1=0;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch6Position1List1=tomMatch6Position1;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch6Position1Begin1=tomMatch6Position1List1;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch6Position1End1=tomMatch6Position1List1;{while (!(tom_is_empty_concConstraint_ConstraintList(tomMatch6Position1End1))) {tomMatch6Position1List1=tomMatch6Position1End1;{{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch6Position1Save2=tomMatch6Position1List1;{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch6Position1Position2=tom_get_head_concConstraint_ConstraintList(tomMatch6Position1List1);tomMatch6Position1Index1=tomMatch6Position1Index1 + 1;tomMatch6Position1List1=tom_get_tail_concConstraint_ConstraintList(tomMatch6Position1List1);if ( ( tom_is_fun_sym_AssignTo(tomMatch6Position1Position2) ||  false  ) ) {if ( true ) {
            
            assigns = tom_cons_list_AndConstraint(tom_make_MatchConstraint(tom_get_slot_AssignTo_Variable(tomMatch6Position1Position2),freshVar),tom_append_list_AndConstraint(assigns,tom_empty_list_AndConstraint()));
          }}}tomMatch6Position1List1=tomMatch6Position1Save2;}}tomMatch6Position1End1=tom_get_tail_concConstraint_ConstraintList(tomMatch6Position1End1);}}tomMatch6Position1List1=tomMatch6Position1Begin1;}}}}}}}}
// end match
        // add fresh var assignment
        return tom_cons_list_AndConstraint(tom_make_MatchConstraint(freshVar,tom_get_slot_MatchConstraint_subject(tomMatch1Position1)),tom_append_list_AndConstraint(assigns,tom_empty_list_AndConstraint()));
      }}}}}}}}}}if ( ( tom_is_fun_sym_AndConstraint(tomMatch1Position1) ||  false  ) ) {{ int tomMatch1Position1Index1=0;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1List1=tomMatch1Position1;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Begin1=tomMatch1Position1List1;{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1End1=tomMatch1Position1List1;{while (!( ( tom_is_empty_AndConstraint_Constraint(tomMatch1Position1End1) || tom_equal_term_Constraint(tomMatch1Position1End1, tom_empty_list_AndConstraint()) ) )) {tomMatch1Position1List1=tomMatch1Position1End1;{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Save2=tomMatch1Position1List1;{{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch1Position1Position2=((tom_is_fun_sym_AndConstraint(tomMatch1Position1List1))?(tom_get_head_AndConstraint_Constraint(tomMatch1Position1List1)):(tomMatch1Position1List1));tomMatch1Position1Index1=tomMatch1Position1Index1 + 1;tomMatch1Position1List1=((tom_is_fun_sym_AndConstraint(tomMatch1Position1List1))?(tom_get_tail_AndConstraint_Constraint(tomMatch1Position1List1)):(tom_empty_list_AndConstraint()));if ( ( tom_is_fun_sym_MatchConstraint(tomMatch1Position1Position2) ||  false  ) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch1Position1Position2NameNumberpattern=tom_get_slot_MatchConstraint_pattern(tomMatch1Position1Position2);if ( ( tom_is_fun_sym_Variable(tomMatch1Position1Position2NameNumberpattern) ||  false  ) ) {if ( true ) {











        Constraint toApplyOn = tom_append_list_AndConstraint(tomMatch1Position1List1,tom_empty_list_AndConstraint());
        Constraint res = (Constraint)tom_make_TopDown(tom_make_ReplaceVariable(tom_get_slot_Variable_AstName(tomMatch1Position1Position2NameNumberpattern),tom_get_slot_MatchConstraint_subject(tomMatch1Position1Position2))).fire(toApplyOn);
        if(res != toApplyOn) {
          return tom_get_slice_AndConstraint(tomMatch1Position1Begin1,tomMatch1Position1End1,tom_append_list_AndConstraint(tom_empty_list_AndConstraint(),tom_cons_list_AndConstraint(tomMatch1Position1Position2,tom_cons_list_AndConstraint(res,tom_empty_list_AndConstraint()))));
        }
      }}}}}tomMatch1Position1List1=tomMatch1Position1Save2;}}tomMatch1Position1End1=((tom_is_fun_sym_AndConstraint(tomMatch1Position1End1))?(tom_get_tail_AndConstraint_Constraint(tomMatch1Position1End1)):(tom_empty_list_AndConstraint()));}}tomMatch1Position1List1=tomMatch1Position1Begin1;}}}}}}}}return super.visit_Constraint(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_SyntacticPatternMatching() { return new SyntacticPatternMatching(); }

// end %strategy

  private static class ReplaceVariable extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  tom.engine.adt.tomname.types.TomName  varName; private  tom.engine.adt.tomterm.types.TomTerm  value; public ReplaceVariable( tom.engine.adt.tomname.types.TomName  varName,  tom.engine.adt.tomterm.types.TomTerm  value) { super(tom_make_Identity());this.varName=varName;this.value=value;}public  tom.engine.adt.tomname.types.TomName  getvarName() { return varName;}public  tom.engine.adt.tomterm.types.TomTerm  getvalue() { return value;}public int getChildCount() { return 1; }public jjtraveler.Visitable getChildAt(int i) {switch (i) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) {switch (i) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg) throws jjtraveler.VisitFailure {if (tom_is_sort_Constraint(tom__arg)) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch7Position1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if ( ( tom_is_fun_sym_MatchConstraint(tomMatch7Position1) ||  false  ) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch7Position1NameNumberpattern=tom_get_slot_MatchConstraint_pattern(tomMatch7Position1);if ( ( tom_is_fun_sym_Variable(tomMatch7Position1NameNumberpattern) ||  false  ) ) {{  tom.engine.adt.tomterm.types.TomTerm  tom_t=tom_get_slot_MatchConstraint_subject(tomMatch7Position1);if ( true ) {


        if(tom_get_slot_Variable_AstName(tomMatch7Position1NameNumberpattern)== varName) { 
          // if we propagate a variable, this should lead to en equality test
          // otherwise, it is a just a match
          return value.isVariable() ? tom_make_MatchConstraint(tom_make_TestVar(value),tom_t) : tom_make_MatchConstraint(value,tom_t); 
        }
      }}}}}}}return super.visit_Constraint(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_ReplaceVariable( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return new ReplaceVariable(t0,t1); }

// end strategy
}

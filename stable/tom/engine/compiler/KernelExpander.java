/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine.compiler;

import java.util.*;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.engine.TomBase;
import tom.engine.TomMessage;
import tom.engine.exception.TomRuntimeException;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.tools.SymbolTable;
import tom.engine.tools.ASTFactory;

import tom.library.sl.*;

public class KernelExpander {
  /* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_Strategy(Object t1, Object t2) { return t1.equals(t2);}private static boolean tom_is_sort_Strategy(Object t) { return  t instanceof tom.library.sl.Strategy ;}/* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) { return  (t1==t2) ;}private static boolean tom_is_sort_int(int t) { return  true ;} /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_char(char t1, char t2) { return  (t1==t2) ;}private static boolean tom_is_sort_char(char t) { return  true ;} private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  private static  tom.library.sl.Strategy  tom_make_mu( tom.library.sl.Strategy  var,  tom.library.sl.Strategy  v) { return  new tom.library.sl.Mu(var,v) ; }private static  tom.library.sl.Strategy  tom_make_MuVar( String  name) { return  new tom.library.sl.MuVar(name) ; }private static  tom.library.sl.Strategy  tom_make_Identity() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_make_All( tom.library.sl.Strategy  v) { return  new tom.library.sl.All(v) ; }private static  tom.library.sl.Strategy  tom_make_Fail() { return  new tom.library.sl.Fail() ; }private static boolean tom_is_fun_sym_Sequence( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.Sequence) ;}private static  tom.library.sl.Strategy  tom_empty_list_Sequence() { return  null ; }private static  tom.library.sl.Strategy  tom_cons_list_Sequence( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  (tail==null)?head:new tom.library.sl.Sequence(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.THEN) ;}private static boolean tom_is_empty_Sequence_Strategy( tom.library.sl.Strategy  t) { return  t == null ;}   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_Sequence_Strategy(l1)) {       return l2;     } else if(tom_is_empty_Sequence_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_Sequence(l1)) {       if(tom_is_empty_Sequence_Strategy(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()))) {         return tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),l2);       } else {         return tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),tom_append_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()),l2));       }     } else {       return tom_cons_list_Sequence(l1,l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(begin.equals(end)) {       return tail;     } else {       return tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_head_Sequence_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_tail_Sequence_Strategy(begin):tom_empty_list_Sequence()),end,tail));     }   }   private static boolean tom_is_fun_sym_Choice( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.Choice) ;}private static  tom.library.sl.Strategy  tom_empty_list_Choice() { return  null ; }private static  tom.library.sl.Strategy  tom_cons_list_Choice( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  (tail==null)?head:new tom.library.sl.Choice(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_Choice_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Choice.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_Choice_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Choice.THEN) ;}private static boolean tom_is_empty_Choice_Strategy( tom.library.sl.Strategy  t) { return  t ==null ;}   private static   tom.library.sl.Strategy  tom_append_list_Choice( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_Choice_Strategy(l1)) {       return l2;     } else if(tom_is_empty_Choice_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_Choice(l1)) {       if(tom_is_empty_Choice_Strategy(((tom_is_fun_sym_Choice(l1))?tom_get_tail_Choice_Strategy(l1):tom_empty_list_Choice()))) {         return tom_cons_list_Choice(((tom_is_fun_sym_Choice(l1))?tom_get_head_Choice_Strategy(l1):l1),l2);       } else {         return tom_cons_list_Choice(((tom_is_fun_sym_Choice(l1))?tom_get_head_Choice_Strategy(l1):l1),tom_append_list_Choice(((tom_is_fun_sym_Choice(l1))?tom_get_tail_Choice_Strategy(l1):tom_empty_list_Choice()),l2));       }     } else {       return tom_cons_list_Choice(l1,l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Choice( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(begin.equals(end)) {       return tail;     } else {       return tom_cons_list_Choice(((tom_is_fun_sym_Choice(begin))?tom_get_head_Choice_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_Choice(((tom_is_fun_sym_Choice(begin))?tom_get_tail_Choice_Strategy(begin):tom_empty_list_Choice()),end,tail));     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence()))) ; }   /* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_Collection(Object l1, Object l2) { return  l1.equals(l2) ;}private static boolean tom_is_sort_Collection(Object t) { return  t instanceof java.util.Collection ;} private static boolean tom_is_sort_KernelExpander(Object t) { return  t instanceof KernelExpander ;}private static  tom.library.sl.Strategy  tom_make_TopDownStop( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("x"),tom_cons_list_Choice(v,tom_cons_list_Choice(tom_make_All(tom_make_MuVar("x")),tom_empty_list_Choice())))












 ; }


  private SymbolTable symbolTable;

  public KernelExpander() {
    super();
  }

  public void setSymbolTable(SymbolTable symbolTable) {
    this.symbolTable = symbolTable;
  }

  private SymbolTable getSymbolTable() {
    return symbolTable;
  }

  protected TomSymbol getSymbolFromName(String tomName) {
    return TomBase.getSymbolFromName(tomName, getSymbolTable());
  }

  protected TomSymbol getSymbolFromType(TomType tomType) {
    return TomBase.getSymbolFromType(tomType, getSymbolTable());
  }
  // ------------------------------------------------------------
  /* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_Instruction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Instruction(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.Instruction ;}private static boolean tom_equal_term_InstructionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_InstructionList(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.InstructionList ;}private static boolean tom_equal_term_ConstraintInstruction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ConstraintInstruction(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.ConstraintInstruction ;}private static boolean tom_equal_term_ConstraintInstructionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ConstraintInstructionList(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.ConstraintInstructionList ;}private static boolean tom_equal_term_TomTypeList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTypeList(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomTypeList ;}private static boolean tom_equal_term_TomType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomType(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomType ;}private static boolean tom_equal_term_TomTypeDefinition(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTypeDefinition(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomTypeDefinition ;}private static boolean tom_equal_term_TomForwardType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomForwardType(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomForwardType ;}private static boolean tom_equal_term_TomSymbolList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomSymbolList(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomSymbolList ;}private static boolean tom_equal_term_TomVisit(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomVisit(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomVisit ;}private static boolean tom_equal_term_TomStructureTable(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomStructureTable(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomStructureTable ;}private static boolean tom_equal_term_Position(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Position(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.Position ;}private static boolean tom_equal_term_TomEntry(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomEntry(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomEntry ;}private static boolean tom_equal_term_TomEntryList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomEntryList(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomEntryList ;}private static boolean tom_equal_term_TomVisitList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomVisitList(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomVisitList ;}private static boolean tom_equal_term_TargetLanguage(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TargetLanguage(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TargetLanguage ;}private static boolean tom_equal_term_TomSymbolTable(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomSymbolTable(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomSymbolTable ;}private static boolean tom_equal_term_TomSymbol(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomSymbol(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomSymbol ;}private static boolean tom_equal_term_KeyEntry(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_KeyEntry(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.KeyEntry ;}private static boolean tom_equal_term_ElementaryTheory(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ElementaryTheory(Object t) { return  t instanceof tom.engine.adt.theory.types.ElementaryTheory ;}private static boolean tom_equal_term_Theory(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Theory(Object t) { return  t instanceof tom.engine.adt.theory.types.Theory ;}private static boolean tom_equal_term_DeclarationList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_DeclarationList(Object t) { return  t instanceof tom.engine.adt.tomdeclaration.types.DeclarationList ;}private static boolean tom_equal_term_Declaration(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Declaration(Object t) { return  t instanceof tom.engine.adt.tomdeclaration.types.Declaration ;}private static boolean tom_equal_term_TomNumber(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNumber(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNumber ;}private static boolean tom_equal_term_TomNumberList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNumberList(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNumberList ;}private static boolean tom_equal_term_TomNameList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNameList(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNameList ;}private static boolean tom_equal_term_TomName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomName(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomName ;}private static boolean tom_equal_term_Expression(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Expression(Object t) { return  t instanceof tom.engine.adt.tomexpression.types.Expression ;}private static boolean tom_equal_term_TomList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomList(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomList ;}private static boolean tom_equal_term_TomTerm(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTerm(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomTerm ;}private static boolean tom_equal_term_Option(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Option(Object t) { return  t instanceof tom.engine.adt.tomoption.types.Option ;}private static boolean tom_equal_term_OptionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OptionList(Object t) { return  t instanceof tom.engine.adt.tomoption.types.OptionList ;}private static boolean tom_equal_term_NumericConstraintType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_NumericConstraintType(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.NumericConstraintType ;}private static boolean tom_equal_term_Constraint(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Constraint(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.Constraint ;}private static boolean tom_equal_term_ConstraintList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ConstraintList(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.ConstraintList ;}private static boolean tom_equal_term_PairNameDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PairNameDecl(Object t) { return  t instanceof tom.engine.adt.tomslot.types.PairNameDecl ;}private static boolean tom_equal_term_PairNameDeclList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PairNameDeclList(Object t) { return  t instanceof tom.engine.adt.tomslot.types.PairNameDeclList ;}private static boolean tom_equal_term_SlotList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotList(Object t) { return  t instanceof tom.engine.adt.tomslot.types.SlotList ;}private static boolean tom_equal_term_Slot(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Slot(Object t) { return  t instanceof tom.engine.adt.tomslot.types.Slot ;}private static boolean tom_is_fun_sym_Match( tom.engine.adt.tominstruction.types.Instruction  t) { return  (t instanceof tom.engine.adt.tominstruction.types.instruction.Match) ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_Match( tom.engine.adt.tominstruction.types.ConstraintInstructionList  t0,  tom.engine.adt.tomoption.types.OptionList  t1) { return  tom.engine.adt.tominstruction.types.instruction.Match.make(t0, t1) ; }private static  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_get_slot_Match_ConstraintInstructionList( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getConstraintInstructionList() ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Match_Option( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getOption() ;}private static boolean tom_is_fun_sym_ConstraintInstruction( tom.engine.adt.tominstruction.types.ConstraintInstruction  t) { return  (t instanceof tom.engine.adt.tominstruction.types.constraintinstruction.ConstraintInstruction) ;}private static  tom.engine.adt.tominstruction.types.ConstraintInstruction  tom_make_ConstraintInstruction( tom.engine.adt.tomconstraint.types.Constraint  t0,  tom.engine.adt.tominstruction.types.Instruction  t1,  tom.engine.adt.tomoption.types.OptionList  t2) { return  tom.engine.adt.tominstruction.types.constraintinstruction.ConstraintInstruction.make(t0, t1, t2) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_slot_ConstraintInstruction_Constraint( tom.engine.adt.tominstruction.types.ConstraintInstruction  t) { return  t.getConstraint() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_ConstraintInstruction_Action( tom.engine.adt.tominstruction.types.ConstraintInstruction  t) { return  t.getAction() ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_ConstraintInstruction_Option( tom.engine.adt.tominstruction.types.ConstraintInstruction  t) { return  t.getOption() ;}private static boolean tom_is_fun_sym_Type( tom.engine.adt.tomtype.types.TomType  t) { return  (t instanceof tom.engine.adt.tomtype.types.tomtype.Type) ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TomType( tom.engine.adt.tomtype.types.TomType  t) { return  t.getTomType() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TlType( tom.engine.adt.tomtype.types.TomType  t) { return  t.getTlType() ;}private static boolean tom_is_fun_sym_TomTypeAlone( tom.engine.adt.tomtype.types.TomType  t) { return  (t instanceof tom.engine.adt.tomtype.types.tomtype.TomTypeAlone) ;}private static  String  tom_get_slot_TomTypeAlone_String( tom.engine.adt.tomtype.types.TomType  t) { return  t.getString() ;}private static boolean tom_is_fun_sym_TypesToType( tom.engine.adt.tomtype.types.TomType  t) { return  (t instanceof tom.engine.adt.tomtype.types.tomtype.TypesToType) ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_get_slot_TypesToType_Domain( tom.engine.adt.tomtype.types.TomType  t) { return  t.getDomain() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_TypesToType_Codomain( tom.engine.adt.tomtype.types.TomType  t) { return  t.getCodomain() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_make_EmptyType() { return  tom.engine.adt.tomtype.types.tomtype.EmptyType.make() ; }private static boolean tom_is_fun_sym_VisitTerm( tom.engine.adt.tomsignature.types.TomVisit  t) { return  (t instanceof tom.engine.adt.tomsignature.types.tomvisit.VisitTerm) ;}private static  tom.engine.adt.tomsignature.types.TomVisit  tom_make_VisitTerm( tom.engine.adt.tomtype.types.TomType  t0,  tom.engine.adt.tominstruction.types.ConstraintInstructionList  t1,  tom.engine.adt.tomoption.types.OptionList  t2) { return  tom.engine.adt.tomsignature.types.tomvisit.VisitTerm.make(t0, t1, t2) ; }private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VisitTerm_VNode( tom.engine.adt.tomsignature.types.TomVisit  t) { return  t.getVNode() ;}private static  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_get_slot_VisitTerm_AstConstraintInstructionList( tom.engine.adt.tomsignature.types.TomVisit  t) { return  t.getAstConstraintInstructionList() ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VisitTerm_Option( tom.engine.adt.tomsignature.types.TomVisit  t) { return  t.getOption() ;}private static boolean tom_is_fun_sym_TL( tom.engine.adt.tomsignature.types.TargetLanguage  t) { return  (t instanceof tom.engine.adt.tomsignature.types.targetlanguage.TL) ;}private static  String  tom_get_slot_TL_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) { return  t.getCode() ;}private static  tom.engine.adt.tomsignature.types.Position  tom_get_slot_TL_Start( tom.engine.adt.tomsignature.types.TargetLanguage  t) { return  t.getStart() ;}private static  tom.engine.adt.tomsignature.types.Position  tom_get_slot_TL_End( tom.engine.adt.tomsignature.types.TargetLanguage  t) { return  t.getEnd() ;}private static boolean tom_is_fun_sym_ITL( tom.engine.adt.tomsignature.types.TargetLanguage  t) { return  (t instanceof tom.engine.adt.tomsignature.types.targetlanguage.ITL) ;}private static  String  tom_get_slot_ITL_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) { return  t.getCode() ;}private static boolean tom_is_fun_sym_Comment( tom.engine.adt.tomsignature.types.TargetLanguage  t) { return  (t instanceof tom.engine.adt.tomsignature.types.targetlanguage.Comment) ;}private static  String  tom_get_slot_Comment_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) { return  t.getCode() ;}private static boolean tom_is_fun_sym_emptySymbol( tom.engine.adt.tomsignature.types.TomSymbol  t) { return  (t instanceof tom.engine.adt.tomsignature.types.tomsymbol.emptySymbol) ;}private static  tom.engine.adt.tomsignature.types.TomSymbol  tom_make_emptySymbol() { return  tom.engine.adt.tomsignature.types.tomsymbol.emptySymbol.make() ; }private static boolean tom_is_fun_sym_Symbol( tom.engine.adt.tomsignature.types.TomSymbol  t) { return  (t instanceof tom.engine.adt.tomsignature.types.tomsymbol.Symbol) ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Symbol_AstName( tom.engine.adt.tomsignature.types.TomSymbol  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Symbol_TypesToType( tom.engine.adt.tomsignature.types.TomSymbol  t) { return  t.getTypesToType() ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_slot_Symbol_PairNameDeclList( tom.engine.adt.tomsignature.types.TomSymbol  t) { return  t.getPairNameDeclList() ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Symbol_Option( tom.engine.adt.tomsignature.types.TomSymbol  t) { return  t.getOption() ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) { return  (t instanceof tom.engine.adt.tomname.types.tomname.Name) ;}private static  tom.engine.adt.tomname.types.TomName  tom_make_Name( String  t0) { return  tom.engine.adt.tomname.types.tomname.Name.make(t0) ; }private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) { return  t.getString() ;}private static boolean tom_is_fun_sym_TermAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_TermAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_TermAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_TermAppl_Args( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getArgs() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_TermAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_RecordAppl( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomNameList  t1,  tom.engine.adt.tomslot.types.SlotList  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(t0, t1, t2, t3) ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getSlots() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_XMLAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.XMLAppl) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_XMLAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_XMLAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_XMLAppl_AttrList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAttrList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_XMLAppl_ChildList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getChildList() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_XMLAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_Variable( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomName  t1,  tom.engine.adt.tomtype.types.TomType  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.Variable.make(t0, t1, t2, t3) ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_VariableStar( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomName  t1,  tom.engine.adt.tomtype.types.TomType  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.VariableStar.make(t0, t1, t2, t3) ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_VariableStar_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_VariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_UnamedVariable( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariable_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_UnamedVariableStar( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar) ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_UnamedVariableStar( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomtype.types.TomType  t1,  tom.engine.adt.tomconstraint.types.ConstraintList  t2) { return  tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar.make(t0, t1, t2) ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_TomTypeToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.TomTypeToTomTerm) ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_TomTypeToTomTerm_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static boolean tom_is_fun_sym_AntiTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm) ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_AntiTerm_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getTomTerm() ;}private static boolean tom_is_fun_sym_BuildReducedTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm) ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_BuildReducedTerm( tom.engine.adt.tomterm.types.TomTerm  t0,  tom.engine.adt.tomtype.types.TomType  t1) { return  tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm.make(t0, t1) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildReducedTerm_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getTomTerm() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_BuildReducedTerm_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static boolean tom_is_fun_sym_OriginTracking( tom.engine.adt.tomoption.types.Option  t) { return  (t instanceof tom.engine.adt.tomoption.types.option.OriginTracking) ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_OriginTracking_AstName( tom.engine.adt.tomoption.types.Option  t) { return  t.getAstName() ;}private static  int  tom_get_slot_OriginTracking_Line( tom.engine.adt.tomoption.types.Option  t) { return  t.getLine() ;}private static  String  tom_get_slot_OriginTracking_FileName( tom.engine.adt.tomoption.types.Option  t) { return  t.getFileName() ;}private static boolean tom_is_fun_sym_MatchConstraint( tom.engine.adt.tomconstraint.types.Constraint  t) { return  (t instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_make_MatchConstraint( tom.engine.adt.tomterm.types.TomTerm  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(t0, t1) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MatchConstraint_pattern( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t.getpattern() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MatchConstraint_subject( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t.getsubject() ;}private static boolean tom_is_fun_sym_NumericConstraint( tom.engine.adt.tomconstraint.types.Constraint  t) { return  (t instanceof tom.engine.adt.tomconstraint.types.constraint.NumericConstraint) ;}private static  tom.engine.adt.tomconstraint.types.Constraint  tom_make_NumericConstraint( tom.engine.adt.tomterm.types.TomTerm  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomconstraint.types.NumericConstraintType  t2) { return  tom.engine.adt.tomconstraint.types.constraint.NumericConstraint.make(t0, t1, t2) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_NumericConstraint_Left( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t.getLeft() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_NumericConstraint_Right( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t.getRight() ;}private static  tom.engine.adt.tomconstraint.types.NumericConstraintType  tom_get_slot_NumericConstraint_Type( tom.engine.adt.tomconstraint.types.Constraint  t) { return  t.getType() ;}private static boolean tom_is_fun_sym_PairSlotAppl( tom.engine.adt.tomslot.types.Slot  t) { return  (t instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ;}private static  tom.engine.adt.tomslot.types.Slot  tom_make_PairSlotAppl( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(t0, t1) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_PairSlotAppl_SlotName( tom.engine.adt.tomslot.types.Slot  t) { return  t.getSlotName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_PairSlotAppl_Appl( tom.engine.adt.tomslot.types.Slot  t) { return  t.getAppl() ;}private static boolean tom_is_fun_sym_concConstraintInstruction( tom.engine.adt.tominstruction.types.ConstraintInstructionList  t) { return  ((t instanceof tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction) || (t instanceof tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction)) ;}private static  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_empty_list_concConstraintInstruction() { return  tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction.make() ; }private static  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_cons_list_concConstraintInstruction( tom.engine.adt.tominstruction.types.ConstraintInstruction  e,  tom.engine.adt.tominstruction.types.ConstraintInstructionList  l) { return  tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make(e,l) ; }private static  tom.engine.adt.tominstruction.types.ConstraintInstruction  tom_get_head_concConstraintInstruction_ConstraintInstructionList( tom.engine.adt.tominstruction.types.ConstraintInstructionList  l) { return  l.getHeadconcConstraintInstruction() ;}private static  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_get_tail_concConstraintInstruction_ConstraintInstructionList( tom.engine.adt.tominstruction.types.ConstraintInstructionList  l) { return  l.getTailconcConstraintInstruction() ;}private static boolean tom_is_empty_concConstraintInstruction_ConstraintInstructionList( tom.engine.adt.tominstruction.types.ConstraintInstructionList  l) { return  l.isEmptyconcConstraintInstruction() ;}   private static   tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_append_list_concConstraintInstruction( tom.engine.adt.tominstruction.types.ConstraintInstructionList l1,  tom.engine.adt.tominstruction.types.ConstraintInstructionList  l2) {     if( l1.isEmptyconcConstraintInstruction() ) {       return l2;     } else if( l2.isEmptyconcConstraintInstruction() ) {       return l1;     } else if(  l1.getTailconcConstraintInstruction() .isEmptyconcConstraintInstruction() ) {       return  tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( l1.getHeadconcConstraintInstruction() ,l2) ;     } else {       return  tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( l1.getHeadconcConstraintInstruction() ,tom_append_list_concConstraintInstruction( l1.getTailconcConstraintInstruction() ,l2)) ;     }   }   private static   tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_get_slice_concConstraintInstruction( tom.engine.adt.tominstruction.types.ConstraintInstructionList  begin,  tom.engine.adt.tominstruction.types.ConstraintInstructionList  end, tom.engine.adt.tominstruction.types.ConstraintInstructionList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( begin.getHeadconcConstraintInstruction() ,( tom.engine.adt.tominstruction.types.ConstraintInstructionList )tom_get_slice_concConstraintInstruction( begin.getTailconcConstraintInstruction() ,end,tail)) ;     }   }   private static boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomname.types.TomNameList  t) { return  ((t instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (t instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_empty_list_concTomName() { return  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ; }private static  tom.engine.adt.tomname.types.TomNameList  tom_cons_list_concTomName( tom.engine.adt.tomname.types.TomName  e,  tom.engine.adt.tomname.types.TomNameList  l) { return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_head_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getHeadconcTomName() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_tail_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getTailconcTomName() ;}private static boolean tom_is_empty_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.isEmptyconcTomName() ;}   private static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if( l1.isEmptyconcTomName() ) {       return l2;     } else if( l2.isEmptyconcTomName() ) {       return l1;     } else if(  l1.getTailconcTomName() .isEmptyconcTomName() ) {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,l2) ;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,tom_append_list_concTomName( l1.getTailconcTomName() ,l2)) ;     }   }   private static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( begin.getHeadconcTomName() ,( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName( begin.getTailconcTomName() ,end,tail)) ;     }   }   private static boolean tom_is_fun_sym_concTomTerm( tom.engine.adt.tomterm.types.TomList  t) { return  ((t instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (t instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ;}private static  tom.engine.adt.tomterm.types.TomList  tom_empty_list_concTomTerm() { return  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ; }private static  tom.engine.adt.tomterm.types.TomList  tom_cons_list_concTomTerm( tom.engine.adt.tomterm.types.TomTerm  e,  tom.engine.adt.tomterm.types.TomList  l) { return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(e,l) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_head_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) { return  l.getHeadconcTomTerm() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_tail_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) { return  l.getTailconcTomTerm() ;}private static boolean tom_is_empty_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) { return  l.isEmptyconcTomTerm() ;}   private static   tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList l1,  tom.engine.adt.tomterm.types.TomList  l2) {     if( l1.isEmptyconcTomTerm() ) {       return l2;     } else if( l2.isEmptyconcTomTerm() ) {       return l1;     } else if(  l1.getTailconcTomTerm() .isEmptyconcTomTerm() ) {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( l1.getHeadconcTomTerm() ,l2) ;     } else {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( l1.getHeadconcTomTerm() ,tom_append_list_concTomTerm( l1.getTailconcTomTerm() ,l2)) ;     }   }   private static   tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end, tom.engine.adt.tomterm.types.TomList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( begin.getHeadconcTomTerm() ,( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm( begin.getTailconcTomTerm() ,end,tail)) ;     }   }   private static boolean tom_is_fun_sym_concOption( tom.engine.adt.tomoption.types.OptionList  t) { return  ((t instanceof tom.engine.adt.tomoption.types.optionlist.ConsconcOption) || (t instanceof tom.engine.adt.tomoption.types.optionlist.EmptyconcOption)) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_empty_list_concOption() { return  tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_cons_list_concOption( tom.engine.adt.tomoption.types.Option  e,  tom.engine.adt.tomoption.types.OptionList  l) { return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make(e,l) ; }private static  tom.engine.adt.tomoption.types.Option  tom_get_head_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.getHeadconcOption() ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_tail_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.getTailconcOption() ;}private static boolean tom_is_empty_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.isEmptyconcOption() ;}   private static   tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList l1,  tom.engine.adt.tomoption.types.OptionList  l2) {     if( l1.isEmptyconcOption() ) {       return l2;     } else if( l2.isEmptyconcOption() ) {       return l1;     } else if(  l1.getTailconcOption() .isEmptyconcOption() ) {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( l1.getHeadconcOption() ,l2) ;     } else {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( l1.getHeadconcOption() ,tom_append_list_concOption( l1.getTailconcOption() ,l2)) ;     }   }   private static   tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end, tom.engine.adt.tomoption.types.OptionList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( begin.getHeadconcOption() ,( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption( begin.getTailconcOption() ,end,tail)) ;     }   }   private static boolean tom_is_fun_sym_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  t) { return  ((t instanceof tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint) || (t instanceof tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint)) ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_empty_list_concConstraint() { return  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ; }private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_cons_list_concConstraint( tom.engine.adt.tomconstraint.types.Constraint  e,  tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make(e,l) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_head_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  l.getHeadconcConstraint() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_tail_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  l.getTailconcConstraint() ;}private static boolean tom_is_empty_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  l.isEmptyconcConstraint() ;}   private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {     if( l1.isEmptyconcConstraint() ) {       return l2;     } else if( l2.isEmptyconcConstraint() ) {       return l1;     } else if(  l1.getTailconcConstraint() .isEmptyconcConstraint() ) {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,l2) ;     } else {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,tom_append_list_concConstraint( l1.getTailconcConstraint() ,l2)) ;     }   }   private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end, tom.engine.adt.tomconstraint.types.ConstraintList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( begin.getHeadconcConstraint() ,( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint( begin.getTailconcConstraint() ,end,tail)) ;     }   }   private static boolean tom_is_fun_sym_concSlot( tom.engine.adt.tomslot.types.SlotList  t) { return  ((t instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (t instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_empty_list_concSlot() { return  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ; }private static  tom.engine.adt.tomslot.types.SlotList  tom_cons_list_concSlot( tom.engine.adt.tomslot.types.Slot  e,  tom.engine.adt.tomslot.types.SlotList  l) { return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.engine.adt.tomslot.types.Slot  tom_get_head_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.getHeadconcSlot() ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_tail_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.getTailconcSlot() ;}private static boolean tom_is_empty_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.isEmptyconcSlot() ;}   private static   tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList l1,  tom.engine.adt.tomslot.types.SlotList  l2) {     if( l1.isEmptyconcSlot() ) {       return l2;     } else if( l2.isEmptyconcSlot() ) {       return l1;     } else if(  l1.getTailconcSlot() .isEmptyconcSlot() ) {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,l2) ;     } else {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,tom_append_list_concSlot( l1.getTailconcSlot() ,l2)) ;     }   }   private static   tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end, tom.engine.adt.tomslot.types.SlotList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( begin.getHeadconcSlot() ,( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot( begin.getTailconcSlot() ,end,tail)) ;     }   }    
  // ------------------------------------------------------------

  /*
   * The "expandVariable" phase expands RecordAppl into Variable
   * we focus on
   * - Match
   *
   * The types of subjects are inferred from the patterns
   *
   * Variable and TermAppl are expanded in the TomTerm case
   */

  protected tom.library.sl.Visitable expandType(tom.library.sl.Visitable subject) {
    try {
      return tom_make_TopDown(tom_make_expandType(this)).visit(subject);
    } catch(tom.library.sl.VisitFailure e) {
      throw new TomRuntimeException("expandType: failure on " + subject);
    }
  }
  private static class expandType extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  KernelExpander  expander; public expandType( KernelExpander  expander) { super(tom_make_Identity());this.expander=expander;}public  KernelExpander  getexpander() { return expander;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomtype.types.TomType  visit_TomType( tom.engine.adt.tomtype.types.TomType  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TomType(tom__arg)) {{  tom.engine.adt.tomtype.types.TomType  tomMatch169NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )tom__arg);if (tom_is_fun_sym_TomTypeAlone(tomMatch169NameNumberfreshSubject_1)) {{  String  tomMatch169NameNumber_freshVar_0=tom_get_slot_TomTypeAlone_String(tomMatch169NameNumberfreshSubject_1);if ( true ) {


        TomType type = expander.getType(tomMatch169NameNumber_freshVar_0);
        if(type != null) {
          return type;
        } else {
          return tomMatch169NameNumberfreshSubject_1; // useful for TomTypeAlone("unknown type")
        }
      }}}}}return super.visit_TomType(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_expandType( KernelExpander  t0) { return new expandType(t0); }private static class replace_expandVariable extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  tom.engine.adt.tomtype.types.TomType  contextType; private  KernelExpander  expander; public replace_expandVariable( tom.engine.adt.tomtype.types.TomType  contextType,  KernelExpander  expander) { super(tom_make_Fail());this.contextType=contextType;this.expander=expander;}public  tom.engine.adt.tomtype.types.TomType  getcontextType() { return contextType;}public  KernelExpander  getexpander() { return expander;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomoption.types.Option  visit_Option( tom.engine.adt.tomoption.types.Option  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Option(tom__arg)) {{  tom.engine.adt.tomoption.types.Option  tomMatch170NameNumberfreshSubject_1=(( tom.engine.adt.tomoption.types.Option )tom__arg);if (tom_is_fun_sym_OriginTracking(tomMatch170NameNumberfreshSubject_1)) {if ( true ) {






 return tomMatch170NameNumberfreshSubject_1; }}}}return super.visit_Option(tom__arg); }public  tom.engine.adt.tomsignature.types.TargetLanguage  visit_TargetLanguage( tom.engine.adt.tomsignature.types.TargetLanguage  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TargetLanguage(tom__arg)) {{  tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch171NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TargetLanguage )tom__arg);if (tom_is_fun_sym_TL(tomMatch171NameNumberfreshSubject_1)) {if ( true ) {



 return tomMatch171NameNumberfreshSubject_1; }}if (tom_is_fun_sym_ITL(tomMatch171NameNumberfreshSubject_1)) {if ( true ) {
 return tomMatch171NameNumberfreshSubject_1; }}if (tom_is_fun_sym_Comment(tomMatch171NameNumberfreshSubject_1)) {if ( true ) {
 return tomMatch171NameNumberfreshSubject_1; }}}}return super.visit_TargetLanguage(tom__arg); }public  tom.engine.adt.tomtype.types.TomType  visit_TomType( tom.engine.adt.tomtype.types.TomType  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TomType(tom__arg)) {{  tom.engine.adt.tomtype.types.TomType  tomMatch172NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )tom__arg);if (tom_is_fun_sym_TomTypeAlone(tomMatch172NameNumberfreshSubject_1)) {{  String  tomMatch172NameNumber_freshVar_0=tom_get_slot_TomTypeAlone_String(tomMatch172NameNumberfreshSubject_1);if ( true ) {




        TomType type = expander.getType(tomMatch172NameNumber_freshVar_0);
        if(type != null) {
          return type;
        } else {
          return tomMatch172NameNumberfreshSubject_1; // useful for TomTypeAlone("unknown type")
        }
      }}}}}return super.visit_TomType(tom__arg); }public  tom.engine.adt.tomsignature.types.TomVisit  visit_TomVisit( tom.engine.adt.tomsignature.types.TomVisit  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TomVisit(tom__arg)) {{  tom.engine.adt.tomsignature.types.TomVisit  tomMatch173NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomVisit )tom__arg);if (tom_is_fun_sym_VisitTerm(tomMatch173NameNumberfreshSubject_1)) {{  tom.engine.adt.tomtype.types.TomType  tomMatch173NameNumber_freshVar_0=tom_get_slot_VisitTerm_VNode(tomMatch173NameNumberfreshSubject_1);{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch173NameNumber_freshVar_1=tom_get_slot_VisitTerm_AstConstraintInstructionList(tomMatch173NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tomMatch173NameNumber_freshVar_2=tom_get_slot_VisitTerm_Option(tomMatch173NameNumberfreshSubject_1);{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_constraintInstructionList=tomMatch173NameNumber_freshVar_1;if ( true ) {




        ArrayList<Constraint> constraints = new ArrayList<Constraint>();
        tom_make_TopDown(tom_make_CollectConstraints(constraints)).visitLight(tom_constraintInstructionList);
        TomType newType = (TomType)expander.expandVariable(contextType,tomMatch173NameNumber_freshVar_0);
        ConstraintInstructionList newConstraintInstructionList = tom_empty_list_concConstraintInstruction();
        if (tom_is_sort_ConstraintInstructionList(tom_constraintInstructionList)) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch174NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.ConstraintInstructionList )tom_constraintInstructionList);if (tom_is_fun_sym_concConstraintInstruction(tomMatch174NameNumberfreshSubject_1)) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch174NameNumber_freshVar_0=tomMatch174NameNumberfreshSubject_1;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch174NameNumber_begin_2=tomMatch174NameNumber_freshVar_0;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch174NameNumber_end_3=tomMatch174NameNumber_freshVar_0;do {{{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch174NameNumber_freshVar_1=tomMatch174NameNumber_end_3;if (!(tom_is_empty_concConstraintInstruction_ConstraintInstructionList(tomMatch174NameNumber_freshVar_1))) {if (tom_is_fun_sym_ConstraintInstruction(tom_get_head_concConstraintInstruction_ConstraintInstructionList(tomMatch174NameNumber_freshVar_1))) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch174NameNumber_freshVar_6=tom_get_slot_ConstraintInstruction_Constraint(tom_get_head_concConstraintInstruction_ConstraintInstructionList(tomMatch174NameNumber_freshVar_1));{  tom.engine.adt.tominstruction.types.Instruction  tomMatch174NameNumber_freshVar_7=tom_get_slot_ConstraintInstruction_Action(tom_get_head_concConstraintInstruction_ConstraintInstructionList(tomMatch174NameNumber_freshVar_1));{  tom.engine.adt.tomoption.types.OptionList  tomMatch174NameNumber_freshVar_8=tom_get_slot_ConstraintInstruction_Option(tom_get_head_concConstraintInstruction_ConstraintInstructionList(tomMatch174NameNumber_freshVar_1));{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch174NameNumber_freshVar_4=tom_get_tail_concConstraintInstruction_ConstraintInstructionList(tomMatch174NameNumber_freshVar_1);if ( true ) {

            /*
             * Try to guess types for tomSubjectList
             */
            ArrayList<TomTerm> newPatternList = new ArrayList<TomTerm>();
            Constraint newConstraint = (Constraint)tom_make_TopDown(tom_make_expandConstraint(newType,newPatternList,constraints,expander)).visitLight(tomMatch174NameNumber_freshVar_6);
            Instruction newAction = expandAction(tomMatch174NameNumber_freshVar_7,ASTFactory.makeList(newPatternList),expander);
            newConstraintInstructionList = tom_append_list_concConstraintInstruction(newConstraintInstructionList,tom_cons_list_concConstraintInstruction(tom_make_ConstraintInstruction(newConstraint,newAction,tomMatch174NameNumber_freshVar_8),tom_empty_list_concConstraintInstruction()));
          }}}}}}}}if (tom_is_empty_concConstraintInstruction_ConstraintInstructionList(tomMatch174NameNumber_end_3)) {tomMatch174NameNumber_end_3=tomMatch174NameNumber_begin_2;} else {tomMatch174NameNumber_end_3=tom_get_tail_concConstraintInstruction_ConstraintInstructionList(tomMatch174NameNumber_end_3);}}} while(!(tom_equal_term_ConstraintInstructionList(tomMatch174NameNumber_end_3, tomMatch174NameNumber_begin_2)));}}}}}}
        
        return tom_make_VisitTerm(newType,newConstraintInstructionList,tomMatch173NameNumber_freshVar_2);   
      }}}}}}}}return super.visit_TomVisit(tom__arg); }public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction( tom.engine.adt.tominstruction.types.Instruction  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Instruction(tom__arg)) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch175NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg);if (tom_is_fun_sym_Match(tomMatch175NameNumberfreshSubject_1)) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch175NameNumber_freshVar_0=tom_get_slot_Match_ConstraintInstructionList(tomMatch175NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tomMatch175NameNumber_freshVar_1=tom_get_slot_Match_Option(tomMatch175NameNumberfreshSubject_1);{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_constraintInstructionList=tomMatch175NameNumber_freshVar_0;if ( true ) {









        ArrayList<Constraint> constraints = new ArrayList<Constraint>();
        tom_make_TopDown(tom_make_CollectConstraints(constraints)).visitLight(tom_constraintInstructionList);
        ConstraintInstructionList newConstraintInstructionList = tom_empty_list_concConstraintInstruction();
        if (tom_is_sort_ConstraintInstructionList(tom_constraintInstructionList)) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch176NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.ConstraintInstructionList )tom_constraintInstructionList);if (tom_is_fun_sym_concConstraintInstruction(tomMatch176NameNumberfreshSubject_1)) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch176NameNumber_freshVar_0=tomMatch176NameNumberfreshSubject_1;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch176NameNumber_begin_2=tomMatch176NameNumber_freshVar_0;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch176NameNumber_end_3=tomMatch176NameNumber_freshVar_0;do {{{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch176NameNumber_freshVar_1=tomMatch176NameNumber_end_3;if (!(tom_is_empty_concConstraintInstruction_ConstraintInstructionList(tomMatch176NameNumber_freshVar_1))) {if (tom_is_fun_sym_ConstraintInstruction(tom_get_head_concConstraintInstruction_ConstraintInstructionList(tomMatch176NameNumber_freshVar_1))) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch176NameNumber_freshVar_6=tom_get_slot_ConstraintInstruction_Constraint(tom_get_head_concConstraintInstruction_ConstraintInstructionList(tomMatch176NameNumber_freshVar_1));{  tom.engine.adt.tominstruction.types.Instruction  tomMatch176NameNumber_freshVar_7=tom_get_slot_ConstraintInstruction_Action(tom_get_head_concConstraintInstruction_ConstraintInstructionList(tomMatch176NameNumber_freshVar_1));{  tom.engine.adt.tomoption.types.OptionList  tomMatch176NameNumber_freshVar_8=tom_get_slot_ConstraintInstruction_Option(tom_get_head_concConstraintInstruction_ConstraintInstructionList(tomMatch176NameNumber_freshVar_1));{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch176NameNumber_freshVar_4=tom_get_tail_concConstraintInstruction_ConstraintInstructionList(tomMatch176NameNumber_freshVar_1);if ( true ) {

            /*
             * Try to guess types for tomSubjectList
             */
            ArrayList<TomTerm> newPatternList = new ArrayList<TomTerm>();
            Constraint newConstraint = (Constraint)tom_make_TopDown(tom_make_expandConstraint(contextType,newPatternList,constraints,expander)).visitLight(tomMatch176NameNumber_freshVar_6);
            Instruction newAction = expandAction(tomMatch176NameNumber_freshVar_7,ASTFactory.makeList(newPatternList),expander);
            newConstraintInstructionList = tom_append_list_concConstraintInstruction(newConstraintInstructionList,tom_cons_list_concConstraintInstruction(tom_make_ConstraintInstruction(newConstraint,newAction,tomMatch176NameNumber_freshVar_8),tom_empty_list_concConstraintInstruction()));
          }}}}}}}}if (tom_is_empty_concConstraintInstruction_ConstraintInstructionList(tomMatch176NameNumber_end_3)) {tomMatch176NameNumber_end_3=tomMatch176NameNumber_begin_2;} else {tomMatch176NameNumber_end_3=tom_get_tail_concConstraintInstruction_ConstraintInstructionList(tomMatch176NameNumber_end_3);}}} while(!(tom_equal_term_ConstraintInstructionList(tomMatch176NameNumber_end_3, tomMatch176NameNumber_begin_2)));}}}}}}
        
        return tom_make_Match(newConstraintInstructionList,tomMatch175NameNumber_freshVar_1);      
      }}}}}}}return super.visit_Instruction(tom__arg); }public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TomTerm(tom__arg)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch177NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg);if (tom_is_fun_sym_RecordAppl(tomMatch177NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch177NameNumber_freshVar_0=tom_get_slot_RecordAppl_Option(tomMatch177NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomNameList  tomMatch177NameNumber_freshVar_1=tom_get_slot_RecordAppl_NameList(tomMatch177NameNumberfreshSubject_1);{  tom.engine.adt.tomslot.types.SlotList  tomMatch177NameNumber_freshVar_2=tom_get_slot_RecordAppl_Slots(tomMatch177NameNumberfreshSubject_1);{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch177NameNumber_freshVar_3=tom_get_slot_RecordAppl_Constraints(tomMatch177NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_option=tomMatch177NameNumber_freshVar_0;if (tom_is_fun_sym_concTomName(tomMatch177NameNumber_freshVar_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch177NameNumber_freshVar_4=tomMatch177NameNumber_freshVar_1;{  tom.engine.adt.tomname.types.TomNameList  tom_nameList=tomMatch177NameNumber_freshVar_1;if (!(tom_is_empty_concTomName_TomNameList(tomMatch177NameNumber_freshVar_4))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch177NameNumber_freshVar_4))) {{  String  tomMatch177NameNumber_freshVar_7=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch177NameNumber_freshVar_4));{  String  tom_tomName=tomMatch177NameNumber_freshVar_7;{  tom.engine.adt.tomname.types.TomNameList  tomMatch177NameNumber_freshVar_5=tom_get_tail_concTomName_TomNameList(tomMatch177NameNumber_freshVar_4);{  tom.engine.adt.tomslot.types.SlotList  tom_slotList=tomMatch177NameNumber_freshVar_2;{  tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tomMatch177NameNumber_freshVar_3;if ( true ) {




        TomSymbol tomSymbol = null;
        if(tom_tomName.equals("")) {
          try {
            tomSymbol = expander.getSymbolFromType(contextType);
            if(tomSymbol==null) {
              throw new TomRuntimeException("No symbol found for type '" + contextType + "'");
            }
            tom_nameList= tom_cons_list_concTomName(tomSymbol.getAstName(),tom_empty_list_concTomName());
          } catch(UnsupportedOperationException e) {
            // contextType has no AstType slot
            tomSymbol = null;
          }
        } else {
          tomSymbol = expander.getSymbolFromName(tom_tomName);
        }

        if(tomSymbol != null) {
          SlotList subterm = expander.expandVariableList(tomSymbol, tom_slotList);
          ConstraintList newConstraints = (ConstraintList)expander.expandVariable(TomBase.getSymbolCodomain(tomSymbol),tom_constraints);
          return tom_make_RecordAppl(tom_option,tom_nameList,subterm,newConstraints);
        } else {
          if (tom_is_sort_TomType(contextType)) {{  tom.engine.adt.tomtype.types.TomType  tomMatch178NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )contextType);if (tom_is_fun_sym_Type(tomMatch178NameNumberfreshSubject_1)) {if ( true ) {

              SlotList subterm = expander.expandVariableList(tom_make_emptySymbol(), tom_slotList);
              ConstraintList newConstraints = (ConstraintList)expander.expandVariable(tomMatch178NameNumberfreshSubject_1,tom_constraints);
              return tom_make_RecordAppl(tom_option,tom_nameList,subterm,newConstraints);
            }}if ( true ) {


              // do nothing
              //System.out.println("contextType = " + contextType);
              //System.out.println("subject        = " + subject);
            }}}

        }
      }}}}}}}}}}}}}}}}}{ boolean tomMatch177NameNumber_freshVar_11= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch177NameNumber_freshVar_9= null ;{  tom.engine.adt.tomtype.types.TomType  tomMatch177NameNumber_freshVar_8= null ;if (tom_is_fun_sym_Variable(tomMatch177NameNumberfreshSubject_1)) {{tomMatch177NameNumber_freshVar_11= true ;tomMatch177NameNumber_freshVar_8=tom_get_slot_Variable_AstType(tomMatch177NameNumberfreshSubject_1);tomMatch177NameNumber_freshVar_9=tom_get_slot_Variable_Constraints(tomMatch177NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_UnamedVariable(tomMatch177NameNumberfreshSubject_1)) {{tomMatch177NameNumber_freshVar_11= true ;tomMatch177NameNumber_freshVar_8=tom_get_slot_UnamedVariable_AstType(tomMatch177NameNumberfreshSubject_1);tomMatch177NameNumber_freshVar_9=tom_get_slot_UnamedVariable_Constraints(tomMatch177NameNumberfreshSubject_1);}}}if ((tomMatch177NameNumber_freshVar_11 ==  true )) {if (tom_is_fun_sym_TomTypeAlone(tomMatch177NameNumber_freshVar_8)) {{  String  tomMatch177NameNumber_freshVar_10=tom_get_slot_TomTypeAlone_String(tomMatch177NameNumber_freshVar_8);{  tom.engine.adt.tomterm.types.TomTerm  tom_var=tomMatch177NameNumberfreshSubject_1;if ( true ) {


        TomType localType = expander.getType(tomMatch177NameNumber_freshVar_10);
        //System.out.println("localType = " + localType);
        if(localType != null) {
          // The variable has already a known type
          return tom_var.setAstType(localType);
        }

        //System.out.println("contextType = " + contextType);
        if (tom_is_sort_TomType(contextType)) {{  tom.engine.adt.tomtype.types.TomType  tomMatch179NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )contextType);if (tom_is_fun_sym_Type(tomMatch179NameNumberfreshSubject_1)) {{  tom.engine.adt.tomtype.types.TomType  tom_ctype=tomMatch179NameNumberfreshSubject_1;if ( true ) {

            ConstraintList newConstraints = (ConstraintList)expander.expandVariable(tom_ctype,tomMatch177NameNumber_freshVar_9);
            TomTerm newVar = tom_var.setAstType(tom_ctype);
            //System.out.println("newVar = " + newVar);
            return newVar.setConstraints(newConstraints);
          }}}}}

      }}}}}}}}}}return super.visit_TomTerm(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_replace_expandVariable( tom.engine.adt.tomtype.types.TomType  t0,  KernelExpander  t1) { return new replace_expandVariable(t0,t1); }


  
  private static Instruction expandAction(Instruction action, TomList newPatternList, KernelExpander expander) { 
    //  build the list of variables that occur in the lhs
    HashSet set = new HashSet();
    TomBase.collectVariable(set,newPatternList);
    TomList varList = ASTFactory.makeList(set);
    Instruction newAction = (Instruction)expander.replaceInstantiatedVariable(varList,action);
    //System.out.println("newAction1 = " + newAction);
    newAction = (Instruction)expander.expandVariable(tom_make_EmptyType(),newAction);
    return newAction;
  }
  
  /**
   * Try to guess the type for the subjects
   */
  private static class expandConstraint extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  tom.engine.adt.tomtype.types.TomType  contextType; private  java.util.Collection  newPatternList; private  java.util.Collection  constraintList; private  KernelExpander  expander; public expandConstraint( tom.engine.adt.tomtype.types.TomType  contextType,  java.util.Collection  newPatternList,  java.util.Collection  constraintList,  KernelExpander  expander) { super(tom_make_Identity());this.contextType=contextType;this.newPatternList=newPatternList;this.constraintList=constraintList;this.expander=expander;}public  tom.engine.adt.tomtype.types.TomType  getcontextType() { return contextType;}public  java.util.Collection  getnewPatternList() { return newPatternList;}public  java.util.Collection  getconstraintList() { return constraintList;}public  KernelExpander  getexpander() { return expander;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Constraint(tom__arg)) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch180NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);visitL: {{  tom.engine.adt.tomconstraint.types.Constraint  tom_constr=tomMatch180NameNumberfreshSubject_1;if ( true ) {


        TomTerm subject = null;
        TomTerm pattern = null;
        NumericConstraintType numericType = null;
        boolean isMatchConstraint = false;
 matchL:if (tom_is_sort_Constraint(tom_constr)) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch181NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom_constr);if (tom_is_fun_sym_MatchConstraint(tomMatch181NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch181NameNumber_freshVar_0=tom_get_slot_MatchConstraint_pattern(tomMatch181NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch181NameNumber_freshVar_1=tom_get_slot_MatchConstraint_subject(tomMatch181NameNumberfreshSubject_1);if ( true ) {
pattern = tomMatch181NameNumber_freshVar_0;subject = tomMatch181NameNumber_freshVar_1;isMatchConstraint = true;break matchL;}}}}if (tom_is_fun_sym_NumericConstraint(tomMatch181NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch181NameNumber_freshVar_2=tom_get_slot_NumericConstraint_Left(tomMatch181NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch181NameNumber_freshVar_3=tom_get_slot_NumericConstraint_Right(tomMatch181NameNumberfreshSubject_1);{  tom.engine.adt.tomconstraint.types.NumericConstraintType  tomMatch181NameNumber_freshVar_4=tom_get_slot_NumericConstraint_Type(tomMatch181NameNumberfreshSubject_1);if ( true ) {
pattern = tomMatch181NameNumber_freshVar_2;subject = tomMatch181NameNumber_freshVar_3;numericType = tomMatch181NameNumber_freshVar_4;break matchL;}}}}}if ( true ) {
 break visitL; }}}

        TomTerm newSubject = null;
        TomType newSubjectType = null;        
        if (tom_is_sort_TomTerm(subject)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch182NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);{ boolean tomMatch182NameNumber_freshVar_5= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch182NameNumber_freshVar_3= null ;{  tom.engine.adt.tomtype.types.TomType  tomMatch182NameNumber_freshVar_2= null ;{  tom.engine.adt.tomname.types.TomName  tomMatch182NameNumber_freshVar_1= null ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch182NameNumber_freshVar_0= null ;if (tom_is_fun_sym_Variable(tomMatch182NameNumberfreshSubject_1)) {{tomMatch182NameNumber_freshVar_5= true ;tomMatch182NameNumber_freshVar_0=tom_get_slot_Variable_Option(tomMatch182NameNumberfreshSubject_1);tomMatch182NameNumber_freshVar_1=tom_get_slot_Variable_AstName(tomMatch182NameNumberfreshSubject_1);tomMatch182NameNumber_freshVar_2=tom_get_slot_Variable_AstType(tomMatch182NameNumberfreshSubject_1);tomMatch182NameNumber_freshVar_3=tom_get_slot_Variable_Constraints(tomMatch182NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_VariableStar(tomMatch182NameNumberfreshSubject_1)) {{tomMatch182NameNumber_freshVar_5= true ;tomMatch182NameNumber_freshVar_0=tom_get_slot_VariableStar_Option(tomMatch182NameNumberfreshSubject_1);tomMatch182NameNumber_freshVar_1=tom_get_slot_VariableStar_AstName(tomMatch182NameNumberfreshSubject_1);tomMatch182NameNumber_freshVar_2=tom_get_slot_VariableStar_AstType(tomMatch182NameNumberfreshSubject_1);tomMatch182NameNumber_freshVar_3=tom_get_slot_VariableStar_Constraints(tomMatch182NameNumberfreshSubject_1);}}}if ((tomMatch182NameNumber_freshVar_5 ==  true )) {if (tom_is_fun_sym_Name(tomMatch182NameNumber_freshVar_1)) {{  String  tomMatch182NameNumber_freshVar_4=tom_get_slot_Name_String(tomMatch182NameNumber_freshVar_1);if ( true ) {

            TomTerm newVariable = null;
            // tomType may be a TomTypeAlone or a type from an expanded variable
            String type = TomBase.getTomType(tomMatch182NameNumber_freshVar_2);
            //System.out.println("match type = " + type);
            if(expander.getType(type) == null) {
              /* the subject is a variable with an unknown type */
              newSubjectType = expander.guessSubjectType(subject,constraintList);
              if( newSubjectType != null ) {
                newVariable = tom_make_Variable(tomMatch182NameNumber_freshVar_0,tomMatch182NameNumber_freshVar_1,newSubjectType,tomMatch182NameNumber_freshVar_3);
              } else {
                throw new TomRuntimeException("No symbol found for name '" + tomMatch182NameNumber_freshVar_4+ "'");
              }
            } else {
              newVariable = subject;
            }
            if(newVariable == null) {
              throw new TomRuntimeException("Type cannot be guessed for '" + subject+ "'");
            } else {
              newSubject = newVariable;
              newSubjectType = newVariable.getAstType();
            }                  
          }}}}}}}}}{ boolean tomMatch182NameNumber_freshVar_11= false ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch182NameNumber_freshVar_6= null ;if (tom_is_fun_sym_TermAppl(tomMatch182NameNumberfreshSubject_1)) {{tomMatch182NameNumber_freshVar_11= true ;tomMatch182NameNumber_freshVar_6=tom_get_slot_TermAppl_NameList(tomMatch182NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_RecordAppl(tomMatch182NameNumberfreshSubject_1)) {{tomMatch182NameNumber_freshVar_11= true ;tomMatch182NameNumber_freshVar_6=tom_get_slot_RecordAppl_NameList(tomMatch182NameNumberfreshSubject_1);}}}if ((tomMatch182NameNumber_freshVar_11 ==  true )) {if (tom_is_fun_sym_concTomName(tomMatch182NameNumber_freshVar_6)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch182NameNumber_freshVar_7=tomMatch182NameNumber_freshVar_6;if (!(tom_is_empty_concTomName_TomNameList(tomMatch182NameNumber_freshVar_7))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch182NameNumber_freshVar_7))) {{  String  tomMatch182NameNumber_freshVar_10=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch182NameNumber_freshVar_7));{  String  tom_name=tomMatch182NameNumber_freshVar_10;{  tom.engine.adt.tomname.types.TomNameList  tomMatch182NameNumber_freshVar_8=tom_get_tail_concTomName_TomNameList(tomMatch182NameNumber_freshVar_7);if ( true ) {


            TomSymbol symbol = expander.getSymbolFromName(tom_name);
            TomType type = null;
            if(symbol!=null) {
              type = TomBase.getSymbolCodomain(symbol);
            } else {
              // unknown function call
              type = expander.guessSubjectType(subject,constraintList);
            }
            if( type != null ) {
              newSubject = tom_make_BuildReducedTerm(tomMatch182NameNumberfreshSubject_1,type);
            } else {
              throw new TomRuntimeException("No symbol found for name '" + tom_name+ "'");
            }
            newSubjectType = type;                    
          }}}}}}}}}}}if (tom_is_fun_sym_TomTypeToTomTerm(tomMatch182NameNumberfreshSubject_1)) {{  tom.engine.adt.tomtype.types.TomType  tomMatch182NameNumber_freshVar_12=tom_get_slot_TomTypeToTomTerm_AstType(tomMatch182NameNumberfreshSubject_1);{  tom.engine.adt.tomtype.types.TomType  tom_type=tomMatch182NameNumber_freshVar_12;if ( true ) {


            newSubject = tom_make_Variable(tom_empty_list_concOption(),tom_make_Name("tom__arg"),tom_type,tom_empty_list_concConstraint());
            newSubjectType = tom_type;
          }}}}if (tom_is_fun_sym_BuildReducedTerm(tomMatch182NameNumberfreshSubject_1)) {{  tom.engine.adt.tomtype.types.TomType  tomMatch182NameNumber_freshVar_13=tom_get_slot_BuildReducedTerm_AstType(tomMatch182NameNumberfreshSubject_1);if ( true ) {


            
            newSubjectType = tomMatch182NameNumber_freshVar_13;
            newSubject = tomMatch182NameNumberfreshSubject_1;
          }}}}}

 // end match subject        
        newSubjectType = (TomType)expander.expandVariable(contextType,newSubjectType);
        newSubject = (TomTerm)expander.expandVariable(newSubjectType, newSubject);
        TomTerm newPattern = (TomTerm)expander.expandVariable(newSubjectType, pattern);
        newPatternList.add(newPattern);
        return isMatchConstraint ? tom_make_MatchConstraint(newPattern,newSubject) : tom_make_NumericConstraint(newPattern,newSubject,numericType);
      }}}}}return super.visit_Constraint(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_expandConstraint( tom.engine.adt.tomtype.types.TomType  t0,  java.util.Collection  t1,  java.util.Collection  t2,  KernelExpander  t3) { return new expandConstraint(t0,t1,t2,t3); }

 

  private TomType guessSubjectType(TomTerm subject, Collection matchConstraints){    
    for(Object constr:matchConstraints){
      if (tom_is_sort_Constraint(constr)) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch183NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )constr);if (tom_is_fun_sym_MatchConstraint(tomMatch183NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch183NameNumber_freshVar_0=tom_get_slot_MatchConstraint_pattern(tomMatch183NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch183NameNumber_freshVar_1=tom_get_slot_MatchConstraint_subject(tomMatch183NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomTerm  tom_pattern=tomMatch183NameNumber_freshVar_0;{  tom.engine.adt.tomterm.types.TomTerm  tom_s=tomMatch183NameNumber_freshVar_1;if ( true ) {

          // we want two terms to be equal even if their option is different 
          //( because of their possition for example )
matchL:  if (tom_is_sort_TomTerm(subject)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch184NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if (tom_is_sort_TomTerm(tom_s)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch184NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_s);if (tom_is_fun_sym_Variable(tomMatch184NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch184NameNumber_freshVar_0=tom_get_slot_Variable_AstName(tomMatch184NameNumberfreshSubject_1);{  tom.engine.adt.tomtype.types.TomType  tomMatch184NameNumber_freshVar_1=tom_get_slot_Variable_AstType(tomMatch184NameNumberfreshSubject_1);if (tom_is_fun_sym_Variable(tomMatch184NameNumberfreshSubject_2)) {{  tom.engine.adt.tomname.types.TomName  tomMatch184NameNumber_freshVar_2=tom_get_slot_Variable_AstName(tomMatch184NameNumberfreshSubject_2);{  tom.engine.adt.tomtype.types.TomType  tomMatch184NameNumber_freshVar_3=tom_get_slot_Variable_AstType(tomMatch184NameNumberfreshSubject_2);if (tom_equal_term_TomName(tomMatch184NameNumber_freshVar_0, tomMatch184NameNumber_freshVar_2)) {if (tom_equal_term_TomType(tomMatch184NameNumber_freshVar_1, tomMatch184NameNumber_freshVar_3)) {if ( true ) {
break matchL;}}}}}}}}}if (tom_is_fun_sym_TermAppl(tomMatch184NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch184NameNumber_freshVar_4=tom_get_slot_TermAppl_NameList(tomMatch184NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomList  tomMatch184NameNumber_freshVar_5=tom_get_slot_TermAppl_Args(tomMatch184NameNumberfreshSubject_1);if (tom_is_fun_sym_TermAppl(tomMatch184NameNumberfreshSubject_2)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch184NameNumber_freshVar_6=tom_get_slot_TermAppl_NameList(tomMatch184NameNumberfreshSubject_2);{  tom.engine.adt.tomterm.types.TomList  tomMatch184NameNumber_freshVar_7=tom_get_slot_TermAppl_Args(tomMatch184NameNumberfreshSubject_2);if (tom_equal_term_TomNameList(tomMatch184NameNumber_freshVar_4, tomMatch184NameNumber_freshVar_6)) {if (tom_equal_term_TomList(tomMatch184NameNumber_freshVar_5, tomMatch184NameNumber_freshVar_7)) {if ( true ) {
break matchL;}}}}}}}}}if (tom_is_fun_sym_RecordAppl(tomMatch184NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch184NameNumber_freshVar_8=tom_get_slot_RecordAppl_NameList(tomMatch184NameNumberfreshSubject_1);{  tom.engine.adt.tomslot.types.SlotList  tomMatch184NameNumber_freshVar_9=tom_get_slot_RecordAppl_Slots(tomMatch184NameNumberfreshSubject_1);if (tom_is_fun_sym_RecordAppl(tomMatch184NameNumberfreshSubject_2)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch184NameNumber_freshVar_10=tom_get_slot_RecordAppl_NameList(tomMatch184NameNumberfreshSubject_2);{  tom.engine.adt.tomslot.types.SlotList  tomMatch184NameNumber_freshVar_11=tom_get_slot_RecordAppl_Slots(tomMatch184NameNumberfreshSubject_2);if (tom_equal_term_TomNameList(tomMatch184NameNumber_freshVar_8, tomMatch184NameNumber_freshVar_10)) {if (tom_equal_term_SlotList(tomMatch184NameNumber_freshVar_9, tomMatch184NameNumber_freshVar_11)) {if ( true ) {
break matchL;}}}}}}}}}if (tom_is_fun_sym_XMLAppl(tomMatch184NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch184NameNumber_freshVar_12=tom_get_slot_XMLAppl_NameList(tomMatch184NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomList  tomMatch184NameNumber_freshVar_13=tom_get_slot_XMLAppl_AttrList(tomMatch184NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomList  tomMatch184NameNumber_freshVar_14=tom_get_slot_XMLAppl_ChildList(tomMatch184NameNumberfreshSubject_1);if (tom_equal_term_TomList(tomMatch184NameNumber_freshVar_13, tomMatch184NameNumber_freshVar_14)) {if (tom_is_fun_sym_XMLAppl(tomMatch184NameNumberfreshSubject_2)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch184NameNumber_freshVar_15=tom_get_slot_XMLAppl_NameList(tomMatch184NameNumberfreshSubject_2);{  tom.engine.adt.tomterm.types.TomList  tomMatch184NameNumber_freshVar_16=tom_get_slot_XMLAppl_AttrList(tomMatch184NameNumberfreshSubject_2);{  tom.engine.adt.tomterm.types.TomList  tomMatch184NameNumber_freshVar_17=tom_get_slot_XMLAppl_ChildList(tomMatch184NameNumberfreshSubject_2);if (tom_equal_term_TomNameList(tomMatch184NameNumber_freshVar_12, tomMatch184NameNumber_freshVar_15)) {if (tom_equal_term_TomList(tomMatch184NameNumber_freshVar_13, tomMatch184NameNumber_freshVar_16)) {if (tom_equal_term_TomList(tomMatch184NameNumber_freshVar_13, tomMatch184NameNumber_freshVar_17)) {if ( true ) {
 break matchL; }}}}}}}}}}}}}if (tom_is_fun_sym_BuildReducedTerm(tomMatch184NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch184NameNumber_freshVar_18=tom_get_slot_BuildReducedTerm_TomTerm(tomMatch184NameNumberfreshSubject_1);{  tom.engine.adt.tomtype.types.TomType  tomMatch184NameNumber_freshVar_19=tom_get_slot_BuildReducedTerm_AstType(tomMatch184NameNumberfreshSubject_1);if (tom_is_fun_sym_TermAppl(tomMatch184NameNumber_freshVar_18)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch184NameNumber_freshVar_20=tom_get_slot_TermAppl_NameList(tomMatch184NameNumber_freshVar_18);{  tom.engine.adt.tomterm.types.TomList  tomMatch184NameNumber_freshVar_21=tom_get_slot_TermAppl_Args(tomMatch184NameNumber_freshVar_18);if (tom_is_fun_sym_BuildReducedTerm(tomMatch184NameNumberfreshSubject_2)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch184NameNumber_freshVar_22=tom_get_slot_BuildReducedTerm_TomTerm(tomMatch184NameNumberfreshSubject_2);{  tom.engine.adt.tomtype.types.TomType  tomMatch184NameNumber_freshVar_23=tom_get_slot_BuildReducedTerm_AstType(tomMatch184NameNumberfreshSubject_2);if (tom_is_fun_sym_TermAppl(tomMatch184NameNumber_freshVar_22)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch184NameNumber_freshVar_24=tom_get_slot_TermAppl_NameList(tomMatch184NameNumber_freshVar_22);{  tom.engine.adt.tomterm.types.TomList  tomMatch184NameNumber_freshVar_25=tom_get_slot_TermAppl_Args(tomMatch184NameNumber_freshVar_22);if (tom_equal_term_TomNameList(tomMatch184NameNumber_freshVar_20, tomMatch184NameNumber_freshVar_24)) {if (tom_equal_term_TomList(tomMatch184NameNumber_freshVar_21, tomMatch184NameNumber_freshVar_25)) {if (tom_equal_term_TomType(tomMatch184NameNumber_freshVar_19, tomMatch184NameNumber_freshVar_23)) {if ( true ) {
break matchL;}}}}}}}}}}}}}}}}if ( true ) {
 continue; }}}}}

          TomTerm patt = tom_pattern;
          if (tom_is_sort_TomTerm(tom_pattern)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch185NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_pattern);if (tom_is_fun_sym_AntiTerm(tomMatch185NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch185NameNumber_freshVar_0=tom_get_slot_AntiTerm_TomTerm(tomMatch185NameNumberfreshSubject_1);if ( true ) {
 patt = tomMatch185NameNumber_freshVar_0; }}}}}if (tom_is_sort_TomTerm(patt)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch186NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )patt);{ boolean tomMatch186NameNumber_freshVar_5= false ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch186NameNumber_freshVar_0= null ;if (tom_is_fun_sym_TermAppl(tomMatch186NameNumberfreshSubject_1)) {{tomMatch186NameNumber_freshVar_5= true ;tomMatch186NameNumber_freshVar_0=tom_get_slot_TermAppl_NameList(tomMatch186NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_RecordAppl(tomMatch186NameNumberfreshSubject_1)) {{tomMatch186NameNumber_freshVar_5= true ;tomMatch186NameNumber_freshVar_0=tom_get_slot_RecordAppl_NameList(tomMatch186NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_XMLAppl(tomMatch186NameNumberfreshSubject_1)) {{tomMatch186NameNumber_freshVar_5= true ;tomMatch186NameNumber_freshVar_0=tom_get_slot_XMLAppl_NameList(tomMatch186NameNumberfreshSubject_1);}}}}if ((tomMatch186NameNumber_freshVar_5 ==  true )) {if (tom_is_fun_sym_concTomName(tomMatch186NameNumber_freshVar_0)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch186NameNumber_freshVar_1=tomMatch186NameNumber_freshVar_0;if (!(tom_is_empty_concTomName_TomNameList(tomMatch186NameNumber_freshVar_1))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch186NameNumber_freshVar_1))) {{  String  tomMatch186NameNumber_freshVar_4=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch186NameNumber_freshVar_1));{  tom.engine.adt.tomname.types.TomNameList  tomMatch186NameNumber_freshVar_2=tom_get_tail_concTomName_TomNameList(tomMatch186NameNumber_freshVar_1);if ( true ) {


        
                TomSymbol symbol = null;
                symbol = getSymbolFromName(tomMatch186NameNumber_freshVar_4);
                // System.out.println("name = " + `name);
                if( symbol != null ) {
                  return TomBase.getSymbolCodomain(symbol);
                }
             }}}}}}}}}}}}

        }}}}}}}}

    }// for    
    return null;
  }

    protected tom.library.sl.Visitable expandVariable(TomType contextType, tom.library.sl.Visitable subject) {
      if(contextType == null) {
        throw new TomRuntimeException("expandVariable: null contextType");
      }
      try {
        //System.out.println("expandVariable: " + contextType);
        //System.out.println("expandVariable subject: " + subject);
        tom.library.sl.Visitable res = tom_make_TopDownStop(tom_make_replace_expandVariable(contextType,this)).visit(subject);
        //System.out.println("res: " + res);
        return res;
      } catch(tom.library.sl.VisitFailure e) {
        throw new TomRuntimeException("expandVariable: failure on " + subject);
        //return subject;
      }
    }

    /*
     * perform type inference of subterms (subtermList)
     * under a given operator (symbol)
     */
    private SlotList expandVariableList(TomSymbol symbol, SlotList subtermList) {
      if(symbol == null) {
        throw new TomRuntimeException("expandVariableList: null symbol");
      }

      if(subtermList.isEmptyconcSlot()) {
        return tom_empty_list_concSlot();
      }

      //System.out.println("symbol = " + symbol.getastname());
      if (tom_is_sort_TomSymbol(symbol)) {{  tom.engine.adt.tomsignature.types.TomSymbol  tomMatch187NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomSymbol )symbol);if (tom_is_sort_SlotList(subtermList)) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch187NameNumberfreshSubject_2=(( tom.engine.adt.tomslot.types.SlotList )subtermList);if (tom_is_fun_sym_emptySymbol(tomMatch187NameNumberfreshSubject_1)) {if (tom_is_fun_sym_concSlot(tomMatch187NameNumberfreshSubject_2)) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch187NameNumber_freshVar_0=tomMatch187NameNumberfreshSubject_2;if (!(tom_is_empty_concSlot_SlotList(tomMatch187NameNumber_freshVar_0))) {if (tom_is_fun_sym_PairSlotAppl(tom_get_head_concSlot_SlotList(tomMatch187NameNumber_freshVar_0))) {{  tom.engine.adt.tomname.types.TomName  tomMatch187NameNumber_freshVar_4=tom_get_slot_PairSlotAppl_SlotName(tom_get_head_concSlot_SlotList(tomMatch187NameNumber_freshVar_0));{  tom.engine.adt.tomterm.types.TomTerm  tomMatch187NameNumber_freshVar_5=tom_get_slot_PairSlotAppl_Appl(tom_get_head_concSlot_SlotList(tomMatch187NameNumber_freshVar_0));{  tom.engine.adt.tomslot.types.SlotList  tomMatch187NameNumber_freshVar_1=tom_get_tail_concSlot_SlotList(tomMatch187NameNumber_freshVar_0);if ( true ) {

          /*
           * if the top symbol is unknown, the subterms
           * are expanded in an empty context
           */
          SlotList sl = expandVariableList(symbol,tomMatch187NameNumber_freshVar_1);
          return tom_cons_list_concSlot(tom_make_PairSlotAppl(tomMatch187NameNumber_freshVar_4,(TomTerm)expandVariable(tom_make_EmptyType(),tomMatch187NameNumber_freshVar_5)),tom_append_list_concSlot(sl,tom_empty_list_concSlot()));
        }}}}}}}}}if (tom_is_fun_sym_Symbol(tomMatch187NameNumberfreshSubject_1)) {{  tom.engine.adt.tomtype.types.TomType  tomMatch187NameNumber_freshVar_7=tom_get_slot_Symbol_TypesToType(tomMatch187NameNumberfreshSubject_1);if (tom_is_fun_sym_TypesToType(tomMatch187NameNumber_freshVar_7)) {{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch187NameNumber_freshVar_8=tom_get_slot_TypesToType_Domain(tomMatch187NameNumber_freshVar_7);{  tom.engine.adt.tomtype.types.TomType  tomMatch187NameNumber_freshVar_9=tom_get_slot_TypesToType_Codomain(tomMatch187NameNumber_freshVar_7);{  tom.engine.adt.tomtype.types.TomType  tom_codomain=tomMatch187NameNumber_freshVar_9;{  tom.engine.adt.tomsignature.types.TomSymbol  tom_symb=tomMatch187NameNumberfreshSubject_1;if (tom_is_fun_sym_concSlot(tomMatch187NameNumberfreshSubject_2)) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch187NameNumber_freshVar_10=tomMatch187NameNumberfreshSubject_2;if (!(tom_is_empty_concSlot_SlotList(tomMatch187NameNumber_freshVar_10))) {if (tom_is_fun_sym_PairSlotAppl(tom_get_head_concSlot_SlotList(tomMatch187NameNumber_freshVar_10))) {{  tom.engine.adt.tomname.types.TomName  tomMatch187NameNumber_freshVar_14=tom_get_slot_PairSlotAppl_SlotName(tom_get_head_concSlot_SlotList(tomMatch187NameNumber_freshVar_10));{  tom.engine.adt.tomterm.types.TomTerm  tomMatch187NameNumber_freshVar_15=tom_get_slot_PairSlotAppl_Appl(tom_get_head_concSlot_SlotList(tomMatch187NameNumber_freshVar_10));{  tom.engine.adt.tomname.types.TomName  tom_slotName=tomMatch187NameNumber_freshVar_14;{  tom.engine.adt.tomterm.types.TomTerm  tom_slotAppl=tomMatch187NameNumber_freshVar_15;{  tom.engine.adt.tomslot.types.SlotList  tomMatch187NameNumber_freshVar_11=tom_get_tail_concSlot_SlotList(tomMatch187NameNumber_freshVar_10);{  tom.engine.adt.tomslot.types.SlotList  tom_tail=tomMatch187NameNumber_freshVar_11;if ( true ) {



            //System.out.println("codomain = " + `codomain);
            // process a list of subterms and a list of types
            if(TomBase.isListOperator(tom_symb) || TomBase.isArrayOperator(tom_symb)) {
              /*
               * todo:
               * when the symbol is an associative operator,
               * the signature has the form: list conc( element* )
               * the list of types is reduced to the singleton { element }
               *
               * consider a pattern: conc(e1*,x,e2*,y,e3*)
               *  assign the type "element" to each subterm: x and y
               *  assign the type "list" to each subtermlist: e1*,e2* and e3*
               */

              //System.out.println("listoperator: " + `symb);
              //System.out.println("subtermlist: " + subtermList);
              //System.out.println("slotAppl: " + `slotAppl);

              if (tom_is_sort_TomTerm(tom_slotAppl)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch188NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_slotAppl);if (tom_is_fun_sym_VariableStar(tomMatch188NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch188NameNumber_freshVar_0=tom_get_slot_VariableStar_Option(tomMatch188NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomName  tomMatch188NameNumber_freshVar_1=tom_get_slot_VariableStar_AstName(tomMatch188NameNumberfreshSubject_1);{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch188NameNumber_freshVar_2=tom_get_slot_VariableStar_Constraints(tomMatch188NameNumberfreshSubject_1);if ( true ) {

                  ConstraintList newconstraints = (ConstraintList)expandVariable(tom_codomain,tomMatch188NameNumber_freshVar_2);
                  SlotList sl = expandVariableList(symbol,tom_tail);
                  return tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_slotName,tom_make_VariableStar(tomMatch188NameNumber_freshVar_0,tomMatch188NameNumber_freshVar_1,tom_codomain,newconstraints)),tom_append_list_concSlot(sl,tom_empty_list_concSlot()));
                }}}}}if (tom_is_fun_sym_UnamedVariableStar(tomMatch188NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch188NameNumber_freshVar_3=tom_get_slot_UnamedVariableStar_Option(tomMatch188NameNumberfreshSubject_1);{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch188NameNumber_freshVar_4=tom_get_slot_UnamedVariableStar_Constraints(tomMatch188NameNumberfreshSubject_1);if ( true ) {


                  ConstraintList newconstraints = (ConstraintList)expandVariable(tom_codomain,tomMatch188NameNumber_freshVar_4);
                  SlotList sl = expandVariableList(symbol,tom_tail);
                  return tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_slotName,tom_make_UnamedVariableStar(tomMatch188NameNumber_freshVar_3,tom_codomain,newconstraints)),tom_append_list_concSlot(sl,tom_empty_list_concSlot()));
                }}}}if ( true ) {


                  TomType domaintype = tomMatch187NameNumber_freshVar_8.getHeadconcTomType();
                  SlotList sl = expandVariableList(symbol,tom_tail);
                  SlotList res = tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_slotName,(TomTerm)expandVariable(domaintype,tom_slotAppl)),tom_append_list_concSlot(sl,tom_empty_list_concSlot()));
                  //System.out.println("domaintype = " + domaintype);
                  //System.out.println("res = " + res);
                  return res;

                }}}

            } else {
              SlotList sl = expandVariableList(symbol,tom_tail);
              return tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_slotName,(TomTerm)expandVariable(TomBase.getSlotType(tom_symb,tom_slotName),tom_slotAppl)),tom_append_list_concSlot(sl,tom_empty_list_concSlot()));
            }
          }}}}}}}}}}}}}}}}}}}}}}

      throw new TomRuntimeException("expandVariableList: strange case: '" + symbol + "'");
    }

    private static class replace_replaceInstantiatedVariable extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  tom.engine.adt.tomterm.types.TomList  instantiatedVariable; public replace_replaceInstantiatedVariable( tom.engine.adt.tomterm.types.TomList  instantiatedVariable) { super(tom_make_Fail());this.instantiatedVariable=instantiatedVariable;}public  tom.engine.adt.tomterm.types.TomList  getinstantiatedVariable() { return instantiatedVariable;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TomTerm(tom__arg)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch189NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg);{  tom.engine.adt.tomterm.types.TomTerm  tom_subject=tomMatch189NameNumberfreshSubject_1;if ( true ) {if (tom_is_sort_TomTerm(tom_subject)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch190NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_subject);if (tom_is_sort_TomList(instantiatedVariable)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomList )instantiatedVariable);if (tom_is_fun_sym_RecordAppl(tomMatch190NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch190NameNumber_freshVar_0=tom_get_slot_RecordAppl_NameList(tomMatch190NameNumberfreshSubject_1);{  tom.engine.adt.tomslot.types.SlotList  tomMatch190NameNumber_freshVar_1=tom_get_slot_RecordAppl_Slots(tomMatch190NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch190NameNumber_freshVar_0)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch190NameNumber_freshVar_2=tomMatch190NameNumber_freshVar_0;if (!(tom_is_empty_concTomName_TomNameList(tomMatch190NameNumber_freshVar_2))) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch190NameNumber_freshVar_3=tom_get_tail_concTomName_TomNameList(tomMatch190NameNumber_freshVar_2);if (tom_is_empty_concTomName_TomNameList(tomMatch190NameNumber_freshVar_3)) {if (tom_is_fun_sym_concSlot(tomMatch190NameNumber_freshVar_1)) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch190NameNumber_freshVar_4=tomMatch190NameNumber_freshVar_1;if (tom_is_empty_concSlot_SlotList(tomMatch190NameNumber_freshVar_4)) {if (tom_is_fun_sym_concTomTerm(tomMatch190NameNumberfreshSubject_2)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_5=tomMatch190NameNumberfreshSubject_2;{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_begin_7=tomMatch190NameNumber_freshVar_5;{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_end_8=tomMatch190NameNumber_freshVar_5;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_6=tomMatch190NameNumber_end_8;if (!(tom_is_empty_concTomTerm_TomList(tomMatch190NameNumber_freshVar_6))) {{ boolean tomMatch190NameNumber_freshVar_12= false ;{  tom.engine.adt.tomname.types.TomName  tomMatch190NameNumber_freshVar_11= null ;if (tom_is_fun_sym_Variable(tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_6))) {{tomMatch190NameNumber_freshVar_12= true ;tomMatch190NameNumber_freshVar_11=tom_get_slot_Variable_AstName(tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_6));}} else {if (tom_is_fun_sym_VariableStar(tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_6))) {{tomMatch190NameNumber_freshVar_12= true ;tomMatch190NameNumber_freshVar_11=tom_get_slot_VariableStar_AstName(tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_6));}}}if ((tomMatch190NameNumber_freshVar_12 ==  true )) {if (tom_equal_term_TomName(tom_get_head_concTomName_TomNameList(tomMatch190NameNumber_freshVar_2), tomMatch190NameNumber_freshVar_11)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_9=tom_get_tail_concTomTerm_TomList(tomMatch190NameNumber_freshVar_6);if ( true ) {




              return tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_6);
            }}}}}}}}if (tom_is_empty_concTomTerm_TomList(tomMatch190NameNumber_end_8)) {tomMatch190NameNumber_end_8=tomMatch190NameNumber_begin_7;} else {tomMatch190NameNumber_end_8=tom_get_tail_concTomTerm_TomList(tomMatch190NameNumber_end_8);}}} while(!(tom_equal_term_TomList(tomMatch190NameNumber_end_8, tomMatch190NameNumber_begin_7)));}}}}}}}}}}}}}}}if (tom_is_fun_sym_Variable(tomMatch190NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch190NameNumber_freshVar_13=tom_get_slot_Variable_AstName(tomMatch190NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomTerm(tomMatch190NameNumberfreshSubject_2)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_14=tomMatch190NameNumberfreshSubject_2;{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_begin_16=tomMatch190NameNumber_freshVar_14;{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_end_17=tomMatch190NameNumber_freshVar_14;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_15=tomMatch190NameNumber_end_17;if (!(tom_is_empty_concTomTerm_TomList(tomMatch190NameNumber_freshVar_15))) {if (tom_is_fun_sym_Variable(tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_15))) {{  tom.engine.adt.tomname.types.TomName  tomMatch190NameNumber_freshVar_20=tom_get_slot_Variable_AstName(tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_15));if (tom_equal_term_TomName(tomMatch190NameNumber_freshVar_13, tomMatch190NameNumber_freshVar_20)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_18=tom_get_tail_concTomTerm_TomList(tomMatch190NameNumber_freshVar_15);if ( true ) {

              return tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_15);
            }}}}}}}if (tom_is_empty_concTomTerm_TomList(tomMatch190NameNumber_end_17)) {tomMatch190NameNumber_end_17=tomMatch190NameNumber_begin_16;} else {tomMatch190NameNumber_end_17=tom_get_tail_concTomTerm_TomList(tomMatch190NameNumber_end_17);}}} while(!(tom_equal_term_TomList(tomMatch190NameNumber_end_17, tomMatch190NameNumber_begin_16)));}}}}}}if (tom_is_fun_sym_Variable(tomMatch190NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch190NameNumber_freshVar_21=tom_get_slot_Variable_AstName(tomMatch190NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomTerm(tomMatch190NameNumberfreshSubject_2)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_22=tomMatch190NameNumberfreshSubject_2;{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_begin_24=tomMatch190NameNumber_freshVar_22;{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_end_25=tomMatch190NameNumber_freshVar_22;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_23=tomMatch190NameNumber_end_25;if (!(tom_is_empty_concTomTerm_TomList(tomMatch190NameNumber_freshVar_23))) {if (tom_is_fun_sym_VariableStar(tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_23))) {{  tom.engine.adt.tomname.types.TomName  tomMatch190NameNumber_freshVar_28=tom_get_slot_VariableStar_AstName(tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_23));if (tom_equal_term_TomName(tomMatch190NameNumber_freshVar_21, tomMatch190NameNumber_freshVar_28)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_26=tom_get_tail_concTomTerm_TomList(tomMatch190NameNumber_freshVar_23);if ( true ) {

              return tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_23);
            }}}}}}}if (tom_is_empty_concTomTerm_TomList(tomMatch190NameNumber_end_25)) {tomMatch190NameNumber_end_25=tomMatch190NameNumber_begin_24;} else {tomMatch190NameNumber_end_25=tom_get_tail_concTomTerm_TomList(tomMatch190NameNumber_end_25);}}} while(!(tom_equal_term_TomList(tomMatch190NameNumber_end_25, tomMatch190NameNumber_begin_24)));}}}}}}if (tom_is_fun_sym_VariableStar(tomMatch190NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch190NameNumber_freshVar_29=tom_get_slot_VariableStar_AstName(tomMatch190NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomTerm(tomMatch190NameNumberfreshSubject_2)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_30=tomMatch190NameNumberfreshSubject_2;{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_begin_32=tomMatch190NameNumber_freshVar_30;{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_end_33=tomMatch190NameNumber_freshVar_30;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_31=tomMatch190NameNumber_end_33;if (!(tom_is_empty_concTomTerm_TomList(tomMatch190NameNumber_freshVar_31))) {if (tom_is_fun_sym_VariableStar(tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_31))) {{  tom.engine.adt.tomname.types.TomName  tomMatch190NameNumber_freshVar_36=tom_get_slot_VariableStar_AstName(tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_31));if (tom_equal_term_TomName(tomMatch190NameNumber_freshVar_29, tomMatch190NameNumber_freshVar_36)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch190NameNumber_freshVar_34=tom_get_tail_concTomTerm_TomList(tomMatch190NameNumber_freshVar_31);if ( true ) {

              return tom_get_head_concTomTerm_TomList(tomMatch190NameNumber_freshVar_31);
            }}}}}}}if (tom_is_empty_concTomTerm_TomList(tomMatch190NameNumber_end_33)) {tomMatch190NameNumber_end_33=tomMatch190NameNumber_begin_32;} else {tomMatch190NameNumber_end_33=tom_get_tail_concTomTerm_TomList(tomMatch190NameNumber_end_33);}}} while(!(tom_equal_term_TomList(tomMatch190NameNumber_end_33, tomMatch190NameNumber_begin_32)));}}}}}}}}}}

        }}}}return super.visit_TomTerm(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_replace_replaceInstantiatedVariable( tom.engine.adt.tomterm.types.TomList  t0) { return new replace_replaceInstantiatedVariable(t0); }



    protected tom.library.sl.Visitable replaceInstantiatedVariable(TomList instantiatedVariable, tom.library.sl.Visitable subject) {
      try {
        //System.out.println("varlist = " + instantiatedVariable);
        //System.out.println("subject = " + subject);
        return tom_make_TopDownStop(tom_make_replace_replaceInstantiatedVariable(instantiatedVariable)).visit(subject);
      } catch(tom.library.sl.VisitFailure e) {
        throw new TomRuntimeException("replaceInstantiatedVariable: failure on " + instantiatedVariable);
      }
    }

    private TomType getType(String tomName) {
      TomType tomType = getSymbolTable().getType(tomName);
      return tomType;
    }
    
    /**
     * Collect the matchConstraints in a list of constraints   
     */
    private static class CollectMatchConstraints extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  java.util.Collection  constrList; public CollectMatchConstraints( java.util.Collection  constrList) { super(tom_make_Identity());this.constrList=constrList;}public  java.util.Collection  getconstrList() { return constrList;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Constraint(tom__arg)) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch191NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if (tom_is_fun_sym_MatchConstraint(tomMatch191NameNumberfreshSubject_1)) {if ( true ) {

        
          constrList.add(tomMatch191NameNumberfreshSubject_1);         
        }}}}return super.visit_Constraint(tom__arg); }}

// end strategy   

    /**
     * Collect the constraints (match and numeric)
     */
    private static class CollectConstraints extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  java.util.Collection  constrList; public CollectConstraints( java.util.Collection  constrList) { super(tom_make_Identity());this.constrList=constrList;}public  java.util.Collection  getconstrList() { return constrList;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Constraint(tom__arg)) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch192NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);{ boolean tomMatch192NameNumber_freshVar_0= false ;if (tom_is_fun_sym_MatchConstraint(tomMatch192NameNumberfreshSubject_1)) {tomMatch192NameNumber_freshVar_0= true ;} else {if (tom_is_fun_sym_NumericConstraint(tomMatch192NameNumberfreshSubject_1)) {tomMatch192NameNumber_freshVar_0= true ;}}if ((tomMatch192NameNumber_freshVar_0 ==  true )) {if ( true ) {

        
          constrList.add(tomMatch192NameNumberfreshSubject_1);         
        }}}}}return super.visit_Constraint(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_CollectConstraints( java.util.Collection  t0) { return new CollectConstraints(t0); }

// end strategy   
  }


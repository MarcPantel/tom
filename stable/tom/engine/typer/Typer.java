/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 * 
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2008, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine.typer;

import java.util.logging.Level;
import java.util.Iterator;
import java.util.ArrayList;

import tom.engine.exception.TomRuntimeException;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomname.types.tomname.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;
import tom.engine.adt.tomtype.types.tomtypelist.concTomType;
import tom.engine.adt.tomterm.types.tomlist.concTomTerm;

import tom.engine.TomBase;
import tom.engine.TomMessage;
import tom.engine.tools.ASTFactory;
import tom.engine.tools.TomGenericPlugin;
import tom.engine.tools.Tools;
import tom.engine.tools.SymbolTable;
import tom.engine.xml.Constants;
import tom.platform.OptionParser;
import tom.platform.adt.platformoption.types.PlatformOptionList;
import aterm.ATerm;

import tom.library.sl.*;

/**
 * The Typer plugin.
 * Perform syntax expansion and more.
 */
public class Typer extends TomGenericPlugin {

  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if( l1.isEmptyconcTomName() ) {       return l2;     } else if( l2.isEmptyconcTomName() ) {       return l1;     } else if(  l1.getTailconcTomName() .isEmptyconcTomName() ) {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,l2) ;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,tom_append_list_concTomName( l1.getTailconcTomName() ,l2)) ;     }   }   private static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcTomName()  ||  (end== tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( begin.getHeadconcTomName() ,( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName( begin.getTailconcTomName() ,end,tail)) ;   }      private static   tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList l1,  tom.engine.adt.tomterm.types.TomList  l2) {     if( l1.isEmptyconcTomTerm() ) {       return l2;     } else if( l2.isEmptyconcTomTerm() ) {       return l1;     } else if(  l1.getTailconcTomTerm() .isEmptyconcTomTerm() ) {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( l1.getHeadconcTomTerm() ,l2) ;     } else {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( l1.getHeadconcTomTerm() ,tom_append_list_concTomTerm( l1.getTailconcTomTerm() ,l2)) ;     }   }   private static   tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end, tom.engine.adt.tomterm.types.TomList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcTomTerm()  ||  (end== tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( begin.getHeadconcTomTerm() ,( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm( begin.getTailconcTomTerm() ,end,tail)) ;   }      private static   tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList l1,  tom.engine.adt.tomoption.types.OptionList  l2) {     if( l1.isEmptyconcOption() ) {       return l2;     } else if( l2.isEmptyconcOption() ) {       return l1;     } else if(  l1.getTailconcOption() .isEmptyconcOption() ) {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( l1.getHeadconcOption() ,l2) ;     } else {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( l1.getHeadconcOption() ,tom_append_list_concOption( l1.getTailconcOption() ,l2)) ;     }   }   private static   tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end, tom.engine.adt.tomoption.types.OptionList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcOption()  ||  (end== tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( begin.getHeadconcOption() ,( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption( begin.getTailconcOption() ,end,tail)) ;   }      private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {     if( l1.isEmptyconcConstraint() ) {       return l2;     } else if( l2.isEmptyconcConstraint() ) {       return l1;     } else if(  l1.getTailconcConstraint() .isEmptyconcConstraint() ) {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,l2) ;     } else {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,tom_append_list_concConstraint( l1.getTailconcConstraint() ,l2)) ;     }   }   private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end, tom.engine.adt.tomconstraint.types.ConstraintList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcConstraint()  ||  (end== tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( begin.getHeadconcConstraint() ,( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint( begin.getTailconcConstraint() ,end,tail)) ;   }      private static   tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList l1,  tom.engine.adt.tomslot.types.SlotList  l2) {     if( l1.isEmptyconcSlot() ) {       return l2;     } else if( l2.isEmptyconcSlot() ) {       return l1;     } else if(  l1.getTailconcSlot() .isEmptyconcSlot() ) {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,l2) ;     } else {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,tom_append_list_concSlot( l1.getTailconcSlot() ,l2)) ;     }   }   private static   tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end, tom.engine.adt.tomslot.types.SlotList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcSlot()  ||  (end== tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( begin.getHeadconcSlot() ,( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot( begin.getTailconcSlot() ,end,tail)) ;   }    /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */   private static   tom.library.sl.Strategy  tom_append_list_ChoiceId( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.ChoiceId) )) {       if(( ((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.THEN) ):( null )) ==null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ):l1):new tom.library.sl.ChoiceId(((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_ChoiceId(((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ):l1):new tom.library.sl.ChoiceId(((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ):l1),tom_append_list_ChoiceId(((( (l1 instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.ChoiceId(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_ChoiceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end ==null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_ChoiceId(((( (begin instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.FIRST) ):begin):new tom.library.sl.ChoiceId(((( (begin instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_ChoiceId(((( (begin instanceof tom.library.sl.ChoiceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.THEN) ):( null )),end,tail)) );   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_TopDownIdStopOnSuccess( tom.library.sl.Strategy  v) { return  (( new tom.library.sl.Mu(( new tom.library.sl.MuVar("x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ):new tom.library.sl.ChoiceId(( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ),( null )) )==null)?v:new tom.library.sl.ChoiceId(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ):new tom.library.sl.ChoiceId(( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ),( null )) )) )) )) ; }   





  /** some output suffixes */
  public static final String TYPED_SUFFIX       = ".tfix.typed";
  public static final String TYPED_TABLE_SUFFIX = ".tfix.typed.table";

  /** the declared options string */
  public static final String DECLARED_OPTIONS =
    "<options>" +
    "<boolean name='type' altName='' description='Typer (activated by default)' value='true'/>" +
    "</options>";

  /** the kernel typer acting at very low level */
  private KernelTyper kernelTyper;

  /** Constructor*/
  public Typer() {
    super("Typer");
    kernelTyper = new KernelTyper();
  }

  /**
   * The run() method performs expansion for tom syntax, variables,...
   */
  public void run() {
    long startChrono = System.currentTimeMillis();
    boolean intermediate = getOptionBooleanValue("intermediate");
    TomTerm typedTerm = null;
    try {
      kernelTyper.setSymbolTable(getStreamManager().getSymbolTable());
      TomTerm syntaxExpandedTerm = (TomTerm) tom_make_TopDownIdStopOnSuccess(tom_make_typeTermApplTomSyntax(this)).visitLight((TomTerm)getWorkingTerm());

      updateSymbolTable();

      syntaxExpandedTerm = expandType(syntaxExpandedTerm);
      TomTerm variableExpandedTerm = (TomTerm) kernelTyper.typeVariable( tom.engine.adt.tomtype.types.tomtype.EmptyType.make() , syntaxExpandedTerm);
      /* transform each BackQuoteTerm into its compiled form */
      TomTerm backQuoteExpandedTerm = (TomTerm) tom_make_TopDownIdStopOnSuccess(tom_make_typeBackQuoteAppl(this)).visitLight(variableExpandedTerm);
      TomTerm stringExpandedTerm = (TomTerm) tom_make_TopDownIdStopOnSuccess(tom_make_typeString(this)).visitLight(backQuoteExpandedTerm);
      typedTerm = (TomTerm) tom_make_TopDownIdStopOnSuccess(tom_make_updateCodomain(this)).visitLight(stringExpandedTerm);
      setWorkingTerm(typedTerm);
      // verbose
      getLogger().log(Level.INFO, TomMessage.tomTypingPhase.getMessage(),
          new Integer((int)(System.currentTimeMillis()-startChrono)));
    } catch (Exception e) {
      getLogger().log( Level.SEVERE, TomMessage.exceptionMessage.getMessage(),
          new Object[]{getClass().getName(), getStreamManager().getInputFileName(), e.getMessage()} );
      e.printStackTrace();
      return;
    }
    if(intermediate) {
      Tools.generateOutput(getStreamManager().getOutputFileName()
          + TYPED_SUFFIX, typedTerm);
      Tools.generateOutput(getStreamManager().getOutputFileName()
          + TYPED_TABLE_SUFFIX, symbolTable().toTerm());
    }
  }

  /*
   * Replace a TomTypeAlone by its expanded form (TomType)
   */
  private TomTerm expandType(TomTerm subject) {
    try {
      return (TomTerm) tom_make_TopDownIdStopOnSuccess(tom_make_expandType(this)).visitLight(subject);
    } catch(tom.library.sl.VisitFailure e) {
      throw new TomRuntimeException("typeType: failure on " + subject);
    }
  }

  private static class expandType extends tom.library.sl.BasicStrategy {private  Typer  typer; public expandType( Typer  typer) { super(( new tom.library.sl.Identity() ));this.typer=typer;}public  Typer  gettyper() { return typer;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomtype.types.TomType  visit_TomType( tom.engine.adt.tomtype.types.TomType  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch252NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )tom__arg);if ( (tomMatch252NameNumberfreshSubject_1 instanceof tom.engine.adt.tomtype.types.tomtype.TomTypeAlone) ) {{  String  tomMatch252NameNumber_freshVar_0= tomMatch252NameNumberfreshSubject_1.getString() ;if ( true ) {


        TomType type = typer.symbolTable().getType(tomMatch252NameNumber_freshVar_0);
        if(type != null) {
          return type;
        } else {
          return tomMatch252NameNumberfreshSubject_1; // useful for TomTypeAlone("unknown type")
        }
      }}}}}}return _visit_TomType(tom__arg,introspector); }public  tom.engine.adt.tomtype.types.TomType  _visit_TomType( tom.engine.adt.tomtype.types.TomType  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomtype.types.TomType )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomtype.types.TomType )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomtype.types.TomType) ) {return visit_TomType((( tom.engine.adt.tomtype.types.TomType )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_expandType( Typer  t0) { return new expandType(t0); }



  /*
   * updateSymbol is called after a first syntax expansion phase
   * this phase updates the symbolTable according to the typeTable
   * this is performed by recursively traversing each symbol
   * - backquote are typed
   * - each TomTypeAlone is replaced by the corresponding TomType
   * - default IsFsymDecl and MakeDecl are added
   */
  public void updateSymbolTable() {
    SymbolTable symbolTable = getStreamManager().getSymbolTable();
    Iterator<String> it = symbolTable.keySymbolIterator();
    Strategy typeStrategy = tom_make_TopDownIdStopOnSuccess(tom_make_typeTermApplTomSyntax(this));

    while(it.hasNext()) {
      String tomName = it.next();
      TomSymbol tomSymbol = getSymbolFromName(tomName);
      /*
       * add default IsFsymDecl and MakeDecl, unless it is a builtin type
       */
      if(!getStreamManager().getSymbolTable().isBuiltinType(TomBase.getTomType(TomBase.getSymbolCodomain(tomSymbol)))) {
        tomSymbol = addDefaultIsFsym(tomSymbol);
        tomSymbol = addDefaultMake(tomSymbol);
      }
      try {
        tomSymbol = (TomSymbol) tom_make_TopDownIdStopOnSuccess(tom_make_typeTermApplTomSyntax(this)).visitLight(tomSymbol);
        tomSymbol = expandType( tom.engine.adt.tomterm.types.tomterm.TomSymbolToTomTerm.make(tomSymbol) ).getAstSymbol();
        tomSymbol = ((TomTerm) kernelTyper.typeVariable( tom.engine.adt.tomtype.types.tomtype.EmptyType.make() , tom.engine.adt.tomterm.types.tomterm.TomSymbolToTomTerm.make(tomSymbol) )).getAstSymbol();
        tomSymbol = (TomSymbol) tom_make_TopDownIdStopOnSuccess(tom_make_typeBackQuoteAppl(this)).visitLight(tomSymbol);
      } catch(tom.library.sl.VisitFailure e) {
        System.out.println("should not be there");
      }
      //System.out.println("symbol = " + tomSymbol);
      getStreamManager().getSymbolTable().putSymbol(tomName,tomSymbol);
    }
  }

  private TomSymbol addDefaultIsFsym(TomSymbol tomSymbol) {
    {if ( (tomSymbol instanceof tom.engine.adt.tomsignature.types.TomSymbol) ) {{  tom.engine.adt.tomsignature.types.TomSymbol  tomMatch253NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomSymbol )tomSymbol);if ( (tomMatch253NameNumberfreshSubject_1 instanceof tom.engine.adt.tomsignature.types.tomsymbol.Symbol) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_freshVar_0= tomMatch253NameNumberfreshSubject_1.getOption() ;if ( ((tomMatch253NameNumber_freshVar_0 instanceof tom.engine.adt.tomoption.types.optionlist.ConsconcOption) || (tomMatch253NameNumber_freshVar_0 instanceof tom.engine.adt.tomoption.types.optionlist.EmptyconcOption)) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_freshVar_1=tomMatch253NameNumber_freshVar_0;{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_begin_3=tomMatch253NameNumber_freshVar_1;{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_end_4=tomMatch253NameNumber_freshVar_1;do {{{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_freshVar_2=tomMatch253NameNumber_end_4;if (!( tomMatch253NameNumber_freshVar_2.isEmptyconcOption() )) {if ( ( tomMatch253NameNumber_freshVar_2.getHeadconcOption()  instanceof tom.engine.adt.tomoption.types.option.DeclarationToOption) ) {{  tom.engine.adt.tomdeclaration.types.Declaration  tomMatch253NameNumber_freshVar_7=  tomMatch253NameNumber_freshVar_2.getHeadconcOption() .getAstDeclaration() ;if ( (tomMatch253NameNumber_freshVar_7 instanceof tom.engine.adt.tomdeclaration.types.declaration.IsFsymDecl) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_freshVar_5= tomMatch253NameNumber_freshVar_2.getTailconcOption() ;if ( true ) {

        return tomSymbol;
      }}}}}}}if ( tomMatch253NameNumber_end_4.isEmptyconcOption() ) {tomMatch253NameNumber_end_4=tomMatch253NameNumber_begin_3;} else {tomMatch253NameNumber_end_4= tomMatch253NameNumber_end_4.getTailconcOption() ;}}} while(!( (tomMatch253NameNumber_end_4==tomMatch253NameNumber_begin_3) ));}}}}}}}}if ( (tomSymbol instanceof tom.engine.adt.tomsignature.types.TomSymbol) ) {{  tom.engine.adt.tomsignature.types.TomSymbol  tomMatch253NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomSymbol )tomSymbol);if ( (tomMatch253NameNumberfreshSubject_1 instanceof tom.engine.adt.tomsignature.types.tomsymbol.Symbol) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch253NameNumber_freshVar_8= tomMatch253NameNumberfreshSubject_1.getAstName() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch253NameNumber_freshVar_9= tomMatch253NameNumberfreshSubject_1.getTypesToType() ;{  tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch253NameNumber_freshVar_10= tomMatch253NameNumberfreshSubject_1.getPairNameDeclList() ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_freshVar_11= tomMatch253NameNumberfreshSubject_1.getOption() ;{  tom.engine.adt.tomname.types.TomName  tom_name=tomMatch253NameNumber_freshVar_8;if ( (tomMatch253NameNumber_freshVar_9 instanceof tom.engine.adt.tomtype.types.tomtype.TypesToType) ) {{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch253NameNumber_freshVar_12= tomMatch253NameNumber_freshVar_9.getDomain() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch253NameNumber_freshVar_13= tomMatch253NameNumber_freshVar_9.getCodomain() ;if ( ((tomMatch253NameNumber_freshVar_11 instanceof tom.engine.adt.tomoption.types.optionlist.ConsconcOption) || (tomMatch253NameNumber_freshVar_11 instanceof tom.engine.adt.tomoption.types.optionlist.EmptyconcOption)) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_freshVar_14=tomMatch253NameNumber_freshVar_11;{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_begin_16=tomMatch253NameNumber_freshVar_14;{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_end_17=tomMatch253NameNumber_freshVar_14;do {{{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_freshVar_15=tomMatch253NameNumber_end_17;if (!( tomMatch253NameNumber_freshVar_15.isEmptyconcOption() )) {if ( ( tomMatch253NameNumber_freshVar_15.getHeadconcOption()  instanceof tom.engine.adt.tomoption.types.option.OriginTracking) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch253NameNumber_freshVar_20=  tomMatch253NameNumber_freshVar_15.getHeadconcOption() .getAstName() ;{  int  tomMatch253NameNumber_freshVar_21=  tomMatch253NameNumber_freshVar_15.getHeadconcOption() .getLine() ;{  String  tomMatch253NameNumber_freshVar_22=  tomMatch253NameNumber_freshVar_15.getHeadconcOption() .getFileName() ;{  int  tom_line=tomMatch253NameNumber_freshVar_21;{  String  tom_file=tomMatch253NameNumber_freshVar_22;{  tom.engine.adt.tomoption.types.OptionList  tomMatch253NameNumber_freshVar_18= tomMatch253NameNumber_freshVar_15.getTailconcOption() ;if ( true ) {

        Declaration isfsym =  tom.engine.adt.tomdeclaration.types.declaration.IsFsymDecl.make(tom_name,  tom.engine.adt.tomterm.types.tomterm.Variable.make( tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( tom.engine.adt.tomoption.types.option.OriginTracking.make( tom.engine.adt.tomname.types.tomname.Name.make("t") , tom_line, tom_file) , tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ) ,  tom.engine.adt.tomname.types.tomname.Name.make("t") , tomMatch253NameNumber_freshVar_13,  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) ,  tom.engine.adt.tomexpression.types.expression.FalseTL.make() ,  tom.engine.adt.tomoption.types.option.OriginTracking.make( tom.engine.adt.tomname.types.tomname.Name.make("is_fsym") , tom_line, tom_file) ) ;
        return  tom.engine.adt.tomsignature.types.tomsymbol.Symbol.make(tom_name, tomMatch253NameNumber_freshVar_9, tomMatch253NameNumber_freshVar_10, tom_append_list_concOption(tom_get_slice_concOption(tomMatch253NameNumber_begin_16,tomMatch253NameNumber_end_17, tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ), tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( tomMatch253NameNumber_freshVar_15.getHeadconcOption() , tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( tom.engine.adt.tomoption.types.option.DeclarationToOption.make(isfsym) ,tom_append_list_concOption(tomMatch253NameNumber_freshVar_18, tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() )) ) )) ;
      }}}}}}}}}}if ( tomMatch253NameNumber_end_17.isEmptyconcOption() ) {tomMatch253NameNumber_end_17=tomMatch253NameNumber_begin_16;} else {tomMatch253NameNumber_end_17= tomMatch253NameNumber_end_17.getTailconcOption() ;}}} while(!( (tomMatch253NameNumber_end_17==tomMatch253NameNumber_begin_16) ));}}}}}}}}}}}}}}}}

    return tomSymbol;
  }

  private TomSymbol addDefaultMake(TomSymbol tomSymbol) {
    {if ( (tomSymbol instanceof tom.engine.adt.tomsignature.types.TomSymbol) ) {{  tom.engine.adt.tomsignature.types.TomSymbol  tomMatch254NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomSymbol )tomSymbol);if ( (tomMatch254NameNumberfreshSubject_1 instanceof tom.engine.adt.tomsignature.types.tomsymbol.Symbol) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_freshVar_0= tomMatch254NameNumberfreshSubject_1.getOption() ;if ( ((tomMatch254NameNumber_freshVar_0 instanceof tom.engine.adt.tomoption.types.optionlist.ConsconcOption) || (tomMatch254NameNumber_freshVar_0 instanceof tom.engine.adt.tomoption.types.optionlist.EmptyconcOption)) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_freshVar_1=tomMatch254NameNumber_freshVar_0;{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_begin_3=tomMatch254NameNumber_freshVar_1;{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_end_4=tomMatch254NameNumber_freshVar_1;do {{{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_freshVar_2=tomMatch254NameNumber_end_4;if (!( tomMatch254NameNumber_freshVar_2.isEmptyconcOption() )) {if ( ( tomMatch254NameNumber_freshVar_2.getHeadconcOption()  instanceof tom.engine.adt.tomoption.types.option.DeclarationToOption) ) {{  tom.engine.adt.tomdeclaration.types.Declaration  tomMatch254NameNumber_freshVar_7=  tomMatch254NameNumber_freshVar_2.getHeadconcOption() .getAstDeclaration() ;{ boolean tomMatch254NameNumber_freshVar_8= false ;if ( (tomMatch254NameNumber_freshVar_7 instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeDecl) ) {tomMatch254NameNumber_freshVar_8= true ;} else {if ( (tomMatch254NameNumber_freshVar_7 instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeEmptyList) ) {tomMatch254NameNumber_freshVar_8= true ;} else {if ( (tomMatch254NameNumber_freshVar_7 instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeEmptyArray) ) {tomMatch254NameNumber_freshVar_8= true ;}}}if ((tomMatch254NameNumber_freshVar_8 ==  true )) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_freshVar_5= tomMatch254NameNumber_freshVar_2.getTailconcOption() ;if ( true ) {

        return tomSymbol;
      }}}}}}}}if ( tomMatch254NameNumber_end_4.isEmptyconcOption() ) {tomMatch254NameNumber_end_4=tomMatch254NameNumber_begin_3;} else {tomMatch254NameNumber_end_4= tomMatch254NameNumber_end_4.getTailconcOption() ;}}} while(!( (tomMatch254NameNumber_end_4==tomMatch254NameNumber_begin_3) ));}}}}}}}}if ( (tomSymbol instanceof tom.engine.adt.tomsignature.types.TomSymbol) ) {{  tom.engine.adt.tomsignature.types.TomSymbol  tomMatch254NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomSymbol )tomSymbol);if ( (tomMatch254NameNumberfreshSubject_1 instanceof tom.engine.adt.tomsignature.types.tomsymbol.Symbol) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch254NameNumber_freshVar_9= tomMatch254NameNumberfreshSubject_1.getAstName() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch254NameNumber_freshVar_10= tomMatch254NameNumberfreshSubject_1.getTypesToType() ;{  tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch254NameNumber_freshVar_11= tomMatch254NameNumberfreshSubject_1.getPairNameDeclList() ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_freshVar_12= tomMatch254NameNumberfreshSubject_1.getOption() ;{  tom.engine.adt.tomname.types.TomName  tom_name=tomMatch254NameNumber_freshVar_9;if ( (tomMatch254NameNumber_freshVar_10 instanceof tom.engine.adt.tomtype.types.tomtype.TypesToType) ) {{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch254NameNumber_freshVar_13= tomMatch254NameNumber_freshVar_10.getDomain() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch254NameNumber_freshVar_14= tomMatch254NameNumber_freshVar_10.getCodomain() ;{  tom.engine.adt.tomtype.types.TomType  tom_codomain=tomMatch254NameNumber_freshVar_14;if ( ((tomMatch254NameNumber_freshVar_12 instanceof tom.engine.adt.tomoption.types.optionlist.ConsconcOption) || (tomMatch254NameNumber_freshVar_12 instanceof tom.engine.adt.tomoption.types.optionlist.EmptyconcOption)) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_freshVar_15=tomMatch254NameNumber_freshVar_12;{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_begin_17=tomMatch254NameNumber_freshVar_15;{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_end_18=tomMatch254NameNumber_freshVar_15;do {{{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_freshVar_16=tomMatch254NameNumber_end_18;if (!( tomMatch254NameNumber_freshVar_16.isEmptyconcOption() )) {if ( ( tomMatch254NameNumber_freshVar_16.getHeadconcOption()  instanceof tom.engine.adt.tomoption.types.option.OriginTracking) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch254NameNumber_freshVar_21=  tomMatch254NameNumber_freshVar_16.getHeadconcOption() .getAstName() ;{  int  tomMatch254NameNumber_freshVar_22=  tomMatch254NameNumber_freshVar_16.getHeadconcOption() .getLine() ;{  String  tomMatch254NameNumber_freshVar_23=  tomMatch254NameNumber_freshVar_16.getHeadconcOption() .getFileName() ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch254NameNumber_freshVar_19= tomMatch254NameNumber_freshVar_16.getTailconcOption() ;if ( true ) {

        //build variables for make
        TomList argsAST =  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ;
        int index = 0;
        for(TomType subtermType:(concTomType)tomMatch254NameNumber_freshVar_13) {
          TomTerm variable =  tom.engine.adt.tomterm.types.tomterm.Variable.make( tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ,  tom.engine.adt.tomname.types.tomname.Name.make("t"+index) , subtermType,  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) ;
          argsAST = tom_append_list_concTomTerm(argsAST, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(variable, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ) );
          index++;
        }
        TomTerm functionCall =  tom.engine.adt.tomterm.types.tomterm.FunctionCall.make(tom_name, tom_codomain, argsAST) ;
        Declaration make =  tom.engine.adt.tomdeclaration.types.declaration.MakeDecl.make(tom_name, tom_codomain, argsAST,  tom.engine.adt.tominstruction.types.instruction.TomTermToInstruction.make(functionCall) ,  tom.engine.adt.tomoption.types.option.OriginTracking.make( tom.engine.adt.tomname.types.tomname.Name.make("make") , tomMatch254NameNumber_freshVar_22, tomMatch254NameNumber_freshVar_23) ) 
;
        return  tom.engine.adt.tomsignature.types.tomsymbol.Symbol.make(tom_name, tomMatch254NameNumber_freshVar_10, tomMatch254NameNumber_freshVar_11, tom_append_list_concOption(tom_get_slice_concOption(tomMatch254NameNumber_begin_17,tomMatch254NameNumber_end_18, tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ), tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( tomMatch254NameNumber_freshVar_16.getHeadconcOption() , tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( tom.engine.adt.tomoption.types.option.DeclarationToOption.make(make) ,tom_append_list_concOption(tomMatch254NameNumber_freshVar_19, tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() )) ) )) ;
      }}}}}}}}if ( tomMatch254NameNumber_end_18.isEmptyconcOption() ) {tomMatch254NameNumber_end_18=tomMatch254NameNumber_begin_17;} else {tomMatch254NameNumber_end_18= tomMatch254NameNumber_end_18.getTailconcOption() ;}}} while(!( (tomMatch254NameNumber_end_18==tomMatch254NameNumber_begin_17) ));}}}}}}}}}}}}}}}}}

    return tomSymbol;
  }
  /**
   * inherited from OptionOwner interface (plugin)
   */
  public PlatformOptionList getDeclaredOptionList() {
    return OptionParser.xmlToOptionList(Typer.DECLARED_OPTIONS);
  }

  /*
   * The 'typeTermApplTomSyntax' phase replaces:
   * - each 'TermAppl' by its typed record form:
   *    placeholders are not removed
   *    slotName are attached to arguments
   */
  private static class typeTermApplTomSyntax extends tom.library.sl.BasicStrategy {private  Typer  typer; public typeTermApplTomSyntax( Typer  typer) { super(( new tom.library.sl.Identity() ));this.typer=typer;}public  Typer  gettyper() { return typer;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch255NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg);if ( (tomMatch255NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch255NameNumber_freshVar_0= tomMatch255NameNumberfreshSubject_1.getOption() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch255NameNumber_freshVar_1= tomMatch255NameNumberfreshSubject_1.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch255NameNumber_freshVar_2= tomMatch255NameNumberfreshSubject_1.getArgs() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch255NameNumber_freshVar_3= tomMatch255NameNumberfreshSubject_1.getConstraints() ;if ( true ) {


        return typer.typeTermAppl(tomMatch255NameNumber_freshVar_0,tomMatch255NameNumber_freshVar_1,tomMatch255NameNumber_freshVar_2,tomMatch255NameNumber_freshVar_3);
      }}}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch255NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg);if ( (tomMatch255NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.XMLAppl) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch255NameNumber_freshVar_4= tomMatch255NameNumberfreshSubject_1.getOption() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch255NameNumber_freshVar_5= tomMatch255NameNumberfreshSubject_1.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch255NameNumber_freshVar_6= tomMatch255NameNumberfreshSubject_1.getAttrList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch255NameNumber_freshVar_7= tomMatch255NameNumberfreshSubject_1.getChildList() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch255NameNumber_freshVar_8= tomMatch255NameNumberfreshSubject_1.getConstraints() ;if ( true ) {


        //System.out.println("typeXML in:\n" + subject);
        return typer.typeXMLAppl(tomMatch255NameNumber_freshVar_4, tomMatch255NameNumber_freshVar_5, tomMatch255NameNumber_freshVar_6, tomMatch255NameNumber_freshVar_7,tomMatch255NameNumber_freshVar_8);
      }}}}}}}}}}return _visit_TomTerm(tom__arg,introspector); }public  tom.engine.adt.tomterm.types.TomTerm  _visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomterm.types.TomTerm )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomterm.types.TomTerm )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomterm.types.TomTerm) ) {return visit_TomTerm((( tom.engine.adt.tomterm.types.TomTerm )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_typeTermApplTomSyntax( Typer  t0) { return new typeTermApplTomSyntax(t0); }



    /*
     * this post-processing phase replaces untyped (universalType) codomain
     * by their precise type (according to the symbolTable)
     */
    private static class updateCodomain extends tom.library.sl.BasicStrategy {private  Typer  typer; public updateCodomain( Typer  typer) { super(( new tom.library.sl.Identity() ));this.typer=typer;}public  Typer  gettyper() { return typer;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomdeclaration.types.Declaration  visit_Declaration( tom.engine.adt.tomdeclaration.types.Declaration  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {{  tom.engine.adt.tomdeclaration.types.Declaration  tomMatch256NameNumberfreshSubject_1=(( tom.engine.adt.tomdeclaration.types.Declaration )tom__arg);if ( (tomMatch256NameNumberfreshSubject_1 instanceof tom.engine.adt.tomdeclaration.types.declaration.GetHeadDecl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch256NameNumber_freshVar_0= tomMatch256NameNumberfreshSubject_1.getOpname() ;if ( (tomMatch256NameNumber_freshVar_0 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch256NameNumber_freshVar_1= tomMatch256NameNumber_freshVar_0.getString() ;if ( true ) {


          TomSymbol tomSymbol = typer.getSymbolFromName(tomMatch256NameNumber_freshVar_1);
          TomTypeList codomain = TomBase.getSymbolDomain(tomSymbol);
          if(codomain.length()==1) {
            Declaration t = (Declaration)tomMatch256NameNumberfreshSubject_1;
            t = t.setCodomain(codomain.getHeadconcTomType());
            return t;
          } else {
            throw new TomRuntimeException("updateCodomain: bad codomain: " + codomain);
          }
        }}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {{  tom.engine.adt.tomdeclaration.types.Declaration  tomMatch256NameNumberfreshSubject_1=(( tom.engine.adt.tomdeclaration.types.Declaration )tom__arg);if ( (tomMatch256NameNumberfreshSubject_1 instanceof tom.engine.adt.tomdeclaration.types.declaration.GetHeadDecl) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch256NameNumber_freshVar_2= tomMatch256NameNumberfreshSubject_1.getVariable() ;if ( (tomMatch256NameNumber_freshVar_2 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch256NameNumber_freshVar_3= tomMatch256NameNumber_freshVar_2.getAstType() ;if ( true ) {


          TomSymbol tomSymbol = typer.getSymbolFromType(tomMatch256NameNumber_freshVar_3);
          if(tomSymbol != null) {
            TomTypeList codomain = TomBase.getSymbolDomain(tomSymbol);

            if(codomain.length()==1) {
              Declaration t = (Declaration)tomMatch256NameNumberfreshSubject_1;
              t = t.setCodomain(codomain.getHeadconcTomType());
              return t;
            } else {
              throw new TomRuntimeException("updateCodomain: bad codomain: " + codomain);
            }
          }
        }}}}}}}}return _visit_Declaration(tom__arg,introspector); }public  tom.engine.adt.tomdeclaration.types.Declaration  _visit_Declaration( tom.engine.adt.tomdeclaration.types.Declaration  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomdeclaration.types.Declaration )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomdeclaration.types.Declaration )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {return visit_Declaration((( tom.engine.adt.tomdeclaration.types.Declaration )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_updateCodomain( Typer  t0) { return new updateCodomain(t0); }



    /*
     * replace 'abc' by conc('a','b','c')
     */
    private static class typeString extends tom.library.sl.BasicStrategy {private  Typer  typer; public typeString( Typer  typer) { super(( new tom.library.sl.Identity() ));this.typer=typer;}public  Typer  gettyper() { return typer;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch257NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg);if ( (tomMatch257NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch257NameNumber_freshVar_0= tomMatch257NameNumberfreshSubject_1.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch257NameNumber_freshVar_1= tomMatch257NameNumberfreshSubject_1.getSlots() ;if ( ((tomMatch257NameNumber_freshVar_0 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch257NameNumber_freshVar_0 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch257NameNumber_freshVar_2=tomMatch257NameNumber_freshVar_0;if (!( tomMatch257NameNumber_freshVar_2.isEmptyconcTomName() )) {if ( ( tomMatch257NameNumber_freshVar_2.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch257NameNumber_freshVar_5=  tomMatch257NameNumber_freshVar_2.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch257NameNumber_freshVar_3= tomMatch257NameNumber_freshVar_2.getTailconcTomName() ;{  tom.engine.adt.tomslot.types.SlotList  tom_args=tomMatch257NameNumber_freshVar_1;if ( true ) {


          TomSymbol tomSymbol = typer.getSymbolFromName(tomMatch257NameNumber_freshVar_5);
          //System.out.println("appl = " + subject);
          if(tomSymbol != null) {
            if(TomBase.isListOperator(tomSymbol) || TomBase.isArrayOperator(tomSymbol)) {
              //System.out.println("appl = " + subject);
              SlotList newArgs = typer.typeChar(tomSymbol,tom_args);
              if(newArgs!=tom_args) {
                return tomMatch257NameNumberfreshSubject_1.setSlots(newArgs);
              }
            }
          }
        }}}}}}}}}}}}}}return _visit_TomTerm(tom__arg,introspector); }public  tom.engine.adt.tomterm.types.TomTerm  _visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomterm.types.TomTerm )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomterm.types.TomTerm )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomterm.types.TomTerm) ) {return visit_TomTerm((( tom.engine.adt.tomterm.types.TomTerm )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_typeString( Typer  t0) { return new typeString(t0); }



    /*
     * detect ill-formed char: 'abc'
     * and type it into a list of char: 'a','b','c'
     */
    private SlotList typeChar(TomSymbol tomSymbol,SlotList args) {
      if(args.isEmptyconcSlot()) {
        return args;
      } else {
        Slot head = args.getHeadconcSlot();
        SlotList tail = typeChar(tomSymbol,args.getTailconcSlot());
        {if ( (head instanceof tom.engine.adt.tomslot.types.Slot) ) {{  tom.engine.adt.tomslot.types.Slot  tomMatch258NameNumberfreshSubject_1=(( tom.engine.adt.tomslot.types.Slot )head);if ( (tomMatch258NameNumberfreshSubject_1 instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch258NameNumber_freshVar_0= tomMatch258NameNumberfreshSubject_1.getSlotName() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch258NameNumber_freshVar_1= tomMatch258NameNumberfreshSubject_1.getAppl() ;{  tom.engine.adt.tomname.types.TomName  tom_slotName=tomMatch258NameNumber_freshVar_0;if ( (tomMatch258NameNumber_freshVar_1 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch258NameNumber_freshVar_2= tomMatch258NameNumber_freshVar_1.getOption() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch258NameNumber_freshVar_3= tomMatch258NameNumber_freshVar_1.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch258NameNumber_freshVar_4= tomMatch258NameNumber_freshVar_1.getSlots() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch258NameNumber_freshVar_5= tomMatch258NameNumber_freshVar_1.getConstraints() ;if ( ((tomMatch258NameNumber_freshVar_3 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch258NameNumber_freshVar_3 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch258NameNumber_freshVar_6=tomMatch258NameNumber_freshVar_3;if (!( tomMatch258NameNumber_freshVar_6.isEmptyconcTomName() )) {if ( ( tomMatch258NameNumber_freshVar_6.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch258NameNumber_freshVar_9=  tomMatch258NameNumber_freshVar_6.getHeadconcTomName() .getString() ;{  String  tom_tomName=tomMatch258NameNumber_freshVar_9;{  tom.engine.adt.tomname.types.TomNameList  tomMatch258NameNumber_freshVar_7= tomMatch258NameNumber_freshVar_6.getTailconcTomName() ;if ( tomMatch258NameNumber_freshVar_7.isEmptyconcTomName() ) {if ( ((tomMatch258NameNumber_freshVar_4 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch258NameNumber_freshVar_4 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch258NameNumber_freshVar_8=tomMatch258NameNumber_freshVar_4;if ( tomMatch258NameNumber_freshVar_8.isEmptyconcSlot() ) {{  tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraintList=tomMatch258NameNumber_freshVar_5;if ( true ) {

            /*
             * ensure that the argument contains at least 1 character and 2 single quotes
             */
            TomSymbol stringSymbol = getSymbolFromName(tom_tomName);
            TomType termType = stringSymbol.getTypesToType().getCodomain();
            String type = termType.getTomType().getString();
            if(symbolTable().isCharType(type) && tom_tomName.length()>3) {
              if(tom_tomName.charAt(0)=='\'' && tom_tomName.charAt(tom_tomName.length()-1)=='\'') {
                SlotList newArgs =  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ;
                //System.out.println("bingo -> " + stringSymbol);
                for(int i=tom_tomName.length()-2 ; i>0 ;  i--) {
                  char c = tom_tomName.charAt(i);
                  String newName = "'" + c + "'";
                  TomSymbol newSymbol = stringSymbol.setAstName( tom.engine.adt.tomname.types.tomname.Name.make(newName) );
                  symbolTable().putSymbol(newName,newSymbol);

                  Slot newHead =  tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tom_slotName,  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(tomMatch258NameNumber_freshVar_2,  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( tom.engine.adt.tomname.types.tomname.Name.make(newName) , tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) ,  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ,  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) ) ;
                  newArgs =  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(newHead,tom_append_list_concSlot(newArgs, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
                  //System.out.println("newHead = " + newHead);
                  //System.out.println("newSymb = " + getSymbolFromName(newName));
                }
                ConstraintList newConstraintList =  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ;
                {if ( (tom_constraintList instanceof tom.engine.adt.tomconstraint.types.ConstraintList) ) {{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch259NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_constraintList);if ( ((tomMatch259NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint) || (tomMatch259NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint)) ) {{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch259NameNumber_freshVar_0=tomMatch259NameNumberfreshSubject_1;if (!( tomMatch259NameNumber_freshVar_0.isEmptyconcConstraint() )) {if ( ( tomMatch259NameNumber_freshVar_0.getHeadconcConstraint()  instanceof tom.engine.adt.tomconstraint.types.constraint.AssignTo) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch259NameNumber_freshVar_2=  tomMatch259NameNumber_freshVar_0.getHeadconcConstraint() .getVariable() ;if ( (tomMatch259NameNumber_freshVar_2 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch259NameNumber_freshVar_3= tomMatch259NameNumber_freshVar_2.getAstType() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch259NameNumber_freshVar_1= tomMatch259NameNumber_freshVar_0.getTailconcConstraint() ;if ( tomMatch259NameNumber_freshVar_1.isEmptyconcConstraint() ) {if ( true ) {

                    if(symbolTable().isCharType(TomBase.getTomType(tomMatch259NameNumber_freshVar_3))) {
                      newConstraintList =  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( tom.engine.adt.tomconstraint.types.constraint.AssignTo.make(tomMatch259NameNumber_freshVar_2.setAstType(symbolTable().getStringType())) , tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) ;
                    }
                  }}}}}}}}}}}}}


                TomTerm newSublist =  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make( tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ,  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(tomSymbol.getAstName(), tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) , newArgs, newConstraintList) ;
                Slot newSlot =  tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tom_slotName, newSublist) ;
                return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(newSlot,tom_append_list_concSlot(tail, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
              } else {
                throw new TomRuntimeException("typeChar: strange char: " + tom_tomName);
              }
            }
          }}}}}}}}}}}}}}}}}}}}}}}}}

        return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(head,tom_append_list_concSlot(tail, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
      }
    }

    /*
     * replaces 'TermAppl' by its 'RecordAppl' form
     * when no slotName exits, the position becomes the slotName
     */
    protected TomTerm typeTermAppl(OptionList option, TomNameList nameList, TomList args, ConstraintList constraints) {
      TomName headName = nameList.getHeadconcTomName();
      if(headName instanceof AntiName) {
        headName = ((AntiName)headName).getName();
      }
      String opName = headName.getString();
      TomSymbol tomSymbol = getSymbolFromName(opName);


      //System.out.println("typeTermAppl: " + tomSymbol);
      //System.out.println("  nameList = " + nameList);

      if(tomSymbol==null && args.isEmptyconcTomTerm()) {
        return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(option, nameList,  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() , constraints) ;
      }

      /*
         if(tomSymbol==null && !args.isEmpty() && !opName.equals("")) {
         System.out.println("typeTermAppl: " + tomSymbol);
         System.out.println("  opName = " + opName);
         System.out.println("  args = " + args);
         throw new TomRuntimeException("typeTermAppl: unknown symbol");
         }
       */

      SlotList slotList =  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ;
      Strategy typeStrategy = tom_make_TopDownIdStopOnSuccess(tom_make_typeTermApplTomSyntax(this));
      if(opName.equals("") || tomSymbol==null || TomBase.isListOperator(tomSymbol) || TomBase.isArrayOperator(tomSymbol)) {
        for(TomTerm arg:(concTomTerm)args) {
          try {
            TomTerm subterm = (TomTerm) typeStrategy.visitLight(arg);
            TomName slotName =  tom.engine.adt.tomname.types.tomname.EmptyName.make() ;
            /*
             * we cannot optimize when subterm.isUnamedVariable
             * since it can be constrained
             */	  
            slotList = tom_append_list_concSlot(slotList, tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(slotName, subterm) , tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) );
          } catch(tom.library.sl.VisitFailure e) {
            System.out.println("should not be there");
          }
        }
      } else {
        PairNameDeclList pairNameDeclList = tomSymbol.getPairNameDeclList();
        for(TomTerm arg:(concTomTerm)args) {
          try{
            TomTerm subterm = (TomTerm) typeStrategy.visitLight(arg);
            TomName slotName = pairNameDeclList.getHeadconcPairNameDecl().getSlotName();
            /*
             * we cannot optimize when subterm.isUnamedVariable
             * since it can be constrained
             */	  
            slotList = tom_append_list_concSlot(slotList, tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(slotName, subterm) , tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) );
            pairNameDeclList = pairNameDeclList.getTailconcPairNameDecl();
          } catch(tom.library.sl.VisitFailure e) {
            System.out.println("should not be there");
          }
        }
      }

      return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(option, nameList, slotList, constraints) ;
    }

    /*
     * transform a BackQuoteAppl into its compiled form
     */
    private static class typeBackQuoteAppl extends tom.library.sl.BasicStrategy {private  Typer  typer; public typeBackQuoteAppl( Typer  typer) { super(( new tom.library.sl.Identity() ));this.typer=typer;}public  Typer  gettyper() { return typer;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch260NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg);if ( (tomMatch260NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.BackQuoteAppl) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch260NameNumber_freshVar_0= tomMatch260NameNumberfreshSubject_1.getOption() ;{  tom.engine.adt.tomname.types.TomName  tomMatch260NameNumber_freshVar_1= tomMatch260NameNumberfreshSubject_1.getAstName() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch260NameNumber_freshVar_2= tomMatch260NameNumberfreshSubject_1.getArgs() ;{  tom.engine.adt.tomoption.types.OptionList  tom_optionList=tomMatch260NameNumber_freshVar_0;if ( (tomMatch260NameNumber_freshVar_1 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch260NameNumber_freshVar_3= tomMatch260NameNumber_freshVar_1.getString() ;{  tom.engine.adt.tomname.types.TomName  tom_name=tomMatch260NameNumber_freshVar_1;if ( true ) {


          TomSymbol tomSymbol = typer.getSymbolFromName(tomMatch260NameNumber_freshVar_3);
          TomList args  = (TomList) tom_make_TopDownIdStopOnSuccess(tom_make_typeBackQuoteAppl(typer)).visitLight(tomMatch260NameNumber_freshVar_2);

          //System.out.println("BackQuoteTerm: " + `tomName);
          //System.out.println("tomSymbol: " + tomSymbol);
          if(TomBase.hasConstant(tom_optionList)) {
            return  tom.engine.adt.tomterm.types.tomterm.BuildConstant.make(tom_name) ;
          } else if(tomSymbol != null) {
            if(TomBase.isListOperator(tomSymbol)) {
              return ASTFactory.buildList(tom_name,args,typer.symbolTable());
            } else if(TomBase.isArrayOperator(tomSymbol)) {
              return ASTFactory.buildArray(tom_name,args,typer.symbolTable());
            } else if(TomBase.isDefinedSymbol(tomSymbol)) {
              return  tom.engine.adt.tomterm.types.tomterm.FunctionCall.make(tom_name, TomBase.getSymbolCodomain(tomSymbol), args) ;
            } else {
              String moduleName = TomBase.getModuleName(tom_optionList);
              if(moduleName==null) {
                moduleName = TomBase.DEFAULT_MODULE_NAME;
              }
              return  tom.engine.adt.tomterm.types.tomterm.BuildTerm.make(tom_name, args, moduleName) ;
            }
          } else {
            return  tom.engine.adt.tomterm.types.tomterm.FunctionCall.make(tom_name,  tom.engine.adt.tomtype.types.tomtype.EmptyType.make() , args) ;
          }
        }}}}}}}}}}}}return _visit_TomTerm(tom__arg,introspector); }public  tom.engine.adt.tomterm.types.TomTerm  _visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomterm.types.TomTerm )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomterm.types.TomTerm )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomterm.types.TomTerm) ) {return visit_TomTerm((( tom.engine.adt.tomterm.types.TomTerm )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_typeBackQuoteAppl( Typer  t0) { return new typeBackQuoteAppl(t0); }



    private static TomList sortAttributeList(TomList attrList) {
      {if ( (attrList instanceof tom.engine.adt.tomterm.types.TomList) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomList )attrList);if ( ((tomMatch261NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch261NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumber_freshVar_0=tomMatch261NameNumberfreshSubject_1;if ( tomMatch261NameNumber_freshVar_0.isEmptyconcTomTerm() ) {if ( true ) {
 return attrList; }}}}}}if ( (attrList instanceof tom.engine.adt.tomterm.types.TomList) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomList )attrList);if ( ((tomMatch261NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch261NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumber_freshVar_1=tomMatch261NameNumberfreshSubject_1;{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumber_begin_3=tomMatch261NameNumber_freshVar_1;{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumber_end_4=tomMatch261NameNumber_freshVar_1;do {{{  tom.engine.adt.tomterm.types.TomList  tom_X1=tom_get_slice_concTomTerm(tomMatch261NameNumber_begin_3,tomMatch261NameNumber_end_4, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() );{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumber_freshVar_2=tomMatch261NameNumber_end_4;if (!( tomMatch261NameNumber_freshVar_2.isEmptyconcTomTerm() )) {{  tom.engine.adt.tomterm.types.TomTerm  tom_e1= tomMatch261NameNumber_freshVar_2.getHeadconcTomTerm() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumber_freshVar_5= tomMatch261NameNumber_freshVar_2.getTailconcTomTerm() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumber_begin_7=tomMatch261NameNumber_freshVar_5;{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumber_end_8=tomMatch261NameNumber_freshVar_5;do {{{  tom.engine.adt.tomterm.types.TomList  tom_X2=tom_get_slice_concTomTerm(tomMatch261NameNumber_begin_7,tomMatch261NameNumber_end_8, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() );{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumber_freshVar_6=tomMatch261NameNumber_end_8;if (!( tomMatch261NameNumber_freshVar_6.isEmptyconcTomTerm() )) {{  tom.engine.adt.tomterm.types.TomTerm  tom_e2= tomMatch261NameNumber_freshVar_6.getHeadconcTomTerm() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch261NameNumber_freshVar_9= tomMatch261NameNumber_freshVar_6.getTailconcTomTerm() ;{  tom.engine.adt.tomterm.types.TomList  tom_X3=tomMatch261NameNumber_freshVar_9;if ( true ) {{if ( (tom_e1 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_e1);if ( (tomMatch262NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_0= tomMatch262NameNumberfreshSubject_1.getArgs() ;if ( ((tomMatch262NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch262NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_2=tomMatch262NameNumber_freshVar_0;if (!( tomMatch262NameNumber_freshVar_2.isEmptyconcTomTerm() )) {if ( ( tomMatch262NameNumber_freshVar_2.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_8=  tomMatch262NameNumber_freshVar_2.getHeadconcTomTerm() .getNameList() ;if ( ((tomMatch262NameNumber_freshVar_8 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_8 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_10=tomMatch262NameNumber_freshVar_8;if (!( tomMatch262NameNumber_freshVar_10.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_10.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_14=  tomMatch262NameNumber_freshVar_10.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_11= tomMatch262NameNumber_freshVar_10.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_11.isEmptyconcTomName() ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_3= tomMatch262NameNumber_freshVar_2.getTailconcTomTerm() ;if ( (tom_e2 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_e2);if ( (tomMatch262NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_1= tomMatch262NameNumberfreshSubject_2.getArgs() ;if ( ((tomMatch262NameNumber_freshVar_1 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch262NameNumber_freshVar_1 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_5=tomMatch262NameNumber_freshVar_1;if (!( tomMatch262NameNumber_freshVar_5.isEmptyconcTomTerm() )) {if ( ( tomMatch262NameNumber_freshVar_5.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_9=  tomMatch262NameNumber_freshVar_5.getHeadconcTomTerm() .getNameList() ;if ( ((tomMatch262NameNumber_freshVar_9 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_9 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_12=tomMatch262NameNumber_freshVar_9;if (!( tomMatch262NameNumber_freshVar_12.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_12.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_15=  tomMatch262NameNumber_freshVar_12.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_13= tomMatch262NameNumber_freshVar_12.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_13.isEmptyconcTomName() ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_6= tomMatch262NameNumber_freshVar_5.getTailconcTomTerm() ;if ( true ) {




                if(tomMatch262NameNumber_freshVar_14.compareTo(tomMatch262NameNumber_freshVar_15) > 0) {
                  return sortAttributeList(tom_append_list_concTomTerm(tom_X1, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e2,tom_append_list_concTomTerm(tom_X2, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e1,tom_append_list_concTomTerm(tom_X3, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) )) ));
                }
              }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}if ( (tom_e1 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_e1);if ( (tomMatch262NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_16= tomMatch262NameNumberfreshSubject_1.getArgs() ;if ( ((tomMatch262NameNumber_freshVar_16 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch262NameNumber_freshVar_16 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_18=tomMatch262NameNumber_freshVar_16;if (!( tomMatch262NameNumber_freshVar_18.isEmptyconcTomTerm() )) {if ( ( tomMatch262NameNumber_freshVar_18.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_24=  tomMatch262NameNumber_freshVar_18.getHeadconcTomTerm() .getNameList() ;if ( ((tomMatch262NameNumber_freshVar_24 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_24 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_26=tomMatch262NameNumber_freshVar_24;if (!( tomMatch262NameNumber_freshVar_26.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_26.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_30=  tomMatch262NameNumber_freshVar_26.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_27= tomMatch262NameNumber_freshVar_26.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_27.isEmptyconcTomName() ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_19= tomMatch262NameNumber_freshVar_18.getTailconcTomTerm() ;if ( (tom_e2 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_e2);if ( (tomMatch262NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_17= tomMatch262NameNumberfreshSubject_2.getArgs() ;if ( ((tomMatch262NameNumber_freshVar_17 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch262NameNumber_freshVar_17 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_21=tomMatch262NameNumber_freshVar_17;if (!( tomMatch262NameNumber_freshVar_21.isEmptyconcTomTerm() )) {if ( ( tomMatch262NameNumber_freshVar_21.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_25=  tomMatch262NameNumber_freshVar_21.getHeadconcTomTerm() .getNameList() ;if ( ((tomMatch262NameNumber_freshVar_25 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_25 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_28=tomMatch262NameNumber_freshVar_25;if (!( tomMatch262NameNumber_freshVar_28.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_28.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_31=  tomMatch262NameNumber_freshVar_28.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_29= tomMatch262NameNumber_freshVar_28.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_29.isEmptyconcTomName() ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_22= tomMatch262NameNumber_freshVar_21.getTailconcTomTerm() ;if ( true ) {



                if(tomMatch262NameNumber_freshVar_30.compareTo(tomMatch262NameNumber_freshVar_31) > 0) {
                  return sortAttributeList(tom_append_list_concTomTerm(tom_X1, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e2,tom_append_list_concTomTerm(tom_X2, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e1,tom_append_list_concTomTerm(tom_X3, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) )) ));
                }
              }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}if ( (tom_e1 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_e1);if ( (tomMatch262NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_32= tomMatch262NameNumberfreshSubject_1.getSlots() ;if ( ((tomMatch262NameNumber_freshVar_32 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch262NameNumber_freshVar_32 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_34=tomMatch262NameNumber_freshVar_32;if (!( tomMatch262NameNumber_freshVar_34.isEmptyconcSlot() )) {if ( ( tomMatch262NameNumber_freshVar_34.getHeadconcSlot()  instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch262NameNumber_freshVar_40=  tomMatch262NameNumber_freshVar_34.getHeadconcSlot() .getSlotName() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumber_freshVar_41=  tomMatch262NameNumber_freshVar_34.getHeadconcSlot() .getAppl() ;if ( (tomMatch262NameNumber_freshVar_41 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_42= tomMatch262NameNumber_freshVar_41.getNameList() ;if ( ((tomMatch262NameNumber_freshVar_42 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_42 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_46=tomMatch262NameNumber_freshVar_42;if (!( tomMatch262NameNumber_freshVar_46.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_46.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_51=  tomMatch262NameNumber_freshVar_46.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_47= tomMatch262NameNumber_freshVar_46.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_47.isEmptyconcTomName() ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_35= tomMatch262NameNumber_freshVar_34.getTailconcSlot() ;if ( (tom_e2 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_e2);if ( (tomMatch262NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_33= tomMatch262NameNumberfreshSubject_2.getSlots() ;if ( ((tomMatch262NameNumber_freshVar_33 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch262NameNumber_freshVar_33 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_37=tomMatch262NameNumber_freshVar_33;if (!( tomMatch262NameNumber_freshVar_37.isEmptyconcSlot() )) {if ( ( tomMatch262NameNumber_freshVar_37.getHeadconcSlot()  instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch262NameNumber_freshVar_43=  tomMatch262NameNumber_freshVar_37.getHeadconcSlot() .getSlotName() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumber_freshVar_44=  tomMatch262NameNumber_freshVar_37.getHeadconcSlot() .getAppl() ;{  tom.engine.adt.tomname.types.TomName  tomMatch262NameNumber_freshVar_50=tomMatch262NameNumber_freshVar_43;if ( (tomMatch262NameNumber_freshVar_50==tomMatch262NameNumber_freshVar_40) ) {if ( (tomMatch262NameNumber_freshVar_44 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_45= tomMatch262NameNumber_freshVar_44.getNameList() ;if ( ((tomMatch262NameNumber_freshVar_45 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_45 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_48=tomMatch262NameNumber_freshVar_45;if (!( tomMatch262NameNumber_freshVar_48.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_48.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_52=  tomMatch262NameNumber_freshVar_48.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_49= tomMatch262NameNumber_freshVar_48.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_49.isEmptyconcTomName() ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_38= tomMatch262NameNumber_freshVar_37.getTailconcSlot() ;if ( true ) {



                if(tomMatch262NameNumber_freshVar_51.compareTo(tomMatch262NameNumber_freshVar_52) > 0) {
                  return sortAttributeList(tom_append_list_concTomTerm(tom_X1, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e2,tom_append_list_concTomTerm(tom_X2, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e1,tom_append_list_concTomTerm(tom_X3, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) )) ));
                }
              }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}if ( (tom_e1 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_e1);if ( (tomMatch262NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_53= tomMatch262NameNumberfreshSubject_1.getSlots() ;if ( ((tomMatch262NameNumber_freshVar_53 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch262NameNumber_freshVar_53 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_55=tomMatch262NameNumber_freshVar_53;if (!( tomMatch262NameNumber_freshVar_55.isEmptyconcSlot() )) {if ( ( tomMatch262NameNumber_freshVar_55.getHeadconcSlot()  instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch262NameNumber_freshVar_61=  tomMatch262NameNumber_freshVar_55.getHeadconcSlot() .getSlotName() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumber_freshVar_62=  tomMatch262NameNumber_freshVar_55.getHeadconcSlot() .getAppl() ;if ( (tomMatch262NameNumber_freshVar_62 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_63= tomMatch262NameNumber_freshVar_62.getNameList() ;if ( ((tomMatch262NameNumber_freshVar_63 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_63 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_67=tomMatch262NameNumber_freshVar_63;if (!( tomMatch262NameNumber_freshVar_67.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_67.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_72=  tomMatch262NameNumber_freshVar_67.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_68= tomMatch262NameNumber_freshVar_67.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_68.isEmptyconcTomName() ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_56= tomMatch262NameNumber_freshVar_55.getTailconcSlot() ;if ( (tom_e2 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_e2);if ( (tomMatch262NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_54= tomMatch262NameNumberfreshSubject_2.getSlots() ;if ( ((tomMatch262NameNumber_freshVar_54 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch262NameNumber_freshVar_54 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_58=tomMatch262NameNumber_freshVar_54;if (!( tomMatch262NameNumber_freshVar_58.isEmptyconcSlot() )) {if ( ( tomMatch262NameNumber_freshVar_58.getHeadconcSlot()  instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch262NameNumber_freshVar_64=  tomMatch262NameNumber_freshVar_58.getHeadconcSlot() .getSlotName() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumber_freshVar_65=  tomMatch262NameNumber_freshVar_58.getHeadconcSlot() .getAppl() ;{  tom.engine.adt.tomname.types.TomName  tomMatch262NameNumber_freshVar_71=tomMatch262NameNumber_freshVar_64;if ( (tomMatch262NameNumber_freshVar_71==tomMatch262NameNumber_freshVar_61) ) {if ( (tomMatch262NameNumber_freshVar_65 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_66= tomMatch262NameNumber_freshVar_65.getNameList() ;if ( ((tomMatch262NameNumber_freshVar_66 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_66 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_69=tomMatch262NameNumber_freshVar_66;if (!( tomMatch262NameNumber_freshVar_69.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_69.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_73=  tomMatch262NameNumber_freshVar_69.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_70= tomMatch262NameNumber_freshVar_69.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_70.isEmptyconcTomName() ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch262NameNumber_freshVar_59= tomMatch262NameNumber_freshVar_58.getTailconcSlot() ;if ( true ) {



                if(tomMatch262NameNumber_freshVar_72.compareTo(tomMatch262NameNumber_freshVar_73) > 0) {
                  return sortAttributeList(tom_append_list_concTomTerm(tom_X1, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e2,tom_append_list_concTomTerm(tom_X2, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e1,tom_append_list_concTomTerm(tom_X3, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) )) ));
                }
              }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}if ( (tom_e1 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_e1);if ( (tomMatch262NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.BackQuoteAppl) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_74= tomMatch262NameNumberfreshSubject_1.getArgs() ;if ( ((tomMatch262NameNumber_freshVar_74 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch262NameNumber_freshVar_74 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_76=tomMatch262NameNumber_freshVar_74;if (!( tomMatch262NameNumber_freshVar_76.isEmptyconcTomTerm() )) {if ( ( tomMatch262NameNumber_freshVar_76.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_82=  tomMatch262NameNumber_freshVar_76.getHeadconcTomTerm() .getNameList() ;if ( ((tomMatch262NameNumber_freshVar_82 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_82 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_84=tomMatch262NameNumber_freshVar_82;if (!( tomMatch262NameNumber_freshVar_84.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_84.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_88=  tomMatch262NameNumber_freshVar_84.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_85= tomMatch262NameNumber_freshVar_84.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_85.isEmptyconcTomName() ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_77= tomMatch262NameNumber_freshVar_76.getTailconcTomTerm() ;if ( (tom_e2 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_e2);if ( (tomMatch262NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.BackQuoteAppl) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_75= tomMatch262NameNumberfreshSubject_2.getArgs() ;if ( ((tomMatch262NameNumber_freshVar_75 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch262NameNumber_freshVar_75 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_79=tomMatch262NameNumber_freshVar_75;if (!( tomMatch262NameNumber_freshVar_79.isEmptyconcTomTerm() )) {if ( ( tomMatch262NameNumber_freshVar_79.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_83=  tomMatch262NameNumber_freshVar_79.getHeadconcTomTerm() .getNameList() ;if ( ((tomMatch262NameNumber_freshVar_83 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_83 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_86=tomMatch262NameNumber_freshVar_83;if (!( tomMatch262NameNumber_freshVar_86.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_86.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_89=  tomMatch262NameNumber_freshVar_86.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_87= tomMatch262NameNumber_freshVar_86.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_87.isEmptyconcTomName() ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_80= tomMatch262NameNumber_freshVar_79.getTailconcTomTerm() ;if ( true ) {



                if(tomMatch262NameNumber_freshVar_88.compareTo(tomMatch262NameNumber_freshVar_89) > 0) {
                  return sortAttributeList(tom_append_list_concTomTerm(tom_X1, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e2,tom_append_list_concTomTerm(tom_X2, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e1,tom_append_list_concTomTerm(tom_X3, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) )) ));
                }
              }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}if ( (tom_e1 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_e1);if ( (tomMatch262NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.BackQuoteAppl) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_90= tomMatch262NameNumberfreshSubject_1.getArgs() ;if ( ((tomMatch262NameNumber_freshVar_90 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch262NameNumber_freshVar_90 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_92=tomMatch262NameNumber_freshVar_90;if (!( tomMatch262NameNumber_freshVar_92.isEmptyconcTomTerm() )) {if ( ( tomMatch262NameNumber_freshVar_92.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_98=  tomMatch262NameNumber_freshVar_92.getHeadconcTomTerm() .getNameList() ;if ( ((tomMatch262NameNumber_freshVar_98 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_98 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_100=tomMatch262NameNumber_freshVar_98;if (!( tomMatch262NameNumber_freshVar_100.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_100.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_104=  tomMatch262NameNumber_freshVar_100.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_101= tomMatch262NameNumber_freshVar_100.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_101.isEmptyconcTomName() ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_93= tomMatch262NameNumber_freshVar_92.getTailconcTomTerm() ;if ( (tom_e2 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_e2);if ( (tomMatch262NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.BackQuoteAppl) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_91= tomMatch262NameNumberfreshSubject_2.getArgs() ;if ( ((tomMatch262NameNumber_freshVar_91 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch262NameNumber_freshVar_91 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_95=tomMatch262NameNumber_freshVar_91;if (!( tomMatch262NameNumber_freshVar_95.isEmptyconcTomTerm() )) {if ( ( tomMatch262NameNumber_freshVar_95.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_99=  tomMatch262NameNumber_freshVar_95.getHeadconcTomTerm() .getNameList() ;if ( ((tomMatch262NameNumber_freshVar_99 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch262NameNumber_freshVar_99 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_102=tomMatch262NameNumber_freshVar_99;if (!( tomMatch262NameNumber_freshVar_102.isEmptyconcTomName() )) {if ( ( tomMatch262NameNumber_freshVar_102.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_105=  tomMatch262NameNumber_freshVar_102.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch262NameNumber_freshVar_103= tomMatch262NameNumber_freshVar_102.getTailconcTomName() ;if ( tomMatch262NameNumber_freshVar_103.isEmptyconcTomName() ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_96= tomMatch262NameNumber_freshVar_95.getTailconcTomTerm() ;if ( true ) {



                if(tomMatch262NameNumber_freshVar_104.compareTo(tomMatch262NameNumber_freshVar_105) > 0) {
                  return sortAttributeList(tom_append_list_concTomTerm(tom_X1, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e2,tom_append_list_concTomTerm(tom_X2, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e1,tom_append_list_concTomTerm(tom_X3, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) )) ));
                }
              }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}if ( (tom_e1 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_e1);if ( (tomMatch262NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.BackQuoteAppl) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_106= tomMatch262NameNumberfreshSubject_1.getArgs() ;if ( ((tomMatch262NameNumber_freshVar_106 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch262NameNumber_freshVar_106 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_108=tomMatch262NameNumber_freshVar_106;if (!( tomMatch262NameNumber_freshVar_108.isEmptyconcTomTerm() )) {if ( ( tomMatch262NameNumber_freshVar_108.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.BackQuoteAppl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch262NameNumber_freshVar_114=  tomMatch262NameNumber_freshVar_108.getHeadconcTomTerm() .getAstName() ;if ( (tomMatch262NameNumber_freshVar_114 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_115= tomMatch262NameNumber_freshVar_114.getString() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_109= tomMatch262NameNumber_freshVar_108.getTailconcTomTerm() ;if ( (tom_e2 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch262NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_e2);if ( (tomMatch262NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.BackQuoteAppl) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_107= tomMatch262NameNumberfreshSubject_2.getArgs() ;if ( ((tomMatch262NameNumber_freshVar_107 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch262NameNumber_freshVar_107 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_111=tomMatch262NameNumber_freshVar_107;if (!( tomMatch262NameNumber_freshVar_111.isEmptyconcTomTerm() )) {if ( ( tomMatch262NameNumber_freshVar_111.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.BackQuoteAppl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch262NameNumber_freshVar_116=  tomMatch262NameNumber_freshVar_111.getHeadconcTomTerm() .getAstName() ;if ( (tomMatch262NameNumber_freshVar_116 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch262NameNumber_freshVar_117= tomMatch262NameNumber_freshVar_116.getString() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch262NameNumber_freshVar_112= tomMatch262NameNumber_freshVar_111.getTailconcTomTerm() ;if ( true ) {



                if(tomMatch262NameNumber_freshVar_115.compareTo(tomMatch262NameNumber_freshVar_117) > 0) {
                  return sortAttributeList(tom_append_list_concTomTerm(tom_X1, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e2,tom_append_list_concTomTerm(tom_X2, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tom_e1,tom_append_list_concTomTerm(tom_X3, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) )) ));
                }
              }}}}}}}}}}}}}}}}}}}}}}}}}}

        }}}}}}}if ( tomMatch261NameNumber_end_8.isEmptyconcTomTerm() ) {tomMatch261NameNumber_end_8=tomMatch261NameNumber_begin_7;} else {tomMatch261NameNumber_end_8= tomMatch261NameNumber_end_8.getTailconcTomTerm() ;}}} while(!( (tomMatch261NameNumber_end_8==tomMatch261NameNumber_begin_7) ));}}}}}}}if ( tomMatch261NameNumber_end_4.isEmptyconcTomTerm() ) {tomMatch261NameNumber_end_4=tomMatch261NameNumber_begin_3;} else {tomMatch261NameNumber_end_4= tomMatch261NameNumber_end_4.getTailconcTomTerm() ;}}} while(!( (tomMatch261NameNumber_end_4==tomMatch261NameNumber_begin_3) ));}}}}}}}

      return attrList;
    }

    private static OptionList convertOriginTracking(String name,OptionList optionList) {
      Option originTracking = TomBase.findOriginTracking(optionList);
      {if ( (originTracking instanceof tom.engine.adt.tomoption.types.Option) ) {{  tom.engine.adt.tomoption.types.Option  tomMatch263NameNumberfreshSubject_1=(( tom.engine.adt.tomoption.types.Option )originTracking);if ( (tomMatch263NameNumberfreshSubject_1 instanceof tom.engine.adt.tomoption.types.option.OriginTracking) ) {{  int  tomMatch263NameNumber_freshVar_0= tomMatch263NameNumberfreshSubject_1.getLine() ;{  String  tomMatch263NameNumber_freshVar_1= tomMatch263NameNumberfreshSubject_1.getFileName() ;if ( true ) {

          return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( tom.engine.adt.tomoption.types.option.OriginTracking.make( tom.engine.adt.tomname.types.tomname.Name.make(name) , tomMatch263NameNumber_freshVar_0, tomMatch263NameNumber_freshVar_1) , tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ) ;
        }}}}}}}

      System.out.println("Warning: no OriginTracking information");
      return  tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ;
    }

    protected TomTerm typeXMLAppl(OptionList optionList, TomNameList nameList,
        TomList attrList, TomList childList, ConstraintList constraints) {
      boolean implicitAttribute = TomBase.hasImplicitXMLAttribut(optionList);
      boolean implicitChild     = TomBase.hasImplicitXMLChild(optionList);

      TomList newAttrList  =  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ;
      TomList newChildList =  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ;
      TomTerm star =  tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar.make(convertOriginTracking("_*",optionList),  tom.engine.adt.tomtype.types.tomtype.TomTypeAlone.make("unknown type") ,  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) ;
      if(implicitAttribute) { newAttrList  =  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(star,tom_append_list_concTomTerm(newAttrList, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) ; }
      if(implicitChild)     { newChildList =  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(star,tom_append_list_concTomTerm(newChildList, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) ; }

      /*
       * the list of attributes should not be typed before the sort
       * the sortAttribute is extended to compare RecordAppl
       */

      //System.out.println("attrList = " + attrList);
      attrList = sortAttributeList(attrList);
      //System.out.println("sorted attrList = " + attrList);

      /*
       * Attributes: go from implicit notation to explicit notation
       */
      Strategy typeStrategy = tom_make_TopDownIdStopOnSuccess(tom_make_typeTermApplTomSyntax(this));
      for(TomTerm attr:(concTomTerm)attrList) {
        try {
          TomTerm newPattern = (TomTerm) typeStrategy.visitLight(attr);
          newAttrList =  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(newPattern,tom_append_list_concTomTerm(newAttrList, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) ;
          if(implicitAttribute) {
            newAttrList =  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(star,tom_append_list_concTomTerm(newAttrList, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) ;
          }
        } catch(tom.library.sl.VisitFailure e) {
          System.out.println("should not be there");
        }
      }
      newAttrList = newAttrList.reverse();

      /*
       * Childs: go from implicit notation to explicit notation
       */
      for(TomTerm child:(concTomTerm)childList) {
        try {
          TomTerm newPattern = (TomTerm) typeStrategy.visitLight(child);
          newChildList =  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(newPattern,tom_append_list_concTomTerm(newChildList, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) ;
          if(implicitChild) {
            if(newPattern.isVariableStar()) {
              // remove the previously inserted pattern
              newChildList = newChildList.getTailconcTomTerm();
              if(newChildList.getHeadconcTomTerm().isUnamedVariableStar()) {
                // remove the previously inserted star
                newChildList = newChildList.getTailconcTomTerm();
              }
              // re-insert the pattern
              newChildList =  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(newPattern,tom_append_list_concTomTerm(newChildList, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) ;
            } else {
              newChildList =  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(star,tom_append_list_concTomTerm(newChildList, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() )) ;
            }
          }
        } catch(tom.library.sl.VisitFailure e) {
          System.out.println("should not be there");
        }
      }
      newChildList = newChildList.reverse();

      /*
       * encode the name and put it into the table of symbols
       */
      TomNameList newNameList =  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ;
matchBlock: 
      {
        {if ( (nameList instanceof tom.engine.adt.tomname.types.TomNameList) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch264NameNumberfreshSubject_1=(( tom.engine.adt.tomname.types.TomNameList )nameList);if ( ((tomMatch264NameNumberfreshSubject_1 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch264NameNumberfreshSubject_1 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch264NameNumber_freshVar_0=tomMatch264NameNumberfreshSubject_1;if (!( tomMatch264NameNumber_freshVar_0.isEmptyconcTomName() )) {if ( ( tomMatch264NameNumber_freshVar_0.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch264NameNumber_freshVar_2=  tomMatch264NameNumber_freshVar_0.getHeadconcTomName() .getString() ;if ( "_".equals(tomMatch264NameNumber_freshVar_2) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch264NameNumber_freshVar_1= tomMatch264NameNumber_freshVar_0.getTailconcTomName() ;if ( tomMatch264NameNumber_freshVar_1.isEmptyconcTomName() ) {if ( true ) {

            break matchBlock;
          }}}}}}}}}}}if ( (nameList instanceof tom.engine.adt.tomname.types.TomNameList) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch264NameNumberfreshSubject_1=(( tom.engine.adt.tomname.types.TomNameList )nameList);if ( ((tomMatch264NameNumberfreshSubject_1 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch264NameNumberfreshSubject_1 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch264NameNumber_freshVar_3=tomMatch264NameNumberfreshSubject_1;{  tom.engine.adt.tomname.types.TomNameList  tomMatch264NameNumber_begin_5=tomMatch264NameNumber_freshVar_3;{  tom.engine.adt.tomname.types.TomNameList  tomMatch264NameNumber_end_6=tomMatch264NameNumber_freshVar_3;do {{{  tom.engine.adt.tomname.types.TomNameList  tomMatch264NameNumber_freshVar_4=tomMatch264NameNumber_end_6;if (!( tomMatch264NameNumber_freshVar_4.isEmptyconcTomName() )) {if ( ( tomMatch264NameNumber_freshVar_4.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch264NameNumber_freshVar_9=  tomMatch264NameNumber_freshVar_4.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch264NameNumber_freshVar_7= tomMatch264NameNumber_freshVar_4.getTailconcTomName() ;if ( true ) {


            newNameList = tom_append_list_concTomName(newNameList, tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( tom.engine.adt.tomname.types.tomname.Name.make(ASTFactory.encodeXMLString(symbolTable(),tomMatch264NameNumber_freshVar_9)) , tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) );
          }}}}}}if ( tomMatch264NameNumber_end_6.isEmptyconcTomName() ) {tomMatch264NameNumber_end_6=tomMatch264NameNumber_begin_5;} else {tomMatch264NameNumber_end_6= tomMatch264NameNumber_end_6.getTailconcTomName() ;}}} while(!( (tomMatch264NameNumber_end_6==tomMatch264NameNumber_begin_5) ));}}}}}}}

      }

      /*
       * a single "_" is converted into an UnamedVariable to match
       * any XML node
       */
      TomTerm xmlHead;

      if(newNameList.isEmptyconcTomName()) {
        xmlHead =  tom.engine.adt.tomterm.types.tomterm.UnamedVariable.make( tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ,  tom.engine.adt.tomtype.types.tomtype.TomTypeAlone.make("unknown type") ,  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) ;
      } else {
        xmlHead =  tom.engine.adt.tomterm.types.tomterm.TermAppl.make(convertOriginTracking(newNameList.getHeadconcTomName().getString(),optionList), newNameList,  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ,  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) ;
      }
      try {
        SlotList newArgs =  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make( tom.engine.adt.tomname.types.tomname.Name.make(Constants.SLOT_NAME) , (TomTerm) typeStrategy.visitLight(xmlHead)) , tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make( tom.engine.adt.tomname.types.tomname.Name.make(Constants.SLOT_ATTRLIST) , (TomTerm) typeStrategy.visitLight( tom.engine.adt.tomterm.types.tomterm.TermAppl.make(convertOriginTracking("CONC_TNODE",optionList),  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( tom.engine.adt.tomname.types.tomname.Name.make(Constants.CONC_TNODE) , tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) , newAttrList,  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) )) , tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make( tom.engine.adt.tomname.types.tomname.Name.make(Constants.SLOT_CHILDLIST) , (TomTerm) typeStrategy.visitLight( tom.engine.adt.tomterm.types.tomterm.TermAppl.make(convertOriginTracking("CONC_TNODE",optionList),  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( tom.engine.adt.tomname.types.tomname.Name.make(Constants.CONC_TNODE) , tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) , newChildList,  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) )) , tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) ) ) 





;

        TomTerm result =  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(optionList,  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( tom.engine.adt.tomname.types.tomname.Name.make(Constants.ELEMENT_NODE) , tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) , newArgs, constraints) ;

        //System.out.println("typeXML out:\n" + result);
        return result;
      } catch(tom.library.sl.VisitFailure e) {
        //must never be executed
        return star;
      }
    }
  }

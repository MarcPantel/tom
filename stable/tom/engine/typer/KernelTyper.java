/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2008, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine.typer;

import java.util.*;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.engine.TomBase;
import tom.engine.TomMessage;
import tom.engine.exception.TomRuntimeException;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomconstraint.types.constraint.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.tools.SymbolTable;
import tom.engine.tools.ASTFactory;

import tom.library.sl.*;

public class KernelTyper {
  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */     private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Sequence) )) {       if(( ((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Sequence(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end == null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin):new tom.library.sl.Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)) );   }      private static   tom.library.sl.Strategy  tom_append_list_Choice( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Choice) )) {       if(( ((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )) ==null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Choice(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Choice( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end ==null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin):new tom.library.sl.Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)) );   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_Try( tom.library.sl.Strategy  v) { return ( ( (( (( null )==null)?( new tom.library.sl.Identity() ):new tom.library.sl.Choice(( new tom.library.sl.Identity() ),( null )) )==null)?v:new tom.library.sl.Choice(v,( (( null )==null)?( new tom.library.sl.Identity() ):new tom.library.sl.Choice(( new tom.library.sl.Identity() ),( null )) )) ) );}private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) );}private static  tom.library.sl.Strategy  tom_make_TopDownCollect( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),tom_make_Try(( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )) ))) ) );}private static  tom.library.sl.Strategy  tom_make_TopDownStopOnSuccess( tom.library.sl.Strategy  v) { return  (( new tom.library.sl.Mu(( new tom.library.sl.MuVar("x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ):new tom.library.sl.Choice(( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ),( null )) )==null)?v:new tom.library.sl.Choice(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ):new tom.library.sl.Choice(( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ),( null )) )) )) )) ;}   /* Generated by TOM (version 2.6alpha): Do not edit this file */ 







  private SymbolTable symbolTable;

  public KernelTyper() {
    super();
  }

  public void setSymbolTable(SymbolTable symbolTable) {
    this.symbolTable = symbolTable;
  }

  private SymbolTable getSymbolTable() {
    return symbolTable;
  }

  protected TomSymbol getSymbolFromName(String tomName) {
    return TomBase.getSymbolFromName(tomName, getSymbolTable());
  }

  protected TomSymbol getSymbolFromType(TomType type) {
    {{ Object tomMatch235NameNumber_freshVar_0=type;if ( (tomMatch235NameNumber_freshVar_0 instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch235NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )tomMatch235NameNumber_freshVar_0);{  tom.engine.adt.tomtype.types.TomType  tomMatch235NameNumber_freshVar_3=tomMatch235NameNumberfreshSubject_1;if ( (tomMatch235NameNumber_freshVar_3 instanceof tom.engine.adt.tomtype.types.tomtype.TypeWithSymbol) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch235NameNumber_freshVar_1= tomMatch235NameNumber_freshVar_3.getTomType() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch235NameNumber_freshVar_2= tomMatch235NameNumber_freshVar_3.getTlType() ;if ( true ) {

        return TomBase.getSymbolFromType( tom.engine.adt.tomtype.types.tomtype.Type.make(tomMatch235NameNumber_freshVar_1, tomMatch235NameNumber_freshVar_2) , getSymbolTable()); 
      }}}}}}}}}

    return TomBase.getSymbolFromType(type, getSymbolTable()); 
  }
  // ------------------------------------------------------------
  /* Generated by TOM (version 2.6alpha): Do not edit this file */   private static   tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_append_list_concConstraintInstruction( tom.engine.adt.tominstruction.types.ConstraintInstructionList l1,  tom.engine.adt.tominstruction.types.ConstraintInstructionList  l2) {     if( l1.isEmptyconcConstraintInstruction() ) {       return l2;     } else if( l2.isEmptyconcConstraintInstruction() ) {       return l1;     } else if(  l1.getTailconcConstraintInstruction() .isEmptyconcConstraintInstruction() ) {       return  tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( l1.getHeadconcConstraintInstruction() ,l2) ;     } else {       return  tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( l1.getHeadconcConstraintInstruction() ,tom_append_list_concConstraintInstruction( l1.getTailconcConstraintInstruction() ,l2)) ;     }   }   private static   tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_get_slice_concConstraintInstruction( tom.engine.adt.tominstruction.types.ConstraintInstructionList  begin,  tom.engine.adt.tominstruction.types.ConstraintInstructionList  end, tom.engine.adt.tominstruction.types.ConstraintInstructionList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcConstraintInstruction()  ||  (end== tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( begin.getHeadconcConstraintInstruction() ,( tom.engine.adt.tominstruction.types.ConstraintInstructionList )tom_get_slice_concConstraintInstruction( begin.getTailconcConstraintInstruction() ,end,tail)) ;   }      private static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if( l1.isEmptyconcTomName() ) {       return l2;     } else if( l2.isEmptyconcTomName() ) {       return l1;     } else if(  l1.getTailconcTomName() .isEmptyconcTomName() ) {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,l2) ;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,tom_append_list_concTomName( l1.getTailconcTomName() ,l2)) ;     }   }   private static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcTomName()  ||  (end== tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( begin.getHeadconcTomName() ,( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName( begin.getTailconcTomName() ,end,tail)) ;   }      private static   tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList l1,  tom.engine.adt.tomterm.types.TomList  l2) {     if( l1.isEmptyconcTomTerm() ) {       return l2;     } else if( l2.isEmptyconcTomTerm() ) {       return l1;     } else if(  l1.getTailconcTomTerm() .isEmptyconcTomTerm() ) {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( l1.getHeadconcTomTerm() ,l2) ;     } else {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( l1.getHeadconcTomTerm() ,tom_append_list_concTomTerm( l1.getTailconcTomTerm() ,l2)) ;     }   }   private static   tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end, tom.engine.adt.tomterm.types.TomList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcTomTerm()  ||  (end== tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( begin.getHeadconcTomTerm() ,( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm( begin.getTailconcTomTerm() ,end,tail)) ;   }      private static   tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList l1,  tom.engine.adt.tomoption.types.OptionList  l2) {     if( l1.isEmptyconcOption() ) {       return l2;     } else if( l2.isEmptyconcOption() ) {       return l1;     } else if(  l1.getTailconcOption() .isEmptyconcOption() ) {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( l1.getHeadconcOption() ,l2) ;     } else {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( l1.getHeadconcOption() ,tom_append_list_concOption( l1.getTailconcOption() ,l2)) ;     }   }   private static   tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end, tom.engine.adt.tomoption.types.OptionList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcOption()  ||  (end== tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( begin.getHeadconcOption() ,( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption( begin.getTailconcOption() ,end,tail)) ;   }      private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {     if( l1.isEmptyconcConstraint() ) {       return l2;     } else if( l2.isEmptyconcConstraint() ) {       return l1;     } else if(  l1.getTailconcConstraint() .isEmptyconcConstraint() ) {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,l2) ;     } else {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,tom_append_list_concConstraint( l1.getTailconcConstraint() ,l2)) ;     }   }   private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end, tom.engine.adt.tomconstraint.types.ConstraintList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcConstraint()  ||  (end== tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( begin.getHeadconcConstraint() ,( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint( begin.getTailconcConstraint() ,end,tail)) ;   }      private static   tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList l1,  tom.engine.adt.tomslot.types.SlotList  l2) {     if( l1.isEmptyconcSlot() ) {       return l2;     } else if( l2.isEmptyconcSlot() ) {       return l1;     } else if(  l1.getTailconcSlot() .isEmptyconcSlot() ) {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,l2) ;     } else {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,tom_append_list_concSlot( l1.getTailconcSlot() ,l2)) ;     }   }   private static   tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end, tom.engine.adt.tomslot.types.SlotList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcSlot()  ||  (end== tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( begin.getHeadconcSlot() ,( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot( begin.getTailconcSlot() ,end,tail)) ;   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ 

  // ------------------------------------------------------------

  /**
   * If a variable with a type X is found, then all the variables that have the same name and 
   * with type 'unknown' get this type
   *  - apply this for each rhs
   */
  protected TomTerm propagateVariablesTypes(TomTerm subject){
    try{
      return (TomTerm)tom_make_TopDown(tom_make_ProcessRhsForVarTypePropagation()).visitLight(subject);  
    } catch(tom.library.sl.VisitFailure e) {
      throw new TomRuntimeException("propagateVariablesTypes: failure on " + subject);
    }
  }
  private static class ProcessRhsForVarTypePropagation extends tom.library.sl.BasicStrategy {public ProcessRhsForVarTypePropagation() {super(( new tom.library.sl.Identity() ));}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tominstruction.types.ConstraintInstruction  visit_ConstraintInstruction( tom.engine.adt.tominstruction.types.ConstraintInstruction  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch236NameNumber_freshVar_0=tom__arg;if ( (tomMatch236NameNumber_freshVar_0 instanceof tom.engine.adt.tominstruction.types.ConstraintInstruction) ) {{  tom.engine.adt.tominstruction.types.ConstraintInstruction  tomMatch236NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.ConstraintInstruction )tomMatch236NameNumber_freshVar_0);{  tom.engine.adt.tominstruction.types.ConstraintInstruction  tomMatch236NameNumber_freshVar_4=tomMatch236NameNumberfreshSubject_1;if ( (tomMatch236NameNumber_freshVar_4 instanceof tom.engine.adt.tominstruction.types.constraintinstruction.ConstraintInstruction) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch236NameNumber_freshVar_1= tomMatch236NameNumber_freshVar_4.getConstraint() ;{  tom.engine.adt.tominstruction.types.Instruction  tomMatch236NameNumber_freshVar_2= tomMatch236NameNumber_freshVar_4.getAction() ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch236NameNumber_freshVar_3= tomMatch236NameNumber_freshVar_4.getOption() ;{  tom.engine.adt.tomconstraint.types.Constraint  tom_constr=tomMatch236NameNumber_freshVar_1;if ( true ) {


        HashMap<String,TomType> varTypes = new HashMap<String,TomType>();
        tom_make_TopDown(tom_make_CollectAllVariablesTypes(varTypes)).visitLight(tom_constr);        
        Constraint c = (Constraint)tom_make_TopDown(tom_make_PropagateVariablesTypes(varTypes)).visitLight(tom_constr);        
        return  tom.engine.adt.tominstruction.types.constraintinstruction.ConstraintInstruction.make(c, tomMatch236NameNumber_freshVar_2, tomMatch236NameNumber_freshVar_3) ;
      }}}}}}}}}}}return _visit_ConstraintInstruction(tom__arg,introspector); }public  tom.engine.adt.tominstruction.types.ConstraintInstruction  _visit_ConstraintInstruction( tom.engine.adt.tominstruction.types.ConstraintInstruction  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tominstruction.types.ConstraintInstruction )any.visit(environment,introspector));} else {return (( tom.engine.adt.tominstruction.types.ConstraintInstruction )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tominstruction.types.ConstraintInstruction) ) {return visit_ConstraintInstruction((( tom.engine.adt.tominstruction.types.ConstraintInstruction )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_ProcessRhsForVarTypePropagation() { return new ProcessRhsForVarTypePropagation();}private static class CollectAllVariablesTypes extends tom.library.sl.BasicStrategy {private  java.util.HashMap  map;public CollectAllVariablesTypes( java.util.HashMap  map) {super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.HashMap  getmap() {return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch237NameNumber_freshVar_0=tom__arg;if ( (tomMatch237NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch237NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch237NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch237NameNumber_freshVar_4=tomMatch237NameNumberfreshSubject_1;if ( (tomMatch237NameNumber_freshVar_4 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch237NameNumber_freshVar_2= tomMatch237NameNumber_freshVar_4.getAstName() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch237NameNumber_freshVar_3= tomMatch237NameNumber_freshVar_4.getAstType() ;{  tom.engine.adt.tomname.types.TomName  tomMatch237NameNumber_freshVar_6=tomMatch237NameNumber_freshVar_2;if ( (tomMatch237NameNumber_freshVar_6 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch237NameNumber_freshVar_5= tomMatch237NameNumber_freshVar_6.getString() ;{  tom.engine.adt.tomtype.types.TomType  tom_type=tomMatch237NameNumber_freshVar_3;{ Object tomMatch237NameNumber_freshVar_1=tom_type;if ( (tomMatch237NameNumber_freshVar_1 instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch237NameNumberfreshSubject_2=(( tom.engine.adt.tomtype.types.TomType )tomMatch237NameNumber_freshVar_1);{ boolean tomMatch237NameNumber_freshVar_8= false ;{  tom.engine.adt.tomtype.types.TomType  tomMatch237NameNumber_freshVar_7=tomMatch237NameNumberfreshSubject_2;if ( (tomMatch237NameNumber_freshVar_7 instanceof tom.engine.adt.tomtype.types.tomtype.EmptyType) ) {tomMatch237NameNumber_freshVar_8= true ;}}if ((tomMatch237NameNumber_freshVar_8 ==  false )) {if ( true ) {





        if(tom_type!=SymbolTable.TYPE_UNKNOWN) {
          map.put(tomMatch237NameNumber_freshVar_5,tom_type);
        }
      }}}}}}}}}}}}}}}}}}return _visit_TomTerm(tom__arg,introspector); }public  tom.engine.adt.tomterm.types.TomTerm  _visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomterm.types.TomTerm )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomterm.types.TomTerm )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomterm.types.TomTerm) ) {return visit_TomTerm((( tom.engine.adt.tomterm.types.TomTerm )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_CollectAllVariablesTypes( java.util.HashMap  t0) { return new CollectAllVariablesTypes(t0);}private static class PropagateVariablesTypes extends tom.library.sl.BasicStrategy {private  java.util.HashMap  map;public PropagateVariablesTypes( java.util.HashMap  map) {super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.HashMap  getmap() {return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch238NameNumber_freshVar_0=tom__arg;if ( (tomMatch238NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch238NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch238NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch238NameNumber_freshVar_3=tomMatch238NameNumberfreshSubject_1;if ( (tomMatch238NameNumber_freshVar_3 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch238NameNumber_freshVar_1= tomMatch238NameNumber_freshVar_3.getAstName() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch238NameNumber_freshVar_2= tomMatch238NameNumber_freshVar_3.getAstType() ;{  tom.engine.adt.tomname.types.TomName  tomMatch238NameNumber_freshVar_5=tomMatch238NameNumber_freshVar_1;if ( (tomMatch238NameNumber_freshVar_5 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch238NameNumber_freshVar_4= tomMatch238NameNumber_freshVar_5.getString() ;{  String  tom_name=tomMatch238NameNumber_freshVar_4;{  tom.engine.adt.tomtype.types.TomType  tom_type=tomMatch238NameNumber_freshVar_2;if ( true ) {





        if(tom_type==SymbolTable.TYPE_UNKNOWN || tom_type.isEmptyType()) {
          if (map.containsKey(tom_name)) {
            return tomMatch238NameNumberfreshSubject_1.setAstType((TomType)map.get(tom_name)); 
          }
        }
      }}}}}}}}}}}}}}return _visit_TomTerm(tom__arg,introspector); }public  tom.engine.adt.tomterm.types.TomTerm  _visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomterm.types.TomTerm )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomterm.types.TomTerm )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomterm.types.TomTerm) ) {return visit_TomTerm((( tom.engine.adt.tomterm.types.TomTerm )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_PropagateVariablesTypes( java.util.HashMap  t0) { return new PropagateVariablesTypes(t0);}


  

  /*
   * The "typeVariable" phase types RecordAppl into Variable
   * we focus on
   * - Match
   *
   * The types of subjects are inferred from the patterns
   *
   * Variable and TermAppl are typed in the TomTerm case
   */

  protected tom.library.sl.Visitable typeVariable(TomType contextType, tom.library.sl.Visitable subject) {
    if(contextType == null) {
      throw new TomRuntimeException("typeVariable: null contextType");
    }
    try {
      //System.out.println("typeVariable: " + contextType);
      //System.out.println("typeVariable subject: " + subject);
      tom.library.sl.Visitable res = tom_make_TopDownStopOnSuccess(tom_make_replace_typeVariable(contextType,this)).visitLight(subject);
      //System.out.println("res: " + res);
      return res;
    } catch(tom.library.sl.VisitFailure e) {
      throw new TomRuntimeException("typeVariable: failure on " + subject);
    }
  }

  private static class replace_typeVariable extends tom.library.sl.BasicStrategy {private  tom.engine.adt.tomtype.types.TomType  contextType;private  KernelTyper  kernelTyper;public replace_typeVariable( tom.engine.adt.tomtype.types.TomType  contextType,  KernelTyper  kernelTyper) {super(( new tom.library.sl.Fail() ));this.contextType=contextType;this.kernelTyper=kernelTyper;}public  tom.engine.adt.tomtype.types.TomType  getcontextType() {return contextType;}public  KernelTyper  getkernelTyper() {return kernelTyper;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomoption.types.Option  visit_Option( tom.engine.adt.tomoption.types.Option  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch239NameNumber_freshVar_0=tom__arg;if ( (tomMatch239NameNumber_freshVar_0 instanceof tom.engine.adt.tomoption.types.Option) ) {{  tom.engine.adt.tomoption.types.Option  tomMatch239NameNumberfreshSubject_1=(( tom.engine.adt.tomoption.types.Option )tomMatch239NameNumber_freshVar_0);{  tom.engine.adt.tomoption.types.Option  tomMatch239NameNumber_freshVar_1=tomMatch239NameNumberfreshSubject_1;if ( (tomMatch239NameNumber_freshVar_1 instanceof tom.engine.adt.tomoption.types.option.OriginTracking) ) {if ( true ) {


 return tomMatch239NameNumberfreshSubject_1; }}}}}}}return _visit_Option(tom__arg,introspector); }public  tom.engine.adt.tomsignature.types.TargetLanguage  visit_TargetLanguage( tom.engine.adt.tomsignature.types.TargetLanguage  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch240NameNumber_freshVar_0=tom__arg;if ( (tomMatch240NameNumber_freshVar_0 instanceof tom.engine.adt.tomsignature.types.TargetLanguage) ) {{  tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch240NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TargetLanguage )tomMatch240NameNumber_freshVar_0);{  tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch240NameNumber_freshVar_1=tomMatch240NameNumberfreshSubject_1;if ( (tomMatch240NameNumber_freshVar_1 instanceof tom.engine.adt.tomsignature.types.targetlanguage.TL) ) {if ( true ) {



 return tomMatch240NameNumberfreshSubject_1; }}}}}}{ Object tomMatch240NameNumber_freshVar_2=tom__arg;if ( (tomMatch240NameNumber_freshVar_2 instanceof tom.engine.adt.tomsignature.types.TargetLanguage) ) {{  tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch240NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TargetLanguage )tomMatch240NameNumber_freshVar_2);{  tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch240NameNumber_freshVar_3=tomMatch240NameNumberfreshSubject_1;if ( (tomMatch240NameNumber_freshVar_3 instanceof tom.engine.adt.tomsignature.types.targetlanguage.ITL) ) {if ( true ) {
 return tomMatch240NameNumberfreshSubject_1; }}}}}}{ Object tomMatch240NameNumber_freshVar_4=tom__arg;if ( (tomMatch240NameNumber_freshVar_4 instanceof tom.engine.adt.tomsignature.types.TargetLanguage) ) {{  tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch240NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TargetLanguage )tomMatch240NameNumber_freshVar_4);{  tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch240NameNumber_freshVar_5=tomMatch240NameNumberfreshSubject_1;if ( (tomMatch240NameNumber_freshVar_5 instanceof tom.engine.adt.tomsignature.types.targetlanguage.Comment) ) {if ( true ) {
 return tomMatch240NameNumberfreshSubject_1; }}}}}}}return _visit_TargetLanguage(tom__arg,introspector); }public  tom.engine.adt.tomtype.types.TomType  visit_TomType( tom.engine.adt.tomtype.types.TomType  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch241NameNumber_freshVar_0=tom__arg;if ( (tomMatch241NameNumber_freshVar_0 instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch241NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )tomMatch241NameNumber_freshVar_0);{  tom.engine.adt.tomtype.types.TomType  tomMatch241NameNumber_freshVar_2=tomMatch241NameNumberfreshSubject_1;if ( (tomMatch241NameNumber_freshVar_2 instanceof tom.engine.adt.tomtype.types.tomtype.TomTypeAlone) ) {{  String  tomMatch241NameNumber_freshVar_1= tomMatch241NameNumber_freshVar_2.getString() ;if ( true ) {




        TomType type = kernelTyper.getType(tomMatch241NameNumber_freshVar_1);
        if(type != null) {
          return type;
        } else {
          return tomMatch241NameNumberfreshSubject_1; // useful for SymbolTable.TYPE_UNKNOWN
        }
      }}}}}}}}return _visit_TomType(tom__arg,introspector); }public  tom.engine.adt.tomsignature.types.TomVisit  visit_TomVisit( tom.engine.adt.tomsignature.types.TomVisit  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch242NameNumber_freshVar_0=tom__arg;if ( (tomMatch242NameNumber_freshVar_0 instanceof tom.engine.adt.tomsignature.types.TomVisit) ) {{  tom.engine.adt.tomsignature.types.TomVisit  tomMatch242NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomVisit )tomMatch242NameNumber_freshVar_0);{  tom.engine.adt.tomsignature.types.TomVisit  tomMatch242NameNumber_freshVar_4=tomMatch242NameNumberfreshSubject_1;if ( (tomMatch242NameNumber_freshVar_4 instanceof tom.engine.adt.tomsignature.types.tomvisit.VisitTerm) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch242NameNumber_freshVar_1= tomMatch242NameNumber_freshVar_4.getVNode() ;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch242NameNumber_freshVar_2= tomMatch242NameNumber_freshVar_4.getAstConstraintInstructionList() ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch242NameNumber_freshVar_3= tomMatch242NameNumber_freshVar_4.getOption() ;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_constraintInstructionList=tomMatch242NameNumber_freshVar_2;if ( true ) {




        TomType newType = (TomType)kernelTyper.typeVariable(contextType,tomMatch242NameNumber_freshVar_1);
        HashSet<Constraint> matchAndNumericConstraints = new HashSet<Constraint>();
        tom_make_TopDownCollect(tom_make_CollectMatchAndNumericConstraints(matchAndNumericConstraints)).visitLight(tom_constraintInstructionList);
        return  tom.engine.adt.tomsignature.types.tomvisit.VisitTerm.make(newType, kernelTyper.typeConstraintInstructionList(newType,tom_constraintInstructionList,matchAndNumericConstraints), tomMatch242NameNumber_freshVar_3) ;
      }}}}}}}}}}}return _visit_TomVisit(tom__arg,introspector); }public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction( tom.engine.adt.tominstruction.types.Instruction  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch243NameNumber_freshVar_0=tom__arg;if ( (tomMatch243NameNumber_freshVar_0 instanceof tom.engine.adt.tominstruction.types.Instruction) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch243NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )tomMatch243NameNumber_freshVar_0);{  tom.engine.adt.tominstruction.types.Instruction  tomMatch243NameNumber_freshVar_3=tomMatch243NameNumberfreshSubject_1;if ( (tomMatch243NameNumber_freshVar_3 instanceof tom.engine.adt.tominstruction.types.instruction.Match) ) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch243NameNumber_freshVar_1= tomMatch243NameNumber_freshVar_3.getConstraintInstructionList() ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch243NameNumber_freshVar_2= tomMatch243NameNumber_freshVar_3.getOption() ;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_constraintInstructionList=tomMatch243NameNumber_freshVar_1;if ( true ) {









        TomType newType = contextType;
        HashSet<Constraint> matchAndNumericConstraints = new HashSet<Constraint>();
        tom_make_TopDownCollect(tom_make_CollectMatchAndNumericConstraints(matchAndNumericConstraints)).visitLight(tom_constraintInstructionList);
        return  tom.engine.adt.tominstruction.types.instruction.Match.make(kernelTyper.typeConstraintInstructionList(newType,tom_constraintInstructionList,matchAndNumericConstraints), tomMatch243NameNumber_freshVar_2) ;
      }}}}}}}}}}return _visit_Instruction(tom__arg,introspector); }public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch244NameNumber_freshVar_0=tom__arg;if ( (tomMatch244NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch244NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch244NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch244NameNumber_freshVar_5=tomMatch244NameNumberfreshSubject_1;if ( (tomMatch244NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch244NameNumber_freshVar_1= tomMatch244NameNumber_freshVar_5.getOption() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch244NameNumber_freshVar_2= tomMatch244NameNumber_freshVar_5.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch244NameNumber_freshVar_3= tomMatch244NameNumber_freshVar_5.getSlots() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch244NameNumber_freshVar_4= tomMatch244NameNumber_freshVar_5.getConstraints() ;{  tom.engine.adt.tomoption.types.OptionList  tom_option=tomMatch244NameNumber_freshVar_1;{  tom.engine.adt.tomname.types.TomNameList  tomMatch244NameNumber_freshVar_6=tomMatch244NameNumber_freshVar_2;if ( ((tomMatch244NameNumber_freshVar_6 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch244NameNumber_freshVar_6 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tom_nameList=tomMatch244NameNumber_freshVar_2;if (!( tomMatch244NameNumber_freshVar_6.isEmptyconcTomName() )) {{  tom.engine.adt.tomname.types.TomName  tomMatch244NameNumber_freshVar_10= tomMatch244NameNumber_freshVar_6.getHeadconcTomName() ;if ( (tomMatch244NameNumber_freshVar_10 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch244NameNumber_freshVar_9= tomMatch244NameNumber_freshVar_10.getString() ;{  String  tom_tomName=tomMatch244NameNumber_freshVar_9;{  tom.engine.adt.tomname.types.TomNameList  tomMatch244NameNumber_freshVar_7= tomMatch244NameNumber_freshVar_6.getTailconcTomName() ;{  tom.engine.adt.tomslot.types.SlotList  tom_slotList=tomMatch244NameNumber_freshVar_3;{  tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tomMatch244NameNumber_freshVar_4;if ( true ) {




        TomSymbol tomSymbol = null;
        if(tom_tomName.equals("")) {
          try {
            tomSymbol = kernelTyper.getSymbolFromType(contextType);
            if(tomSymbol==null) {
              throw new TomRuntimeException("No symbol found for type '" + contextType + "'");
            }
            tom_nameList=  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(tomSymbol.getAstName(), tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) ;
          } catch(UnsupportedOperationException e) {
            // contextType has no AstType slot
            tomSymbol = null;
          }
        } else {
          tomSymbol = kernelTyper.getSymbolFromName(tom_tomName);
        }

        if(tomSymbol != null) {
          SlotList subterm = kernelTyper.typeVariableList(tomSymbol, tom_slotList);
          ConstraintList newConstraints = (ConstraintList)kernelTyper.typeVariable(TomBase.getSymbolCodomain(tomSymbol),tom_constraints);
          return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(tom_option, tom_nameList, subterm, newConstraints) ;
        } else {
          //System.out.println("contextType = " + contextType);

          {{ Object tomMatch245NameNumber_freshVar_0=contextType;if ( (tomMatch245NameNumber_freshVar_0 instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch245NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )tomMatch245NameNumber_freshVar_0);{  tom.engine.adt.tomtype.types.TomType  tomMatch245NameNumber_freshVar_1=tomMatch245NameNumberfreshSubject_1;{ boolean tomMatch245NameNumber_freshVar_2= false ;if ( (tomMatch245NameNumber_freshVar_1 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {tomMatch245NameNumber_freshVar_2= true ;} else {if ( (tomMatch245NameNumber_freshVar_1 instanceof tom.engine.adt.tomtype.types.tomtype.TypeWithSymbol) ) {tomMatch245NameNumber_freshVar_2= true ;}}if ((tomMatch245NameNumber_freshVar_2 ==  true )) {if ( true ) {

              SlotList subterm = kernelTyper.typeVariableList( tom.engine.adt.tomsignature.types.tomsymbol.emptySymbol.make() , tom_slotList);
              ConstraintList newConstraints = (ConstraintList)kernelTyper.typeVariable(tomMatch245NameNumberfreshSubject_1,tom_constraints);
              return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(tom_option, tom_nameList, subterm, newConstraints) ;
            }}}}}}}{ Object tomMatch245NameNumber_freshVar_3=contextType;if ( (tomMatch245NameNumber_freshVar_3 instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch245NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )tomMatch245NameNumber_freshVar_3);if ( true ) {


              // do nothing
              //System.out.println("contextType = " + contextType);
              //System.out.println("subject        = " + subject);
            }}}}}

        }
      }}}}}}}}}}}}}}}}}}}}}}{ Object tomMatch244NameNumber_freshVar_11=tom__arg;if ( (tomMatch244NameNumber_freshVar_11 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch244NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch244NameNumber_freshVar_11);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch244NameNumber_freshVar_14=tomMatch244NameNumberfreshSubject_1;{ boolean tomMatch244NameNumber_freshVar_17= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch244NameNumber_freshVar_13= null ;{  tom.engine.adt.tomtype.types.TomType  tomMatch244NameNumber_freshVar_12= null ;if ( (tomMatch244NameNumber_freshVar_14 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch244NameNumber_freshVar_17= true ;tomMatch244NameNumber_freshVar_12= tomMatch244NameNumber_freshVar_14.getAstType() ;tomMatch244NameNumber_freshVar_13= tomMatch244NameNumber_freshVar_14.getConstraints() ;}} else {if ( (tomMatch244NameNumber_freshVar_14 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable) ) {{tomMatch244NameNumber_freshVar_17= true ;tomMatch244NameNumber_freshVar_12= tomMatch244NameNumber_freshVar_14.getAstType() ;tomMatch244NameNumber_freshVar_13= tomMatch244NameNumber_freshVar_14.getConstraints() ;}}}if ((tomMatch244NameNumber_freshVar_17 ==  true )) {{  tom.engine.adt.tomtype.types.TomType  tomMatch244NameNumber_freshVar_16=tomMatch244NameNumber_freshVar_12;if ( (tomMatch244NameNumber_freshVar_16 instanceof tom.engine.adt.tomtype.types.tomtype.TomTypeAlone) ) {{  String  tomMatch244NameNumber_freshVar_15= tomMatch244NameNumber_freshVar_16.getString() ;{  tom.engine.adt.tomterm.types.TomTerm  tom_var=tomMatch244NameNumberfreshSubject_1;if ( true ) {


        TomType localType = kernelTyper.getType(tomMatch244NameNumber_freshVar_15);
        //System.out.println("localType = " + localType);
        if(localType != null) {
          // The variable has already a known type
          return tom_var.setAstType(localType);
        }

        //System.out.println("contextType = " + contextType);
        {{ Object tomMatch246NameNumber_freshVar_0=contextType;if ( (tomMatch246NameNumber_freshVar_0 instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch246NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )tomMatch246NameNumber_freshVar_0);{  tom.engine.adt.tomtype.types.TomType  tomMatch246NameNumber_freshVar_3=tomMatch246NameNumberfreshSubject_1;{ boolean tomMatch246NameNumber_freshVar_4= false ;{  tom.engine.adt.tomtype.types.TomType  tomMatch246NameNumber_freshVar_2= null ;{  tom.engine.adt.tomtype.types.TomType  tomMatch246NameNumber_freshVar_1= null ;if ( (tomMatch246NameNumber_freshVar_3 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {{tomMatch246NameNumber_freshVar_4= true ;tomMatch246NameNumber_freshVar_1= tomMatch246NameNumber_freshVar_3.getTomType() ;tomMatch246NameNumber_freshVar_2= tomMatch246NameNumber_freshVar_3.getTlType() ;}} else {if ( (tomMatch246NameNumber_freshVar_3 instanceof tom.engine.adt.tomtype.types.tomtype.TypeWithSymbol) ) {{tomMatch246NameNumber_freshVar_4= true ;tomMatch246NameNumber_freshVar_1= tomMatch246NameNumber_freshVar_3.getTomType() ;tomMatch246NameNumber_freshVar_2= tomMatch246NameNumber_freshVar_3.getTlType() ;}}}if ((tomMatch246NameNumber_freshVar_4 ==  true )) {if ( true ) {

            TomType ctype =  tom.engine.adt.tomtype.types.tomtype.Type.make(tomMatch246NameNumber_freshVar_1, tomMatch246NameNumber_freshVar_2) ;
            ConstraintList newConstraints = (ConstraintList)kernelTyper.typeVariable(ctype,tomMatch244NameNumber_freshVar_13);
            TomTerm newVar = tom_var.setAstType(ctype);
            //System.out.println("newVar = " + newVar);
            return newVar.setConstraints(newConstraints);
          }}}}}}}}}}

      }}}}}}}}}}}}}}return _visit_TomTerm(tom__arg,introspector); }public  tom.engine.adt.tomterm.types.TomTerm  _visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomterm.types.TomTerm )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomterm.types.TomTerm )any.visitLight(arg,introspector));} }public  tom.engine.adt.tomsignature.types.TomVisit  _visit_TomVisit( tom.engine.adt.tomsignature.types.TomVisit  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomsignature.types.TomVisit )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomsignature.types.TomVisit )any.visitLight(arg,introspector));} }public  tom.engine.adt.tomtype.types.TomType  _visit_TomType( tom.engine.adt.tomtype.types.TomType  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomtype.types.TomType )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomtype.types.TomType )any.visitLight(arg,introspector));} }public  tom.engine.adt.tomsignature.types.TargetLanguage  _visit_TargetLanguage( tom.engine.adt.tomsignature.types.TargetLanguage  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomsignature.types.TargetLanguage )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomsignature.types.TargetLanguage )any.visitLight(arg,introspector));} }public  tom.engine.adt.tomoption.types.Option  _visit_Option( tom.engine.adt.tomoption.types.Option  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomoption.types.Option )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomoption.types.Option )any.visitLight(arg,introspector));} }public  tom.engine.adt.tominstruction.types.Instruction  _visit_Instruction( tom.engine.adt.tominstruction.types.Instruction  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tominstruction.types.Instruction )any.visit(environment,introspector));} else {return (( tom.engine.adt.tominstruction.types.Instruction )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomterm.types.TomTerm) ) {return visit_TomTerm((( tom.engine.adt.tomterm.types.TomTerm )v),introspector);}if ( (v instanceof tom.engine.adt.tomsignature.types.TomVisit) ) {return visit_TomVisit((( tom.engine.adt.tomsignature.types.TomVisit )v),introspector);}if ( (v instanceof tom.engine.adt.tomtype.types.TomType) ) {return visit_TomType((( tom.engine.adt.tomtype.types.TomType )v),introspector);}if ( (v instanceof tom.engine.adt.tomsignature.types.TargetLanguage) ) {return visit_TargetLanguage((( tom.engine.adt.tomsignature.types.TargetLanguage )v),introspector);}if ( (v instanceof tom.engine.adt.tomoption.types.Option) ) {return visit_Option((( tom.engine.adt.tomoption.types.Option )v),introspector);}if ( (v instanceof tom.engine.adt.tominstruction.types.Instruction) ) {return visit_Instruction((( tom.engine.adt.tominstruction.types.Instruction )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_replace_typeVariable( tom.engine.adt.tomtype.types.TomType  t0,  KernelTyper  t1) { return new replace_typeVariable(t0,t1);}



  /*
   *
   * @param contextType
   * @param constraintInstructionList a list of ConstraintInstruction
   * @param matchAndNumericConstraints a collection of MatchConstraint and NumericConstraint
   */
  private ConstraintInstructionList typeConstraintInstructionList(TomType contextType, ConstraintInstructionList constraintInstructionList, Collection<Constraint> matchAndNumericConstraints) {
    {{ Object tomMatch247NameNumber_freshVar_0=constraintInstructionList;if ( (tomMatch247NameNumber_freshVar_0 instanceof tom.engine.adt.tominstruction.types.ConstraintInstructionList) ) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch247NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.ConstraintInstructionList )tomMatch247NameNumber_freshVar_0);{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch247NameNumber_freshVar_1=tomMatch247NameNumberfreshSubject_1;if ( ((tomMatch247NameNumber_freshVar_1 instanceof tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction) || (tomMatch247NameNumber_freshVar_1 instanceof tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction)) ) {if ( tomMatch247NameNumber_freshVar_1.isEmptyconcConstraintInstruction() ) {if ( true ) {

        return constraintInstructionList; 
      }}}}}}}{ Object tomMatch247NameNumber_freshVar_2=constraintInstructionList;if ( (tomMatch247NameNumber_freshVar_2 instanceof tom.engine.adt.tominstruction.types.ConstraintInstructionList) ) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch247NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.ConstraintInstructionList )tomMatch247NameNumber_freshVar_2);{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch247NameNumber_freshVar_3=tomMatch247NameNumberfreshSubject_1;if ( ((tomMatch247NameNumber_freshVar_3 instanceof tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction) || (tomMatch247NameNumber_freshVar_3 instanceof tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction)) ) {if (!( tomMatch247NameNumber_freshVar_3.isEmptyconcConstraintInstruction() )) {{  tom.engine.adt.tominstruction.types.ConstraintInstruction  tomMatch247NameNumber_freshVar_9= tomMatch247NameNumber_freshVar_3.getHeadconcConstraintInstruction() ;if ( (tomMatch247NameNumber_freshVar_9 instanceof tom.engine.adt.tominstruction.types.constraintinstruction.ConstraintInstruction) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch247NameNumber_freshVar_6= tomMatch247NameNumber_freshVar_9.getConstraint() ;{  tom.engine.adt.tominstruction.types.Instruction  tomMatch247NameNumber_freshVar_7= tomMatch247NameNumber_freshVar_9.getAction() ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch247NameNumber_freshVar_8= tomMatch247NameNumber_freshVar_9.getOption() ;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch247NameNumber_freshVar_4= tomMatch247NameNumber_freshVar_3.getTailconcConstraintInstruction() ;if ( true ) {

 
        try {
          Collection<TomTerm> lhsVariable = new HashSet<TomTerm>();
          Constraint newConstraint = (Constraint)tom_make_TopDownStopOnSuccess(tom_make_typeConstraint(contextType,lhsVariable,matchAndNumericConstraints,this)).visitLight(tomMatch247NameNumber_freshVar_6);
          TomList varList = ASTFactory.makeList(lhsVariable);
          Instruction newAction = (Instruction) replaceInstantiatedVariable(varList,tomMatch247NameNumber_freshVar_7);
          newAction = (Instruction) typeVariable( tom.engine.adt.tomtype.types.tomtype.EmptyType.make() ,newAction);
          ConstraintInstructionList newTail = typeConstraintInstructionList(contextType,tomMatch247NameNumber_freshVar_4,matchAndNumericConstraints);
          return  tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( tom.engine.adt.tominstruction.types.constraintinstruction.ConstraintInstruction.make(newConstraint, newAction, tomMatch247NameNumber_freshVar_8) ,tom_append_list_concConstraintInstruction(newTail, tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction.make() )) ;
        } catch(VisitFailure e) {}
      }}}}}}}}}}}}}}
        
    throw new TomRuntimeException("Bad ConstraintInstruction: " + constraintInstructionList);
  }

  /**
   * Try to guess the type for the subjects
   * @param contextType the context in which the constraint is typed
   * @param lhsVariable (computed by this strategy) the list of variables that occur in all the lhs 
   * @param matchAndNumericConstraints a collection of MatchConstraint and NumericConstraint
   * @param kernelTyper the current class
   */
  private static class typeConstraint extends tom.library.sl.BasicStrategy {private  tom.engine.adt.tomtype.types.TomType  contextType;private  java.util.Collection  lhsVariable;private  java.util.Collection  matchAndNumericConstraints;private  KernelTyper  kernelTyper;public typeConstraint( tom.engine.adt.tomtype.types.TomType  contextType,  java.util.Collection  lhsVariable,  java.util.Collection  matchAndNumericConstraints,  KernelTyper  kernelTyper) {super(( new tom.library.sl.Fail() ));this.contextType=contextType;this.lhsVariable=lhsVariable;this.matchAndNumericConstraints=matchAndNumericConstraints;this.kernelTyper=kernelTyper;}public  tom.engine.adt.tomtype.types.TomType  getcontextType() {return contextType;}public  java.util.Collection  getlhsVariable() {return lhsVariable;}public  java.util.Collection  getmatchAndNumericConstraints() {return matchAndNumericConstraints;}public  KernelTyper  getkernelTyper() {return kernelTyper;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch248NameNumber_freshVar_0=tom__arg;if ( (tomMatch248NameNumber_freshVar_0 instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch248NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tomMatch248NameNumber_freshVar_0);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch248NameNumber_freshVar_3=tomMatch248NameNumberfreshSubject_1;{ boolean tomMatch248NameNumber_freshVar_4= false ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch248NameNumber_freshVar_2= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch248NameNumber_freshVar_1= null ;if ( (tomMatch248NameNumber_freshVar_3 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{tomMatch248NameNumber_freshVar_4= true ;tomMatch248NameNumber_freshVar_1= tomMatch248NameNumber_freshVar_3.getPattern() ;tomMatch248NameNumber_freshVar_2= tomMatch248NameNumber_freshVar_3.getSubject() ;}} else {if ( (tomMatch248NameNumber_freshVar_3 instanceof tom.engine.adt.tomconstraint.types.constraint.NumericConstraint) ) {{tomMatch248NameNumber_freshVar_4= true ;tomMatch248NameNumber_freshVar_1= tomMatch248NameNumber_freshVar_3.getPattern() ;tomMatch248NameNumber_freshVar_2= tomMatch248NameNumber_freshVar_3.getSubject() ;}}}if ((tomMatch248NameNumber_freshVar_4 ==  true )) {{  tom.engine.adt.tomterm.types.TomTerm  tom_pattern=tomMatch248NameNumber_freshVar_1;{  tom.engine.adt.tomterm.types.TomTerm  tom_subject=tomMatch248NameNumber_freshVar_2;{  tom.engine.adt.tomconstraint.types.Constraint  tom_constraint=tomMatch248NameNumberfreshSubject_1;if ( true ) {


        boolean isNumeric = (tom_constraint) instanceof NumericConstraint ? true:false;
        TomTerm newSubject = null;
        TomType newSubjectType = null;        
        {{ Object tomMatch249NameNumber_freshVar_0=tom_subject;if ( (tomMatch249NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch249NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch249NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch249NameNumber_freshVar_5=tomMatch249NameNumberfreshSubject_1;{ boolean tomMatch249NameNumber_freshVar_8= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch249NameNumber_freshVar_4= null ;{  tom.engine.adt.tomtype.types.TomType  tomMatch249NameNumber_freshVar_3= null ;{  tom.engine.adt.tomname.types.TomName  tomMatch249NameNumber_freshVar_2= null ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch249NameNumber_freshVar_1= null ;if ( (tomMatch249NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch249NameNumber_freshVar_8= true ;tomMatch249NameNumber_freshVar_1= tomMatch249NameNumber_freshVar_5.getOption() ;tomMatch249NameNumber_freshVar_2= tomMatch249NameNumber_freshVar_5.getAstName() ;tomMatch249NameNumber_freshVar_3= tomMatch249NameNumber_freshVar_5.getAstType() ;tomMatch249NameNumber_freshVar_4= tomMatch249NameNumber_freshVar_5.getConstraints() ;}} else {if ( (tomMatch249NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch249NameNumber_freshVar_8= true ;tomMatch249NameNumber_freshVar_1= tomMatch249NameNumber_freshVar_5.getOption() ;tomMatch249NameNumber_freshVar_2= tomMatch249NameNumber_freshVar_5.getAstName() ;tomMatch249NameNumber_freshVar_3= tomMatch249NameNumber_freshVar_5.getAstType() ;tomMatch249NameNumber_freshVar_4= tomMatch249NameNumber_freshVar_5.getConstraints() ;}}}if ((tomMatch249NameNumber_freshVar_8 ==  true )) {{  tom.engine.adt.tomname.types.TomName  tomMatch249NameNumber_freshVar_7=tomMatch249NameNumber_freshVar_2;if ( (tomMatch249NameNumber_freshVar_7 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch249NameNumber_freshVar_6= tomMatch249NameNumber_freshVar_7.getString() ;if ( true ) {

            TomTerm newVariable = null;
            // tomType may be a TomTypeAlone or a type from an typed variable
            String type = TomBase.getTomType(tomMatch249NameNumber_freshVar_3);
            //System.out.println("match type = " + type);
            if(kernelTyper.getType(type) == null) {
              /* the subject is a variable with an unknown type */
              newSubjectType = kernelTyper.guessSubjectType(tom_subject,matchAndNumericConstraints);
              if(newSubjectType != null) {
                newVariable =  tom.engine.adt.tomterm.types.tomterm.Variable.make(tomMatch249NameNumber_freshVar_1, tomMatch249NameNumber_freshVar_2, newSubjectType, tomMatch249NameNumber_freshVar_4) ;
              } else {
                if (!isNumeric) {
                  throw new TomRuntimeException("No symbol found for name '" + tomMatch249NameNumber_freshVar_6+ "'");
                }
              }
            } else {
              newVariable = tom_subject;
            }
            if(newVariable == null) {
              if (!isNumeric) { 
                throw new TomRuntimeException("Type cannot be guessed for '" + tom_subject+ "'");
              }
            } else {
              newSubject = newVariable;
              newSubjectType = newVariable.getAstType();
            }                  
          }}}}}}}}}}}}}}{ Object tomMatch249NameNumber_freshVar_9=tom_subject;if ( (tomMatch249NameNumber_freshVar_9 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch249NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch249NameNumber_freshVar_9);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch249NameNumber_freshVar_11=tomMatch249NameNumberfreshSubject_1;{ boolean tomMatch249NameNumber_freshVar_17= false ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch249NameNumber_freshVar_10= null ;if ( (tomMatch249NameNumber_freshVar_11 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{tomMatch249NameNumber_freshVar_17= true ;tomMatch249NameNumber_freshVar_10= tomMatch249NameNumber_freshVar_11.getNameList() ;}} else {if ( (tomMatch249NameNumber_freshVar_11 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{tomMatch249NameNumber_freshVar_17= true ;tomMatch249NameNumber_freshVar_10= tomMatch249NameNumber_freshVar_11.getNameList() ;}}}if ((tomMatch249NameNumber_freshVar_17 ==  true )) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch249NameNumber_freshVar_12=tomMatch249NameNumber_freshVar_10;if ( ((tomMatch249NameNumber_freshVar_12 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch249NameNumber_freshVar_12 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {if (!( tomMatch249NameNumber_freshVar_12.isEmptyconcTomName() )) {{  tom.engine.adt.tomname.types.TomName  tomMatch249NameNumber_freshVar_16= tomMatch249NameNumber_freshVar_12.getHeadconcTomName() ;if ( (tomMatch249NameNumber_freshVar_16 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch249NameNumber_freshVar_15= tomMatch249NameNumber_freshVar_16.getString() ;{  String  tom_name=tomMatch249NameNumber_freshVar_15;{  tom.engine.adt.tomname.types.TomNameList  tomMatch249NameNumber_freshVar_13= tomMatch249NameNumber_freshVar_12.getTailconcTomName() ;if ( true ) {


            TomSymbol symbol = kernelTyper.getSymbolFromName(tom_name);
            TomType type = null;
            if(symbol!=null) {
              type = TomBase.getSymbolCodomain(symbol);
            } else {
              // unknown function call
              type = kernelTyper.guessSubjectType(tom_subject,matchAndNumericConstraints);
            }
            if(type != null) {
              newSubject =  tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm.make(tomMatch249NameNumberfreshSubject_1, type) ;
            } else {
              if (!isNumeric) {
                throw new TomRuntimeException("No symbol found for name '" + tom_name+ "'");
              }
            }
            newSubjectType = type;                    
          }}}}}}}}}}}}}}}}{ Object tomMatch249NameNumber_freshVar_18=tom_subject;if ( (tomMatch249NameNumber_freshVar_18 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch249NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch249NameNumber_freshVar_18);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch249NameNumber_freshVar_20=tomMatch249NameNumberfreshSubject_1;if ( (tomMatch249NameNumber_freshVar_20 instanceof tom.engine.adt.tomterm.types.tomterm.TomTypeToTomTerm) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch249NameNumber_freshVar_19= tomMatch249NameNumber_freshVar_20.getAstType() ;{  tom.engine.adt.tomtype.types.TomType  tom_type=tomMatch249NameNumber_freshVar_19;if ( true ) {


            newSubject =  tom.engine.adt.tomterm.types.tomterm.Variable.make( tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ,  tom.engine.adt.tomname.types.tomname.Name.make("tom__arg") , tom_type,  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) ;
            newSubjectType = tom_type;
          }}}}}}}}{ Object tomMatch249NameNumber_freshVar_21=tom_subject;if ( (tomMatch249NameNumber_freshVar_21 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch249NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch249NameNumber_freshVar_21);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch249NameNumber_freshVar_23=tomMatch249NameNumberfreshSubject_1;if ( (tomMatch249NameNumber_freshVar_23 instanceof tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch249NameNumber_freshVar_22= tomMatch249NameNumber_freshVar_23.getAstType() ;if ( true ) {


            
            newSubjectType = tomMatch249NameNumber_freshVar_22;
            newSubject = tomMatch249NameNumberfreshSubject_1;
          }}}}}}}}

 // end match subject     
        // if it is numeric, we do not care about the type
        // we transform the lhs and rhs into buildTerms with empty type
        if (isNumeric) {
          newSubjectType =  tom.engine.adt.tomtype.types.tomtype.EmptyType.make() ;
          newSubject = tom_subject;
          {{ Object tomMatch250NameNumber_freshVar_0=tom_subject;if ( (tomMatch250NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch250NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch250NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch250NameNumber_freshVar_1=tomMatch250NameNumberfreshSubject_1;if ( (tomMatch250NameNumber_freshVar_1 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {if ( true ) {
 newSubject =  tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm.make(tom_subject, newSubjectType) ;}}}}}}}{{ Object tomMatch251NameNumber_freshVar_0=tom_pattern;if ( (tomMatch251NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch251NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch251NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch251NameNumber_freshVar_1=tomMatch251NameNumberfreshSubject_1;if ( (tomMatch251NameNumber_freshVar_1 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {if ( true ) {tom_pattern


=  tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm.make(tom_pattern, newSubjectType) ; }}}}}}}

        } else {
          newSubjectType = (TomType)kernelTyper.typeVariable(contextType,newSubjectType);
          newSubject = (TomTerm)kernelTyper.typeVariable(newSubjectType, newSubject);                  
        }
        TomTerm newPattern = (TomTerm)kernelTyper.typeVariable(newSubjectType, tom_pattern);
        TomBase.collectVariable(lhsVariable,newPattern);
        return tom_constraint.setPattern(newPattern).setSubject(newSubject);               
      }}}}}}}}}}}}}return _visit_Constraint(tom__arg,introspector); }public  tom.engine.adt.tomconstraint.types.Constraint  _visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {return visit_Constraint((( tom.engine.adt.tomconstraint.types.Constraint )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_typeConstraint( tom.engine.adt.tomtype.types.TomType  t0,  java.util.Collection  t1,  java.util.Collection  t2,  KernelTyper  t3) { return new typeConstraint(t0,t1,t2,t3);}



  private TomType guessSubjectType(TomTerm subject, Collection matchConstraints) {
    for(Object constr:matchConstraints) {
      {{ Object tomMatch252NameNumber_freshVar_0=constr;if ( (tomMatch252NameNumber_freshVar_0 instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch252NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tomMatch252NameNumber_freshVar_0);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch252NameNumber_freshVar_3=tomMatch252NameNumberfreshSubject_1;if ( (tomMatch252NameNumber_freshVar_3 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch252NameNumber_freshVar_1= tomMatch252NameNumber_freshVar_3.getPattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch252NameNumber_freshVar_2= tomMatch252NameNumber_freshVar_3.getSubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tom_pattern=tomMatch252NameNumber_freshVar_1;{  tom.engine.adt.tomterm.types.TomTerm  tom_s=tomMatch252NameNumber_freshVar_2;if ( true ) {

          // we want two terms to be equal even if their option is different 
          // ( because of their possition for example )
matchL:  {{ Object tomMatch253NameNumber_freshVar_0=subject;if ( (tomMatch253NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_4=tomMatch253NameNumberfreshSubject_1;if ( (tomMatch253NameNumber_freshVar_4 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch253NameNumber_freshVar_2= tomMatch253NameNumber_freshVar_4.getAstName() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch253NameNumber_freshVar_3= tomMatch253NameNumber_freshVar_4.getAstType() ;{ Object tomMatch253NameNumber_freshVar_1=tom_s;if ( (tomMatch253NameNumber_freshVar_1 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_1);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_7=tomMatch253NameNumberfreshSubject_2;if ( (tomMatch253NameNumber_freshVar_7 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch253NameNumber_freshVar_5= tomMatch253NameNumber_freshVar_7.getAstName() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch253NameNumber_freshVar_6= tomMatch253NameNumber_freshVar_7.getAstType() ;{  tom.engine.adt.tomname.types.TomName  tomMatch253NameNumber_freshVar_8=tomMatch253NameNumber_freshVar_5;if ( (tomMatch253NameNumber_freshVar_8==tomMatch253NameNumber_freshVar_2) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch253NameNumber_freshVar_9=tomMatch253NameNumber_freshVar_6;if ( (tomMatch253NameNumber_freshVar_9==tomMatch253NameNumber_freshVar_3) ) {if ( true ) {
break matchL;}}}}}}}}}}}}}}}}}}}{ Object tomMatch253NameNumber_freshVar_10=subject;if ( (tomMatch253NameNumber_freshVar_10 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_10);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_14=tomMatch253NameNumberfreshSubject_1;if ( (tomMatch253NameNumber_freshVar_14 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_12= tomMatch253NameNumber_freshVar_14.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_13= tomMatch253NameNumber_freshVar_14.getArgs() ;{ Object tomMatch253NameNumber_freshVar_11=tom_s;if ( (tomMatch253NameNumber_freshVar_11 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_11);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_17=tomMatch253NameNumberfreshSubject_2;if ( (tomMatch253NameNumber_freshVar_17 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_15= tomMatch253NameNumber_freshVar_17.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_16= tomMatch253NameNumber_freshVar_17.getArgs() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_18=tomMatch253NameNumber_freshVar_15;if ( (tomMatch253NameNumber_freshVar_18==tomMatch253NameNumber_freshVar_12) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_19=tomMatch253NameNumber_freshVar_16;if ( (tomMatch253NameNumber_freshVar_19==tomMatch253NameNumber_freshVar_13) ) {if ( true ) {
break matchL;}}}}}}}}}}}}}}}}}}}{ Object tomMatch253NameNumber_freshVar_20=subject;if ( (tomMatch253NameNumber_freshVar_20 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_20);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_24=tomMatch253NameNumberfreshSubject_1;if ( (tomMatch253NameNumber_freshVar_24 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_22= tomMatch253NameNumber_freshVar_24.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch253NameNumber_freshVar_23= tomMatch253NameNumber_freshVar_24.getSlots() ;{ Object tomMatch253NameNumber_freshVar_21=tom_s;if ( (tomMatch253NameNumber_freshVar_21 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_21);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_27=tomMatch253NameNumberfreshSubject_2;if ( (tomMatch253NameNumber_freshVar_27 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_25= tomMatch253NameNumber_freshVar_27.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch253NameNumber_freshVar_26= tomMatch253NameNumber_freshVar_27.getSlots() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_28=tomMatch253NameNumber_freshVar_25;if ( (tomMatch253NameNumber_freshVar_28==tomMatch253NameNumber_freshVar_22) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch253NameNumber_freshVar_29=tomMatch253NameNumber_freshVar_26;if ( (tomMatch253NameNumber_freshVar_29==tomMatch253NameNumber_freshVar_23) ) {if ( true ) {
break matchL;}}}}}}}}}}}}}}}}}}}{ Object tomMatch253NameNumber_freshVar_30=subject;if ( (tomMatch253NameNumber_freshVar_30 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_30);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_35=tomMatch253NameNumberfreshSubject_1;if ( (tomMatch253NameNumber_freshVar_35 instanceof tom.engine.adt.tomterm.types.tomterm.XMLAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_32= tomMatch253NameNumber_freshVar_35.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_33= tomMatch253NameNumber_freshVar_35.getAttrList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_34= tomMatch253NameNumber_freshVar_35.getChildList() ;{  tom.engine.adt.tomterm.types.TomList  tom_tomList=tomMatch253NameNumber_freshVar_33;{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_41=tomMatch253NameNumber_freshVar_34;if ( (tomMatch253NameNumber_freshVar_41==tom_tomList) ) {{ Object tomMatch253NameNumber_freshVar_31=tom_s;if ( (tomMatch253NameNumber_freshVar_31 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_31);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_39=tomMatch253NameNumberfreshSubject_2;if ( (tomMatch253NameNumber_freshVar_39 instanceof tom.engine.adt.tomterm.types.tomterm.XMLAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_36= tomMatch253NameNumber_freshVar_39.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_37= tomMatch253NameNumber_freshVar_39.getAttrList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_38= tomMatch253NameNumber_freshVar_39.getChildList() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_40=tomMatch253NameNumber_freshVar_36;if ( (tomMatch253NameNumber_freshVar_40==tomMatch253NameNumber_freshVar_32) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_42=tomMatch253NameNumber_freshVar_37;if ( (tomMatch253NameNumber_freshVar_42==tom_tomList) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_43=tomMatch253NameNumber_freshVar_38;if ( (tomMatch253NameNumber_freshVar_43==tom_tomList) ) {if ( true ) {
 break matchL; }}}}}}}}}}}}}}}}}}}}}}}}}}{ Object tomMatch253NameNumber_freshVar_44=subject;if ( (tomMatch253NameNumber_freshVar_44 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_44);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_48=tomMatch253NameNumberfreshSubject_1;if ( (tomMatch253NameNumber_freshVar_48 instanceof tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_46= tomMatch253NameNumber_freshVar_48.getTomTerm() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch253NameNumber_freshVar_47= tomMatch253NameNumber_freshVar_48.getAstType() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_51=tomMatch253NameNumber_freshVar_46;if ( (tomMatch253NameNumber_freshVar_51 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_49= tomMatch253NameNumber_freshVar_51.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_50= tomMatch253NameNumber_freshVar_51.getArgs() ;{ Object tomMatch253NameNumber_freshVar_45=tom_s;if ( (tomMatch253NameNumber_freshVar_45 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_45);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_54=tomMatch253NameNumberfreshSubject_2;if ( (tomMatch253NameNumber_freshVar_54 instanceof tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_52= tomMatch253NameNumber_freshVar_54.getTomTerm() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch253NameNumber_freshVar_53= tomMatch253NameNumber_freshVar_54.getAstType() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumber_freshVar_57=tomMatch253NameNumber_freshVar_52;if ( (tomMatch253NameNumber_freshVar_57 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_55= tomMatch253NameNumber_freshVar_57.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_56= tomMatch253NameNumber_freshVar_57.getArgs() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch253NameNumber_freshVar_58=tomMatch253NameNumber_freshVar_55;if ( (tomMatch253NameNumber_freshVar_58==tomMatch253NameNumber_freshVar_49) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch253NameNumber_freshVar_59=tomMatch253NameNumber_freshVar_56;if ( (tomMatch253NameNumber_freshVar_59==tomMatch253NameNumber_freshVar_50) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch253NameNumber_freshVar_60=tomMatch253NameNumber_freshVar_53;if ( (tomMatch253NameNumber_freshVar_60==tomMatch253NameNumber_freshVar_47) ) {if ( true ) {
break matchL;}}}}}}}}}}}}}}}}}}}}}}}}}}}}}{ Object tomMatch253NameNumber_freshVar_61=subject;if ( (tomMatch253NameNumber_freshVar_61 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_61);{ Object tomMatch253NameNumber_freshVar_62=tom_s;if ( (tomMatch253NameNumber_freshVar_62 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch253NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch253NameNumber_freshVar_62);if ( true ) {
 continue; }}}}}}}}

         TomTerm patt = tom_pattern;
         {{ Object tomMatch254NameNumber_freshVar_0=tom_pattern;if ( (tomMatch254NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch254NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch254NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch254NameNumber_freshVar_2=tomMatch254NameNumberfreshSubject_1;if ( (tomMatch254NameNumber_freshVar_2 instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch254NameNumber_freshVar_1= tomMatch254NameNumber_freshVar_2.getTomTerm() ;if ( true ) {
 patt = tomMatch254NameNumber_freshVar_1; }}}}}}}}{{ Object tomMatch255NameNumber_freshVar_0=patt;if ( (tomMatch255NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch255NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch255NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch255NameNumber_freshVar_2=tomMatch255NameNumberfreshSubject_1;{ boolean tomMatch255NameNumber_freshVar_8= false ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch255NameNumber_freshVar_1= null ;if ( (tomMatch255NameNumber_freshVar_2 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{tomMatch255NameNumber_freshVar_8= true ;tomMatch255NameNumber_freshVar_1= tomMatch255NameNumber_freshVar_2.getNameList() ;}} else {if ( (tomMatch255NameNumber_freshVar_2 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{tomMatch255NameNumber_freshVar_8= true ;tomMatch255NameNumber_freshVar_1= tomMatch255NameNumber_freshVar_2.getNameList() ;}} else {if ( (tomMatch255NameNumber_freshVar_2 instanceof tom.engine.adt.tomterm.types.tomterm.XMLAppl) ) {{tomMatch255NameNumber_freshVar_8= true ;tomMatch255NameNumber_freshVar_1= tomMatch255NameNumber_freshVar_2.getNameList() ;}}}}if ((tomMatch255NameNumber_freshVar_8 ==  true )) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch255NameNumber_freshVar_3=tomMatch255NameNumber_freshVar_1;if ( ((tomMatch255NameNumber_freshVar_3 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch255NameNumber_freshVar_3 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {if (!( tomMatch255NameNumber_freshVar_3.isEmptyconcTomName() )) {{  tom.engine.adt.tomname.types.TomName  tomMatch255NameNumber_freshVar_7= tomMatch255NameNumber_freshVar_3.getHeadconcTomName() ;if ( (tomMatch255NameNumber_freshVar_7 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch255NameNumber_freshVar_6= tomMatch255NameNumber_freshVar_7.getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch255NameNumber_freshVar_4= tomMatch255NameNumber_freshVar_3.getTailconcTomName() ;if ( true ) {


        
             TomSymbol symbol = null;
             symbol = getSymbolFromName(tomMatch255NameNumber_freshVar_6);
             // System.out.println("name = " + `name);
             if( symbol != null ) {
               return TomBase.getSymbolCodomain(symbol);
             }
           }}}}}}}}}}}}}}}}

        }}}}}}}}}}}

    }// for    
    return null;
  }

  /*
   * perform type inference of subterms (subtermList)
   * under a given operator (symbol)
   */
  private SlotList typeVariableList(TomSymbol symbol, SlotList subtermList) {
    if(symbol == null) {
      throw new TomRuntimeException("typeVariableList: null symbol");
    }

    if(subtermList.isEmptyconcSlot()) {
      return  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ;
    }

    //System.out.println("symbol = " + symbol.getastname());
    {{ Object tomMatch256NameNumber_freshVar_0=symbol;if ( (tomMatch256NameNumber_freshVar_0 instanceof tom.engine.adt.tomsignature.types.TomSymbol) ) {{  tom.engine.adt.tomsignature.types.TomSymbol  tomMatch256NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomSymbol )tomMatch256NameNumber_freshVar_0);{  tom.engine.adt.tomsignature.types.TomSymbol  tomMatch256NameNumber_freshVar_2=tomMatch256NameNumberfreshSubject_1;if ( (tomMatch256NameNumber_freshVar_2 instanceof tom.engine.adt.tomsignature.types.tomsymbol.emptySymbol) ) {{ Object tomMatch256NameNumber_freshVar_1=subtermList;if ( (tomMatch256NameNumber_freshVar_1 instanceof tom.engine.adt.tomslot.types.SlotList) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch256NameNumberfreshSubject_2=(( tom.engine.adt.tomslot.types.SlotList )tomMatch256NameNumber_freshVar_1);{  tom.engine.adt.tomslot.types.SlotList  tomMatch256NameNumber_freshVar_3=tomMatch256NameNumberfreshSubject_2;if ( ((tomMatch256NameNumber_freshVar_3 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch256NameNumber_freshVar_3 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {if (!( tomMatch256NameNumber_freshVar_3.isEmptyconcSlot() )) {{  tom.engine.adt.tomslot.types.Slot  tomMatch256NameNumber_freshVar_8= tomMatch256NameNumber_freshVar_3.getHeadconcSlot() ;if ( (tomMatch256NameNumber_freshVar_8 instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch256NameNumber_freshVar_6= tomMatch256NameNumber_freshVar_8.getSlotName() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch256NameNumber_freshVar_7= tomMatch256NameNumber_freshVar_8.getAppl() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch256NameNumber_freshVar_4= tomMatch256NameNumber_freshVar_3.getTailconcSlot() ;if ( true ) {

        /*
         * if the top symbol is unknown, the subterms
         * are typed in an empty context
         */
        SlotList sl = typeVariableList(tomMatch256NameNumberfreshSubject_1,tomMatch256NameNumber_freshVar_4);
        return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tomMatch256NameNumber_freshVar_6, (TomTerm)typeVariable( tom.engine.adt.tomtype.types.tomtype.EmptyType.make() ,tomMatch256NameNumber_freshVar_7)) ,tom_append_list_concSlot(sl, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
      }}}}}}}}}}}}}}}}}{ Object tomMatch256NameNumber_freshVar_9=symbol;if ( (tomMatch256NameNumber_freshVar_9 instanceof tom.engine.adt.tomsignature.types.TomSymbol) ) {{  tom.engine.adt.tomsignature.types.TomSymbol  tomMatch256NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomSymbol )tomMatch256NameNumber_freshVar_9);{  tom.engine.adt.tomsignature.types.TomSymbol  tomMatch256NameNumber_freshVar_13=tomMatch256NameNumberfreshSubject_1;if ( (tomMatch256NameNumber_freshVar_13 instanceof tom.engine.adt.tomsignature.types.tomsymbol.Symbol) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch256NameNumber_freshVar_11= tomMatch256NameNumber_freshVar_13.getAstName() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch256NameNumber_freshVar_12= tomMatch256NameNumber_freshVar_13.getTypesToType() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch256NameNumber_freshVar_16=tomMatch256NameNumber_freshVar_12;if ( (tomMatch256NameNumber_freshVar_16 instanceof tom.engine.adt.tomtype.types.tomtype.TypesToType) ) {{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch256NameNumber_freshVar_14= tomMatch256NameNumber_freshVar_16.getDomain() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch256NameNumber_freshVar_15= tomMatch256NameNumber_freshVar_16.getCodomain() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch256NameNumber_freshVar_19=tomMatch256NameNumber_freshVar_15;if ( (tomMatch256NameNumber_freshVar_19 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch256NameNumber_freshVar_17= tomMatch256NameNumber_freshVar_19.getTomType() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch256NameNumber_freshVar_18= tomMatch256NameNumber_freshVar_19.getTlType() ;{  tom.engine.adt.tomtype.types.TomType  tom_codomain=tomMatch256NameNumber_freshVar_15;{  tom.engine.adt.tomsignature.types.TomSymbol  tom_symb=tomMatch256NameNumberfreshSubject_1;{ Object tomMatch256NameNumber_freshVar_10=subtermList;if ( (tomMatch256NameNumber_freshVar_10 instanceof tom.engine.adt.tomslot.types.SlotList) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch256NameNumberfreshSubject_2=(( tom.engine.adt.tomslot.types.SlotList )tomMatch256NameNumber_freshVar_10);{  tom.engine.adt.tomslot.types.SlotList  tomMatch256NameNumber_freshVar_20=tomMatch256NameNumberfreshSubject_2;if ( ((tomMatch256NameNumber_freshVar_20 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch256NameNumber_freshVar_20 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {if (!( tomMatch256NameNumber_freshVar_20.isEmptyconcSlot() )) {{  tom.engine.adt.tomslot.types.Slot  tomMatch256NameNumber_freshVar_25= tomMatch256NameNumber_freshVar_20.getHeadconcSlot() ;if ( (tomMatch256NameNumber_freshVar_25 instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch256NameNumber_freshVar_23= tomMatch256NameNumber_freshVar_25.getSlotName() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch256NameNumber_freshVar_24= tomMatch256NameNumber_freshVar_25.getAppl() ;{  tom.engine.adt.tomname.types.TomName  tom_slotName=tomMatch256NameNumber_freshVar_23;{  tom.engine.adt.tomterm.types.TomTerm  tom_slotAppl=tomMatch256NameNumber_freshVar_24;{  tom.engine.adt.tomslot.types.SlotList  tomMatch256NameNumber_freshVar_21= tomMatch256NameNumber_freshVar_20.getTailconcSlot() ;{  tom.engine.adt.tomslot.types.SlotList  tom_tail=tomMatch256NameNumber_freshVar_21;if ( true ) {



          //System.out.println("codomain = " + `codomain);
          // process a list of subterms and a list of types
          if(TomBase.isListOperator(tom_symb) || TomBase.isArrayOperator(tom_symb)) {
            /*
             * todo:
             * when the symbol is an associative operator,
             * the signature has the form: list conc( element* )
             * the list of types is reduced to the singleton { element }
             *
             * consider a pattern: conc(e1*,x,e2*,y,e3*)
             *  assign the type "element" to each subterm: x and y
             *  assign the type "list" to each subtermlist: e1*,e2* and e3*
             */

            //System.out.println("listoperator: " + `symb);
            //System.out.println("subtermlist: " + subtermList);
            //System.out.println("slotAppl: " + `slotAppl);

            {{ Object tomMatch257NameNumber_freshVar_0=tom_slotAppl;if ( (tomMatch257NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch257NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch257NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch257NameNumber_freshVar_4=tomMatch257NameNumberfreshSubject_1;if ( (tomMatch257NameNumber_freshVar_4 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch257NameNumber_freshVar_1= tomMatch257NameNumber_freshVar_4.getOption() ;{  tom.engine.adt.tomname.types.TomName  tomMatch257NameNumber_freshVar_2= tomMatch257NameNumber_freshVar_4.getAstName() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch257NameNumber_freshVar_3= tomMatch257NameNumber_freshVar_4.getConstraints() ;if ( true ) {

                ConstraintList newconstraints = (ConstraintList)typeVariable(tom_codomain,tomMatch257NameNumber_freshVar_3);
                SlotList sl = typeVariableList(tom_symb,tom_tail);
                return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tom_slotName,  tom.engine.adt.tomterm.types.tomterm.VariableStar.make(tomMatch257NameNumber_freshVar_1, tomMatch257NameNumber_freshVar_2,  tom.engine.adt.tomtype.types.tomtype.TypeWithSymbol.make(tomMatch256NameNumber_freshVar_17, tomMatch256NameNumber_freshVar_18, tomMatch256NameNumber_freshVar_11) , newconstraints) ) ,tom_append_list_concSlot(sl, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
              }}}}}}}}}{ Object tomMatch257NameNumber_freshVar_5=tom_slotAppl;if ( (tomMatch257NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch257NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch257NameNumber_freshVar_5);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch257NameNumber_freshVar_8=tomMatch257NameNumberfreshSubject_1;if ( (tomMatch257NameNumber_freshVar_8 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch257NameNumber_freshVar_6= tomMatch257NameNumber_freshVar_8.getOption() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch257NameNumber_freshVar_7= tomMatch257NameNumber_freshVar_8.getConstraints() ;if ( true ) {


                ConstraintList newconstraints = (ConstraintList)typeVariable(tom_codomain,tomMatch257NameNumber_freshVar_7);
                SlotList sl = typeVariableList(tom_symb,tom_tail);
                return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tom_slotName,  tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar.make(tomMatch257NameNumber_freshVar_6, tom_codomain, newconstraints) ) ,tom_append_list_concSlot(sl, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
              }}}}}}}}{ Object tomMatch257NameNumber_freshVar_9=tom_slotAppl;if ( (tomMatch257NameNumber_freshVar_9 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch257NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch257NameNumber_freshVar_9);if ( true ) {


                TomType domaintype = tomMatch256NameNumber_freshVar_14.getHeadconcTomType();
                SlotList sl = typeVariableList(tom_symb,tom_tail);
                SlotList res =  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tom_slotName, (TomTerm)typeVariable(domaintype,tom_slotAppl)) ,tom_append_list_concSlot(sl, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
                //System.out.println("domaintype = " + domaintype);
                //System.out.println("res = " + res);
                return res;

              }}}}}

          } else {
            SlotList sl = typeVariableList(tom_symb,tom_tail);
            return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tom_slotName, (TomTerm)typeVariable(TomBase.getSlotType(tom_symb,tom_slotName),tom_slotAppl)) ,tom_append_list_concSlot(sl, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
          }
        }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}

    throw new TomRuntimeException("typeVariableList: strange case: '" + symbol + "'");
  }

  private static class replace_replaceInstantiatedVariable extends tom.library.sl.BasicStrategy {private  tom.engine.adt.tomterm.types.TomList  instantiatedVariable;public replace_replaceInstantiatedVariable( tom.engine.adt.tomterm.types.TomList  instantiatedVariable) {super(( new tom.library.sl.Fail() ));this.instantiatedVariable=instantiatedVariable;}public  tom.engine.adt.tomterm.types.TomList  getinstantiatedVariable() {return instantiatedVariable;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch258NameNumber_freshVar_0=tom__arg;if ( (tomMatch258NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch258NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch258NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tom_subject=tomMatch258NameNumberfreshSubject_1;if ( true ) {{{ Object tomMatch259NameNumber_freshVar_0=tom_subject;if ( (tomMatch259NameNumber_freshVar_0 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch259NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch259NameNumber_freshVar_0);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch259NameNumber_freshVar_4=tomMatch259NameNumberfreshSubject_1;if ( (tomMatch259NameNumber_freshVar_4 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch259NameNumber_freshVar_2= tomMatch259NameNumber_freshVar_4.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch259NameNumber_freshVar_3= tomMatch259NameNumber_freshVar_4.getSlots() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch259NameNumber_freshVar_5=tomMatch259NameNumber_freshVar_2;if ( ((tomMatch259NameNumber_freshVar_5 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch259NameNumber_freshVar_5 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {if (!( tomMatch259NameNumber_freshVar_5.isEmptyconcTomName() )) {{  tom.engine.adt.tomname.types.TomName  tom_opNameAST= tomMatch259NameNumber_freshVar_5.getHeadconcTomName() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch259NameNumber_freshVar_6= tomMatch259NameNumber_freshVar_5.getTailconcTomName() ;if ( tomMatch259NameNumber_freshVar_6.isEmptyconcTomName() ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch259NameNumber_freshVar_7=tomMatch259NameNumber_freshVar_3;if ( ((tomMatch259NameNumber_freshVar_7 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch259NameNumber_freshVar_7 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {if ( tomMatch259NameNumber_freshVar_7.isEmptyconcSlot() ) {{ Object tomMatch259NameNumber_freshVar_1=instantiatedVariable;if ( (tomMatch259NameNumber_freshVar_1 instanceof tom.engine.adt.tomterm.types.TomList) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomList )tomMatch259NameNumber_freshVar_1);{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_freshVar_8=tomMatch259NameNumberfreshSubject_2;if ( ((tomMatch259NameNumber_freshVar_8 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch259NameNumber_freshVar_8 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_begin_10=tomMatch259NameNumber_freshVar_8;{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_end_11=tomMatch259NameNumber_freshVar_8;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_freshVar_9=tomMatch259NameNumber_end_11;if (!( tomMatch259NameNumber_freshVar_9.isEmptyconcTomTerm() )) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch259NameNumber_freshVar_15= tomMatch259NameNumber_freshVar_9.getHeadconcTomTerm() ;{ boolean tomMatch259NameNumber_freshVar_17= false ;{  tom.engine.adt.tomname.types.TomName  tomMatch259NameNumber_freshVar_14= null ;if ( (tomMatch259NameNumber_freshVar_15 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch259NameNumber_freshVar_17= true ;tomMatch259NameNumber_freshVar_14= tomMatch259NameNumber_freshVar_15.getAstName() ;}} else {if ( (tomMatch259NameNumber_freshVar_15 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch259NameNumber_freshVar_17= true ;tomMatch259NameNumber_freshVar_14= tomMatch259NameNumber_freshVar_15.getAstName() ;}}}if ((tomMatch259NameNumber_freshVar_17 ==  true )) {{  tom.engine.adt.tomname.types.TomName  tomMatch259NameNumber_freshVar_16=tomMatch259NameNumber_freshVar_14;if ( (tomMatch259NameNumber_freshVar_16==tom_opNameAST) ) {{  tom.engine.adt.tomterm.types.TomTerm  tom_var= tomMatch259NameNumber_freshVar_9.getHeadconcTomTerm() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_freshVar_12= tomMatch259NameNumber_freshVar_9.getTailconcTomTerm() ;if ( true ) {




            return tom_var;
          }}}}}}}}}}}if ( tomMatch259NameNumber_end_11.isEmptyconcTomTerm() ) {tomMatch259NameNumber_end_11=tomMatch259NameNumber_begin_10;} else {tomMatch259NameNumber_end_11= tomMatch259NameNumber_end_11.getTailconcTomTerm() ;}}} while(!( (tomMatch259NameNumber_end_11==tomMatch259NameNumber_begin_10) ));}}}}}}}}}}}}}}}}}}}}}}}{ Object tomMatch259NameNumber_freshVar_18=tom_subject;if ( (tomMatch259NameNumber_freshVar_18 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch259NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch259NameNumber_freshVar_18);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch259NameNumber_freshVar_21=tomMatch259NameNumberfreshSubject_1;if ( (tomMatch259NameNumber_freshVar_21 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch259NameNumber_freshVar_20= tomMatch259NameNumber_freshVar_21.getAstName() ;{ Object tomMatch259NameNumber_freshVar_19=instantiatedVariable;if ( (tomMatch259NameNumber_freshVar_19 instanceof tom.engine.adt.tomterm.types.TomList) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomList )tomMatch259NameNumber_freshVar_19);{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_freshVar_22=tomMatch259NameNumberfreshSubject_2;if ( ((tomMatch259NameNumber_freshVar_22 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch259NameNumber_freshVar_22 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_begin_24=tomMatch259NameNumber_freshVar_22;{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_end_25=tomMatch259NameNumber_freshVar_22;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_freshVar_23=tomMatch259NameNumber_end_25;if (!( tomMatch259NameNumber_freshVar_23.isEmptyconcTomTerm() )) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch259NameNumber_freshVar_29= tomMatch259NameNumber_freshVar_23.getHeadconcTomTerm() ;{ boolean tomMatch259NameNumber_freshVar_31= false ;{  tom.engine.adt.tomname.types.TomName  tomMatch259NameNumber_freshVar_28= null ;if ( (tomMatch259NameNumber_freshVar_29 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch259NameNumber_freshVar_31= true ;tomMatch259NameNumber_freshVar_28= tomMatch259NameNumber_freshVar_29.getAstName() ;}} else {if ( (tomMatch259NameNumber_freshVar_29 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch259NameNumber_freshVar_31= true ;tomMatch259NameNumber_freshVar_28= tomMatch259NameNumber_freshVar_29.getAstName() ;}}}if ((tomMatch259NameNumber_freshVar_31 ==  true )) {{  tom.engine.adt.tomname.types.TomName  tomMatch259NameNumber_freshVar_30=tomMatch259NameNumber_freshVar_28;if ( (tomMatch259NameNumber_freshVar_30==tomMatch259NameNumber_freshVar_20) ) {{  tom.engine.adt.tomterm.types.TomTerm  tom_var= tomMatch259NameNumber_freshVar_23.getHeadconcTomTerm() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_freshVar_26= tomMatch259NameNumber_freshVar_23.getTailconcTomTerm() ;if ( true ) {

            return tom_var;
          }}}}}}}}}}}if ( tomMatch259NameNumber_end_25.isEmptyconcTomTerm() ) {tomMatch259NameNumber_end_25=tomMatch259NameNumber_begin_24;} else {tomMatch259NameNumber_end_25= tomMatch259NameNumber_end_25.getTailconcTomTerm() ;}}} while(!( (tomMatch259NameNumber_end_25==tomMatch259NameNumber_begin_24) ));}}}}}}}}}}}}}{ Object tomMatch259NameNumber_freshVar_32=tom_subject;if ( (tomMatch259NameNumber_freshVar_32 instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch259NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomMatch259NameNumber_freshVar_32);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch259NameNumber_freshVar_35=tomMatch259NameNumberfreshSubject_1;if ( (tomMatch259NameNumber_freshVar_35 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch259NameNumber_freshVar_34= tomMatch259NameNumber_freshVar_35.getAstName() ;{ Object tomMatch259NameNumber_freshVar_33=instantiatedVariable;if ( (tomMatch259NameNumber_freshVar_33 instanceof tom.engine.adt.tomterm.types.TomList) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomList )tomMatch259NameNumber_freshVar_33);{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_freshVar_36=tomMatch259NameNumberfreshSubject_2;if ( ((tomMatch259NameNumber_freshVar_36 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch259NameNumber_freshVar_36 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_begin_38=tomMatch259NameNumber_freshVar_36;{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_end_39=tomMatch259NameNumber_freshVar_36;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_freshVar_37=tomMatch259NameNumber_end_39;if (!( tomMatch259NameNumber_freshVar_37.isEmptyconcTomTerm() )) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch259NameNumber_freshVar_43= tomMatch259NameNumber_freshVar_37.getHeadconcTomTerm() ;if ( (tomMatch259NameNumber_freshVar_43 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch259NameNumber_freshVar_42= tomMatch259NameNumber_freshVar_43.getAstName() ;{  tom.engine.adt.tomname.types.TomName  tomMatch259NameNumber_freshVar_44=tomMatch259NameNumber_freshVar_42;if ( (tomMatch259NameNumber_freshVar_44==tomMatch259NameNumber_freshVar_34) ) {{  tom.engine.adt.tomterm.types.TomTerm  tom_var= tomMatch259NameNumber_freshVar_37.getHeadconcTomTerm() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch259NameNumber_freshVar_40= tomMatch259NameNumber_freshVar_37.getTailconcTomTerm() ;if ( true ) {

            return tom_var;
          }}}}}}}}}}if ( tomMatch259NameNumber_end_39.isEmptyconcTomTerm() ) {tomMatch259NameNumber_end_39=tomMatch259NameNumber_begin_38;} else {tomMatch259NameNumber_end_39= tomMatch259NameNumber_end_39.getTailconcTomTerm() ;}}} while(!( (tomMatch259NameNumber_end_39==tomMatch259NameNumber_begin_38) ));}}}}}}}}}}}}}}

      }}}}}}return _visit_TomTerm(tom__arg,introspector); }public  tom.engine.adt.tomterm.types.TomTerm  _visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomterm.types.TomTerm )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomterm.types.TomTerm )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomterm.types.TomTerm) ) {return visit_TomTerm((( tom.engine.adt.tomterm.types.TomTerm )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_replace_replaceInstantiatedVariable( tom.engine.adt.tomterm.types.TomList  t0) { return new replace_replaceInstantiatedVariable(t0);}



  protected tom.library.sl.Visitable replaceInstantiatedVariable(TomList instantiatedVariable, tom.library.sl.Visitable subject) {
    try {
      //System.out.println("varlist = " + instantiatedVariable);
      //System.out.println("subject = " + subject);
      return tom_make_TopDownStopOnSuccess(tom_make_replace_replaceInstantiatedVariable(instantiatedVariable)).visitLight(subject);
    } catch(tom.library.sl.VisitFailure e) {
      throw new TomRuntimeException("replaceInstantiatedVariable: failure on " + instantiatedVariable);
    }
  }

  private TomType getType(String tomName) {
    TomType tomType = getSymbolTable().getType(tomName);
    return tomType;
  }

  /**
   * Collect the constraints (match and numeric)
   */
  private static class CollectMatchAndNumericConstraints extends tom.library.sl.BasicStrategy {private  java.util.Collection  constrList;public CollectMatchAndNumericConstraints( java.util.Collection  constrList) {super(( new tom.library.sl.Identity() ));this.constrList=constrList;}public  java.util.Collection  getconstrList() {return constrList;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{ Object tomMatch260NameNumber_freshVar_0=tom__arg;if ( (tomMatch260NameNumber_freshVar_0 instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch260NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tomMatch260NameNumber_freshVar_0);{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch260NameNumber_freshVar_1=tomMatch260NameNumberfreshSubject_1;{ boolean tomMatch260NameNumber_freshVar_2= false ;if ( (tomMatch260NameNumber_freshVar_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {tomMatch260NameNumber_freshVar_2= true ;} else {if ( (tomMatch260NameNumber_freshVar_1 instanceof tom.engine.adt.tomconstraint.types.constraint.NumericConstraint) ) {tomMatch260NameNumber_freshVar_2= true ;}}if ((tomMatch260NameNumber_freshVar_2 ==  true )) {if ( true ) {

        
        constrList.add(tomMatch260NameNumberfreshSubject_1);
        throw new VisitFailure();// to stop the top-down
      }}}}}}}}return _visit_Constraint(tom__arg,introspector); }public  tom.engine.adt.tomconstraint.types.Constraint  _visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visit(environment,introspector));} else {return (( tom.engine.adt.tomconstraint.types.Constraint )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {return visit_Constraint((( tom.engine.adt.tomconstraint.types.Constraint )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_CollectMatchAndNumericConstraints( java.util.Collection  t0) { return new CollectMatchAndNumericConstraints(t0);}


}


/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine.typer;

import java.util.*;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.engine.TomBase;
import tom.engine.TomMessage;
import tom.engine.exception.TomRuntimeException;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.tools.SymbolTable;
import tom.engine.tools.ASTFactory;

import tom.library.sl.*;

public class KernelTyper {
  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */     private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Sequence) )) {       if(( ((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Sequence(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else {       return ( (( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin):new tom.library.sl.Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)) );     }   }      private static   tom.library.sl.Strategy  tom_append_list_Choice( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Choice) )) {       if(( ((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )) ==null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Choice(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Choice( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else {       return ( (( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin):new tom.library.sl.Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)) );     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) ); }   /* Generated by TOM (version 2.6alpha): Do not edit this file */ private static  tom.library.sl.Strategy  tom_make_TopDownStop( tom.library.sl.Strategy  v) { return 












 (( new tom.library.sl.Mu(( new tom.library.sl.MuVar("x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ):new tom.library.sl.Choice(( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ),( null )) )==null)?v:new tom.library.sl.Choice(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ):new tom.library.sl.Choice(( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ),( null )) )) )) )) ; }


  private SymbolTable symbolTable;

  public KernelTyper() {
    super();
  }

  public void setSymbolTable(SymbolTable symbolTable) {
    this.symbolTable = symbolTable;
  }

  private SymbolTable getSymbolTable() {
    return symbolTable;
  }

  protected TomSymbol getSymbolFromName(String tomName) {
    return TomBase.getSymbolFromName(tomName, getSymbolTable());
  }

  protected TomSymbol getSymbolFromType(TomType tomType) {
    return TomBase.getSymbolFromType(tomType, getSymbolTable());
  }
  // ------------------------------------------------------------
  /* Generated by TOM (version 2.6alpha): Do not edit this file */   private static   tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_append_list_concConstraintInstruction( tom.engine.adt.tominstruction.types.ConstraintInstructionList l1,  tom.engine.adt.tominstruction.types.ConstraintInstructionList  l2) {     if( l1.isEmptyconcConstraintInstruction() ) {       return l2;     } else if( l2.isEmptyconcConstraintInstruction() ) {       return l1;     } else if(  l1.getTailconcConstraintInstruction() .isEmptyconcConstraintInstruction() ) {       return  tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( l1.getHeadconcConstraintInstruction() ,l2) ;     } else {       return  tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( l1.getHeadconcConstraintInstruction() ,tom_append_list_concConstraintInstruction( l1.getTailconcConstraintInstruction() ,l2)) ;     }   }   private static   tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_get_slice_concConstraintInstruction( tom.engine.adt.tominstruction.types.ConstraintInstructionList  begin,  tom.engine.adt.tominstruction.types.ConstraintInstructionList  end, tom.engine.adt.tominstruction.types.ConstraintInstructionList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( begin.getHeadconcConstraintInstruction() ,( tom.engine.adt.tominstruction.types.ConstraintInstructionList )tom_get_slice_concConstraintInstruction( begin.getTailconcConstraintInstruction() ,end,tail)) ;     }   }      private static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if( l1.isEmptyconcTomName() ) {       return l2;     } else if( l2.isEmptyconcTomName() ) {       return l1;     } else if(  l1.getTailconcTomName() .isEmptyconcTomName() ) {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,l2) ;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,tom_append_list_concTomName( l1.getTailconcTomName() ,l2)) ;     }   }   private static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( begin.getHeadconcTomName() ,( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName( begin.getTailconcTomName() ,end,tail)) ;     }   }      private static   tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList l1,  tom.engine.adt.tomterm.types.TomList  l2) {     if( l1.isEmptyconcTomTerm() ) {       return l2;     } else if( l2.isEmptyconcTomTerm() ) {       return l1;     } else if(  l1.getTailconcTomTerm() .isEmptyconcTomTerm() ) {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( l1.getHeadconcTomTerm() ,l2) ;     } else {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( l1.getHeadconcTomTerm() ,tom_append_list_concTomTerm( l1.getTailconcTomTerm() ,l2)) ;     }   }   private static   tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end, tom.engine.adt.tomterm.types.TomList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( begin.getHeadconcTomTerm() ,( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm( begin.getTailconcTomTerm() ,end,tail)) ;     }   }      private static   tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList l1,  tom.engine.adt.tomoption.types.OptionList  l2) {     if( l1.isEmptyconcOption() ) {       return l2;     } else if( l2.isEmptyconcOption() ) {       return l1;     } else if(  l1.getTailconcOption() .isEmptyconcOption() ) {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( l1.getHeadconcOption() ,l2) ;     } else {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( l1.getHeadconcOption() ,tom_append_list_concOption( l1.getTailconcOption() ,l2)) ;     }   }   private static   tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end, tom.engine.adt.tomoption.types.OptionList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( begin.getHeadconcOption() ,( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption( begin.getTailconcOption() ,end,tail)) ;     }   }      private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {     if( l1.isEmptyconcConstraint() ) {       return l2;     } else if( l2.isEmptyconcConstraint() ) {       return l1;     } else if(  l1.getTailconcConstraint() .isEmptyconcConstraint() ) {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,l2) ;     } else {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( l1.getHeadconcConstraint() ,tom_append_list_concConstraint( l1.getTailconcConstraint() ,l2)) ;     }   }   private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end, tom.engine.adt.tomconstraint.types.ConstraintList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make( begin.getHeadconcConstraint() ,( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint( begin.getTailconcConstraint() ,end,tail)) ;     }   }      private static   tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList l1,  tom.engine.adt.tomslot.types.SlotList  l2) {     if( l1.isEmptyconcSlot() ) {       return l2;     } else if( l2.isEmptyconcSlot() ) {       return l1;     } else if(  l1.getTailconcSlot() .isEmptyconcSlot() ) {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,l2) ;     } else {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( l1.getHeadconcSlot() ,tom_append_list_concSlot( l1.getTailconcSlot() ,l2)) ;     }   }   private static   tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end, tom.engine.adt.tomslot.types.SlotList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( begin.getHeadconcSlot() ,( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot( begin.getTailconcSlot() ,end,tail)) ;     }   }    
  // ------------------------------------------------------------

  /*
   * The "typeVariable" phase types RecordAppl into Variable
   * we focus on
   * - Match
   *
   * The types of subjects are inferred from the patterns
   *
   * Variable and TermAppl are typed in the TomTerm case
   */

  protected tom.library.sl.Visitable typeType(tom.library.sl.Visitable subject) {
    try {
      return tom_make_TopDown(tom_make_typeType(this)).visit(subject);
    } catch(tom.library.sl.VisitFailure e) {
      throw new TomRuntimeException("typeType: failure on " + subject);
    }
  }
  private static class typeType extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  KernelTyper  typeer; public typeType( KernelTyper  typeer) { super(( new tom.library.sl.Identity() ));this.typeer=typeer;}public  KernelTyper  gettypeer() { return typeer;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomtype.types.TomType  visit_TomType( tom.engine.adt.tomtype.types.TomType  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch231NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )tom__arg);if ( (tomMatch231NameNumberfreshSubject_1 instanceof tom.engine.adt.tomtype.types.tomtype.TomTypeAlone) ) {{  String  tomMatch231NameNumber_freshVar_0= tomMatch231NameNumberfreshSubject_1.getString() ;if ( true ) {


        TomType type = typeer.getType(tomMatch231NameNumber_freshVar_0);
        if(type != null) {
          return type;
        } else {
          return tomMatch231NameNumberfreshSubject_1; // useful for TomTypeAlone("unknown type")
        }
      }}}}}}return super.visit_TomType(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_typeType( KernelTyper  t0) { return new typeType(t0); }private static class replace_typeVariable extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  tom.engine.adt.tomtype.types.TomType  contextType; private  KernelTyper  typeer; public replace_typeVariable( tom.engine.adt.tomtype.types.TomType  contextType,  KernelTyper  typeer) { super(( new tom.library.sl.Fail() ));this.contextType=contextType;this.typeer=typeer;}public  tom.engine.adt.tomtype.types.TomType  getcontextType() { return contextType;}public  KernelTyper  gettypeer() { return typeer;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomoption.types.Option  visit_Option( tom.engine.adt.tomoption.types.Option  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomoption.types.Option) ) {{  tom.engine.adt.tomoption.types.Option  tomMatch232NameNumberfreshSubject_1=(( tom.engine.adt.tomoption.types.Option )tom__arg);if ( (tomMatch232NameNumberfreshSubject_1 instanceof tom.engine.adt.tomoption.types.option.OriginTracking) ) {if ( true ) {






 return tomMatch232NameNumberfreshSubject_1; }}}}}return super.visit_Option(tom__arg,introspector); }public  tom.engine.adt.tomsignature.types.TargetLanguage  visit_TargetLanguage( tom.engine.adt.tomsignature.types.TargetLanguage  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomsignature.types.TargetLanguage) ) {{  tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch233NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TargetLanguage )tom__arg);if ( (tomMatch233NameNumberfreshSubject_1 instanceof tom.engine.adt.tomsignature.types.targetlanguage.TL) ) {if ( true ) {



 return tomMatch233NameNumberfreshSubject_1; }}}}if ( (tom__arg instanceof tom.engine.adt.tomsignature.types.TargetLanguage) ) {{  tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch233NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TargetLanguage )tom__arg);if ( (tomMatch233NameNumberfreshSubject_1 instanceof tom.engine.adt.tomsignature.types.targetlanguage.ITL) ) {if ( true ) {
 return tomMatch233NameNumberfreshSubject_1; }}}}if ( (tom__arg instanceof tom.engine.adt.tomsignature.types.TargetLanguage) ) {{  tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch233NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TargetLanguage )tom__arg);if ( (tomMatch233NameNumberfreshSubject_1 instanceof tom.engine.adt.tomsignature.types.targetlanguage.Comment) ) {if ( true ) {
 return tomMatch233NameNumberfreshSubject_1; }}}}}return super.visit_TargetLanguage(tom__arg,introspector); }public  tom.engine.adt.tomtype.types.TomType  visit_TomType( tom.engine.adt.tomtype.types.TomType  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch234NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )tom__arg);if ( (tomMatch234NameNumberfreshSubject_1 instanceof tom.engine.adt.tomtype.types.tomtype.TomTypeAlone) ) {{  String  tomMatch234NameNumber_freshVar_0= tomMatch234NameNumberfreshSubject_1.getString() ;if ( true ) {




        TomType type = typeer.getType(tomMatch234NameNumber_freshVar_0);
        if(type != null) {
          return type;
        } else {
          return tomMatch234NameNumberfreshSubject_1; // useful for TomTypeAlone("unknown type")
        }
      }}}}}}return super.visit_TomType(tom__arg,introspector); }public  tom.engine.adt.tomsignature.types.TomVisit  visit_TomVisit( tom.engine.adt.tomsignature.types.TomVisit  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomsignature.types.TomVisit) ) {{  tom.engine.adt.tomsignature.types.TomVisit  tomMatch235NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomVisit )tom__arg);if ( (tomMatch235NameNumberfreshSubject_1 instanceof tom.engine.adt.tomsignature.types.tomvisit.VisitTerm) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch235NameNumber_freshVar_0= tomMatch235NameNumberfreshSubject_1.getVNode() ;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch235NameNumber_freshVar_1= tomMatch235NameNumberfreshSubject_1.getAstConstraintInstructionList() ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch235NameNumber_freshVar_2= tomMatch235NameNumberfreshSubject_1.getOption() ;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_constraintInstructionList=tomMatch235NameNumber_freshVar_1;if ( true ) {




        ArrayList<Constraint> constraints = new ArrayList<Constraint>();
        tom_make_TopDown(tom_make_CollectConstraints(constraints)).visitLight(tom_constraintInstructionList);
        TomType newType = (TomType)typeer.typeVariable(contextType,tomMatch235NameNumber_freshVar_0);
        ConstraintInstructionList newConstraintInstructionList =  tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction.make() ;
        {if ( (tom_constraintInstructionList instanceof tom.engine.adt.tominstruction.types.ConstraintInstructionList) ) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch236NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.ConstraintInstructionList )tom_constraintInstructionList);if ( ((tomMatch236NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction) || (tomMatch236NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction)) ) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch236NameNumber_freshVar_0=tomMatch236NameNumberfreshSubject_1;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch236NameNumber_begin_2=tomMatch236NameNumber_freshVar_0;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch236NameNumber_end_3=tomMatch236NameNumber_freshVar_0;do {{{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch236NameNumber_freshVar_1=tomMatch236NameNumber_end_3;if (!( tomMatch236NameNumber_freshVar_1.isEmptyconcConstraintInstruction() )) {if ( ( tomMatch236NameNumber_freshVar_1.getHeadconcConstraintInstruction()  instanceof tom.engine.adt.tominstruction.types.constraintinstruction.ConstraintInstruction) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch236NameNumber_freshVar_6=  tomMatch236NameNumber_freshVar_1.getHeadconcConstraintInstruction() .getConstraint() ;{  tom.engine.adt.tominstruction.types.Instruction  tomMatch236NameNumber_freshVar_7=  tomMatch236NameNumber_freshVar_1.getHeadconcConstraintInstruction() .getAction() ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch236NameNumber_freshVar_8=  tomMatch236NameNumber_freshVar_1.getHeadconcConstraintInstruction() .getOption() ;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch236NameNumber_freshVar_4= tomMatch236NameNumber_freshVar_1.getTailconcConstraintInstruction() ;if ( true ) {

            /*
             * Try to guess types for tomSubjectList
             */
            ArrayList<TomTerm> newPatternList = new ArrayList<TomTerm>();
            Constraint newConstraint = (Constraint)tom_make_TopDown(tom_make_typeConstraint(newType,newPatternList,constraints,typeer)).visitLight(tomMatch236NameNumber_freshVar_6);
            Instruction newAction = typeAction(tomMatch236NameNumber_freshVar_7,ASTFactory.makeList(newPatternList),typeer);
            newConstraintInstructionList = tom_append_list_concConstraintInstruction(newConstraintInstructionList, tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( tom.engine.adt.tominstruction.types.constraintinstruction.ConstraintInstruction.make(newConstraint, newAction, tomMatch236NameNumber_freshVar_8) , tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction.make() ) );
          }}}}}}}}if ( tomMatch236NameNumber_end_3.isEmptyconcConstraintInstruction() ) {tomMatch236NameNumber_end_3=tomMatch236NameNumber_begin_2;} else {tomMatch236NameNumber_end_3= tomMatch236NameNumber_end_3.getTailconcConstraintInstruction() ;}}} while(!( tomMatch236NameNumber_end_3.equals(tomMatch236NameNumber_begin_2) ));}}}}}}}
        
        return  tom.engine.adt.tomsignature.types.tomvisit.VisitTerm.make(newType, newConstraintInstructionList, tomMatch235NameNumber_freshVar_2) ;   
      }}}}}}}}}return super.visit_TomVisit(tom__arg,introspector); }public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction( tom.engine.adt.tominstruction.types.Instruction  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tominstruction.types.Instruction) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch237NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg);if ( (tomMatch237NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.Match) ) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch237NameNumber_freshVar_0= tomMatch237NameNumberfreshSubject_1.getConstraintInstructionList() ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch237NameNumber_freshVar_1= tomMatch237NameNumberfreshSubject_1.getOption() ;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tom_constraintInstructionList=tomMatch237NameNumber_freshVar_0;if ( true ) {









        ArrayList<Constraint> constraints = new ArrayList<Constraint>();
        tom_make_TopDown(tom_make_CollectConstraints(constraints)).visitLight(tom_constraintInstructionList);
        ConstraintInstructionList newConstraintInstructionList =  tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction.make() ;
        {if ( (tom_constraintInstructionList instanceof tom.engine.adt.tominstruction.types.ConstraintInstructionList) ) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch238NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.ConstraintInstructionList )tom_constraintInstructionList);if ( ((tomMatch238NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction) || (tomMatch238NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction)) ) {{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch238NameNumber_freshVar_0=tomMatch238NameNumberfreshSubject_1;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch238NameNumber_begin_2=tomMatch238NameNumber_freshVar_0;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch238NameNumber_end_3=tomMatch238NameNumber_freshVar_0;do {{{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch238NameNumber_freshVar_1=tomMatch238NameNumber_end_3;if (!( tomMatch238NameNumber_freshVar_1.isEmptyconcConstraintInstruction() )) {if ( ( tomMatch238NameNumber_freshVar_1.getHeadconcConstraintInstruction()  instanceof tom.engine.adt.tominstruction.types.constraintinstruction.ConstraintInstruction) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch238NameNumber_freshVar_6=  tomMatch238NameNumber_freshVar_1.getHeadconcConstraintInstruction() .getConstraint() ;{  tom.engine.adt.tominstruction.types.Instruction  tomMatch238NameNumber_freshVar_7=  tomMatch238NameNumber_freshVar_1.getHeadconcConstraintInstruction() .getAction() ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch238NameNumber_freshVar_8=  tomMatch238NameNumber_freshVar_1.getHeadconcConstraintInstruction() .getOption() ;{  tom.engine.adt.tominstruction.types.ConstraintInstructionList  tomMatch238NameNumber_freshVar_4= tomMatch238NameNumber_freshVar_1.getTailconcConstraintInstruction() ;if ( true ) {

            /*
             * Try to guess types for tomSubjectList
             */
            ArrayList<TomTerm> newPatternList = new ArrayList<TomTerm>();
            Constraint newConstraint = (Constraint)tom_make_TopDown(tom_make_typeConstraint(contextType,newPatternList,constraints,typeer)).visitLight(tomMatch238NameNumber_freshVar_6);
            Instruction newAction = typeAction(tomMatch238NameNumber_freshVar_7,ASTFactory.makeList(newPatternList),typeer);
            newConstraintInstructionList = tom_append_list_concConstraintInstruction(newConstraintInstructionList, tom.engine.adt.tominstruction.types.constraintinstructionlist.ConsconcConstraintInstruction.make( tom.engine.adt.tominstruction.types.constraintinstruction.ConstraintInstruction.make(newConstraint, newAction, tomMatch238NameNumber_freshVar_8) , tom.engine.adt.tominstruction.types.constraintinstructionlist.EmptyconcConstraintInstruction.make() ) );
          }}}}}}}}if ( tomMatch238NameNumber_end_3.isEmptyconcConstraintInstruction() ) {tomMatch238NameNumber_end_3=tomMatch238NameNumber_begin_2;} else {tomMatch238NameNumber_end_3= tomMatch238NameNumber_end_3.getTailconcConstraintInstruction() ;}}} while(!( tomMatch238NameNumber_end_3.equals(tomMatch238NameNumber_begin_2) ));}}}}}}}
        
        return  tom.engine.adt.tominstruction.types.instruction.Match.make(newConstraintInstructionList, tomMatch237NameNumber_freshVar_1) ;      
      }}}}}}}}return super.visit_Instruction(tom__arg,introspector); }public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch239NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg);if ( (tomMatch239NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch239NameNumber_freshVar_0= tomMatch239NameNumberfreshSubject_1.getOption() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch239NameNumber_freshVar_1= tomMatch239NameNumberfreshSubject_1.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch239NameNumber_freshVar_2= tomMatch239NameNumberfreshSubject_1.getSlots() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch239NameNumber_freshVar_3= tomMatch239NameNumberfreshSubject_1.getConstraints() ;{  tom.engine.adt.tomoption.types.OptionList  tom_option=tomMatch239NameNumber_freshVar_0;if ( ((tomMatch239NameNumber_freshVar_1 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch239NameNumber_freshVar_1 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch239NameNumber_freshVar_4=tomMatch239NameNumber_freshVar_1;{  tom.engine.adt.tomname.types.TomNameList  tom_nameList=tomMatch239NameNumber_freshVar_1;if (!( tomMatch239NameNumber_freshVar_4.isEmptyconcTomName() )) {if ( ( tomMatch239NameNumber_freshVar_4.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch239NameNumber_freshVar_7=  tomMatch239NameNumber_freshVar_4.getHeadconcTomName() .getString() ;{  String  tom_tomName=tomMatch239NameNumber_freshVar_7;{  tom.engine.adt.tomname.types.TomNameList  tomMatch239NameNumber_freshVar_5= tomMatch239NameNumber_freshVar_4.getTailconcTomName() ;{  tom.engine.adt.tomslot.types.SlotList  tom_slotList=tomMatch239NameNumber_freshVar_2;{  tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tomMatch239NameNumber_freshVar_3;if ( true ) {




        TomSymbol tomSymbol = null;
        if(tom_tomName.equals("")) {
          try {
            tomSymbol = typeer.getSymbolFromType(contextType);
            if(tomSymbol==null) {
              throw new TomRuntimeException("No symbol found for type '" + contextType + "'");
            }
            tom_nameList=  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(tomSymbol.getAstName(), tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ) ;
          } catch(UnsupportedOperationException e) {
            // contextType has no AstType slot
            tomSymbol = null;
          }
        } else {
          tomSymbol = typeer.getSymbolFromName(tom_tomName);
        }

        if(tomSymbol != null) {
          SlotList subterm = typeer.typeVariableList(tomSymbol, tom_slotList);
          ConstraintList newConstraints = (ConstraintList)typeer.typeVariable(TomBase.getSymbolCodomain(tomSymbol),tom_constraints);
          return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(tom_option, tom_nameList, subterm, newConstraints) ;
        } else {
          {if ( (contextType instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch240NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )contextType);if ( (tomMatch240NameNumberfreshSubject_1 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {if ( true ) {

              SlotList subterm = typeer.typeVariableList( tom.engine.adt.tomsignature.types.tomsymbol.emptySymbol.make() , tom_slotList);
              ConstraintList newConstraints = (ConstraintList)typeer.typeVariable(tomMatch240NameNumberfreshSubject_1,tom_constraints);
              return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(tom_option, tom_nameList, subterm, newConstraints) ;
            }}}}if ( (contextType instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch240NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )contextType);if ( true ) {


              // do nothing
              //System.out.println("contextType = " + contextType);
              //System.out.println("subject        = " + subject);
            }}}}

        }
      }}}}}}}}}}}}}}}}}}}if ( (tom__arg instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch239NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg);{ boolean tomMatch239NameNumber_freshVar_11= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch239NameNumber_freshVar_9= null ;{  tom.engine.adt.tomtype.types.TomType  tomMatch239NameNumber_freshVar_8= null ;if ( (tomMatch239NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch239NameNumber_freshVar_11= true ;tomMatch239NameNumber_freshVar_8= tomMatch239NameNumberfreshSubject_1.getAstType() ;tomMatch239NameNumber_freshVar_9= tomMatch239NameNumberfreshSubject_1.getConstraints() ;}} else {if ( (tomMatch239NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable) ) {{tomMatch239NameNumber_freshVar_11= true ;tomMatch239NameNumber_freshVar_8= tomMatch239NameNumberfreshSubject_1.getAstType() ;tomMatch239NameNumber_freshVar_9= tomMatch239NameNumberfreshSubject_1.getConstraints() ;}}}if ((tomMatch239NameNumber_freshVar_11 ==  true )) {if ( (tomMatch239NameNumber_freshVar_8 instanceof tom.engine.adt.tomtype.types.tomtype.TomTypeAlone) ) {{  String  tomMatch239NameNumber_freshVar_10= tomMatch239NameNumber_freshVar_8.getString() ;{  tom.engine.adt.tomterm.types.TomTerm  tom_var=tomMatch239NameNumberfreshSubject_1;if ( true ) {


        TomType localType = typeer.getType(tomMatch239NameNumber_freshVar_10);
        //System.out.println("localType = " + localType);
        if(localType != null) {
          // The variable has already a known type
          return tom_var.setAstType(localType);
        }

        //System.out.println("contextType = " + contextType);
        {if ( (contextType instanceof tom.engine.adt.tomtype.types.TomType) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch241NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )contextType);if ( (tomMatch241NameNumberfreshSubject_1 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {{  tom.engine.adt.tomtype.types.TomType  tom_ctype=tomMatch241NameNumberfreshSubject_1;if ( true ) {

            ConstraintList newConstraints = (ConstraintList)typeer.typeVariable(tom_ctype,tomMatch239NameNumber_freshVar_9);
            TomTerm newVar = tom_var.setAstType(tom_ctype);
            //System.out.println("newVar = " + newVar);
            return newVar.setConstraints(newConstraints);
          }}}}}}

      }}}}}}}}}}}return super.visit_TomTerm(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_replace_typeVariable( tom.engine.adt.tomtype.types.TomType  t0,  KernelTyper  t1) { return new replace_typeVariable(t0,t1); }


  
  private static Instruction typeAction(Instruction action, TomList newPatternList, KernelTyper typeer) { 
    //  build the list of variables that occur in the lhs
    HashSet set = new HashSet();
    TomBase.collectVariable(set,newPatternList);
    TomList varList = ASTFactory.makeList(set);
    Instruction newAction = (Instruction)typeer.replaceInstantiatedVariable(varList,action);
    //System.out.println("newAction1 = " + newAction);
    newAction = (Instruction)typeer.typeVariable( tom.engine.adt.tomtype.types.tomtype.EmptyType.make() ,newAction);
    return newAction;
  }
  
  /**
   * Try to guess the type for the subjects
   */
  private static class typeConstraint extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  tom.engine.adt.tomtype.types.TomType  contextType; private  java.util.Collection  newPatternList; private  java.util.Collection  constraintList; private  KernelTyper  typeer; public typeConstraint( tom.engine.adt.tomtype.types.TomType  contextType,  java.util.Collection  newPatternList,  java.util.Collection  constraintList,  KernelTyper  typeer) { super(( new tom.library.sl.Identity() ));this.contextType=contextType;this.newPatternList=newPatternList;this.constraintList=constraintList;this.typeer=typeer;}public  tom.engine.adt.tomtype.types.TomType  getcontextType() { return contextType;}public  java.util.Collection  getnewPatternList() { return newPatternList;}public  java.util.Collection  getconstraintList() { return constraintList;}public  KernelTyper  gettypeer() { return typeer;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{visitL: {if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch242NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);{  tom.engine.adt.tomconstraint.types.Constraint  tom_constr=tomMatch242NameNumberfreshSubject_1;if ( true ) {


        TomTerm subject = null;
        TomTerm pattern = null;
        NumericConstraintType numericType = null;
        boolean isMatchConstraint = false;
 matchL:{if ( (tom_constr instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch243NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom_constr);if ( (tomMatch243NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch243NameNumber_freshVar_0= tomMatch243NameNumberfreshSubject_1.getpattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch243NameNumber_freshVar_1= tomMatch243NameNumberfreshSubject_1.getsubject() ;if ( true ) {
pattern = tomMatch243NameNumber_freshVar_0;subject = tomMatch243NameNumber_freshVar_1;isMatchConstraint = true;break matchL;}}}}}}if ( (tom_constr instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch243NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom_constr);if ( (tomMatch243NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.NumericConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch243NameNumber_freshVar_2= tomMatch243NameNumberfreshSubject_1.getLeft() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch243NameNumber_freshVar_3= tomMatch243NameNumberfreshSubject_1.getRight() ;{  tom.engine.adt.tomconstraint.types.NumericConstraintType  tomMatch243NameNumber_freshVar_4= tomMatch243NameNumberfreshSubject_1.getType() ;if ( true ) {
pattern = tomMatch243NameNumber_freshVar_2;subject = tomMatch243NameNumber_freshVar_3;numericType = tomMatch243NameNumber_freshVar_4;break matchL;}}}}}}}if ( (tom_constr instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch243NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom_constr);if ( true ) {
 break visitL; }}}}

        TomTerm newSubject = null;
        TomType newSubjectType = null;        
        {if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch244NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);{ boolean tomMatch244NameNumber_freshVar_5= false ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch244NameNumber_freshVar_3= null ;{  tom.engine.adt.tomtype.types.TomType  tomMatch244NameNumber_freshVar_2= null ;{  tom.engine.adt.tomname.types.TomName  tomMatch244NameNumber_freshVar_1= null ;{  tom.engine.adt.tomoption.types.OptionList  tomMatch244NameNumber_freshVar_0= null ;if ( (tomMatch244NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch244NameNumber_freshVar_5= true ;tomMatch244NameNumber_freshVar_0= tomMatch244NameNumberfreshSubject_1.getOption() ;tomMatch244NameNumber_freshVar_1= tomMatch244NameNumberfreshSubject_1.getAstName() ;tomMatch244NameNumber_freshVar_2= tomMatch244NameNumberfreshSubject_1.getAstType() ;tomMatch244NameNumber_freshVar_3= tomMatch244NameNumberfreshSubject_1.getConstraints() ;}} else {if ( (tomMatch244NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch244NameNumber_freshVar_5= true ;tomMatch244NameNumber_freshVar_0= tomMatch244NameNumberfreshSubject_1.getOption() ;tomMatch244NameNumber_freshVar_1= tomMatch244NameNumberfreshSubject_1.getAstName() ;tomMatch244NameNumber_freshVar_2= tomMatch244NameNumberfreshSubject_1.getAstType() ;tomMatch244NameNumber_freshVar_3= tomMatch244NameNumberfreshSubject_1.getConstraints() ;}}}if ((tomMatch244NameNumber_freshVar_5 ==  true )) {if ( (tomMatch244NameNumber_freshVar_1 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch244NameNumber_freshVar_4= tomMatch244NameNumber_freshVar_1.getString() ;if ( true ) {

            TomTerm newVariable = null;
            // tomType may be a TomTypeAlone or a type from an typed variable
            String type = TomBase.getTomType(tomMatch244NameNumber_freshVar_2);
            //System.out.println("match type = " + type);
            if(typeer.getType(type) == null) {
              /* the subject is a variable with an unknown type */
              newSubjectType = typeer.guessSubjectType(subject,constraintList);
              if( newSubjectType != null ) {
                newVariable =  tom.engine.adt.tomterm.types.tomterm.Variable.make(tomMatch244NameNumber_freshVar_0, tomMatch244NameNumber_freshVar_1, newSubjectType, tomMatch244NameNumber_freshVar_3) ;
              } else {
                throw new TomRuntimeException("No symbol found for name '" + tomMatch244NameNumber_freshVar_4+ "'");
              }
            } else {
              newVariable = subject;
            }
            if(newVariable == null) {
              throw new TomRuntimeException("Type cannot be guessed for '" + subject+ "'");
            } else {
              newSubject = newVariable;
              newSubjectType = newVariable.getAstType();
            }                  
          }}}}}}}}}}}if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch244NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);{ boolean tomMatch244NameNumber_freshVar_11= false ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch244NameNumber_freshVar_6= null ;if ( (tomMatch244NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{tomMatch244NameNumber_freshVar_11= true ;tomMatch244NameNumber_freshVar_6= tomMatch244NameNumberfreshSubject_1.getNameList() ;}} else {if ( (tomMatch244NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{tomMatch244NameNumber_freshVar_11= true ;tomMatch244NameNumber_freshVar_6= tomMatch244NameNumberfreshSubject_1.getNameList() ;}}}if ((tomMatch244NameNumber_freshVar_11 ==  true )) {if ( ((tomMatch244NameNumber_freshVar_6 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch244NameNumber_freshVar_6 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch244NameNumber_freshVar_7=tomMatch244NameNumber_freshVar_6;if (!( tomMatch244NameNumber_freshVar_7.isEmptyconcTomName() )) {if ( ( tomMatch244NameNumber_freshVar_7.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch244NameNumber_freshVar_10=  tomMatch244NameNumber_freshVar_7.getHeadconcTomName() .getString() ;{  String  tom_name=tomMatch244NameNumber_freshVar_10;{  tom.engine.adt.tomname.types.TomNameList  tomMatch244NameNumber_freshVar_8= tomMatch244NameNumber_freshVar_7.getTailconcTomName() ;if ( true ) {


            TomSymbol symbol = typeer.getSymbolFromName(tom_name);
            TomType type = null;
            if(symbol!=null) {
              type = TomBase.getSymbolCodomain(symbol);
            } else {
              // unknown function call
              type = typeer.guessSubjectType(subject,constraintList);
            }
            if( type != null ) {
              newSubject =  tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm.make(tomMatch244NameNumberfreshSubject_1, type) ;
            } else {
              throw new TomRuntimeException("No symbol found for name '" + tom_name+ "'");
            }
            newSubjectType = type;                    
          }}}}}}}}}}}}}if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch244NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if ( (tomMatch244NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.TomTypeToTomTerm) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch244NameNumber_freshVar_12= tomMatch244NameNumberfreshSubject_1.getAstType() ;{  tom.engine.adt.tomtype.types.TomType  tom_type=tomMatch244NameNumber_freshVar_12;if ( true ) {


            newSubject =  tom.engine.adt.tomterm.types.tomterm.Variable.make( tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ,  tom.engine.adt.tomname.types.tomname.Name.make("tom__arg") , tom_type,  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ) ;
            newSubjectType = tom_type;
          }}}}}}if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch244NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if ( (tomMatch244NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch244NameNumber_freshVar_13= tomMatch244NameNumberfreshSubject_1.getAstType() ;if ( true ) {


            
            newSubjectType = tomMatch244NameNumber_freshVar_13;
            newSubject = tomMatch244NameNumberfreshSubject_1;
          }}}}}}

 // end match subject        
        newSubjectType = (TomType)typeer.typeVariable(contextType,newSubjectType);
        newSubject = (TomTerm)typeer.typeVariable(newSubjectType, newSubject);
        TomTerm newPattern = (TomTerm)typeer.typeVariable(newSubjectType, pattern);
        newPatternList.add(newPattern);
        return isMatchConstraint ?  tom.engine.adt.tomconstraint.types.constraint.MatchConstraint.make(newPattern, newSubject)  :  tom.engine.adt.tomconstraint.types.constraint.NumericConstraint.make(newPattern, newSubject, numericType) ;
      }}}}}}return super.visit_Constraint(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_typeConstraint( tom.engine.adt.tomtype.types.TomType  t0,  java.util.Collection  t1,  java.util.Collection  t2,  KernelTyper  t3) { return new typeConstraint(t0,t1,t2,t3); }

 

  private TomType guessSubjectType(TomTerm subject, Collection matchConstraints){    
    for(Object constr:matchConstraints){
      {if ( (constr instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch245NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )constr);if ( (tomMatch245NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch245NameNumber_freshVar_0= tomMatch245NameNumberfreshSubject_1.getpattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch245NameNumber_freshVar_1= tomMatch245NameNumberfreshSubject_1.getsubject() ;{  tom.engine.adt.tomterm.types.TomTerm  tom_pattern=tomMatch245NameNumber_freshVar_0;{  tom.engine.adt.tomterm.types.TomTerm  tom_s=tomMatch245NameNumber_freshVar_1;if ( true ) {

          // we want two terms to be equal even if their option is different 
          //( because of their possition for example )
matchL:  {if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if ( (tomMatch246NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch246NameNumber_freshVar_0= tomMatch246NameNumberfreshSubject_1.getAstName() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch246NameNumber_freshVar_1= tomMatch246NameNumberfreshSubject_1.getAstType() ;if ( (tom_s instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_s);if ( (tomMatch246NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch246NameNumber_freshVar_2= tomMatch246NameNumberfreshSubject_2.getAstName() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch246NameNumber_freshVar_3= tomMatch246NameNumberfreshSubject_2.getAstType() ;{  tom.engine.adt.tomname.types.TomName  tomMatch246NameNumber_freshVar_4=tomMatch246NameNumber_freshVar_2;if ( tomMatch246NameNumber_freshVar_4.equals(tomMatch246NameNumber_freshVar_0) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch246NameNumber_freshVar_5=tomMatch246NameNumber_freshVar_3;if ( tomMatch246NameNumber_freshVar_5.equals(tomMatch246NameNumber_freshVar_1) ) {if ( true ) {
break matchL;}}}}}}}}}}}}}}}if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if ( (tomMatch246NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_6= tomMatch246NameNumberfreshSubject_1.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_7= tomMatch246NameNumberfreshSubject_1.getArgs() ;if ( (tom_s instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_s);if ( (tomMatch246NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_8= tomMatch246NameNumberfreshSubject_2.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_9= tomMatch246NameNumberfreshSubject_2.getArgs() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_10=tomMatch246NameNumber_freshVar_8;if ( tomMatch246NameNumber_freshVar_10.equals(tomMatch246NameNumber_freshVar_6) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_11=tomMatch246NameNumber_freshVar_9;if ( tomMatch246NameNumber_freshVar_11.equals(tomMatch246NameNumber_freshVar_7) ) {if ( true ) {
break matchL;}}}}}}}}}}}}}}}if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if ( (tomMatch246NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_12= tomMatch246NameNumberfreshSubject_1.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch246NameNumber_freshVar_13= tomMatch246NameNumberfreshSubject_1.getSlots() ;if ( (tom_s instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_s);if ( (tomMatch246NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_14= tomMatch246NameNumberfreshSubject_2.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch246NameNumber_freshVar_15= tomMatch246NameNumberfreshSubject_2.getSlots() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_16=tomMatch246NameNumber_freshVar_14;if ( tomMatch246NameNumber_freshVar_16.equals(tomMatch246NameNumber_freshVar_12) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch246NameNumber_freshVar_17=tomMatch246NameNumber_freshVar_15;if ( tomMatch246NameNumber_freshVar_17.equals(tomMatch246NameNumber_freshVar_13) ) {if ( true ) {
break matchL;}}}}}}}}}}}}}}}if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if ( (tomMatch246NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.XMLAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_18= tomMatch246NameNumberfreshSubject_1.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_19= tomMatch246NameNumberfreshSubject_1.getAttrList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_20= tomMatch246NameNumberfreshSubject_1.getChildList() ;{  tom.engine.adt.tomterm.types.TomList  tom_tomList=tomMatch246NameNumber_freshVar_19;{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_25=tomMatch246NameNumber_freshVar_20;if ( tomMatch246NameNumber_freshVar_25.equals(tom_tomList) ) {if ( (tom_s instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_s);if ( (tomMatch246NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.XMLAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_21= tomMatch246NameNumberfreshSubject_2.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_22= tomMatch246NameNumberfreshSubject_2.getAttrList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_23= tomMatch246NameNumberfreshSubject_2.getChildList() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_24=tomMatch246NameNumber_freshVar_21;if ( tomMatch246NameNumber_freshVar_24.equals(tomMatch246NameNumber_freshVar_18) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_26=tomMatch246NameNumber_freshVar_22;if ( tomMatch246NameNumber_freshVar_26.equals(tom_tomList) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_27=tomMatch246NameNumber_freshVar_23;if ( tomMatch246NameNumber_freshVar_27.equals(tom_tomList) ) {if ( true ) {
 break matchL; }}}}}}}}}}}}}}}}}}}}}}if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if ( (tomMatch246NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumber_freshVar_28= tomMatch246NameNumberfreshSubject_1.getTomTerm() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch246NameNumber_freshVar_29= tomMatch246NameNumberfreshSubject_1.getAstType() ;if ( (tomMatch246NameNumber_freshVar_28 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_30= tomMatch246NameNumber_freshVar_28.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_31= tomMatch246NameNumber_freshVar_28.getArgs() ;if ( (tom_s instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_s);if ( (tomMatch246NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomterm.BuildReducedTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumber_freshVar_32= tomMatch246NameNumberfreshSubject_2.getTomTerm() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch246NameNumber_freshVar_33= tomMatch246NameNumberfreshSubject_2.getAstType() ;if ( (tomMatch246NameNumber_freshVar_32 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_34= tomMatch246NameNumber_freshVar_32.getNameList() ;{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_35= tomMatch246NameNumber_freshVar_32.getArgs() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch246NameNumber_freshVar_36=tomMatch246NameNumber_freshVar_34;if ( tomMatch246NameNumber_freshVar_36.equals(tomMatch246NameNumber_freshVar_30) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch246NameNumber_freshVar_37=tomMatch246NameNumber_freshVar_35;if ( tomMatch246NameNumber_freshVar_37.equals(tomMatch246NameNumber_freshVar_31) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch246NameNumber_freshVar_38=tomMatch246NameNumber_freshVar_33;if ( tomMatch246NameNumber_freshVar_38.equals(tomMatch246NameNumber_freshVar_29) ) {if ( true ) {
break matchL;}}}}}}}}}}}}}}}}}}}}}}}if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if ( (tom_s instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch246NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomTerm )tom_s);if ( true ) {
 continue; }}}}}}

          TomTerm patt = tom_pattern;
          {if ( (tom_pattern instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch247NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_pattern);if ( (tomMatch247NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch247NameNumber_freshVar_0= tomMatch247NameNumberfreshSubject_1.getTomTerm() ;if ( true ) {
 patt = tomMatch247NameNumber_freshVar_0; }}}}}}{if ( (patt instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch248NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )patt);{ boolean tomMatch248NameNumber_freshVar_5= false ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch248NameNumber_freshVar_0= null ;if ( (tomMatch248NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ) {{tomMatch248NameNumber_freshVar_5= true ;tomMatch248NameNumber_freshVar_0= tomMatch248NameNumberfreshSubject_1.getNameList() ;}} else {if ( (tomMatch248NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{tomMatch248NameNumber_freshVar_5= true ;tomMatch248NameNumber_freshVar_0= tomMatch248NameNumberfreshSubject_1.getNameList() ;}} else {if ( (tomMatch248NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.XMLAppl) ) {{tomMatch248NameNumber_freshVar_5= true ;tomMatch248NameNumber_freshVar_0= tomMatch248NameNumberfreshSubject_1.getNameList() ;}}}}if ((tomMatch248NameNumber_freshVar_5 ==  true )) {if ( ((tomMatch248NameNumber_freshVar_0 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch248NameNumber_freshVar_0 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch248NameNumber_freshVar_1=tomMatch248NameNumber_freshVar_0;if (!( tomMatch248NameNumber_freshVar_1.isEmptyconcTomName() )) {if ( ( tomMatch248NameNumber_freshVar_1.getHeadconcTomName()  instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch248NameNumber_freshVar_4=  tomMatch248NameNumber_freshVar_1.getHeadconcTomName() .getString() ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch248NameNumber_freshVar_2= tomMatch248NameNumber_freshVar_1.getTailconcTomName() ;if ( true ) {


        
                TomSymbol symbol = null;
                symbol = getSymbolFromName(tomMatch248NameNumber_freshVar_4);
                // System.out.println("name = " + `name);
                if( symbol != null ) {
                  return TomBase.getSymbolCodomain(symbol);
                }
             }}}}}}}}}}}}}

        }}}}}}}}}

    }// for    
    return null;
  }

    protected tom.library.sl.Visitable typeVariable(TomType contextType, tom.library.sl.Visitable subject) {
      if(contextType == null) {
        throw new TomRuntimeException("typeVariable: null contextType");
      }
      try {
        //System.out.println("typeVariable: " + contextType);
        //System.out.println("typeVariable subject: " + subject);
        tom.library.sl.Visitable res = tom_make_TopDownStop(tom_make_replace_typeVariable(contextType,this)).visit(subject);
        //System.out.println("res: " + res);
        return res;
      } catch(tom.library.sl.VisitFailure e) {
        throw new TomRuntimeException("typeVariable: failure on " + subject);
        //return subject;
      }
    }

    /*
     * perform type inference of subterms (subtermList)
     * under a given operator (symbol)
     */
    private SlotList typeVariableList(TomSymbol symbol, SlotList subtermList) {
      if(symbol == null) {
        throw new TomRuntimeException("typeVariableList: null symbol");
      }

      if(subtermList.isEmptyconcSlot()) {
        return  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ;
      }

      //System.out.println("symbol = " + symbol.getastname());
      {if ( (symbol instanceof tom.engine.adt.tomsignature.types.TomSymbol) ) {{  tom.engine.adt.tomsignature.types.TomSymbol  tomMatch249NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomSymbol )symbol);if ( (tomMatch249NameNumberfreshSubject_1 instanceof tom.engine.adt.tomsignature.types.tomsymbol.emptySymbol) ) {if ( (subtermList instanceof tom.engine.adt.tomslot.types.SlotList) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch249NameNumberfreshSubject_2=(( tom.engine.adt.tomslot.types.SlotList )subtermList);if ( ((tomMatch249NameNumberfreshSubject_2 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch249NameNumberfreshSubject_2 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch249NameNumber_freshVar_0=tomMatch249NameNumberfreshSubject_2;if (!( tomMatch249NameNumber_freshVar_0.isEmptyconcSlot() )) {if ( ( tomMatch249NameNumber_freshVar_0.getHeadconcSlot()  instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch249NameNumber_freshVar_3=  tomMatch249NameNumber_freshVar_0.getHeadconcSlot() .getSlotName() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch249NameNumber_freshVar_4=  tomMatch249NameNumber_freshVar_0.getHeadconcSlot() .getAppl() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch249NameNumber_freshVar_1= tomMatch249NameNumber_freshVar_0.getTailconcSlot() ;if ( true ) {

          /*
           * if the top symbol is unknown, the subterms
           * are typed in an empty context
           */
          SlotList sl = typeVariableList(symbol,tomMatch249NameNumber_freshVar_1);
          return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tomMatch249NameNumber_freshVar_3, (TomTerm)typeVariable( tom.engine.adt.tomtype.types.tomtype.EmptyType.make() ,tomMatch249NameNumber_freshVar_4)) ,tom_append_list_concSlot(sl, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
        }}}}}}}}}}}}}if ( (symbol instanceof tom.engine.adt.tomsignature.types.TomSymbol) ) {{  tom.engine.adt.tomsignature.types.TomSymbol  tomMatch249NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomSymbol )symbol);if ( (tomMatch249NameNumberfreshSubject_1 instanceof tom.engine.adt.tomsignature.types.tomsymbol.Symbol) ) {{  tom.engine.adt.tomtype.types.TomType  tomMatch249NameNumber_freshVar_5= tomMatch249NameNumberfreshSubject_1.getTypesToType() ;if ( (tomMatch249NameNumber_freshVar_5 instanceof tom.engine.adt.tomtype.types.tomtype.TypesToType) ) {{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch249NameNumber_freshVar_6= tomMatch249NameNumber_freshVar_5.getDomain() ;{  tom.engine.adt.tomtype.types.TomType  tomMatch249NameNumber_freshVar_7= tomMatch249NameNumber_freshVar_5.getCodomain() ;{  tom.engine.adt.tomtype.types.TomType  tom_codomain=tomMatch249NameNumber_freshVar_7;{  tom.engine.adt.tomsignature.types.TomSymbol  tom_symb=tomMatch249NameNumberfreshSubject_1;if ( (subtermList instanceof tom.engine.adt.tomslot.types.SlotList) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch249NameNumberfreshSubject_2=(( tom.engine.adt.tomslot.types.SlotList )subtermList);if ( ((tomMatch249NameNumberfreshSubject_2 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch249NameNumberfreshSubject_2 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch249NameNumber_freshVar_8=tomMatch249NameNumberfreshSubject_2;if (!( tomMatch249NameNumber_freshVar_8.isEmptyconcSlot() )) {if ( ( tomMatch249NameNumber_freshVar_8.getHeadconcSlot()  instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch249NameNumber_freshVar_11=  tomMatch249NameNumber_freshVar_8.getHeadconcSlot() .getSlotName() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch249NameNumber_freshVar_12=  tomMatch249NameNumber_freshVar_8.getHeadconcSlot() .getAppl() ;{  tom.engine.adt.tomname.types.TomName  tom_slotName=tomMatch249NameNumber_freshVar_11;{  tom.engine.adt.tomterm.types.TomTerm  tom_slotAppl=tomMatch249NameNumber_freshVar_12;{  tom.engine.adt.tomslot.types.SlotList  tomMatch249NameNumber_freshVar_9= tomMatch249NameNumber_freshVar_8.getTailconcSlot() ;{  tom.engine.adt.tomslot.types.SlotList  tom_tail=tomMatch249NameNumber_freshVar_9;if ( true ) {



            //System.out.println("codomain = " + `codomain);
            // process a list of subterms and a list of types
            if(TomBase.isListOperator(tom_symb) || TomBase.isArrayOperator(tom_symb)) {
              /*
               * todo:
               * when the symbol is an associative operator,
               * the signature has the form: list conc( element* )
               * the list of types is reduced to the singleton { element }
               *
               * consider a pattern: conc(e1*,x,e2*,y,e3*)
               *  assign the type "element" to each subterm: x and y
               *  assign the type "list" to each subtermlist: e1*,e2* and e3*
               */

              //System.out.println("listoperator: " + `symb);
              //System.out.println("subtermlist: " + subtermList);
              //System.out.println("slotAppl: " + `slotAppl);

              {if ( (tom_slotAppl instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch250NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_slotAppl);if ( (tomMatch250NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch250NameNumber_freshVar_0= tomMatch250NameNumberfreshSubject_1.getOption() ;{  tom.engine.adt.tomname.types.TomName  tomMatch250NameNumber_freshVar_1= tomMatch250NameNumberfreshSubject_1.getAstName() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch250NameNumber_freshVar_2= tomMatch250NameNumberfreshSubject_1.getConstraints() ;if ( true ) {

                  ConstraintList newconstraints = (ConstraintList)typeVariable(tom_codomain,tomMatch250NameNumber_freshVar_2);
                  SlotList sl = typeVariableList(symbol,tom_tail);
                  return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tom_slotName,  tom.engine.adt.tomterm.types.tomterm.VariableStar.make(tomMatch250NameNumber_freshVar_0, tomMatch250NameNumber_freshVar_1, tom_codomain, newconstraints) ) ,tom_append_list_concSlot(sl, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
                }}}}}}}if ( (tom_slotAppl instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch250NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_slotAppl);if ( (tomMatch250NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar) ) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch250NameNumber_freshVar_3= tomMatch250NameNumberfreshSubject_1.getOption() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch250NameNumber_freshVar_4= tomMatch250NameNumberfreshSubject_1.getConstraints() ;if ( true ) {


                  ConstraintList newconstraints = (ConstraintList)typeVariable(tom_codomain,tomMatch250NameNumber_freshVar_4);
                  SlotList sl = typeVariableList(symbol,tom_tail);
                  return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tom_slotName,  tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar.make(tomMatch250NameNumber_freshVar_3, tom_codomain, newconstraints) ) ,tom_append_list_concSlot(sl, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
                }}}}}}if ( (tom_slotAppl instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch250NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_slotAppl);if ( true ) {


                  TomType domaintype = tomMatch249NameNumber_freshVar_6.getHeadconcTomType();
                  SlotList sl = typeVariableList(symbol,tom_tail);
                  SlotList res =  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tom_slotName, (TomTerm)typeVariable(domaintype,tom_slotAppl)) ,tom_append_list_concSlot(sl, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
                  //System.out.println("domaintype = " + domaintype);
                  //System.out.println("res = " + res);
                  return res;

                }}}}

            } else {
              SlotList sl = typeVariableList(symbol,tom_tail);
              return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make( tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(tom_slotName, (TomTerm)typeVariable(TomBase.getSlotType(tom_symb,tom_slotName),tom_slotAppl)) ,tom_append_list_concSlot(sl, tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() )) ;
            }
          }}}}}}}}}}}}}}}}}}}}}}}

      throw new TomRuntimeException("typeVariableList: strange case: '" + symbol + "'");
    }

    private static class replace_replaceInstantiatedVariable extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  tom.engine.adt.tomterm.types.TomList  instantiatedVariable; public replace_replaceInstantiatedVariable( tom.engine.adt.tomterm.types.TomList  instantiatedVariable) { super(( new tom.library.sl.Fail() ));this.instantiatedVariable=instantiatedVariable;}public  tom.engine.adt.tomterm.types.TomList  getinstantiatedVariable() { return instantiatedVariable;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm( tom.engine.adt.tomterm.types.TomTerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch251NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg);{  tom.engine.adt.tomterm.types.TomTerm  tom_subject=tomMatch251NameNumberfreshSubject_1;if ( true ) {{if ( (tom_subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch252NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_subject);if ( (tomMatch252NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch252NameNumber_freshVar_0= tomMatch252NameNumberfreshSubject_1.getNameList() ;{  tom.engine.adt.tomslot.types.SlotList  tomMatch252NameNumber_freshVar_1= tomMatch252NameNumberfreshSubject_1.getSlots() ;if ( ((tomMatch252NameNumber_freshVar_0 instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (tomMatch252NameNumber_freshVar_0 instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch252NameNumber_freshVar_2=tomMatch252NameNumber_freshVar_0;if (!( tomMatch252NameNumber_freshVar_2.isEmptyconcTomName() )) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch252NameNumber_freshVar_3= tomMatch252NameNumber_freshVar_2.getTailconcTomName() ;if ( tomMatch252NameNumber_freshVar_3.isEmptyconcTomName() ) {if ( ((tomMatch252NameNumber_freshVar_1 instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot) || (tomMatch252NameNumber_freshVar_1 instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot)) ) {{  tom.engine.adt.tomslot.types.SlotList  tomMatch252NameNumber_freshVar_4=tomMatch252NameNumber_freshVar_1;if ( tomMatch252NameNumber_freshVar_4.isEmptyconcSlot() ) {if ( (instantiatedVariable instanceof tom.engine.adt.tomterm.types.TomList) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomList )instantiatedVariable);if ( ((tomMatch252NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch252NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_5=tomMatch252NameNumberfreshSubject_2;{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_begin_7=tomMatch252NameNumber_freshVar_5;{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_end_8=tomMatch252NameNumber_freshVar_5;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_6=tomMatch252NameNumber_end_8;if (!( tomMatch252NameNumber_freshVar_6.isEmptyconcTomTerm() )) {{ boolean tomMatch252NameNumber_freshVar_13= false ;{  tom.engine.adt.tomname.types.TomName  tomMatch252NameNumber_freshVar_11= null ;if ( ( tomMatch252NameNumber_freshVar_6.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch252NameNumber_freshVar_13= true ;tomMatch252NameNumber_freshVar_11=  tomMatch252NameNumber_freshVar_6.getHeadconcTomTerm() .getAstName() ;}} else {if ( ( tomMatch252NameNumber_freshVar_6.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch252NameNumber_freshVar_13= true ;tomMatch252NameNumber_freshVar_11=  tomMatch252NameNumber_freshVar_6.getHeadconcTomTerm() .getAstName() ;}}}if ((tomMatch252NameNumber_freshVar_13 ==  true )) {{  tom.engine.adt.tomname.types.TomName  tomMatch252NameNumber_freshVar_12=tomMatch252NameNumber_freshVar_11;if ( tomMatch252NameNumber_freshVar_12.equals( tomMatch252NameNumber_freshVar_2.getHeadconcTomName() ) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_9= tomMatch252NameNumber_freshVar_6.getTailconcTomTerm() ;if ( true ) {




              return  tomMatch252NameNumber_freshVar_6.getHeadconcTomTerm() ;
            }}}}}}}}}if ( tomMatch252NameNumber_end_8.isEmptyconcTomTerm() ) {tomMatch252NameNumber_end_8=tomMatch252NameNumber_begin_7;} else {tomMatch252NameNumber_end_8= tomMatch252NameNumber_end_8.getTailconcTomTerm() ;}}} while(!( tomMatch252NameNumber_end_8.equals(tomMatch252NameNumber_begin_7) ));}}}}}}}}}}}}}}}}}}}if ( (tom_subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch252NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_subject);if ( (tomMatch252NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch252NameNumber_freshVar_14= tomMatch252NameNumberfreshSubject_1.getAstName() ;if ( (instantiatedVariable instanceof tom.engine.adt.tomterm.types.TomList) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomList )instantiatedVariable);if ( ((tomMatch252NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch252NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_15=tomMatch252NameNumberfreshSubject_2;{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_begin_17=tomMatch252NameNumber_freshVar_15;{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_end_18=tomMatch252NameNumber_freshVar_15;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_16=tomMatch252NameNumber_end_18;if (!( tomMatch252NameNumber_freshVar_16.isEmptyconcTomTerm() )) {if ( ( tomMatch252NameNumber_freshVar_16.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch252NameNumber_freshVar_21=  tomMatch252NameNumber_freshVar_16.getHeadconcTomTerm() .getAstName() ;{  tom.engine.adt.tomname.types.TomName  tomMatch252NameNumber_freshVar_22=tomMatch252NameNumber_freshVar_21;if ( tomMatch252NameNumber_freshVar_22.equals(tomMatch252NameNumber_freshVar_14) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_19= tomMatch252NameNumber_freshVar_16.getTailconcTomTerm() ;if ( true ) {

              return  tomMatch252NameNumber_freshVar_16.getHeadconcTomTerm() ;
            }}}}}}}}if ( tomMatch252NameNumber_end_18.isEmptyconcTomTerm() ) {tomMatch252NameNumber_end_18=tomMatch252NameNumber_begin_17;} else {tomMatch252NameNumber_end_18= tomMatch252NameNumber_end_18.getTailconcTomTerm() ;}}} while(!( tomMatch252NameNumber_end_18.equals(tomMatch252NameNumber_begin_17) ));}}}}}}}}}}if ( (tom_subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch252NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_subject);if ( (tomMatch252NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch252NameNumber_freshVar_23= tomMatch252NameNumberfreshSubject_1.getAstName() ;if ( (instantiatedVariable instanceof tom.engine.adt.tomterm.types.TomList) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomList )instantiatedVariable);if ( ((tomMatch252NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch252NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_24=tomMatch252NameNumberfreshSubject_2;{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_begin_26=tomMatch252NameNumber_freshVar_24;{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_end_27=tomMatch252NameNumber_freshVar_24;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_25=tomMatch252NameNumber_end_27;if (!( tomMatch252NameNumber_freshVar_25.isEmptyconcTomTerm() )) {if ( ( tomMatch252NameNumber_freshVar_25.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch252NameNumber_freshVar_30=  tomMatch252NameNumber_freshVar_25.getHeadconcTomTerm() .getAstName() ;{  tom.engine.adt.tomname.types.TomName  tomMatch252NameNumber_freshVar_31=tomMatch252NameNumber_freshVar_30;if ( tomMatch252NameNumber_freshVar_31.equals(tomMatch252NameNumber_freshVar_23) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_28= tomMatch252NameNumber_freshVar_25.getTailconcTomTerm() ;if ( true ) {

              return  tomMatch252NameNumber_freshVar_25.getHeadconcTomTerm() ;
            }}}}}}}}if ( tomMatch252NameNumber_end_27.isEmptyconcTomTerm() ) {tomMatch252NameNumber_end_27=tomMatch252NameNumber_begin_26;} else {tomMatch252NameNumber_end_27= tomMatch252NameNumber_end_27.getTailconcTomTerm() ;}}} while(!( tomMatch252NameNumber_end_27.equals(tomMatch252NameNumber_begin_26) ));}}}}}}}}}}if ( (tom_subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch252NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tom_subject);if ( (tomMatch252NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch252NameNumber_freshVar_32= tomMatch252NameNumberfreshSubject_1.getAstName() ;if ( (instantiatedVariable instanceof tom.engine.adt.tomterm.types.TomList) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumberfreshSubject_2=(( tom.engine.adt.tomterm.types.TomList )instantiatedVariable);if ( ((tomMatch252NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm) || (tomMatch252NameNumberfreshSubject_2 instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm)) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_33=tomMatch252NameNumberfreshSubject_2;{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_begin_35=tomMatch252NameNumber_freshVar_33;{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_end_36=tomMatch252NameNumber_freshVar_33;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_34=tomMatch252NameNumber_end_36;if (!( tomMatch252NameNumber_freshVar_34.isEmptyconcTomTerm() )) {if ( ( tomMatch252NameNumber_freshVar_34.getHeadconcTomTerm()  instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch252NameNumber_freshVar_39=  tomMatch252NameNumber_freshVar_34.getHeadconcTomTerm() .getAstName() ;{  tom.engine.adt.tomname.types.TomName  tomMatch252NameNumber_freshVar_40=tomMatch252NameNumber_freshVar_39;if ( tomMatch252NameNumber_freshVar_40.equals(tomMatch252NameNumber_freshVar_32) ) {{  tom.engine.adt.tomterm.types.TomList  tomMatch252NameNumber_freshVar_37= tomMatch252NameNumber_freshVar_34.getTailconcTomTerm() ;if ( true ) {

              return  tomMatch252NameNumber_freshVar_34.getHeadconcTomTerm() ;
            }}}}}}}}if ( tomMatch252NameNumber_end_36.isEmptyconcTomTerm() ) {tomMatch252NameNumber_end_36=tomMatch252NameNumber_begin_35;} else {tomMatch252NameNumber_end_36= tomMatch252NameNumber_end_36.getTailconcTomTerm() ;}}} while(!( tomMatch252NameNumber_end_36.equals(tomMatch252NameNumber_begin_35) ));}}}}}}}}}}}

        }}}}}return super.visit_TomTerm(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_replace_replaceInstantiatedVariable( tom.engine.adt.tomterm.types.TomList  t0) { return new replace_replaceInstantiatedVariable(t0); }



    protected tom.library.sl.Visitable replaceInstantiatedVariable(TomList instantiatedVariable, tom.library.sl.Visitable subject) {
      try {
        //System.out.println("varlist = " + instantiatedVariable);
        //System.out.println("subject = " + subject);
        return tom_make_TopDownStop(tom_make_replace_replaceInstantiatedVariable(instantiatedVariable)).visit(subject);
      } catch(tom.library.sl.VisitFailure e) {
        throw new TomRuntimeException("replaceInstantiatedVariable: failure on " + instantiatedVariable);
      }
    }

    private TomType getType(String tomName) {
      TomType tomType = getSymbolTable().getType(tomName);
      return tomType;
    }
    
    /**
     * Collect the matchConstraints in a list of constraints   
     */
    private static class CollectMatchConstraints extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  java.util.Collection  constrList; public CollectMatchConstraints( java.util.Collection  constrList) { super(( new tom.library.sl.Identity() ));this.constrList=constrList;}public  java.util.Collection  getconstrList() { return constrList;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch253NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if ( (tomMatch253NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {if ( true ) {

        
          constrList.add(tomMatch253NameNumberfreshSubject_1);         
        }}}}}return super.visit_Constraint(tom__arg,introspector); }}

// end strategy   

    /**
     * Collect the constraints (match and numeric)
     */
    private static class CollectConstraints extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  java.util.Collection  constrList; public CollectConstraints( java.util.Collection  constrList) { super(( new tom.library.sl.Identity() ));this.constrList=constrList;}public  java.util.Collection  getconstrList() { return constrList;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch254NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);{ boolean tomMatch254NameNumber_freshVar_0= false ;if ( (tomMatch254NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {tomMatch254NameNumber_freshVar_0= true ;} else {if ( (tomMatch254NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.NumericConstraint) ) {tomMatch254NameNumber_freshVar_0= true ;}}if ((tomMatch254NameNumber_freshVar_0 ==  true )) {if ( true ) {

        
          constrList.add(tomMatch254NameNumberfreshSubject_1);         
        }}}}}}return super.visit_Constraint(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_CollectConstraints( java.util.Collection  t0) { return new CollectConstraints(t0); }

// end strategy   
  }


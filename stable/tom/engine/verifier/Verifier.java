/* Generated by TOM (version 2.5alpha): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 *
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 * Antoine Reilles        e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.engine.verifier;

import tom.engine.*;
import aterm.*;
import java.util.*;
import tom.engine.tools.SymbolTable;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;
import tom.engine.adt.il.*;
import tom.engine.adt.il.types.*;

import tom.engine.exception.TomRuntimeException;

import jjtraveler.reflective.VisitableVisitor;
import jjtraveler.VisitFailure;

public class Verifier {

  // ------------------------------------------------------------
  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) {  return  (t1.equals(t2))  ;}private static boolean tom_is_sort_String(String t) {  return  t instanceof String  ;}  /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) {  return  (t1==t2)  ;} private static boolean tom_equal_term_Instruction(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Instruction(Object t) {  return  t instanceof tom.engine.adt.tominstruction.types.Instruction  ;}private static boolean tom_equal_term_InstructionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_InstructionList(Object t) {  return  t instanceof tom.engine.adt.tominstruction.types.InstructionList  ;}private static boolean tom_equal_term_TomType(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomType(Object t) {  return  t instanceof tom.engine.adt.tomtype.types.TomType  ;}private static boolean tom_equal_term_TomNumberList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomNumberList(Object t) {  return  t instanceof tom.engine.adt.tomname.types.TomNumberList  ;}private static boolean tom_equal_term_TomName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomName(Object t) {  return  t instanceof tom.engine.adt.tomname.types.TomName  ;}private static boolean tom_equal_term_Expression(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Expression(Object t) {  return  t instanceof tom.engine.adt.tomexpression.types.Expression  ;}private static boolean tom_equal_term_Pattern(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Pattern(Object t) {  return  t instanceof tom.engine.adt.tomterm.types.Pattern  ;}private static boolean tom_equal_term_TomList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomList(Object t) {  return  t instanceof tom.engine.adt.tomterm.types.TomList  ;}private static boolean tom_equal_term_TomTerm(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomTerm(Object t) {  return  t instanceof tom.engine.adt.tomterm.types.TomTerm  ;}private static boolean tom_equal_term_PatternList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_PatternList(Object t) {  return  t instanceof tom.engine.adt.tomterm.types.PatternList  ;}private static boolean tom_equal_term_OptionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_OptionList(Object t) {  return  t instanceof tom.engine.adt.tomoption.types.OptionList  ;}private static boolean tom_equal_term_ConstraintList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_ConstraintList(Object t) {  return  t instanceof tom.engine.adt.tomconstraint.types.ConstraintList  ;}private static boolean tom_is_fun_sym_If( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.If  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_If_Condition( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getCondition()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_If_SuccesInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSuccesInst()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_If_FailureInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getFailureInst()  ;}private static boolean tom_is_fun_sym_Let( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Let  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Let_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Let_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_Let_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_LetAssign( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.LetAssign  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_LetAssign_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_LetAssign_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_LetAssign_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_Nop( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Nop  ;}private static boolean tom_is_fun_sym_AbstractBlock( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.AbstractBlock  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slot_AbstractBlock_InstList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getInstList()  ;}private static boolean tom_is_fun_sym_CompiledPattern( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.CompiledPattern  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_CompiledPattern_PatternList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getPatternList()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_CompiledPattern_AutomataInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAutomataInst()  ;}private static boolean tom_is_fun_sym_TypedAction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.TypedAction  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_TypedAction_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static  tom.engine.adt.tomterm.types.Pattern  tom_get_slot_TypedAction_PositivePattern( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getPositivePattern()  ;}private static  tom.engine.adt.tomterm.types.PatternList  tom_get_slot_TypedAction_NegativePatternList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getNegativePatternList()  ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) {  return  t instanceof tom.engine.adt.tomname.types.tomname.Name  ;}private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_PositionName( tom.engine.adt.tomname.types.TomName  t) {  return  t instanceof tom.engine.adt.tomname.types.tomname.PositionName  ;}private static  tom.engine.adt.tomname.types.TomNumberList  tom_get_slot_PositionName_NumberList( tom.engine.adt.tomname.types.TomName  t) {  return  t.getNumberList()  ;}private static boolean tom_is_fun_sym_EmptyName( tom.engine.adt.tomname.types.TomName  t) {  return  t instanceof tom.engine.adt.tomname.types.tomname.EmptyName  ;}private static boolean tom_is_fun_sym_TomTermToExpression( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.TomTermToExpression  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_TomTermToExpression_AstTerm( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstTerm()  ;}private static boolean tom_is_fun_sym_TrueTL( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.TrueTL  ;}private static boolean tom_is_fun_sym_FalseTL( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.FalseTL  ;}private static boolean tom_is_fun_sym_EqualTerm( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.EqualTerm  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_EqualTerm_TomType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getTomType()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTerm_Kid1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid1()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTerm_Kid2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid2()  ;}private static boolean tom_is_fun_sym_Cast( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.Cast  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Cast_AstType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Cast_Source( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getSource()  ;}private static boolean tom_is_fun_sym_GetSlot( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetSlot  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetSlot_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlot_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  String  tom_get_slot_GetSlot_SlotNameString( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getSlotNameString()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSlot_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_IsFsym( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.IsFsym  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsFsym_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsFsym_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_IsSort( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.IsSort  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_IsSort_AstType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsSort_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_Pattern( tom.engine.adt.tomterm.types.Pattern  t) {  return  t instanceof tom.engine.adt.tomterm.types.pattern.Pattern  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_SubjectList( tom.engine.adt.tomterm.types.Pattern  t) {  return  t.getSubjectList()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_TomList( tom.engine.adt.tomterm.types.Pattern  t) {  return  t.getTomList()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_Guards( tom.engine.adt.tomterm.types.Pattern  t) {  return  t.getGuards()  ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.Variable  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_UnamedVariable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_ExpressionToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.ExpressionToTomTerm  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_ExpressionToTomTerm_AstExpression( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstExpression()  ;}private static boolean tom_is_fun_sym_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction || t instanceof tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_empty_list_concInstruction() { return  tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction.make() ; }private static  tom.engine.adt.tominstruction.types.InstructionList  tom_cons_list_concInstruction( tom.engine.adt.tominstruction.types.Instruction  e,  tom.engine.adt.tominstruction.types.InstructionList  l) { return  tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction.make(e,l) ; }private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_head_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.getHeadconcInstruction()  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_tail_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.getTailconcInstruction()  ;}private static boolean tom_is_empty_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.isEmptyconcInstruction()  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_append_list_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  l1,  tom.engine.adt.tominstruction.types.InstructionList  l2) {    if(tom_is_empty_concInstruction_InstructionList(l1)) {     return l2;    } else if(tom_is_empty_concInstruction_InstructionList(l2)) {     return l1;    } else if(tom_is_empty_concInstruction_InstructionList(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(l1))) {     return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(l1),l2);    } else {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(l1),tom_append_list_concInstruction(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(l1),l2));    }   }  private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slice_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  begin,  tom.engine.adt.tominstruction.types.InstructionList  end) {    if(tom_equal_term_InstructionList(begin,end)) {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_empty_list_concInstruction();    } else {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(begin),( tom.engine.adt.tominstruction.types.InstructionList )tom_get_slice_concInstruction(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(begin),end));    }   }   /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_ATerm(Object t1, Object t2) {  return  t1 == t2 ;}private static boolean tom_is_sort_ATerm(Object t) {  return  t instanceof aterm.ATerm  ;} private static boolean tom_equal_term_Deriv(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Deriv(Object t) {  return  t instanceof tom.engine.adt.il.types.Deriv  ;}private static boolean tom_equal_term_Expr(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Expr(Object t) {  return  t instanceof tom.engine.adt.il.types.Expr  ;}private static boolean tom_equal_term_Variable(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Variable(Object t) {  return  t instanceof tom.engine.adt.il.types.Variable  ;}private static boolean tom_equal_term_Environment(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Environment(Object t) {  return  t instanceof tom.engine.adt.il.types.Environment  ;}private static boolean tom_equal_term_InstrList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_InstrList(Object t) {  return  t instanceof tom.engine.adt.il.types.InstrList  ;}private static boolean tom_equal_term_ExprList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_ExprList(Object t) {  return  t instanceof tom.engine.adt.il.types.ExprList  ;}private static boolean tom_equal_term_Substitution(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Substitution(Object t) {  return  t instanceof tom.engine.adt.il.types.Substitution  ;}private static boolean tom_equal_term_Symbol(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Symbol(Object t) {  return  t instanceof tom.engine.adt.il.types.Symbol  ;}private static boolean tom_equal_term_Seq(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Seq(Object t) {  return  t instanceof tom.engine.adt.il.types.Seq  ;}private static boolean tom_equal_term_SubstitutionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_SubstitutionList(Object t) {  return  t instanceof tom.engine.adt.il.types.SubstitutionList  ;}private static boolean tom_equal_term_Term(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Term(Object t) {  return  t instanceof tom.engine.adt.il.types.Term  ;}private static boolean tom_equal_term_TermList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TermList(Object t) {  return  t instanceof tom.engine.adt.il.types.TermList  ;}private static boolean tom_equal_term_Instr(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Instr(Object t) {  return  t instanceof tom.engine.adt.il.types.Instr  ;}private static boolean tom_equal_term_AbsTerm(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_AbsTerm(Object t) {  return  t instanceof tom.engine.adt.il.types.AbsTerm  ;}private static boolean tom_equal_term_DerivTree(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_DerivTree(Object t) {  return  t instanceof tom.engine.adt.il.types.DerivTree  ;}private static boolean tom_is_fun_sym_ebs( tom.engine.adt.il.types.Deriv  t) {  return  t instanceof tom.engine.adt.il.types.deriv.ebs  ;}private static  tom.engine.adt.il.types.Deriv  tom_make_ebs( tom.engine.adt.il.types.Environment  t0,  tom.engine.adt.il.types.Environment  t1) { return  tom.engine.adt.il.types.deriv.ebs.make(t0, t1); }private static  tom.engine.adt.il.types.Environment  tom_get_slot_ebs_Lhs( tom.engine.adt.il.types.Deriv  t) {  return  t.getLhs()  ;}private static  tom.engine.adt.il.types.Environment  tom_get_slot_ebs_Rhs( tom.engine.adt.il.types.Deriv  t) {  return  t.getRhs()  ;}private static boolean tom_is_fun_sym_iltrue( tom.engine.adt.il.types.Expr  t) {  return  t instanceof tom.engine.adt.il.types.expr.iltrue  ;}private static  tom.engine.adt.il.types.Expr  tom_make_iltrue( tom.engine.adt.il.types.SubstitutionList  t0) { return  tom.engine.adt.il.types.expr.iltrue.make(t0); }private static  tom.engine.adt.il.types.SubstitutionList  tom_get_slot_iltrue_Subst( tom.engine.adt.il.types.Expr  t) {  return  t.getSubst()  ;}private static boolean tom_is_fun_sym_ilfalse( tom.engine.adt.il.types.Expr  t) {  return  t instanceof tom.engine.adt.il.types.expr.ilfalse  ;}private static  tom.engine.adt.il.types.Expr  tom_make_ilfalse() { return  tom.engine.adt.il.types.expr.ilfalse.make(); }private static boolean tom_is_fun_sym_isfsym( tom.engine.adt.il.types.Expr  t) {  return  t instanceof tom.engine.adt.il.types.expr.isfsym  ;}private static  tom.engine.adt.il.types.Expr  tom_make_isfsym( tom.engine.adt.il.types.Term  t0,  tom.engine.adt.il.types.Symbol  t1) { return  tom.engine.adt.il.types.expr.isfsym.make(t0, t1); }private static  tom.engine.adt.il.types.Term  tom_get_slot_isfsym_T( tom.engine.adt.il.types.Expr  t) {  return  t.getT()  ;}private static  tom.engine.adt.il.types.Symbol  tom_get_slot_isfsym_Symbol( tom.engine.adt.il.types.Expr  t) {  return  t.getSymbol()  ;}private static boolean tom_is_fun_sym_eq( tom.engine.adt.il.types.Expr  t) {  return  t instanceof tom.engine.adt.il.types.expr.eq  ;}private static  tom.engine.adt.il.types.Expr  tom_make_eq( tom.engine.adt.il.types.Term  t0,  tom.engine.adt.il.types.Term  t1) { return  tom.engine.adt.il.types.expr.eq.make(t0, t1); }private static  tom.engine.adt.il.types.Term  tom_get_slot_eq_Lt( tom.engine.adt.il.types.Expr  t) {  return  t.getLt()  ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_eq_Rt( tom.engine.adt.il.types.Expr  t) {  return  t.getRt()  ;}private static  tom.engine.adt.il.types.Expr  tom_make_tisfsym( tom.engine.adt.il.types.AbsTerm  t0,  tom.engine.adt.il.types.Symbol  t1) { return  tom.engine.adt.il.types.expr.tisfsym.make(t0, t1); }private static  tom.engine.adt.il.types.Expr  tom_make_teq( tom.engine.adt.il.types.AbsTerm  t0,  tom.engine.adt.il.types.AbsTerm  t1) { return  tom.engine.adt.il.types.expr.teq.make(t0, t1); }private static boolean tom_is_fun_sym_iland( tom.engine.adt.il.types.Expr  t) {  return  t instanceof tom.engine.adt.il.types.expr.iland  ;}private static  tom.engine.adt.il.types.Expr  tom_make_iland( tom.engine.adt.il.types.Expr  t0,  tom.engine.adt.il.types.Expr  t1) { return  tom.engine.adt.il.types.expr.iland.make(t0, t1); }private static  tom.engine.adt.il.types.Expr  tom_get_slot_iland_Left( tom.engine.adt.il.types.Expr  t) {  return  t.getLeft()  ;}private static  tom.engine.adt.il.types.Expr  tom_get_slot_iland_Right( tom.engine.adt.il.types.Expr  t) {  return  t.getRight()  ;}private static boolean tom_is_fun_sym_ilor( tom.engine.adt.il.types.Expr  t) {  return  t instanceof tom.engine.adt.il.types.expr.ilor  ;}private static  tom.engine.adt.il.types.Expr  tom_make_ilor( tom.engine.adt.il.types.Expr  t0,  tom.engine.adt.il.types.Expr  t1) { return  tom.engine.adt.il.types.expr.ilor.make(t0, t1); }private static  tom.engine.adt.il.types.Expr  tom_get_slot_ilor_Left( tom.engine.adt.il.types.Expr  t) {  return  t.getLeft()  ;}private static  tom.engine.adt.il.types.Expr  tom_get_slot_ilor_Right( tom.engine.adt.il.types.Expr  t) {  return  t.getRight()  ;}private static boolean tom_is_fun_sym_ilnot( tom.engine.adt.il.types.Expr  t) {  return  t instanceof tom.engine.adt.il.types.expr.ilnot  ;}private static  tom.engine.adt.il.types.Expr  tom_make_ilnot( tom.engine.adt.il.types.Expr  t0) { return  tom.engine.adt.il.types.expr.ilnot.make(t0); }private static  tom.engine.adt.il.types.Expr  tom_get_slot_ilnot_Exp( tom.engine.adt.il.types.Expr  t) {  return  t.getExp()  ;}private static boolean tom_is_fun_sym_appSubsE( tom.engine.adt.il.types.Expr  t) {  return  t instanceof tom.engine.adt.il.types.expr.appSubsE  ;}private static  tom.engine.adt.il.types.Expr  tom_make_appSubsE( tom.engine.adt.il.types.SubstitutionList  t0,  tom.engine.adt.il.types.Expr  t1) { return  tom.engine.adt.il.types.expr.appSubsE.make(t0, t1); }private static  tom.engine.adt.il.types.SubstitutionList  tom_get_slot_appSubsE_Subs( tom.engine.adt.il.types.Expr  t) {  return  t.getSubs()  ;}private static  tom.engine.adt.il.types.Expr  tom_get_slot_appSubsE_E( tom.engine.adt.il.types.Expr  t) {  return  t.getE()  ;}private static boolean tom_is_fun_sym_var( tom.engine.adt.il.types.Variable  t) {  return  t instanceof tom.engine.adt.il.types.variable.var  ;}private static  tom.engine.adt.il.types.Variable  tom_make_var( String  t0) { return  tom.engine.adt.il.types.variable.var.make(t0); }private static  String  tom_get_slot_var_Name( tom.engine.adt.il.types.Variable  t) {  return  t.getName()  ;}private static boolean tom_is_fun_sym_env( tom.engine.adt.il.types.Environment  t) {  return  t instanceof tom.engine.adt.il.types.environment.env  ;}private static  tom.engine.adt.il.types.Environment  tom_make_env( tom.engine.adt.il.types.SubstitutionList  t0,  tom.engine.adt.il.types.Instr  t1) { return  tom.engine.adt.il.types.environment.env.make(t0, t1); }private static  tom.engine.adt.il.types.SubstitutionList  tom_get_slot_env_Subs( tom.engine.adt.il.types.Environment  t) {  return  t.getSubs()  ;}private static  tom.engine.adt.il.types.Instr  tom_get_slot_env_I( tom.engine.adt.il.types.Environment  t) {  return  t.getI()  ;}private static boolean tom_is_fun_sym_undefsubs( tom.engine.adt.il.types.Substitution  t) {  return  t instanceof tom.engine.adt.il.types.substitution.undefsubs  ;}private static  tom.engine.adt.il.types.Substitution  tom_make_undefsubs() { return  tom.engine.adt.il.types.substitution.undefsubs.make(); }private static boolean tom_is_fun_sym_is( tom.engine.adt.il.types.Substitution  t) {  return  t instanceof tom.engine.adt.il.types.substitution.is  ;}private static  tom.engine.adt.il.types.Substitution  tom_make_is( tom.engine.adt.il.types.Variable  t0,  tom.engine.adt.il.types.Term  t1) { return  tom.engine.adt.il.types.substitution.is.make(t0, t1); }private static  tom.engine.adt.il.types.Variable  tom_get_slot_is_Var( tom.engine.adt.il.types.Substitution  t) {  return  t.getVar()  ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_is_Term( tom.engine.adt.il.types.Substitution  t) {  return  t.getTerm()  ;}private static  tom.engine.adt.il.types.Symbol  tom_make_fsymbol( String  t0) { return  tom.engine.adt.il.types.symbol.fsymbol.make(t0); }private static  tom.engine.adt.il.types.Seq  tom_make_seq() { return  tom.engine.adt.il.types.seq.seq.make(); }private static  tom.engine.adt.il.types.Seq  tom_make_dedexpr( tom.engine.adt.il.types.ExprList  t0) { return  tom.engine.adt.il.types.seq.dedexpr.make(t0); }private static boolean tom_is_fun_sym_dedterm( tom.engine.adt.il.types.Seq  t) {  return  t instanceof tom.engine.adt.il.types.seq.dedterm  ;}private static  tom.engine.adt.il.types.Seq  tom_make_dedterm( tom.engine.adt.il.types.TermList  t0) { return  tom.engine.adt.il.types.seq.dedterm.make(t0); }private static  tom.engine.adt.il.types.TermList  tom_get_slot_dedterm_Terms( tom.engine.adt.il.types.Seq  t) {  return  t.getTerms()  ;}private static boolean tom_is_fun_sym_tau( tom.engine.adt.il.types.Term  t) {  return  t instanceof tom.engine.adt.il.types.term.tau  ;}private static  tom.engine.adt.il.types.Term  tom_make_tau( tom.engine.adt.il.types.AbsTerm  t0) { return  tom.engine.adt.il.types.term.tau.make(t0); }private static  tom.engine.adt.il.types.AbsTerm  tom_get_slot_tau_Abst( tom.engine.adt.il.types.Term  t) {  return  t.getAbst()  ;}private static  tom.engine.adt.il.types.Term  tom_make_repr( String  t0) { return  tom.engine.adt.il.types.term.repr.make(t0); }private static boolean tom_is_fun_sym_subterm( tom.engine.adt.il.types.Term  t) {  return  t instanceof tom.engine.adt.il.types.term.subterm  ;}private static  tom.engine.adt.il.types.Term  tom_make_subterm( tom.engine.adt.il.types.Symbol  t0,  tom.engine.adt.il.types.Term  t1,  int  t2) { return  tom.engine.adt.il.types.term.subterm.make(t0, t1, t2); }private static  tom.engine.adt.il.types.Symbol  tom_get_slot_subterm_Symbol( tom.engine.adt.il.types.Term  t) {  return  t.getSymbol()  ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_subterm_T( tom.engine.adt.il.types.Term  t) {  return  t.getT()  ;}private static  int  tom_get_slot_subterm_Index( tom.engine.adt.il.types.Term  t) {  return  t.getIndex()  ;}private static boolean tom_is_fun_sym_slot( tom.engine.adt.il.types.Term  t) {  return  t instanceof tom.engine.adt.il.types.term.slot  ;}private static  tom.engine.adt.il.types.Term  tom_make_slot( tom.engine.adt.il.types.Symbol  t0,  tom.engine.adt.il.types.Term  t1,  String  t2) { return  tom.engine.adt.il.types.term.slot.make(t0, t1, t2); }private static  tom.engine.adt.il.types.Symbol  tom_get_slot_slot_Symbol( tom.engine.adt.il.types.Term  t) {  return  t.getSymbol()  ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_slot_T( tom.engine.adt.il.types.Term  t) {  return  t.getT()  ;}private static  String  tom_get_slot_slot_Name( tom.engine.adt.il.types.Term  t) {  return  t.getName()  ;}private static boolean tom_is_fun_sym_appSubsT( tom.engine.adt.il.types.Term  t) {  return  t instanceof tom.engine.adt.il.types.term.appSubsT  ;}private static  tom.engine.adt.il.types.Term  tom_make_appSubsT( tom.engine.adt.il.types.SubstitutionList  t0,  tom.engine.adt.il.types.Term  t1) { return  tom.engine.adt.il.types.term.appSubsT.make(t0, t1); }private static  tom.engine.adt.il.types.SubstitutionList  tom_get_slot_appSubsT_Subs( tom.engine.adt.il.types.Term  t) {  return  t.getSubs()  ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_appSubsT_T( tom.engine.adt.il.types.Term  t) {  return  t.getT()  ;}private static boolean tom_is_fun_sym_accept( tom.engine.adt.il.types.Instr  t) {  return  t instanceof tom.engine.adt.il.types.instr.accept  ;}private static  tom.engine.adt.il.types.Instr  tom_make_accept( aterm.ATerm  t0,  aterm.ATerm  t1) { return  tom.engine.adt.il.types.instr.accept.make(t0, t1); }private static  aterm.ATerm  tom_get_slot_accept_Positive( tom.engine.adt.il.types.Instr  t) {  return  t.getPositive()  ;}private static  aterm.ATerm  tom_get_slot_accept_Negative( tom.engine.adt.il.types.Instr  t) {  return  t.getNegative()  ;}private static boolean tom_is_fun_sym_refuse( tom.engine.adt.il.types.Instr  t) {  return  t instanceof tom.engine.adt.il.types.instr.refuse  ;}private static  tom.engine.adt.il.types.Instr  tom_make_refuse() { return  tom.engine.adt.il.types.instr.refuse.make(); }private static boolean tom_is_fun_sym_ITE( tom.engine.adt.il.types.Instr  t) {  return  t instanceof tom.engine.adt.il.types.instr.ITE  ;}private static  tom.engine.adt.il.types.Instr  tom_make_ITE( tom.engine.adt.il.types.Expr  t0,  tom.engine.adt.il.types.Instr  t1,  tom.engine.adt.il.types.Instr  t2) { return  tom.engine.adt.il.types.instr.ITE.make(t0, t1, t2); }private static  tom.engine.adt.il.types.Expr  tom_get_slot_ITE_E( tom.engine.adt.il.types.Instr  t) {  return  t.getE()  ;}private static  tom.engine.adt.il.types.Instr  tom_get_slot_ITE_Ift( tom.engine.adt.il.types.Instr  t) {  return  t.getIft()  ;}private static  tom.engine.adt.il.types.Instr  tom_get_slot_ITE_Iff( tom.engine.adt.il.types.Instr  t) {  return  t.getIff()  ;}private static boolean tom_is_fun_sym_ILLet( tom.engine.adt.il.types.Instr  t) {  return  t instanceof tom.engine.adt.il.types.instr.ILLet  ;}private static  tom.engine.adt.il.types.Instr  tom_make_ILLet( tom.engine.adt.il.types.Variable  t0,  tom.engine.adt.il.types.Term  t1,  tom.engine.adt.il.types.Instr  t2) { return  tom.engine.adt.il.types.instr.ILLet.make(t0, t1, t2); }private static  tom.engine.adt.il.types.Variable  tom_get_slot_ILLet_Var( tom.engine.adt.il.types.Instr  t) {  return  t.getVar()  ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_ILLet_T( tom.engine.adt.il.types.Instr  t) {  return  t.getT()  ;}private static  tom.engine.adt.il.types.Instr  tom_get_slot_ILLet_Body( tom.engine.adt.il.types.Instr  t) {  return  t.getBody()  ;}private static boolean tom_is_fun_sym_sequence( tom.engine.adt.il.types.Instr  t) {  return  t instanceof tom.engine.adt.il.types.instr.sequence  ;}private static  tom.engine.adt.il.types.Instr  tom_make_sequence( tom.engine.adt.il.types.InstrList  t0) { return  tom.engine.adt.il.types.instr.sequence.make(t0); }private static  tom.engine.adt.il.types.InstrList  tom_get_slot_sequence_Instrlist( tom.engine.adt.il.types.Instr  t) {  return  t.getInstrlist()  ;}private static boolean tom_is_fun_sym_absvar( tom.engine.adt.il.types.AbsTerm  t) {  return  t instanceof tom.engine.adt.il.types.absterm.absvar  ;}private static  tom.engine.adt.il.types.AbsTerm  tom_make_absvar( tom.engine.adt.il.types.Variable  t0) { return  tom.engine.adt.il.types.absterm.absvar.make(t0); }private static  tom.engine.adt.il.types.Variable  tom_get_slot_absvar_Varname( tom.engine.adt.il.types.AbsTerm  t) {  return  t.getVarname()  ;}private static  tom.engine.adt.il.types.AbsTerm  tom_make_st( tom.engine.adt.il.types.Symbol  t0,  tom.engine.adt.il.types.AbsTerm  t1,  int  t2) { return  tom.engine.adt.il.types.absterm.st.make(t0, t1, t2); }private static  tom.engine.adt.il.types.AbsTerm  tom_make_sl( tom.engine.adt.il.types.Symbol  t0,  tom.engine.adt.il.types.AbsTerm  t1,  String  t2) { return  tom.engine.adt.il.types.absterm.sl.make(t0, t1, t2); }private static  tom.engine.adt.il.types.DerivTree  tom_make_endderiv() { return  tom.engine.adt.il.types.derivtree.endderiv.make(); }private static  tom.engine.adt.il.types.DerivTree  tom_make_derivrule( String  t0,  tom.engine.adt.il.types.Deriv  t1,  tom.engine.adt.il.types.DerivTree  t2,  tom.engine.adt.il.types.Seq  t3) { return  tom.engine.adt.il.types.derivtree.derivrule.make(t0, t1, t2, t3); }private static  tom.engine.adt.il.types.DerivTree  tom_make_derivrule2( String  t0,  tom.engine.adt.il.types.Deriv  t1,  tom.engine.adt.il.types.DerivTree  t2,  tom.engine.adt.il.types.DerivTree  t3,  tom.engine.adt.il.types.Seq  t4) { return  tom.engine.adt.il.types.derivtree.derivrule2.make(t0, t1, t2, t3, t4); }private static boolean tom_is_fun_sym_semicolon( tom.engine.adt.il.types.InstrList  t) {  return  t instanceof tom.engine.adt.il.types.instrlist.Conssemicolon || t instanceof tom.engine.adt.il.types.instrlist.Emptysemicolon  ;}private static  tom.engine.adt.il.types.InstrList  tom_empty_list_semicolon() { return  tom.engine.adt.il.types.instrlist.Emptysemicolon.make() ; }private static  tom.engine.adt.il.types.InstrList  tom_cons_list_semicolon( tom.engine.adt.il.types.Instr  e,  tom.engine.adt.il.types.InstrList  l) { return  tom.engine.adt.il.types.instrlist.Conssemicolon.make(e,l) ; }private static  tom.engine.adt.il.types.Instr  tom_get_head_semicolon_InstrList( tom.engine.adt.il.types.InstrList  l) {  return  l.getHeadsemicolon()  ;}private static  tom.engine.adt.il.types.InstrList  tom_get_tail_semicolon_InstrList( tom.engine.adt.il.types.InstrList  l) {  return  l.getTailsemicolon()  ;}private static boolean tom_is_empty_semicolon_InstrList( tom.engine.adt.il.types.InstrList  l) {  return  l.isEmptysemicolon()  ;}private static  tom.engine.adt.il.types.InstrList  tom_append_list_semicolon( tom.engine.adt.il.types.InstrList  l1,  tom.engine.adt.il.types.InstrList  l2) {    if(tom_is_empty_semicolon_InstrList(l1)) {     return l2;    } else if(tom_is_empty_semicolon_InstrList(l2)) {     return l1;    } else if(tom_is_empty_semicolon_InstrList(( tom.engine.adt.il.types.InstrList )tom_get_tail_semicolon_InstrList(l1))) {     return ( tom.engine.adt.il.types.InstrList )tom_cons_list_semicolon(( tom.engine.adt.il.types.Instr )tom_get_head_semicolon_InstrList(l1),l2);    } else {      return ( tom.engine.adt.il.types.InstrList )tom_cons_list_semicolon(( tom.engine.adt.il.types.Instr )tom_get_head_semicolon_InstrList(l1),tom_append_list_semicolon(( tom.engine.adt.il.types.InstrList )tom_get_tail_semicolon_InstrList(l1),l2));    }   }  private static  tom.engine.adt.il.types.InstrList  tom_get_slice_semicolon( tom.engine.adt.il.types.InstrList  begin,  tom.engine.adt.il.types.InstrList  end) {    if(tom_equal_term_InstrList(begin,end)) {      return ( tom.engine.adt.il.types.InstrList )tom_empty_list_semicolon();    } else {      return ( tom.engine.adt.il.types.InstrList )tom_cons_list_semicolon(( tom.engine.adt.il.types.Instr )tom_get_head_semicolon_InstrList(begin),( tom.engine.adt.il.types.InstrList )tom_get_slice_semicolon(( tom.engine.adt.il.types.InstrList )tom_get_tail_semicolon_InstrList(begin),end));    }   }  private static boolean tom_is_fun_sym_concExpr( tom.engine.adt.il.types.ExprList  t) {  return  t instanceof tom.engine.adt.il.types.exprlist.ConsconcExpr || t instanceof tom.engine.adt.il.types.exprlist.EmptyconcExpr  ;}private static  tom.engine.adt.il.types.ExprList  tom_empty_list_concExpr() { return  tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ; }private static  tom.engine.adt.il.types.ExprList  tom_cons_list_concExpr( tom.engine.adt.il.types.Expr  e,  tom.engine.adt.il.types.ExprList  l) { return  tom.engine.adt.il.types.exprlist.ConsconcExpr.make(e,l) ; }private static  tom.engine.adt.il.types.Expr  tom_get_head_concExpr_ExprList( tom.engine.adt.il.types.ExprList  l) {  return  l.getHeadconcExpr()  ;}private static  tom.engine.adt.il.types.ExprList  tom_get_tail_concExpr_ExprList( tom.engine.adt.il.types.ExprList  l) {  return  l.getTailconcExpr()  ;}private static boolean tom_is_empty_concExpr_ExprList( tom.engine.adt.il.types.ExprList  l) {  return  l.isEmptyconcExpr()  ;}private static  tom.engine.adt.il.types.ExprList  tom_append_list_concExpr( tom.engine.adt.il.types.ExprList  l1,  tom.engine.adt.il.types.ExprList  l2) {    if(tom_is_empty_concExpr_ExprList(l1)) {     return l2;    } else if(tom_is_empty_concExpr_ExprList(l2)) {     return l1;    } else if(tom_is_empty_concExpr_ExprList(( tom.engine.adt.il.types.ExprList )tom_get_tail_concExpr_ExprList(l1))) {     return ( tom.engine.adt.il.types.ExprList )tom_cons_list_concExpr(( tom.engine.adt.il.types.Expr )tom_get_head_concExpr_ExprList(l1),l2);    } else {      return ( tom.engine.adt.il.types.ExprList )tom_cons_list_concExpr(( tom.engine.adt.il.types.Expr )tom_get_head_concExpr_ExprList(l1),tom_append_list_concExpr(( tom.engine.adt.il.types.ExprList )tom_get_tail_concExpr_ExprList(l1),l2));    }   }  private static  tom.engine.adt.il.types.ExprList  tom_get_slice_concExpr( tom.engine.adt.il.types.ExprList  begin,  tom.engine.adt.il.types.ExprList  end) {    if(tom_equal_term_ExprList(begin,end)) {      return ( tom.engine.adt.il.types.ExprList )tom_empty_list_concExpr();    } else {      return ( tom.engine.adt.il.types.ExprList )tom_cons_list_concExpr(( tom.engine.adt.il.types.Expr )tom_get_head_concExpr_ExprList(begin),( tom.engine.adt.il.types.ExprList )tom_get_slice_concExpr(( tom.engine.adt.il.types.ExprList )tom_get_tail_concExpr_ExprList(begin),end));    }   }  private static boolean tom_is_fun_sym_subs( tom.engine.adt.il.types.SubstitutionList  t) {  return  t instanceof tom.engine.adt.il.types.substitutionlist.Conssubs || t instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs  ;}private static  tom.engine.adt.il.types.SubstitutionList  tom_empty_list_subs() { return  tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ; }private static  tom.engine.adt.il.types.SubstitutionList  tom_cons_list_subs( tom.engine.adt.il.types.Substitution  e,  tom.engine.adt.il.types.SubstitutionList  l) { return  tom.engine.adt.il.types.substitutionlist.Conssubs.make(e,l) ; }private static  tom.engine.adt.il.types.Substitution  tom_get_head_subs_SubstitutionList( tom.engine.adt.il.types.SubstitutionList  l) {  return  l.getHeadsubs()  ;}private static  tom.engine.adt.il.types.SubstitutionList  tom_get_tail_subs_SubstitutionList( tom.engine.adt.il.types.SubstitutionList  l) {  return  l.getTailsubs()  ;}private static boolean tom_is_empty_subs_SubstitutionList( tom.engine.adt.il.types.SubstitutionList  l) {  return  l.isEmptysubs()  ;}private static  tom.engine.adt.il.types.SubstitutionList  tom_append_list_subs( tom.engine.adt.il.types.SubstitutionList  l1,  tom.engine.adt.il.types.SubstitutionList  l2) {    if(tom_is_empty_subs_SubstitutionList(l1)) {     return l2;    } else if(tom_is_empty_subs_SubstitutionList(l2)) {     return l1;    } else if(tom_is_empty_subs_SubstitutionList(( tom.engine.adt.il.types.SubstitutionList )tom_get_tail_subs_SubstitutionList(l1))) {     return ( tom.engine.adt.il.types.SubstitutionList )tom_cons_list_subs(( tom.engine.adt.il.types.Substitution )tom_get_head_subs_SubstitutionList(l1),l2);    } else {      return ( tom.engine.adt.il.types.SubstitutionList )tom_cons_list_subs(( tom.engine.adt.il.types.Substitution )tom_get_head_subs_SubstitutionList(l1),tom_append_list_subs(( tom.engine.adt.il.types.SubstitutionList )tom_get_tail_subs_SubstitutionList(l1),l2));    }   }  private static  tom.engine.adt.il.types.SubstitutionList  tom_get_slice_subs( tom.engine.adt.il.types.SubstitutionList  begin,  tom.engine.adt.il.types.SubstitutionList  end) {    if(tom_equal_term_SubstitutionList(begin,end)) {      return ( tom.engine.adt.il.types.SubstitutionList )tom_empty_list_subs();    } else {      return ( tom.engine.adt.il.types.SubstitutionList )tom_cons_list_subs(( tom.engine.adt.il.types.Substitution )tom_get_head_subs_SubstitutionList(begin),( tom.engine.adt.il.types.SubstitutionList )tom_get_slice_subs(( tom.engine.adt.il.types.SubstitutionList )tom_get_tail_subs_SubstitutionList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTerm( tom.engine.adt.il.types.TermList  t) {  return  t instanceof tom.engine.adt.il.types.termlist.ConsconcTerm || t instanceof tom.engine.adt.il.types.termlist.EmptyconcTerm  ;}private static  tom.engine.adt.il.types.TermList  tom_empty_list_concTerm() { return  tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ; }private static  tom.engine.adt.il.types.TermList  tom_cons_list_concTerm( tom.engine.adt.il.types.Term  e,  tom.engine.adt.il.types.TermList  l) { return  tom.engine.adt.il.types.termlist.ConsconcTerm.make(e,l) ; }private static  tom.engine.adt.il.types.Term  tom_get_head_concTerm_TermList( tom.engine.adt.il.types.TermList  l) {  return  l.getHeadconcTerm()  ;}private static  tom.engine.adt.il.types.TermList  tom_get_tail_concTerm_TermList( tom.engine.adt.il.types.TermList  l) {  return  l.getTailconcTerm()  ;}private static boolean tom_is_empty_concTerm_TermList( tom.engine.adt.il.types.TermList  l) {  return  l.isEmptyconcTerm()  ;}private static  tom.engine.adt.il.types.TermList  tom_append_list_concTerm( tom.engine.adt.il.types.TermList  l1,  tom.engine.adt.il.types.TermList  l2) {    if(tom_is_empty_concTerm_TermList(l1)) {     return l2;    } else if(tom_is_empty_concTerm_TermList(l2)) {     return l1;    } else if(tom_is_empty_concTerm_TermList(( tom.engine.adt.il.types.TermList )tom_get_tail_concTerm_TermList(l1))) {     return ( tom.engine.adt.il.types.TermList )tom_cons_list_concTerm(( tom.engine.adt.il.types.Term )tom_get_head_concTerm_TermList(l1),l2);    } else {      return ( tom.engine.adt.il.types.TermList )tom_cons_list_concTerm(( tom.engine.adt.il.types.Term )tom_get_head_concTerm_TermList(l1),tom_append_list_concTerm(( tom.engine.adt.il.types.TermList )tom_get_tail_concTerm_TermList(l1),l2));    }   }  private static  tom.engine.adt.il.types.TermList  tom_get_slice_concTerm( tom.engine.adt.il.types.TermList  begin,  tom.engine.adt.il.types.TermList  end) {    if(tom_equal_term_TermList(begin,end)) {      return ( tom.engine.adt.il.types.TermList )tom_empty_list_concTerm();    } else {      return ( tom.engine.adt.il.types.TermList )tom_cons_list_concTerm(( tom.engine.adt.il.types.Term )tom_get_head_concTerm_TermList(begin),( tom.engine.adt.il.types.TermList )tom_get_slice_concTerm(( tom.engine.adt.il.types.TermList )tom_get_tail_concTerm_TermList(begin),end));    }   }   /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_Strategy(Object t1, Object t2) {  return t1.equals(t2) ;}private static boolean tom_is_sort_Strategy(Object t) {  return  t instanceof jjtraveler.reflective.VisitableVisitor  ;}private static  jjtraveler.reflective.VisitableVisitor  tom_make_mu( jjtraveler.reflective.VisitableVisitor  var,  jjtraveler.reflective.VisitableVisitor  v) { return  new tom.library.strategy.mutraveler.Mu(var,v) ; }/* Generated by TOM (version 2.5alpha): Do not edit this file */private static  jjtraveler.reflective.VisitableVisitor  tom_make_Identity() { return  new tom.library.strategy.mutraveler.Identity() ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_Fail() { return  new tom.library.strategy.mutraveler.Fail() ; }private static boolean tom_is_fun_sym_Sequence( jjtraveler.reflective.VisitableVisitor  t) {  return  (t instanceof tom.library.strategy.mutraveler.Sequence)  ;}private static  jjtraveler.reflective.VisitableVisitor  tom_empty_list_Sequence() { return  new tom.library.strategy.mutraveler.Identity() ; }private static  jjtraveler.reflective.VisitableVisitor  tom_cons_list_Sequence( jjtraveler.reflective.VisitableVisitor  head,  jjtraveler.reflective.VisitableVisitor  tail) { return  new tom.library.strategy.mutraveler.Sequence(head,tail) ; }private static  jjtraveler.reflective.VisitableVisitor  tom_get_head_Sequence_Strategy( jjtraveler.reflective.VisitableVisitor  t) {  return  (tom.library.strategy.mutraveler.MuStrategy)t.getChildAt(tom.library.strategy.mutraveler.Sequence.FIRST)  ;}private static  jjtraveler.reflective.VisitableVisitor  tom_get_tail_Sequence_Strategy( jjtraveler.reflective.VisitableVisitor  t) {  return  (tom.library.strategy.mutraveler.MuStrategy)t.getChildAt(tom.library.strategy.mutraveler.Sequence.THEN)  ;}private static boolean tom_is_empty_Sequence_Strategy( jjtraveler.reflective.VisitableVisitor  t) {  return  t instanceof tom.library.strategy.mutraveler.Identity  ;}private static  jjtraveler.reflective.VisitableVisitor  tom_append_list_Sequence( jjtraveler.reflective.VisitableVisitor  l1,  jjtraveler.reflective.VisitableVisitor  l2) {    if(tom_is_empty_Sequence_Strategy(l1)) {     return l2;    } else if(tom_is_empty_Sequence_Strategy(l2)) {     return l1;    } else if(tom_is_fun_sym_Sequence(l1)) {       if(tom_is_empty_Sequence_Strategy(( jjtraveler.reflective.VisitableVisitor )tom_get_tail_Sequence_Strategy(l1))) {        return ( jjtraveler.reflective.VisitableVisitor )tom_cons_list_Sequence(( jjtraveler.reflective.VisitableVisitor )tom_get_head_Sequence_Strategy(l1),l2);      } else {        return ( jjtraveler.reflective.VisitableVisitor )tom_cons_list_Sequence(( jjtraveler.reflective.VisitableVisitor )tom_get_head_Sequence_Strategy(l1),tom_append_list_Sequence(( jjtraveler.reflective.VisitableVisitor )tom_get_tail_Sequence_Strategy(l1),l2));      }    } else {      return ( jjtraveler.reflective.VisitableVisitor )tom_cons_list_Sequence(l1 , l2);    }   }  private static  jjtraveler.reflective.VisitableVisitor  tom_get_slice_Sequence( jjtraveler.reflective.VisitableVisitor  begin,  jjtraveler.reflective.VisitableVisitor  end) {    if(tom_equal_term_Strategy(begin,end)) {      return ( jjtraveler.reflective.VisitableVisitor )tom_empty_list_Sequence();    } else {      return ( jjtraveler.reflective.VisitableVisitor )tom_cons_list_Sequence(( jjtraveler.reflective.VisitableVisitor )tom_get_head_Sequence_Strategy(begin),( jjtraveler.reflective.VisitableVisitor )tom_get_slice_Sequence(( jjtraveler.reflective.VisitableVisitor )tom_get_tail_Sequence_Strategy(begin),end));    }   }  private static  jjtraveler.reflective.VisitableVisitor  tom_make_Choice( jjtraveler.reflective.VisitableVisitor  first,  jjtraveler.reflective.VisitableVisitor  then) { return  new tom.library.strategy.mutraveler.Choice(first,then) ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_All( jjtraveler.reflective.VisitableVisitor  v) { return  new tom.library.strategy.mutraveler.All(v) ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_MuVar( String  name) { return  new tom.library.strategy.mutraveler.MuVar(name) ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_SequenceId( jjtraveler.reflective.VisitableVisitor  first,  jjtraveler.reflective.VisitableVisitor  then) { return  new tom.library.strategy.mutraveler.SequenceId(first,then) ; } /* Generated by TOM (version 2.5alpha): Do not edit this file */private static  jjtraveler.reflective.VisitableVisitor  tom_make_Try( jjtraveler.reflective.VisitableVisitor  v) { return tom_make_Choice(v,tom_make_Identity()) ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_TopDown( jjtraveler.reflective.VisitableVisitor  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence()))) ; }private static  jjtraveler.reflective.VisitableVisitor  tom_make_InnermostId( jjtraveler.reflective.VisitableVisitor  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_cons_list_Sequence(tom_make_SequenceId(v,tom_make_MuVar("_x")),tom_empty_list_Sequence()))) ; }   








  // ------------------------------------------------------------

  private SymbolTable symbolTable;
  private boolean camlsemantics = false;

  public Verifier(boolean camlsemantics) {
    super();
    this.camlsemantics = camlsemantics;
  }

  public void setSymbolTable(SymbolTable symbolTable) {
    this.symbolTable = symbolTable;
  }

  public SymbolTable getSymbolTable() {
    return symbolTable;
  }

  public boolean isCamlSemantics() {
    return camlsemantics;
  }

  public Term termFromTomTerm(TomTerm tomterm) {
     if (tom_is_sort_TomTerm(tomterm)) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch1Position1=(( tom.engine.adt.tomterm.types.TomTerm )tomterm); if ( ( tom_is_fun_sym_ExpressionToTomTerm(tomMatch1Position1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_expr=tom_get_slot_ExpressionToTomTerm_AstExpression(tomMatch1Position1); if ( true ) {

        return termFromExpresssion(tom_expr);
       } } } if ( ( tom_is_fun_sym_Variable(tomMatch1Position1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_name=tom_get_slot_Variable_AstName(tomMatch1Position1); if ( true ) {

        return termFromTomName(tom_name);
       } } } } }

    System.out.println("termFromTomTerm don't know how to handle this: " + tomterm);
    return tom_make_repr("foirade");
  }

  Variable variableFromTomName(TomName name) {
     if (tom_is_sort_TomName(name)) { { tom.engine.adt.tomname.types.TomName  tomMatch2Position1=(( tom.engine.adt.tomname.types.TomName )name); if ( ( tom_is_fun_sym_Name(tomMatch2Position1) ||  false  ) ) { { String  tom_stringname=tom_get_slot_Name_String(tomMatch2Position1); if ( true ) {

        return tom_make_var(tom_stringname);
       } } } if ( ( tom_is_fun_sym_PositionName(tomMatch2Position1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomNumberList  tom_numberlist=tom_get_slot_PositionName_NumberList(tomMatch2Position1); if ( true ) {

        return tom_make_var(TomBase.tomNumberListToString(tom_numberlist));
       } } } if ( ( tom_is_fun_sym_EmptyName(tomMatch2Position1) ||  false  ) ) { if ( true ) {

        return tom_make_var("emptyName");
       } } } }

    return tom_make_var("error while building variable name");
  }

  Term termFromTomName(TomName name) {
    return tom_make_tau(tom_make_absvar(variableFromTomName(name)));
  }

  public Term termFromExpresssion(Expression expression) {
     if (tom_is_sort_Expression(expression)) { { tom.engine.adt.tomexpression.types.Expression  tomMatch3Position1=(( tom.engine.adt.tomexpression.types.Expression )expression); if ( ( tom_is_fun_sym_GetSlot(tomMatch3Position1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tomMatch3Position1NameNumberAstName=tom_get_slot_GetSlot_AstName(tomMatch3Position1); { tom.engine.adt.tomterm.types.TomTerm  tomMatch3Position1NameNumberVariable=tom_get_slot_GetSlot_Variable(tomMatch3Position1); if ( ( tom_is_fun_sym_Name(tomMatch3Position1NameNumberAstName) ||  false  ) ) { { String  tom_symbolName=tom_get_slot_Name_String(tomMatch3Position1NameNumberAstName); { String  tom_slotName=tom_get_slot_GetSlot_SlotNameString(tomMatch3Position1); if ( ( tom_is_fun_sym_Variable(tomMatch3Position1NameNumberVariable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_name=tom_get_slot_Variable_AstName(tomMatch3Position1NameNumberVariable); if ( true ) {

        Term term = termFromTomName(tom_name);
        return tom_make_slot(tom_make_fsymbol(tom_symbolName),term,tom_slotName);
       } } } } } } } } } if ( ( tom_is_fun_sym_TomTermToExpression(tomMatch3Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch3Position1NameNumberAstTerm=tom_get_slot_TomTermToExpression_AstTerm(tomMatch3Position1); if ( ( tom_is_fun_sym_Variable(tomMatch3Position1NameNumberAstTerm) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_name=tom_get_slot_Variable_AstName(tomMatch3Position1NameNumberAstTerm); if ( true ) {

        Term term = termFromTomName(tom_name);
        return term;
       } } } } } if ( ( tom_is_fun_sym_Cast(tomMatch3Position1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_expr=tom_get_slot_Cast_Source(tomMatch3Position1); if ( true ) {

        return termFromExpresssion(tom_expr);
       } } } } }

    System.out.println("termFromExpresssion don't know how to handle this: " + expression);
    return tom_make_repr("autre foirade avec " + expression);
  }

  public Expr exprFromExpression(Expression expression) {
     if (tom_is_sort_Expression(expression)) { { tom.engine.adt.tomexpression.types.Expression  tomMatch4Position1=(( tom.engine.adt.tomexpression.types.Expression )expression); if ( ( tom_is_fun_sym_TrueTL(tomMatch4Position1) ||  false  ) ) { if ( true ) {
 return tom_make_iltrue(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()));  } } if ( ( tom_is_fun_sym_FalseTL(tomMatch4Position1) ||  false  ) ) { if ( true ) {
 return tom_make_ilfalse();  } } if ( ( tom_is_fun_sym_IsFsym(tomMatch4Position1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tomMatch4Position1NameNumberAstName=tom_get_slot_IsFsym_AstName(tomMatch4Position1); { tom.engine.adt.tomterm.types.TomTerm  tomMatch4Position1NameNumberVariable=tom_get_slot_IsFsym_Variable(tomMatch4Position1); if ( ( tom_is_fun_sym_Name(tomMatch4Position1NameNumberAstName) ||  false  ) ) { { String  tom_symbolName=tom_get_slot_Name_String(tomMatch4Position1NameNumberAstName); if ( ( tom_is_fun_sym_Variable(tomMatch4Position1NameNumberVariable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_varName=tom_get_slot_Variable_AstName(tomMatch4Position1NameNumberVariable); if ( true ) {

        Term term = termFromTomName(tom_varName);
        return tom_make_isfsym(term,tom_make_fsymbol(tom_symbolName));
       } } } } } } } } if ( ( tom_is_fun_sym_EqualTerm(tomMatch4Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_t1=tom_get_slot_EqualTerm_Kid1(tomMatch4Position1); { tom.engine.adt.tomterm.types.TomTerm  tom_t2=tom_get_slot_EqualTerm_Kid2(tomMatch4Position1); if ( true ) {

        return tom_make_eq(termFromTomTerm(tom_t1),termFromTomTerm(tom_t2));
       } } } } if ( ( tom_is_fun_sym_IsSort(tomMatch4Position1) ||  false  ) ) { if ( true ) {
 return tom_make_iltrue(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()));  } } } }

    System.out.println("exprFromExpression don't know how to handle this: " + expression);
    return tom_make_ilfalse();
  }

  public Instr instrFromInstructionList(InstructionList instrlist) {
    InstrList list = tom_empty_list_semicolon();
    while (!instrlist.isEmptyconcInstruction()) {
      Instruction i = (Instruction) instrlist.getHeadconcInstruction();
      instrlist = instrlist.getTailconcInstruction();
      list = tom_append_list_semicolon(list,tom_cons_list_semicolon(instrFromInstruction(i),tom_empty_list_semicolon()));
    }
    return tom_make_sequence(list);
  }

  public Instr instrFromInstruction(Instruction automata) {
     if (tom_is_sort_Instruction(automata)) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch5Position1=(( tom.engine.adt.tominstruction.types.Instruction )automata); if ( ( tom_is_fun_sym_TypedAction(tomMatch5Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.Pattern  tom_positivePattern=tom_get_slot_TypedAction_PositivePattern(tomMatch5Position1); { tom.engine.adt.tomterm.types.PatternList  tom_negativePatternList=tom_get_slot_TypedAction_NegativePatternList(tomMatch5Position1); if ( true ) {

        return tom_make_accept(tom_positivePattern.toATerm(),tom_negativePatternList.toATerm());
       } } } } if ( ( tom_is_fun_sym_If(tomMatch5Position1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_cond=tom_get_slot_If_Condition(tomMatch5Position1); { tom.engine.adt.tominstruction.types.Instruction  tom_ift=tom_get_slot_If_SuccesInst(tomMatch5Position1); { tom.engine.adt.tominstruction.types.Instruction  tom_iff=tom_get_slot_If_FailureInst(tomMatch5Position1); if ( true ) {


        return tom_make_ITE(exprFromExpression(tom_cond),instrFromInstruction(tom_ift),instrFromInstruction(tom_iff))

;
       } } } } } if ( ( tom_is_fun_sym_Let(tomMatch5Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch5Position1NameNumberVariable=tom_get_slot_Let_Variable(tomMatch5Position1); if ( ( tom_is_fun_sym_Variable(tomMatch5Position1NameNumberVariable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_avar=tom_get_slot_Variable_AstName(tomMatch5Position1NameNumberVariable); { tom.engine.adt.tomexpression.types.Expression  tom_expr=tom_get_slot_Let_Source(tomMatch5Position1); { tom.engine.adt.tominstruction.types.Instruction  tom_body=tom_get_slot_Let_AstInstruction(tomMatch5Position1); if ( true ) {

        Variable thevar = variableFromTomName(tom_avar);
        return tom_make_ILLet(thevar,termFromExpresssion(tom_expr),instrFromInstruction(tom_body))

;
       } } } } } } } if ( ( tom_is_fun_sym_LetAssign(tomMatch5Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch5Position1NameNumberVariable=tom_get_slot_LetAssign_Variable(tomMatch5Position1); if ( ( tom_is_fun_sym_Variable(tomMatch5Position1NameNumberVariable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_avar=tom_get_slot_Variable_AstName(tomMatch5Position1NameNumberVariable); { tom.engine.adt.tomexpression.types.Expression  tom_expr=tom_get_slot_LetAssign_Source(tomMatch5Position1); { tom.engine.adt.tominstruction.types.Instruction  tom_body=tom_get_slot_LetAssign_AstInstruction(tomMatch5Position1); if ( true ) {

        Variable thevar = variableFromTomName(tom_avar);
        return tom_make_ILLet(thevar,termFromExpresssion(tom_expr),instrFromInstruction(tom_body))

;
       } } } } } } } {boolean tomNameNumberboolMatch5Position1= false ; { tom.engine.adt.tomterm.types.TomTerm  tomMatch5Position1NameNumberVariable= null ; { tom.engine.adt.tomexpression.types.Expression  tomMatch5Position1NameNumberSource= null ; { tom.engine.adt.tominstruction.types.Instruction  tomMatch5Position1NameNumberAstInstruction= null ; if (tom_is_fun_sym_Let(tomMatch5Position1)) {tomNameNumberboolMatch5Position1= true ;tomMatch5Position1NameNumberVariable=tom_get_slot_Let_Variable(tomMatch5Position1);tomMatch5Position1NameNumberSource=tom_get_slot_Let_Source(tomMatch5Position1);tomMatch5Position1NameNumberAstInstruction=tom_get_slot_Let_AstInstruction(tomMatch5Position1); } else { if (tom_is_fun_sym_LetAssign(tomMatch5Position1)) {tomNameNumberboolMatch5Position1= true ;tomMatch5Position1NameNumberVariable=tom_get_slot_LetAssign_Variable(tomMatch5Position1);tomMatch5Position1NameNumberSource=tom_get_slot_LetAssign_Source(tomMatch5Position1);tomMatch5Position1NameNumberAstInstruction=tom_get_slot_LetAssign_AstInstruction(tomMatch5Position1); } } if (tomNameNumberboolMatch5Position1) { if ( ( tom_is_fun_sym_UnamedVariable(tomMatch5Position1NameNumberVariable) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_body=tomMatch5Position1NameNumberAstInstruction; if ( true ) {

        return instrFromInstruction(tom_body);
       } } } } } } } } if ( ( tom_is_fun_sym_CompiledPattern(tomMatch5Position1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_CompiledPattern_AutomataInst(tomMatch5Position1); if ( true ) {

        return instrFromInstruction(tom_instr);
       } } } if ( ( tom_is_fun_sym_AbstractBlock(tomMatch5Position1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tomMatch5Position1NameNumberInstList=tom_get_slot_AbstractBlock_InstList(tomMatch5Position1); if ( ( tom_is_fun_sym_concInstruction(tomMatch5Position1NameNumberInstList) ||  false  ) ) { {int tomMatch5Position1NameNumberInstListIndex1=0; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch5Position1NameNumberInstListList1=tomMatch5Position1NameNumberInstList; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch5Position1NameNumberInstListSave1=tomMatch5Position1NameNumberInstListList1; { if (!(tom_is_empty_concInstruction_InstructionList(tomMatch5Position1NameNumberInstListList1))) { { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_head_concInstruction_InstructionList(tomMatch5Position1NameNumberInstListList1);tomMatch5Position1NameNumberInstListIndex1=tomMatch5Position1NameNumberInstListIndex1 + 1;tomMatch5Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch5Position1NameNumberInstListList1); if (tom_is_empty_concInstruction_InstructionList(tomMatch5Position1NameNumberInstListList1)) { if ( true ) {

        return instrFromInstruction(tom_instr);
       } } } }tomMatch5Position1NameNumberInstListList1=tomMatch5Position1NameNumberInstListSave1; } } } } } } } if ( ( tom_is_fun_sym_AbstractBlock(tomMatch5Position1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tomMatch5Position1NameNumberInstList=tom_get_slot_AbstractBlock_InstList(tomMatch5Position1); if ( ( tom_is_fun_sym_concInstruction(tomMatch5Position1NameNumberInstList) ||  false  ) ) { {int tomMatch5Position1NameNumberInstListIndex1=0; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch5Position1NameNumberInstListList1=tomMatch5Position1NameNumberInstList; { tom.engine.adt.tominstruction.types.InstructionList  tom_instrlist=tomMatch5Position1NameNumberInstListList1; if ( true ) {

        return instrFromInstructionList(tom_instrlist);
       } } } } } } } if ( ( tom_is_fun_sym_Nop(tomMatch5Position1) ||  false  ) ) { if ( true ) {

        // tom uses nop in the iffalse part of ITE
        return tom_make_refuse();
       } } } }

    System.out.println("instrFromInstruction don't know how to handle this : " + automata);
    return tom_make_refuse();
  }

  private SubstitutionList abstractSubstitutionFromAccept(Instr instr) {
    SubstitutionList substitution = tom_empty_list_subs();
     if (tom_is_sort_Instr(instr)) { { tom.engine.adt.il.types.Instr  tomMatch6Position1=(( tom.engine.adt.il.types.Instr )instr); if ( ( tom_is_fun_sym_accept(tomMatch6Position1) ||  false  ) ) { { aterm.ATerm  tom_positive=tom_get_slot_accept_Positive(tomMatch6Position1); if ( true ) {

        Pattern positivePattern = Pattern.fromTerm(tom_positive);
         if (tom_is_sort_Pattern(positivePattern)) { { tom.engine.adt.tomterm.types.Pattern  tomMatch7Position1=(( tom.engine.adt.tomterm.types.Pattern )positivePattern); if ( ( tom_is_fun_sym_Pattern(tomMatch7Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomList  tom_subjectList=tom_get_slot_Pattern_SubjectList(tomMatch7Position1); if ( true ) {

            TomList sl = tom_subjectList;
            while(!sl.isEmptyconcTomTerm()) {
              TomTerm subject = sl.getHeadconcTomTerm();
              sl=sl.getTailconcTomTerm();
               if (tom_is_sort_TomTerm(subject)) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch8Position1=(( tom.engine.adt.tomterm.types.TomTerm )subject); if ( ( tom_is_fun_sym_Variable(tomMatch8Position1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_name=tom_get_slot_Variable_AstName(tomMatch8Position1); if ( true ) {

                  substitution = tom_append_list_subs(substitution,tom_cons_list_subs(tom_make_is(variableFromTomName(tom_name),termFromTomTerm(subject)),tom_empty_list_subs()))


;
                 } } } } }

            }
           } } } } }

       } } } } }

    return substitution;
  }

  public Collection build_tree(Instruction automata) {
    // System.out.println("Build derivation tree for: " + automata);

    // collects the accept in the automata
    Collection localAccepts = collectAccept(automata);

    Iterator iter = localAccepts.iterator();
    Collection treeList = new HashSet();
    while(iter.hasNext()) {
        Instr localAccept = (Instr) iter.next();

        // builds the initial abstract substitution
        SubstitutionList initialsubstitution = abstractSubstitutionFromAccept(localAccept);
        Environment startingenv = tom_make_env(initialsubstitution,instrFromInstruction(automata))
;

        Deriv startingderiv = tom_make_ebs(startingenv,tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),localAccept))
;

        Collection treeListPre = applySemanticsRules(startingderiv);
        // replace substitutions in trees
        Iterator it = treeListPre.iterator();
        while(it.hasNext()) {
            DerivTree tree = (DerivTree) it.next();
            SubstitutionList outputsubst = getOutputSubstitution(tree);
            tree = replaceUndefinedSubstitution(tree,outputsubst);
            treeList.add(tree);
        }
    }

    return treeList;
  }

  public Map getConstraints(Instruction automata) {
    // collects the accept in the automata
    Collection localAccepts = collectAccept(automata);

    Iterator iter = localAccepts.iterator();
    Map constraintList = new HashMap();
    while(iter.hasNext()) {
        Instr localAccept = (Instr) iter.next();

        // builds the initial abstract substitution
        SubstitutionList initialsubstitution = abstractSubstitutionFromAccept(localAccept);
        Expr constraints = buildConstraint(initialsubstitution,
                                           instrFromInstruction(automata),
                                           localAccept);
        constraintList.put(localAccept,constraints);
    }
    return constraintList;
  }

   private static class substitutionCollector  extends  tom.engine.adt.il.IlBasicStrategy   { private  SubstRef  outsubst;  public substitutionCollector(  SubstRef  outsubst ) { super(tom_make_Identity() ); this.outsubst=outsubst; } public  SubstRef  getoutsubst() { return outsubst;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.il.types.Expr  visit_Expr(  tom.engine.adt.il.types.Expr  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Expr(tom__arg)) { { tom.engine.adt.il.types.Expr  tomMatch9Position1=(( tom.engine.adt.il.types.Expr )tom__arg); if ( ( tom_is_fun_sym_iltrue(tomMatch9Position1) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tomMatch9Position1NameNumberSubst=tom_get_slot_iltrue_Subst(tomMatch9Position1); if ( ( tom_is_fun_sym_subs(tomMatch9Position1NameNumberSubst) ||  false  ) ) { {int tomMatch9Position1NameNumberSubstIndex1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch9Position1NameNumberSubstList1=tomMatch9Position1NameNumberSubst; { tom.engine.adt.il.types.SubstitutionList  tomMatch9Position1NameNumberSubstSave1=tomMatch9Position1NameNumberSubstList1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch9Position1NameNumberSubstList1))) { { tom.engine.adt.il.types.Substitution  tomMatch9Position1NameNumberSubstPosition1=tom_get_head_subs_SubstitutionList(tomMatch9Position1NameNumberSubstList1);tomMatch9Position1NameNumberSubstIndex1=tomMatch9Position1NameNumberSubstIndex1 + 1;tomMatch9Position1NameNumberSubstList1=tom_get_tail_subs_SubstitutionList(tomMatch9Position1NameNumberSubstList1); if ( ( tom_is_fun_sym_undefsubs(tomMatch9Position1NameNumberSubstPosition1) ||  false  ) ) { if (tom_is_empty_subs_SubstitutionList(tomMatch9Position1NameNumberSubstList1)) { { tom.engine.adt.il.types.Expr  tom_t=tomMatch9Position1; if ( true ) {tom_make_Fail()


.visit(tom_t);
       } } } } } }tomMatch9Position1NameNumberSubstList1=tomMatch9Position1NameNumberSubstSave1; } } } } } } } if ( ( tom_is_fun_sym_iltrue(tomMatch9Position1) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tom_x=tom_get_slot_iltrue_Subst(tomMatch9Position1); if ( true ) {

        outsubst.set(tom_x);
       } } } } } return super.visit_Expr(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_substitutionCollector( SubstRef  t0) { return new substitutionCollector(t0); }


  public SubstitutionList collectSubstitutionInConstraint(Expr expr) {
    SubstRef output = new SubstRef(tom_empty_list_subs());
    try {
      tom_make_mu(tom_make_MuVar("x"),tom_make_Try(tom_cons_list_Sequence(tom_make_substitutionCollector(output),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("x")),tom_empty_list_Sequence())))).visit(expr);
    } catch (jjtraveler.VisitFailure e) {
      throw new TomRuntimeException("Strategy substitutionCollector failed");
    }
    return output.get();
  }

   private static class outputSubstitutionCollector  extends  tom.engine.adt.il.IlBasicStrategy   { private  SubstRef  outsubst;  public outputSubstitutionCollector(  SubstRef  outsubst ) { super(tom_make_Identity() ); this.outsubst=outsubst; } public  SubstRef  getoutsubst() { return outsubst;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.il.types.Deriv  visit_Deriv(  tom.engine.adt.il.types.Deriv  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Deriv(tom__arg)) { { tom.engine.adt.il.types.Deriv  tomMatch10Position1=(( tom.engine.adt.il.types.Deriv )tom__arg); if ( ( tom_is_fun_sym_ebs(tomMatch10Position1) ||  false  ) ) { { tom.engine.adt.il.types.Environment  tomMatch10Position1NameNumberLhs=tom_get_slot_ebs_Lhs(tomMatch10Position1); { tom.engine.adt.il.types.Environment  tomMatch10Position1NameNumberRhs=tom_get_slot_ebs_Rhs(tomMatch10Position1); if ( ( tom_is_fun_sym_env(tomMatch10Position1NameNumberLhs) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tom_e=tom_get_slot_env_Subs(tomMatch10Position1NameNumberLhs); if ( ( tom_is_fun_sym_accept(tom_get_slot_env_I(tomMatch10Position1NameNumberLhs)) ||  false  ) ) { if ( ( tom_is_fun_sym_env(tomMatch10Position1NameNumberRhs) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tomMatch10Position1NameNumberRhsNameNumberSubs=tom_get_slot_env_Subs(tomMatch10Position1NameNumberRhs); if ( ( tom_is_fun_sym_subs(tomMatch10Position1NameNumberRhsNameNumberSubs) ||  false  ) ) { {int tomMatch10Position1NameNumberRhsNameNumberSubsIndex1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch10Position1NameNumberRhsNameNumberSubsList1=tomMatch10Position1NameNumberRhsNameNumberSubs; { tom.engine.adt.il.types.SubstitutionList  tomMatch10Position1NameNumberRhsNameNumberSubsSave1=tomMatch10Position1NameNumberRhsNameNumberSubsList1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch10Position1NameNumberRhsNameNumberSubsList1))) { { tom.engine.adt.il.types.Substitution  tomMatch10Position1NameNumberRhsNameNumberSubsPosition1=tom_get_head_subs_SubstitutionList(tomMatch10Position1NameNumberRhsNameNumberSubsList1);tomMatch10Position1NameNumberRhsNameNumberSubsIndex1=tomMatch10Position1NameNumberRhsNameNumberSubsIndex1 + 1;tomMatch10Position1NameNumberRhsNameNumberSubsList1=tom_get_tail_subs_SubstitutionList(tomMatch10Position1NameNumberRhsNameNumberSubsList1); if ( ( tom_is_fun_sym_undefsubs(tomMatch10Position1NameNumberRhsNameNumberSubsPosition1) ||  false  ) ) { if (tom_is_empty_subs_SubstitutionList(tomMatch10Position1NameNumberRhsNameNumberSubsList1)) { if ( ( tom_is_fun_sym_accept(tom_get_slot_env_I(tomMatch10Position1NameNumberRhs)) ||  false  ) ) { if ( true ) {


        outsubst.set(tom_e);
       } } } } } }tomMatch10Position1NameNumberRhsNameNumberSubsList1=tomMatch10Position1NameNumberRhsNameNumberSubsSave1; } } } } } } } } } } } } } } } return super.visit_Deriv(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_outputSubstitutionCollector( SubstRef  t0) { return new outputSubstitutionCollector(t0); }



  public SubstitutionList getOutputSubstitution(DerivTree subject) {
    SubstRef output = new SubstRef(tom_empty_list_subs());
    try {
      tom_make_TopDown(tom_make_outputSubstitutionCollector(output)).visit(subject);
    } catch (jjtraveler.VisitFailure e) {
      throw new TomRuntimeException("Strategy outputSubstitutionCollector failed");
    }
    return output.get();
  }

   private static class acceptCollector  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  java.util.Collection  store;  public acceptCollector(  java.util.Collection  store ) { super(tom_make_Identity() ); this.store=store; } public  java.util.Collection  getstore() { return store;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction(  tom.engine.adt.tominstruction.types.Instruction  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Instruction(tom__arg)) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch11Position1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg); if ( ( tom_is_fun_sym_TypedAction(tomMatch11Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.Pattern  tom_positive=tom_get_slot_TypedAction_PositivePattern(tomMatch11Position1); { tom.engine.adt.tomterm.types.PatternList  tom_negative=tom_get_slot_TypedAction_NegativePatternList(tomMatch11Position1); if ( true ) {


        store.add(tom_make_accept(tom_positive.toATerm(),tom_negative.toATerm()));
       } } } } } } return super.visit_Instruction(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_acceptCollector( java.util.Collection  t0) { return new acceptCollector(t0); }



  public Collection collectAccept(Instruction subject) {
    Collection result = new HashSet();
    try {
      tom_make_TopDown(tom_make_acceptCollector(result)).visit(subject);
    } catch (jjtraveler.VisitFailure e) {
      throw new TomRuntimeException("Strategy collectAccept failed");
    }
    return result;
  }


  /**
   * The axioms the mapping has to verify
   */
  protected Seq seqFromTerm(Term sp) {
    TermList ded = tom_cons_list_concTerm(sp,tom_empty_list_concTerm());
     if (tom_is_sort_Term(sp)) { if ( ( tom_is_fun_sym_appSubsT((( tom.engine.adt.il.types.Term )sp)) ||  false  ) ) { if ( true ) {

        TermList follow = applyMappingRules(replaceVariablesInTerm(sp));
        ded = tom_append_list_concTerm(ded,tom_append_list_concTerm(follow,tom_empty_list_concTerm()));
       } } }

    return tom_make_dedterm(tom_append_list_concTerm(ded,tom_empty_list_concTerm()));
  }

  protected ExprList exprListFromExpr(Expr sp) {
    ExprList ded = tom_cons_list_concExpr(sp,tom_empty_list_concExpr());
     if (tom_is_sort_Expr(sp)) { if ( ( tom_is_fun_sym_appSubsE((( tom.engine.adt.il.types.Expr )sp)) ||  false  ) ) { if ( true ) {

        ExprList follow = applyExprRules(replaceVariablesInExpr(sp));
        ded = tom_append_list_concExpr(ded,tom_append_list_concExpr(follow,tom_empty_list_concExpr()));
       } } }


    // System.out.println("dedexpr gives: " + ded);
    return ded;
  }

  protected SubstitutionList reduceSubstitutionWithMappingRules(SubstitutionList subst) {
     if (tom_is_sort_SubstitutionList(subst)) { { tom.engine.adt.il.types.SubstitutionList  tomMatch14Position1=(( tom.engine.adt.il.types.SubstitutionList )subst); if ( ( tom_is_fun_sym_subs(tomMatch14Position1) ||  false  ) ) { {int tomMatch14Position1Index1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch14Position1List1=tomMatch14Position1; if (tom_is_empty_subs_SubstitutionList(tomMatch14Position1List1)) { if ( true ) {

        return subst;
       } } } } } if ( ( tom_is_fun_sym_subs(tomMatch14Position1) ||  false  ) ) { {int tomMatch14Position1Index1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch14Position1List1=tomMatch14Position1; { tom.engine.adt.il.types.SubstitutionList  tomMatch14Position1Save1=tomMatch14Position1List1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch14Position1List1))) { { tom.engine.adt.il.types.Substitution  tomMatch14Position1Position1=tom_get_head_subs_SubstitutionList(tomMatch14Position1List1);tomMatch14Position1Index1=tomMatch14Position1Index1 + 1;tomMatch14Position1List1=tom_get_tail_subs_SubstitutionList(tomMatch14Position1List1); if ( ( tom_is_fun_sym_is(tomMatch14Position1Position1) ||  false  ) ) { { tom.engine.adt.il.types.Variable  tom_v=tom_get_slot_is_Var(tomMatch14Position1Position1); { tom.engine.adt.il.types.Term  tom_term=tom_get_slot_is_Term(tomMatch14Position1Position1); { tom.engine.adt.il.types.SubstitutionList  tom_t=tomMatch14Position1List1; if ( true ) {

        SubstitutionList tail = reduceSubstitutionWithMappingRules(tom_t);
        return tom_cons_list_subs(tom_make_is(tom_v,reduceTermWithMappingRules(replaceVariablesInTerm(tom_make_appSubsT(tail,tom_term)))),tom_append_list_subs(tail,tom_empty_list_subs()));
       } } } } } } }tomMatch14Position1List1=tomMatch14Position1Save1; } } } } } if ( ( tom_is_fun_sym_subs(tomMatch14Position1) ||  false  ) ) { {int tomMatch14Position1Index1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch14Position1List1=tomMatch14Position1; { tom.engine.adt.il.types.SubstitutionList  tomMatch14Position1Save1=tomMatch14Position1List1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch14Position1List1))) { { tom.engine.adt.il.types.Substitution  tomMatch14Position1Position1=tom_get_head_subs_SubstitutionList(tomMatch14Position1List1);tomMatch14Position1Index1=tomMatch14Position1Index1 + 1;tomMatch14Position1List1=tom_get_tail_subs_SubstitutionList(tomMatch14Position1List1); if ( ( tom_is_fun_sym_undefsubs(tomMatch14Position1Position1) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tom_t=tomMatch14Position1List1; if ( true ) {

        SubstitutionList tail = reduceSubstitutionWithMappingRules(tom_t);
        return tom_cons_list_subs(tom_make_undefsubs(),tom_append_list_subs(tail,tom_empty_list_subs()));
       } } } } }tomMatch14Position1List1=tomMatch14Position1Save1; } } } } } } }

    return subst;
  }
  protected Expr reduceWithMappingRules(Expr ex) {
     if (tom_is_sort_Expr(ex)) { { tom.engine.adt.il.types.Expr  tomMatch15Position1=(( tom.engine.adt.il.types.Expr )ex); if ( ( tom_is_fun_sym_eq(tomMatch15Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch15Position1NameNumberLt=tom_get_slot_eq_Lt(tomMatch15Position1); { tom.engine.adt.il.types.Term  tomMatch15Position1NameNumberRt=tom_get_slot_eq_Rt(tomMatch15Position1); if ( ( tom_is_fun_sym_tau(tomMatch15Position1NameNumberLt) ||  false  ) ) { { tom.engine.adt.il.types.AbsTerm  tom_tl=tom_get_slot_tau_Abst(tomMatch15Position1NameNumberLt); if ( ( tom_is_fun_sym_tau(tomMatch15Position1NameNumberRt) ||  false  ) ) { { tom.engine.adt.il.types.AbsTerm  tom_tr=tom_get_slot_tau_Abst(tomMatch15Position1NameNumberRt); if ( true ) {

        return tom_make_teq(tom_tl,tom_tr);
       } } } } } } } } if ( ( tom_is_fun_sym_isfsym(tomMatch15Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch15Position1NameNumberT=tom_get_slot_isfsym_T(tomMatch15Position1); if ( ( tom_is_fun_sym_tau(tomMatch15Position1NameNumberT) ||  false  ) ) { { tom.engine.adt.il.types.AbsTerm  tom_t=tom_get_slot_tau_Abst(tomMatch15Position1NameNumberT); { tom.engine.adt.il.types.Symbol  tom_symbol=tom_get_slot_isfsym_Symbol(tomMatch15Position1); if ( true ) {

        return tom_make_tisfsym(tom_t,tom_symbol);
       } } } } } } if ( ( tom_is_fun_sym_eq(tomMatch15Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tom_lt=tom_get_slot_eq_Lt(tomMatch15Position1); { tom.engine.adt.il.types.Term  tom_rt=tom_get_slot_eq_Rt(tomMatch15Position1); if ( true ) {

        // first reduce the argument
        return reduceWithMappingRules(tom_make_eq(reduceTermWithMappingRules(tom_lt),reduceTermWithMappingRules(tom_rt)));
       } } } } if ( ( tom_is_fun_sym_isfsym(tomMatch15Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tom_t=tom_get_slot_isfsym_T(tomMatch15Position1); { tom.engine.adt.il.types.Symbol  tom_symbol=tom_get_slot_isfsym_Symbol(tomMatch15Position1); if ( true ) {

        return reduceWithMappingRules(tom_make_isfsym(reduceTermWithMappingRules(tom_t),tom_symbol));
       } } } } if ( ( tom_is_fun_sym_ilnot(tomMatch15Position1) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tom_e=tom_get_slot_ilnot_Exp(tomMatch15Position1); if ( true ) {

        return tom_make_ilnot(reduceWithMappingRules(tom_e));
       } } } if ( ( tom_is_fun_sym_iltrue(tomMatch15Position1) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tom_substitutionList=tom_get_slot_iltrue_Subst(tomMatch15Position1); if ( true ) {

        return tom_make_iltrue(reduceSubstitutionWithMappingRules(tom_substitutionList));
       } } } if ( ( tom_is_fun_sym_ilfalse(tomMatch15Position1) ||  false  ) ) { if ( true ) {

        return ex;
       } } if ( ( tom_is_fun_sym_iland(tomMatch15Position1) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tom_lt=tom_get_slot_iland_Left(tomMatch15Position1); { tom.engine.adt.il.types.Expr  tom_rt=tom_get_slot_iland_Right(tomMatch15Position1); if ( true ) {

        return tom_make_iland(reduceWithMappingRules(tom_lt),reduceWithMappingRules(tom_rt));
       } } } } if ( ( tom_is_fun_sym_ilor(tomMatch15Position1) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tom_lt=tom_get_slot_ilor_Left(tomMatch15Position1); { tom.engine.adt.il.types.Expr  tom_rt=tom_get_slot_ilor_Right(tomMatch15Position1); if ( true ) {

        return tom_make_ilor(reduceWithMappingRules(tom_lt),reduceWithMappingRules(tom_rt));
       } } } } } }

    System.out.println("reduceWithMappingRules : nothing applies to:" + ex);
    return ex;
  }

  protected Term reduceTermWithMappingRules(Term trm) {
     if (tom_is_sort_Term(trm)) { { tom.engine.adt.il.types.Term  tomMatch16Position1=(( tom.engine.adt.il.types.Term )trm); if ( ( tom_is_fun_sym_tau(tomMatch16Position1) ||  false  ) ) { if ( true ) {

        return trm;
       } } if ( ( tom_is_fun_sym_subterm(tomMatch16Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch16Position1NameNumberT=tom_get_slot_subterm_T(tomMatch16Position1); { tom.engine.adt.il.types.Symbol  tom_s=tom_get_slot_subterm_Symbol(tomMatch16Position1); if ( ( tom_is_fun_sym_subterm(tomMatch16Position1NameNumberT) ||  false  ) ) { { tom.engine.adt.il.types.Term  tom_t=tomMatch16Position1NameNumberT; { int  tom_index=tom_get_slot_subterm_Index(tomMatch16Position1); if ( true ) {

        return reduceTermWithMappingRules(tom_make_subterm(tom_s,reduceTermWithMappingRules(tom_t),tom_index));
       } } } } } } } if ( ( tom_is_fun_sym_slot(tomMatch16Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch16Position1NameNumberT=tom_get_slot_slot_T(tomMatch16Position1); { tom.engine.adt.il.types.Symbol  tom_s=tom_get_slot_slot_Symbol(tomMatch16Position1); if ( ( tom_is_fun_sym_slot(tomMatch16Position1NameNumberT) ||  false  ) ) { { tom.engine.adt.il.types.Term  tom_t=tomMatch16Position1NameNumberT; { String  tom_slotName=tom_get_slot_slot_Name(tomMatch16Position1); if ( true ) {

        return reduceTermWithMappingRules(tom_make_slot(tom_s,reduceTermWithMappingRules(tom_t),tom_slotName));
       } } } } } } } if ( ( tom_is_fun_sym_subterm(tomMatch16Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch16Position1NameNumberT=tom_get_slot_subterm_T(tomMatch16Position1); { tom.engine.adt.il.types.Symbol  tom_s=tom_get_slot_subterm_Symbol(tomMatch16Position1); if ( ( tom_is_fun_sym_tau(tomMatch16Position1NameNumberT) ||  false  ) ) { { tom.engine.adt.il.types.AbsTerm  tom_t=tom_get_slot_tau_Abst(tomMatch16Position1NameNumberT); { int  tom_index=tom_get_slot_subterm_Index(tomMatch16Position1); if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term = tom_make_st(tom_s,tom_t,tom_index);
        return tom_make_tau(term);
       } } } } } } } if ( ( tom_is_fun_sym_slot(tomMatch16Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch16Position1NameNumberT=tom_get_slot_slot_T(tomMatch16Position1); { tom.engine.adt.il.types.Symbol  tom_s=tom_get_slot_slot_Symbol(tomMatch16Position1); if ( ( tom_is_fun_sym_tau(tomMatch16Position1NameNumberT) ||  false  ) ) { { tom.engine.adt.il.types.AbsTerm  tom_t=tom_get_slot_tau_Abst(tomMatch16Position1NameNumberT); { String  tom_slotName=tom_get_slot_slot_Name(tomMatch16Position1); if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term = tom_make_sl(tom_s,tom_t,tom_slotName);
        return tom_make_tau(term);
       } } } } } } } } }

    System.out.println("reduceTermWithMappingRules : nothing applies to:" + trm);
    return trm;
  }

  protected TermList applyMappingRules(Term trm) {
     if (tom_is_sort_Term(trm)) { { tom.engine.adt.il.types.Term  tomMatch17Position1=(( tom.engine.adt.il.types.Term )trm); if ( ( tom_is_fun_sym_tau(tomMatch17Position1) ||  false  ) ) { if ( true ) {

        return tom_cons_list_concTerm(trm,tom_empty_list_concTerm());
       } } if ( ( tom_is_fun_sym_subterm(tomMatch17Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch17Position1NameNumberT=tom_get_slot_subterm_T(tomMatch17Position1); { tom.engine.adt.il.types.Symbol  tom_s=tom_get_slot_subterm_Symbol(tomMatch17Position1); if ( ( tom_is_fun_sym_subterm(tomMatch17Position1NameNumberT) ||  false  ) ) { { tom.engine.adt.il.types.Term  tom_t=tomMatch17Position1NameNumberT; { int  tom_index=tom_get_slot_subterm_Index(tomMatch17Position1); if ( true ) {

        // first reduce the argument
        TermList reduced = applyMappingRules(tom_t);
        TermList res = tom_cons_list_concTerm(trm,tom_empty_list_concTerm());
        while(!reduced.isEmptyconcTerm()) {
          Term head = reduced.getHeadconcTerm();
          if (head.istau()) {
            TermList hl = applyMappingRules(head);
            while(!hl.isEmptyconcTerm()) {
              Term h = hl.getHeadconcTerm();
              res = tom_append_list_concTerm(res,tom_cons_list_concTerm(tom_make_subterm(tom_s,h,tom_index),tom_empty_list_concTerm()));
              hl = hl.getTailconcTerm();
            }
          } else {
            res = tom_append_list_concTerm(res,tom_cons_list_concTerm(tom_make_subterm(tom_s,head,tom_index),tom_empty_list_concTerm()));
          }
          reduced = reduced.getTailconcTerm();
        }
        return tom_append_list_concTerm(res,tom_empty_list_concTerm());
       } } } } } } } if ( ( tom_is_fun_sym_slot(tomMatch17Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch17Position1NameNumberT=tom_get_slot_slot_T(tomMatch17Position1); { tom.engine.adt.il.types.Symbol  tom_s=tom_get_slot_slot_Symbol(tomMatch17Position1); if ( ( tom_is_fun_sym_slot(tomMatch17Position1NameNumberT) ||  false  ) ) { { tom.engine.adt.il.types.Term  tom_t=tomMatch17Position1NameNumberT; { String  tom_slotName=tom_get_slot_slot_Name(tomMatch17Position1); if ( true ) {

        // first reduce the argument
        TermList reduced = applyMappingRules(tom_t);
        TermList res = tom_cons_list_concTerm(trm,tom_empty_list_concTerm());
        while(!reduced.isEmptyconcTerm()) {
          Term head = reduced.getHeadconcTerm();
          if (head.istau()) {
            TermList hl = applyMappingRules(head);
            while(!hl.isEmptyconcTerm()) {
              Term h = hl.getHeadconcTerm();
              res = tom_append_list_concTerm(res,tom_cons_list_concTerm(tom_make_slot(tom_s,h,tom_slotName),tom_empty_list_concTerm()));
              hl = hl.getTailconcTerm();
            }
          } else {
            res = tom_append_list_concTerm(res,tom_cons_list_concTerm(tom_make_slot(tom_s,head,tom_slotName),tom_empty_list_concTerm()));
          }
          reduced = reduced.getTailconcTerm();
        }
        return tom_append_list_concTerm(res,tom_empty_list_concTerm());
       } } } } } } } if ( ( tom_is_fun_sym_subterm(tomMatch17Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch17Position1NameNumberT=tom_get_slot_subterm_T(tomMatch17Position1); { tom.engine.adt.il.types.Symbol  tom_s=tom_get_slot_subterm_Symbol(tomMatch17Position1); if ( ( tom_is_fun_sym_tau(tomMatch17Position1NameNumberT) ||  false  ) ) { { tom.engine.adt.il.types.AbsTerm  tom_t=tom_get_slot_tau_Abst(tomMatch17Position1NameNumberT); { int  tom_index=tom_get_slot_subterm_Index(tomMatch17Position1); if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term = tom_make_st(tom_s,tom_t,tom_index);
        return tom_cons_list_concTerm(trm,tom_cons_list_concTerm(tom_make_tau(term),tom_empty_list_concTerm()));
       } } } } } } } if ( ( tom_is_fun_sym_slot(tomMatch17Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch17Position1NameNumberT=tom_get_slot_slot_T(tomMatch17Position1); { tom.engine.adt.il.types.Symbol  tom_s=tom_get_slot_slot_Symbol(tomMatch17Position1); if ( ( tom_is_fun_sym_tau(tomMatch17Position1NameNumberT) ||  false  ) ) { { tom.engine.adt.il.types.AbsTerm  tom_t=tom_get_slot_tau_Abst(tomMatch17Position1NameNumberT); { String  tom_slotName=tom_get_slot_slot_Name(tomMatch17Position1); if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term = tom_make_sl(tom_s,tom_t,tom_slotName);
        return tom_cons_list_concTerm(trm,tom_cons_list_concTerm(tom_make_tau(term),tom_empty_list_concTerm()));
       } } } } } } } } }

    System.out.println("apply TermRules : nothing applies to:" + trm);
    return tom_cons_list_concTerm(trm,tom_empty_list_concTerm());
  }

  protected ExprList applyExprRules(Expr ex) {
     if (tom_is_sort_Expr(ex)) { { tom.engine.adt.il.types.Expr  tomMatch18Position1=(( tom.engine.adt.il.types.Expr )ex); if ( ( tom_is_fun_sym_eq(tomMatch18Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch18Position1NameNumberLt=tom_get_slot_eq_Lt(tomMatch18Position1); { tom.engine.adt.il.types.Term  tomMatch18Position1NameNumberRt=tom_get_slot_eq_Rt(tomMatch18Position1); if ( ( tom_is_fun_sym_tau(tomMatch18Position1NameNumberLt) ||  false  ) ) { { tom.engine.adt.il.types.AbsTerm  tom_tl=tom_get_slot_tau_Abst(tomMatch18Position1NameNumberLt); if ( ( tom_is_fun_sym_tau(tomMatch18Position1NameNumberRt) ||  false  ) ) { { tom.engine.adt.il.types.AbsTerm  tom_tr=tom_get_slot_tau_Abst(tomMatch18Position1NameNumberRt); if ( true ) {

        return tom_cons_list_concExpr(ex,tom_cons_list_concExpr(tom_make_teq(tom_tl,tom_tr),tom_empty_list_concExpr()));
       } } } } } } } } if ( ( tom_is_fun_sym_isfsym(tomMatch18Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tomMatch18Position1NameNumberT=tom_get_slot_isfsym_T(tomMatch18Position1); if ( ( tom_is_fun_sym_tau(tomMatch18Position1NameNumberT) ||  false  ) ) { { tom.engine.adt.il.types.AbsTerm  tom_t=tom_get_slot_tau_Abst(tomMatch18Position1NameNumberT); { tom.engine.adt.il.types.Symbol  tom_symbol=tom_get_slot_isfsym_Symbol(tomMatch18Position1); if ( true ) {

        return tom_cons_list_concExpr(ex,tom_cons_list_concExpr(tom_make_tisfsym(tom_t,tom_symbol),tom_empty_list_concExpr()));
       } } } } } } if ( ( tom_is_fun_sym_eq(tomMatch18Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tom_lt=tom_get_slot_eq_Lt(tomMatch18Position1); { tom.engine.adt.il.types.Term  tom_rt=tom_get_slot_eq_Rt(tomMatch18Position1); if ( true ) {

        // first reduce the argument
        Term reducedl = reverseTermList((TermList)applyMappingRules(tom_lt)).getHeadconcTerm();
        Term reducedr = reverseTermList((TermList)applyMappingRules(tom_rt)).getHeadconcTerm();

        ExprList taill = applyExprRules(tom_make_eq(reducedl,reducedr));
        ExprList res = tom_cons_list_concExpr(ex,tom_append_list_concExpr(taill,tom_empty_list_concExpr()));
       } } } } if ( ( tom_is_fun_sym_isfsym(tomMatch18Position1) ||  false  ) ) { { tom.engine.adt.il.types.Term  tom_t=tom_get_slot_isfsym_T(tomMatch18Position1); { tom.engine.adt.il.types.Symbol  tom_symbol=tom_get_slot_isfsym_Symbol(tomMatch18Position1); if ( true ) {

        // first reduce the argument
        TermList reduced = applyMappingRules(tom_t);
        ExprList res = tom_cons_list_concExpr(ex,tom_empty_list_concExpr());
        while(!reduced.isEmptyconcTerm()) {
          Term head = reduced.getHeadconcTerm();
          res = tom_append_list_concExpr(res,tom_cons_list_concExpr(tom_make_isfsym(head,tom_symbol),tom_empty_list_concExpr()));
          reduced = reduced.getTailconcTerm();
        }
         if (tom_is_sort_ExprList(res)) { { tom.engine.adt.il.types.ExprList  tomMatch19Position1=(( tom.engine.adt.il.types.ExprList )res); if ( ( tom_is_fun_sym_concExpr(tomMatch19Position1) ||  false  ) ) { {int tomMatch19Position1Index1=0; { tom.engine.adt.il.types.ExprList  tomMatch19Position1List1=tomMatch19Position1; { tom.engine.adt.il.types.ExprList  tomMatch19Position1Begin1=tomMatch19Position1List1; { tom.engine.adt.il.types.ExprList  tomMatch19Position1End1=tomMatch19Position1List1; { while (!(tom_is_empty_concExpr_ExprList(tomMatch19Position1End1))) {tomMatch19Position1List1=tomMatch19Position1End1; { { tom.engine.adt.il.types.ExprList  tom_hl=tom_get_slice_concExpr(tomMatch19Position1Begin1,tomMatch19Position1End1); { tom.engine.adt.il.types.ExprList  tomMatch19Position1Save2=tomMatch19Position1List1; { { tom.engine.adt.il.types.Expr  tom_tail=tom_get_head_concExpr_ExprList(tomMatch19Position1List1);tomMatch19Position1Index1=tomMatch19Position1Index1 + 1;tomMatch19Position1List1=tom_get_tail_concExpr_ExprList(tomMatch19Position1List1); if (tom_is_empty_concExpr_ExprList(tomMatch19Position1List1)) { if ( true ) {

            ExprList taill = applyExprRules(tom_tail);
            return tom_append_list_concExpr(tom_hl,tom_append_list_concExpr(taill,tom_empty_list_concExpr()));
           } } }tomMatch19Position1List1=tomMatch19Position1Save2; } } }tomMatch19Position1End1=tom_get_tail_concExpr_ExprList(tomMatch19Position1End1); } }tomMatch19Position1List1=tomMatch19Position1Begin1; } } } } } } } }

       } } } } if ( ( tom_is_fun_sym_ilnot(tomMatch18Position1) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tom_e=tom_get_slot_ilnot_Exp(tomMatch18Position1); if ( true ) {

        ExprList exprList = applyExprRules(tom_e);
        ExprList newExprList = tom_cons_list_concExpr(ex,tom_empty_list_concExpr());
        while(!exprList.isEmptyconcExpr()) {
          Expr localExpr = exprList.getHeadconcExpr();
          exprList = exprList.getTailconcExpr();
          newExprList = tom_append_list_concExpr(newExprList,tom_cons_list_concExpr(tom_make_ilnot(localExpr),tom_empty_list_concExpr()));
        }
        return newExprList;
       } } } if ( ( tom_is_fun_sym_ilfalse(tomMatch18Position1) ||  ( tom_is_fun_sym_iltrue(tomMatch18Position1) ||  false  )  ) ) { if ( true ) {

        return tom_cons_list_concExpr(ex,tom_empty_list_concExpr());
       } } } }

    System.out.println("apply ExprRules : nothing applies to:" + ex);
    return tom_cons_list_concExpr(ex,tom_empty_list_concExpr());
  }

  protected Expr buildConstraint(SubstitutionList substitution, Instr pil,Instr goal) {
     if (tom_is_sort_Instr(pil)) { { tom.engine.adt.il.types.Instr  tomMatch20Position1=(( tom.engine.adt.il.types.Instr )pil); if ( ( tom_is_fun_sym_sequence(tomMatch20Position1) ||  false  ) ) { { tom.engine.adt.il.types.InstrList  tomMatch20Position1NameNumberInstrlist=tom_get_slot_sequence_Instrlist(tomMatch20Position1); if ( ( tom_is_fun_sym_semicolon(tomMatch20Position1NameNumberInstrlist) ||  false  ) ) { {int tomMatch20Position1NameNumberInstrlistIndex1=0; { tom.engine.adt.il.types.InstrList  tomMatch20Position1NameNumberInstrlistList1=tomMatch20Position1NameNumberInstrlist; { tom.engine.adt.il.types.InstrList  tomMatch20Position1NameNumberInstrlistSave1=tomMatch20Position1NameNumberInstrlistList1; { if (!(tom_is_empty_semicolon_InstrList(tomMatch20Position1NameNumberInstrlistList1))) { { tom.engine.adt.il.types.Instr  tom_h=tom_get_head_semicolon_InstrList(tomMatch20Position1NameNumberInstrlistList1);tomMatch20Position1NameNumberInstrlistIndex1=tomMatch20Position1NameNumberInstrlistIndex1 + 1;tomMatch20Position1NameNumberInstrlistList1=tom_get_tail_semicolon_InstrList(tomMatch20Position1NameNumberInstrlistList1); { tom.engine.adt.il.types.InstrList  tom_t=tomMatch20Position1NameNumberInstrlistList1; if ( true ) {

        Expr goalFromHead = buildConstraint(substitution,tom_h,goal);
        if (!tom_t.isEmptysemicolon()) {
          Expr refuseFromHead = buildConstraint(substitution,tom_h,tom_make_refuse());
          Expr goalFromTail = buildConstraint(substitution,tom_make_sequence(tom_t),goal);
          if(this.isCamlSemantics()) {
            return tom_make_ilor(goalFromHead,tom_make_iland(refuseFromHead,goalFromTail));
          } else {
            return tom_make_ilor(goalFromHead,goalFromTail);
          }
        } else {
          return goalFromHead;
        }
       } } } }tomMatch20Position1NameNumberInstrlistList1=tomMatch20Position1NameNumberInstrlistSave1; } } } } } } } if ( ( tom_is_fun_sym_ILLet(tomMatch20Position1) ||  false  ) ) { { tom.engine.adt.il.types.Variable  tom_x=tom_get_slot_ILLet_Var(tomMatch20Position1); { tom.engine.adt.il.types.Term  tom_u=tom_get_slot_ILLet_T(tomMatch20Position1); { tom.engine.adt.il.types.Instr  tom_i=tom_get_slot_ILLet_Body(tomMatch20Position1); if ( true ) {

        // update the substitution
        Term t = replaceVariablesInTerm(tom_make_appSubsT(substitution,tom_u));
        substitution = tom_append_list_subs(substitution,tom_cons_list_subs(tom_make_is(tom_x,t),tom_empty_list_subs()));
        //return `iland(eq(tau(absvar(x)),u),buildConstraint(substitution,i,goal));
        return buildConstraint(substitution,tom_i,goal);
       } } } } } if ( ( tom_is_fun_sym_ITE(tomMatch20Position1) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tom_exp=tom_get_slot_ITE_E(tomMatch20Position1); { tom.engine.adt.il.types.Instr  tom_ift=tom_get_slot_ITE_Ift(tomMatch20Position1); { tom.engine.adt.il.types.Instr  tom_iff=tom_get_slot_ITE_Iff(tomMatch20Position1); if ( true ) {

        Expr closedExpr = replaceVariablesInExpr(tom_make_appSubsE(substitution,tom_exp));
        Expr constraintTrue  = tom_make_iland(closedExpr,buildConstraint(substitution,tom_ift,goal));
        Expr constraintFalse = tom_make_iland(tom_make_ilnot(closedExpr),buildConstraint(substitution,tom_iff,goal));
        return tom_make_ilor(constraintTrue,constraintFalse);
       } } } } } if ( ( tom_is_fun_sym_refuse(tomMatch20Position1) ||  false  ) ) { if ( true ) {

        if (pil == goal) {
          return tom_make_iltrue(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()));
        } else {
          return tom_make_ilfalse();
        }
       } } if ( ( tom_is_fun_sym_accept(tomMatch20Position1) ||  false  ) ) { if ( true ) {

        if (pil == goal) {
          return tom_make_iltrue(substitution);
        } else {
          return tom_make_ilfalse();
        }
       } } } }

    // default case, should not happen
    return tom_make_ilfalse();
  }

  protected Collection applySemanticsRules(Deriv post) {
    Collection c = new HashSet();
     if (tom_is_sort_Deriv(post)) { { tom.engine.adt.il.types.Deriv  tomMatch21Position1=(( tom.engine.adt.il.types.Deriv )post); if ( ( tom_is_fun_sym_ebs(tomMatch21Position1) ||  false  ) ) { { tom.engine.adt.il.types.Environment  tomMatch21Position1NameNumberLhs=tom_get_slot_ebs_Lhs(tomMatch21Position1); { tom.engine.adt.il.types.Environment  tomMatch21Position1NameNumberRhs=tom_get_slot_ebs_Rhs(tomMatch21Position1); if ( ( tom_is_fun_sym_env(tomMatch21Position1NameNumberLhs) ||  false  ) ) { { tom.engine.adt.il.types.Instr  tomMatch21Position1NameNumberLhsNameNumberI=tom_get_slot_env_I(tomMatch21Position1NameNumberLhs); { tom.engine.adt.il.types.SubstitutionList  tom_e=tom_get_slot_env_Subs(tomMatch21Position1NameNumberLhs); if ( ( tom_is_fun_sym_sequence(tomMatch21Position1NameNumberLhsNameNumberI) ||  false  ) ) { { tom.engine.adt.il.types.InstrList  tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlist=tom_get_slot_sequence_Instrlist(tomMatch21Position1NameNumberLhsNameNumberI); if ( ( tom_is_fun_sym_semicolon(tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlist) ||  false  ) ) { {int tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistIndex1=0; { tom.engine.adt.il.types.InstrList  tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistList1=tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlist; { tom.engine.adt.il.types.InstrList  tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistSave1=tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistList1; { if (!(tom_is_empty_semicolon_InstrList(tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistList1))) { { tom.engine.adt.il.types.Instr  tom_h=tom_get_head_semicolon_InstrList(tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistList1);tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistIndex1=tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistIndex1 + 1;tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistList1=tom_get_tail_semicolon_InstrList(tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistList1); { tom.engine.adt.il.types.InstrList  tom_t=tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistList1; if ( ( tom_is_fun_sym_env(tomMatch21Position1NameNumberRhs) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubs=tom_get_slot_env_Subs(tomMatch21Position1NameNumberRhs); if ( ( tom_is_fun_sym_subs(tomMatch21Position1NameNumberRhsNameNumberSubs) ||  false  ) ) { {int tomMatch21Position1NameNumberRhsNameNumberSubsIndex1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubsList1=tomMatch21Position1NameNumberRhsNameNumberSubs; { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubsSave1=tomMatch21Position1NameNumberRhsNameNumberSubsList1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1))) { { tom.engine.adt.il.types.Substitution  tomMatch21Position1NameNumberRhsNameNumberSubsPosition1=tom_get_head_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1);tomMatch21Position1NameNumberRhsNameNumberSubsIndex1=tomMatch21Position1NameNumberRhsNameNumberSubsIndex1 + 1;tomMatch21Position1NameNumberRhsNameNumberSubsList1=tom_get_tail_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1); if ( ( tom_is_fun_sym_undefsubs(tomMatch21Position1NameNumberRhsNameNumberSubsPosition1) ||  false  ) ) { if (tom_is_empty_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1)) { { tom.engine.adt.il.types.Instr  tom_ip=tom_get_slot_env_I(tomMatch21Position1NameNumberRhs); if ( true ) {

        if(instructionContains(tom_h,tom_ip)) {
          // ends the derivation
          Deriv up = tom_make_ebs(tom_make_env(tom_e,tom_h),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tom_ip));
          Collection pre_list = applySemanticsRules(up);

          Iterator it = pre_list.iterator();
          while(it.hasNext()) {
            DerivTree pre = (DerivTree) it.next();
            c.add(tom_make_derivrule("seqa",post,pre,tom_make_seq()));
          }
        } else {
          // continue the derivation with t
          Deriv up = tom_make_ebs(tom_make_env(tom_e,tom_make_sequence(tom_t)),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tom_ip));
          Collection post_list = applySemanticsRules(up);

          if(this.isCamlSemantics()) {
            up = tom_make_ebs(tom_make_env(tom_e,tom_h),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tom_make_refuse()));
            Collection pre_list = applySemanticsRules(up);
            Iterator it = pre_list.iterator();
            while(it.hasNext()) {
              DerivTree pre = (DerivTree) it.next();
              Iterator it2 = post_list.iterator();
              while(it2.hasNext()) {
                DerivTree pre2 = (DerivTree) it2.next();
                c.add(tom_make_derivrule2("seqb",post,pre,pre2,tom_make_seq()));
              }
            }
          } else {
            Iterator it = post_list.iterator();
            while(it.hasNext()) {
              DerivTree pre = (DerivTree) it.next();
              c.add(tom_make_derivrule2("seqb",post,tom_make_endderiv(),pre,tom_make_seq()));
            }
          }
        }
       } } } } } }tomMatch21Position1NameNumberRhsNameNumberSubsList1=tomMatch21Position1NameNumberRhsNameNumberSubsSave1; } } } } } } } } } }tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistList1=tomMatch21Position1NameNumberLhsNameNumberINameNumberInstrlistSave1; } } } } } } } } } } } } } if ( ( tom_is_fun_sym_ebs(tomMatch21Position1) ||  false  ) ) { { tom.engine.adt.il.types.Environment  tomMatch21Position1NameNumberLhs=tom_get_slot_ebs_Lhs(tomMatch21Position1); { tom.engine.adt.il.types.Environment  tomMatch21Position1NameNumberRhs=tom_get_slot_ebs_Rhs(tomMatch21Position1); if ( ( tom_is_fun_sym_env(tomMatch21Position1NameNumberLhs) ||  false  ) ) { { tom.engine.adt.il.types.Instr  tomMatch21Position1NameNumberLhsNameNumberI=tom_get_slot_env_I(tomMatch21Position1NameNumberLhs); { tom.engine.adt.il.types.SubstitutionList  tom_e=tom_get_slot_env_Subs(tomMatch21Position1NameNumberLhs); if ( ( tom_is_fun_sym_ILLet(tomMatch21Position1NameNumberLhsNameNumberI) ||  false  ) ) { { tom.engine.adt.il.types.Variable  tom_x=tom_get_slot_ILLet_Var(tomMatch21Position1NameNumberLhsNameNumberI); { tom.engine.adt.il.types.Term  tom_u=tom_get_slot_ILLet_T(tomMatch21Position1NameNumberLhsNameNumberI); { tom.engine.adt.il.types.Instr  tom_i=tom_get_slot_ILLet_Body(tomMatch21Position1NameNumberLhsNameNumberI); if ( ( tom_is_fun_sym_env(tomMatch21Position1NameNumberRhs) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubs=tom_get_slot_env_Subs(tomMatch21Position1NameNumberRhs); if ( ( tom_is_fun_sym_subs(tomMatch21Position1NameNumberRhsNameNumberSubs) ||  false  ) ) { {int tomMatch21Position1NameNumberRhsNameNumberSubsIndex1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubsList1=tomMatch21Position1NameNumberRhsNameNumberSubs; { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubsSave1=tomMatch21Position1NameNumberRhsNameNumberSubsList1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1))) { { tom.engine.adt.il.types.Substitution  tomMatch21Position1NameNumberRhsNameNumberSubsPosition1=tom_get_head_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1);tomMatch21Position1NameNumberRhsNameNumberSubsIndex1=tomMatch21Position1NameNumberRhsNameNumberSubsIndex1 + 1;tomMatch21Position1NameNumberRhsNameNumberSubsList1=tom_get_tail_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1); if ( ( tom_is_fun_sym_undefsubs(tomMatch21Position1NameNumberRhsNameNumberSubsPosition1) ||  false  ) ) { if (tom_is_empty_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1)) { { tom.engine.adt.il.types.Instr  tom_ip=tom_get_slot_env_I(tomMatch21Position1NameNumberRhs); if ( true ) {


        // build condition
        Seq cond = seqFromTerm(tom_make_appSubsT(tom_e,tom_u));
        // find "t"
        Term t = null;
         if (tom_is_sort_Seq(cond)) { { tom.engine.adt.il.types.Seq  tomMatch22Position1=(( tom.engine.adt.il.types.Seq )cond); if ( ( tom_is_fun_sym_dedterm(tomMatch22Position1) ||  false  ) ) { { tom.engine.adt.il.types.TermList  tomMatch22Position1NameNumberTerms=tom_get_slot_dedterm_Terms(tomMatch22Position1); if ( ( tom_is_fun_sym_concTerm(tomMatch22Position1NameNumberTerms) ||  false  ) ) { {int tomMatch22Position1NameNumberTermsIndex1=0; { tom.engine.adt.il.types.TermList  tomMatch22Position1NameNumberTermsList1=tomMatch22Position1NameNumberTerms; { tom.engine.adt.il.types.TermList  tomMatch22Position1NameNumberTermsBegin1=tomMatch22Position1NameNumberTermsList1; { tom.engine.adt.il.types.TermList  tomMatch22Position1NameNumberTermsEnd1=tomMatch22Position1NameNumberTermsList1; { while (!(tom_is_empty_concTerm_TermList(tomMatch22Position1NameNumberTermsEnd1))) {tomMatch22Position1NameNumberTermsList1=tomMatch22Position1NameNumberTermsEnd1; { { tom.engine.adt.il.types.TermList  tomMatch22Position1NameNumberTermsSave2=tomMatch22Position1NameNumberTermsList1; { { tom.engine.adt.il.types.Term  tom_r=tom_get_head_concTerm_TermList(tomMatch22Position1NameNumberTermsList1);tomMatch22Position1NameNumberTermsIndex1=tomMatch22Position1NameNumberTermsIndex1 + 1;tomMatch22Position1NameNumberTermsList1=tom_get_tail_concTerm_TermList(tomMatch22Position1NameNumberTermsList1); if (tom_is_empty_concTerm_TermList(tomMatch22Position1NameNumberTermsList1)) { if ( true ) {
 t = tom_r;  } } }tomMatch22Position1NameNumberTermsList1=tomMatch22Position1NameNumberTermsSave2; } }tomMatch22Position1NameNumberTermsEnd1=tom_get_tail_concTerm_TermList(tomMatch22Position1NameNumberTermsEnd1); } }tomMatch22Position1NameNumberTermsList1=tomMatch22Position1NameNumberTermsBegin1; } } } } } } } } if ( true ) {
 if (t == null) {
              System.out.println("seqFromTerm has a problem with " + cond);
            }
           } } }

        Deriv up = tom_make_ebs(tom_make_env(tom_append_list_subs(tom_e,tom_cons_list_subs(tom_make_is(tom_x,t),tom_empty_list_subs())),tom_i),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tom_ip)
            )


;
        Collection pre_list = applySemanticsRules(up);
        Iterator it = pre_list.iterator();
        while(it.hasNext()) {
          DerivTree pre = (DerivTree) it.next();
          c.add(tom_make_derivrule("let",post,pre,cond));
        }
       } } } } } }tomMatch21Position1NameNumberRhsNameNumberSubsList1=tomMatch21Position1NameNumberRhsNameNumberSubsSave1; } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_ebs(tomMatch21Position1) ||  false  ) ) { { tom.engine.adt.il.types.Environment  tomMatch21Position1NameNumberLhs=tom_get_slot_ebs_Lhs(tomMatch21Position1); { tom.engine.adt.il.types.Environment  tomMatch21Position1NameNumberRhs=tom_get_slot_ebs_Rhs(tomMatch21Position1); if ( ( tom_is_fun_sym_env(tomMatch21Position1NameNumberLhs) ||  false  ) ) { { tom.engine.adt.il.types.Instr  tomMatch21Position1NameNumberLhsNameNumberI=tom_get_slot_env_I(tomMatch21Position1NameNumberLhs); { tom.engine.adt.il.types.SubstitutionList  tom_e=tom_get_slot_env_Subs(tomMatch21Position1NameNumberLhs); if ( ( tom_is_fun_sym_ITE(tomMatch21Position1NameNumberLhsNameNumberI) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tom_exp=tom_get_slot_ITE_E(tomMatch21Position1NameNumberLhsNameNumberI); { tom.engine.adt.il.types.Instr  tom_ift=tom_get_slot_ITE_Ift(tomMatch21Position1NameNumberLhsNameNumberI); { tom.engine.adt.il.types.Instr  tom_iff=tom_get_slot_ITE_Iff(tomMatch21Position1NameNumberLhsNameNumberI); if ( ( tom_is_fun_sym_env(tomMatch21Position1NameNumberRhs) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubs=tom_get_slot_env_Subs(tomMatch21Position1NameNumberRhs); if ( ( tom_is_fun_sym_subs(tomMatch21Position1NameNumberRhsNameNumberSubs) ||  false  ) ) { {int tomMatch21Position1NameNumberRhsNameNumberSubsIndex1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubsList1=tomMatch21Position1NameNumberRhsNameNumberSubs; { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubsSave1=tomMatch21Position1NameNumberRhsNameNumberSubsList1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1))) { { tom.engine.adt.il.types.Substitution  tomMatch21Position1NameNumberRhsNameNumberSubsPosition1=tom_get_head_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1);tomMatch21Position1NameNumberRhsNameNumberSubsIndex1=tomMatch21Position1NameNumberRhsNameNumberSubsIndex1 + 1;tomMatch21Position1NameNumberRhsNameNumberSubsList1=tom_get_tail_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1); if ( ( tom_is_fun_sym_undefsubs(tomMatch21Position1NameNumberRhsNameNumberSubsPosition1) ||  false  ) ) { if (tom_is_empty_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1)) { { tom.engine.adt.il.types.Instr  tom_ip=tom_get_slot_env_I(tomMatch21Position1NameNumberRhs); if ( true ) {


        // build condition
        ExprList cond = exprListFromExpr(tom_make_appSubsE(tom_e,tom_exp));

        Deriv up = tom_make_ebs(tom_make_env(tom_e,tom_ift),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tom_ip));
        String rulename = "iftrue";

        Collection pre_list = applySemanticsRules(up);
        Iterator it = pre_list.iterator();
        while(it.hasNext()) {
          DerivTree pre = (DerivTree) it.next();
          c.add(tom_make_derivrule(rulename,post,pre,tom_make_dedexpr(tom_append_list_concExpr(cond,tom_cons_list_concExpr(tom_make_iltrue(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs())),tom_empty_list_concExpr())))));
        }

        up = tom_make_ebs(tom_make_env(tom_e,tom_iff),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tom_ip));
        rulename = "iffalse";

        pre_list = applySemanticsRules(up);
        it = pre_list.iterator();
        while(it.hasNext()) {
          DerivTree pre = (DerivTree) it.next();
          c.add(tom_make_derivrule(rulename,post,pre,tom_make_dedexpr(tom_append_list_concExpr(cond,tom_cons_list_concExpr(tom_make_ilfalse(),tom_empty_list_concExpr())))));
        }
       } } } } } }tomMatch21Position1NameNumberRhsNameNumberSubsList1=tomMatch21Position1NameNumberRhsNameNumberSubsSave1; } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_ebs(tomMatch21Position1) ||  false  ) ) { { tom.engine.adt.il.types.Environment  tomMatch21Position1NameNumberLhs=tom_get_slot_ebs_Lhs(tomMatch21Position1); { tom.engine.adt.il.types.Environment  tomMatch21Position1NameNumberRhs=tom_get_slot_ebs_Rhs(tomMatch21Position1); if ( ( tom_is_fun_sym_env(tomMatch21Position1NameNumberLhs) ||  false  ) ) { if ( ( tom_is_fun_sym_accept(tom_get_slot_env_I(tomMatch21Position1NameNumberLhs)) ||  false  ) ) { if ( ( tom_is_fun_sym_env(tomMatch21Position1NameNumberRhs) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubs=tom_get_slot_env_Subs(tomMatch21Position1NameNumberRhs); if ( ( tom_is_fun_sym_subs(tomMatch21Position1NameNumberRhsNameNumberSubs) ||  false  ) ) { {int tomMatch21Position1NameNumberRhsNameNumberSubsIndex1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubsList1=tomMatch21Position1NameNumberRhsNameNumberSubs; { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubsSave1=tomMatch21Position1NameNumberRhsNameNumberSubsList1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1))) { { tom.engine.adt.il.types.Substitution  tomMatch21Position1NameNumberRhsNameNumberSubsPosition1=tom_get_head_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1);tomMatch21Position1NameNumberRhsNameNumberSubsIndex1=tomMatch21Position1NameNumberRhsNameNumberSubsIndex1 + 1;tomMatch21Position1NameNumberRhsNameNumberSubsList1=tom_get_tail_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1); if ( ( tom_is_fun_sym_undefsubs(tomMatch21Position1NameNumberRhsNameNumberSubsPosition1) ||  false  ) ) { if (tom_is_empty_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1)) { if ( ( tom_is_fun_sym_accept(tom_get_slot_env_I(tomMatch21Position1NameNumberRhs)) ||  false  ) ) { if ( true ) {


        c.add(tom_make_derivrule("axiom_accept",post,tom_make_endderiv(),tom_make_seq()));
       } } } } } }tomMatch21Position1NameNumberRhsNameNumberSubsList1=tomMatch21Position1NameNumberRhsNameNumberSubsSave1; } } } } } } } } } } } } if ( ( tom_is_fun_sym_ebs(tomMatch21Position1) ||  false  ) ) { { tom.engine.adt.il.types.Environment  tomMatch21Position1NameNumberLhs=tom_get_slot_ebs_Lhs(tomMatch21Position1); { tom.engine.adt.il.types.Environment  tomMatch21Position1NameNumberRhs=tom_get_slot_ebs_Rhs(tomMatch21Position1); if ( ( tom_is_fun_sym_env(tomMatch21Position1NameNumberLhs) ||  false  ) ) { if ( ( tom_is_fun_sym_refuse(tom_get_slot_env_I(tomMatch21Position1NameNumberLhs)) ||  false  ) ) { if ( ( tom_is_fun_sym_env(tomMatch21Position1NameNumberRhs) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubs=tom_get_slot_env_Subs(tomMatch21Position1NameNumberRhs); if ( ( tom_is_fun_sym_subs(tomMatch21Position1NameNumberRhsNameNumberSubs) ||  false  ) ) { {int tomMatch21Position1NameNumberRhsNameNumberSubsIndex1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubsList1=tomMatch21Position1NameNumberRhsNameNumberSubs; { tom.engine.adt.il.types.SubstitutionList  tomMatch21Position1NameNumberRhsNameNumberSubsSave1=tomMatch21Position1NameNumberRhsNameNumberSubsList1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1))) { { tom.engine.adt.il.types.Substitution  tomMatch21Position1NameNumberRhsNameNumberSubsPosition1=tom_get_head_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1);tomMatch21Position1NameNumberRhsNameNumberSubsIndex1=tomMatch21Position1NameNumberRhsNameNumberSubsIndex1 + 1;tomMatch21Position1NameNumberRhsNameNumberSubsList1=tom_get_tail_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1); if ( ( tom_is_fun_sym_undefsubs(tomMatch21Position1NameNumberRhsNameNumberSubsPosition1) ||  false  ) ) { if (tom_is_empty_subs_SubstitutionList(tomMatch21Position1NameNumberRhsNameNumberSubsList1)) { if ( ( tom_is_fun_sym_refuse(tom_get_slot_env_I(tomMatch21Position1NameNumberRhs)) ||  false  ) ) { if ( true ) {

        c.add(tom_make_derivrule("axiom_refuse",post,tom_make_endderiv(),tom_make_seq()));
       } } } } } }tomMatch21Position1NameNumberRhsNameNumberSubsList1=tomMatch21Position1NameNumberRhsNameNumberSubsSave1; } } } } } } } } } } } } if ( true ) {

        if (c.isEmpty()) {
            //System.out.println("Error " + post);
        }
       } } }

    return c;
  }

   private static class stratInstructionContains  extends  tom.engine.adt.il.IlBasicStrategy   { private  tom.engine.adt.il.types.Instr  goal;  private  java.util.Collection  c;  public stratInstructionContains(  tom.engine.adt.il.types.Instr  goal ,   java.util.Collection  c ) { super(tom_make_Identity() ); this.goal=goal; this.c=c; } public  tom.engine.adt.il.types.Instr  getgoal() { return goal;} public  java.util.Collection  getc() { return c;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.il.types.Instr  visit_Instr(  tom.engine.adt.il.types.Instr  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Instr(tom__arg)) { { tom.engine.adt.il.types.Instr  tom_x=(( tom.engine.adt.il.types.Instr )tom__arg); if ( true ) {


        if (tom_x== goal) {
          c.add(goal);
          tom_make_Fail().visit(tom_x);
        }
       } } } return super.visit_Instr(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_stratInstructionContains( tom.engine.adt.il.types.Instr  t0,  java.util.Collection  t1) { return new stratInstructionContains(t0,t1); }


  protected boolean instructionContains(Instr i, Instr goal) {
    Collection collect = new HashSet();
    try {
      tom_make_mu(tom_make_MuVar("x"),tom_make_Try(tom_cons_list_Sequence(tom_make_stratInstructionContains(goal,collect),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("x")),tom_empty_list_Sequence())))).visit(i);
    } catch(jjtraveler.VisitFailure e) {
      System.out.println("strategy instructionContains failed");
    }
    return !collect.isEmpty();
  }

/**
 * To replace undefsubst in tree by the computed value
 * which leads to axiom
 */
   private static class replaceUndefsubs  extends  tom.engine.adt.il.IlBasicStrategy   { private  tom.engine.adt.il.types.SubstitutionList  arg;  public replaceUndefsubs(  tom.engine.adt.il.types.SubstitutionList  arg ) { super(tom_make_Identity() ); this.arg=arg; } public  tom.engine.adt.il.types.SubstitutionList  getarg() { return arg;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.il.types.SubstitutionList  visit_SubstitutionList(  tom.engine.adt.il.types.SubstitutionList  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_SubstitutionList(tom__arg)) { { tom.engine.adt.il.types.SubstitutionList  tomMatch24Position1=(( tom.engine.adt.il.types.SubstitutionList )tom__arg); if ( ( tom_is_fun_sym_subs(tomMatch24Position1) ||  false  ) ) { {int tomMatch24Position1Index1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch24Position1List1=tomMatch24Position1; { tom.engine.adt.il.types.SubstitutionList  tomMatch24Position1Save1=tomMatch24Position1List1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch24Position1List1))) { { tom.engine.adt.il.types.Substitution  tomMatch24Position1Position1=tom_get_head_subs_SubstitutionList(tomMatch24Position1List1);tomMatch24Position1Index1=tomMatch24Position1Index1 + 1;tomMatch24Position1List1=tom_get_tail_subs_SubstitutionList(tomMatch24Position1List1); if ( ( tom_is_fun_sym_undefsubs(tomMatch24Position1Position1) ||  false  ) ) { if (tom_is_empty_subs_SubstitutionList(tomMatch24Position1List1)) { if ( true ) {


        return arg;
       } } } } }tomMatch24Position1List1=tomMatch24Position1Save1; } } } } } } } return super.visit_SubstitutionList(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_replaceUndefsubs( tom.engine.adt.il.types.SubstitutionList  t0) { return new replaceUndefsubs(t0); }



  private DerivTree replaceUndefinedSubstitution(DerivTree subject,
                                      SubstitutionList subs) {
    try {
      subject = (DerivTree) tom_make_TopDown(tom_make_replaceUndefsubs(subs)).visit(subject);
    } catch (jjtraveler.VisitFailure e) {
      throw new TomRuntimeException("Strategy replaceUndefsubs failed");
    }
    return subject;
  }

  


  static private class SubstRef {
    private SubstitutionList sublist;
    public SubstRef(SubstitutionList slist) {
      sublist = slist;
    }
    public void set(SubstitutionList ssublist) {
      this.sublist = ssublist;
    }
    public SubstitutionList get() {
      return sublist;
    }
  }

  /**
   * These functions deals with substitution application
   */
   private static class replaceVariableByTerm  extends  tom.engine.adt.il.IlBasicStrategy   { private  java.util.Map  map;  public replaceVariableByTerm(  java.util.Map  map ) { super(tom_make_Identity() ); this.map=map; } public  java.util.Map  getmap() { return map;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.il.types.Term  visit_Term(  tom.engine.adt.il.types.Term  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Term(tom__arg)) { { tom.engine.adt.il.types.Term  tomMatch25Position1=(( tom.engine.adt.il.types.Term )tom__arg); if ( ( tom_is_fun_sym_tau(tomMatch25Position1) ||  false  ) ) { { tom.engine.adt.il.types.AbsTerm  tomMatch25Position1NameNumberAbst=tom_get_slot_tau_Abst(tomMatch25Position1); if ( ( tom_is_fun_sym_absvar(tomMatch25Position1NameNumberAbst) ||  false  ) ) { { tom.engine.adt.il.types.Variable  tomMatch25Position1NameNumberAbstNameNumberVarname=tom_get_slot_absvar_Varname(tomMatch25Position1NameNumberAbst); if ( ( tom_is_fun_sym_var(tomMatch25Position1NameNumberAbstNameNumberVarname) ||  false  ) ) { { tom.engine.adt.il.types.Variable  tom_v=tomMatch25Position1NameNumberAbstNameNumberVarname; { tom.engine.adt.il.types.Term  tom_t=tomMatch25Position1; if ( true ) {


        if (map.containsKey(tom_v)) {
          return (Term)map.get(tom_v);
        }
        return tom_t;
       } } } } } } } } } } return super.visit_Term(tom__arg) ;  } }private static  jjtraveler.reflective.VisitableVisitor  tom_make_replaceVariableByTerm( java.util.Map  t0) { return new replaceVariableByTerm(t0); }



  public Term replaceVariablesInTerm(Term subject) {
     if (tom_is_sort_Term(subject)) { { tom.engine.adt.il.types.Term  tomMatch26Position1=(( tom.engine.adt.il.types.Term )subject); if ( ( tom_is_fun_sym_appSubsT(tomMatch26Position1) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tom_sublist=tom_get_slot_appSubsT_Subs(tomMatch26Position1); { tom.engine.adt.il.types.Term  tom_term=tom_get_slot_appSubsT_T(tomMatch26Position1); if ( true ) {

        Map map = buildVariableMap(tom_sublist, new HashMap());
        Term t = tom_term;
        try {
          t = (Term) tom_make_TopDown(tom_make_replaceVariableByTerm(map)).visit(tom_term);
        } catch (jjtraveler.VisitFailure e) {
          throw new TomRuntimeException("Strategy replaceVariableByTerm failed");
        }
        return t;
       } } } } } }

    return subject;
  }

  public Expr replaceVariablesInExpr(Expr subject) {
     if (tom_is_sort_Expr(subject)) { { tom.engine.adt.il.types.Expr  tomMatch27Position1=(( tom.engine.adt.il.types.Expr )subject); if ( ( tom_is_fun_sym_appSubsE(tomMatch27Position1) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tom_sublist=tom_get_slot_appSubsE_Subs(tomMatch27Position1); { tom.engine.adt.il.types.Expr  tom_term=tom_get_slot_appSubsE_E(tomMatch27Position1); if ( true ) {

        Map map = buildVariableMap(tom_sublist, new HashMap());
        Expr t = tom_term;
        try {
          t = (Expr) tom_make_TopDown(tom_make_replaceVariableByTerm(map)).visit(tom_term);
        } catch (jjtraveler.VisitFailure e) {
          throw new TomRuntimeException("Strategy replaceVariableByTerm failed");
        }
        return t;
       } } } } } }

    return subject;
  }

  private Map buildVariableMap(SubstitutionList sublist, Map map) {
     if (tom_is_sort_SubstitutionList(sublist)) { { tom.engine.adt.il.types.SubstitutionList  tomMatch28Position1=(( tom.engine.adt.il.types.SubstitutionList )sublist); if ( ( tom_is_fun_sym_subs(tomMatch28Position1) ||  false  ) ) { {int tomMatch28Position1Index1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch28Position1List1=tomMatch28Position1; if (tom_is_empty_subs_SubstitutionList(tomMatch28Position1List1)) { if ( true ) {
 return map;  } } } } } if ( ( tom_is_fun_sym_subs(tomMatch28Position1) ||  false  ) ) { {int tomMatch28Position1Index1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch28Position1List1=tomMatch28Position1; { tom.engine.adt.il.types.SubstitutionList  tomMatch28Position1Save1=tomMatch28Position1List1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch28Position1List1))) { { tom.engine.adt.il.types.Substitution  tomMatch28Position1Position1=tom_get_head_subs_SubstitutionList(tomMatch28Position1List1);tomMatch28Position1Index1=tomMatch28Position1Index1 + 1;tomMatch28Position1List1=tom_get_tail_subs_SubstitutionList(tomMatch28Position1List1); if ( ( tom_is_fun_sym_undefsubs(tomMatch28Position1Position1) ||  false  ) ) { { tom.engine.adt.il.types.SubstitutionList  tom_t=tomMatch28Position1List1; if ( true ) {
 return buildVariableMap(tom_t,map); } } } } }tomMatch28Position1List1=tomMatch28Position1Save1; } } } } } if ( ( tom_is_fun_sym_subs(tomMatch28Position1) ||  false  ) ) { {int tomMatch28Position1Index1=0; { tom.engine.adt.il.types.SubstitutionList  tomMatch28Position1List1=tomMatch28Position1; { tom.engine.adt.il.types.SubstitutionList  tomMatch28Position1Save1=tomMatch28Position1List1; { if (!(tom_is_empty_subs_SubstitutionList(tomMatch28Position1List1))) { { tom.engine.adt.il.types.Substitution  tomMatch28Position1Position1=tom_get_head_subs_SubstitutionList(tomMatch28Position1List1);tomMatch28Position1Index1=tomMatch28Position1Index1 + 1;tomMatch28Position1List1=tom_get_tail_subs_SubstitutionList(tomMatch28Position1List1); if ( ( tom_is_fun_sym_is(tomMatch28Position1Position1) ||  false  ) ) { { tom.engine.adt.il.types.Variable  tom_v=tom_get_slot_is_Var(tomMatch28Position1Position1); { tom.engine.adt.il.types.Term  tom_term=tom_get_slot_is_Term(tomMatch28Position1Position1); { tom.engine.adt.il.types.SubstitutionList  tom_t=tomMatch28Position1List1; if ( true ) {

        map.put(tom_v,tom_term);
        return buildVariableMap(tom_t,map);
       } } } } } } }tomMatch28Position1List1=tomMatch28Position1Save1; } } } } } } }

    return null;
  }

  public void mappingReduce(Map input) {
    Iterator it = input.keySet().iterator();
    while(it.hasNext()) {
      Object key = it.next();
      Expr value = (Expr) input.get(key);
      input.put(key,reduceWithMappingRules(value));
    }
  }

  public void booleanReduce(Map input) {
    Iterator it = input.keySet().iterator();
    while(it.hasNext()) {
      Object key = it.next();
      Expr value = (Expr) input.get(key);
      input.put(key,booleanSimplify(value));
    }
  }

  public Expr booleanSimplify(Expr expr) {
    VisitableVisitor booleanSimplifier = new BooleanSimplifier();
    Expr res = tom_make_ilfalse();
    try {
      res = (Expr) tom_make_InnermostId(booleanSimplifier).visit(expr);
    } catch (jjtraveler.VisitFailure e) {
      System.out.println("humm");
    }
    return res;
  }

  public class BooleanSimplifier extends IlBasicStrategy {
    public BooleanSimplifier() {
      super(tom_make_Identity());
    }

    public Expr visit_Expr(Expr arg) throws jjtraveler.VisitFailure {
       if (tom_is_sort_Expr(arg)) { { tom.engine.adt.il.types.Expr  tomMatch29Position1=(( tom.engine.adt.il.types.Expr )arg); if ( ( tom_is_fun_sym_iland(tomMatch29Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_ilfalse(tom_get_slot_iland_Left(tomMatch29Position1)) ||  false  ) ) { if ( true ) {

          return tom_make_ilfalse();
         } } } if ( ( tom_is_fun_sym_iland(tomMatch29Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_ilfalse(tom_get_slot_iland_Right(tomMatch29Position1)) ||  false  ) ) { if ( true ) {

          return tom_make_ilfalse();
         } } } if ( ( tom_is_fun_sym_ilor(tomMatch29Position1) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tomMatch29Position1NameNumberLeft=tom_get_slot_ilor_Left(tomMatch29Position1); if ( ( tom_is_fun_sym_iltrue(tomMatch29Position1NameNumberLeft) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tom_lt=tomMatch29Position1NameNumberLeft; if ( true ) {

          return tom_lt;
         } } } } } if ( ( tom_is_fun_sym_ilor(tomMatch29Position1) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tomMatch29Position1NameNumberRight=tom_get_slot_ilor_Right(tomMatch29Position1); if ( ( tom_is_fun_sym_iltrue(tomMatch29Position1NameNumberRight) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tom_lt=tomMatch29Position1NameNumberRight; if ( true ) {

          return tom_lt;
         } } } } } if ( ( tom_is_fun_sym_ilor(tomMatch29Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_ilfalse(tom_get_slot_ilor_Left(tomMatch29Position1)) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tom_right=tom_get_slot_ilor_Right(tomMatch29Position1); if ( true ) {

          return tom_right;
         } } } } if ( ( tom_is_fun_sym_ilor(tomMatch29Position1) ||  false  ) ) { { tom.engine.adt.il.types.Expr  tom_left=tom_get_slot_ilor_Left(tomMatch29Position1); if ( ( tom_is_fun_sym_ilfalse(tom_get_slot_ilor_Right(tomMatch29Position1)) ||  false  ) ) { if ( true ) {

          return tom_left;
         } } } } if ( ( tom_is_fun_sym_ilnot(tomMatch29Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_iltrue(tom_get_slot_ilnot_Exp(tomMatch29Position1)) ||  false  ) ) { if ( true ) {

          return tom_make_ilfalse();
         } } } if ( ( tom_is_fun_sym_ilnot(tomMatch29Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_ilfalse(tom_get_slot_ilnot_Exp(tomMatch29Position1)) ||  false  ) ) { if ( true ) {

          return tom_make_iltrue(tom_empty_list_subs());
         } } } } }

      return (Expr) any.visit(arg);
    }
  }

  TermList reverseTermList(TermList l) {
     if (tom_is_sort_TermList(l)) { { tom.engine.adt.il.types.TermList  tomMatch30Position1=(( tom.engine.adt.il.types.TermList )l); if ( ( tom_is_fun_sym_concTerm(tomMatch30Position1) ||  false  ) ) { {int tomMatch30Position1Index1=0; { tom.engine.adt.il.types.TermList  tomMatch30Position1List1=tomMatch30Position1; { tom.engine.adt.il.types.TermList  tomMatch30Position1Save1=tomMatch30Position1List1; { if (!(tom_is_empty_concTerm_TermList(tomMatch30Position1List1))) { { tom.engine.adt.il.types.Term  tom_h=tom_get_head_concTerm_TermList(tomMatch30Position1List1);tomMatch30Position1Index1=tomMatch30Position1Index1 + 1;tomMatch30Position1List1=tom_get_tail_concTerm_TermList(tomMatch30Position1List1); { tom.engine.adt.il.types.TermList  tom_t=tomMatch30Position1List1; if ( true ) {

        TermList nt = reverseTermList(tom_t);
        return tom_append_list_concTerm(nt,tom_cons_list_concTerm(tom_h,tom_empty_list_concTerm()));
       } } } }tomMatch30Position1List1=tomMatch30Position1Save1; } } } } } } }

    return l;
  }

}

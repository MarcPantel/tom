/* Generated by TOM (version 2.5alpha): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 *
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 * Antoine Reilles        e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.engine.verifier;

import tom.engine.*;
import aterm.*;
import java.util.*;
import tom.engine.tools.SymbolTable;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;
import tom.engine.adt.il.*;
import tom.engine.adt.il.types.*;

import tom.engine.exception.TomRuntimeException;

import tom.library.sl.Strategy;

public class Verifier {

  // ------------------------------------------------------------
  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) { return  (t1==t2) ;}private static boolean tom_is_sort_int(int t) { return  true ;} private static boolean tom_equal_term_Instruction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Instruction(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.Instruction ;}private static boolean tom_equal_term_InstructionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_InstructionList(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.InstructionList ;}private static boolean tom_equal_term_TomType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomType(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomType ;}private static boolean tom_equal_term_TomNumberList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNumberList(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNumberList ;}private static boolean tom_equal_term_TomName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomName(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomName ;}private static boolean tom_equal_term_Expression(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Expression(Object t) { return  t instanceof tom.engine.adt.tomexpression.types.Expression ;}private static boolean tom_equal_term_Pattern(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Pattern(Object t) { return  t instanceof tom.engine.adt.tomterm.types.Pattern ;}private static boolean tom_equal_term_TomList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomList(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomList ;}private static boolean tom_equal_term_TomTerm(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTerm(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomTerm ;}private static boolean tom_equal_term_PatternList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PatternList(Object t) { return  t instanceof tom.engine.adt.tomterm.types.PatternList ;}private static boolean tom_equal_term_OptionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OptionList(Object t) { return  t instanceof tom.engine.adt.tomoption.types.OptionList ;}private static boolean tom_equal_term_ConstraintList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ConstraintList(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.ConstraintList ;}private static boolean tom_is_fun_sym_If( tom.engine.adt.tominstruction.types.Instruction  t) { return  t instanceof tom.engine.adt.tominstruction.types.instruction.If ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_If_Condition( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getCondition() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_If_SuccesInst( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getSuccesInst() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_If_FailureInst( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getFailureInst() ;}private static boolean tom_is_fun_sym_Let( tom.engine.adt.tominstruction.types.Instruction  t) { return  t instanceof tom.engine.adt.tominstruction.types.instruction.Let ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Let_Variable( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getVariable() ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Let_Source( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getSource() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_Let_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getAstInstruction() ;}private static boolean tom_is_fun_sym_LetAssign( tom.engine.adt.tominstruction.types.Instruction  t) { return  t instanceof tom.engine.adt.tominstruction.types.instruction.LetAssign ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_LetAssign_Variable( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getVariable() ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_LetAssign_Source( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getSource() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_LetAssign_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getAstInstruction() ;}private static boolean tom_is_fun_sym_Nop( tom.engine.adt.tominstruction.types.Instruction  t) { return  t instanceof tom.engine.adt.tominstruction.types.instruction.Nop ;}private static boolean tom_is_fun_sym_AbstractBlock( tom.engine.adt.tominstruction.types.Instruction  t) { return  t instanceof tom.engine.adt.tominstruction.types.instruction.AbstractBlock ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slot_AbstractBlock_InstList( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getInstList() ;}private static boolean tom_is_fun_sym_CompiledPattern( tom.engine.adt.tominstruction.types.Instruction  t) { return  t instanceof tom.engine.adt.tominstruction.types.instruction.CompiledPattern ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_CompiledPattern_PatternList( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getPatternList() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_CompiledPattern_AutomataInst( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getAutomataInst() ;}private static boolean tom_is_fun_sym_TypedAction( tom.engine.adt.tominstruction.types.Instruction  t) { return  t instanceof tom.engine.adt.tominstruction.types.instruction.TypedAction ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_TypedAction_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getAstInstruction() ;}private static  tom.engine.adt.tomterm.types.Pattern  tom_get_slot_TypedAction_PositivePattern( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getPositivePattern() ;}private static  tom.engine.adt.tomterm.types.PatternList  tom_get_slot_TypedAction_NegativePatternList( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getNegativePatternList() ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) { return  t instanceof tom.engine.adt.tomname.types.tomname.Name ;}private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) { return  t.getString() ;}private static boolean tom_is_fun_sym_PositionName( tom.engine.adt.tomname.types.TomName  t) { return  t instanceof tom.engine.adt.tomname.types.tomname.PositionName ;}private static  tom.engine.adt.tomname.types.TomNumberList  tom_get_slot_PositionName_NumberList( tom.engine.adt.tomname.types.TomName  t) { return  t.getNumberList() ;}private static boolean tom_is_fun_sym_EmptyName( tom.engine.adt.tomname.types.TomName  t) { return  t instanceof tom.engine.adt.tomname.types.tomname.EmptyName ;}private static boolean tom_is_fun_sym_TomTermToExpression( tom.engine.adt.tomexpression.types.Expression  t) { return  t instanceof tom.engine.adt.tomexpression.types.expression.TomTermToExpression ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_TomTermToExpression_AstTerm( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getAstTerm() ;}private static boolean tom_is_fun_sym_TrueTL( tom.engine.adt.tomexpression.types.Expression  t) { return  t instanceof tom.engine.adt.tomexpression.types.expression.TrueTL ;}private static boolean tom_is_fun_sym_FalseTL( tom.engine.adt.tomexpression.types.Expression  t) { return  t instanceof tom.engine.adt.tomexpression.types.expression.FalseTL ;}private static boolean tom_is_fun_sym_EqualTerm( tom.engine.adt.tomexpression.types.Expression  t) { return  t instanceof tom.engine.adt.tomexpression.types.expression.EqualTerm ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_EqualTerm_TomType( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getTomType() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTerm_Kid1( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getKid1() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTerm_Kid2( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getKid2() ;}private static boolean tom_is_fun_sym_Cast( tom.engine.adt.tomexpression.types.Expression  t) { return  t instanceof tom.engine.adt.tomexpression.types.expression.Cast ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Cast_AstType( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Cast_Source( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getSource() ;}private static boolean tom_is_fun_sym_GetSlot( tom.engine.adt.tomexpression.types.Expression  t) { return  t instanceof tom.engine.adt.tomexpression.types.expression.GetSlot ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetSlot_Codomain( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getCodomain() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlot_AstName( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getAstName() ;}private static  String  tom_get_slot_GetSlot_SlotNameString( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getSlotNameString() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSlot_Variable( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getVariable() ;}private static boolean tom_is_fun_sym_IsFsym( tom.engine.adt.tomexpression.types.Expression  t) { return  t instanceof tom.engine.adt.tomexpression.types.expression.IsFsym ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsFsym_AstName( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsFsym_Variable( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getVariable() ;}private static boolean tom_is_fun_sym_IsSort( tom.engine.adt.tomexpression.types.Expression  t) { return  t instanceof tom.engine.adt.tomexpression.types.expression.IsSort ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_IsSort_AstType( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsSort_Variable( tom.engine.adt.tomexpression.types.Expression  t) { return  t.getVariable() ;}private static boolean tom_is_fun_sym_Pattern( tom.engine.adt.tomterm.types.Pattern  t) { return  t instanceof tom.engine.adt.tomterm.types.pattern.Pattern ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_SubjectList( tom.engine.adt.tomterm.types.Pattern  t) { return  t.getSubjectList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_TomList( tom.engine.adt.tomterm.types.Pattern  t) { return  t.getTomList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_Guards( tom.engine.adt.tomterm.types.Pattern  t) { return  t.getGuards() ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.Variable ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_UnamedVariable( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariable_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_ExpressionToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.ExpressionToTomTerm ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_ExpressionToTomTerm_AstExpression( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstExpression() ;}private static boolean tom_is_fun_sym_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  t) { return  t instanceof tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction || t instanceof tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_empty_list_concInstruction() { return  tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction.make() ; }private static  tom.engine.adt.tominstruction.types.InstructionList  tom_cons_list_concInstruction( tom.engine.adt.tominstruction.types.Instruction  e,  tom.engine.adt.tominstruction.types.InstructionList  l) { return  tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction.make(e,l) ; }private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_head_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) { return  l.getHeadconcInstruction() ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_tail_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) { return  l.getTailconcInstruction() ;}private static boolean tom_is_empty_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) { return  l.isEmptyconcInstruction() ;}   private static   tom.engine.adt.tominstruction.types.InstructionList  tom_append_list_concInstruction( tom.engine.adt.tominstruction.types.InstructionList l1,  tom.engine.adt.tominstruction.types.InstructionList  l2) {     if(tom_is_empty_concInstruction_InstructionList(l1)) {       return l2;     } else if(tom_is_empty_concInstruction_InstructionList(l2)) {       return l1;     } else if(tom_is_empty_concInstruction_InstructionList(tom_get_tail_concInstruction_InstructionList(l1))) {       return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(tom_get_head_concInstruction_InstructionList(l1),l2);     } else {       return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(tom_get_head_concInstruction_InstructionList(l1),tom_append_list_concInstruction(tom_get_tail_concInstruction_InstructionList(l1),l2));     }   }   private static   tom.engine.adt.tominstruction.types.InstructionList  tom_get_slice_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  begin,  tom.engine.adt.tominstruction.types.InstructionList  end, tom.engine.adt.tominstruction.types.InstructionList  tail) {     if(tom_equal_term_InstructionList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(tom_get_head_concInstruction_InstructionList(begin),( tom.engine.adt.tominstruction.types.InstructionList )tom_get_slice_concInstruction(tom_get_tail_concInstruction_InstructionList(begin),end,tail));     }   }    /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_ATerm(Object t1, Object t2) { return  t1 == t2;}private static boolean tom_is_sort_ATerm(Object t) { return  t instanceof aterm.ATerm ;} private static boolean tom_equal_term_Deriv(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Deriv(Object t) { return  t instanceof tom.engine.adt.il.types.Deriv ;}private static boolean tom_equal_term_Expr(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Expr(Object t) { return  t instanceof tom.engine.adt.il.types.Expr ;}private static boolean tom_equal_term_Variable(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Variable(Object t) { return  t instanceof tom.engine.adt.il.types.Variable ;}private static boolean tom_equal_term_Environment(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Environment(Object t) { return  t instanceof tom.engine.adt.il.types.Environment ;}private static boolean tom_equal_term_InstrList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_InstrList(Object t) { return  t instanceof tom.engine.adt.il.types.InstrList ;}private static boolean tom_equal_term_ExprList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ExprList(Object t) { return  t instanceof tom.engine.adt.il.types.ExprList ;}private static boolean tom_equal_term_Substitution(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Substitution(Object t) { return  t instanceof tom.engine.adt.il.types.Substitution ;}private static boolean tom_equal_term_Symbol(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Symbol(Object t) { return  t instanceof tom.engine.adt.il.types.Symbol ;}private static boolean tom_equal_term_Seq(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Seq(Object t) { return  t instanceof tom.engine.adt.il.types.Seq ;}private static boolean tom_equal_term_SubstitutionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SubstitutionList(Object t) { return  t instanceof tom.engine.adt.il.types.SubstitutionList ;}private static boolean tom_equal_term_Term(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Term(Object t) { return  t instanceof tom.engine.adt.il.types.Term ;}private static boolean tom_equal_term_TermList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TermList(Object t) { return  t instanceof tom.engine.adt.il.types.TermList ;}private static boolean tom_equal_term_Instr(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Instr(Object t) { return  t instanceof tom.engine.adt.il.types.Instr ;}private static boolean tom_equal_term_AbsTerm(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_AbsTerm(Object t) { return  t instanceof tom.engine.adt.il.types.AbsTerm ;}private static boolean tom_equal_term_DerivTree(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_DerivTree(Object t) { return  t instanceof tom.engine.adt.il.types.DerivTree ;}private static boolean tom_is_fun_sym_ebs( tom.engine.adt.il.types.Deriv  t) { return  t instanceof tom.engine.adt.il.types.deriv.ebs ;}private static  tom.engine.adt.il.types.Deriv  tom_make_ebs( tom.engine.adt.il.types.Environment  t0,  tom.engine.adt.il.types.Environment  t1) { return  tom.engine.adt.il.types.deriv.ebs.make(t0, t1) ; }private static  tom.engine.adt.il.types.Environment  tom_get_slot_ebs_Lhs( tom.engine.adt.il.types.Deriv  t) { return  t.getLhs() ;}private static  tom.engine.adt.il.types.Environment  tom_get_slot_ebs_Rhs( tom.engine.adt.il.types.Deriv  t) { return  t.getRhs() ;}private static boolean tom_is_fun_sym_iltrue( tom.engine.adt.il.types.Expr  t) { return  t instanceof tom.engine.adt.il.types.expr.iltrue ;}private static  tom.engine.adt.il.types.Expr  tom_make_iltrue( tom.engine.adt.il.types.SubstitutionList  t0) { return  tom.engine.adt.il.types.expr.iltrue.make(t0) ; }private static  tom.engine.adt.il.types.SubstitutionList  tom_get_slot_iltrue_Subst( tom.engine.adt.il.types.Expr  t) { return  t.getSubst() ;}private static boolean tom_is_fun_sym_ilfalse( tom.engine.adt.il.types.Expr  t) { return  t instanceof tom.engine.adt.il.types.expr.ilfalse ;}private static  tom.engine.adt.il.types.Expr  tom_make_ilfalse() { return  tom.engine.adt.il.types.expr.ilfalse.make() ; }private static boolean tom_is_fun_sym_isfsym( tom.engine.adt.il.types.Expr  t) { return  t instanceof tom.engine.adt.il.types.expr.isfsym ;}private static  tom.engine.adt.il.types.Expr  tom_make_isfsym( tom.engine.adt.il.types.Term  t0,  tom.engine.adt.il.types.Symbol  t1) { return  tom.engine.adt.il.types.expr.isfsym.make(t0, t1) ; }private static  tom.engine.adt.il.types.Term  tom_get_slot_isfsym_T( tom.engine.adt.il.types.Expr  t) { return  t.getT() ;}private static  tom.engine.adt.il.types.Symbol  tom_get_slot_isfsym_Symbol( tom.engine.adt.il.types.Expr  t) { return  t.getSymbol() ;}private static boolean tom_is_fun_sym_eq( tom.engine.adt.il.types.Expr  t) { return  t instanceof tom.engine.adt.il.types.expr.eq ;}private static  tom.engine.adt.il.types.Expr  tom_make_eq( tom.engine.adt.il.types.Term  t0,  tom.engine.adt.il.types.Term  t1) { return  tom.engine.adt.il.types.expr.eq.make(t0, t1) ; }private static  tom.engine.adt.il.types.Term  tom_get_slot_eq_Lt( tom.engine.adt.il.types.Expr  t) { return  t.getLt() ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_eq_Rt( tom.engine.adt.il.types.Expr  t) { return  t.getRt() ;}private static  tom.engine.adt.il.types.Expr  tom_make_tisfsym( tom.engine.adt.il.types.AbsTerm  t0,  tom.engine.adt.il.types.Symbol  t1) { return  tom.engine.adt.il.types.expr.tisfsym.make(t0, t1) ; }private static  tom.engine.adt.il.types.Expr  tom_make_teq( tom.engine.adt.il.types.AbsTerm  t0,  tom.engine.adt.il.types.AbsTerm  t1) { return  tom.engine.adt.il.types.expr.teq.make(t0, t1) ; }private static boolean tom_is_fun_sym_iland( tom.engine.adt.il.types.Expr  t) { return  t instanceof tom.engine.adt.il.types.expr.iland ;}private static  tom.engine.adt.il.types.Expr  tom_make_iland( tom.engine.adt.il.types.Expr  t0,  tom.engine.adt.il.types.Expr  t1) { return  tom.engine.adt.il.types.expr.iland.make(t0, t1) ; }private static  tom.engine.adt.il.types.Expr  tom_get_slot_iland_Left( tom.engine.adt.il.types.Expr  t) { return  t.getLeft() ;}private static  tom.engine.adt.il.types.Expr  tom_get_slot_iland_Right( tom.engine.adt.il.types.Expr  t) { return  t.getRight() ;}private static boolean tom_is_fun_sym_ilor( tom.engine.adt.il.types.Expr  t) { return  t instanceof tom.engine.adt.il.types.expr.ilor ;}private static  tom.engine.adt.il.types.Expr  tom_make_ilor( tom.engine.adt.il.types.Expr  t0,  tom.engine.adt.il.types.Expr  t1) { return  tom.engine.adt.il.types.expr.ilor.make(t0, t1) ; }private static  tom.engine.adt.il.types.Expr  tom_get_slot_ilor_Left( tom.engine.adt.il.types.Expr  t) { return  t.getLeft() ;}private static  tom.engine.adt.il.types.Expr  tom_get_slot_ilor_Right( tom.engine.adt.il.types.Expr  t) { return  t.getRight() ;}private static boolean tom_is_fun_sym_ilnot( tom.engine.adt.il.types.Expr  t) { return  t instanceof tom.engine.adt.il.types.expr.ilnot ;}private static  tom.engine.adt.il.types.Expr  tom_make_ilnot( tom.engine.adt.il.types.Expr  t0) { return  tom.engine.adt.il.types.expr.ilnot.make(t0) ; }private static  tom.engine.adt.il.types.Expr  tom_get_slot_ilnot_Exp( tom.engine.adt.il.types.Expr  t) { return  t.getExp() ;}private static boolean tom_is_fun_sym_appSubsE( tom.engine.adt.il.types.Expr  t) { return  t instanceof tom.engine.adt.il.types.expr.appSubsE ;}private static  tom.engine.adt.il.types.Expr  tom_make_appSubsE( tom.engine.adt.il.types.SubstitutionList  t0,  tom.engine.adt.il.types.Expr  t1) { return  tom.engine.adt.il.types.expr.appSubsE.make(t0, t1) ; }private static  tom.engine.adt.il.types.SubstitutionList  tom_get_slot_appSubsE_Subs( tom.engine.adt.il.types.Expr  t) { return  t.getSubs() ;}private static  tom.engine.adt.il.types.Expr  tom_get_slot_appSubsE_E( tom.engine.adt.il.types.Expr  t) { return  t.getE() ;}private static boolean tom_is_fun_sym_var( tom.engine.adt.il.types.Variable  t) { return  t instanceof tom.engine.adt.il.types.variable.var ;}private static  tom.engine.adt.il.types.Variable  tom_make_var( String  t0) { return  tom.engine.adt.il.types.variable.var.make(t0) ; }private static  String  tom_get_slot_var_Name( tom.engine.adt.il.types.Variable  t) { return  t.getName() ;}private static boolean tom_is_fun_sym_env( tom.engine.adt.il.types.Environment  t) { return  t instanceof tom.engine.adt.il.types.environment.env ;}private static  tom.engine.adt.il.types.Environment  tom_make_env( tom.engine.adt.il.types.SubstitutionList  t0,  tom.engine.adt.il.types.Instr  t1) { return  tom.engine.adt.il.types.environment.env.make(t0, t1) ; }private static  tom.engine.adt.il.types.SubstitutionList  tom_get_slot_env_Subs( tom.engine.adt.il.types.Environment  t) { return  t.getSubs() ;}private static  tom.engine.adt.il.types.Instr  tom_get_slot_env_I( tom.engine.adt.il.types.Environment  t) { return  t.getI() ;}private static boolean tom_is_fun_sym_undefsubs( tom.engine.adt.il.types.Substitution  t) { return  t instanceof tom.engine.adt.il.types.substitution.undefsubs ;}private static  tom.engine.adt.il.types.Substitution  tom_make_undefsubs() { return  tom.engine.adt.il.types.substitution.undefsubs.make() ; }private static boolean tom_is_fun_sym_is( tom.engine.adt.il.types.Substitution  t) { return  t instanceof tom.engine.adt.il.types.substitution.is ;}private static  tom.engine.adt.il.types.Substitution  tom_make_is( tom.engine.adt.il.types.Variable  t0,  tom.engine.adt.il.types.Term  t1) { return  tom.engine.adt.il.types.substitution.is.make(t0, t1) ; }private static  tom.engine.adt.il.types.Variable  tom_get_slot_is_Var( tom.engine.adt.il.types.Substitution  t) { return  t.getVar() ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_is_Term( tom.engine.adt.il.types.Substitution  t) { return  t.getTerm() ;}private static  tom.engine.adt.il.types.Symbol  tom_make_fsymbol( String  t0) { return  tom.engine.adt.il.types.symbol.fsymbol.make(t0) ; }private static  tom.engine.adt.il.types.Seq  tom_make_seq() { return  tom.engine.adt.il.types.seq.seq.make() ; }private static  tom.engine.adt.il.types.Seq  tom_make_dedexpr( tom.engine.adt.il.types.ExprList  t0) { return  tom.engine.adt.il.types.seq.dedexpr.make(t0) ; }private static boolean tom_is_fun_sym_dedterm( tom.engine.adt.il.types.Seq  t) { return  t instanceof tom.engine.adt.il.types.seq.dedterm ;}private static  tom.engine.adt.il.types.Seq  tom_make_dedterm( tom.engine.adt.il.types.TermList  t0) { return  tom.engine.adt.il.types.seq.dedterm.make(t0) ; }private static  tom.engine.adt.il.types.TermList  tom_get_slot_dedterm_Terms( tom.engine.adt.il.types.Seq  t) { return  t.getTerms() ;}private static boolean tom_is_fun_sym_tau( tom.engine.adt.il.types.Term  t) { return  t instanceof tom.engine.adt.il.types.term.tau ;}private static  tom.engine.adt.il.types.Term  tom_make_tau( tom.engine.adt.il.types.AbsTerm  t0) { return  tom.engine.adt.il.types.term.tau.make(t0) ; }private static  tom.engine.adt.il.types.AbsTerm  tom_get_slot_tau_Abst( tom.engine.adt.il.types.Term  t) { return  t.getAbst() ;}private static  tom.engine.adt.il.types.Term  tom_make_repr( String  t0) { return  tom.engine.adt.il.types.term.repr.make(t0) ; }private static boolean tom_is_fun_sym_subterm( tom.engine.adt.il.types.Term  t) { return  t instanceof tom.engine.adt.il.types.term.subterm ;}private static  tom.engine.adt.il.types.Term  tom_make_subterm( tom.engine.adt.il.types.Symbol  t0,  tom.engine.adt.il.types.Term  t1,  int  t2) { return  tom.engine.adt.il.types.term.subterm.make(t0, t1, t2) ; }private static  tom.engine.adt.il.types.Symbol  tom_get_slot_subterm_Symbol( tom.engine.adt.il.types.Term  t) { return  t.getSymbol() ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_subterm_T( tom.engine.adt.il.types.Term  t) { return  t.getT() ;}private static  int  tom_get_slot_subterm_Index( tom.engine.adt.il.types.Term  t) { return  t.getIndex() ;}private static boolean tom_is_fun_sym_slot( tom.engine.adt.il.types.Term  t) { return  t instanceof tom.engine.adt.il.types.term.slot ;}private static  tom.engine.adt.il.types.Term  tom_make_slot( tom.engine.adt.il.types.Symbol  t0,  tom.engine.adt.il.types.Term  t1,  String  t2) { return  tom.engine.adt.il.types.term.slot.make(t0, t1, t2) ; }private static  tom.engine.adt.il.types.Symbol  tom_get_slot_slot_Symbol( tom.engine.adt.il.types.Term  t) { return  t.getSymbol() ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_slot_T( tom.engine.adt.il.types.Term  t) { return  t.getT() ;}private static  String  tom_get_slot_slot_Name( tom.engine.adt.il.types.Term  t) { return  t.getName() ;}private static boolean tom_is_fun_sym_appSubsT( tom.engine.adt.il.types.Term  t) { return  t instanceof tom.engine.adt.il.types.term.appSubsT ;}private static  tom.engine.adt.il.types.Term  tom_make_appSubsT( tom.engine.adt.il.types.SubstitutionList  t0,  tom.engine.adt.il.types.Term  t1) { return  tom.engine.adt.il.types.term.appSubsT.make(t0, t1) ; }private static  tom.engine.adt.il.types.SubstitutionList  tom_get_slot_appSubsT_Subs( tom.engine.adt.il.types.Term  t) { return  t.getSubs() ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_appSubsT_T( tom.engine.adt.il.types.Term  t) { return  t.getT() ;}private static boolean tom_is_fun_sym_accept( tom.engine.adt.il.types.Instr  t) { return  t instanceof tom.engine.adt.il.types.instr.accept ;}private static  tom.engine.adt.il.types.Instr  tom_make_accept( aterm.ATerm  t0,  aterm.ATerm  t1) { return  tom.engine.adt.il.types.instr.accept.make(t0, t1) ; }private static  aterm.ATerm  tom_get_slot_accept_Positive( tom.engine.adt.il.types.Instr  t) { return  t.getPositive() ;}private static  aterm.ATerm  tom_get_slot_accept_Negative( tom.engine.adt.il.types.Instr  t) { return  t.getNegative() ;}private static boolean tom_is_fun_sym_refuse( tom.engine.adt.il.types.Instr  t) { return  t instanceof tom.engine.adt.il.types.instr.refuse ;}private static  tom.engine.adt.il.types.Instr  tom_make_refuse() { return  tom.engine.adt.il.types.instr.refuse.make() ; }private static boolean tom_is_fun_sym_ITE( tom.engine.adt.il.types.Instr  t) { return  t instanceof tom.engine.adt.il.types.instr.ITE ;}private static  tom.engine.adt.il.types.Instr  tom_make_ITE( tom.engine.adt.il.types.Expr  t0,  tom.engine.adt.il.types.Instr  t1,  tom.engine.adt.il.types.Instr  t2) { return  tom.engine.adt.il.types.instr.ITE.make(t0, t1, t2) ; }private static  tom.engine.adt.il.types.Expr  tom_get_slot_ITE_E( tom.engine.adt.il.types.Instr  t) { return  t.getE() ;}private static  tom.engine.adt.il.types.Instr  tom_get_slot_ITE_Ift( tom.engine.adt.il.types.Instr  t) { return  t.getIft() ;}private static  tom.engine.adt.il.types.Instr  tom_get_slot_ITE_Iff( tom.engine.adt.il.types.Instr  t) { return  t.getIff() ;}private static boolean tom_is_fun_sym_ILLet( tom.engine.adt.il.types.Instr  t) { return  t instanceof tom.engine.adt.il.types.instr.ILLet ;}private static  tom.engine.adt.il.types.Instr  tom_make_ILLet( tom.engine.adt.il.types.Variable  t0,  tom.engine.adt.il.types.Term  t1,  tom.engine.adt.il.types.Instr  t2) { return  tom.engine.adt.il.types.instr.ILLet.make(t0, t1, t2) ; }private static  tom.engine.adt.il.types.Variable  tom_get_slot_ILLet_Var( tom.engine.adt.il.types.Instr  t) { return  t.getVar() ;}private static  tom.engine.adt.il.types.Term  tom_get_slot_ILLet_T( tom.engine.adt.il.types.Instr  t) { return  t.getT() ;}private static  tom.engine.adt.il.types.Instr  tom_get_slot_ILLet_Body( tom.engine.adt.il.types.Instr  t) { return  t.getBody() ;}private static boolean tom_is_fun_sym_sequence( tom.engine.adt.il.types.Instr  t) { return  t instanceof tom.engine.adt.il.types.instr.sequence ;}private static  tom.engine.adt.il.types.Instr  tom_make_sequence( tom.engine.adt.il.types.InstrList  t0) { return  tom.engine.adt.il.types.instr.sequence.make(t0) ; }private static  tom.engine.adt.il.types.InstrList  tom_get_slot_sequence_Instrlist( tom.engine.adt.il.types.Instr  t) { return  t.getInstrlist() ;}private static boolean tom_is_fun_sym_absvar( tom.engine.adt.il.types.AbsTerm  t) { return  t instanceof tom.engine.adt.il.types.absterm.absvar ;}private static  tom.engine.adt.il.types.AbsTerm  tom_make_absvar( tom.engine.adt.il.types.Variable  t0) { return  tom.engine.adt.il.types.absterm.absvar.make(t0) ; }private static  tom.engine.adt.il.types.Variable  tom_get_slot_absvar_Varname( tom.engine.adt.il.types.AbsTerm  t) { return  t.getVarname() ;}private static  tom.engine.adt.il.types.AbsTerm  tom_make_st( tom.engine.adt.il.types.Symbol  t0,  tom.engine.adt.il.types.AbsTerm  t1,  int  t2) { return  tom.engine.adt.il.types.absterm.st.make(t0, t1, t2) ; }private static  tom.engine.adt.il.types.AbsTerm  tom_make_sl( tom.engine.adt.il.types.Symbol  t0,  tom.engine.adt.il.types.AbsTerm  t1,  String  t2) { return  tom.engine.adt.il.types.absterm.sl.make(t0, t1, t2) ; }private static  tom.engine.adt.il.types.DerivTree  tom_make_endderiv() { return  tom.engine.adt.il.types.derivtree.endderiv.make() ; }private static  tom.engine.adt.il.types.DerivTree  tom_make_derivrule( String  t0,  tom.engine.adt.il.types.Deriv  t1,  tom.engine.adt.il.types.DerivTree  t2,  tom.engine.adt.il.types.Seq  t3) { return  tom.engine.adt.il.types.derivtree.derivrule.make(t0, t1, t2, t3) ; }private static  tom.engine.adt.il.types.DerivTree  tom_make_derivrule2( String  t0,  tom.engine.adt.il.types.Deriv  t1,  tom.engine.adt.il.types.DerivTree  t2,  tom.engine.adt.il.types.DerivTree  t3,  tom.engine.adt.il.types.Seq  t4) { return  tom.engine.adt.il.types.derivtree.derivrule2.make(t0, t1, t2, t3, t4) ; }private static boolean tom_is_fun_sym_semicolon( tom.engine.adt.il.types.InstrList  t) { return  t instanceof tom.engine.adt.il.types.instrlist.Conssemicolon || t instanceof tom.engine.adt.il.types.instrlist.Emptysemicolon ;}private static  tom.engine.adt.il.types.InstrList  tom_empty_list_semicolon() { return  tom.engine.adt.il.types.instrlist.Emptysemicolon.make() ; }private static  tom.engine.adt.il.types.InstrList  tom_cons_list_semicolon( tom.engine.adt.il.types.Instr  e,  tom.engine.adt.il.types.InstrList  l) { return  tom.engine.adt.il.types.instrlist.Conssemicolon.make(e,l) ; }private static  tom.engine.adt.il.types.Instr  tom_get_head_semicolon_InstrList( tom.engine.adt.il.types.InstrList  l) { return  l.getHeadsemicolon() ;}private static  tom.engine.adt.il.types.InstrList  tom_get_tail_semicolon_InstrList( tom.engine.adt.il.types.InstrList  l) { return  l.getTailsemicolon() ;}private static boolean tom_is_empty_semicolon_InstrList( tom.engine.adt.il.types.InstrList  l) { return  l.isEmptysemicolon() ;}   private static   tom.engine.adt.il.types.InstrList  tom_append_list_semicolon( tom.engine.adt.il.types.InstrList l1,  tom.engine.adt.il.types.InstrList  l2) {     if(tom_is_empty_semicolon_InstrList(l1)) {       return l2;     } else if(tom_is_empty_semicolon_InstrList(l2)) {       return l1;     } else if(tom_is_empty_semicolon_InstrList(tom_get_tail_semicolon_InstrList(l1))) {       return ( tom.engine.adt.il.types.InstrList )tom_cons_list_semicolon(tom_get_head_semicolon_InstrList(l1),l2);     } else {       return ( tom.engine.adt.il.types.InstrList )tom_cons_list_semicolon(tom_get_head_semicolon_InstrList(l1),tom_append_list_semicolon(tom_get_tail_semicolon_InstrList(l1),l2));     }   }   private static   tom.engine.adt.il.types.InstrList  tom_get_slice_semicolon( tom.engine.adt.il.types.InstrList  begin,  tom.engine.adt.il.types.InstrList  end, tom.engine.adt.il.types.InstrList  tail) {     if(tom_equal_term_InstrList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.il.types.InstrList )tom_cons_list_semicolon(tom_get_head_semicolon_InstrList(begin),( tom.engine.adt.il.types.InstrList )tom_get_slice_semicolon(tom_get_tail_semicolon_InstrList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concExpr( tom.engine.adt.il.types.ExprList  t) { return  t instanceof tom.engine.adt.il.types.exprlist.ConsconcExpr || t instanceof tom.engine.adt.il.types.exprlist.EmptyconcExpr ;}private static  tom.engine.adt.il.types.ExprList  tom_empty_list_concExpr() { return  tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ; }private static  tom.engine.adt.il.types.ExprList  tom_cons_list_concExpr( tom.engine.adt.il.types.Expr  e,  tom.engine.adt.il.types.ExprList  l) { return  tom.engine.adt.il.types.exprlist.ConsconcExpr.make(e,l) ; }private static  tom.engine.adt.il.types.Expr  tom_get_head_concExpr_ExprList( tom.engine.adt.il.types.ExprList  l) { return  l.getHeadconcExpr() ;}private static  tom.engine.adt.il.types.ExprList  tom_get_tail_concExpr_ExprList( tom.engine.adt.il.types.ExprList  l) { return  l.getTailconcExpr() ;}private static boolean tom_is_empty_concExpr_ExprList( tom.engine.adt.il.types.ExprList  l) { return  l.isEmptyconcExpr() ;}   private static   tom.engine.adt.il.types.ExprList  tom_append_list_concExpr( tom.engine.adt.il.types.ExprList l1,  tom.engine.adt.il.types.ExprList  l2) {     if(tom_is_empty_concExpr_ExprList(l1)) {       return l2;     } else if(tom_is_empty_concExpr_ExprList(l2)) {       return l1;     } else if(tom_is_empty_concExpr_ExprList(tom_get_tail_concExpr_ExprList(l1))) {       return ( tom.engine.adt.il.types.ExprList )tom_cons_list_concExpr(tom_get_head_concExpr_ExprList(l1),l2);     } else {       return ( tom.engine.adt.il.types.ExprList )tom_cons_list_concExpr(tom_get_head_concExpr_ExprList(l1),tom_append_list_concExpr(tom_get_tail_concExpr_ExprList(l1),l2));     }   }   private static   tom.engine.adt.il.types.ExprList  tom_get_slice_concExpr( tom.engine.adt.il.types.ExprList  begin,  tom.engine.adt.il.types.ExprList  end, tom.engine.adt.il.types.ExprList  tail) {     if(tom_equal_term_ExprList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.il.types.ExprList )tom_cons_list_concExpr(tom_get_head_concExpr_ExprList(begin),( tom.engine.adt.il.types.ExprList )tom_get_slice_concExpr(tom_get_tail_concExpr_ExprList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_subs( tom.engine.adt.il.types.SubstitutionList  t) { return  t instanceof tom.engine.adt.il.types.substitutionlist.Conssubs || t instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs ;}private static  tom.engine.adt.il.types.SubstitutionList  tom_empty_list_subs() { return  tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ; }private static  tom.engine.adt.il.types.SubstitutionList  tom_cons_list_subs( tom.engine.adt.il.types.Substitution  e,  tom.engine.adt.il.types.SubstitutionList  l) { return  tom.engine.adt.il.types.substitutionlist.Conssubs.make(e,l) ; }private static  tom.engine.adt.il.types.Substitution  tom_get_head_subs_SubstitutionList( tom.engine.adt.il.types.SubstitutionList  l) { return  l.getHeadsubs() ;}private static  tom.engine.adt.il.types.SubstitutionList  tom_get_tail_subs_SubstitutionList( tom.engine.adt.il.types.SubstitutionList  l) { return  l.getTailsubs() ;}private static boolean tom_is_empty_subs_SubstitutionList( tom.engine.adt.il.types.SubstitutionList  l) { return  l.isEmptysubs() ;}   private static   tom.engine.adt.il.types.SubstitutionList  tom_append_list_subs( tom.engine.adt.il.types.SubstitutionList l1,  tom.engine.adt.il.types.SubstitutionList  l2) {     if(tom_is_empty_subs_SubstitutionList(l1)) {       return l2;     } else if(tom_is_empty_subs_SubstitutionList(l2)) {       return l1;     } else if(tom_is_empty_subs_SubstitutionList(tom_get_tail_subs_SubstitutionList(l1))) {       return ( tom.engine.adt.il.types.SubstitutionList )tom_cons_list_subs(tom_get_head_subs_SubstitutionList(l1),l2);     } else {       return ( tom.engine.adt.il.types.SubstitutionList )tom_cons_list_subs(tom_get_head_subs_SubstitutionList(l1),tom_append_list_subs(tom_get_tail_subs_SubstitutionList(l1),l2));     }   }   private static   tom.engine.adt.il.types.SubstitutionList  tom_get_slice_subs( tom.engine.adt.il.types.SubstitutionList  begin,  tom.engine.adt.il.types.SubstitutionList  end, tom.engine.adt.il.types.SubstitutionList  tail) {     if(tom_equal_term_SubstitutionList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.il.types.SubstitutionList )tom_cons_list_subs(tom_get_head_subs_SubstitutionList(begin),( tom.engine.adt.il.types.SubstitutionList )tom_get_slice_subs(tom_get_tail_subs_SubstitutionList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concTerm( tom.engine.adt.il.types.TermList  t) { return  t instanceof tom.engine.adt.il.types.termlist.ConsconcTerm || t instanceof tom.engine.adt.il.types.termlist.EmptyconcTerm ;}private static  tom.engine.adt.il.types.TermList  tom_empty_list_concTerm() { return  tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ; }private static  tom.engine.adt.il.types.TermList  tom_cons_list_concTerm( tom.engine.adt.il.types.Term  e,  tom.engine.adt.il.types.TermList  l) { return  tom.engine.adt.il.types.termlist.ConsconcTerm.make(e,l) ; }private static  tom.engine.adt.il.types.Term  tom_get_head_concTerm_TermList( tom.engine.adt.il.types.TermList  l) { return  l.getHeadconcTerm() ;}private static  tom.engine.adt.il.types.TermList  tom_get_tail_concTerm_TermList( tom.engine.adt.il.types.TermList  l) { return  l.getTailconcTerm() ;}private static boolean tom_is_empty_concTerm_TermList( tom.engine.adt.il.types.TermList  l) { return  l.isEmptyconcTerm() ;}   private static   tom.engine.adt.il.types.TermList  tom_append_list_concTerm( tom.engine.adt.il.types.TermList l1,  tom.engine.adt.il.types.TermList  l2) {     if(tom_is_empty_concTerm_TermList(l1)) {       return l2;     } else if(tom_is_empty_concTerm_TermList(l2)) {       return l1;     } else if(tom_is_empty_concTerm_TermList(tom_get_tail_concTerm_TermList(l1))) {       return ( tom.engine.adt.il.types.TermList )tom_cons_list_concTerm(tom_get_head_concTerm_TermList(l1),l2);     } else {       return ( tom.engine.adt.il.types.TermList )tom_cons_list_concTerm(tom_get_head_concTerm_TermList(l1),tom_append_list_concTerm(tom_get_tail_concTerm_TermList(l1),l2));     }   }   private static   tom.engine.adt.il.types.TermList  tom_get_slice_concTerm( tom.engine.adt.il.types.TermList  begin,  tom.engine.adt.il.types.TermList  end, tom.engine.adt.il.types.TermList  tail) {     if(tom_equal_term_TermList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.il.types.TermList )tom_cons_list_concTerm(tom_get_head_concTerm_TermList(begin),( tom.engine.adt.il.types.TermList )tom_get_slice_concTerm(tom_get_tail_concTerm_TermList(begin),end,tail));     }   }    /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_Strategy(Object t1, Object t2) { return t1.equals(t2);}private static boolean tom_is_sort_Strategy(Object t) { return  t instanceof tom.library.sl.Strategy ;}/* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_mu( tom.library.sl.Strategy  var,  tom.library.sl.Strategy  v) { return  new tom.library.sl.Mu(var,v) ; }private static  tom.library.sl.Strategy  tom_make_MuVar( String  name) { return  new tom.library.sl.MuVar(name) ; }private static  tom.library.sl.Strategy  tom_make_Identity() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_make_All( tom.library.sl.Strategy  v) { return  new tom.library.sl.All(v) ; }private static  tom.library.sl.Strategy  tom_make_Fail() { return  new tom.library.sl.Fail() ; }private static boolean tom_is_fun_sym_Sequence( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.Sequence) ;}private static  tom.library.sl.Strategy  tom_empty_list_Sequence() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_cons_list_Sequence( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  new tom.library.sl.Sequence(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.THEN) ;}private static boolean tom_is_empty_Sequence_Strategy( tom.library.sl.Strategy  t) { return  t instanceof tom.library.sl.Identity ;}   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_Sequence_Strategy(l1)) {       return l2;     } else if(tom_is_empty_Sequence_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_Sequence(l1)) {       if(tom_is_empty_Sequence_Strategy(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()))) {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),tom_append_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_head_Sequence_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_tail_Sequence_Strategy(begin):tom_empty_list_Sequence()),end,tail));     }   }   private static  tom.library.sl.Strategy  tom_make_Choice( tom.library.sl.Strategy  first,  tom.library.sl.Strategy  then) { return  new tom.library.sl.Choice(first,then) ; }private static boolean tom_is_fun_sym_SequenceId( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.SequenceId) ;}private static  tom.library.sl.Strategy  tom_empty_list_SequenceId() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_cons_list_SequenceId( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  new tom.library.sl.SequenceId(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.SequenceId.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.SequenceId.THEN) ;}private static boolean tom_is_empty_SequenceId_Strategy( tom.library.sl.Strategy  t) { return  t instanceof tom.library.sl.Identity ;}   private static   tom.library.sl.Strategy  tom_append_list_SequenceId( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_SequenceId_Strategy(l1)) {       return l2;     } else if(tom_is_empty_SequenceId_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_SequenceId(l1)) {       if(tom_is_empty_SequenceId_Strategy(((tom_is_fun_sym_SequenceId(l1))?tom_get_tail_SequenceId_Strategy(l1):tom_empty_list_SequenceId()))) {         return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_head_SequenceId_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_head_SequenceId_Strategy(l1):l1),tom_append_list_SequenceId(((tom_is_fun_sym_SequenceId(l1))?tom_get_tail_SequenceId_Strategy(l1):tom_empty_list_SequenceId()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_SequenceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_SequenceId(((tom_is_fun_sym_SequenceId(begin))?tom_get_head_SequenceId_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_SequenceId(((tom_is_fun_sym_SequenceId(begin))?tom_get_tail_SequenceId_Strategy(begin):tom_empty_list_SequenceId()),end,tail));     }   }    /* Generated by TOM (version 2.5alpha): Do not edit this file */ /* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_Try( tom.library.sl.Strategy  v) { return tom_make_Choice(v,tom_make_Identity()) ; }private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence()))) ; }private static  tom.library.sl.Strategy  tom_make_InnermostId( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_cons_list_Sequence(tom_cons_list_SequenceId(v,tom_cons_list_SequenceId(tom_make_MuVar("_x"),tom_empty_list_SequenceId())),tom_empty_list_Sequence()))) ; }   private static boolean tom_is_sort_Collection(Object t) { return 




 t instanceof java.util.Collection ;}private static boolean tom_is_sort_Map(Object t) { return 



 t instanceof java.util.Map ;}

  // ------------------------------------------------------------

  private SymbolTable symbolTable;
  private boolean camlsemantics = false;

  public Verifier(boolean camlsemantics) {
    super();
    this.camlsemantics = camlsemantics;
  }

  public void setSymbolTable(SymbolTable symbolTable) {
    this.symbolTable = symbolTable;
  }

  public SymbolTable getSymbolTable() {
    return symbolTable;
  }

  public boolean isCamlSemantics() {
    return camlsemantics;
  }

  public Term termFromTomTerm(TomTerm tomterm) {
    if (tom_is_sort_TomTerm(tomterm)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch254NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomterm);if (tom_is_fun_sym_ExpressionToTomTerm(tomMatch254NameNumberfreshSubject_1)) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch254NameNumber_freshVar_0=tom_get_slot_ExpressionToTomTerm_AstExpression(tomMatch254NameNumberfreshSubject_1);if ( true ) {

        return termFromExpresssion(tomMatch254NameNumber_freshVar_0);
      }}}if (tom_is_fun_sym_Variable(tomMatch254NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch254NameNumber_freshVar_1=tom_get_slot_Variable_AstName(tomMatch254NameNumberfreshSubject_1);if ( true ) {

        return termFromTomName(tomMatch254NameNumber_freshVar_1);
      }}}}}

    System.out.println("termFromTomTerm don't know how to handle this: " + tomterm);
    return tom_make_repr("foirade");
  }

  Variable variableFromTomName(TomName name) {
    if (tom_is_sort_TomName(name)) {{  tom.engine.adt.tomname.types.TomName  tomMatch255NameNumberfreshSubject_1=(( tom.engine.adt.tomname.types.TomName )name);if (tom_is_fun_sym_Name(tomMatch255NameNumberfreshSubject_1)) {{  String  tomMatch255NameNumber_freshVar_0=tom_get_slot_Name_String(tomMatch255NameNumberfreshSubject_1);if ( true ) {

        return tom_make_var(tomMatch255NameNumber_freshVar_0);
      }}}if (tom_is_fun_sym_PositionName(tomMatch255NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNumberList  tomMatch255NameNumber_freshVar_1=tom_get_slot_PositionName_NumberList(tomMatch255NameNumberfreshSubject_1);if ( true ) {

        return tom_make_var(TomBase.tomNumberListToString(tomMatch255NameNumber_freshVar_1));
      }}}if (tom_is_fun_sym_EmptyName(tomMatch255NameNumberfreshSubject_1)) {if ( true ) {

        return tom_make_var("emptyName");
      }}}}

    return tom_make_var("error while building variable name");
  }

  Term termFromTomName(TomName name) {
    return tom_make_tau(tom_make_absvar(variableFromTomName(name)));
  }

  public Term termFromExpresssion(Expression expression) {
    if (tom_is_sort_Expression(expression)) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch256NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if (tom_is_fun_sym_GetSlot(tomMatch256NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch256NameNumber_freshVar_0=tom_get_slot_GetSlot_AstName(tomMatch256NameNumberfreshSubject_1);{  String  tomMatch256NameNumber_freshVar_1=tom_get_slot_GetSlot_SlotNameString(tomMatch256NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch256NameNumber_freshVar_2=tom_get_slot_GetSlot_Variable(tomMatch256NameNumberfreshSubject_1);if (tom_is_fun_sym_Name(tomMatch256NameNumber_freshVar_0)) {{  String  tomMatch256NameNumber_freshVar_3=tom_get_slot_Name_String(tomMatch256NameNumber_freshVar_0);if (tom_is_fun_sym_Variable(tomMatch256NameNumber_freshVar_2)) {{  tom.engine.adt.tomname.types.TomName  tomMatch256NameNumber_freshVar_4=tom_get_slot_Variable_AstName(tomMatch256NameNumber_freshVar_2);if ( true ) {

        Term term = termFromTomName(tomMatch256NameNumber_freshVar_4);
        return tom_make_slot(tom_make_fsymbol(tomMatch256NameNumber_freshVar_3),term,tomMatch256NameNumber_freshVar_1);
      }}}}}}}}}if (tom_is_fun_sym_TomTermToExpression(tomMatch256NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch256NameNumber_freshVar_5=tom_get_slot_TomTermToExpression_AstTerm(tomMatch256NameNumberfreshSubject_1);if (tom_is_fun_sym_Variable(tomMatch256NameNumber_freshVar_5)) {{  tom.engine.adt.tomname.types.TomName  tomMatch256NameNumber_freshVar_6=tom_get_slot_Variable_AstName(tomMatch256NameNumber_freshVar_5);if ( true ) {

        Term term = termFromTomName(tomMatch256NameNumber_freshVar_6);
        return term;
      }}}}}if (tom_is_fun_sym_Cast(tomMatch256NameNumberfreshSubject_1)) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch256NameNumber_freshVar_7=tom_get_slot_Cast_Source(tomMatch256NameNumberfreshSubject_1);if ( true ) {

        return termFromExpresssion(tomMatch256NameNumber_freshVar_7);
      }}}}}

    System.out.println("termFromExpresssion don't know how to handle this: " + expression);
    return tom_make_repr("autre foirade avec " + expression);
  }

  public Expr exprFromExpression(Expression expression) {
    if (tom_is_sort_Expression(expression)) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch257NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if (tom_is_fun_sym_TrueTL(tomMatch257NameNumberfreshSubject_1)) {if ( true ) {
 return tom_make_iltrue(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs())); }}if (tom_is_fun_sym_FalseTL(tomMatch257NameNumberfreshSubject_1)) {if ( true ) {
 return tom_make_ilfalse(); }}if (tom_is_fun_sym_IsFsym(tomMatch257NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch257NameNumber_freshVar_0=tom_get_slot_IsFsym_AstName(tomMatch257NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch257NameNumber_freshVar_1=tom_get_slot_IsFsym_Variable(tomMatch257NameNumberfreshSubject_1);if (tom_is_fun_sym_Name(tomMatch257NameNumber_freshVar_0)) {{  String  tomMatch257NameNumber_freshVar_2=tom_get_slot_Name_String(tomMatch257NameNumber_freshVar_0);if (tom_is_fun_sym_Variable(tomMatch257NameNumber_freshVar_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch257NameNumber_freshVar_3=tom_get_slot_Variable_AstName(tomMatch257NameNumber_freshVar_1);if ( true ) {

        Term term = termFromTomName(tomMatch257NameNumber_freshVar_3);
        return tom_make_isfsym(term,tom_make_fsymbol(tomMatch257NameNumber_freshVar_2));
      }}}}}}}}if (tom_is_fun_sym_EqualTerm(tomMatch257NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch257NameNumber_freshVar_4=tom_get_slot_EqualTerm_Kid1(tomMatch257NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch257NameNumber_freshVar_5=tom_get_slot_EqualTerm_Kid2(tomMatch257NameNumberfreshSubject_1);if ( true ) {

        return tom_make_eq(termFromTomTerm(tomMatch257NameNumber_freshVar_4),termFromTomTerm(tomMatch257NameNumber_freshVar_5));
      }}}}if (tom_is_fun_sym_IsSort(tomMatch257NameNumberfreshSubject_1)) {if ( true ) {
 return tom_make_iltrue(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs())); }}}}

    System.out.println("exprFromExpression don't know how to handle this: " + expression);
    return tom_make_ilfalse();
  }

  public Instr instrFromInstructionList(InstructionList instrlist) {
    InstrList list = tom_empty_list_semicolon();
    while (!instrlist.isEmptyconcInstruction()) {
      Instruction i = (Instruction) instrlist.getHeadconcInstruction();
      instrlist = instrlist.getTailconcInstruction();
      list = tom_append_list_semicolon(list,tom_cons_list_semicolon(instrFromInstruction(i),tom_empty_list_semicolon()));
    }
    return tom_make_sequence(list);
  }

  public Instr instrFromInstruction(Instruction automata) {
    if (tom_is_sort_Instruction(automata)) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch258NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )automata);if (tom_is_fun_sym_TypedAction(tomMatch258NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.Pattern  tomMatch258NameNumber_freshVar_0=tom_get_slot_TypedAction_PositivePattern(tomMatch258NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.PatternList  tomMatch258NameNumber_freshVar_1=tom_get_slot_TypedAction_NegativePatternList(tomMatch258NameNumberfreshSubject_1);if ( true ) {

        return tom_make_accept(tomMatch258NameNumber_freshVar_0.toATerm(),tomMatch258NameNumber_freshVar_1.toATerm());
      }}}}if (tom_is_fun_sym_If(tomMatch258NameNumberfreshSubject_1)) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch258NameNumber_freshVar_2=tom_get_slot_If_Condition(tomMatch258NameNumberfreshSubject_1);{  tom.engine.adt.tominstruction.types.Instruction  tomMatch258NameNumber_freshVar_3=tom_get_slot_If_SuccesInst(tomMatch258NameNumberfreshSubject_1);{  tom.engine.adt.tominstruction.types.Instruction  tomMatch258NameNumber_freshVar_4=tom_get_slot_If_FailureInst(tomMatch258NameNumberfreshSubject_1);if ( true ) {


        return tom_make_ITE(exprFromExpression(tomMatch258NameNumber_freshVar_2),instrFromInstruction(tomMatch258NameNumber_freshVar_3),instrFromInstruction(tomMatch258NameNumber_freshVar_4))

;
      }}}}}if (tom_is_fun_sym_Let(tomMatch258NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch258NameNumber_freshVar_5=tom_get_slot_Let_Variable(tomMatch258NameNumberfreshSubject_1);{  tom.engine.adt.tomexpression.types.Expression  tomMatch258NameNumber_freshVar_6=tom_get_slot_Let_Source(tomMatch258NameNumberfreshSubject_1);{  tom.engine.adt.tominstruction.types.Instruction  tomMatch258NameNumber_freshVar_7=tom_get_slot_Let_AstInstruction(tomMatch258NameNumberfreshSubject_1);if (tom_is_fun_sym_Variable(tomMatch258NameNumber_freshVar_5)) {{  tom.engine.adt.tomname.types.TomName  tomMatch258NameNumber_freshVar_8=tom_get_slot_Variable_AstName(tomMatch258NameNumber_freshVar_5);if ( true ) {

        Variable thevar = variableFromTomName(tomMatch258NameNumber_freshVar_8);
        return tom_make_ILLet(thevar,termFromExpresssion(tomMatch258NameNumber_freshVar_6),instrFromInstruction(tomMatch258NameNumber_freshVar_7))

;
      }}}}}}}if (tom_is_fun_sym_LetAssign(tomMatch258NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch258NameNumber_freshVar_9=tom_get_slot_LetAssign_Variable(tomMatch258NameNumberfreshSubject_1);{  tom.engine.adt.tomexpression.types.Expression  tomMatch258NameNumber_freshVar_10=tom_get_slot_LetAssign_Source(tomMatch258NameNumberfreshSubject_1);{  tom.engine.adt.tominstruction.types.Instruction  tomMatch258NameNumber_freshVar_11=tom_get_slot_LetAssign_AstInstruction(tomMatch258NameNumberfreshSubject_1);if (tom_is_fun_sym_Variable(tomMatch258NameNumber_freshVar_9)) {{  tom.engine.adt.tomname.types.TomName  tomMatch258NameNumber_freshVar_12=tom_get_slot_Variable_AstName(tomMatch258NameNumber_freshVar_9);if ( true ) {

        Variable thevar = variableFromTomName(tomMatch258NameNumber_freshVar_12);
        return tom_make_ILLet(thevar,termFromExpresssion(tomMatch258NameNumber_freshVar_10),instrFromInstruction(tomMatch258NameNumber_freshVar_11))

;
      }}}}}}}{ boolean tomMatch258NameNumber_freshVar_16= false ;{  tom.engine.adt.tominstruction.types.Instruction  tomMatch258NameNumber_freshVar_15= null ;{  tom.engine.adt.tomexpression.types.Expression  tomMatch258NameNumber_freshVar_14= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch258NameNumber_freshVar_13= null ;if (tom_is_fun_sym_Let(tomMatch258NameNumberfreshSubject_1)) {{tomMatch258NameNumber_freshVar_16= true ;tomMatch258NameNumber_freshVar_13=tom_get_slot_Let_Variable(tomMatch258NameNumberfreshSubject_1);tomMatch258NameNumber_freshVar_14=tom_get_slot_Let_Source(tomMatch258NameNumberfreshSubject_1);tomMatch258NameNumber_freshVar_15=tom_get_slot_Let_AstInstruction(tomMatch258NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_LetAssign(tomMatch258NameNumberfreshSubject_1)) {{tomMatch258NameNumber_freshVar_16= true ;tomMatch258NameNumber_freshVar_13=tom_get_slot_LetAssign_Variable(tomMatch258NameNumberfreshSubject_1);tomMatch258NameNumber_freshVar_14=tom_get_slot_LetAssign_Source(tomMatch258NameNumberfreshSubject_1);tomMatch258NameNumber_freshVar_15=tom_get_slot_LetAssign_AstInstruction(tomMatch258NameNumberfreshSubject_1);}}}if ((tomMatch258NameNumber_freshVar_16 ==  true )) {if (tom_is_fun_sym_UnamedVariable(tomMatch258NameNumber_freshVar_13)) {if ( true ) {

        return instrFromInstruction(tomMatch258NameNumber_freshVar_15);
      }}}}}}}if (tom_is_fun_sym_CompiledPattern(tomMatch258NameNumberfreshSubject_1)) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch258NameNumber_freshVar_17=tom_get_slot_CompiledPattern_AutomataInst(tomMatch258NameNumberfreshSubject_1);if ( true ) {

        return instrFromInstruction(tomMatch258NameNumber_freshVar_17);
      }}}if (tom_is_fun_sym_AbstractBlock(tomMatch258NameNumberfreshSubject_1)) {{  tom.engine.adt.tominstruction.types.InstructionList  tomMatch258NameNumber_freshVar_18=tom_get_slot_AbstractBlock_InstList(tomMatch258NameNumberfreshSubject_1);if (tom_is_fun_sym_concInstruction(tomMatch258NameNumber_freshVar_18)) {{  tom.engine.adt.tominstruction.types.InstructionList  tomMatch258NameNumber_freshVar_19=tomMatch258NameNumber_freshVar_18;if (!(tom_is_empty_concInstruction_InstructionList(tomMatch258NameNumber_freshVar_19))) {{  tom.engine.adt.tominstruction.types.InstructionList  tomMatch258NameNumber_freshVar_20=tom_get_tail_concInstruction_InstructionList(tomMatch258NameNumber_freshVar_19);if (tom_is_empty_concInstruction_InstructionList(tomMatch258NameNumber_freshVar_20)) {if ( true ) {

        return instrFromInstruction(tom_get_head_concInstruction_InstructionList(tomMatch258NameNumber_freshVar_19));
      }}}}}}}}if (tom_is_fun_sym_AbstractBlock(tomMatch258NameNumberfreshSubject_1)) {{  tom.engine.adt.tominstruction.types.InstructionList  tomMatch258NameNumber_freshVar_21=tom_get_slot_AbstractBlock_InstList(tomMatch258NameNumberfreshSubject_1);if (tom_is_fun_sym_concInstruction(tomMatch258NameNumber_freshVar_21)) {{  tom.engine.adt.tominstruction.types.InstructionList  tomMatch258NameNumber_freshVar_22=tomMatch258NameNumber_freshVar_21;if ( true ) {

        return instrFromInstructionList(tomMatch258NameNumber_freshVar_22);
      }}}}}if (tom_is_fun_sym_Nop(tomMatch258NameNumberfreshSubject_1)) {if ( true ) {

        // tom uses nop in the iffalse part of ITE
        return tom_make_refuse();
      }}}}

    System.out.println("instrFromInstruction don't know how to handle this : " + automata);
    return tom_make_refuse();
  }

  private SubstitutionList abstractSubstitutionFromAccept(Instr instr) {
    SubstitutionList substitution = tom_empty_list_subs();
    if (tom_is_sort_Instr(instr)) {{  tom.engine.adt.il.types.Instr  tomMatch261NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Instr )instr);if (tom_is_fun_sym_accept(tomMatch261NameNumberfreshSubject_1)) {{  aterm.ATerm  tomMatch261NameNumber_freshVar_0=tom_get_slot_accept_Positive(tomMatch261NameNumberfreshSubject_1);{  aterm.ATerm  tomMatch261NameNumber_freshVar_1=tom_get_slot_accept_Negative(tomMatch261NameNumberfreshSubject_1);if ( true ) {

        Pattern positivePattern = Pattern.fromTerm(tomMatch261NameNumber_freshVar_0);
        if (tom_is_sort_Pattern(positivePattern)) {{  tom.engine.adt.tomterm.types.Pattern  tomMatch260NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.Pattern )positivePattern);if (tom_is_fun_sym_Pattern(tomMatch260NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch260NameNumber_freshVar_0=tom_get_slot_Pattern_SubjectList(tomMatch260NameNumberfreshSubject_1);if ( true ) {

            TomList sl = tomMatch260NameNumber_freshVar_0;
            while(!sl.isEmptyconcTomTerm()) {
              TomTerm subject = sl.getHeadconcTomTerm();
              sl=sl.getTailconcTomTerm();
              if (tom_is_sort_TomTerm(subject)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch259NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if (tom_is_fun_sym_Variable(tomMatch259NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch259NameNumber_freshVar_0=tom_get_slot_Variable_AstName(tomMatch259NameNumberfreshSubject_1);if ( true ) {

                  substitution = tom_append_list_subs(substitution,tom_cons_list_subs(tom_make_is(variableFromTomName(tomMatch259NameNumber_freshVar_0),termFromTomTerm(subject)),tom_empty_list_subs()))


;
                }}}}}

            }
          }}}}}

      }}}}}}

    return substitution;
  }

  public Collection build_tree(Instruction automata) {
    // System.out.println("Build derivation tree for: " + automata);

    // collects the accept in the automata
    Collection localAccepts = collectAccept(automata);

    Iterator iter = localAccepts.iterator();
    Collection treeList = new HashSet();
    while(iter.hasNext()) {
        Instr localAccept = (Instr) iter.next();

        // builds the initial abstract substitution
        SubstitutionList initialsubstitution = abstractSubstitutionFromAccept(localAccept);
        Environment startingenv = tom_make_env(initialsubstitution,instrFromInstruction(automata))
;

        Deriv startingderiv = tom_make_ebs(startingenv,tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),localAccept))
;

        Collection treeListPre = applySemanticsRules(startingderiv);
        // replace substitutions in trees
        Iterator it = treeListPre.iterator();
        while(it.hasNext()) {
            DerivTree tree = (DerivTree) it.next();
            SubstitutionList outputsubst = getOutputSubstitution(tree);
            tree = replaceUndefinedSubstitution(tree,outputsubst);
            treeList.add(tree);
        }
    }

    return treeList;
  }

  public Map getConstraints(Instruction automata) {
    // collects the accept in the automata
    Collection localAccepts = collectAccept(automata);

    Iterator iter = localAccepts.iterator();
    Map constraintList = new HashMap();
    while(iter.hasNext()) {
        Instr localAccept = (Instr) iter.next();

        // builds the initial abstract substitution
        SubstitutionList initialsubstitution = abstractSubstitutionFromAccept(localAccept);
        Expr constraints = buildConstraint(initialsubstitution,
                                           instrFromInstruction(automata),
                                           localAccept);
        constraintList.put(localAccept,constraints);
    }
    return constraintList;
  }

  private static class substitutionCollector extends  tom.engine.adt.il.IlBasicStrategy  {private  SubstRef  outsubst; public substitutionCollector( SubstRef  outsubst) { super(tom_make_Identity());this.outsubst=outsubst;}public  SubstRef  getoutsubst() { return outsubst;}public jjtraveler.Visitable[] getChildren() {jjtraveler.Visitable[] stratChilds = new jjtraveler.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public jjtraveler.Visitable setChildren(jjtraveler.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public jjtraveler.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public jjtraveler.Visitable setChildAt(int index, jjtraveler.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.il.types.Expr  visit_Expr( tom.engine.adt.il.types.Expr  tom__arg) throws jjtraveler.VisitFailure {if (tom_is_sort_Expr(tom__arg)) {{  tom.engine.adt.il.types.Expr  tomMatch262NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )tom__arg);{  tom.engine.adt.il.types.Expr  tomMatch262NameNumber_freshVar_0=tomMatch262NameNumberfreshSubject_1;if (tom_is_fun_sym_iltrue(tomMatch262NameNumber_freshVar_0)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch262NameNumber_freshVar_1=tom_get_slot_iltrue_Subst(tomMatch262NameNumber_freshVar_0);if (tom_is_fun_sym_subs(tomMatch262NameNumber_freshVar_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch262NameNumber_freshVar_2=tomMatch262NameNumber_freshVar_1;if (!(tom_is_empty_subs_SubstitutionList(tomMatch262NameNumber_freshVar_2))) {if (tom_is_fun_sym_undefsubs(tom_get_head_subs_SubstitutionList(tomMatch262NameNumber_freshVar_2))) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch262NameNumber_freshVar_3=tom_get_tail_subs_SubstitutionList(tomMatch262NameNumber_freshVar_2);if (tom_is_empty_subs_SubstitutionList(tomMatch262NameNumber_freshVar_3)) {if ( true ) {tom_make_Fail()


.visit(tomMatch262NameNumber_freshVar_0);
      }}}}}}}}}}if (tom_is_fun_sym_iltrue(tomMatch262NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch262NameNumber_freshVar_4=tom_get_slot_iltrue_Subst(tomMatch262NameNumberfreshSubject_1);if ( true ) {

        outsubst.set(tomMatch262NameNumber_freshVar_4);
      }}}}}return super.visit_Expr(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_substitutionCollector( SubstRef  t0) { return new substitutionCollector(t0); }


  public SubstitutionList collectSubstitutionInConstraint(Expr expr) {
    SubstRef output = new SubstRef(tom_empty_list_subs());
    try {
      tom_make_mu(tom_make_MuVar("x"),tom_make_Try(tom_cons_list_Sequence(tom_make_substitutionCollector(output),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("x")),tom_empty_list_Sequence())))).visit(expr);
    } catch (jjtraveler.VisitFailure e) {
      throw new TomRuntimeException("Strategy substitutionCollector failed");
    }
    return output.get();
  }

  private static class outputSubstitutionCollector extends  tom.engine.adt.il.IlBasicStrategy  {private  SubstRef  outsubst; public outputSubstitutionCollector( SubstRef  outsubst) { super(tom_make_Identity());this.outsubst=outsubst;}public  SubstRef  getoutsubst() { return outsubst;}public jjtraveler.Visitable[] getChildren() {jjtraveler.Visitable[] stratChilds = new jjtraveler.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public jjtraveler.Visitable setChildren(jjtraveler.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public jjtraveler.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public jjtraveler.Visitable setChildAt(int index, jjtraveler.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.il.types.Deriv  visit_Deriv( tom.engine.adt.il.types.Deriv  tom__arg) throws jjtraveler.VisitFailure {if (tom_is_sort_Deriv(tom__arg)) {{  tom.engine.adt.il.types.Deriv  tomMatch263NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Deriv )tom__arg);if (tom_is_fun_sym_ebs(tomMatch263NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Environment  tomMatch263NameNumber_freshVar_0=tom_get_slot_ebs_Lhs(tomMatch263NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Environment  tomMatch263NameNumber_freshVar_1=tom_get_slot_ebs_Rhs(tomMatch263NameNumberfreshSubject_1);if (tom_is_fun_sym_env(tomMatch263NameNumber_freshVar_0)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch263NameNumber_freshVar_2=tom_get_slot_env_Subs(tomMatch263NameNumber_freshVar_0);{  tom.engine.adt.il.types.Instr  tomMatch263NameNumber_freshVar_3=tom_get_slot_env_I(tomMatch263NameNumber_freshVar_0);if (tom_is_fun_sym_accept(tomMatch263NameNumber_freshVar_3)) {if (tom_is_fun_sym_env(tomMatch263NameNumber_freshVar_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch263NameNumber_freshVar_4=tom_get_slot_env_Subs(tomMatch263NameNumber_freshVar_1);{  tom.engine.adt.il.types.Instr  tomMatch263NameNumber_freshVar_5=tom_get_slot_env_I(tomMatch263NameNumber_freshVar_1);if (tom_is_fun_sym_subs(tomMatch263NameNumber_freshVar_4)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch263NameNumber_freshVar_6=tomMatch263NameNumber_freshVar_4;if (!(tom_is_empty_subs_SubstitutionList(tomMatch263NameNumber_freshVar_6))) {if (tom_is_fun_sym_undefsubs(tom_get_head_subs_SubstitutionList(tomMatch263NameNumber_freshVar_6))) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch263NameNumber_freshVar_7=tom_get_tail_subs_SubstitutionList(tomMatch263NameNumber_freshVar_6);if (tom_is_empty_subs_SubstitutionList(tomMatch263NameNumber_freshVar_7)) {if (tom_is_fun_sym_accept(tomMatch263NameNumber_freshVar_5)) {if ( true ) {


        outsubst.set(tomMatch263NameNumber_freshVar_2);
      }}}}}}}}}}}}}}}}}}}}return super.visit_Deriv(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_outputSubstitutionCollector( SubstRef  t0) { return new outputSubstitutionCollector(t0); }



  public SubstitutionList getOutputSubstitution(DerivTree subject) {
    SubstRef output = new SubstRef(tom_empty_list_subs());
    try {
      tom_make_TopDown(tom_make_outputSubstitutionCollector(output)).visit(subject);
    } catch (jjtraveler.VisitFailure e) {
      throw new TomRuntimeException("Strategy outputSubstitutionCollector failed");
    }
    return output.get();
  }

  private static class acceptCollector extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  java.util.Collection  store; public acceptCollector( java.util.Collection  store) { super(tom_make_Identity());this.store=store;}public  java.util.Collection  getstore() { return store;}public jjtraveler.Visitable[] getChildren() {jjtraveler.Visitable[] stratChilds = new jjtraveler.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public jjtraveler.Visitable setChildren(jjtraveler.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public jjtraveler.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public jjtraveler.Visitable setChildAt(int index, jjtraveler.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction( tom.engine.adt.tominstruction.types.Instruction  tom__arg) throws jjtraveler.VisitFailure {if (tom_is_sort_Instruction(tom__arg)) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch264NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg);if (tom_is_fun_sym_TypedAction(tomMatch264NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.Pattern  tomMatch264NameNumber_freshVar_0=tom_get_slot_TypedAction_PositivePattern(tomMatch264NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.PatternList  tomMatch264NameNumber_freshVar_1=tom_get_slot_TypedAction_NegativePatternList(tomMatch264NameNumberfreshSubject_1);if ( true ) {


        store.add(tom_make_accept(tomMatch264NameNumber_freshVar_0.toATerm(),tomMatch264NameNumber_freshVar_1.toATerm()));
      }}}}}}return super.visit_Instruction(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_acceptCollector( java.util.Collection  t0) { return new acceptCollector(t0); }



  public Collection collectAccept(Instruction subject) {
    Collection result = new HashSet();
    try {
      tom_make_TopDown(tom_make_acceptCollector(result)).visit(subject);
    } catch (jjtraveler.VisitFailure e) {
      throw new TomRuntimeException("Strategy collectAccept failed");
    }
    return result;
  }


  /**
   * The axioms the mapping has to verify
   */
  protected Seq seqFromTerm(Term sp) {
    TermList ded = tom_cons_list_concTerm(sp,tom_empty_list_concTerm());
    if (tom_is_sort_Term(sp)) {{  tom.engine.adt.il.types.Term  tomMatch265NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )sp);if (tom_is_fun_sym_appSubsT(tomMatch265NameNumberfreshSubject_1)) {if ( true ) {

        TermList follow = applyMappingRules(replaceVariablesInTerm(sp));
        ded = tom_append_list_concTerm(ded,tom_append_list_concTerm(follow,tom_empty_list_concTerm()));
      }}}}

    return tom_make_dedterm(tom_append_list_concTerm(ded,tom_empty_list_concTerm()));
  }

  protected ExprList exprListFromExpr(Expr sp) {
    ExprList ded = tom_cons_list_concExpr(sp,tom_empty_list_concExpr());
    if (tom_is_sort_Expr(sp)) {{  tom.engine.adt.il.types.Expr  tomMatch266NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )sp);if (tom_is_fun_sym_appSubsE(tomMatch266NameNumberfreshSubject_1)) {if ( true ) {

        ExprList follow = applyExprRules(replaceVariablesInExpr(sp));
        ded = tom_append_list_concExpr(ded,tom_append_list_concExpr(follow,tom_empty_list_concExpr()));
      }}}}


    // System.out.println("dedexpr gives: " + ded);
    return ded;
  }

  protected SubstitutionList reduceSubstitutionWithMappingRules(SubstitutionList subst) {
    if (tom_is_sort_SubstitutionList(subst)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch267NameNumberfreshSubject_1=(( tom.engine.adt.il.types.SubstitutionList )subst);if (tom_is_fun_sym_subs(tomMatch267NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch267NameNumber_freshVar_0=tomMatch267NameNumberfreshSubject_1;if (tom_is_empty_subs_SubstitutionList(tomMatch267NameNumber_freshVar_0)) {if ( true ) {

        return subst;
      }}}}if (tom_is_fun_sym_subs(tomMatch267NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch267NameNumber_freshVar_1=tomMatch267NameNumberfreshSubject_1;if (!(tom_is_empty_subs_SubstitutionList(tomMatch267NameNumber_freshVar_1))) {if (tom_is_fun_sym_is(tom_get_head_subs_SubstitutionList(tomMatch267NameNumber_freshVar_1))) {{  tom.engine.adt.il.types.Variable  tomMatch267NameNumber_freshVar_14=tom_get_slot_is_Var(tom_get_head_subs_SubstitutionList(tomMatch267NameNumber_freshVar_1));{  tom.engine.adt.il.types.Term  tomMatch267NameNumber_freshVar_15=tom_get_slot_is_Term(tom_get_head_subs_SubstitutionList(tomMatch267NameNumber_freshVar_1));{  tom.engine.adt.il.types.SubstitutionList  tomMatch267NameNumber_freshVar_2=tom_get_tail_subs_SubstitutionList(tomMatch267NameNumber_freshVar_1);if ( true ) {

        SubstitutionList tail = reduceSubstitutionWithMappingRules(tomMatch267NameNumber_freshVar_2);
        return tom_cons_list_subs(tom_make_is(tomMatch267NameNumber_freshVar_14,reduceTermWithMappingRules(replaceVariablesInTerm(tom_make_appSubsT(tail,tomMatch267NameNumber_freshVar_15)))),tom_append_list_subs(tail,tom_empty_list_subs()));
      }}}}}}}}if (tom_is_fun_sym_subs(tomMatch267NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch267NameNumber_freshVar_34=tomMatch267NameNumberfreshSubject_1;if (!(tom_is_empty_subs_SubstitutionList(tomMatch267NameNumber_freshVar_34))) {if (tom_is_fun_sym_undefsubs(tom_get_head_subs_SubstitutionList(tomMatch267NameNumber_freshVar_34))) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch267NameNumber_freshVar_35=tom_get_tail_subs_SubstitutionList(tomMatch267NameNumber_freshVar_34);if ( true ) {

        SubstitutionList tail = reduceSubstitutionWithMappingRules(tomMatch267NameNumber_freshVar_35);
        return tom_cons_list_subs(tom_make_undefsubs(),tom_append_list_subs(tail,tom_empty_list_subs()));
      }}}}}}}}

    return subst;
  }
  protected Expr reduceWithMappingRules(Expr ex) {
    if (tom_is_sort_Expr(ex)) {{  tom.engine.adt.il.types.Expr  tomMatch268NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if (tom_is_fun_sym_eq(tomMatch268NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Term  tomMatch268NameNumber_freshVar_0=tom_get_slot_eq_Lt(tomMatch268NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch268NameNumber_freshVar_1=tom_get_slot_eq_Rt(tomMatch268NameNumberfreshSubject_1);if (tom_is_fun_sym_tau(tomMatch268NameNumber_freshVar_0)) {{  tom.engine.adt.il.types.AbsTerm  tomMatch268NameNumber_freshVar_2=tom_get_slot_tau_Abst(tomMatch268NameNumber_freshVar_0);if (tom_is_fun_sym_tau(tomMatch268NameNumber_freshVar_1)) {{  tom.engine.adt.il.types.AbsTerm  tomMatch268NameNumber_freshVar_3=tom_get_slot_tau_Abst(tomMatch268NameNumber_freshVar_1);if ( true ) {

        return tom_make_teq(tomMatch268NameNumber_freshVar_2,tomMatch268NameNumber_freshVar_3);
      }}}}}}}}if (tom_is_fun_sym_isfsym(tomMatch268NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Term  tomMatch268NameNumber_freshVar_4=tom_get_slot_isfsym_T(tomMatch268NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Symbol  tomMatch268NameNumber_freshVar_5=tom_get_slot_isfsym_Symbol(tomMatch268NameNumberfreshSubject_1);if (tom_is_fun_sym_tau(tomMatch268NameNumber_freshVar_4)) {{  tom.engine.adt.il.types.AbsTerm  tomMatch268NameNumber_freshVar_6=tom_get_slot_tau_Abst(tomMatch268NameNumber_freshVar_4);if ( true ) {

        return tom_make_tisfsym(tomMatch268NameNumber_freshVar_6,tomMatch268NameNumber_freshVar_5);
      }}}}}}if (tom_is_fun_sym_eq(tomMatch268NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Term  tomMatch268NameNumber_freshVar_7=tom_get_slot_eq_Lt(tomMatch268NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch268NameNumber_freshVar_8=tom_get_slot_eq_Rt(tomMatch268NameNumberfreshSubject_1);if ( true ) {

        // first reduce the argument
        return reduceWithMappingRules(tom_make_eq(reduceTermWithMappingRules(tomMatch268NameNumber_freshVar_7),reduceTermWithMappingRules(tomMatch268NameNumber_freshVar_8)));
      }}}}if (tom_is_fun_sym_isfsym(tomMatch268NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Term  tomMatch268NameNumber_freshVar_9=tom_get_slot_isfsym_T(tomMatch268NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Symbol  tomMatch268NameNumber_freshVar_10=tom_get_slot_isfsym_Symbol(tomMatch268NameNumberfreshSubject_1);if ( true ) {

        return reduceWithMappingRules(tom_make_isfsym(reduceTermWithMappingRules(tomMatch268NameNumber_freshVar_9),tomMatch268NameNumber_freshVar_10));
      }}}}if (tom_is_fun_sym_ilnot(tomMatch268NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch268NameNumber_freshVar_11=tom_get_slot_ilnot_Exp(tomMatch268NameNumberfreshSubject_1);if ( true ) {

        return tom_make_ilnot(reduceWithMappingRules(tomMatch268NameNumber_freshVar_11));
      }}}if (tom_is_fun_sym_iltrue(tomMatch268NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch268NameNumber_freshVar_12=tom_get_slot_iltrue_Subst(tomMatch268NameNumberfreshSubject_1);if ( true ) {

        return tom_make_iltrue(reduceSubstitutionWithMappingRules(tomMatch268NameNumber_freshVar_12));
      }}}if (tom_is_fun_sym_ilfalse(tomMatch268NameNumberfreshSubject_1)) {if ( true ) {

        return ex;
      }}if (tom_is_fun_sym_iland(tomMatch268NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch268NameNumber_freshVar_13=tom_get_slot_iland_Left(tomMatch268NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tomMatch268NameNumber_freshVar_14=tom_get_slot_iland_Right(tomMatch268NameNumberfreshSubject_1);if ( true ) {

        return tom_make_iland(reduceWithMappingRules(tomMatch268NameNumber_freshVar_13),reduceWithMappingRules(tomMatch268NameNumber_freshVar_14));
      }}}}if (tom_is_fun_sym_ilor(tomMatch268NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch268NameNumber_freshVar_15=tom_get_slot_ilor_Left(tomMatch268NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tomMatch268NameNumber_freshVar_16=tom_get_slot_ilor_Right(tomMatch268NameNumberfreshSubject_1);if ( true ) {

        return tom_make_ilor(reduceWithMappingRules(tomMatch268NameNumber_freshVar_15),reduceWithMappingRules(tomMatch268NameNumber_freshVar_16));
      }}}}}}

    System.out.println("reduceWithMappingRules : nothing applies to:" + ex);
    return ex;
  }

  protected Term reduceTermWithMappingRules(Term trm) {
    if (tom_is_sort_Term(trm)) {{  tom.engine.adt.il.types.Term  tomMatch269NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if (tom_is_fun_sym_tau(tomMatch269NameNumberfreshSubject_1)) {if ( true ) {

        return trm;
      }}if (tom_is_fun_sym_subterm(tomMatch269NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Symbol  tomMatch269NameNumber_freshVar_1=tom_get_slot_subterm_Symbol(tomMatch269NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch269NameNumber_freshVar_2=tom_get_slot_subterm_T(tomMatch269NameNumberfreshSubject_1);{  int  tomMatch269NameNumber_freshVar_3=tom_get_slot_subterm_Index(tomMatch269NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch269NameNumber_freshVar_0=tomMatch269NameNumber_freshVar_2;if (tom_is_fun_sym_subterm(tomMatch269NameNumber_freshVar_0)) {if ( true ) {

        return reduceTermWithMappingRules(tom_make_subterm(tomMatch269NameNumber_freshVar_1,reduceTermWithMappingRules(tomMatch269NameNumber_freshVar_0),tomMatch269NameNumber_freshVar_3));
      }}}}}}}if (tom_is_fun_sym_slot(tomMatch269NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Symbol  tomMatch269NameNumber_freshVar_5=tom_get_slot_slot_Symbol(tomMatch269NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch269NameNumber_freshVar_6=tom_get_slot_slot_T(tomMatch269NameNumberfreshSubject_1);{  String  tomMatch269NameNumber_freshVar_7=tom_get_slot_slot_Name(tomMatch269NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch269NameNumber_freshVar_4=tomMatch269NameNumber_freshVar_6;if (tom_is_fun_sym_slot(tomMatch269NameNumber_freshVar_4)) {if ( true ) {

        return reduceTermWithMappingRules(tom_make_slot(tomMatch269NameNumber_freshVar_5,reduceTermWithMappingRules(tomMatch269NameNumber_freshVar_4),tomMatch269NameNumber_freshVar_7));
      }}}}}}}if (tom_is_fun_sym_subterm(tomMatch269NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Symbol  tomMatch269NameNumber_freshVar_8=tom_get_slot_subterm_Symbol(tomMatch269NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch269NameNumber_freshVar_9=tom_get_slot_subterm_T(tomMatch269NameNumberfreshSubject_1);{  int  tomMatch269NameNumber_freshVar_10=tom_get_slot_subterm_Index(tomMatch269NameNumberfreshSubject_1);if (tom_is_fun_sym_tau(tomMatch269NameNumber_freshVar_9)) {{  tom.engine.adt.il.types.AbsTerm  tomMatch269NameNumber_freshVar_11=tom_get_slot_tau_Abst(tomMatch269NameNumber_freshVar_9);if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term = tom_make_st(tomMatch269NameNumber_freshVar_8,tomMatch269NameNumber_freshVar_11,tomMatch269NameNumber_freshVar_10);
        return tom_make_tau(term);
      }}}}}}}if (tom_is_fun_sym_slot(tomMatch269NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Symbol  tomMatch269NameNumber_freshVar_12=tom_get_slot_slot_Symbol(tomMatch269NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch269NameNumber_freshVar_13=tom_get_slot_slot_T(tomMatch269NameNumberfreshSubject_1);{  String  tomMatch269NameNumber_freshVar_14=tom_get_slot_slot_Name(tomMatch269NameNumberfreshSubject_1);if (tom_is_fun_sym_tau(tomMatch269NameNumber_freshVar_13)) {{  tom.engine.adt.il.types.AbsTerm  tomMatch269NameNumber_freshVar_15=tom_get_slot_tau_Abst(tomMatch269NameNumber_freshVar_13);if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term = tom_make_sl(tomMatch269NameNumber_freshVar_12,tomMatch269NameNumber_freshVar_15,tomMatch269NameNumber_freshVar_14);
        return tom_make_tau(term);
      }}}}}}}}}

    System.out.println("reduceTermWithMappingRules : nothing applies to:" + trm);
    return trm;
  }

  protected TermList applyMappingRules(Term trm) {
    if (tom_is_sort_Term(trm)) {{  tom.engine.adt.il.types.Term  tomMatch270NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if (tom_is_fun_sym_tau(tomMatch270NameNumberfreshSubject_1)) {if ( true ) {

        return tom_cons_list_concTerm(trm,tom_empty_list_concTerm());
      }}if (tom_is_fun_sym_subterm(tomMatch270NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Symbol  tomMatch270NameNumber_freshVar_1=tom_get_slot_subterm_Symbol(tomMatch270NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch270NameNumber_freshVar_2=tom_get_slot_subterm_T(tomMatch270NameNumberfreshSubject_1);{  int  tomMatch270NameNumber_freshVar_3=tom_get_slot_subterm_Index(tomMatch270NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Symbol  tom_s=tomMatch270NameNumber_freshVar_1;{  tom.engine.adt.il.types.Term  tomMatch270NameNumber_freshVar_0=tomMatch270NameNumber_freshVar_2;{  int  tom_index=tomMatch270NameNumber_freshVar_3;if (tom_is_fun_sym_subterm(tomMatch270NameNumber_freshVar_0)) {if ( true ) {

        // first reduce the argument
        TermList reduced = applyMappingRules(tomMatch270NameNumber_freshVar_0);
        TermList res = tom_cons_list_concTerm(trm,tom_empty_list_concTerm());
        while(!reduced.isEmptyconcTerm()) {
          Term head = reduced.getHeadconcTerm();
          if (head.istau()) {
            TermList hl = applyMappingRules(head);
            while(!hl.isEmptyconcTerm()) {
              Term h = hl.getHeadconcTerm();
              res = tom_append_list_concTerm(res,tom_cons_list_concTerm(tom_make_subterm(tom_s,h,tom_index),tom_empty_list_concTerm()));
              hl = hl.getTailconcTerm();
            }
          } else {
            res = tom_append_list_concTerm(res,tom_cons_list_concTerm(tom_make_subterm(tom_s,head,tom_index),tom_empty_list_concTerm()));
          }
          reduced = reduced.getTailconcTerm();
        }
        return tom_append_list_concTerm(res,tom_empty_list_concTerm());
      }}}}}}}}}if (tom_is_fun_sym_slot(tomMatch270NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Symbol  tomMatch270NameNumber_freshVar_5=tom_get_slot_slot_Symbol(tomMatch270NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch270NameNumber_freshVar_6=tom_get_slot_slot_T(tomMatch270NameNumberfreshSubject_1);{  String  tomMatch270NameNumber_freshVar_7=tom_get_slot_slot_Name(tomMatch270NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Symbol  tom_s=tomMatch270NameNumber_freshVar_5;{  tom.engine.adt.il.types.Term  tomMatch270NameNumber_freshVar_4=tomMatch270NameNumber_freshVar_6;{  String  tom_slotName=tomMatch270NameNumber_freshVar_7;if (tom_is_fun_sym_slot(tomMatch270NameNumber_freshVar_4)) {if ( true ) {

        // first reduce the argument
        TermList reduced = applyMappingRules(tomMatch270NameNumber_freshVar_4);
        TermList res = tom_cons_list_concTerm(trm,tom_empty_list_concTerm());
        while(!reduced.isEmptyconcTerm()) {
          Term head = reduced.getHeadconcTerm();
          if (head.istau()) {
            TermList hl = applyMappingRules(head);
            while(!hl.isEmptyconcTerm()) {
              Term h = hl.getHeadconcTerm();
              res = tom_append_list_concTerm(res,tom_cons_list_concTerm(tom_make_slot(tom_s,h,tom_slotName),tom_empty_list_concTerm()));
              hl = hl.getTailconcTerm();
            }
          } else {
            res = tom_append_list_concTerm(res,tom_cons_list_concTerm(tom_make_slot(tom_s,head,tom_slotName),tom_empty_list_concTerm()));
          }
          reduced = reduced.getTailconcTerm();
        }
        return tom_append_list_concTerm(res,tom_empty_list_concTerm());
      }}}}}}}}}if (tom_is_fun_sym_subterm(tomMatch270NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Symbol  tomMatch270NameNumber_freshVar_8=tom_get_slot_subterm_Symbol(tomMatch270NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch270NameNumber_freshVar_9=tom_get_slot_subterm_T(tomMatch270NameNumberfreshSubject_1);{  int  tomMatch270NameNumber_freshVar_10=tom_get_slot_subterm_Index(tomMatch270NameNumberfreshSubject_1);if (tom_is_fun_sym_tau(tomMatch270NameNumber_freshVar_9)) {{  tom.engine.adt.il.types.AbsTerm  tomMatch270NameNumber_freshVar_11=tom_get_slot_tau_Abst(tomMatch270NameNumber_freshVar_9);if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term = tom_make_st(tomMatch270NameNumber_freshVar_8,tomMatch270NameNumber_freshVar_11,tomMatch270NameNumber_freshVar_10);
        return tom_cons_list_concTerm(trm,tom_cons_list_concTerm(tom_make_tau(term),tom_empty_list_concTerm()));
      }}}}}}}if (tom_is_fun_sym_slot(tomMatch270NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Symbol  tomMatch270NameNumber_freshVar_12=tom_get_slot_slot_Symbol(tomMatch270NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch270NameNumber_freshVar_13=tom_get_slot_slot_T(tomMatch270NameNumberfreshSubject_1);{  String  tomMatch270NameNumber_freshVar_14=tom_get_slot_slot_Name(tomMatch270NameNumberfreshSubject_1);if (tom_is_fun_sym_tau(tomMatch270NameNumber_freshVar_13)) {{  tom.engine.adt.il.types.AbsTerm  tomMatch270NameNumber_freshVar_15=tom_get_slot_tau_Abst(tomMatch270NameNumber_freshVar_13);if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term = tom_make_sl(tomMatch270NameNumber_freshVar_12,tomMatch270NameNumber_freshVar_15,tomMatch270NameNumber_freshVar_14);
        return tom_cons_list_concTerm(trm,tom_cons_list_concTerm(tom_make_tau(term),tom_empty_list_concTerm()));
      }}}}}}}}}

    System.out.println("apply TermRules : nothing applies to:" + trm);
    return tom_cons_list_concTerm(trm,tom_empty_list_concTerm());
  }

  protected ExprList applyExprRules(Expr ex) {
    if (tom_is_sort_Expr(ex)) {{  tom.engine.adt.il.types.Expr  tomMatch272NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if (tom_is_fun_sym_eq(tomMatch272NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Term  tomMatch272NameNumber_freshVar_0=tom_get_slot_eq_Lt(tomMatch272NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch272NameNumber_freshVar_1=tom_get_slot_eq_Rt(tomMatch272NameNumberfreshSubject_1);if (tom_is_fun_sym_tau(tomMatch272NameNumber_freshVar_0)) {{  tom.engine.adt.il.types.AbsTerm  tomMatch272NameNumber_freshVar_2=tom_get_slot_tau_Abst(tomMatch272NameNumber_freshVar_0);if (tom_is_fun_sym_tau(tomMatch272NameNumber_freshVar_1)) {{  tom.engine.adt.il.types.AbsTerm  tomMatch272NameNumber_freshVar_3=tom_get_slot_tau_Abst(tomMatch272NameNumber_freshVar_1);if ( true ) {

        return tom_cons_list_concExpr(ex,tom_cons_list_concExpr(tom_make_teq(tomMatch272NameNumber_freshVar_2,tomMatch272NameNumber_freshVar_3),tom_empty_list_concExpr()));
      }}}}}}}}if (tom_is_fun_sym_isfsym(tomMatch272NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Term  tomMatch272NameNumber_freshVar_4=tom_get_slot_isfsym_T(tomMatch272NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Symbol  tomMatch272NameNumber_freshVar_5=tom_get_slot_isfsym_Symbol(tomMatch272NameNumberfreshSubject_1);if (tom_is_fun_sym_tau(tomMatch272NameNumber_freshVar_4)) {{  tom.engine.adt.il.types.AbsTerm  tomMatch272NameNumber_freshVar_6=tom_get_slot_tau_Abst(tomMatch272NameNumber_freshVar_4);if ( true ) {

        return tom_cons_list_concExpr(ex,tom_cons_list_concExpr(tom_make_tisfsym(tomMatch272NameNumber_freshVar_6,tomMatch272NameNumber_freshVar_5),tom_empty_list_concExpr()));
      }}}}}}if (tom_is_fun_sym_eq(tomMatch272NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Term  tomMatch272NameNumber_freshVar_7=tom_get_slot_eq_Lt(tomMatch272NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch272NameNumber_freshVar_8=tom_get_slot_eq_Rt(tomMatch272NameNumberfreshSubject_1);if ( true ) {

        // first reduce the argument
        Term reducedl = reverseTermList((TermList)applyMappingRules(tomMatch272NameNumber_freshVar_7)).getHeadconcTerm();
        Term reducedr = reverseTermList((TermList)applyMappingRules(tomMatch272NameNumber_freshVar_8)).getHeadconcTerm();

        ExprList taill = applyExprRules(tom_make_eq(reducedl,reducedr));
        ExprList res = tom_cons_list_concExpr(ex,tom_append_list_concExpr(taill,tom_empty_list_concExpr()));
      }}}}if (tom_is_fun_sym_isfsym(tomMatch272NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Term  tomMatch272NameNumber_freshVar_9=tom_get_slot_isfsym_T(tomMatch272NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Symbol  tomMatch272NameNumber_freshVar_10=tom_get_slot_isfsym_Symbol(tomMatch272NameNumberfreshSubject_1);if ( true ) {

        // first reduce the argument
        TermList reduced = applyMappingRules(tomMatch272NameNumber_freshVar_9);
        ExprList res = tom_cons_list_concExpr(ex,tom_empty_list_concExpr());
        while(!reduced.isEmptyconcTerm()) {
          Term head = reduced.getHeadconcTerm();
          res = tom_append_list_concExpr(res,tom_cons_list_concExpr(tom_make_isfsym(head,tomMatch272NameNumber_freshVar_10),tom_empty_list_concExpr()));
          reduced = reduced.getTailconcTerm();
        }
        if (tom_is_sort_ExprList(res)) {{  tom.engine.adt.il.types.ExprList  tomMatch271NameNumberfreshSubject_1=(( tom.engine.adt.il.types.ExprList )res);if (tom_is_fun_sym_concExpr(tomMatch271NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.ExprList  tomMatch271NameNumber_freshVar_0=tomMatch271NameNumberfreshSubject_1;{  tom.engine.adt.il.types.ExprList  tomMatch271NameNumber_begin_2=tomMatch271NameNumber_freshVar_0;{  tom.engine.adt.il.types.ExprList  tomMatch271NameNumber_end_3=tomMatch271NameNumber_freshVar_0;do {{{  tom.engine.adt.il.types.ExprList  tomMatch271NameNumber_freshVar_1=tomMatch271NameNumber_end_3;if (!(tom_is_empty_concExpr_ExprList(tomMatch271NameNumber_freshVar_1))) {{  tom.engine.adt.il.types.ExprList  tomMatch271NameNumber_freshVar_4=tom_get_tail_concExpr_ExprList(tomMatch271NameNumber_freshVar_1);if (tom_is_empty_concExpr_ExprList(tomMatch271NameNumber_freshVar_4)) {if ( true ) {

            ExprList taill = applyExprRules(tom_get_head_concExpr_ExprList(tomMatch271NameNumber_freshVar_1));
            return tom_get_slice_concExpr(tomMatch271NameNumber_begin_2,tomMatch271NameNumber_end_3,tom_append_list_concExpr(tom_empty_list_concExpr(),tom_append_list_concExpr(taill,tom_empty_list_concExpr())));
          }}}}}if (tom_is_empty_concExpr_ExprList(tomMatch271NameNumber_end_3)) {tomMatch271NameNumber_end_3=tomMatch271NameNumber_begin_2;} else {tomMatch271NameNumber_end_3=tom_get_tail_concExpr_ExprList(tomMatch271NameNumber_end_3);}}} while(!(tom_equal_term_ExprList(tomMatch271NameNumber_end_3, tomMatch271NameNumber_begin_2)));}}}}}}

      }}}}if (tom_is_fun_sym_ilnot(tomMatch272NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch272NameNumber_freshVar_11=tom_get_slot_ilnot_Exp(tomMatch272NameNumberfreshSubject_1);if ( true ) {

        ExprList exprList = applyExprRules(tomMatch272NameNumber_freshVar_11);
        ExprList newExprList = tom_cons_list_concExpr(ex,tom_empty_list_concExpr());
        while(!exprList.isEmptyconcExpr()) {
          Expr localExpr = exprList.getHeadconcExpr();
          exprList = exprList.getTailconcExpr();
          newExprList = tom_append_list_concExpr(newExprList,tom_cons_list_concExpr(tom_make_ilnot(localExpr),tom_empty_list_concExpr()));
        }
        return newExprList;
      }}}{ boolean tomMatch272NameNumber_freshVar_12= false ;if (tom_is_fun_sym_iltrue(tomMatch272NameNumberfreshSubject_1)) {tomMatch272NameNumber_freshVar_12= true ;} else {if (tom_is_fun_sym_ilfalse(tomMatch272NameNumberfreshSubject_1)) {tomMatch272NameNumber_freshVar_12= true ;}}if ((tomMatch272NameNumber_freshVar_12 ==  true )) {if ( true ) {

        return tom_cons_list_concExpr(ex,tom_empty_list_concExpr());
      }}}}}

    System.out.println("apply ExprRules : nothing applies to:" + ex);
    return tom_cons_list_concExpr(ex,tom_empty_list_concExpr());
  }

  protected Expr buildConstraint(SubstitutionList substitution, Instr pil,Instr goal) {
    if (tom_is_sort_Instr(pil)) {{  tom.engine.adt.il.types.Instr  tomMatch273NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Instr )pil);if (tom_is_fun_sym_sequence(tomMatch273NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.InstrList  tomMatch273NameNumber_freshVar_0=tom_get_slot_sequence_Instrlist(tomMatch273NameNumberfreshSubject_1);if (tom_is_fun_sym_semicolon(tomMatch273NameNumber_freshVar_0)) {{  tom.engine.adt.il.types.InstrList  tomMatch273NameNumber_freshVar_1=tomMatch273NameNumber_freshVar_0;if (!(tom_is_empty_semicolon_InstrList(tomMatch273NameNumber_freshVar_1))) {{  tom.engine.adt.il.types.Instr  tom_h=tom_get_head_semicolon_InstrList(tomMatch273NameNumber_freshVar_1);{  tom.engine.adt.il.types.InstrList  tomMatch273NameNumber_freshVar_2=tom_get_tail_semicolon_InstrList(tomMatch273NameNumber_freshVar_1);{  tom.engine.adt.il.types.InstrList  tom_t=tomMatch273NameNumber_freshVar_2;if ( true ) {

        Expr goalFromHead = buildConstraint(substitution,tom_h,goal);
        if (!tom_t.isEmptysemicolon()) {
          Expr refuseFromHead = buildConstraint(substitution,tom_h,tom_make_refuse());
          Expr goalFromTail = buildConstraint(substitution,tom_make_sequence(tom_t),goal);
          if(this.isCamlSemantics()) {
            return tom_make_ilor(goalFromHead,tom_make_iland(refuseFromHead,goalFromTail));
          } else {
            return tom_make_ilor(goalFromHead,goalFromTail);
          }
        } else {
          return goalFromHead;
        }
      }}}}}}}}}if (tom_is_fun_sym_ILLet(tomMatch273NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Variable  tomMatch273NameNumber_freshVar_25=tom_get_slot_ILLet_Var(tomMatch273NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch273NameNumber_freshVar_26=tom_get_slot_ILLet_T(tomMatch273NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Instr  tomMatch273NameNumber_freshVar_27=tom_get_slot_ILLet_Body(tomMatch273NameNumberfreshSubject_1);if ( true ) {

        // update the substitution
        Term t = replaceVariablesInTerm(tom_make_appSubsT(substitution,tomMatch273NameNumber_freshVar_26));
        substitution = tom_append_list_subs(substitution,tom_cons_list_subs(tom_make_is(tomMatch273NameNumber_freshVar_25,t),tom_empty_list_subs()));
        //return `iland(eq(tau(absvar(x)),u),buildConstraint(substitution,i,goal));
        return buildConstraint(substitution,tomMatch273NameNumber_freshVar_27,goal);
      }}}}}if (tom_is_fun_sym_ITE(tomMatch273NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch273NameNumber_freshVar_28=tom_get_slot_ITE_E(tomMatch273NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Instr  tomMatch273NameNumber_freshVar_29=tom_get_slot_ITE_Ift(tomMatch273NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Instr  tomMatch273NameNumber_freshVar_30=tom_get_slot_ITE_Iff(tomMatch273NameNumberfreshSubject_1);if ( true ) {

        Expr closedExpr = replaceVariablesInExpr(tom_make_appSubsE(substitution,tomMatch273NameNumber_freshVar_28));
        Expr constraintTrue  = tom_make_iland(closedExpr,buildConstraint(substitution,tomMatch273NameNumber_freshVar_29,goal));
        Expr constraintFalse = tom_make_iland(tom_make_ilnot(closedExpr),buildConstraint(substitution,tomMatch273NameNumber_freshVar_30,goal));
        return tom_make_ilor(constraintTrue,constraintFalse);
      }}}}}if (tom_is_fun_sym_refuse(tomMatch273NameNumberfreshSubject_1)) {if ( true ) {

        if (pil == goal) {
          return tom_make_iltrue(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()));
        } else {
          return tom_make_ilfalse();
        }
      }}if (tom_is_fun_sym_accept(tomMatch273NameNumberfreshSubject_1)) {if ( true ) {

        if (pil == goal) {
          return tom_make_iltrue(substitution);
        } else {
          return tom_make_ilfalse();
        }
      }}}}

    // default case, should not happen
    return tom_make_ilfalse();
  }

  protected Collection applySemanticsRules(Deriv post) {
    Collection c = new HashSet();
    if (tom_is_sort_Deriv(post)) {{  tom.engine.adt.il.types.Deriv  tomMatch275NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Deriv )post);if (tom_is_fun_sym_ebs(tomMatch275NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Environment  tomMatch275NameNumber_freshVar_0=tom_get_slot_ebs_Lhs(tomMatch275NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Environment  tomMatch275NameNumber_freshVar_1=tom_get_slot_ebs_Rhs(tomMatch275NameNumberfreshSubject_1);if (tom_is_fun_sym_env(tomMatch275NameNumber_freshVar_0)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_2=tom_get_slot_env_Subs(tomMatch275NameNumber_freshVar_0);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_3=tom_get_slot_env_I(tomMatch275NameNumber_freshVar_0);{  tom.engine.adt.il.types.SubstitutionList  tom_e=tomMatch275NameNumber_freshVar_2;if (tom_is_fun_sym_sequence(tomMatch275NameNumber_freshVar_3)) {{  tom.engine.adt.il.types.InstrList  tomMatch275NameNumber_freshVar_4=tom_get_slot_sequence_Instrlist(tomMatch275NameNumber_freshVar_3);if (tom_is_fun_sym_semicolon(tomMatch275NameNumber_freshVar_4)) {{  tom.engine.adt.il.types.InstrList  tomMatch275NameNumber_freshVar_7=tomMatch275NameNumber_freshVar_4;if (!(tom_is_empty_semicolon_InstrList(tomMatch275NameNumber_freshVar_7))) {{  tom.engine.adt.il.types.Instr  tom_h=tom_get_head_semicolon_InstrList(tomMatch275NameNumber_freshVar_7);{  tom.engine.adt.il.types.InstrList  tomMatch275NameNumber_freshVar_8=tom_get_tail_semicolon_InstrList(tomMatch275NameNumber_freshVar_7);if (tom_is_fun_sym_env(tomMatch275NameNumber_freshVar_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_5=tom_get_slot_env_Subs(tomMatch275NameNumber_freshVar_1);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_6=tom_get_slot_env_I(tomMatch275NameNumber_freshVar_1);if (tom_is_fun_sym_subs(tomMatch275NameNumber_freshVar_5)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_15=tomMatch275NameNumber_freshVar_5;if (!(tom_is_empty_subs_SubstitutionList(tomMatch275NameNumber_freshVar_15))) {if (tom_is_fun_sym_undefsubs(tom_get_head_subs_SubstitutionList(tomMatch275NameNumber_freshVar_15))) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_16=tom_get_tail_subs_SubstitutionList(tomMatch275NameNumber_freshVar_15);if (tom_is_empty_subs_SubstitutionList(tomMatch275NameNumber_freshVar_16)) {{  tom.engine.adt.il.types.Instr  tom_ip=tomMatch275NameNumber_freshVar_6;if ( true ) {

        if(instructionContains(tom_h,tom_ip)) {
          // ends the derivation
          Deriv up = tom_make_ebs(tom_make_env(tom_e,tom_h),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tom_ip));
          Collection pre_list = applySemanticsRules(up);

          Iterator it = pre_list.iterator();
          while(it.hasNext()) {
            DerivTree pre = (DerivTree) it.next();
            c.add(tom_make_derivrule("seqa",post,pre,tom_make_seq()));
          }
        } else {
          // continue the derivation with t
          Deriv up = tom_make_ebs(tom_make_env(tom_e,tom_make_sequence(tomMatch275NameNumber_freshVar_8)),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tom_ip));
          Collection post_list = applySemanticsRules(up);

          if(this.isCamlSemantics()) {
            up = tom_make_ebs(tom_make_env(tom_e,tom_h),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tom_make_refuse()));
            Collection pre_list = applySemanticsRules(up);
            Iterator it = pre_list.iterator();
            while(it.hasNext()) {
              DerivTree pre = (DerivTree) it.next();
              Iterator it2 = post_list.iterator();
              while(it2.hasNext()) {
                DerivTree pre2 = (DerivTree) it2.next();
                c.add(tom_make_derivrule2("seqb",post,pre,pre2,tom_make_seq()));
              }
            }
          } else {
            Iterator it = post_list.iterator();
            while(it.hasNext()) {
              DerivTree pre = (DerivTree) it.next();
              c.add(tom_make_derivrule2("seqb",post,tom_make_endderiv(),pre,tom_make_seq()));
            }
          }
        }
      }}}}}}}}}}}}}}}}}}}}}}}}}if (tom_is_fun_sym_ebs(tomMatch275NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Environment  tomMatch275NameNumber_freshVar_72=tom_get_slot_ebs_Lhs(tomMatch275NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Environment  tomMatch275NameNumber_freshVar_73=tom_get_slot_ebs_Rhs(tomMatch275NameNumberfreshSubject_1);if (tom_is_fun_sym_env(tomMatch275NameNumber_freshVar_72)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_74=tom_get_slot_env_Subs(tomMatch275NameNumber_freshVar_72);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_75=tom_get_slot_env_I(tomMatch275NameNumber_freshVar_72);{  tom.engine.adt.il.types.SubstitutionList  tom_e=tomMatch275NameNumber_freshVar_74;if (tom_is_fun_sym_ILLet(tomMatch275NameNumber_freshVar_75)) {{  tom.engine.adt.il.types.Variable  tomMatch275NameNumber_freshVar_76=tom_get_slot_ILLet_Var(tomMatch275NameNumber_freshVar_75);{  tom.engine.adt.il.types.Term  tomMatch275NameNumber_freshVar_77=tom_get_slot_ILLet_T(tomMatch275NameNumber_freshVar_75);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_78=tom_get_slot_ILLet_Body(tomMatch275NameNumber_freshVar_75);if (tom_is_fun_sym_env(tomMatch275NameNumber_freshVar_73)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_79=tom_get_slot_env_Subs(tomMatch275NameNumber_freshVar_73);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_80=tom_get_slot_env_I(tomMatch275NameNumber_freshVar_73);if (tom_is_fun_sym_subs(tomMatch275NameNumber_freshVar_79)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_81=tomMatch275NameNumber_freshVar_79;if (!(tom_is_empty_subs_SubstitutionList(tomMatch275NameNumber_freshVar_81))) {if (tom_is_fun_sym_undefsubs(tom_get_head_subs_SubstitutionList(tomMatch275NameNumber_freshVar_81))) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_82=tom_get_tail_subs_SubstitutionList(tomMatch275NameNumber_freshVar_81);if (tom_is_empty_subs_SubstitutionList(tomMatch275NameNumber_freshVar_82)) {if ( true ) {


        // build condition
        Seq cond = seqFromTerm(tom_make_appSubsT(tom_e,tomMatch275NameNumber_freshVar_77));
        // find "t"
        Term t = null;
        if (tom_is_sort_Seq(cond)) {{  tom.engine.adt.il.types.Seq  tomMatch274NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Seq )cond);if (tom_is_fun_sym_dedterm(tomMatch274NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.TermList  tomMatch274NameNumber_freshVar_0=tom_get_slot_dedterm_Terms(tomMatch274NameNumberfreshSubject_1);if (tom_is_fun_sym_concTerm(tomMatch274NameNumber_freshVar_0)) {{  tom.engine.adt.il.types.TermList  tomMatch274NameNumber_freshVar_1=tomMatch274NameNumber_freshVar_0;{  tom.engine.adt.il.types.TermList  tomMatch274NameNumber_begin_3=tomMatch274NameNumber_freshVar_1;{  tom.engine.adt.il.types.TermList  tomMatch274NameNumber_end_4=tomMatch274NameNumber_freshVar_1;do {{{  tom.engine.adt.il.types.TermList  tomMatch274NameNumber_freshVar_2=tomMatch274NameNumber_end_4;if (!(tom_is_empty_concTerm_TermList(tomMatch274NameNumber_freshVar_2))) {{  tom.engine.adt.il.types.TermList  tomMatch274NameNumber_freshVar_5=tom_get_tail_concTerm_TermList(tomMatch274NameNumber_freshVar_2);if (tom_is_empty_concTerm_TermList(tomMatch274NameNumber_freshVar_5)) {if ( true ) {
 t = tom_get_head_concTerm_TermList(tomMatch274NameNumber_freshVar_2); }}}}}if (tom_is_empty_concTerm_TermList(tomMatch274NameNumber_end_4)) {tomMatch274NameNumber_end_4=tomMatch274NameNumber_begin_3;} else {tomMatch274NameNumber_end_4=tom_get_tail_concTerm_TermList(tomMatch274NameNumber_end_4);}}} while(!(tom_equal_term_TermList(tomMatch274NameNumber_end_4, tomMatch274NameNumber_begin_3)));}}}}}}if ( true ) {
 if (t == null) {
              System.out.println("seqFromTerm has a problem with " + cond);
            }
          }}}

        Deriv up = tom_make_ebs(tom_make_env(tom_append_list_subs(tom_e,tom_cons_list_subs(tom_make_is(tomMatch275NameNumber_freshVar_76,t),tom_empty_list_subs())),tomMatch275NameNumber_freshVar_78),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tomMatch275NameNumber_freshVar_80)
            )


;
        Collection pre_list = applySemanticsRules(up);
        Iterator it = pre_list.iterator();
        while(it.hasNext()) {
          DerivTree pre = (DerivTree) it.next();
          c.add(tom_make_derivrule("let",post,pre,cond));
        }
      }}}}}}}}}}}}}}}}}}}}}if (tom_is_fun_sym_ebs(tomMatch275NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Environment  tomMatch275NameNumber_freshVar_83=tom_get_slot_ebs_Lhs(tomMatch275NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Environment  tomMatch275NameNumber_freshVar_84=tom_get_slot_ebs_Rhs(tomMatch275NameNumberfreshSubject_1);if (tom_is_fun_sym_env(tomMatch275NameNumber_freshVar_83)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_85=tom_get_slot_env_Subs(tomMatch275NameNumber_freshVar_83);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_86=tom_get_slot_env_I(tomMatch275NameNumber_freshVar_83);{  tom.engine.adt.il.types.SubstitutionList  tom_e=tomMatch275NameNumber_freshVar_85;if (tom_is_fun_sym_ITE(tomMatch275NameNumber_freshVar_86)) {{  tom.engine.adt.il.types.Expr  tomMatch275NameNumber_freshVar_87=tom_get_slot_ITE_E(tomMatch275NameNumber_freshVar_86);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_88=tom_get_slot_ITE_Ift(tomMatch275NameNumber_freshVar_86);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_89=tom_get_slot_ITE_Iff(tomMatch275NameNumber_freshVar_86);if (tom_is_fun_sym_env(tomMatch275NameNumber_freshVar_84)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_90=tom_get_slot_env_Subs(tomMatch275NameNumber_freshVar_84);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_91=tom_get_slot_env_I(tomMatch275NameNumber_freshVar_84);if (tom_is_fun_sym_subs(tomMatch275NameNumber_freshVar_90)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_92=tomMatch275NameNumber_freshVar_90;if (!(tom_is_empty_subs_SubstitutionList(tomMatch275NameNumber_freshVar_92))) {if (tom_is_fun_sym_undefsubs(tom_get_head_subs_SubstitutionList(tomMatch275NameNumber_freshVar_92))) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_93=tom_get_tail_subs_SubstitutionList(tomMatch275NameNumber_freshVar_92);if (tom_is_empty_subs_SubstitutionList(tomMatch275NameNumber_freshVar_93)) {{  tom.engine.adt.il.types.Instr  tom_ip=tomMatch275NameNumber_freshVar_91;if ( true ) {


        // build condition
        ExprList cond = exprListFromExpr(tom_make_appSubsE(tom_e,tomMatch275NameNumber_freshVar_87));

        Deriv up = tom_make_ebs(tom_make_env(tom_e,tomMatch275NameNumber_freshVar_88),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tom_ip));
        String rulename = "iftrue";

        Collection pre_list = applySemanticsRules(up);
        Iterator it = pre_list.iterator();
        while(it.hasNext()) {
          DerivTree pre = (DerivTree) it.next();
          c.add(tom_make_derivrule(rulename,post,pre,tom_make_dedexpr(tom_append_list_concExpr(cond,tom_cons_list_concExpr(tom_make_iltrue(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs())),tom_empty_list_concExpr())))));
        }

        up = tom_make_ebs(tom_make_env(tom_e,tomMatch275NameNumber_freshVar_89),tom_make_env(tom_cons_list_subs(tom_make_undefsubs(),tom_empty_list_subs()),tom_ip));
        rulename = "iffalse";

        pre_list = applySemanticsRules(up);
        it = pre_list.iterator();
        while(it.hasNext()) {
          DerivTree pre = (DerivTree) it.next();
          c.add(tom_make_derivrule(rulename,post,pre,tom_make_dedexpr(tom_append_list_concExpr(cond,tom_cons_list_concExpr(tom_make_ilfalse(),tom_empty_list_concExpr())))));
        }
      }}}}}}}}}}}}}}}}}}}}}}if (tom_is_fun_sym_ebs(tomMatch275NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Environment  tomMatch275NameNumber_freshVar_94=tom_get_slot_ebs_Lhs(tomMatch275NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Environment  tomMatch275NameNumber_freshVar_95=tom_get_slot_ebs_Rhs(tomMatch275NameNumberfreshSubject_1);if (tom_is_fun_sym_env(tomMatch275NameNumber_freshVar_94)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_96=tom_get_slot_env_Subs(tomMatch275NameNumber_freshVar_94);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_97=tom_get_slot_env_I(tomMatch275NameNumber_freshVar_94);if (tom_is_fun_sym_accept(tomMatch275NameNumber_freshVar_97)) {if (tom_is_fun_sym_env(tomMatch275NameNumber_freshVar_95)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_98=tom_get_slot_env_Subs(tomMatch275NameNumber_freshVar_95);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_99=tom_get_slot_env_I(tomMatch275NameNumber_freshVar_95);if (tom_is_fun_sym_subs(tomMatch275NameNumber_freshVar_98)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_100=tomMatch275NameNumber_freshVar_98;if (!(tom_is_empty_subs_SubstitutionList(tomMatch275NameNumber_freshVar_100))) {if (tom_is_fun_sym_undefsubs(tom_get_head_subs_SubstitutionList(tomMatch275NameNumber_freshVar_100))) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_101=tom_get_tail_subs_SubstitutionList(tomMatch275NameNumber_freshVar_100);if (tom_is_empty_subs_SubstitutionList(tomMatch275NameNumber_freshVar_101)) {if (tom_is_fun_sym_accept(tomMatch275NameNumber_freshVar_99)) {if ( true ) {


        c.add(tom_make_derivrule("axiom_accept",post,tom_make_endderiv(),tom_make_seq()));
      }}}}}}}}}}}}}}}}}}if (tom_is_fun_sym_ebs(tomMatch275NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Environment  tomMatch275NameNumber_freshVar_102=tom_get_slot_ebs_Lhs(tomMatch275NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Environment  tomMatch275NameNumber_freshVar_103=tom_get_slot_ebs_Rhs(tomMatch275NameNumberfreshSubject_1);if (tom_is_fun_sym_env(tomMatch275NameNumber_freshVar_102)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_104=tom_get_slot_env_Subs(tomMatch275NameNumber_freshVar_102);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_105=tom_get_slot_env_I(tomMatch275NameNumber_freshVar_102);if (tom_is_fun_sym_refuse(tomMatch275NameNumber_freshVar_105)) {if (tom_is_fun_sym_env(tomMatch275NameNumber_freshVar_103)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_106=tom_get_slot_env_Subs(tomMatch275NameNumber_freshVar_103);{  tom.engine.adt.il.types.Instr  tomMatch275NameNumber_freshVar_107=tom_get_slot_env_I(tomMatch275NameNumber_freshVar_103);if (tom_is_fun_sym_subs(tomMatch275NameNumber_freshVar_106)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_108=tomMatch275NameNumber_freshVar_106;if (!(tom_is_empty_subs_SubstitutionList(tomMatch275NameNumber_freshVar_108))) {if (tom_is_fun_sym_undefsubs(tom_get_head_subs_SubstitutionList(tomMatch275NameNumber_freshVar_108))) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch275NameNumber_freshVar_109=tom_get_tail_subs_SubstitutionList(tomMatch275NameNumber_freshVar_108);if (tom_is_empty_subs_SubstitutionList(tomMatch275NameNumber_freshVar_109)) {if (tom_is_fun_sym_refuse(tomMatch275NameNumber_freshVar_107)) {if ( true ) {

        c.add(tom_make_derivrule("axiom_refuse",post,tom_make_endderiv(),tom_make_seq()));
      }}}}}}}}}}}}}}}}}}if ( true ) {

        if (c.isEmpty()) {
            //System.out.println("Error " + post);
        }
      }}}

    return c;
  }

  private static class stratInstructionContains extends  tom.engine.adt.il.IlBasicStrategy  {private  tom.engine.adt.il.types.Instr  goal; private  java.util.Collection  c; public stratInstructionContains( tom.engine.adt.il.types.Instr  goal,  java.util.Collection  c) { super(tom_make_Identity());this.goal=goal;this.c=c;}public  tom.engine.adt.il.types.Instr  getgoal() { return goal;}public  java.util.Collection  getc() { return c;}public jjtraveler.Visitable[] getChildren() {jjtraveler.Visitable[] stratChilds = new jjtraveler.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public jjtraveler.Visitable setChildren(jjtraveler.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public jjtraveler.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public jjtraveler.Visitable setChildAt(int index, jjtraveler.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.il.types.Instr  visit_Instr( tom.engine.adt.il.types.Instr  tom__arg) throws jjtraveler.VisitFailure {if (tom_is_sort_Instr(tom__arg)) {{  tom.engine.adt.il.types.Instr  tomMatch276NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Instr )tom__arg);{  tom.engine.adt.il.types.Instr  tom_x=tomMatch276NameNumberfreshSubject_1;if ( true ) {


        if (tom_x== goal) {
          c.add(goal);
          tom_make_Fail().visit(tom_x);
        }
      }}}}return super.visit_Instr(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_stratInstructionContains( tom.engine.adt.il.types.Instr  t0,  java.util.Collection  t1) { return new stratInstructionContains(t0,t1); }


  protected boolean instructionContains(Instr i, Instr goal) {
    Collection collect = new HashSet();
    try {
      tom_make_mu(tom_make_MuVar("x"),tom_make_Try(tom_cons_list_Sequence(tom_make_stratInstructionContains(goal,collect),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("x")),tom_empty_list_Sequence())))).visit(i);
    } catch(jjtraveler.VisitFailure e) {
      System.out.println("strategy instructionContains failed");
    }
    return !collect.isEmpty();
  }

/**
 * To replace undefsubst in tree by the computed value
 * which leads to axiom
 */
  private static class replaceUndefsubs extends  tom.engine.adt.il.IlBasicStrategy  {private  tom.engine.adt.il.types.SubstitutionList  arg; public replaceUndefsubs( tom.engine.adt.il.types.SubstitutionList  arg) { super(tom_make_Identity());this.arg=arg;}public  tom.engine.adt.il.types.SubstitutionList  getarg() { return arg;}public jjtraveler.Visitable[] getChildren() {jjtraveler.Visitable[] stratChilds = new jjtraveler.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public jjtraveler.Visitable setChildren(jjtraveler.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public jjtraveler.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public jjtraveler.Visitable setChildAt(int index, jjtraveler.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.il.types.SubstitutionList  visit_SubstitutionList( tom.engine.adt.il.types.SubstitutionList  tom__arg) throws jjtraveler.VisitFailure {if (tom_is_sort_SubstitutionList(tom__arg)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch277NameNumberfreshSubject_1=(( tom.engine.adt.il.types.SubstitutionList )tom__arg);if (tom_is_fun_sym_subs(tomMatch277NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch277NameNumber_freshVar_0=tomMatch277NameNumberfreshSubject_1;if (!(tom_is_empty_subs_SubstitutionList(tomMatch277NameNumber_freshVar_0))) {if (tom_is_fun_sym_undefsubs(tom_get_head_subs_SubstitutionList(tomMatch277NameNumber_freshVar_0))) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch277NameNumber_freshVar_1=tom_get_tail_subs_SubstitutionList(tomMatch277NameNumber_freshVar_0);if (tom_is_empty_subs_SubstitutionList(tomMatch277NameNumber_freshVar_1)) {if ( true ) {


        return arg;
      }}}}}}}}}return super.visit_SubstitutionList(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_replaceUndefsubs( tom.engine.adt.il.types.SubstitutionList  t0) { return new replaceUndefsubs(t0); }



  private DerivTree replaceUndefinedSubstitution(DerivTree subject,
                                      SubstitutionList subs) {
    try {
      subject = (DerivTree) tom_make_TopDown(tom_make_replaceUndefsubs(subs)).visit(subject);
    } catch (jjtraveler.VisitFailure e) {
      throw new TomRuntimeException("Strategy replaceUndefsubs failed");
    }
    return subject;
  }

  private static boolean tom_is_sort_SubstRef(Object t) { return 

 t instanceof SubstRef ;}

  static private class SubstRef {
    private SubstitutionList sublist;
    public SubstRef(SubstitutionList slist) {
      sublist = slist;
    }
    public void set(SubstitutionList ssublist) {
      this.sublist = ssublist;
    }
    public SubstitutionList get() {
      return sublist;
    }
  }

  /**
   * These functions deals with substitution application
   */
  private static class replaceVariableByTerm extends  tom.engine.adt.il.IlBasicStrategy  {private  java.util.Map  map; public replaceVariableByTerm( java.util.Map  map) { super(tom_make_Identity());this.map=map;}public  java.util.Map  getmap() { return map;}public jjtraveler.Visitable[] getChildren() {jjtraveler.Visitable[] stratChilds = new jjtraveler.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public jjtraveler.Visitable setChildren(jjtraveler.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public jjtraveler.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public jjtraveler.Visitable setChildAt(int index, jjtraveler.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.il.types.Term  visit_Term( tom.engine.adt.il.types.Term  tom__arg) throws jjtraveler.VisitFailure {if (tom_is_sort_Term(tom__arg)) {{  tom.engine.adt.il.types.Term  tomMatch278NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )tom__arg);{  tom.engine.adt.il.types.Term  tomMatch278NameNumber_freshVar_0=tomMatch278NameNumberfreshSubject_1;if (tom_is_fun_sym_tau(tomMatch278NameNumber_freshVar_0)) {{  tom.engine.adt.il.types.AbsTerm  tomMatch278NameNumber_freshVar_2=tom_get_slot_tau_Abst(tomMatch278NameNumber_freshVar_0);if (tom_is_fun_sym_absvar(tomMatch278NameNumber_freshVar_2)) {{  tom.engine.adt.il.types.Variable  tomMatch278NameNumber_freshVar_3=tom_get_slot_absvar_Varname(tomMatch278NameNumber_freshVar_2);{  tom.engine.adt.il.types.Variable  tomMatch278NameNumber_freshVar_1=tomMatch278NameNumber_freshVar_3;if (tom_is_fun_sym_var(tomMatch278NameNumber_freshVar_1)) {{  tom.engine.adt.il.types.Variable  tom_v=tomMatch278NameNumber_freshVar_1;if ( true ) {


        if (map.containsKey(tom_v)) {
          return (Term)map.get(tom_v);
        }
        return tomMatch278NameNumber_freshVar_0;
      }}}}}}}}}}}return super.visit_Term(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_replaceVariableByTerm( java.util.Map  t0) { return new replaceVariableByTerm(t0); }



  public Term replaceVariablesInTerm(Term subject) {
    if (tom_is_sort_Term(subject)) {{  tom.engine.adt.il.types.Term  tomMatch279NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )subject);if (tom_is_fun_sym_appSubsT(tomMatch279NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch279NameNumber_freshVar_0=tom_get_slot_appSubsT_Subs(tomMatch279NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tomMatch279NameNumber_freshVar_1=tom_get_slot_appSubsT_T(tomMatch279NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Term  tom_term=tomMatch279NameNumber_freshVar_1;if ( true ) {

        Map map = buildVariableMap(tomMatch279NameNumber_freshVar_0, new HashMap());
        Term t = tom_term;
        try {
          t = (Term) tom_make_TopDown(tom_make_replaceVariableByTerm(map)).visit(tom_term);
        } catch (jjtraveler.VisitFailure e) {
          throw new TomRuntimeException("Strategy replaceVariableByTerm failed");
        }
        return t;
      }}}}}}}

    return subject;
  }

  public Expr replaceVariablesInExpr(Expr subject) {
    if (tom_is_sort_Expr(subject)) {{  tom.engine.adt.il.types.Expr  tomMatch280NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )subject);if (tom_is_fun_sym_appSubsE(tomMatch280NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch280NameNumber_freshVar_0=tom_get_slot_appSubsE_Subs(tomMatch280NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tomMatch280NameNumber_freshVar_1=tom_get_slot_appSubsE_E(tomMatch280NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tom_term=tomMatch280NameNumber_freshVar_1;if ( true ) {

        Map map = buildVariableMap(tomMatch280NameNumber_freshVar_0, new HashMap());
        Expr t = tom_term;
        try {
          t = (Expr) tom_make_TopDown(tom_make_replaceVariableByTerm(map)).visit(tom_term);
        } catch (jjtraveler.VisitFailure e) {
          throw new TomRuntimeException("Strategy replaceVariableByTerm failed");
        }
        return t;
      }}}}}}}

    return subject;
  }

  private Map buildVariableMap(SubstitutionList sublist, Map map) {
    if (tom_is_sort_SubstitutionList(sublist)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch281NameNumberfreshSubject_1=(( tom.engine.adt.il.types.SubstitutionList )sublist);if (tom_is_fun_sym_subs(tomMatch281NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch281NameNumber_freshVar_0=tomMatch281NameNumberfreshSubject_1;if (tom_is_empty_subs_SubstitutionList(tomMatch281NameNumber_freshVar_0)) {if ( true ) {
 return map; }}}}if (tom_is_fun_sym_subs(tomMatch281NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch281NameNumber_freshVar_1=tomMatch281NameNumberfreshSubject_1;if (!(tom_is_empty_subs_SubstitutionList(tomMatch281NameNumber_freshVar_1))) {if (tom_is_fun_sym_undefsubs(tom_get_head_subs_SubstitutionList(tomMatch281NameNumber_freshVar_1))) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch281NameNumber_freshVar_2=tom_get_tail_subs_SubstitutionList(tomMatch281NameNumber_freshVar_1);if ( true ) {
 return buildVariableMap(tomMatch281NameNumber_freshVar_2,map);}}}}}}if (tom_is_fun_sym_subs(tomMatch281NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch281NameNumber_freshVar_24=tomMatch281NameNumberfreshSubject_1;if (!(tom_is_empty_subs_SubstitutionList(tomMatch281NameNumber_freshVar_24))) {if (tom_is_fun_sym_is(tom_get_head_subs_SubstitutionList(tomMatch281NameNumber_freshVar_24))) {{  tom.engine.adt.il.types.Variable  tomMatch281NameNumber_freshVar_37=tom_get_slot_is_Var(tom_get_head_subs_SubstitutionList(tomMatch281NameNumber_freshVar_24));{  tom.engine.adt.il.types.Term  tomMatch281NameNumber_freshVar_38=tom_get_slot_is_Term(tom_get_head_subs_SubstitutionList(tomMatch281NameNumber_freshVar_24));{  tom.engine.adt.il.types.SubstitutionList  tomMatch281NameNumber_freshVar_25=tom_get_tail_subs_SubstitutionList(tomMatch281NameNumber_freshVar_24);if ( true ) {

        map.put(tomMatch281NameNumber_freshVar_37,tomMatch281NameNumber_freshVar_38);
        return buildVariableMap(tomMatch281NameNumber_freshVar_25,map);
      }}}}}}}}}}

    return null;
  }

  public void mappingReduce(Map input) {
    Iterator it = input.keySet().iterator();
    while(it.hasNext()) {
      Object key = it.next();
      Expr value = (Expr) input.get(key);
      input.put(key,reduceWithMappingRules(value));
    }
  }

  public void booleanReduce(Map input) {
    Iterator it = input.keySet().iterator();
    while(it.hasNext()) {
      Object key = it.next();
      Expr value = (Expr) input.get(key);
      input.put(key,booleanSimplify(value));
    }
  }

  public Expr booleanSimplify(Expr expr) {
    Strategy booleanSimplifier = new BooleanSimplifier();
    Expr res = tom_make_ilfalse();
    try {
      res = (Expr) tom_make_InnermostId(booleanSimplifier).visit(expr);
    } catch (jjtraveler.VisitFailure e) {
      System.out.println("humm");
    }
    return res;
  }

  public class BooleanSimplifier extends IlBasicStrategy {
    public BooleanSimplifier() {
      super(tom_make_Identity());
    }

    public Expr visit_Expr(Expr arg) throws jjtraveler.VisitFailure {
      if (tom_is_sort_Expr(arg)) {{  tom.engine.adt.il.types.Expr  tomMatch282NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )arg);if (tom_is_fun_sym_iland(tomMatch282NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_0=tom_get_slot_iland_Left(tomMatch282NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_1=tom_get_slot_iland_Right(tomMatch282NameNumberfreshSubject_1);if (tom_is_fun_sym_ilfalse(tomMatch282NameNumber_freshVar_0)) {if ( true ) {

          return tom_make_ilfalse();
        }}}}}if (tom_is_fun_sym_iland(tomMatch282NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_2=tom_get_slot_iland_Left(tomMatch282NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_3=tom_get_slot_iland_Right(tomMatch282NameNumberfreshSubject_1);if (tom_is_fun_sym_ilfalse(tomMatch282NameNumber_freshVar_3)) {if ( true ) {

          return tom_make_ilfalse();
        }}}}}if (tom_is_fun_sym_ilor(tomMatch282NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_5=tom_get_slot_ilor_Left(tomMatch282NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_6=tom_get_slot_ilor_Right(tomMatch282NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_4=tomMatch282NameNumber_freshVar_5;if (tom_is_fun_sym_iltrue(tomMatch282NameNumber_freshVar_4)) {if ( true ) {

          return tomMatch282NameNumber_freshVar_4;
        }}}}}}if (tom_is_fun_sym_ilor(tomMatch282NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_8=tom_get_slot_ilor_Left(tomMatch282NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_9=tom_get_slot_ilor_Right(tomMatch282NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_7=tomMatch282NameNumber_freshVar_9;if (tom_is_fun_sym_iltrue(tomMatch282NameNumber_freshVar_7)) {if ( true ) {

          return tomMatch282NameNumber_freshVar_7;
        }}}}}}if (tom_is_fun_sym_ilor(tomMatch282NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_10=tom_get_slot_ilor_Left(tomMatch282NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_11=tom_get_slot_ilor_Right(tomMatch282NameNumberfreshSubject_1);if (tom_is_fun_sym_ilfalse(tomMatch282NameNumber_freshVar_10)) {if ( true ) {

          return tomMatch282NameNumber_freshVar_11;
        }}}}}if (tom_is_fun_sym_ilor(tomMatch282NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_12=tom_get_slot_ilor_Left(tomMatch282NameNumberfreshSubject_1);{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_13=tom_get_slot_ilor_Right(tomMatch282NameNumberfreshSubject_1);if (tom_is_fun_sym_ilfalse(tomMatch282NameNumber_freshVar_13)) {if ( true ) {

          return tomMatch282NameNumber_freshVar_12;
        }}}}}if (tom_is_fun_sym_ilnot(tomMatch282NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_14=tom_get_slot_ilnot_Exp(tomMatch282NameNumberfreshSubject_1);if (tom_is_fun_sym_iltrue(tomMatch282NameNumber_freshVar_14)) {if ( true ) {

          return tom_make_ilfalse();
        }}}}if (tom_is_fun_sym_ilnot(tomMatch282NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.Expr  tomMatch282NameNumber_freshVar_15=tom_get_slot_ilnot_Exp(tomMatch282NameNumberfreshSubject_1);if (tom_is_fun_sym_ilfalse(tomMatch282NameNumber_freshVar_15)) {if ( true ) {

          return tom_make_iltrue(tom_empty_list_subs());
        }}}}}}

      return (Expr) any.visit(arg);
    }
  }

  TermList reverseTermList(TermList l) {
    if (tom_is_sort_TermList(l)) {{  tom.engine.adt.il.types.TermList  tomMatch283NameNumberfreshSubject_1=(( tom.engine.adt.il.types.TermList )l);if (tom_is_fun_sym_concTerm(tomMatch283NameNumberfreshSubject_1)) {{  tom.engine.adt.il.types.TermList  tomMatch283NameNumber_freshVar_0=tomMatch283NameNumberfreshSubject_1;if (!(tom_is_empty_concTerm_TermList(tomMatch283NameNumber_freshVar_0))) {{  tom.engine.adt.il.types.TermList  tomMatch283NameNumber_freshVar_1=tom_get_tail_concTerm_TermList(tomMatch283NameNumber_freshVar_0);if ( true ) {

        TermList nt = reverseTermList(tomMatch283NameNumber_freshVar_1);
        return tom_append_list_concTerm(nt,tom_cons_list_concTerm(tom_get_head_concTerm_TermList(tomMatch283NameNumber_freshVar_0),tom_empty_list_concTerm()));
      }}}}}}}

    return l;
  }

}

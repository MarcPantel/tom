/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 *
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 * Antoine Reilles        e-mail: Antoine.Reilles@loria.fr
 *
 **/

package tom.engine.verifier;

import tom.engine.*;
import aterm.*;
import java.util.*;
import tom.engine.tools.SymbolTable;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;
import tom.engine.adt.il.*;
import tom.engine.adt.il.types.*;
import tom.library.sl.Strategy;
import tom.library.sl.VisitFailure;

import tom.engine.exception.TomRuntimeException;

public class Verifier {

  // ------------------------------------------------------------
  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.engine.adt.tominstruction.types.InstructionList  tom_append_list_concInstruction( tom.engine.adt.tominstruction.types.InstructionList l1,  tom.engine.adt.tominstruction.types.InstructionList  l2) {     if( l1.isEmptyconcInstruction() ) {       return l2;     } else if( l2.isEmptyconcInstruction() ) {       return l1;     } else if(  l1.getTailconcInstruction() .isEmptyconcInstruction() ) {       return  tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction.make( l1.getHeadconcInstruction() ,l2) ;     } else {       return  tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction.make( l1.getHeadconcInstruction() ,tom_append_list_concInstruction( l1.getTailconcInstruction() ,l2)) ;     }   }   private static   tom.engine.adt.tominstruction.types.InstructionList  tom_get_slice_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  begin,  tom.engine.adt.tominstruction.types.InstructionList  end, tom.engine.adt.tominstruction.types.InstructionList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction.make( begin.getHeadconcInstruction() ,( tom.engine.adt.tominstruction.types.InstructionList )tom_get_slice_concInstruction( begin.getTailconcInstruction() ,end,tail)) ;     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */     private static   tom.engine.adt.il.types.InstrList  tom_append_list_semicolon( tom.engine.adt.il.types.InstrList l1,  tom.engine.adt.il.types.InstrList  l2) {     if( l1.isEmptysemicolon() ) {       return l2;     } else if( l2.isEmptysemicolon() ) {       return l1;     } else if(  l1.getTailsemicolon() .isEmptysemicolon() ) {       return  tom.engine.adt.il.types.instrlist.Conssemicolon.make( l1.getHeadsemicolon() ,l2) ;     } else {       return  tom.engine.adt.il.types.instrlist.Conssemicolon.make( l1.getHeadsemicolon() ,tom_append_list_semicolon( l1.getTailsemicolon() ,l2)) ;     }   }   private static   tom.engine.adt.il.types.InstrList  tom_get_slice_semicolon( tom.engine.adt.il.types.InstrList  begin,  tom.engine.adt.il.types.InstrList  end, tom.engine.adt.il.types.InstrList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.il.types.instrlist.Conssemicolon.make( begin.getHeadsemicolon() ,( tom.engine.adt.il.types.InstrList )tom_get_slice_semicolon( begin.getTailsemicolon() ,end,tail)) ;     }   }      private static   tom.engine.adt.il.types.ExprList  tom_append_list_concExpr( tom.engine.adt.il.types.ExprList l1,  tom.engine.adt.il.types.ExprList  l2) {     if( l1.isEmptyconcExpr() ) {       return l2;     } else if( l2.isEmptyconcExpr() ) {       return l1;     } else if(  l1.getTailconcExpr() .isEmptyconcExpr() ) {       return  tom.engine.adt.il.types.exprlist.ConsconcExpr.make( l1.getHeadconcExpr() ,l2) ;     } else {       return  tom.engine.adt.il.types.exprlist.ConsconcExpr.make( l1.getHeadconcExpr() ,tom_append_list_concExpr( l1.getTailconcExpr() ,l2)) ;     }   }   private static   tom.engine.adt.il.types.ExprList  tom_get_slice_concExpr( tom.engine.adt.il.types.ExprList  begin,  tom.engine.adt.il.types.ExprList  end, tom.engine.adt.il.types.ExprList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.il.types.exprlist.ConsconcExpr.make( begin.getHeadconcExpr() ,( tom.engine.adt.il.types.ExprList )tom_get_slice_concExpr( begin.getTailconcExpr() ,end,tail)) ;     }   }      private static   tom.engine.adt.il.types.SubstitutionList  tom_append_list_subs( tom.engine.adt.il.types.SubstitutionList l1,  tom.engine.adt.il.types.SubstitutionList  l2) {     if( l1.isEmptysubs() ) {       return l2;     } else if( l2.isEmptysubs() ) {       return l1;     } else if(  l1.getTailsubs() .isEmptysubs() ) {       return  tom.engine.adt.il.types.substitutionlist.Conssubs.make( l1.getHeadsubs() ,l2) ;     } else {       return  tom.engine.adt.il.types.substitutionlist.Conssubs.make( l1.getHeadsubs() ,tom_append_list_subs( l1.getTailsubs() ,l2)) ;     }   }   private static   tom.engine.adt.il.types.SubstitutionList  tom_get_slice_subs( tom.engine.adt.il.types.SubstitutionList  begin,  tom.engine.adt.il.types.SubstitutionList  end, tom.engine.adt.il.types.SubstitutionList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.il.types.substitutionlist.Conssubs.make( begin.getHeadsubs() ,( tom.engine.adt.il.types.SubstitutionList )tom_get_slice_subs( begin.getTailsubs() ,end,tail)) ;     }   }      private static   tom.engine.adt.il.types.TermList  tom_append_list_concTerm( tom.engine.adt.il.types.TermList l1,  tom.engine.adt.il.types.TermList  l2) {     if( l1.isEmptyconcTerm() ) {       return l2;     } else if( l2.isEmptyconcTerm() ) {       return l1;     } else if(  l1.getTailconcTerm() .isEmptyconcTerm() ) {       return  tom.engine.adt.il.types.termlist.ConsconcTerm.make( l1.getHeadconcTerm() ,l2) ;     } else {       return  tom.engine.adt.il.types.termlist.ConsconcTerm.make( l1.getHeadconcTerm() ,tom_append_list_concTerm( l1.getTailconcTerm() ,l2)) ;     }   }   private static   tom.engine.adt.il.types.TermList  tom_get_slice_concTerm( tom.engine.adt.il.types.TermList  begin,  tom.engine.adt.il.types.TermList  end, tom.engine.adt.il.types.TermList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.il.types.termlist.ConsconcTerm.make( begin.getHeadconcTerm() ,( tom.engine.adt.il.types.TermList )tom_get_slice_concTerm( begin.getTailconcTerm() ,end,tail)) ;     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Sequence) )) {       if(( ((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Sequence(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else {       return ( (( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin):new tom.library.sl.Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)) );     }   }      private static   tom.library.sl.Strategy  tom_append_list_Choice( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Choice) )) {       if(( ((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )) ==null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Choice(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Choice( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else {       return ( (( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin):new tom.library.sl.Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)) );     }   }      private static   tom.library.sl.Strategy  tom_append_list_SequenceId( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.SequenceId) )) {       if(( ((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1):new tom.library.sl.SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1):new tom.library.sl.SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ):l1),tom_append_list_SequenceId(((( (l1 instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.SequenceId(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_SequenceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else {       return ( (( tom.library.sl.Strategy )tom_get_slice_SequenceId(((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.FIRST) ):begin):new tom.library.sl.SequenceId(((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_SequenceId(((( (begin instanceof tom.library.sl.SequenceId) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.THEN) ):( null )),end,tail)) );     }   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_Try( tom.library.sl.Strategy  v) { return ( ( (( (( null )==null)?( new tom.library.sl.Identity() ):new tom.library.sl.Choice(( new tom.library.sl.Identity() ),( null )) )==null)?v:new tom.library.sl.Choice(v,( (( null )==null)?( new tom.library.sl.Identity() ):new tom.library.sl.Choice(( new tom.library.sl.Identity() ),( null )) )) ) ); }private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) ); }private static  tom.library.sl.Strategy  tom_make_InnermostId( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ):new tom.library.sl.Sequence(( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ),( null )) )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( (( null )==null)?( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ):new tom.library.sl.Sequence(( (( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )==null)?v:new tom.library.sl.SequenceId(v,( (( null )==null)?( new tom.library.sl.MuVar("_x") ):new tom.library.sl.SequenceId(( new tom.library.sl.MuVar("_x") ),( null )) )) ),( null )) )) )) ) ); }   /* Generated by TOM (version 2.6alpha): Do not edit this file */ 











  // ------------------------------------------------------------

  private SymbolTable symbolTable;
  private boolean camlsemantics = false;

  public Verifier(boolean camlsemantics) {
    super();
    this.camlsemantics = camlsemantics;
  }

  public void setSymbolTable(SymbolTable symbolTable) {
    this.symbolTable = symbolTable;
  }

  public SymbolTable getSymbolTable() {
    return symbolTable;
  }

  public boolean isCamlSemantics() {
    return camlsemantics;
  }

  public Term termFromTomTerm(TomTerm tomterm) {
    {if ( (tomterm instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch286NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomterm);if ( (tomMatch286NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.ExpressionToTomTerm) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch286NameNumber_freshVar_0= tomMatch286NameNumberfreshSubject_1.getAstExpression() ;if ( true ) {

        return termFromExpresssion(tomMatch286NameNumber_freshVar_0);
      }}}}}if ( (tomterm instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch286NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )tomterm);if ( (tomMatch286NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch286NameNumber_freshVar_1= tomMatch286NameNumberfreshSubject_1.getAstName() ;if ( true ) {

        return termFromTomName(tomMatch286NameNumber_freshVar_1);
      }}}}}}

    System.out.println("termFromTomTerm don't know how to handle this: " + tomterm);
    return  tom.engine.adt.il.types.term.repr.make("foirade") ;
  }

  Variable variableFromTomName(TomName name) {
    {if ( (name instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch287NameNumberfreshSubject_1=(( tom.engine.adt.tomname.types.TomName )name);if ( (tomMatch287NameNumberfreshSubject_1 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch287NameNumber_freshVar_0= tomMatch287NameNumberfreshSubject_1.getString() ;if ( true ) {

        return  tom.engine.adt.il.types.variable.var.make(tomMatch287NameNumber_freshVar_0) ;
      }}}}}if ( (name instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch287NameNumberfreshSubject_1=(( tom.engine.adt.tomname.types.TomName )name);if ( (tomMatch287NameNumberfreshSubject_1 instanceof tom.engine.adt.tomname.types.tomname.PositionName) ) {{  tom.engine.adt.tomname.types.TomNumberList  tomMatch287NameNumber_freshVar_1= tomMatch287NameNumberfreshSubject_1.getNumberList() ;if ( true ) {

        return  tom.engine.adt.il.types.variable.var.make(TomBase.tomNumberListToString(tomMatch287NameNumber_freshVar_1)) ;
      }}}}}if ( (name instanceof tom.engine.adt.tomname.types.TomName) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch287NameNumberfreshSubject_1=(( tom.engine.adt.tomname.types.TomName )name);if ( (tomMatch287NameNumberfreshSubject_1 instanceof tom.engine.adt.tomname.types.tomname.EmptyName) ) {if ( true ) {

        return  tom.engine.adt.il.types.variable.var.make("emptyName") ;
      }}}}}

    return  tom.engine.adt.il.types.variable.var.make("error while building variable name") ;
  }

  Term termFromTomName(TomName name) {
    return  tom.engine.adt.il.types.term.tau.make( tom.engine.adt.il.types.absterm.absvar.make(variableFromTomName(name)) ) ;
  }

  public Term termFromExpresssion(Expression expression) {
    {if ( (expression instanceof tom.engine.adt.tomexpression.types.Expression) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch288NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if ( (tomMatch288NameNumberfreshSubject_1 instanceof tom.engine.adt.tomexpression.types.expression.GetSlot) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch288NameNumber_freshVar_0= tomMatch288NameNumberfreshSubject_1.getAstName() ;{  String  tomMatch288NameNumber_freshVar_1= tomMatch288NameNumberfreshSubject_1.getSlotNameString() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch288NameNumber_freshVar_2= tomMatch288NameNumberfreshSubject_1.getVariable() ;if ( (tomMatch288NameNumber_freshVar_0 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch288NameNumber_freshVar_3= tomMatch288NameNumber_freshVar_0.getString() ;if ( (tomMatch288NameNumber_freshVar_2 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch288NameNumber_freshVar_4= tomMatch288NameNumber_freshVar_2.getAstName() ;if ( true ) {

        Term term = termFromTomName(tomMatch288NameNumber_freshVar_4);
        return  tom.engine.adt.il.types.term.slot.make( tom.engine.adt.il.types.symbol.fsymbol.make(tomMatch288NameNumber_freshVar_3) , term, tomMatch288NameNumber_freshVar_1) ;
      }}}}}}}}}}}if ( (expression instanceof tom.engine.adt.tomexpression.types.Expression) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch288NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if ( (tomMatch288NameNumberfreshSubject_1 instanceof tom.engine.adt.tomexpression.types.expression.GetSlot) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch288NameNumber_freshVar_5= tomMatch288NameNumberfreshSubject_1.getAstName() ;{  String  tomMatch288NameNumber_freshVar_6= tomMatch288NameNumberfreshSubject_1.getSlotNameString() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch288NameNumber_freshVar_7= tomMatch288NameNumberfreshSubject_1.getVariable() ;if ( (tomMatch288NameNumber_freshVar_5 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch288NameNumber_freshVar_8= tomMatch288NameNumber_freshVar_5.getString() ;if ( (tomMatch288NameNumber_freshVar_7 instanceof tom.engine.adt.tomterm.types.tomterm.Ref) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch288NameNumber_freshVar_9= tomMatch288NameNumber_freshVar_7.getTomTerm() ;if ( (tomMatch288NameNumber_freshVar_9 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch288NameNumber_freshVar_10= tomMatch288NameNumber_freshVar_9.getAstName() ;if ( true ) {

        Term term = termFromTomName(tomMatch288NameNumber_freshVar_10);
        return  tom.engine.adt.il.types.term.slot.make( tom.engine.adt.il.types.symbol.fsymbol.make(tomMatch288NameNumber_freshVar_8) , term, tomMatch288NameNumber_freshVar_6) ;
      }}}}}}}}}}}}}if ( (expression instanceof tom.engine.adt.tomexpression.types.Expression) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch288NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if ( (tomMatch288NameNumberfreshSubject_1 instanceof tom.engine.adt.tomexpression.types.expression.TomTermToExpression) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch288NameNumber_freshVar_11= tomMatch288NameNumberfreshSubject_1.getAstTerm() ;if ( (tomMatch288NameNumber_freshVar_11 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch288NameNumber_freshVar_12= tomMatch288NameNumber_freshVar_11.getAstName() ;if ( true ) {

        Term term = termFromTomName(tomMatch288NameNumber_freshVar_12);
        return term;
      }}}}}}}if ( (expression instanceof tom.engine.adt.tomexpression.types.Expression) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch288NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if ( (tomMatch288NameNumberfreshSubject_1 instanceof tom.engine.adt.tomexpression.types.expression.TomTermToExpression) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch288NameNumber_freshVar_13= tomMatch288NameNumberfreshSubject_1.getAstTerm() ;if ( (tomMatch288NameNumber_freshVar_13 instanceof tom.engine.adt.tomterm.types.tomterm.Ref) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch288NameNumber_freshVar_14= tomMatch288NameNumber_freshVar_13.getTomTerm() ;if ( (tomMatch288NameNumber_freshVar_14 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch288NameNumber_freshVar_15= tomMatch288NameNumber_freshVar_14.getAstName() ;if ( true ) {

        Term term = termFromTomName(tomMatch288NameNumber_freshVar_15);
        return term;
      }}}}}}}}}if ( (expression instanceof tom.engine.adt.tomexpression.types.Expression) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch288NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if ( (tomMatch288NameNumberfreshSubject_1 instanceof tom.engine.adt.tomexpression.types.expression.Cast) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch288NameNumber_freshVar_16= tomMatch288NameNumberfreshSubject_1.getSource() ;if ( true ) {

        return termFromExpresssion(tomMatch288NameNumber_freshVar_16);
      }}}}}}

    System.out.println("termFromExpresssion don't know how to handle this: " + expression);
    return  tom.engine.adt.il.types.term.repr.make("autre foirade avec " + expression) ;
  }

  public Expr exprFromExpression(Expression expression) {
    {if ( (expression instanceof tom.engine.adt.tomexpression.types.Expression) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch289NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if ( (tomMatch289NameNumberfreshSubject_1 instanceof tom.engine.adt.tomexpression.types.expression.TrueTL) ) {if ( true ) {
 return  tom.engine.adt.il.types.expr.iltrue.make( tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) ) ; }}}}if ( (expression instanceof tom.engine.adt.tomexpression.types.Expression) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch289NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if ( (tomMatch289NameNumberfreshSubject_1 instanceof tom.engine.adt.tomexpression.types.expression.FalseTL) ) {if ( true ) {
 return  tom.engine.adt.il.types.expr.ilfalse.make() ; }}}}if ( (expression instanceof tom.engine.adt.tomexpression.types.Expression) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch289NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if ( (tomMatch289NameNumberfreshSubject_1 instanceof tom.engine.adt.tomexpression.types.expression.IsFsym) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch289NameNumber_freshVar_0= tomMatch289NameNumberfreshSubject_1.getAstName() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch289NameNumber_freshVar_1= tomMatch289NameNumberfreshSubject_1.getVariable() ;if ( (tomMatch289NameNumber_freshVar_0 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch289NameNumber_freshVar_2= tomMatch289NameNumber_freshVar_0.getString() ;if ( (tomMatch289NameNumber_freshVar_1 instanceof tom.engine.adt.tomterm.types.tomterm.Ref) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch289NameNumber_freshVar_3= tomMatch289NameNumber_freshVar_1.getTomTerm() ;if ( (tomMatch289NameNumber_freshVar_3 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch289NameNumber_freshVar_4= tomMatch289NameNumber_freshVar_3.getAstName() ;if ( true ) {

        Term term = termFromTomName(tomMatch289NameNumber_freshVar_4);
        return  tom.engine.adt.il.types.expr.isfsym.make(term,  tom.engine.adt.il.types.symbol.fsymbol.make(tomMatch289NameNumber_freshVar_2) ) ;
      }}}}}}}}}}}}if ( (expression instanceof tom.engine.adt.tomexpression.types.Expression) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch289NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if ( (tomMatch289NameNumberfreshSubject_1 instanceof tom.engine.adt.tomexpression.types.expression.IsFsym) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch289NameNumber_freshVar_5= tomMatch289NameNumberfreshSubject_1.getAstName() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch289NameNumber_freshVar_6= tomMatch289NameNumberfreshSubject_1.getVariable() ;if ( (tomMatch289NameNumber_freshVar_5 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {{  String  tomMatch289NameNumber_freshVar_7= tomMatch289NameNumber_freshVar_5.getString() ;if ( (tomMatch289NameNumber_freshVar_6 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch289NameNumber_freshVar_8= tomMatch289NameNumber_freshVar_6.getAstName() ;if ( true ) {

        Term term = termFromTomName(tomMatch289NameNumber_freshVar_8);
        return  tom.engine.adt.il.types.expr.isfsym.make(term,  tom.engine.adt.il.types.symbol.fsymbol.make(tomMatch289NameNumber_freshVar_7) ) ;
      }}}}}}}}}}if ( (expression instanceof tom.engine.adt.tomexpression.types.Expression) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch289NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if ( (tomMatch289NameNumberfreshSubject_1 instanceof tom.engine.adt.tomexpression.types.expression.EqualTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch289NameNumber_freshVar_9= tomMatch289NameNumberfreshSubject_1.getKid1() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch289NameNumber_freshVar_10= tomMatch289NameNumberfreshSubject_1.getKid2() ;if ( true ) {

        return  tom.engine.adt.il.types.expr.eq.make(termFromTomTerm(tomMatch289NameNumber_freshVar_9), termFromTomTerm(tomMatch289NameNumber_freshVar_10)) ;
      }}}}}}if ( (expression instanceof tom.engine.adt.tomexpression.types.Expression) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch289NameNumberfreshSubject_1=(( tom.engine.adt.tomexpression.types.Expression )expression);if ( (tomMatch289NameNumberfreshSubject_1 instanceof tom.engine.adt.tomexpression.types.expression.IsSort) ) {if ( true ) {
 return  tom.engine.adt.il.types.expr.iltrue.make( tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) ) ; }}}}}

    System.out.println("exprFromExpression don't know how to handle this: " + expression);
    return  tom.engine.adt.il.types.expr.ilfalse.make() ;
  }

  public Instr instrFromInstructionList(InstructionList instrlist) {
    InstrList list =  tom.engine.adt.il.types.instrlist.Emptysemicolon.make() ;
    while (!instrlist.isEmptyconcInstruction()) {
      Instruction i = (Instruction) instrlist.getHeadconcInstruction();
      instrlist = instrlist.getTailconcInstruction();
      list = tom_append_list_semicolon(list, tom.engine.adt.il.types.instrlist.Conssemicolon.make(instrFromInstruction(i), tom.engine.adt.il.types.instrlist.Emptysemicolon.make() ) );
    }
    return  tom.engine.adt.il.types.instr.sequence.make(list) ;
  }

  public Instr instrFromInstruction(Instruction automata) {
    {if ( (automata instanceof tom.engine.adt.tominstruction.types.Instruction) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )automata);if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.TypedAction) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch290NameNumber_freshVar_0= tomMatch290NameNumberfreshSubject_1.getPositivePattern() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch290NameNumber_freshVar_1= tomMatch290NameNumberfreshSubject_1.getNegativePatternList() ;if ( true ) {

        return  tom.engine.adt.il.types.instr.accept.make(tomMatch290NameNumber_freshVar_0.toATerm(), tomMatch290NameNumber_freshVar_1.toATerm()) ;
      }}}}}}if ( (automata instanceof tom.engine.adt.tominstruction.types.Instruction) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )automata);if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.If) ) {{  tom.engine.adt.tomexpression.types.Expression  tomMatch290NameNumber_freshVar_2= tomMatch290NameNumberfreshSubject_1.getCondition() ;{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumber_freshVar_3= tomMatch290NameNumberfreshSubject_1.getSuccesInst() ;{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumber_freshVar_4= tomMatch290NameNumberfreshSubject_1.getFailureInst() ;if ( true ) {


        return  tom.engine.adt.il.types.instr.ITE.make(exprFromExpression(tomMatch290NameNumber_freshVar_2), instrFromInstruction(tomMatch290NameNumber_freshVar_3), instrFromInstruction(tomMatch290NameNumber_freshVar_4)) 

;
      }}}}}}}if ( (automata instanceof tom.engine.adt.tominstruction.types.Instruction) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )automata);{ boolean tomMatch290NameNumber_freshVar_9= false ;{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumber_freshVar_7= null ;{  tom.engine.adt.tomexpression.types.Expression  tomMatch290NameNumber_freshVar_6= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch290NameNumber_freshVar_5= null ;if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.Let) ) {{tomMatch290NameNumber_freshVar_9= true ;tomMatch290NameNumber_freshVar_5= tomMatch290NameNumberfreshSubject_1.getVariable() ;tomMatch290NameNumber_freshVar_6= tomMatch290NameNumberfreshSubject_1.getSource() ;tomMatch290NameNumber_freshVar_7= tomMatch290NameNumberfreshSubject_1.getAstInstruction() ;}} else {if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.LetRef) ) {{tomMatch290NameNumber_freshVar_9= true ;tomMatch290NameNumber_freshVar_5= tomMatch290NameNumberfreshSubject_1.getVariable() ;tomMatch290NameNumber_freshVar_6= tomMatch290NameNumberfreshSubject_1.getSource() ;tomMatch290NameNumber_freshVar_7= tomMatch290NameNumberfreshSubject_1.getAstInstruction() ;}} else {if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.LetAssign) ) {{tomMatch290NameNumber_freshVar_9= true ;tomMatch290NameNumber_freshVar_5= tomMatch290NameNumberfreshSubject_1.getVariable() ;tomMatch290NameNumber_freshVar_6= tomMatch290NameNumberfreshSubject_1.getSource() ;tomMatch290NameNumber_freshVar_7= tomMatch290NameNumberfreshSubject_1.getAstInstruction() ;}}}}if ( tomMatch290NameNumber_freshVar_9== true  ) {if ( (tomMatch290NameNumber_freshVar_5 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch290NameNumber_freshVar_8= tomMatch290NameNumber_freshVar_5.getAstName() ;if ( true ) {

        Variable thevar = variableFromTomName(tomMatch290NameNumber_freshVar_8);
        return  tom.engine.adt.il.types.instr.ILLet.make(thevar, termFromExpresssion(tomMatch290NameNumber_freshVar_6), instrFromInstruction(tomMatch290NameNumber_freshVar_7)) 

;
      }}}}}}}}}}if ( (automata instanceof tom.engine.adt.tominstruction.types.Instruction) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )automata);{ boolean tomMatch290NameNumber_freshVar_13= false ;{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumber_freshVar_12= null ;{  tom.engine.adt.tomexpression.types.Expression  tomMatch290NameNumber_freshVar_11= null ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch290NameNumber_freshVar_10= null ;if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.Let) ) {{tomMatch290NameNumber_freshVar_13= true ;tomMatch290NameNumber_freshVar_10= tomMatch290NameNumberfreshSubject_1.getVariable() ;tomMatch290NameNumber_freshVar_11= tomMatch290NameNumberfreshSubject_1.getSource() ;tomMatch290NameNumber_freshVar_12= tomMatch290NameNumberfreshSubject_1.getAstInstruction() ;}} else {if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.LetAssign) ) {{tomMatch290NameNumber_freshVar_13= true ;tomMatch290NameNumber_freshVar_10= tomMatch290NameNumberfreshSubject_1.getVariable() ;tomMatch290NameNumber_freshVar_11= tomMatch290NameNumberfreshSubject_1.getSource() ;tomMatch290NameNumber_freshVar_12= tomMatch290NameNumberfreshSubject_1.getAstInstruction() ;}} else {if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.LetRef) ) {{tomMatch290NameNumber_freshVar_13= true ;tomMatch290NameNumber_freshVar_10= tomMatch290NameNumberfreshSubject_1.getVariable() ;tomMatch290NameNumber_freshVar_11= tomMatch290NameNumberfreshSubject_1.getSource() ;tomMatch290NameNumber_freshVar_12= tomMatch290NameNumberfreshSubject_1.getAstInstruction() ;}}}}if ( tomMatch290NameNumber_freshVar_13== true  ) {if ( (tomMatch290NameNumber_freshVar_10 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable) ) {if ( true ) {

        return instrFromInstruction(tomMatch290NameNumber_freshVar_12);
      }}}}}}}}}if ( (automata instanceof tom.engine.adt.tominstruction.types.Instruction) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )automata);if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.CompiledPattern) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumber_freshVar_14= tomMatch290NameNumberfreshSubject_1.getAutomataInst() ;if ( true ) {

        return instrFromInstruction(tomMatch290NameNumber_freshVar_14);
      }}}}}if ( (automata instanceof tom.engine.adt.tominstruction.types.Instruction) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )automata);if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.AbstractBlock) ) {{  tom.engine.adt.tominstruction.types.InstructionList  tomMatch290NameNumber_freshVar_15= tomMatch290NameNumberfreshSubject_1.getInstList() ;if ( ((tomMatch290NameNumber_freshVar_15 instanceof tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction) || (tomMatch290NameNumber_freshVar_15 instanceof tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction)) ) {{  tom.engine.adt.tominstruction.types.InstructionList  tomMatch290NameNumber_freshVar_16=tomMatch290NameNumber_freshVar_15;if (!( tomMatch290NameNumber_freshVar_16.isEmptyconcInstruction() )) {{  tom.engine.adt.tominstruction.types.InstructionList  tomMatch290NameNumber_freshVar_17= tomMatch290NameNumber_freshVar_16.getTailconcInstruction() ;if ( tomMatch290NameNumber_freshVar_17.isEmptyconcInstruction() ) {if ( true ) {

        return instrFromInstruction( tomMatch290NameNumber_freshVar_16.getHeadconcInstruction() );
      }}}}}}}}}}if ( (automata instanceof tom.engine.adt.tominstruction.types.Instruction) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )automata);if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.AbstractBlock) ) {{  tom.engine.adt.tominstruction.types.InstructionList  tomMatch290NameNumber_freshVar_18= tomMatch290NameNumberfreshSubject_1.getInstList() ;if ( ((tomMatch290NameNumber_freshVar_18 instanceof tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction) || (tomMatch290NameNumber_freshVar_18 instanceof tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction)) ) {{  tom.engine.adt.tominstruction.types.InstructionList  tomMatch290NameNumber_freshVar_19=tomMatch290NameNumber_freshVar_18;if ( true ) {

        return instrFromInstructionList(tomMatch290NameNumber_freshVar_19);
      }}}}}}}if ( (automata instanceof tom.engine.adt.tominstruction.types.Instruction) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch290NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )automata);if ( (tomMatch290NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.Nop) ) {if ( true ) {

        // tom uses nop in the iffalse part of ITE
        return  tom.engine.adt.il.types.instr.refuse.make() ;
      }}}}}

    System.out.println("instrFromInstruction don't know how to handle this : " + automata);
    return  tom.engine.adt.il.types.instr.refuse.make() ;
  }

  private SubstitutionList abstractSubstitutionFromAccept(Instr instr) {
    SubstitutionList substitution =  tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ;
    {if ( (instr instanceof tom.engine.adt.il.types.Instr) ) {{  tom.engine.adt.il.types.Instr  tomMatch291NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Instr )instr);if ( (tomMatch291NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.instr.accept) ) {{  aterm.ATerm  tomMatch291NameNumber_freshVar_0= tomMatch291NameNumberfreshSubject_1.getPositive() ;{  aterm.ATerm  tomMatch291NameNumber_freshVar_1= tomMatch291NameNumberfreshSubject_1.getNegative() ;if ( true ) {

        Constraint positivePattern = Constraint.fromTerm(tomMatch291NameNumber_freshVar_0);
        ArrayList<TomTerm> subjectList = new ArrayList<TomTerm>();
        try{
          tom_make_TopDown(tom_make_CollectSubjects(subjectList)).visitLight(positivePattern);
        }catch(VisitFailure e){
          throw new TomRuntimeException("VisitFailure in Verifier.abstractSubstitutionFromAccept:" + e.getMessage()); 
        }
        for(TomTerm subject: subjectList){
          {if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch292NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if ( (tomMatch292NameNumberfreshSubject_1 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{  tom.engine.adt.tomname.types.TomName  tomMatch292NameNumber_freshVar_0= tomMatch292NameNumberfreshSubject_1.getAstName() ;if ( true ) {

              substitution = tom_append_list_subs(substitution, tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.is.make(variableFromTomName(tomMatch292NameNumber_freshVar_0), termFromTomTerm(subject)) , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) )


;
            }}}}}}
          
        }
      }}}}}}}

    return substitution;
  }

  private static class CollectSubjects extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  java.util.List  list; public CollectSubjects( java.util.List  list) { super(( new tom.library.sl.Identity() ));this.list=list;}public  java.util.List  getlist() { return list;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomconstraint.types.Constraint  visit_Constraint( tom.engine.adt.tomconstraint.types.Constraint  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tomconstraint.types.Constraint) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch293NameNumberfreshSubject_1=(( tom.engine.adt.tomconstraint.types.Constraint )tom__arg);if ( (tomMatch293NameNumberfreshSubject_1 instanceof tom.engine.adt.tomconstraint.types.constraint.MatchConstraint) ) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch293NameNumber_freshVar_0= tomMatch293NameNumberfreshSubject_1.getpattern() ;{  tom.engine.adt.tomterm.types.TomTerm  tomMatch293NameNumber_freshVar_1= tomMatch293NameNumberfreshSubject_1.getsubject() ;if ( true ) {


        list.add(tomMatch293NameNumber_freshVar_1);
      }}}}}}}return super.visit_Constraint(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_CollectSubjects( java.util.List  t0) { return new CollectSubjects(t0); }


  
  public Collection build_tree(Instruction automata) {
    // System.out.println("Build derivation tree for: " + automata);

    // collects the accept in the automata
    Collection localAccepts = collectAccept(automata);

    Iterator iter = localAccepts.iterator();
    Collection treeList = new HashSet();
    while(iter.hasNext()) {
        Instr localAccept = (Instr) iter.next();

        // builds the initial abstract substitution
        SubstitutionList initialsubstitution = abstractSubstitutionFromAccept(localAccept);
        Environment startingenv =  tom.engine.adt.il.types.environment.env.make(initialsubstitution, instrFromInstruction(automata)) 
;

        Deriv startingderiv =  tom.engine.adt.il.types.deriv.ebs.make(startingenv,  tom.engine.adt.il.types.environment.env.make( tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) , localAccept) ) 
;

        Collection treeListPre = applySemanticsRules(startingderiv);
        // replace substitutions in trees
        Iterator it = treeListPre.iterator();
        while(it.hasNext()) {
            DerivTree tree = (DerivTree) it.next();
            SubstitutionList outputsubst = getOutputSubstitution(tree);
            tree = replaceUndefinedSubstitution(tree,outputsubst);
            treeList.add(tree);
        }
    }

    return treeList;
  }

  public Map getConstraints(Instruction automata) {
    // collects the accept in the automata
    Collection localAccepts = collectAccept(automata);

    Iterator iter = localAccepts.iterator();
    Map constraintList = new HashMap();
    while(iter.hasNext()) {
        Instr localAccept = (Instr) iter.next();

        // builds the initial abstract substitution
        SubstitutionList initialsubstitution = abstractSubstitutionFromAccept(localAccept);
        Expr constraints = buildConstraint(initialsubstitution,
                                           instrFromInstruction(automata),
                                           localAccept);
        constraintList.put(localAccept,constraints);
    }
    return constraintList;
  }

  private static class substitutionCollector extends  tom.engine.adt.il.IlBasicStrategy  {private  SubstRef  outsubst; public substitutionCollector( SubstRef  outsubst) { super(( new tom.library.sl.Identity() ));this.outsubst=outsubst;}public  SubstRef  getoutsubst() { return outsubst;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.il.types.Expr  visit_Expr( tom.engine.adt.il.types.Expr  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch294NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )tom__arg);if ( (tomMatch294NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.iltrue) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch294NameNumber_freshVar_0= tomMatch294NameNumberfreshSubject_1.getSubst() ;if ( ((tomMatch294NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch294NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch294NameNumber_freshVar_1=tomMatch294NameNumber_freshVar_0;if (!( tomMatch294NameNumber_freshVar_1.isEmptysubs() )) {if ( ( tomMatch294NameNumber_freshVar_1.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.undefsubs) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch294NameNumber_freshVar_2= tomMatch294NameNumber_freshVar_1.getTailsubs() ;if ( tomMatch294NameNumber_freshVar_2.isEmptysubs() ) {if ( true ) {( new tom.library.sl.Fail() )


.visitLight(tomMatch294NameNumberfreshSubject_1);
      }}}}}}}}}}}if ( (tom__arg instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch294NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )tom__arg);if ( (tomMatch294NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.iltrue) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch294NameNumber_freshVar_3= tomMatch294NameNumberfreshSubject_1.getSubst() ;if ( true ) {

        outsubst.set(tomMatch294NameNumber_freshVar_3);
      }}}}}}return super.visit_Expr(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_substitutionCollector( SubstRef  t0) { return new substitutionCollector(t0); }


  public SubstitutionList collectSubstitutionInConstraint(Expr expr) {
    SubstRef output = new SubstRef( tom.engine.adt.il.types.substitutionlist.Emptysubs.make() );
    try {
      ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("x") ),tom_make_Try(( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ),( null )) )==null)?tom_make_substitutionCollector(output):new tom.library.sl.Sequence(tom_make_substitutionCollector(output),( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ),( null )) )) ))) ).visitLight(expr);
    } catch (tom.library.sl.VisitFailure e) {
      throw new TomRuntimeException("Strategy substitutionCollector failed");
    }
    return output.get();
  }

  private static class outputSubstitutionCollector extends  tom.engine.adt.il.IlBasicStrategy  {private  SubstRef  outsubst; public outputSubstitutionCollector( SubstRef  outsubst) { super(( new tom.library.sl.Identity() ));this.outsubst=outsubst;}public  SubstRef  getoutsubst() { return outsubst;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.il.types.Deriv  visit_Deriv( tom.engine.adt.il.types.Deriv  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.il.types.Deriv) ) {{  tom.engine.adt.il.types.Deriv  tomMatch295NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Deriv )tom__arg);if ( (tomMatch295NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.deriv.ebs) ) {{  tom.engine.adt.il.types.Environment  tomMatch295NameNumber_freshVar_0= tomMatch295NameNumberfreshSubject_1.getLhs() ;{  tom.engine.adt.il.types.Environment  tomMatch295NameNumber_freshVar_1= tomMatch295NameNumberfreshSubject_1.getRhs() ;if ( (tomMatch295NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch295NameNumber_freshVar_2= tomMatch295NameNumber_freshVar_0.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch295NameNumber_freshVar_3= tomMatch295NameNumber_freshVar_0.getI() ;if ( (tomMatch295NameNumber_freshVar_3 instanceof tom.engine.adt.il.types.instr.accept) ) {if ( (tomMatch295NameNumber_freshVar_1 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch295NameNumber_freshVar_4= tomMatch295NameNumber_freshVar_1.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch295NameNumber_freshVar_5= tomMatch295NameNumber_freshVar_1.getI() ;if ( ((tomMatch295NameNumber_freshVar_4 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch295NameNumber_freshVar_4 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch295NameNumber_freshVar_6=tomMatch295NameNumber_freshVar_4;if (!( tomMatch295NameNumber_freshVar_6.isEmptysubs() )) {if ( ( tomMatch295NameNumber_freshVar_6.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.undefsubs) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch295NameNumber_freshVar_7= tomMatch295NameNumber_freshVar_6.getTailsubs() ;if ( tomMatch295NameNumber_freshVar_7.isEmptysubs() ) {if ( (tomMatch295NameNumber_freshVar_5 instanceof tom.engine.adt.il.types.instr.accept) ) {if ( true ) {


        outsubst.set(tomMatch295NameNumber_freshVar_2);
      }}}}}}}}}}}}}}}}}}}}}return super.visit_Deriv(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_outputSubstitutionCollector( SubstRef  t0) { return new outputSubstitutionCollector(t0); }



  public SubstitutionList getOutputSubstitution(DerivTree subject) {
    SubstRef output = new SubstRef( tom.engine.adt.il.types.substitutionlist.Emptysubs.make() );
    try {
      tom_make_TopDown(tom_make_outputSubstitutionCollector(output)).visitLight(subject);
    } catch (tom.library.sl.VisitFailure e) {
      throw new TomRuntimeException("Strategy outputSubstitutionCollector failed");
    }
    return output.get();
  }

  private static class acceptCollector extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  java.util.Collection  store; public acceptCollector( java.util.Collection  store) { super(( new tom.library.sl.Identity() ));this.store=store;}public  java.util.Collection  getstore() { return store;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction( tom.engine.adt.tominstruction.types.Instruction  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.tominstruction.types.Instruction) ) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch296NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg);if ( (tomMatch296NameNumberfreshSubject_1 instanceof tom.engine.adt.tominstruction.types.instruction.TypedAction) ) {{  tom.engine.adt.tomconstraint.types.Constraint  tomMatch296NameNumber_freshVar_0= tomMatch296NameNumberfreshSubject_1.getPositivePattern() ;{  tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch296NameNumber_freshVar_1= tomMatch296NameNumberfreshSubject_1.getNegativePatternList() ;if ( true ) {


        store.add( tom.engine.adt.il.types.instr.accept.make(tomMatch296NameNumber_freshVar_0.toATerm(), tomMatch296NameNumber_freshVar_1.toATerm()) );
      }}}}}}}return super.visit_Instruction(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_acceptCollector( java.util.Collection  t0) { return new acceptCollector(t0); }



  public Collection collectAccept(Instruction subject) {
    Collection result = new HashSet();
    try {
      tom_make_TopDown(tom_make_acceptCollector(result)).visitLight(subject);
    } catch (tom.library.sl.VisitFailure e) {
      throw new TomRuntimeException("Strategy collectAccept failed");
    }
    return result;
  }


  /**
   * The axioms the mapping has to verify
   */
  protected Seq seqFromTerm(Term sp) {
    TermList ded =  tom.engine.adt.il.types.termlist.ConsconcTerm.make(sp, tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) ;
    {if ( (sp instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch297NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )sp);if ( (tomMatch297NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.appSubsT) ) {if ( true ) {

        TermList follow = applyMappingRules(replaceVariablesInTerm(sp));
        ded = tom_append_list_concTerm(ded,tom_append_list_concTerm(follow, tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ));
      }}}}}

    return  tom.engine.adt.il.types.seq.dedterm.make(tom_append_list_concTerm(ded, tom.engine.adt.il.types.termlist.EmptyconcTerm.make() )) ;
  }

  protected ExprList exprListFromExpr(Expr sp) {
    ExprList ded =  tom.engine.adt.il.types.exprlist.ConsconcExpr.make(sp, tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ) ;
    {if ( (sp instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch298NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )sp);if ( (tomMatch298NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.appSubsE) ) {if ( true ) {

        ExprList follow = applyExprRules(replaceVariablesInExpr(sp));
        ded = tom_append_list_concExpr(ded,tom_append_list_concExpr(follow, tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ));
      }}}}}


    // System.out.println("dedexpr gives: " + ded);
    return ded;
  }

  protected SubstitutionList reduceSubstitutionWithMappingRules(SubstitutionList subst) {
    {if ( (subst instanceof tom.engine.adt.il.types.SubstitutionList) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch299NameNumberfreshSubject_1=(( tom.engine.adt.il.types.SubstitutionList )subst);if ( ((tomMatch299NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch299NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch299NameNumber_freshVar_0=tomMatch299NameNumberfreshSubject_1;if ( tomMatch299NameNumber_freshVar_0.isEmptysubs() ) {if ( true ) {

        return subst;
      }}}}}}if ( (subst instanceof tom.engine.adt.il.types.SubstitutionList) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch299NameNumberfreshSubject_1=(( tom.engine.adt.il.types.SubstitutionList )subst);if ( ((tomMatch299NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch299NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch299NameNumber_freshVar_1=tomMatch299NameNumberfreshSubject_1;if (!( tomMatch299NameNumber_freshVar_1.isEmptysubs() )) {if ( ( tomMatch299NameNumber_freshVar_1.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.is) ) {{  tom.engine.adt.il.types.Variable  tomMatch299NameNumber_freshVar_4=  tomMatch299NameNumber_freshVar_1.getHeadsubs() .getVar() ;{  tom.engine.adt.il.types.Term  tomMatch299NameNumber_freshVar_5=  tomMatch299NameNumber_freshVar_1.getHeadsubs() .getTerm() ;{  tom.engine.adt.il.types.SubstitutionList  tomMatch299NameNumber_freshVar_2= tomMatch299NameNumber_freshVar_1.getTailsubs() ;if ( true ) {

        SubstitutionList tail = reduceSubstitutionWithMappingRules(tomMatch299NameNumber_freshVar_2);
        return  tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.is.make(tomMatch299NameNumber_freshVar_4, reduceTermWithMappingRules(replaceVariablesInTerm( tom.engine.adt.il.types.term.appSubsT.make(tail, tomMatch299NameNumber_freshVar_5) ))) ,tom_append_list_subs(tail, tom.engine.adt.il.types.substitutionlist.Emptysubs.make() )) ;
      }}}}}}}}}}if ( (subst instanceof tom.engine.adt.il.types.SubstitutionList) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch299NameNumberfreshSubject_1=(( tom.engine.adt.il.types.SubstitutionList )subst);if ( ((tomMatch299NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch299NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch299NameNumber_freshVar_6=tomMatch299NameNumberfreshSubject_1;if (!( tomMatch299NameNumber_freshVar_6.isEmptysubs() )) {if ( ( tomMatch299NameNumber_freshVar_6.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.undefsubs) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch299NameNumber_freshVar_7= tomMatch299NameNumber_freshVar_6.getTailsubs() ;if ( true ) {

        SubstitutionList tail = reduceSubstitutionWithMappingRules(tomMatch299NameNumber_freshVar_7);
        return  tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() ,tom_append_list_subs(tail, tom.engine.adt.il.types.substitutionlist.Emptysubs.make() )) ;
      }}}}}}}}}

    return subst;
  }
  protected Expr reduceWithMappingRules(Expr ex) {
    {if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch300NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.eq) ) {{  tom.engine.adt.il.types.Term  tomMatch300NameNumber_freshVar_0= tomMatch300NameNumberfreshSubject_1.getLt() ;{  tom.engine.adt.il.types.Term  tomMatch300NameNumber_freshVar_1= tomMatch300NameNumberfreshSubject_1.getRt() ;if ( (tomMatch300NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.term.tau) ) {{  tom.engine.adt.il.types.AbsTerm  tomMatch300NameNumber_freshVar_2= tomMatch300NameNumber_freshVar_0.getAbst() ;if ( (tomMatch300NameNumber_freshVar_1 instanceof tom.engine.adt.il.types.term.tau) ) {{  tom.engine.adt.il.types.AbsTerm  tomMatch300NameNumber_freshVar_3= tomMatch300NameNumber_freshVar_1.getAbst() ;if ( true ) {

        return  tom.engine.adt.il.types.expr.teq.make(tomMatch300NameNumber_freshVar_2, tomMatch300NameNumber_freshVar_3) ;
      }}}}}}}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch300NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.isfsym) ) {{  tom.engine.adt.il.types.Term  tomMatch300NameNumber_freshVar_4= tomMatch300NameNumberfreshSubject_1.getT() ;{  tom.engine.adt.il.types.Symbol  tomMatch300NameNumber_freshVar_5= tomMatch300NameNumberfreshSubject_1.getSymbol() ;if ( (tomMatch300NameNumber_freshVar_4 instanceof tom.engine.adt.il.types.term.tau) ) {{  tom.engine.adt.il.types.AbsTerm  tomMatch300NameNumber_freshVar_6= tomMatch300NameNumber_freshVar_4.getAbst() ;if ( true ) {

        return  tom.engine.adt.il.types.expr.tisfsym.make(tomMatch300NameNumber_freshVar_6, tomMatch300NameNumber_freshVar_5) ;
      }}}}}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch300NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.eq) ) {{  tom.engine.adt.il.types.Term  tomMatch300NameNumber_freshVar_7= tomMatch300NameNumberfreshSubject_1.getLt() ;{  tom.engine.adt.il.types.Term  tomMatch300NameNumber_freshVar_8= tomMatch300NameNumberfreshSubject_1.getRt() ;if ( true ) {

        // first reduce the argument
        return reduceWithMappingRules( tom.engine.adt.il.types.expr.eq.make(reduceTermWithMappingRules(tomMatch300NameNumber_freshVar_7), reduceTermWithMappingRules(tomMatch300NameNumber_freshVar_8)) );
      }}}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch300NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.isfsym) ) {{  tom.engine.adt.il.types.Term  tomMatch300NameNumber_freshVar_9= tomMatch300NameNumberfreshSubject_1.getT() ;{  tom.engine.adt.il.types.Symbol  tomMatch300NameNumber_freshVar_10= tomMatch300NameNumberfreshSubject_1.getSymbol() ;if ( true ) {

        return reduceWithMappingRules( tom.engine.adt.il.types.expr.isfsym.make(reduceTermWithMappingRules(tomMatch300NameNumber_freshVar_9), tomMatch300NameNumber_freshVar_10) );
      }}}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch300NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.ilnot) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumber_freshVar_11= tomMatch300NameNumberfreshSubject_1.getExp() ;if ( true ) {

        return  tom.engine.adt.il.types.expr.ilnot.make(reduceWithMappingRules(tomMatch300NameNumber_freshVar_11)) ;
      }}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch300NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.iltrue) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch300NameNumber_freshVar_12= tomMatch300NameNumberfreshSubject_1.getSubst() ;if ( true ) {

        return  tom.engine.adt.il.types.expr.iltrue.make(reduceSubstitutionWithMappingRules(tomMatch300NameNumber_freshVar_12)) ;
      }}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch300NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.ilfalse) ) {if ( true ) {

        return ex;
      }}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch300NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.iland) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumber_freshVar_13= tomMatch300NameNumberfreshSubject_1.getLeft() ;{  tom.engine.adt.il.types.Expr  tomMatch300NameNumber_freshVar_14= tomMatch300NameNumberfreshSubject_1.getRight() ;if ( true ) {

        return  tom.engine.adt.il.types.expr.iland.make(reduceWithMappingRules(tomMatch300NameNumber_freshVar_13), reduceWithMappingRules(tomMatch300NameNumber_freshVar_14)) ;
      }}}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch300NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.ilor) ) {{  tom.engine.adt.il.types.Expr  tomMatch300NameNumber_freshVar_15= tomMatch300NameNumberfreshSubject_1.getLeft() ;{  tom.engine.adt.il.types.Expr  tomMatch300NameNumber_freshVar_16= tomMatch300NameNumberfreshSubject_1.getRight() ;if ( true ) {

        return  tom.engine.adt.il.types.expr.ilor.make(reduceWithMappingRules(tomMatch300NameNumber_freshVar_15), reduceWithMappingRules(tomMatch300NameNumber_freshVar_16)) ;
      }}}}}}}

    System.out.println("reduceWithMappingRules : nothing applies to:" + ex);
    return ex;
  }

  protected Term reduceTermWithMappingRules(Term trm) {
    {if ( (trm instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch301NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if ( (tomMatch301NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.tau) ) {if ( true ) {

        return trm;
      }}}}if ( (trm instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch301NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if ( (tomMatch301NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.subterm) ) {{  tom.engine.adt.il.types.Symbol  tomMatch301NameNumber_freshVar_0= tomMatch301NameNumberfreshSubject_1.getSymbol() ;{  tom.engine.adt.il.types.Term  tomMatch301NameNumber_freshVar_1= tomMatch301NameNumberfreshSubject_1.getT() ;{  int  tomMatch301NameNumber_freshVar_2= tomMatch301NameNumberfreshSubject_1.getIndex() ;if ( (tomMatch301NameNumber_freshVar_1 instanceof tom.engine.adt.il.types.term.subterm) ) {if ( true ) {

        return reduceTermWithMappingRules( tom.engine.adt.il.types.term.subterm.make(tomMatch301NameNumber_freshVar_0, reduceTermWithMappingRules(tomMatch301NameNumber_freshVar_1), tomMatch301NameNumber_freshVar_2) );
      }}}}}}}}if ( (trm instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch301NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if ( (tomMatch301NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.slot) ) {{  tom.engine.adt.il.types.Symbol  tomMatch301NameNumber_freshVar_3= tomMatch301NameNumberfreshSubject_1.getSymbol() ;{  tom.engine.adt.il.types.Term  tomMatch301NameNumber_freshVar_4= tomMatch301NameNumberfreshSubject_1.getT() ;{  String  tomMatch301NameNumber_freshVar_5= tomMatch301NameNumberfreshSubject_1.getName() ;if ( (tomMatch301NameNumber_freshVar_4 instanceof tom.engine.adt.il.types.term.slot) ) {if ( true ) {

        return reduceTermWithMappingRules( tom.engine.adt.il.types.term.slot.make(tomMatch301NameNumber_freshVar_3, reduceTermWithMappingRules(tomMatch301NameNumber_freshVar_4), tomMatch301NameNumber_freshVar_5) );
      }}}}}}}}if ( (trm instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch301NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if ( (tomMatch301NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.subterm) ) {{  tom.engine.adt.il.types.Symbol  tomMatch301NameNumber_freshVar_6= tomMatch301NameNumberfreshSubject_1.getSymbol() ;{  tom.engine.adt.il.types.Term  tomMatch301NameNumber_freshVar_7= tomMatch301NameNumberfreshSubject_1.getT() ;{  int  tomMatch301NameNumber_freshVar_8= tomMatch301NameNumberfreshSubject_1.getIndex() ;if ( (tomMatch301NameNumber_freshVar_7 instanceof tom.engine.adt.il.types.term.tau) ) {{  tom.engine.adt.il.types.AbsTerm  tomMatch301NameNumber_freshVar_9= tomMatch301NameNumber_freshVar_7.getAbst() ;if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term =  tom.engine.adt.il.types.absterm.st.make(tomMatch301NameNumber_freshVar_6, tomMatch301NameNumber_freshVar_9, tomMatch301NameNumber_freshVar_8) ;
        return  tom.engine.adt.il.types.term.tau.make(term) ;
      }}}}}}}}}if ( (trm instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch301NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if ( (tomMatch301NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.slot) ) {{  tom.engine.adt.il.types.Symbol  tomMatch301NameNumber_freshVar_10= tomMatch301NameNumberfreshSubject_1.getSymbol() ;{  tom.engine.adt.il.types.Term  tomMatch301NameNumber_freshVar_11= tomMatch301NameNumberfreshSubject_1.getT() ;{  String  tomMatch301NameNumber_freshVar_12= tomMatch301NameNumberfreshSubject_1.getName() ;if ( (tomMatch301NameNumber_freshVar_11 instanceof tom.engine.adt.il.types.term.tau) ) {{  tom.engine.adt.il.types.AbsTerm  tomMatch301NameNumber_freshVar_13= tomMatch301NameNumber_freshVar_11.getAbst() ;if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term =  tom.engine.adt.il.types.absterm.sl.make(tomMatch301NameNumber_freshVar_10, tomMatch301NameNumber_freshVar_13, tomMatch301NameNumber_freshVar_12) ;
        return  tom.engine.adt.il.types.term.tau.make(term) ;
      }}}}}}}}}}

    System.out.println("reduceTermWithMappingRules : nothing applies to:" + trm);
    return trm;
  }

  protected TermList applyMappingRules(Term trm) {
    {if ( (trm instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch302NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if ( (tomMatch302NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.tau) ) {if ( true ) {

        return  tom.engine.adt.il.types.termlist.ConsconcTerm.make(trm, tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) ;
      }}}}if ( (trm instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch302NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if ( (tomMatch302NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.subterm) ) {{  tom.engine.adt.il.types.Symbol  tomMatch302NameNumber_freshVar_0= tomMatch302NameNumberfreshSubject_1.getSymbol() ;{  tom.engine.adt.il.types.Term  tomMatch302NameNumber_freshVar_1= tomMatch302NameNumberfreshSubject_1.getT() ;{  int  tomMatch302NameNumber_freshVar_2= tomMatch302NameNumberfreshSubject_1.getIndex() ;{  tom.engine.adt.il.types.Symbol  tom_s=tomMatch302NameNumber_freshVar_0;if ( (tomMatch302NameNumber_freshVar_1 instanceof tom.engine.adt.il.types.term.subterm) ) {{  int  tom_index=tomMatch302NameNumber_freshVar_2;if ( true ) {

        // first reduce the argument
        TermList reduced = applyMappingRules(tomMatch302NameNumber_freshVar_1);
        TermList res =  tom.engine.adt.il.types.termlist.ConsconcTerm.make(trm, tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) ;
        while(!reduced.isEmptyconcTerm()) {
          Term head = reduced.getHeadconcTerm();
          if (head.istau()) {
            TermList hl = applyMappingRules(head);
            while(!hl.isEmptyconcTerm()) {
              Term h = hl.getHeadconcTerm();
              res = tom_append_list_concTerm(res, tom.engine.adt.il.types.termlist.ConsconcTerm.make( tom.engine.adt.il.types.term.subterm.make(tom_s, h, tom_index) , tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) );
              hl = hl.getTailconcTerm();
            }
          } else {
            res = tom_append_list_concTerm(res, tom.engine.adt.il.types.termlist.ConsconcTerm.make( tom.engine.adt.il.types.term.subterm.make(tom_s, head, tom_index) , tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) );
          }
          reduced = reduced.getTailconcTerm();
        }
        return tom_append_list_concTerm(res, tom.engine.adt.il.types.termlist.EmptyconcTerm.make() );
      }}}}}}}}}}if ( (trm instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch302NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if ( (tomMatch302NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.slot) ) {{  tom.engine.adt.il.types.Symbol  tomMatch302NameNumber_freshVar_3= tomMatch302NameNumberfreshSubject_1.getSymbol() ;{  tom.engine.adt.il.types.Term  tomMatch302NameNumber_freshVar_4= tomMatch302NameNumberfreshSubject_1.getT() ;{  String  tomMatch302NameNumber_freshVar_5= tomMatch302NameNumberfreshSubject_1.getName() ;{  tom.engine.adt.il.types.Symbol  tom_s=tomMatch302NameNumber_freshVar_3;if ( (tomMatch302NameNumber_freshVar_4 instanceof tom.engine.adt.il.types.term.slot) ) {{  String  tom_slotName=tomMatch302NameNumber_freshVar_5;if ( true ) {

        // first reduce the argument
        TermList reduced = applyMappingRules(tomMatch302NameNumber_freshVar_4);
        TermList res =  tom.engine.adt.il.types.termlist.ConsconcTerm.make(trm, tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) ;
        while(!reduced.isEmptyconcTerm()) {
          Term head = reduced.getHeadconcTerm();
          if (head.istau()) {
            TermList hl = applyMappingRules(head);
            while(!hl.isEmptyconcTerm()) {
              Term h = hl.getHeadconcTerm();
              res = tom_append_list_concTerm(res, tom.engine.adt.il.types.termlist.ConsconcTerm.make( tom.engine.adt.il.types.term.slot.make(tom_s, h, tom_slotName) , tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) );
              hl = hl.getTailconcTerm();
            }
          } else {
            res = tom_append_list_concTerm(res, tom.engine.adt.il.types.termlist.ConsconcTerm.make( tom.engine.adt.il.types.term.slot.make(tom_s, head, tom_slotName) , tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) );
          }
          reduced = reduced.getTailconcTerm();
        }
        return tom_append_list_concTerm(res, tom.engine.adt.il.types.termlist.EmptyconcTerm.make() );
      }}}}}}}}}}if ( (trm instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch302NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if ( (tomMatch302NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.subterm) ) {{  tom.engine.adt.il.types.Symbol  tomMatch302NameNumber_freshVar_6= tomMatch302NameNumberfreshSubject_1.getSymbol() ;{  tom.engine.adt.il.types.Term  tomMatch302NameNumber_freshVar_7= tomMatch302NameNumberfreshSubject_1.getT() ;{  int  tomMatch302NameNumber_freshVar_8= tomMatch302NameNumberfreshSubject_1.getIndex() ;if ( (tomMatch302NameNumber_freshVar_7 instanceof tom.engine.adt.il.types.term.tau) ) {{  tom.engine.adt.il.types.AbsTerm  tomMatch302NameNumber_freshVar_9= tomMatch302NameNumber_freshVar_7.getAbst() ;if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term =  tom.engine.adt.il.types.absterm.st.make(tomMatch302NameNumber_freshVar_6, tomMatch302NameNumber_freshVar_9, tomMatch302NameNumber_freshVar_8) ;
        return  tom.engine.adt.il.types.termlist.ConsconcTerm.make(trm, tom.engine.adt.il.types.termlist.ConsconcTerm.make( tom.engine.adt.il.types.term.tau.make(term) , tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) ) ;
      }}}}}}}}}if ( (trm instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch302NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )trm);if ( (tomMatch302NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.slot) ) {{  tom.engine.adt.il.types.Symbol  tomMatch302NameNumber_freshVar_10= tomMatch302NameNumberfreshSubject_1.getSymbol() ;{  tom.engine.adt.il.types.Term  tomMatch302NameNumber_freshVar_11= tomMatch302NameNumberfreshSubject_1.getT() ;{  String  tomMatch302NameNumber_freshVar_12= tomMatch302NameNumberfreshSubject_1.getName() ;if ( (tomMatch302NameNumber_freshVar_11 instanceof tom.engine.adt.il.types.term.tau) ) {{  tom.engine.adt.il.types.AbsTerm  tomMatch302NameNumber_freshVar_13= tomMatch302NameNumber_freshVar_11.getAbst() ;if ( true ) {

        // we shall test if term t has symbol s
        AbsTerm term =  tom.engine.adt.il.types.absterm.sl.make(tomMatch302NameNumber_freshVar_10, tomMatch302NameNumber_freshVar_13, tomMatch302NameNumber_freshVar_12) ;
        return  tom.engine.adt.il.types.termlist.ConsconcTerm.make(trm, tom.engine.adt.il.types.termlist.ConsconcTerm.make( tom.engine.adt.il.types.term.tau.make(term) , tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) ) ;
      }}}}}}}}}}

    System.out.println("apply TermRules : nothing applies to:" + trm);
    return  tom.engine.adt.il.types.termlist.ConsconcTerm.make(trm, tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) ;
  }

  protected ExprList applyExprRules(Expr ex) {
    {if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch303NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch303NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.eq) ) {{  tom.engine.adt.il.types.Term  tomMatch303NameNumber_freshVar_0= tomMatch303NameNumberfreshSubject_1.getLt() ;{  tom.engine.adt.il.types.Term  tomMatch303NameNumber_freshVar_1= tomMatch303NameNumberfreshSubject_1.getRt() ;if ( (tomMatch303NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.term.tau) ) {{  tom.engine.adt.il.types.AbsTerm  tomMatch303NameNumber_freshVar_2= tomMatch303NameNumber_freshVar_0.getAbst() ;if ( (tomMatch303NameNumber_freshVar_1 instanceof tom.engine.adt.il.types.term.tau) ) {{  tom.engine.adt.il.types.AbsTerm  tomMatch303NameNumber_freshVar_3= tomMatch303NameNumber_freshVar_1.getAbst() ;if ( true ) {

        return  tom.engine.adt.il.types.exprlist.ConsconcExpr.make(ex, tom.engine.adt.il.types.exprlist.ConsconcExpr.make( tom.engine.adt.il.types.expr.teq.make(tomMatch303NameNumber_freshVar_2, tomMatch303NameNumber_freshVar_3) , tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ) ) ;
      }}}}}}}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch303NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch303NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.isfsym) ) {{  tom.engine.adt.il.types.Term  tomMatch303NameNumber_freshVar_4= tomMatch303NameNumberfreshSubject_1.getT() ;{  tom.engine.adt.il.types.Symbol  tomMatch303NameNumber_freshVar_5= tomMatch303NameNumberfreshSubject_1.getSymbol() ;if ( (tomMatch303NameNumber_freshVar_4 instanceof tom.engine.adt.il.types.term.tau) ) {{  tom.engine.adt.il.types.AbsTerm  tomMatch303NameNumber_freshVar_6= tomMatch303NameNumber_freshVar_4.getAbst() ;if ( true ) {

        return  tom.engine.adt.il.types.exprlist.ConsconcExpr.make(ex, tom.engine.adt.il.types.exprlist.ConsconcExpr.make( tom.engine.adt.il.types.expr.tisfsym.make(tomMatch303NameNumber_freshVar_6, tomMatch303NameNumber_freshVar_5) , tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ) ) ;
      }}}}}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch303NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch303NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.eq) ) {{  tom.engine.adt.il.types.Term  tomMatch303NameNumber_freshVar_7= tomMatch303NameNumberfreshSubject_1.getLt() ;{  tom.engine.adt.il.types.Term  tomMatch303NameNumber_freshVar_8= tomMatch303NameNumberfreshSubject_1.getRt() ;if ( true ) {

        // first reduce the argument
        Term reducedl = reverseTermList((TermList)applyMappingRules(tomMatch303NameNumber_freshVar_7)).getHeadconcTerm();
        Term reducedr = reverseTermList((TermList)applyMappingRules(tomMatch303NameNumber_freshVar_8)).getHeadconcTerm();

        ExprList taill = applyExprRules( tom.engine.adt.il.types.expr.eq.make(reducedl, reducedr) );
        ExprList res =  tom.engine.adt.il.types.exprlist.ConsconcExpr.make(ex,tom_append_list_concExpr(taill, tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() )) ;
      }}}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch303NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch303NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.isfsym) ) {{  tom.engine.adt.il.types.Term  tomMatch303NameNumber_freshVar_9= tomMatch303NameNumberfreshSubject_1.getT() ;{  tom.engine.adt.il.types.Symbol  tomMatch303NameNumber_freshVar_10= tomMatch303NameNumberfreshSubject_1.getSymbol() ;if ( true ) {

        // first reduce the argument
        TermList reduced = applyMappingRules(tomMatch303NameNumber_freshVar_9);
        ExprList res =  tom.engine.adt.il.types.exprlist.ConsconcExpr.make(ex, tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ) ;
        while(!reduced.isEmptyconcTerm()) {
          Term head = reduced.getHeadconcTerm();
          res = tom_append_list_concExpr(res, tom.engine.adt.il.types.exprlist.ConsconcExpr.make( tom.engine.adt.il.types.expr.isfsym.make(head, tomMatch303NameNumber_freshVar_10) , tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ) );
          reduced = reduced.getTailconcTerm();
        }
        {if ( (res instanceof tom.engine.adt.il.types.ExprList) ) {{  tom.engine.adt.il.types.ExprList  tomMatch304NameNumberfreshSubject_1=(( tom.engine.adt.il.types.ExprList )res);if ( ((tomMatch304NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.exprlist.ConsconcExpr) || (tomMatch304NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.exprlist.EmptyconcExpr)) ) {{  tom.engine.adt.il.types.ExprList  tomMatch304NameNumber_freshVar_0=tomMatch304NameNumberfreshSubject_1;{  tom.engine.adt.il.types.ExprList  tomMatch304NameNumber_begin_2=tomMatch304NameNumber_freshVar_0;{  tom.engine.adt.il.types.ExprList  tomMatch304NameNumber_end_3=tomMatch304NameNumber_freshVar_0;do {{{  tom.engine.adt.il.types.ExprList  tomMatch304NameNumber_freshVar_1=tomMatch304NameNumber_end_3;if (!( tomMatch304NameNumber_freshVar_1.isEmptyconcExpr() )) {{  tom.engine.adt.il.types.ExprList  tomMatch304NameNumber_freshVar_4= tomMatch304NameNumber_freshVar_1.getTailconcExpr() ;if ( tomMatch304NameNumber_freshVar_4.isEmptyconcExpr() ) {if ( true ) {

            ExprList taill = applyExprRules( tomMatch304NameNumber_freshVar_1.getHeadconcExpr() );
            return tom_append_list_concExpr(tom_get_slice_concExpr(tomMatch304NameNumber_begin_2,tomMatch304NameNumber_end_3, tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ),tom_append_list_concExpr(taill, tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ));
          }}}}}if ( tomMatch304NameNumber_end_3.isEmptyconcExpr() ) {tomMatch304NameNumber_end_3=tomMatch304NameNumber_begin_2;} else {tomMatch304NameNumber_end_3= tomMatch304NameNumber_end_3.getTailconcExpr() ;}}} while(!( tomMatch304NameNumber_end_3.equals(tomMatch304NameNumber_begin_2) ));}}}}}}}

      }}}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch303NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);if ( (tomMatch303NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.ilnot) ) {{  tom.engine.adt.il.types.Expr  tomMatch303NameNumber_freshVar_11= tomMatch303NameNumberfreshSubject_1.getExp() ;if ( true ) {

        ExprList exprList = applyExprRules(tomMatch303NameNumber_freshVar_11);
        ExprList newExprList =  tom.engine.adt.il.types.exprlist.ConsconcExpr.make(ex, tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ) ;
        while(!exprList.isEmptyconcExpr()) {
          Expr localExpr = exprList.getHeadconcExpr();
          exprList = exprList.getTailconcExpr();
          newExprList = tom_append_list_concExpr(newExprList, tom.engine.adt.il.types.exprlist.ConsconcExpr.make( tom.engine.adt.il.types.expr.ilnot.make(localExpr) , tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ) );
        }
        return newExprList;
      }}}}}if ( (ex instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch303NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )ex);{ boolean tomMatch303NameNumber_freshVar_12= false ;if ( (tomMatch303NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.iltrue) ) {tomMatch303NameNumber_freshVar_12= true ;} else {if ( (tomMatch303NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.ilfalse) ) {tomMatch303NameNumber_freshVar_12= true ;}}if ( tomMatch303NameNumber_freshVar_12== true  ) {if ( true ) {

        return  tom.engine.adt.il.types.exprlist.ConsconcExpr.make(ex, tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ) ;
      }}}}}}

    System.out.println("apply ExprRules : nothing applies to:" + ex);
    return  tom.engine.adt.il.types.exprlist.ConsconcExpr.make(ex, tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ) ;
  }

  protected Expr buildConstraint(SubstitutionList substitution, Instr pil,Instr goal) {
    {if ( (pil instanceof tom.engine.adt.il.types.Instr) ) {{  tom.engine.adt.il.types.Instr  tomMatch305NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Instr )pil);if ( (tomMatch305NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.instr.sequence) ) {{  tom.engine.adt.il.types.InstrList  tomMatch305NameNumber_freshVar_0= tomMatch305NameNumberfreshSubject_1.getInstrlist() ;if ( ((tomMatch305NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.instrlist.Conssemicolon) || (tomMatch305NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.instrlist.Emptysemicolon)) ) {{  tom.engine.adt.il.types.InstrList  tomMatch305NameNumber_freshVar_1=tomMatch305NameNumber_freshVar_0;if (!( tomMatch305NameNumber_freshVar_1.isEmptysemicolon() )) {{  tom.engine.adt.il.types.Instr  tom_h= tomMatch305NameNumber_freshVar_1.getHeadsemicolon() ;{  tom.engine.adt.il.types.InstrList  tomMatch305NameNumber_freshVar_2= tomMatch305NameNumber_freshVar_1.getTailsemicolon() ;{  tom.engine.adt.il.types.InstrList  tom_t=tomMatch305NameNumber_freshVar_2;if ( true ) {

        Expr goalFromHead = buildConstraint(substitution,tom_h,goal);
        if (!tom_t.isEmptysemicolon()) {
          Expr refuseFromHead = buildConstraint(substitution,tom_h, tom.engine.adt.il.types.instr.refuse.make() );
          Expr goalFromTail = buildConstraint(substitution, tom.engine.adt.il.types.instr.sequence.make(tom_t) ,goal);
          if(this.isCamlSemantics()) {
            return  tom.engine.adt.il.types.expr.ilor.make(goalFromHead,  tom.engine.adt.il.types.expr.iland.make(refuseFromHead, goalFromTail) ) ;
          } else {
            return  tom.engine.adt.il.types.expr.ilor.make(goalFromHead, goalFromTail) ;
          }
        } else {
          return goalFromHead;
        }
      }}}}}}}}}}}if ( (pil instanceof tom.engine.adt.il.types.Instr) ) {{  tom.engine.adt.il.types.Instr  tomMatch305NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Instr )pil);if ( (tomMatch305NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.instr.ILLet) ) {{  tom.engine.adt.il.types.Variable  tomMatch305NameNumber_freshVar_4= tomMatch305NameNumberfreshSubject_1.getVar() ;{  tom.engine.adt.il.types.Term  tomMatch305NameNumber_freshVar_5= tomMatch305NameNumberfreshSubject_1.getT() ;{  tom.engine.adt.il.types.Instr  tomMatch305NameNumber_freshVar_6= tomMatch305NameNumberfreshSubject_1.getBody() ;if ( true ) {

        // update the substitution
        Term t = replaceVariablesInTerm( tom.engine.adt.il.types.term.appSubsT.make(substitution, tomMatch305NameNumber_freshVar_5) );
        substitution = tom_append_list_subs(substitution, tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.is.make(tomMatch305NameNumber_freshVar_4, t) , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) );
        //return `iland(eq(tau(absvar(x)),u),buildConstraint(substitution,i,goal));
        return buildConstraint(substitution,tomMatch305NameNumber_freshVar_6,goal);
      }}}}}}}if ( (pil instanceof tom.engine.adt.il.types.Instr) ) {{  tom.engine.adt.il.types.Instr  tomMatch305NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Instr )pil);if ( (tomMatch305NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.instr.ITE) ) {{  tom.engine.adt.il.types.Expr  tomMatch305NameNumber_freshVar_7= tomMatch305NameNumberfreshSubject_1.getE() ;{  tom.engine.adt.il.types.Instr  tomMatch305NameNumber_freshVar_8= tomMatch305NameNumberfreshSubject_1.getIft() ;{  tom.engine.adt.il.types.Instr  tomMatch305NameNumber_freshVar_9= tomMatch305NameNumberfreshSubject_1.getIff() ;if ( true ) {

        Expr closedExpr = replaceVariablesInExpr( tom.engine.adt.il.types.expr.appSubsE.make(substitution, tomMatch305NameNumber_freshVar_7) );
        Expr constraintTrue  =  tom.engine.adt.il.types.expr.iland.make(closedExpr, buildConstraint(substitution,tomMatch305NameNumber_freshVar_8,goal)) ;
        Expr constraintFalse =  tom.engine.adt.il.types.expr.iland.make( tom.engine.adt.il.types.expr.ilnot.make(closedExpr) , buildConstraint(substitution,tomMatch305NameNumber_freshVar_9,goal)) ;
        return  tom.engine.adt.il.types.expr.ilor.make(constraintTrue, constraintFalse) ;
      }}}}}}}if ( (pil instanceof tom.engine.adt.il.types.Instr) ) {{  tom.engine.adt.il.types.Instr  tomMatch305NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Instr )pil);if ( (tomMatch305NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.instr.refuse) ) {if ( true ) {

        if (pil == goal) {
          return  tom.engine.adt.il.types.expr.iltrue.make( tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) ) ;
        } else {
          return  tom.engine.adt.il.types.expr.ilfalse.make() ;
        }
      }}}}if ( (pil instanceof tom.engine.adt.il.types.Instr) ) {{  tom.engine.adt.il.types.Instr  tomMatch305NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Instr )pil);if ( (tomMatch305NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.instr.accept) ) {if ( true ) {

        if (pil == goal) {
          return  tom.engine.adt.il.types.expr.iltrue.make(substitution) ;
        } else {
          return  tom.engine.adt.il.types.expr.ilfalse.make() ;
        }
      }}}}}

    // default case, should not happen
    return  tom.engine.adt.il.types.expr.ilfalse.make() ;
  }

  protected Collection applySemanticsRules(Deriv post) {
    Collection c = new HashSet();
    {if ( (post instanceof tom.engine.adt.il.types.Deriv) ) {{  tom.engine.adt.il.types.Deriv  tomMatch306NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Deriv )post);if ( (tomMatch306NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.deriv.ebs) ) {{  tom.engine.adt.il.types.Environment  tomMatch306NameNumber_freshVar_0= tomMatch306NameNumberfreshSubject_1.getLhs() ;{  tom.engine.adt.il.types.Environment  tomMatch306NameNumber_freshVar_1= tomMatch306NameNumberfreshSubject_1.getRhs() ;if ( (tomMatch306NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_2= tomMatch306NameNumber_freshVar_0.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_3= tomMatch306NameNumber_freshVar_0.getI() ;{  tom.engine.adt.il.types.SubstitutionList  tom_e=tomMatch306NameNumber_freshVar_2;if ( (tomMatch306NameNumber_freshVar_3 instanceof tom.engine.adt.il.types.instr.sequence) ) {{  tom.engine.adt.il.types.InstrList  tomMatch306NameNumber_freshVar_4= tomMatch306NameNumber_freshVar_3.getInstrlist() ;if ( ((tomMatch306NameNumber_freshVar_4 instanceof tom.engine.adt.il.types.instrlist.Conssemicolon) || (tomMatch306NameNumber_freshVar_4 instanceof tom.engine.adt.il.types.instrlist.Emptysemicolon)) ) {{  tom.engine.adt.il.types.InstrList  tomMatch306NameNumber_freshVar_7=tomMatch306NameNumber_freshVar_4;if (!( tomMatch306NameNumber_freshVar_7.isEmptysemicolon() )) {{  tom.engine.adt.il.types.Instr  tom_h= tomMatch306NameNumber_freshVar_7.getHeadsemicolon() ;{  tom.engine.adt.il.types.InstrList  tomMatch306NameNumber_freshVar_8= tomMatch306NameNumber_freshVar_7.getTailsemicolon() ;if ( (tomMatch306NameNumber_freshVar_1 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_5= tomMatch306NameNumber_freshVar_1.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_6= tomMatch306NameNumber_freshVar_1.getI() ;if ( ((tomMatch306NameNumber_freshVar_5 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch306NameNumber_freshVar_5 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_10=tomMatch306NameNumber_freshVar_5;if (!( tomMatch306NameNumber_freshVar_10.isEmptysubs() )) {if ( ( tomMatch306NameNumber_freshVar_10.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.undefsubs) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_11= tomMatch306NameNumber_freshVar_10.getTailsubs() ;if ( tomMatch306NameNumber_freshVar_11.isEmptysubs() ) {{  tom.engine.adt.il.types.Instr  tom_ip=tomMatch306NameNumber_freshVar_6;if ( true ) {

        if(instructionContains(tom_h,tom_ip)) {
          // ends the derivation
          Deriv up =  tom.engine.adt.il.types.deriv.ebs.make( tom.engine.adt.il.types.environment.env.make(tom_e, tom_h) ,  tom.engine.adt.il.types.environment.env.make( tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) , tom_ip) ) ;
          Collection pre_list = applySemanticsRules(up);

          Iterator it = pre_list.iterator();
          while(it.hasNext()) {
            DerivTree pre = (DerivTree) it.next();
            c.add( tom.engine.adt.il.types.derivtree.derivrule.make("seqa", post, pre,  tom.engine.adt.il.types.seq.seq.make() ) );
          }
        } else {
          // continue the derivation with t
          Deriv up =  tom.engine.adt.il.types.deriv.ebs.make( tom.engine.adt.il.types.environment.env.make(tom_e,  tom.engine.adt.il.types.instr.sequence.make(tomMatch306NameNumber_freshVar_8) ) ,  tom.engine.adt.il.types.environment.env.make( tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) , tom_ip) ) ;
          Collection post_list = applySemanticsRules(up);

          if(this.isCamlSemantics()) {
            up =  tom.engine.adt.il.types.deriv.ebs.make( tom.engine.adt.il.types.environment.env.make(tom_e, tom_h) ,  tom.engine.adt.il.types.environment.env.make( tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) ,  tom.engine.adt.il.types.instr.refuse.make() ) ) ;
            Collection pre_list = applySemanticsRules(up);
            Iterator it = pre_list.iterator();
            while(it.hasNext()) {
              DerivTree pre = (DerivTree) it.next();
              Iterator it2 = post_list.iterator();
              while(it2.hasNext()) {
                DerivTree pre2 = (DerivTree) it2.next();
                c.add( tom.engine.adt.il.types.derivtree.derivrule2.make("seqb", post, pre, pre2,  tom.engine.adt.il.types.seq.seq.make() ) );
              }
            }
          } else {
            Iterator it = post_list.iterator();
            while(it.hasNext()) {
              DerivTree pre = (DerivTree) it.next();
              c.add( tom.engine.adt.il.types.derivtree.derivrule2.make("seqb", post,  tom.engine.adt.il.types.derivtree.endderiv.make() , pre,  tom.engine.adt.il.types.seq.seq.make() ) );
            }
          }
        }
      }}}}}}}}}}}}}}}}}}}}}}}}}}}if ( (post instanceof tom.engine.adt.il.types.Deriv) ) {{  tom.engine.adt.il.types.Deriv  tomMatch306NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Deriv )post);if ( (tomMatch306NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.deriv.ebs) ) {{  tom.engine.adt.il.types.Environment  tomMatch306NameNumber_freshVar_12= tomMatch306NameNumberfreshSubject_1.getLhs() ;{  tom.engine.adt.il.types.Environment  tomMatch306NameNumber_freshVar_13= tomMatch306NameNumberfreshSubject_1.getRhs() ;if ( (tomMatch306NameNumber_freshVar_12 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_14= tomMatch306NameNumber_freshVar_12.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_15= tomMatch306NameNumber_freshVar_12.getI() ;{  tom.engine.adt.il.types.SubstitutionList  tom_e=tomMatch306NameNumber_freshVar_14;if ( (tomMatch306NameNumber_freshVar_15 instanceof tom.engine.adt.il.types.instr.ILLet) ) {{  tom.engine.adt.il.types.Variable  tomMatch306NameNumber_freshVar_16= tomMatch306NameNumber_freshVar_15.getVar() ;{  tom.engine.adt.il.types.Term  tomMatch306NameNumber_freshVar_17= tomMatch306NameNumber_freshVar_15.getT() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_18= tomMatch306NameNumber_freshVar_15.getBody() ;if ( (tomMatch306NameNumber_freshVar_13 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_19= tomMatch306NameNumber_freshVar_13.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_20= tomMatch306NameNumber_freshVar_13.getI() ;if ( ((tomMatch306NameNumber_freshVar_19 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch306NameNumber_freshVar_19 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_21=tomMatch306NameNumber_freshVar_19;if (!( tomMatch306NameNumber_freshVar_21.isEmptysubs() )) {if ( ( tomMatch306NameNumber_freshVar_21.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.undefsubs) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_22= tomMatch306NameNumber_freshVar_21.getTailsubs() ;if ( tomMatch306NameNumber_freshVar_22.isEmptysubs() ) {if ( true ) {


        // build condition
        Seq cond = seqFromTerm( tom.engine.adt.il.types.term.appSubsT.make(tom_e, tomMatch306NameNumber_freshVar_17) );
        // find "t"
        Term t = null;
        {if ( (cond instanceof tom.engine.adt.il.types.Seq) ) {{  tom.engine.adt.il.types.Seq  tomMatch307NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Seq )cond);if ( (tomMatch307NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.seq.dedterm) ) {{  tom.engine.adt.il.types.TermList  tomMatch307NameNumber_freshVar_0= tomMatch307NameNumberfreshSubject_1.getTerms() ;if ( ((tomMatch307NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.termlist.ConsconcTerm) || (tomMatch307NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.termlist.EmptyconcTerm)) ) {{  tom.engine.adt.il.types.TermList  tomMatch307NameNumber_freshVar_1=tomMatch307NameNumber_freshVar_0;{  tom.engine.adt.il.types.TermList  tomMatch307NameNumber_begin_3=tomMatch307NameNumber_freshVar_1;{  tom.engine.adt.il.types.TermList  tomMatch307NameNumber_end_4=tomMatch307NameNumber_freshVar_1;do {{{  tom.engine.adt.il.types.TermList  tomMatch307NameNumber_freshVar_2=tomMatch307NameNumber_end_4;if (!( tomMatch307NameNumber_freshVar_2.isEmptyconcTerm() )) {{  tom.engine.adt.il.types.TermList  tomMatch307NameNumber_freshVar_5= tomMatch307NameNumber_freshVar_2.getTailconcTerm() ;if ( tomMatch307NameNumber_freshVar_5.isEmptyconcTerm() ) {if ( true ) {
 t =  tomMatch307NameNumber_freshVar_2.getHeadconcTerm() ; }}}}}if ( tomMatch307NameNumber_end_4.isEmptyconcTerm() ) {tomMatch307NameNumber_end_4=tomMatch307NameNumber_begin_3;} else {tomMatch307NameNumber_end_4= tomMatch307NameNumber_end_4.getTailconcTerm() ;}}} while(!( tomMatch307NameNumber_end_4.equals(tomMatch307NameNumber_begin_3) ));}}}}}}}}if ( (cond instanceof tom.engine.adt.il.types.Seq) ) {{  tom.engine.adt.il.types.Seq  tomMatch307NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Seq )cond);if ( true ) {
 if (t == null) {
              System.out.println("seqFromTerm has a problem with " + cond);
            }
          }}}}

        Deriv up =  tom.engine.adt.il.types.deriv.ebs.make( tom.engine.adt.il.types.environment.env.make(tom_append_list_subs(tom_e, tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.is.make(tomMatch306NameNumber_freshVar_16, t) , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) ), tomMatch306NameNumber_freshVar_18) ,  tom.engine.adt.il.types.environment.env.make( tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) , tomMatch306NameNumber_freshVar_20) 
            ) 


;
        Collection pre_list = applySemanticsRules(up);
        Iterator it = pre_list.iterator();
        while(it.hasNext()) {
          DerivTree pre = (DerivTree) it.next();
          c.add( tom.engine.adt.il.types.derivtree.derivrule.make("let", post, pre, cond) );
        }
      }}}}}}}}}}}}}}}}}}}}}}}if ( (post instanceof tom.engine.adt.il.types.Deriv) ) {{  tom.engine.adt.il.types.Deriv  tomMatch306NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Deriv )post);if ( (tomMatch306NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.deriv.ebs) ) {{  tom.engine.adt.il.types.Environment  tomMatch306NameNumber_freshVar_23= tomMatch306NameNumberfreshSubject_1.getLhs() ;{  tom.engine.adt.il.types.Environment  tomMatch306NameNumber_freshVar_24= tomMatch306NameNumberfreshSubject_1.getRhs() ;if ( (tomMatch306NameNumber_freshVar_23 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_25= tomMatch306NameNumber_freshVar_23.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_26= tomMatch306NameNumber_freshVar_23.getI() ;{  tom.engine.adt.il.types.SubstitutionList  tom_e=tomMatch306NameNumber_freshVar_25;if ( (tomMatch306NameNumber_freshVar_26 instanceof tom.engine.adt.il.types.instr.ITE) ) {{  tom.engine.adt.il.types.Expr  tomMatch306NameNumber_freshVar_27= tomMatch306NameNumber_freshVar_26.getE() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_28= tomMatch306NameNumber_freshVar_26.getIft() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_29= tomMatch306NameNumber_freshVar_26.getIff() ;if ( (tomMatch306NameNumber_freshVar_24 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_30= tomMatch306NameNumber_freshVar_24.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_31= tomMatch306NameNumber_freshVar_24.getI() ;if ( ((tomMatch306NameNumber_freshVar_30 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch306NameNumber_freshVar_30 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_32=tomMatch306NameNumber_freshVar_30;if (!( tomMatch306NameNumber_freshVar_32.isEmptysubs() )) {if ( ( tomMatch306NameNumber_freshVar_32.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.undefsubs) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_33= tomMatch306NameNumber_freshVar_32.getTailsubs() ;if ( tomMatch306NameNumber_freshVar_33.isEmptysubs() ) {{  tom.engine.adt.il.types.Instr  tom_ip=tomMatch306NameNumber_freshVar_31;if ( true ) {


        // build condition
        ExprList cond = exprListFromExpr( tom.engine.adt.il.types.expr.appSubsE.make(tom_e, tomMatch306NameNumber_freshVar_27) );

        Deriv up =  tom.engine.adt.il.types.deriv.ebs.make( tom.engine.adt.il.types.environment.env.make(tom_e, tomMatch306NameNumber_freshVar_28) ,  tom.engine.adt.il.types.environment.env.make( tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) , tom_ip) ) ;
        String rulename = "iftrue";

        Collection pre_list = applySemanticsRules(up);
        Iterator it = pre_list.iterator();
        while(it.hasNext()) {
          DerivTree pre = (DerivTree) it.next();
          c.add( tom.engine.adt.il.types.derivtree.derivrule.make(rulename, post, pre,  tom.engine.adt.il.types.seq.dedexpr.make(tom_append_list_concExpr(cond, tom.engine.adt.il.types.exprlist.ConsconcExpr.make( tom.engine.adt.il.types.expr.iltrue.make( tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) ) , tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ) )) ) );
        }

        up =  tom.engine.adt.il.types.deriv.ebs.make( tom.engine.adt.il.types.environment.env.make(tom_e, tomMatch306NameNumber_freshVar_29) ,  tom.engine.adt.il.types.environment.env.make( tom.engine.adt.il.types.substitutionlist.Conssubs.make( tom.engine.adt.il.types.substitution.undefsubs.make() , tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) , tom_ip) ) ;
        rulename = "iffalse";

        pre_list = applySemanticsRules(up);
        it = pre_list.iterator();
        while(it.hasNext()) {
          DerivTree pre = (DerivTree) it.next();
          c.add( tom.engine.adt.il.types.derivtree.derivrule.make(rulename, post, pre,  tom.engine.adt.il.types.seq.dedexpr.make(tom_append_list_concExpr(cond, tom.engine.adt.il.types.exprlist.ConsconcExpr.make( tom.engine.adt.il.types.expr.ilfalse.make() , tom.engine.adt.il.types.exprlist.EmptyconcExpr.make() ) )) ) );
        }
      }}}}}}}}}}}}}}}}}}}}}}}}if ( (post instanceof tom.engine.adt.il.types.Deriv) ) {{  tom.engine.adt.il.types.Deriv  tomMatch306NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Deriv )post);if ( (tomMatch306NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.deriv.ebs) ) {{  tom.engine.adt.il.types.Environment  tomMatch306NameNumber_freshVar_34= tomMatch306NameNumberfreshSubject_1.getLhs() ;{  tom.engine.adt.il.types.Environment  tomMatch306NameNumber_freshVar_35= tomMatch306NameNumberfreshSubject_1.getRhs() ;if ( (tomMatch306NameNumber_freshVar_34 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_36= tomMatch306NameNumber_freshVar_34.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_37= tomMatch306NameNumber_freshVar_34.getI() ;if ( (tomMatch306NameNumber_freshVar_37 instanceof tom.engine.adt.il.types.instr.accept) ) {if ( (tomMatch306NameNumber_freshVar_35 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_38= tomMatch306NameNumber_freshVar_35.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_39= tomMatch306NameNumber_freshVar_35.getI() ;if ( ((tomMatch306NameNumber_freshVar_38 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch306NameNumber_freshVar_38 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_40=tomMatch306NameNumber_freshVar_38;if (!( tomMatch306NameNumber_freshVar_40.isEmptysubs() )) {if ( ( tomMatch306NameNumber_freshVar_40.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.undefsubs) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_41= tomMatch306NameNumber_freshVar_40.getTailsubs() ;if ( tomMatch306NameNumber_freshVar_41.isEmptysubs() ) {if ( (tomMatch306NameNumber_freshVar_39 instanceof tom.engine.adt.il.types.instr.accept) ) {if ( true ) {


        c.add( tom.engine.adt.il.types.derivtree.derivrule.make("axiom_accept", post,  tom.engine.adt.il.types.derivtree.endderiv.make() ,  tom.engine.adt.il.types.seq.seq.make() ) );
      }}}}}}}}}}}}}}}}}}}}if ( (post instanceof tom.engine.adt.il.types.Deriv) ) {{  tom.engine.adt.il.types.Deriv  tomMatch306NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Deriv )post);if ( (tomMatch306NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.deriv.ebs) ) {{  tom.engine.adt.il.types.Environment  tomMatch306NameNumber_freshVar_42= tomMatch306NameNumberfreshSubject_1.getLhs() ;{  tom.engine.adt.il.types.Environment  tomMatch306NameNumber_freshVar_43= tomMatch306NameNumberfreshSubject_1.getRhs() ;if ( (tomMatch306NameNumber_freshVar_42 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_44= tomMatch306NameNumber_freshVar_42.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_45= tomMatch306NameNumber_freshVar_42.getI() ;if ( (tomMatch306NameNumber_freshVar_45 instanceof tom.engine.adt.il.types.instr.refuse) ) {if ( (tomMatch306NameNumber_freshVar_43 instanceof tom.engine.adt.il.types.environment.env) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_46= tomMatch306NameNumber_freshVar_43.getSubs() ;{  tom.engine.adt.il.types.Instr  tomMatch306NameNumber_freshVar_47= tomMatch306NameNumber_freshVar_43.getI() ;if ( ((tomMatch306NameNumber_freshVar_46 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch306NameNumber_freshVar_46 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_48=tomMatch306NameNumber_freshVar_46;if (!( tomMatch306NameNumber_freshVar_48.isEmptysubs() )) {if ( ( tomMatch306NameNumber_freshVar_48.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.undefsubs) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch306NameNumber_freshVar_49= tomMatch306NameNumber_freshVar_48.getTailsubs() ;if ( tomMatch306NameNumber_freshVar_49.isEmptysubs() ) {if ( (tomMatch306NameNumber_freshVar_47 instanceof tom.engine.adt.il.types.instr.refuse) ) {if ( true ) {

        c.add( tom.engine.adt.il.types.derivtree.derivrule.make("axiom_refuse", post,  tom.engine.adt.il.types.derivtree.endderiv.make() ,  tom.engine.adt.il.types.seq.seq.make() ) );
      }}}}}}}}}}}}}}}}}}}}if ( (post instanceof tom.engine.adt.il.types.Deriv) ) {{  tom.engine.adt.il.types.Deriv  tomMatch306NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Deriv )post);if ( true ) {

        if (c.isEmpty()) {
            //System.out.println("Error " + post);
        }
      }}}}

    return c;
  }

  private static class stratInstructionContains extends  tom.engine.adt.il.IlBasicStrategy  {private  tom.engine.adt.il.types.Instr  goal; private  java.util.Collection  c; public stratInstructionContains( tom.engine.adt.il.types.Instr  goal,  java.util.Collection  c) { super(( new tom.library.sl.Identity() ));this.goal=goal;this.c=c;}public  tom.engine.adt.il.types.Instr  getgoal() { return goal;}public  java.util.Collection  getc() { return c;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.il.types.Instr  visit_Instr( tom.engine.adt.il.types.Instr  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.il.types.Instr) ) {{  tom.engine.adt.il.types.Instr  tomMatch308NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Instr )tom__arg);{  tom.engine.adt.il.types.Instr  tom_x=tomMatch308NameNumberfreshSubject_1;if ( true ) {


        if (tom_x== goal) {
          c.add(goal);
          ( new tom.library.sl.Fail() ).visitLight(tom_x);
        }
      }}}}}return super.visit_Instr(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_stratInstructionContains( tom.engine.adt.il.types.Instr  t0,  java.util.Collection  t1) { return new stratInstructionContains(t0,t1); }


  protected boolean instructionContains(Instr i, Instr goal) {
    Collection collect = new HashSet();
    try {
      ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("x") ),tom_make_Try(( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ),( null )) )==null)?tom_make_stratInstructionContains(goal,collect):new tom.library.sl.Sequence(tom_make_stratInstructionContains(goal,collect),( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ),( null )) )) ))) ).visitLight(i);
    } catch(tom.library.sl.VisitFailure e) {
      System.out.println("strategy instructionContains failed");
    }
    return !collect.isEmpty();
  }

/**
 * To replace undefsubst in tree by the computed value
 * which leads to axiom
 */
  private static class replaceUndefsubs extends  tom.engine.adt.il.IlBasicStrategy  {private  tom.engine.adt.il.types.SubstitutionList  arg; public replaceUndefsubs( tom.engine.adt.il.types.SubstitutionList  arg) { super(( new tom.library.sl.Identity() ));this.arg=arg;}public  tom.engine.adt.il.types.SubstitutionList  getarg() { return arg;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.il.types.SubstitutionList  visit_SubstitutionList( tom.engine.adt.il.types.SubstitutionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.il.types.SubstitutionList) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch309NameNumberfreshSubject_1=(( tom.engine.adt.il.types.SubstitutionList )tom__arg);if ( ((tomMatch309NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch309NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch309NameNumber_freshVar_0=tomMatch309NameNumberfreshSubject_1;if (!( tomMatch309NameNumber_freshVar_0.isEmptysubs() )) {if ( ( tomMatch309NameNumber_freshVar_0.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.undefsubs) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch309NameNumber_freshVar_1= tomMatch309NameNumber_freshVar_0.getTailsubs() ;if ( tomMatch309NameNumber_freshVar_1.isEmptysubs() ) {if ( true ) {


        return arg;
      }}}}}}}}}}return super.visit_SubstitutionList(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_replaceUndefsubs( tom.engine.adt.il.types.SubstitutionList  t0) { return new replaceUndefsubs(t0); }



  private DerivTree replaceUndefinedSubstitution(DerivTree subject,
                                      SubstitutionList subs) {
    try {
      subject = (DerivTree) tom_make_TopDown(tom_make_replaceUndefsubs(subs)).visitLight(subject);
    } catch (tom.library.sl.VisitFailure e) {
      throw new TomRuntimeException("Strategy replaceUndefsubs failed");
    }
    return subject;
  }

  



  static private class SubstRef {
    private SubstitutionList sublist;
    public SubstRef(SubstitutionList slist) {
      sublist = slist;
    }
    public void set(SubstitutionList ssublist) {
      this.sublist = ssublist;
    }
    public SubstitutionList get() {
      return sublist;
    }
  }

  /**
   * These functions deals with substitution application
   */
  private static class replaceVariableByTerm extends  tom.engine.adt.il.IlBasicStrategy  {private  java.util.Map  map; public replaceVariableByTerm( java.util.Map  map) { super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.Map  getmap() { return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.il.types.Term  visit_Term( tom.engine.adt.il.types.Term  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch310NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )tom__arg);if ( (tomMatch310NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.tau) ) {{  tom.engine.adt.il.types.AbsTerm  tomMatch310NameNumber_freshVar_0= tomMatch310NameNumberfreshSubject_1.getAbst() ;if ( (tomMatch310NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.absterm.absvar) ) {{  tom.engine.adt.il.types.Variable  tomMatch310NameNumber_freshVar_1= tomMatch310NameNumber_freshVar_0.getVarname() ;if ( (tomMatch310NameNumber_freshVar_1 instanceof tom.engine.adt.il.types.variable.var) ) {{  tom.engine.adt.il.types.Variable  tom_v=tomMatch310NameNumber_freshVar_1;if ( true ) {


        if (map.containsKey(tom_v)) {
          return (Term)map.get(tom_v);
        }
        return tomMatch310NameNumberfreshSubject_1;
      }}}}}}}}}}return super.visit_Term(tom__arg,introspector); }}private static  tom.library.sl.Strategy  tom_make_replaceVariableByTerm( java.util.Map  t0) { return new replaceVariableByTerm(t0); }



  public Term replaceVariablesInTerm(Term subject) {
    {if ( (subject instanceof tom.engine.adt.il.types.Term) ) {{  tom.engine.adt.il.types.Term  tomMatch311NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Term )subject);if ( (tomMatch311NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.term.appSubsT) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch311NameNumber_freshVar_0= tomMatch311NameNumberfreshSubject_1.getSubs() ;{  tom.engine.adt.il.types.Term  tomMatch311NameNumber_freshVar_1= tomMatch311NameNumberfreshSubject_1.getT() ;{  tom.engine.adt.il.types.Term  tom_term=tomMatch311NameNumber_freshVar_1;if ( true ) {

        Map map = buildVariableMap(tomMatch311NameNumber_freshVar_0, new HashMap());
        Term t = tom_term;
        try {
          t = (Term) tom_make_TopDown(tom_make_replaceVariableByTerm(map)).visitLight(tom_term);
        } catch (tom.library.sl.VisitFailure e) {
          throw new TomRuntimeException("Strategy replaceVariableByTerm failed");
        }
        return t;
      }}}}}}}}

    return subject;
  }

  public Expr replaceVariablesInExpr(Expr subject) {
    {if ( (subject instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch312NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )subject);if ( (tomMatch312NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.appSubsE) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch312NameNumber_freshVar_0= tomMatch312NameNumberfreshSubject_1.getSubs() ;{  tom.engine.adt.il.types.Expr  tomMatch312NameNumber_freshVar_1= tomMatch312NameNumberfreshSubject_1.getE() ;{  tom.engine.adt.il.types.Expr  tom_term=tomMatch312NameNumber_freshVar_1;if ( true ) {

        Map map = buildVariableMap(tomMatch312NameNumber_freshVar_0, new HashMap());
        Expr t = tom_term;
        try {
          t = (Expr) tom_make_TopDown(tom_make_replaceVariableByTerm(map)).visitLight(tom_term);
        } catch (tom.library.sl.VisitFailure e) {
          throw new TomRuntimeException("Strategy replaceVariableByTerm failed");
        }
        return t;
      }}}}}}}}

    return subject;
  }

  private Map buildVariableMap(SubstitutionList sublist, Map map) {
    {if ( (sublist instanceof tom.engine.adt.il.types.SubstitutionList) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch313NameNumberfreshSubject_1=(( tom.engine.adt.il.types.SubstitutionList )sublist);if ( ((tomMatch313NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch313NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch313NameNumber_freshVar_0=tomMatch313NameNumberfreshSubject_1;if ( tomMatch313NameNumber_freshVar_0.isEmptysubs() ) {if ( true ) {
 return map; }}}}}}if ( (sublist instanceof tom.engine.adt.il.types.SubstitutionList) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch313NameNumberfreshSubject_1=(( tom.engine.adt.il.types.SubstitutionList )sublist);if ( ((tomMatch313NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch313NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch313NameNumber_freshVar_1=tomMatch313NameNumberfreshSubject_1;if (!( tomMatch313NameNumber_freshVar_1.isEmptysubs() )) {if ( ( tomMatch313NameNumber_freshVar_1.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.undefsubs) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch313NameNumber_freshVar_2= tomMatch313NameNumber_freshVar_1.getTailsubs() ;if ( true ) {
 return buildVariableMap(tomMatch313NameNumber_freshVar_2,map);}}}}}}}}if ( (sublist instanceof tom.engine.adt.il.types.SubstitutionList) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch313NameNumberfreshSubject_1=(( tom.engine.adt.il.types.SubstitutionList )sublist);if ( ((tomMatch313NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Conssubs) || (tomMatch313NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.substitutionlist.Emptysubs)) ) {{  tom.engine.adt.il.types.SubstitutionList  tomMatch313NameNumber_freshVar_4=tomMatch313NameNumberfreshSubject_1;if (!( tomMatch313NameNumber_freshVar_4.isEmptysubs() )) {if ( ( tomMatch313NameNumber_freshVar_4.getHeadsubs()  instanceof tom.engine.adt.il.types.substitution.is) ) {{  tom.engine.adt.il.types.Variable  tomMatch313NameNumber_freshVar_7=  tomMatch313NameNumber_freshVar_4.getHeadsubs() .getVar() ;{  tom.engine.adt.il.types.Term  tomMatch313NameNumber_freshVar_8=  tomMatch313NameNumber_freshVar_4.getHeadsubs() .getTerm() ;{  tom.engine.adt.il.types.SubstitutionList  tomMatch313NameNumber_freshVar_5= tomMatch313NameNumber_freshVar_4.getTailsubs() ;if ( true ) {

        map.put(tomMatch313NameNumber_freshVar_7,tomMatch313NameNumber_freshVar_8);
        return buildVariableMap(tomMatch313NameNumber_freshVar_5,map);
      }}}}}}}}}}}

    return null;
  }

  public void mappingReduce(Map input) {
    Iterator it = input.keySet().iterator();
    while(it.hasNext()) {
      Object key = it.next();
      Expr value = (Expr) input.get(key);
      input.put(key,reduceWithMappingRules(value));
    }
  }

  public void booleanReduce(Map input) {
    Iterator it = input.keySet().iterator();
    while(it.hasNext()) {
      Object key = it.next();
      Expr value = (Expr) input.get(key);
      input.put(key,booleanSimplify(value));
    }
  }

  public Expr booleanSimplify(Expr expr) {
    Strategy booleanSimplifier = new BooleanSimplifier();
    Expr res =  tom.engine.adt.il.types.expr.ilfalse.make() ;
    try {
      res = (Expr) tom_make_InnermostId(booleanSimplifier).visitLight(expr);
    } catch (tom.library.sl.VisitFailure e) {
      System.out.println("humm");
    }
    return res;
  }

  public class BooleanSimplifier extends IlBasicStrategy {
    public BooleanSimplifier() {
      super(( new tom.library.sl.Identity() ));
    }

    public Expr visit_Expr(Expr arg) throws tom.library.sl.VisitFailure {
      {if ( (arg instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )arg);if ( (tomMatch314NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.iland) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_0= tomMatch314NameNumberfreshSubject_1.getLeft() ;{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_1= tomMatch314NameNumberfreshSubject_1.getRight() ;if ( (tomMatch314NameNumber_freshVar_0 instanceof tom.engine.adt.il.types.expr.ilfalse) ) {if ( true ) {

          return  tom.engine.adt.il.types.expr.ilfalse.make() ;
        }}}}}}}if ( (arg instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )arg);if ( (tomMatch314NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.iland) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_2= tomMatch314NameNumberfreshSubject_1.getLeft() ;{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_3= tomMatch314NameNumberfreshSubject_1.getRight() ;if ( (tomMatch314NameNumber_freshVar_3 instanceof tom.engine.adt.il.types.expr.ilfalse) ) {if ( true ) {

          return  tom.engine.adt.il.types.expr.ilfalse.make() ;
        }}}}}}}if ( (arg instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )arg);if ( (tomMatch314NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.ilor) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_4= tomMatch314NameNumberfreshSubject_1.getLeft() ;{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_5= tomMatch314NameNumberfreshSubject_1.getRight() ;if ( (tomMatch314NameNumber_freshVar_4 instanceof tom.engine.adt.il.types.expr.iltrue) ) {if ( true ) {

          return tomMatch314NameNumber_freshVar_4;
        }}}}}}}if ( (arg instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )arg);if ( (tomMatch314NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.ilor) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_6= tomMatch314NameNumberfreshSubject_1.getLeft() ;{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_7= tomMatch314NameNumberfreshSubject_1.getRight() ;if ( (tomMatch314NameNumber_freshVar_7 instanceof tom.engine.adt.il.types.expr.iltrue) ) {if ( true ) {

          return tomMatch314NameNumber_freshVar_7;
        }}}}}}}if ( (arg instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )arg);if ( (tomMatch314NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.ilor) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_8= tomMatch314NameNumberfreshSubject_1.getLeft() ;{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_9= tomMatch314NameNumberfreshSubject_1.getRight() ;if ( (tomMatch314NameNumber_freshVar_8 instanceof tom.engine.adt.il.types.expr.ilfalse) ) {if ( true ) {

          return tomMatch314NameNumber_freshVar_9;
        }}}}}}}if ( (arg instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )arg);if ( (tomMatch314NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.ilor) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_10= tomMatch314NameNumberfreshSubject_1.getLeft() ;{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_11= tomMatch314NameNumberfreshSubject_1.getRight() ;if ( (tomMatch314NameNumber_freshVar_11 instanceof tom.engine.adt.il.types.expr.ilfalse) ) {if ( true ) {

          return tomMatch314NameNumber_freshVar_10;
        }}}}}}}if ( (arg instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )arg);if ( (tomMatch314NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.ilnot) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_12= tomMatch314NameNumberfreshSubject_1.getExp() ;if ( (tomMatch314NameNumber_freshVar_12 instanceof tom.engine.adt.il.types.expr.iltrue) ) {if ( true ) {

          return  tom.engine.adt.il.types.expr.ilfalse.make() ;
        }}}}}}if ( (arg instanceof tom.engine.adt.il.types.Expr) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumberfreshSubject_1=(( tom.engine.adt.il.types.Expr )arg);if ( (tomMatch314NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.expr.ilnot) ) {{  tom.engine.adt.il.types.Expr  tomMatch314NameNumber_freshVar_13= tomMatch314NameNumberfreshSubject_1.getExp() ;if ( (tomMatch314NameNumber_freshVar_13 instanceof tom.engine.adt.il.types.expr.ilfalse) ) {if ( true ) {

          return  tom.engine.adt.il.types.expr.iltrue.make( tom.engine.adt.il.types.substitutionlist.Emptysubs.make() ) ;
        }}}}}}}

      return (Expr) any.visitLight(arg);
    }
  }

  TermList reverseTermList(TermList l) {
    {if ( (l instanceof tom.engine.adt.il.types.TermList) ) {{  tom.engine.adt.il.types.TermList  tomMatch315NameNumberfreshSubject_1=(( tom.engine.adt.il.types.TermList )l);if ( ((tomMatch315NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.termlist.ConsconcTerm) || (tomMatch315NameNumberfreshSubject_1 instanceof tom.engine.adt.il.types.termlist.EmptyconcTerm)) ) {{  tom.engine.adt.il.types.TermList  tomMatch315NameNumber_freshVar_0=tomMatch315NameNumberfreshSubject_1;if (!( tomMatch315NameNumber_freshVar_0.isEmptyconcTerm() )) {{  tom.engine.adt.il.types.TermList  tomMatch315NameNumber_freshVar_1= tomMatch315NameNumber_freshVar_0.getTailconcTerm() ;if ( true ) {

        TermList nt = reverseTermList(tomMatch315NameNumber_freshVar_1);
        return tom_append_list_concTerm(nt, tom.engine.adt.il.types.termlist.ConsconcTerm.make( tomMatch315NameNumber_freshVar_0.getHeadconcTerm() , tom.engine.adt.il.types.termlist.EmptyconcTerm.make() ) );
      }}}}}}}}

    return l;
  }

}

/* Generated by TOM (version 2.4rc2): Do not edit this file *//*
 * 
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2006, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 * **/

package tom.engine.tools;

import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;

import tom.engine.TomBase;
import tom.engine.adt.tomsignature.*;
import tom.engine.tools.TomGenericPlugin;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.library.strategy.mutraveler.MuTraveler;
import jjtraveler.reflective.VisitableVisitor;
import jjtraveler.VisitFailure;

public class PILFactory extends TomBase {
  
  /* Generated by TOM (version 2.4rc2): Do not edit this file *//* Generated by TOM (version 2.4rc2): Do not edit this file *//* Generated by TOM (version 2.4rc2): Do not edit this file */ private static boolean tom_terms_equal_String(String t1, String t2) {  return  (t1.equals(t2))  ;}  /* Generated by TOM (version 2.4rc2): Do not edit this file */private static boolean tom_terms_equal_int(int t1, int t2) {  return  (t1==t2)  ;} private static boolean tom_terms_equal_Instruction(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_InstructionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomType(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TargetLanguage(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomNumber(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomNameList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomNumberList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Expression(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomTerm(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Pattern(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_PatternList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Option(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_OptionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ConstraintList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SlotList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Slot(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_fun_sym_TypedAction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.TypedAction  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_TypedAction_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static  tom.engine.adt.tomterm.types.Pattern  tom_get_slot_TypedAction_PositivePattern( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getPositivePattern()  ;}private static  tom.engine.adt.tomterm.types.PatternList  tom_get_slot_TypedAction_NegativePatternList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getNegativePatternList()  ;}private static boolean tom_is_fun_sym_CheckInstance( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.CheckInstance  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_CheckInstance_AstType( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_CheckInstance_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_CheckInstance_Instruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getInstruction()  ;}private static boolean tom_is_fun_sym_CheckStamp( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.CheckStamp  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_CheckStamp_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_CompiledPattern( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.CompiledPattern  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_CompiledPattern_PatternList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getPatternList()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_CompiledPattern_AutomataInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAutomataInst()  ;}private static boolean tom_is_fun_sym_CompiledMatch( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.CompiledMatch  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_CompiledMatch_AutomataInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAutomataInst()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_CompiledMatch_Option( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getOption()  ;}private static boolean tom_is_fun_sym_NamedBlock( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.NamedBlock  ;}private static  String  tom_get_slot_NamedBlock_BlockName( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getBlockName()  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slot_NamedBlock_InstList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getInstList()  ;}private static boolean tom_is_fun_sym_UnamedBlock( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.UnamedBlock  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slot_UnamedBlock_InstList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getInstList()  ;}private static boolean tom_is_fun_sym_AbstractBlock( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.AbstractBlock  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_AbstractBlock( tom.engine.adt.tominstruction.types.InstructionList  t0) { return  tom.engine.adt.tominstruction.types.instruction.AbstractBlock.make(t0); }private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slot_AbstractBlock_InstList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getInstList()  ;}private static boolean tom_is_fun_sym_Nop( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Nop  ;}private static boolean tom_is_fun_sym_LetAssign( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.LetAssign  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_LetAssign_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_LetAssign_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_LetAssign_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_LetRef( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.LetRef  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_LetRef_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_LetRef_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_LetRef_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_Let( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Let  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Let_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Let_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_Let_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_Assign( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Assign  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Assign_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Assign_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static boolean tom_is_fun_sym_WhileDo( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.WhileDo  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_WhileDo_Condition( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getCondition()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_WhileDo_DoInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getDoInst()  ;}private static boolean tom_is_fun_sym_DoWhile( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.DoWhile  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_DoWhile_DoInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getDoInst()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_DoWhile_Condition( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getCondition()  ;}private static boolean tom_is_fun_sym_If( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.If  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_If_Condition( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getCondition()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_If_SuccesInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSuccesInst()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_If_FailureInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getFailureInst()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_make_EmptyType() { return  tom.engine.adt.tomtype.types.tomtype.EmptyType.make(); }private static boolean tom_is_fun_sym_Type( tom.engine.adt.tomtype.types.TomType  t) {  return  t instanceof tom.engine.adt.tomtype.types.tomtype.Type  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TomType( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTomType()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TlType( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTlType()  ;}private static  tom.engine.adt.tomsignature.types.TargetLanguage  tom_make_noTL() { return  tom.engine.adt.tomsignature.types.targetlanguage.noTL.make(); }private static boolean tom_is_fun_sym_NameNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.NameNumber  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_NameNumber_AstName( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.Number  ;}private static  int  tom_get_slot_Number_Integer( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getInteger()  ;}private static boolean tom_is_fun_sym_End( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.End  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_get_slot_End_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getNumber()  ;}private static boolean tom_is_fun_sym_Begin( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.Begin  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_get_slot_Begin_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getNumber()  ;}private static boolean tom_is_fun_sym_ListNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.ListNumber  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_get_slot_ListNumber_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getNumber()  ;}private static boolean tom_is_fun_sym_PositionName( tom.engine.adt.tomname.types.TomName  t) {  return  t instanceof tom.engine.adt.tomname.types.tomname.PositionName  ;}private static  tom.engine.adt.tomname.types.TomNumberList  tom_get_slot_PositionName_NumberList( tom.engine.adt.tomname.types.TomName  t) {  return  t.getNumberList()  ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) {  return  t instanceof tom.engine.adt.tomname.types.tomname.Name  ;}private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_GetSliceList( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetSliceList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSliceList_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceList_VariableBeginAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableBeginAST()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceList_VariableEndAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableEndAST()  ;}private static boolean tom_is_fun_sym_IsEmptyList( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.IsEmptyList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsEmptyList_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsEmptyList_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetTail( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetTail  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetTail_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetTail_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetHead( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetHead  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetHead_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetHead_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetHead_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetSlot( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetSlot  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetSlot_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlot_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  String  tom_get_slot_GetSlot_SlotNameString( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getSlotNameString()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSlot_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_Cast( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.Cast  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Cast_AstType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Cast_Source( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getSource()  ;}private static boolean tom_is_fun_sym_EqualTerm( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.EqualTerm  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_EqualTerm_TomType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getTomType()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTerm_Kid1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid1()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTerm_Kid2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid2()  ;}private static boolean tom_is_fun_sym_EqualFunctionSymbol( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.EqualFunctionSymbol  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_make_EqualFunctionSymbol( tom.engine.adt.tomtype.types.TomType  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return  tom.engine.adt.tomexpression.types.expression.EqualFunctionSymbol.make(t0, t1, t2); }private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_EqualFunctionSymbol_AstType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualFunctionSymbol_Exp1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getExp1()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualFunctionSymbol_Exp2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getExp2()  ;}private static boolean tom_is_fun_sym_FalseTL( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.FalseTL  ;}private static boolean tom_is_fun_sym_Or( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.Or  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Or_Arg1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg1()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Or_Arg2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg2()  ;}private static boolean tom_is_fun_sym_Negation( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.Negation  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Negation_Arg( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg()  ;}private static boolean tom_is_fun_sym_TomTermToExpression( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.TomTermToExpression  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_TomTermToExpression_AstTerm( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstTerm()  ;}private static boolean tom_is_fun_sym_Ref( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.Ref  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Ref_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTomTerm()  ;}private static boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_VariableStar_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_VariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.Variable  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getNameList()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getSlots()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_make_noOption() { return  tom.engine.adt.tomoption.types.option.noOption.make(); }private static boolean tom_is_fun_sym_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction || t instanceof tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_empty_list_concInstruction() { return  tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction.make() ; }private static  tom.engine.adt.tominstruction.types.InstructionList  tom_cons_list_concInstruction( tom.engine.adt.tominstruction.types.Instruction  e,  tom.engine.adt.tominstruction.types.InstructionList  l) { return  tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction.make(e,l) ; }private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_head_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.getHeadconcInstruction()  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_tail_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.getTailconcInstruction()  ;}private static boolean tom_is_empty_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.isEmptyconcInstruction()  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_append_list_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  l1,  tom.engine.adt.tominstruction.types.InstructionList  l2) {    if(tom_is_empty_concInstruction_InstructionList(l1)) {     return l2;    } else if(tom_is_empty_concInstruction_InstructionList(l2)) {     return l1;    } else if(tom_is_empty_concInstruction_InstructionList(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(l1))) {     return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(l1),l2);    } else {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(l1),tom_append_list_concInstruction(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(l1),l2));    }   }  private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slice_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  begin,  tom.engine.adt.tominstruction.types.InstructionList  end) {    if(tom_terms_equal_InstructionList(begin,end)) {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_empty_list_concInstruction();    } else {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(begin),( tom.engine.adt.tominstruction.types.InstructionList )tom_get_slice_concInstruction(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(begin),end));    }   }  private static  tom.engine.adt.tomoption.types.OptionList  tom_empty_list_concOption() { return  tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_cons_list_concOption( tom.engine.adt.tomoption.types.Option  e,  tom.engine.adt.tomoption.types.OptionList  l) { return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make(e,l) ; }private static  tom.engine.adt.tomoption.types.Option  tom_get_head_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.getHeadconcOption()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_tail_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.getTailconcOption()  ;}private static boolean tom_is_empty_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.isEmptyconcOption()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList  l1,  tom.engine.adt.tomoption.types.OptionList  l2) {    if(tom_is_empty_concOption_OptionList(l1)) {     return l2;    } else if(tom_is_empty_concOption_OptionList(l2)) {     return l1;    } else if(tom_is_empty_concOption_OptionList(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(l1))) {     return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(l1),l2);    } else {      return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(l1),tom_append_list_concOption(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(l1),l2));    }   }  private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end) {    if(tom_terms_equal_OptionList(begin,end)) {      return ( tom.engine.adt.tomoption.types.OptionList )tom_empty_list_concOption();    } else {      return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(begin),( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSlot( tom.engine.adt.tomslot.types.SlotList  t) {  return  t instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot || t instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_empty_list_concSlot() { return  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ; }private static  tom.engine.adt.tomslot.types.SlotList  tom_cons_list_concSlot( tom.engine.adt.tomslot.types.Slot  e,  tom.engine.adt.tomslot.types.SlotList  l) { return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.engine.adt.tomslot.types.Slot  tom_get_head_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.getHeadconcSlot()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_tail_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.getTailconcSlot()  ;}private static boolean tom_is_empty_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.isEmptyconcSlot()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList  l1,  tom.engine.adt.tomslot.types.SlotList  l2) {    if(tom_is_empty_concSlot_SlotList(l1)) {     return l2;    } else if(tom_is_empty_concSlot_SlotList(l2)) {     return l1;    } else if(tom_is_empty_concSlot_SlotList(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(l1))) {     return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(l1),l2);    } else {      return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(l1),l2));    }   }  private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end) {    if(tom_terms_equal_SlotList(begin,end)) {      return ( tom.engine.adt.tomslot.types.SlotList )tom_empty_list_concSlot();    } else {      return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(begin),( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(begin),end));    }   }   /* Generated by TOM (version 2.4rc2): Do not edit this file */private static boolean tom_terms_equal_Collection(Object l1, Object l2) {  return  l1.equals(l2)  ;} /* Generated by TOM (version 2.4rc2): Do not edit this file */private static boolean tom_terms_equal_Strategy(Object t1, Object t2) {  return t1.equals(t2) ;}private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_mu( tom.library.strategy.mutraveler.MuStrategy  var,  tom.library.strategy.mutraveler.MuStrategy  v) { return  new tom.library.strategy.mutraveler.Mu(var,v) ; }/* Generated by TOM (version 2.4rc2): Do not edit this file */private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Identity() { return  new tom.library.strategy.mutraveler.Identity() ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Sequence( tom.library.strategy.mutraveler.MuStrategy  first,  tom.library.strategy.mutraveler.MuStrategy  then) { return  new tom.library.strategy.mutraveler.Sequence(first,then) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_All( tom.library.strategy.mutraveler.MuStrategy  v) { return  new tom.library.strategy.mutraveler.All(v) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_MuVar( String  name) { return  new tom.library.strategy.mutraveler.MuVar(name) ; } /* Generated by TOM (version 2.4rc2): Do not edit this file */private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_TopDown( tom.library.strategy.mutraveler.MuStrategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_make_Sequence(v,tom_make_All(tom_make_MuVar("_x")))) ; }   



  /**
   * level specifies the level of details of the output
   * 0 is identity
   * 1 removes options
   */
  private int level = 0;
  
  public PILFactory() {
    super();
    init(1);
  }

  void init (int level) {
    this.level = level;
  }

  public jjtraveler.Visitable remove(jjtraveler.Visitable subject) {
   try {
     return MuTraveler.init(tom_make_TopDown(tom_make_replaceRemove())).visit(subject);
   } catch(jjtraveler.VisitFailure e) {
     System.out.println("strategy failed");
   }
   return subject;
  }

  public TomTerm remove(TomTerm subject) {
   try {
     return (TomTerm) MuTraveler.init(tom_make_TopDown(tom_make_replaceRemove())).visit(subject);
   } catch(jjtraveler.VisitFailure e) {
     System.out.println("strategy failed");
   }
   return subject;
  }

   private static class replaceRemove  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { public replaceRemove( ) { super(tom_make_Identity() ); } public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tomoption.types.OptionList  visit_OptionList(  tom.engine.adt.tomoption.types.OptionList  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomoption.types.OptionList ) { { tom.engine.adt.tomoption.types.OptionList  tom_match1_1=(( tom.engine.adt.tomoption.types.OptionList )tom__arg); {boolean tom_match1_tom_anti_constraints_status= true ; if ((tom_match1_tom_anti_constraints_status ==  true )) { if ( true ) {


 return tom_empty_list_concOption();  } } } } } return super.visit_OptionList(tom__arg) ;  } public  tom.engine.adt.tomoption.types.Option  visit_Option(  tom.engine.adt.tomoption.types.Option  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomoption.types.Option ) { { tom.engine.adt.tomoption.types.Option  tom_match2_1=(( tom.engine.adt.tomoption.types.Option )tom__arg); {boolean tom_match2_tom_anti_constraints_status= true ; if ((tom_match2_tom_anti_constraints_status ==  true )) { if ( true ) {


 return tom_make_noOption();  } } } } } return super.visit_Option(tom__arg) ;  } public  tom.engine.adt.tomsignature.types.TargetLanguage  visit_TargetLanguage(  tom.engine.adt.tomsignature.types.TargetLanguage  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomsignature.types.TargetLanguage ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tom_match3_1=(( tom.engine.adt.tomsignature.types.TargetLanguage )tom__arg); {boolean tom_match3_tom_anti_constraints_status= true ; if ((tom_match3_tom_anti_constraints_status ==  true )) { if ( true ) {



 return tom_make_noTL();  } } } } } return super.visit_TargetLanguage(tom__arg) ;  } public  tom.engine.adt.tomtype.types.TomType  visit_TomType(  tom.engine.adt.tomtype.types.TomType  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomtype.types.TomType ) { { tom.engine.adt.tomtype.types.TomType  tom_match4_1=(( tom.engine.adt.tomtype.types.TomType )tom__arg); if ( ( tom_is_fun_sym_Type(tom_match4_1) ||  false  ) ) { {boolean tom_match4_tom_anti_constraints_status= true ; if ((tom_match4_tom_anti_constraints_status ==  true )) { if ( true ) {



 return tom_make_EmptyType();  } } } } } } return super.visit_TomType(tom__arg) ;  } public  tom.engine.adt.tomexpression.types.Expression  visit_Expression(  tom.engine.adt.tomexpression.types.Expression  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomexpression.types.Expression ) { { tom.engine.adt.tomexpression.types.Expression  tom_match5_1=(( tom.engine.adt.tomexpression.types.Expression )tom__arg); if ( ( tom_is_fun_sym_Cast(tom_match5_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_match5_1_Source=tom_get_slot_Cast_Source(tom_match5_1); { tom.engine.adt.tomexpression.types.Expression  tom_e=tom_match5_1_Source; {boolean tom_match5_tom_anti_constraints_status= true ; if ((tom_match5_tom_anti_constraints_status ==  true )) { if ( true ) {



 return (Expression) tom_make_TopDown(tom_make_replaceRemove()).visit(tom_e);  } } } } } } if ( ( tom_is_fun_sym_Or(tom_match5_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_match5_1_Arg1=tom_get_slot_Or_Arg1(tom_match5_1); { tom.engine.adt.tomexpression.types.Expression  tom_match5_1_Arg2=tom_get_slot_Or_Arg2(tom_match5_1); { tom.engine.adt.tomexpression.types.Expression  tom_e=tom_match5_1_Arg1; if ( ( tom_is_fun_sym_FalseTL(tom_match5_1_Arg2) ||  false  ) ) { {boolean tom_match5_tom_anti_constraints_status= true ; if ((tom_match5_tom_anti_constraints_status ==  true )) { if ( true ) {
 return (Expression) tom_make_TopDown(tom_make_replaceRemove()).visit(tom_e);  } } } } } } } } if ( ( tom_is_fun_sym_EqualFunctionSymbol(tom_match5_1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match5_1_AstType=tom_get_slot_EqualFunctionSymbol_AstType(tom_match5_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match5_1_Exp1=tom_get_slot_EqualFunctionSymbol_Exp1(tom_match5_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match5_1_Exp2=tom_get_slot_EqualFunctionSymbol_Exp2(tom_match5_1); { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match5_1_AstType; { tom.engine.adt.tomterm.types.TomTerm  tom_t1=tom_match5_1_Exp1; if ( ( tom_is_fun_sym_RecordAppl(tom_match5_1_Exp2) ||  false  ) ) { { tom.engine.adt.tomslot.types.SlotList  tom_match5_1_Exp2_Slots=tom_get_slot_RecordAppl_Slots(tom_match5_1_Exp2); if ( ( tom_is_fun_sym_concSlot(tom_match5_1_Exp2_Slots) ||  false  ) ) { { tom.engine.adt.tomslot.types.SlotList  tom_match5_1_Exp2_Slots_list1=tom_match5_1_Exp2_Slots; if (!(tom_is_empty_concSlot_SlotList(tom_match5_1_Exp2_Slots_list1))) {tom_match5_1_Exp2_Slots_list1=tom_get_tail_concSlot_SlotList(tom_match5_1_Exp2_Slots_list1); { tom.engine.adt.tomterm.types.TomTerm  tom_appl=tom_match5_1_Exp2; {boolean tom_match5_tom_anti_constraints_status= true ; if ((tom_match5_tom_anti_constraints_status ==  true )) { if ( true ) {

        return (Expression) tom_make_TopDown(tom_make_replaceRemove()).visit(tom_make_EqualFunctionSymbol(tom_type,tom_t1,tom_appl.setSlots(tom_empty_list_concSlot())));
       } } } } } } } } } } } } } } } } } return super.visit_Expression(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_replaceRemove() { return new replaceRemove(); }



  public String prettyPrintCompiledMatch(jjtraveler.Visitable subject) {
    StringBuffer res = new StringBuffer();
    Collection matches = collectMatch(subject);
    Iterator it = matches.iterator();
    while(it.hasNext()) {
      Instruction cm = (Instruction) it.next();
      res.append(prettyPrint(cm));
      res.append("\n");
    }
    return res.toString();
  }
	
	public String prettyPrint(jjtraveler.Visitable subject) {
		 if(subject instanceof  tom.engine.adt.tominstruction.types.Instruction ) { { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1=(( tom.engine.adt.tominstruction.types.Instruction )subject); if ( ( tom_is_fun_sym_CompiledMatch(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_AutomataInst=tom_get_slot_CompiledMatch_AutomataInst(tom_match6_1); { tom.engine.adt.tomoption.types.OptionList  tom_match6_1_Option=tom_get_slot_CompiledMatch_Option(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_automata=tom_match6_1_AutomataInst; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {
 
				return prettyPrint(tom_automata); 
			 } } } } } } } if ( ( tom_is_fun_sym_Let(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_Let_Variable(tom_match6_1); { tom.engine.adt.tomexpression.types.Expression  tom_match6_1_Source=tom_get_slot_Let_Source(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_AstInstruction=tom_get_slot_Let_AstInstruction(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_variable=tom_match6_1_Variable; { tom.engine.adt.tomexpression.types.Expression  tom_src=tom_match6_1_Source; { tom.engine.adt.tominstruction.types.Instruction  tom_body=tom_match6_1_AstInstruction; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "let " + prettyPrint(tom_variable) + " = " + prettyPrint(tom_src) + " in\n\t" + prettyPrint(tom_body).replaceAll("\n","\n\t");
			 } } } } } } } } } } if ( ( tom_is_fun_sym_LetRef(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_LetRef_Variable(tom_match6_1); { tom.engine.adt.tomexpression.types.Expression  tom_match6_1_Source=tom_get_slot_LetRef_Source(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_AstInstruction=tom_get_slot_LetRef_AstInstruction(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_variable=tom_match6_1_Variable; { tom.engine.adt.tomexpression.types.Expression  tom_src=tom_match6_1_Source; { tom.engine.adt.tominstruction.types.Instruction  tom_body=tom_match6_1_AstInstruction; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "letRef " + prettyPrint(tom_variable) + " = " + prettyPrint(tom_src) + " in\n\t" + prettyPrint(tom_body).replaceAll("\n","\n\t");
			 } } } } } } } } } } if ( ( tom_is_fun_sym_LetAssign(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_LetAssign_Variable(tom_match6_1); { tom.engine.adt.tomexpression.types.Expression  tom_match6_1_Source=tom_get_slot_LetAssign_Source(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_AstInstruction=tom_get_slot_LetAssign_AstInstruction(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_variable=tom_match6_1_Variable; { tom.engine.adt.tomexpression.types.Expression  tom_src=tom_match6_1_Source; { tom.engine.adt.tominstruction.types.Instruction  tom_body=tom_match6_1_AstInstruction; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "letAssign " + prettyPrint(tom_variable) + " = " + prettyPrint(tom_src) + " in\n\t" + prettyPrint(tom_body).replaceAll("\n","\n\t");
			 } } } } } } } } } } if ( ( tom_is_fun_sym_Assign(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_Assign_Variable(tom_match6_1); { tom.engine.adt.tomexpression.types.Expression  tom_match6_1_Source=tom_get_slot_Assign_Source(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_variable=tom_match6_1_Variable; { tom.engine.adt.tomexpression.types.Expression  tom_src=tom_match6_1_Source; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "Assign " + prettyPrint(tom_variable) + " = " + prettyPrint(tom_src) ;
			 } } } } } } } } if ( ( tom_is_fun_sym_DoWhile(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_DoInst=tom_get_slot_DoWhile_DoInst(tom_match6_1); { tom.engine.adt.tomexpression.types.Expression  tom_match6_1_Condition=tom_get_slot_DoWhile_Condition(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_doInst=tom_match6_1_DoInst; { tom.engine.adt.tomexpression.types.Expression  tom_condition=tom_match6_1_Condition; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {



				return "do\n\t " + prettyPrint(tom_doInst).replaceAll("\n","\n\t") +"while "+ prettyPrint(tom_condition);
			 } } } } } } } } if ( ( tom_is_fun_sym_WhileDo(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_match6_1_Condition=tom_get_slot_WhileDo_Condition(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_DoInst=tom_get_slot_WhileDo_DoInst(tom_match6_1); { tom.engine.adt.tomexpression.types.Expression  tom_condition=tom_match6_1_Condition; { tom.engine.adt.tominstruction.types.Instruction  tom_doInst=tom_match6_1_DoInst; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "while "+ prettyPrint(tom_condition)+" do\n\t " + prettyPrint(tom_doInst).replaceAll("\n","\n\t");
			 } } } } } } } } if ( ( tom_is_fun_sym_If(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_match6_1_Condition=tom_get_slot_If_Condition(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_SuccesInst=tom_get_slot_If_SuccesInst(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_FailureInst=tom_get_slot_If_FailureInst(tom_match6_1); { tom.engine.adt.tomexpression.types.Expression  tom_cond=tom_match6_1_Condition; { tom.engine.adt.tominstruction.types.Instruction  tom_success=tom_match6_1_SuccesInst; if ( ( tom_is_fun_sym_Nop(tom_match6_1_FailureInst) ||  false  ) ) { {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {



				return  "if " + prettyPrint(tom_cond) + " then \n\t" + prettyPrint(tom_success).replaceAll("\n","\n\t"); 
			 } } } } } } } } } } if ( ( tom_is_fun_sym_If(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_match6_1_Condition=tom_get_slot_If_Condition(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_SuccesInst=tom_get_slot_If_SuccesInst(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_FailureInst=tom_get_slot_If_FailureInst(tom_match6_1); { tom.engine.adt.tomexpression.types.Expression  tom_cond=tom_match6_1_Condition; { tom.engine.adt.tominstruction.types.Instruction  tom_success=tom_match6_1_SuccesInst; { tom.engine.adt.tominstruction.types.Instruction  tom_failure=tom_match6_1_FailureInst; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "if " + prettyPrint(tom_cond) + " then \n\t" + prettyPrint(tom_success).replaceAll("\n","\n\t") + "\n\telse " + prettyPrint(tom_failure).replaceAll("\n","\n\t")+"\n";
			 } } } } } } } } } } if ( ( tom_is_fun_sym_CheckInstance(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_Instruction=tom_get_slot_CheckInstance_Instruction(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_instruction=tom_match6_1_Instruction; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "checkInstance\n\t" + prettyPrint(tom_instruction).replaceAll("\n","\n\t");
			 } } } } } } if ( ( tom_is_fun_sym_AbstractBlock(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tom_match6_1_InstList=tom_get_slot_AbstractBlock_InstList(tom_match6_1); if ( ( tom_is_fun_sym_concInstruction(tom_match6_1_InstList) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tom_match6_1_InstList_list1=tom_match6_1_InstList; { tom.engine.adt.tominstruction.types.InstructionList  tom_match6_1_InstList_begin1=tom_match6_1_InstList_list1; { tom.engine.adt.tominstruction.types.InstructionList  tom_match6_1_InstList_end1=tom_match6_1_InstList_list1; { while (!(tom_is_empty_concInstruction_InstructionList(tom_match6_1_InstList_end1))) {tom_match6_1_InstList_list1=tom_match6_1_InstList_end1; { { tom.engine.adt.tominstruction.types.InstructionList  tom_x=tom_get_slice_concInstruction(tom_match6_1_InstList_begin1,tom_match6_1_InstList_end1); { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_InstList_2=tom_get_head_concInstruction_InstructionList(tom_match6_1_InstList_list1);tom_match6_1_InstList_list1=tom_get_tail_concInstruction_InstructionList(tom_match6_1_InstList_list1); if ( ( tom_is_fun_sym_Nop(tom_match6_1_InstList_2) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tom_y=tom_match6_1_InstList_list1; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return prettyPrint(tom_make_AbstractBlock(tom_append_list_concInstruction(tom_x,tom_append_list_concInstruction(tom_y,tom_empty_list_concInstruction()))));
			 } } } } } } }tom_match6_1_InstList_end1=tom_get_tail_concInstruction_InstructionList(tom_match6_1_InstList_end1); } }tom_match6_1_InstList_list1=tom_match6_1_InstList_begin1; } } } } } } } if ( ( tom_is_fun_sym_AbstractBlock(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tom_match6_1_InstList=tom_get_slot_AbstractBlock_InstList(tom_match6_1); { tom.engine.adt.tominstruction.types.InstructionList  tom_instList=tom_match6_1_InstList; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return prettyPrint(tom_instList);
			 } } } } } } if ( ( tom_is_fun_sym_UnamedBlock(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tom_match6_1_InstList=tom_get_slot_UnamedBlock_InstList(tom_match6_1); { tom.engine.adt.tominstruction.types.InstructionList  tom_instList=tom_match6_1_InstList; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return prettyPrint(tom_instList);
			 } } } } } } if ( ( tom_is_fun_sym_NamedBlock(tom_match6_1) ||  false  ) ) { { String  tom_match6_1_BlockName=tom_get_slot_NamedBlock_BlockName(tom_match6_1); { tom.engine.adt.tominstruction.types.InstructionList  tom_match6_1_InstList=tom_get_slot_NamedBlock_InstList(tom_match6_1); { String  tom_name=tom_match6_1_BlockName; { tom.engine.adt.tominstruction.types.InstructionList  tom_instList=tom_match6_1_InstList; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return tom_name+ " : " + prettyPrint(tom_instList);
			 } } } } } } } } if ( ( tom_is_fun_sym_TypedAction(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_AstInstruction=tom_get_slot_TypedAction_AstInstruction(tom_match6_1); { tom.engine.adt.tomterm.types.Pattern  tom_match6_1_PositivePattern=tom_get_slot_TypedAction_PositivePattern(tom_match6_1); { tom.engine.adt.tomterm.types.PatternList  tom_match6_1_NegativePatternList=tom_get_slot_TypedAction_NegativePatternList(tom_match6_1); {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {



				return "targetLanguageInstructions";
			 } } } } } } } if ( ( tom_is_fun_sym_CompiledPattern(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomList  tom_match6_1_PatternList=tom_get_slot_CompiledPattern_PatternList(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_match6_1_AutomataInst=tom_get_slot_CompiledPattern_AutomataInst(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_automata=tom_match6_1_AutomataInst; {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {

 
				return prettyPrint(tom_automata); 
			 } } } } } } } if ( ( tom_is_fun_sym_CheckStamp(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_CheckStamp_Variable(tom_match6_1); {boolean tom_match6_tom_anti_constraints_status= true ; if ((tom_match6_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "";
			 } } } } } } } if(subject instanceof  tom.engine.adt.tomexpression.types.Expression ) { { tom.engine.adt.tomexpression.types.Expression  tom_match7_1=(( tom.engine.adt.tomexpression.types.Expression )subject); if ( ( tom_is_fun_sym_TomTermToExpression(tom_match7_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match7_1_AstTerm=tom_get_slot_TomTermToExpression_AstTerm(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_astTerm=tom_match7_1_AstTerm; {boolean tom_match7_tom_anti_constraints_status= true ; if ((tom_match7_tom_anti_constraints_status ==  true )) { if ( true ) {





				return prettyPrint(tom_astTerm);
			 } } } } } } if ( ( tom_is_fun_sym_EqualFunctionSymbol(tom_match7_1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match7_1_AstType=tom_get_slot_EqualFunctionSymbol_AstType(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match7_1_Exp1=tom_get_slot_EqualFunctionSymbol_Exp1(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match7_1_Exp2=tom_get_slot_EqualFunctionSymbol_Exp2(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_exp1=tom_match7_1_Exp1; { tom.engine.adt.tomterm.types.TomTerm  tom_exp2=tom_match7_1_Exp2; {boolean tom_match7_tom_anti_constraints_status= true ; if ((tom_match7_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "is_fun_sym(" + prettyPrint(tom_exp1) + "," + prettyPrint(tom_exp2) + ")";
			 } } } } } } } } } if ( ( tom_is_fun_sym_Negation(tom_match7_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_match7_1_Arg=tom_get_slot_Negation_Arg(tom_match7_1); { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_match7_1_Arg; {boolean tom_match7_tom_anti_constraints_status= true ; if ((tom_match7_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "not " + prettyPrint(tom_exp);
			 } } } } } } if ( ( tom_is_fun_sym_IsEmptyList(tom_match7_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match7_1_Variable=tom_get_slot_IsEmptyList_Variable(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_kid1=tom_match7_1_Variable; {boolean tom_match7_tom_anti_constraints_status= true ; if ((tom_match7_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "is_empty(" + prettyPrint(tom_kid1) + ")";
			 } } } } } } if ( ( tom_is_fun_sym_EqualTerm(tom_match7_1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match7_1_TomType=tom_get_slot_EqualTerm_TomType(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match7_1_Kid1=tom_get_slot_EqualTerm_Kid1(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match7_1_Kid2=tom_get_slot_EqualTerm_Kid2(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_kid1=tom_match7_1_Kid1; { tom.engine.adt.tomterm.types.TomTerm  tom_kid2=tom_match7_1_Kid2; {boolean tom_match7_tom_anti_constraints_status= true ; if ((tom_match7_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "equal(" + prettyPrint(tom_kid1) + "," + prettyPrint(tom_kid2) + ")";
			 } } } } } } } } } if ( ( tom_is_fun_sym_GetSliceList(tom_match7_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match7_1_AstName=tom_get_slot_GetSliceList_AstName(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match7_1_VariableBeginAST=tom_get_slot_GetSliceList_VariableBeginAST(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match7_1_VariableEndAST=tom_get_slot_GetSliceList_VariableEndAST(tom_match7_1); { tom.engine.adt.tomname.types.TomName  tom_astName=tom_match7_1_AstName; { tom.engine.adt.tomterm.types.TomTerm  tom_variableBeginAST=tom_match7_1_VariableBeginAST; { tom.engine.adt.tomterm.types.TomTerm  tom_variableEndAST=tom_match7_1_VariableEndAST; {boolean tom_match7_tom_anti_constraints_status= true ; if ((tom_match7_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "getSliceList("+prettyPrint(tom_astName)+","+prettyPrint(tom_variableBeginAST)+","+prettyPrint(tom_variableEndAST)+")";
			 } } } } } } } } } } if ( ( tom_is_fun_sym_GetHead(tom_match7_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match7_1_Variable=tom_get_slot_GetHead_Variable(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_variable=tom_match7_1_Variable; {boolean tom_match7_tom_anti_constraints_status= true ; if ((tom_match7_tom_anti_constraints_status ==  true )) { if ( true ) {



				return "getHead("+prettyPrint(tom_variable)+")";
			 } } } } } } if ( ( tom_is_fun_sym_GetTail(tom_match7_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match7_1_Variable=tom_get_slot_GetTail_Variable(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_variable=tom_match7_1_Variable; {boolean tom_match7_tom_anti_constraints_status= true ; if ((tom_match7_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "getTail("+prettyPrint(tom_variable)+")";
			 } } } } } } if ( ( tom_is_fun_sym_GetSlot(tom_match7_1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match7_1_Codomain=tom_get_slot_GetSlot_Codomain(tom_match7_1); { tom.engine.adt.tomname.types.TomName  tom_match7_1_AstName=tom_get_slot_GetSlot_AstName(tom_match7_1); { String  tom_match7_1_SlotNameString=tom_get_slot_GetSlot_SlotNameString(tom_match7_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match7_1_Variable=tom_get_slot_GetSlot_Variable(tom_match7_1); { tom.engine.adt.tomname.types.TomName  tom_astName=tom_match7_1_AstName; { String  tom_slotNameString=tom_match7_1_SlotNameString; { tom.engine.adt.tomterm.types.TomTerm  tom_variable=tom_match7_1_Variable; {boolean tom_match7_tom_anti_constraints_status= true ; if ((tom_match7_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "get_slot_"+prettyPrint(tom_astName)+"_"+tom_slotNameString+"("+prettyPrint(tom_variable)+")";
			 } } } } } } } } } } } } } if(subject instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_1=(( tom.engine.adt.tomterm.types.TomTerm )subject); if ( ( tom_is_fun_sym_Variable(tom_match8_1) ||  false  ) ) { { tom.engine.adt.tomoption.types.OptionList  tom_match8_1_Option=tom_get_slot_Variable_Option(tom_match8_1); { tom.engine.adt.tomname.types.TomName  tom_match8_1_AstName=tom_get_slot_Variable_AstName(tom_match8_1); { tom.engine.adt.tomtype.types.TomType  tom_match8_1_AstType=tom_get_slot_Variable_AstType(tom_match8_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match8_1_Constraints=tom_get_slot_Variable_Constraints(tom_match8_1); { tom.engine.adt.tomname.types.TomName  tom_name=tom_match8_1_AstName; {boolean tom_match8_tom_anti_constraints_status= true ; if ((tom_match8_tom_anti_constraints_status ==  true )) { if ( true ) {




				return prettyPrint(tom_name);
			 } } } } } } } } } if ( ( tom_is_fun_sym_VariableStar(tom_match8_1) ||  false  ) ) { { tom.engine.adt.tomoption.types.OptionList  tom_match8_1_Option=tom_get_slot_VariableStar_Option(tom_match8_1); { tom.engine.adt.tomname.types.TomName  tom_match8_1_AstName=tom_get_slot_VariableStar_AstName(tom_match8_1); { tom.engine.adt.tomtype.types.TomType  tom_match8_1_AstType=tom_get_slot_VariableStar_AstType(tom_match8_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match8_1_Constraints=tom_get_slot_VariableStar_Constraints(tom_match8_1); { tom.engine.adt.tomname.types.TomName  tom_name=tom_match8_1_AstName; {boolean tom_match8_tom_anti_constraints_status= true ; if ((tom_match8_tom_anti_constraints_status ==  true )) { if ( true ) {


				return prettyPrint(tom_name);
			 } } } } } } } } } if ( ( tom_is_fun_sym_Ref(tom_match8_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match8_1_TomTerm=tom_get_slot_Ref_TomTerm(tom_match8_1); { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_match8_1_TomTerm; {boolean tom_match8_tom_anti_constraints_status= true ; if ((tom_match8_tom_anti_constraints_status ==  true )) { if ( true ) {


				return prettyPrint(tom_term);
			 } } } } } } if ( ( tom_is_fun_sym_RecordAppl(tom_match8_1) ||  false  ) ) { { tom.engine.adt.tomoption.types.OptionList  tom_match8_1_Option=tom_get_slot_RecordAppl_Option(tom_match8_1); { tom.engine.adt.tomname.types.TomNameList  tom_match8_1_NameList=tom_get_slot_RecordAppl_NameList(tom_match8_1); { tom.engine.adt.tomslot.types.SlotList  tom_match8_1_Slots=tom_get_slot_RecordAppl_Slots(tom_match8_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match8_1_Constraints=tom_get_slot_RecordAppl_Constraints(tom_match8_1); { tom.engine.adt.tomname.types.TomNameList  tom_nameList=tom_match8_1_NameList; {boolean tom_match8_tom_anti_constraints_status= true ; if ((tom_match8_tom_anti_constraints_status ==  true )) { if ( true ) {


				return prettyPrint(tom_nameList); 
			 } } } } } } } } } } } if(subject instanceof  tom.engine.adt.tomname.types.TomName ) { { tom.engine.adt.tomname.types.TomName  tom_match9_1=(( tom.engine.adt.tomname.types.TomName )subject); if ( ( tom_is_fun_sym_PositionName(tom_match9_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomNumberList  tom_match9_1_NumberList=tom_get_slot_PositionName_NumberList(tom_match9_1); { tom.engine.adt.tomname.types.TomNumberList  tom_number_list=tom_match9_1_NumberList; {boolean tom_match9_tom_anti_constraints_status= true ; if ((tom_match9_tom_anti_constraints_status ==  true )) { if ( true ) {




				return "t"+ numberListToIdentifier(tom_number_list);
			 } } } } } } if ( ( tom_is_fun_sym_Name(tom_match9_1) ||  false  ) ) { { String  tom_match9_1_String=tom_get_slot_Name_String(tom_match9_1); { String  tom_string=tom_match9_1_String; {boolean tom_match9_tom_anti_constraints_status= true ; if ((tom_match9_tom_anti_constraints_status ==  true )) { if ( true ) {

				return tom_string;
			 } } } } } } } } if(subject instanceof  tom.engine.adt.tomname.types.TomNumber ) { { tom.engine.adt.tomname.types.TomNumber  tom_match10_1=(( tom.engine.adt.tomname.types.TomNumber )subject); if ( ( tom_is_fun_sym_Number(tom_match10_1) ||  false  ) ) { { int  tom_match10_1_Integer=tom_get_slot_Number_Integer(tom_match10_1); { int  tom_n=tom_match10_1_Integer; {boolean tom_match10_tom_anti_constraints_status= true ; if ((tom_match10_tom_anti_constraints_status ==  true )) { if ( true ) {





				return "" + tom_n;
			 } } } } } } if ( ( tom_is_fun_sym_NameNumber(tom_match10_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match10_1_AstName=tom_get_slot_NameNumber_AstName(tom_match10_1); { tom.engine.adt.tomname.types.TomName  tom_name=tom_match10_1_AstName; {boolean tom_match10_tom_anti_constraints_status= true ; if ((tom_match10_tom_anti_constraints_status ==  true )) { if ( true ) {


				return prettyPrint(tom_name);
			 } } } } } } if ( ( tom_is_fun_sym_ListNumber(tom_match10_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomNumber  tom_match10_1_Number=tom_get_slot_ListNumber_Number(tom_match10_1); { tom.engine.adt.tomname.types.TomNumber  tom_number=tom_match10_1_Number; {boolean tom_match10_tom_anti_constraints_status= true ; if ((tom_match10_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "listNumber"+prettyPrint(tom_number);
			 } } } } } } if ( ( tom_is_fun_sym_Begin(tom_match10_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomNumber  tom_match10_1_Number=tom_get_slot_Begin_Number(tom_match10_1); { tom.engine.adt.tomname.types.TomNumber  tom_number=tom_match10_1_Number; {boolean tom_match10_tom_anti_constraints_status= true ; if ((tom_match10_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "begin"+prettyPrint(tom_number);
			 } } } } } } if ( ( tom_is_fun_sym_End(tom_match10_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomNumber  tom_match10_1_Number=tom_get_slot_End_Number(tom_match10_1); { tom.engine.adt.tomname.types.TomNumber  tom_number=tom_match10_1_Number; {boolean tom_match10_tom_anti_constraints_status= true ; if ((tom_match10_tom_anti_constraints_status ==  true )) { if ( true ) {


				return "end"+prettyPrint(tom_number);
			 } } } } } } } }



		if(subject instanceof InstructionList) {
			InstructionList list = (InstructionList)subject;
			if(list.isEmptyconcInstruction()) {
				return "";
			} else {
				return prettyPrint(list.getHeadconcInstruction()) + "\n" + prettyPrint(list.getTailconcInstruction());
			}
		}  else if(subject instanceof TomNumberList) {
			TomNumberList list = (TomNumberList)subject;
			if(list.isEmptyconcTomNumber()) {
				return "";
			} else {
				return prettyPrint(list.getTailconcTomNumber()) + prettyPrint(list.getTailconcTomNumber());
			}
		}
		return subject.toString();
	}

   private static class collectMatch  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  java.util.Collection  c;  public collectMatch(  java.util.Collection  c ) { super(tom_make_Identity() ); this.c=c; } public  java.util.Collection  getc() { return c;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction(  tom.engine.adt.tominstruction.types.Instruction  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tominstruction.types.Instruction ) { { tom.engine.adt.tominstruction.types.Instruction  tom_match11_1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg); if ( ( tom_is_fun_sym_CompiledMatch(tom_match11_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_match11_1_AutomataInst=tom_get_slot_CompiledMatch_AutomataInst(tom_match11_1); {boolean tom_match11_tom_anti_constraints_status= true ; { tom.engine.adt.tominstruction.types.Instruction  tom_m=tom_match11_1; if ((tom_match11_tom_anti_constraints_status ==  true )) { if ( true ) {


        c.add(tom_m);
       } } } } } } } } return super.visit_Instruction(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_collectMatch( java.util.Collection  t0) { return new collectMatch(t0); }

 
  
  public Collection collectMatch(jjtraveler.Visitable subject) {
    Collection result = new HashSet();
    try {
      MuTraveler.init(tom_make_TopDown(tom_make_collectMatch(result))).visit(subject);
    } catch(jjtraveler.VisitFailure e) {
      System.out.println("strategy failed");
    }
    return result;
  }


}

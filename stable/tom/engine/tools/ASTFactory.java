/* Generated by TOM (version 2.5): Do not edit this file *//*
 *   
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine.tools;

import java.util.Collection;
import java.util.LinkedList;
import java.util.List;

import tom.engine.TomBase;
import tom.engine.adt.tomterm.*;
import tom.engine.xml.Constants;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.exception.TomRuntimeException;
import aterm.ATerm;

public class ASTFactory {
  /* Generated by TOM (version 2.5): Do not edit this file *//* Generated by TOM (version 2.5): Do not edit this file *//* Generated by TOM (version 2.5): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  /* Generated by TOM (version 2.5): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) { return  (t1==t2) ;}private static boolean tom_is_sort_int(int t) { return  true ;} private static boolean tom_equal_term_Instruction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Instruction(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.Instruction ;}private static boolean tom_equal_term_InstructionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_InstructionList(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.InstructionList ;}private static boolean tom_equal_term_TomTypeList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTypeList(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomTypeList ;}private static boolean tom_equal_term_TomType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomType(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomType ;}private static boolean tom_equal_term_TomVisit(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomVisit(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomVisit ;}private static boolean tom_equal_term_TomVisitList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomVisitList(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomVisitList ;}private static boolean tom_equal_term_TargetLanguage(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TargetLanguage(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TargetLanguage ;}private static boolean tom_equal_term_TomSymbol(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomSymbol(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomSymbol ;}private static boolean tom_equal_term_Declaration(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Declaration(Object t) { return  t instanceof tom.engine.adt.tomdeclaration.types.Declaration ;}private static boolean tom_equal_term_TomNameList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNameList(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNameList ;}private static boolean tom_equal_term_TomName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomName(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomName ;}private static boolean tom_equal_term_Expression(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Expression(Object t) { return  t instanceof tom.engine.adt.tomexpression.types.Expression ;}private static boolean tom_equal_term_PatternInstructionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PatternInstructionList(Object t) { return  t instanceof tom.engine.adt.tomterm.types.PatternInstructionList ;}private static boolean tom_equal_term_PatternInstruction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PatternInstruction(Object t) { return  t instanceof tom.engine.adt.tomterm.types.PatternInstruction ;}private static boolean tom_equal_term_TomList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomList(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomList ;}private static boolean tom_equal_term_TomTerm(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTerm(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomTerm ;}private static boolean tom_equal_term_Option(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Option(Object t) { return  t instanceof tom.engine.adt.tomoption.types.Option ;}private static boolean tom_equal_term_OptionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OptionList(Object t) { return  t instanceof tom.engine.adt.tomoption.types.OptionList ;}private static boolean tom_equal_term_Constraint(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Constraint(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.Constraint ;}private static boolean tom_equal_term_ConstraintList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ConstraintList(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.ConstraintList ;}private static boolean tom_equal_term_PairNameDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PairNameDecl(Object t) { return  t instanceof tom.engine.adt.tomslot.types.PairNameDecl ;}private static boolean tom_equal_term_PairNameDeclList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PairNameDeclList(Object t) { return  t instanceof tom.engine.adt.tomslot.types.PairNameDeclList ;}private static boolean tom_equal_term_SlotList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotList(Object t) { return  t instanceof tom.engine.adt.tomslot.types.SlotList ;}private static boolean tom_equal_term_Slot(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Slot(Object t) { return  t instanceof tom.engine.adt.tomslot.types.Slot ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_TomTermToInstruction( tom.engine.adt.tomterm.types.TomTerm  t0) { return  tom.engine.adt.tominstruction.types.instruction.TomTermToInstruction.make(t0) ; }private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_TargetLanguageToInstruction( tom.engine.adt.tomsignature.types.TargetLanguage  t0) { return  tom.engine.adt.tominstruction.types.instruction.TargetLanguageToInstruction.make(t0) ; }private static  tom.engine.adt.tomtype.types.TomType  tom_make_Type( tom.engine.adt.tomtype.types.TomType  t0,  tom.engine.adt.tomtype.types.TomType  t1) { return  tom.engine.adt.tomtype.types.tomtype.Type.make(t0, t1) ; }private static  tom.engine.adt.tomtype.types.TomType  tom_make_TomTypeAlone( String  t0) { return  tom.engine.adt.tomtype.types.tomtype.TomTypeAlone.make(t0) ; }private static  tom.engine.adt.tomtype.types.TomType  tom_make_ASTTomType( String  t0) { return  tom.engine.adt.tomtype.types.tomtype.ASTTomType.make(t0) ; }private static  tom.engine.adt.tomtype.types.TomType  tom_make_TypesToType( tom.engine.adt.tomtype.types.TomTypeList  t0,  tom.engine.adt.tomtype.types.TomType  t1) { return  tom.engine.adt.tomtype.types.tomtype.TypesToType.make(t0, t1) ; }private static  tom.engine.adt.tomtype.types.TomType  tom_make_TLType( tom.engine.adt.tomsignature.types.TargetLanguage  t0) { return  tom.engine.adt.tomtype.types.tomtype.TLType.make(t0) ; }private static  tom.engine.adt.tomsignature.types.TargetLanguage  tom_make_ITL( String  t0) { return  tom.engine.adt.tomsignature.types.targetlanguage.ITL.make(t0) ; }private static  tom.engine.adt.tomsignature.types.TomSymbol  tom_make_Symbol( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomtype.types.TomType  t1,  tom.engine.adt.tomslot.types.PairNameDeclList  t2,  tom.engine.adt.tomoption.types.OptionList  t3) { return  tom.engine.adt.tomsignature.types.tomsymbol.Symbol.make(t0, t1, t2, t3) ; }private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) { return  t instanceof tom.engine.adt.tomname.types.tomname.Name ;}private static  tom.engine.adt.tomname.types.TomName  tom_make_Name( String  t0) { return  tom.engine.adt.tomname.types.tomname.Name.make(t0) ; }private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) { return  t.getString() ;}private static  tom.engine.adt.tomname.types.TomName  tom_make_EmptyName() { return  tom.engine.adt.tomname.types.tomname.EmptyName.make() ; }private static boolean tom_is_fun_sym_TermAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_TermAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_TermAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_TermAppl_Args( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getArgs() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_TermAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_RecordAppl( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomNameList  t1,  tom.engine.adt.tomslot.types.SlotList  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.RecordAppl.make(t0, t1, t2, t3) ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getSlots() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.Variable ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_Variable( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomName  t1,  tom.engine.adt.tomtype.types.TomType  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.Variable.make(t0, t1, t2, t3) ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_VariableStar_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_VariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_TargetLanguageToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.TargetLanguageToTomTerm ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_TargetLanguageToTomTerm( tom.engine.adt.tomsignature.types.TargetLanguage  t0) { return  tom.engine.adt.tomterm.types.tomterm.TargetLanguageToTomTerm.make(t0) ; }private static  tom.engine.adt.tomsignature.types.TargetLanguage  tom_get_slot_TargetLanguageToTomTerm_Tl( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getTl() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_TomTypeToTomTerm( tom.engine.adt.tomtype.types.TomType  t0) { return  tom.engine.adt.tomterm.types.tomterm.TomTypeToTomTerm.make(t0) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_TomNameToTomTerm( tom.engine.adt.tomname.types.TomName  t0) { return  tom.engine.adt.tomterm.types.tomterm.TomNameToTomTerm.make(t0) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_DeclarationToTomTerm( tom.engine.adt.tomdeclaration.types.Declaration  t0) { return  tom.engine.adt.tomterm.types.tomterm.DeclarationToTomTerm.make(t0) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_ExpressionToTomTerm( tom.engine.adt.tomexpression.types.Expression  t0) { return  tom.engine.adt.tomterm.types.tomterm.ExpressionToTomTerm.make(t0) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_InstructionToTomTerm( tom.engine.adt.tominstruction.types.Instruction  t0) { return  tom.engine.adt.tomterm.types.tomterm.InstructionToTomTerm.make(t0) ; }private static boolean tom_is_fun_sym_Composite( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.Composite ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Composite_Args( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getArgs() ;}private static boolean tom_is_fun_sym_BuildConstant( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildConstant ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildConstant_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static boolean tom_is_fun_sym_BuildTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildTerm ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildTerm_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_BuildTerm_Args( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getArgs() ;}private static  String  tom_get_slot_BuildTerm_ModuleName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getModuleName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_BuildEmptyList( tom.engine.adt.tomname.types.TomName  t0) { return  tom.engine.adt.tomterm.types.tomterm.BuildEmptyList.make(t0) ; }private static boolean tom_is_fun_sym_BuildConsList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildConsList ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_BuildConsList( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return  tom.engine.adt.tomterm.types.tomterm.BuildConsList.make(t0, t1, t2) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildConsList_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildConsList_HeadTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getHeadTerm() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildConsList_TailTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getTailTerm() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_BuildAppendList( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return  tom.engine.adt.tomterm.types.tomterm.BuildAppendList.make(t0, t1, t2) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_BuildEmptyArray( tom.engine.adt.tomname.types.TomName  t0,  int  t1) { return  tom.engine.adt.tomterm.types.tomterm.BuildEmptyArray.make(t0, t1) ; }private static boolean tom_is_fun_sym_BuildConsArray( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildConsArray ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_BuildConsArray( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return  tom.engine.adt.tomterm.types.tomterm.BuildConsArray.make(t0, t1, t2) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildConsArray_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildConsArray_HeadTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getHeadTerm() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildConsArray_TailTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getTailTerm() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_BuildAppendArray( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return  tom.engine.adt.tomterm.types.tomterm.BuildAppendArray.make(t0, t1, t2) ; }private static  tom.engine.adt.tomoption.types.Option  tom_make_DeclarationToOption( tom.engine.adt.tomdeclaration.types.Declaration  t0) { return  tom.engine.adt.tomoption.types.option.DeclarationToOption.make(t0) ; }private static  tom.engine.adt.tomoption.types.Option  tom_make_TomNameToOption( tom.engine.adt.tomname.types.TomName  t0) { return  tom.engine.adt.tomoption.types.option.TomNameToOption.make(t0) ; }private static  tom.engine.adt.tomoption.types.Option  tom_make_TomTermToOption( tom.engine.adt.tomterm.types.TomTerm  t0) { return  tom.engine.adt.tomoption.types.option.TomTermToOption.make(t0) ; }private static  tom.engine.adt.tomoption.types.Option  tom_make_DefinedSymbol() { return  tom.engine.adt.tomoption.types.option.DefinedSymbol.make() ; }private static  tom.engine.adt.tomoption.types.Option  tom_make_OriginTracking( tom.engine.adt.tomname.types.TomName  t0,  int  t1,  String  t2) { return  tom.engine.adt.tomoption.types.option.OriginTracking.make(t0, t1, t2) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_make_AssignTo( tom.engine.adt.tomterm.types.TomTerm  t0) { return  tom.engine.adt.tomconstraint.types.constraint.AssignTo.make(t0) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_make_AssignPositionTo( tom.engine.adt.tomterm.types.TomTerm  t0) { return  tom.engine.adt.tomconstraint.types.constraint.AssignPositionTo.make(t0) ; }private static  tom.engine.adt.tomslot.types.Slot  tom_make_PairSlotAppl( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(t0, t1) ; }private static boolean tom_is_fun_sym_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  t) { return  t instanceof tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction || t instanceof tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_empty_list_concInstruction() { return  tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction.make() ; }private static  tom.engine.adt.tominstruction.types.InstructionList  tom_cons_list_concInstruction( tom.engine.adt.tominstruction.types.Instruction  e,  tom.engine.adt.tominstruction.types.InstructionList  l) { return  tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction.make(e,l) ; }private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_head_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) { return  l.getHeadconcInstruction() ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_tail_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) { return  l.getTailconcInstruction() ;}private static boolean tom_is_empty_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) { return  l.isEmptyconcInstruction() ;}   private static   tom.engine.adt.tominstruction.types.InstructionList  tom_append_list_concInstruction( tom.engine.adt.tominstruction.types.InstructionList l1,  tom.engine.adt.tominstruction.types.InstructionList  l2) {     if(tom_is_empty_concInstruction_InstructionList(l1)) {       return l2;     } else if(tom_is_empty_concInstruction_InstructionList(l2)) {       return l1;     } else if(tom_is_empty_concInstruction_InstructionList(tom_get_tail_concInstruction_InstructionList(l1))) {       return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(tom_get_head_concInstruction_InstructionList(l1),l2);     } else {       return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(tom_get_head_concInstruction_InstructionList(l1),tom_append_list_concInstruction(tom_get_tail_concInstruction_InstructionList(l1),l2));     }   }   private static   tom.engine.adt.tominstruction.types.InstructionList  tom_get_slice_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  begin,  tom.engine.adt.tominstruction.types.InstructionList  end, tom.engine.adt.tominstruction.types.InstructionList  tail) {     if(tom_equal_term_InstructionList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(tom_get_head_concInstruction_InstructionList(begin),( tom.engine.adt.tominstruction.types.InstructionList )tom_get_slice_concInstruction(tom_get_tail_concInstruction_InstructionList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concTomType( tom.engine.adt.tomtype.types.TomTypeList  t) { return  t instanceof tom.engine.adt.tomtype.types.tomtypelist.ConsconcTomType || t instanceof tom.engine.adt.tomtype.types.tomtypelist.EmptyconcTomType ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_empty_list_concTomType() { return  tom.engine.adt.tomtype.types.tomtypelist.EmptyconcTomType.make() ; }private static  tom.engine.adt.tomtype.types.TomTypeList  tom_cons_list_concTomType( tom.engine.adt.tomtype.types.TomType  e,  tom.engine.adt.tomtype.types.TomTypeList  l) { return  tom.engine.adt.tomtype.types.tomtypelist.ConsconcTomType.make(e,l) ; }private static  tom.engine.adt.tomtype.types.TomType  tom_get_head_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) { return  l.getHeadconcTomType() ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_get_tail_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) { return  l.getTailconcTomType() ;}private static boolean tom_is_empty_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) { return  l.isEmptyconcTomType() ;}   private static   tom.engine.adt.tomtype.types.TomTypeList  tom_append_list_concTomType( tom.engine.adt.tomtype.types.TomTypeList l1,  tom.engine.adt.tomtype.types.TomTypeList  l2) {     if(tom_is_empty_concTomType_TomTypeList(l1)) {       return l2;     } else if(tom_is_empty_concTomType_TomTypeList(l2)) {       return l1;     } else if(tom_is_empty_concTomType_TomTypeList(tom_get_tail_concTomType_TomTypeList(l1))) {       return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(tom_get_head_concTomType_TomTypeList(l1),l2);     } else {       return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(tom_get_head_concTomType_TomTypeList(l1),tom_append_list_concTomType(tom_get_tail_concTomType_TomTypeList(l1),l2));     }   }   private static   tom.engine.adt.tomtype.types.TomTypeList  tom_get_slice_concTomType( tom.engine.adt.tomtype.types.TomTypeList  begin,  tom.engine.adt.tomtype.types.TomTypeList  end, tom.engine.adt.tomtype.types.TomTypeList  tail) {     if(tom_equal_term_TomTypeList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(tom_get_head_concTomType_TomTypeList(begin),( tom.engine.adt.tomtype.types.TomTypeList )tom_get_slice_concTomType(tom_get_tail_concTomType_TomTypeList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concTomVisit( tom.engine.adt.tomsignature.types.TomVisitList  t) { return  t instanceof tom.engine.adt.tomsignature.types.tomvisitlist.ConsconcTomVisit || t instanceof tom.engine.adt.tomsignature.types.tomvisitlist.EmptyconcTomVisit ;}private static  tom.engine.adt.tomsignature.types.TomVisitList  tom_empty_list_concTomVisit() { return  tom.engine.adt.tomsignature.types.tomvisitlist.EmptyconcTomVisit.make() ; }private static  tom.engine.adt.tomsignature.types.TomVisitList  tom_cons_list_concTomVisit( tom.engine.adt.tomsignature.types.TomVisit  e,  tom.engine.adt.tomsignature.types.TomVisitList  l) { return  tom.engine.adt.tomsignature.types.tomvisitlist.ConsconcTomVisit.make(e,l) ; }private static  tom.engine.adt.tomsignature.types.TomVisit  tom_get_head_concTomVisit_TomVisitList( tom.engine.adt.tomsignature.types.TomVisitList  l) { return  l.getHeadconcTomVisit() ;}private static  tom.engine.adt.tomsignature.types.TomVisitList  tom_get_tail_concTomVisit_TomVisitList( tom.engine.adt.tomsignature.types.TomVisitList  l) { return  l.getTailconcTomVisit() ;}private static boolean tom_is_empty_concTomVisit_TomVisitList( tom.engine.adt.tomsignature.types.TomVisitList  l) { return  l.isEmptyconcTomVisit() ;}   private static   tom.engine.adt.tomsignature.types.TomVisitList  tom_append_list_concTomVisit( tom.engine.adt.tomsignature.types.TomVisitList l1,  tom.engine.adt.tomsignature.types.TomVisitList  l2) {     if(tom_is_empty_concTomVisit_TomVisitList(l1)) {       return l2;     } else if(tom_is_empty_concTomVisit_TomVisitList(l2)) {       return l1;     } else if(tom_is_empty_concTomVisit_TomVisitList(tom_get_tail_concTomVisit_TomVisitList(l1))) {       return ( tom.engine.adt.tomsignature.types.TomVisitList )tom_cons_list_concTomVisit(tom_get_head_concTomVisit_TomVisitList(l1),l2);     } else {       return ( tom.engine.adt.tomsignature.types.TomVisitList )tom_cons_list_concTomVisit(tom_get_head_concTomVisit_TomVisitList(l1),tom_append_list_concTomVisit(tom_get_tail_concTomVisit_TomVisitList(l1),l2));     }   }   private static   tom.engine.adt.tomsignature.types.TomVisitList  tom_get_slice_concTomVisit( tom.engine.adt.tomsignature.types.TomVisitList  begin,  tom.engine.adt.tomsignature.types.TomVisitList  end, tom.engine.adt.tomsignature.types.TomVisitList  tail) {     if(tom_equal_term_TomVisitList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomsignature.types.TomVisitList )tom_cons_list_concTomVisit(tom_get_head_concTomVisit_TomVisitList(begin),( tom.engine.adt.tomsignature.types.TomVisitList )tom_get_slice_concTomVisit(tom_get_tail_concTomVisit_TomVisitList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomname.types.TomNameList  t) { return  t instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName || t instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_empty_list_concTomName() { return  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ; }private static  tom.engine.adt.tomname.types.TomNameList  tom_cons_list_concTomName( tom.engine.adt.tomname.types.TomName  e,  tom.engine.adt.tomname.types.TomNameList  l) { return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_head_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getHeadconcTomName() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_tail_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getTailconcTomName() ;}private static boolean tom_is_empty_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.isEmptyconcTomName() ;}   private static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if(tom_is_empty_concTomName_TomNameList(l1)) {       return l2;     } else if(tom_is_empty_concTomName_TomNameList(l2)) {       return l1;     } else if(tom_is_empty_concTomName_TomNameList(tom_get_tail_concTomName_TomNameList(l1))) {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(l1),l2);     } else {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(l1),tom_append_list_concTomName(tom_get_tail_concTomName_TomNameList(l1),l2));     }   }   private static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if(tom_equal_term_TomNameList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(begin),( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName(tom_get_tail_concTomName_TomNameList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concPatternInstruction( tom.engine.adt.tomterm.types.PatternInstructionList  t) { return  t instanceof tom.engine.adt.tomterm.types.patterninstructionlist.ConsconcPatternInstruction || t instanceof tom.engine.adt.tomterm.types.patterninstructionlist.EmptyconcPatternInstruction ;}private static  tom.engine.adt.tomterm.types.PatternInstructionList  tom_empty_list_concPatternInstruction() { return  tom.engine.adt.tomterm.types.patterninstructionlist.EmptyconcPatternInstruction.make() ; }private static  tom.engine.adt.tomterm.types.PatternInstructionList  tom_cons_list_concPatternInstruction( tom.engine.adt.tomterm.types.PatternInstruction  e,  tom.engine.adt.tomterm.types.PatternInstructionList  l) { return  tom.engine.adt.tomterm.types.patterninstructionlist.ConsconcPatternInstruction.make(e,l) ; }private static  tom.engine.adt.tomterm.types.PatternInstruction  tom_get_head_concPatternInstruction_PatternInstructionList( tom.engine.adt.tomterm.types.PatternInstructionList  l) { return  l.getHeadconcPatternInstruction() ;}private static  tom.engine.adt.tomterm.types.PatternInstructionList  tom_get_tail_concPatternInstruction_PatternInstructionList( tom.engine.adt.tomterm.types.PatternInstructionList  l) { return  l.getTailconcPatternInstruction() ;}private static boolean tom_is_empty_concPatternInstruction_PatternInstructionList( tom.engine.adt.tomterm.types.PatternInstructionList  l) { return  l.isEmptyconcPatternInstruction() ;}   private static   tom.engine.adt.tomterm.types.PatternInstructionList  tom_append_list_concPatternInstruction( tom.engine.adt.tomterm.types.PatternInstructionList l1,  tom.engine.adt.tomterm.types.PatternInstructionList  l2) {     if(tom_is_empty_concPatternInstruction_PatternInstructionList(l1)) {       return l2;     } else if(tom_is_empty_concPatternInstruction_PatternInstructionList(l2)) {       return l1;     } else if(tom_is_empty_concPatternInstruction_PatternInstructionList(tom_get_tail_concPatternInstruction_PatternInstructionList(l1))) {       return ( tom.engine.adt.tomterm.types.PatternInstructionList )tom_cons_list_concPatternInstruction(tom_get_head_concPatternInstruction_PatternInstructionList(l1),l2);     } else {       return ( tom.engine.adt.tomterm.types.PatternInstructionList )tom_cons_list_concPatternInstruction(tom_get_head_concPatternInstruction_PatternInstructionList(l1),tom_append_list_concPatternInstruction(tom_get_tail_concPatternInstruction_PatternInstructionList(l1),l2));     }   }   private static   tom.engine.adt.tomterm.types.PatternInstructionList  tom_get_slice_concPatternInstruction( tom.engine.adt.tomterm.types.PatternInstructionList  begin,  tom.engine.adt.tomterm.types.PatternInstructionList  end, tom.engine.adt.tomterm.types.PatternInstructionList  tail) {     if(tom_equal_term_PatternInstructionList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomterm.types.PatternInstructionList )tom_cons_list_concPatternInstruction(tom_get_head_concPatternInstruction_PatternInstructionList(begin),( tom.engine.adt.tomterm.types.PatternInstructionList )tom_get_slice_concPatternInstruction(tom_get_tail_concPatternInstruction_PatternInstructionList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concTomTerm( tom.engine.adt.tomterm.types.TomList  t) { return  t instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm || t instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm ;}private static  tom.engine.adt.tomterm.types.TomList  tom_empty_list_concTomTerm() { return  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ; }private static  tom.engine.adt.tomterm.types.TomList  tom_cons_list_concTomTerm( tom.engine.adt.tomterm.types.TomTerm  e,  tom.engine.adt.tomterm.types.TomList  l) { return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(e,l) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_head_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) { return  l.getHeadconcTomTerm() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_tail_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) { return  l.getTailconcTomTerm() ;}private static boolean tom_is_empty_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) { return  l.isEmptyconcTomTerm() ;}   private static   tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList l1,  tom.engine.adt.tomterm.types.TomList  l2) {     if(tom_is_empty_concTomTerm_TomList(l1)) {       return l2;     } else if(tom_is_empty_concTomTerm_TomList(l2)) {       return l1;     } else if(tom_is_empty_concTomTerm_TomList(tom_get_tail_concTomTerm_TomList(l1))) {       return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(tom_get_head_concTomTerm_TomList(l1),l2);     } else {       return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(tom_get_head_concTomTerm_TomList(l1),tom_append_list_concTomTerm(tom_get_tail_concTomTerm_TomList(l1),l2));     }   }   private static   tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end, tom.engine.adt.tomterm.types.TomList  tail) {     if(tom_equal_term_TomList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(tom_get_head_concTomTerm_TomList(begin),( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm(tom_get_tail_concTomTerm_TomList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concOption( tom.engine.adt.tomoption.types.OptionList  t) { return  t instanceof tom.engine.adt.tomoption.types.optionlist.ConsconcOption || t instanceof tom.engine.adt.tomoption.types.optionlist.EmptyconcOption ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_empty_list_concOption() { return  tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_cons_list_concOption( tom.engine.adt.tomoption.types.Option  e,  tom.engine.adt.tomoption.types.OptionList  l) { return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make(e,l) ; }private static  tom.engine.adt.tomoption.types.Option  tom_get_head_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.getHeadconcOption() ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_tail_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.getTailconcOption() ;}private static boolean tom_is_empty_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.isEmptyconcOption() ;}   private static   tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList l1,  tom.engine.adt.tomoption.types.OptionList  l2) {     if(tom_is_empty_concOption_OptionList(l1)) {       return l2;     } else if(tom_is_empty_concOption_OptionList(l2)) {       return l1;     } else if(tom_is_empty_concOption_OptionList(tom_get_tail_concOption_OptionList(l1))) {       return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(tom_get_head_concOption_OptionList(l1),l2);     } else {       return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(tom_get_head_concOption_OptionList(l1),tom_append_list_concOption(tom_get_tail_concOption_OptionList(l1),l2));     }   }   private static   tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end, tom.engine.adt.tomoption.types.OptionList  tail) {     if(tom_equal_term_OptionList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(tom_get_head_concOption_OptionList(begin),( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption(tom_get_tail_concOption_OptionList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  t) { return  t instanceof tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint || t instanceof tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_empty_list_concConstraint() { return  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ; }private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_cons_list_concConstraint( tom.engine.adt.tomconstraint.types.Constraint  e,  tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make(e,l) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_head_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  l.getHeadconcConstraint() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_tail_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  l.getTailconcConstraint() ;}private static boolean tom_is_empty_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  l.isEmptyconcConstraint() ;}   private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {     if(tom_is_empty_concConstraint_ConstraintList(l1)) {       return l2;     } else if(tom_is_empty_concConstraint_ConstraintList(l2)) {       return l1;     } else if(tom_is_empty_concConstraint_ConstraintList(tom_get_tail_concConstraint_ConstraintList(l1))) {       return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(tom_get_head_concConstraint_ConstraintList(l1),l2);     } else {       return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(tom_get_head_concConstraint_ConstraintList(l1),tom_append_list_concConstraint(tom_get_tail_concConstraint_ConstraintList(l1),l2));     }   }   private static   tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end, tom.engine.adt.tomconstraint.types.ConstraintList  tail) {     if(tom_equal_term_ConstraintList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(tom_get_head_concConstraint_ConstraintList(begin),( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint(tom_get_tail_concConstraint_ConstraintList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList  t) { return  t instanceof tom.engine.adt.tomslot.types.pairnamedecllist.ConsconcPairNameDecl || t instanceof tom.engine.adt.tomslot.types.pairnamedecllist.EmptyconcPairNameDecl ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_empty_list_concPairNameDecl() { return  tom.engine.adt.tomslot.types.pairnamedecllist.EmptyconcPairNameDecl.make() ; }private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_cons_list_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDecl  e,  tom.engine.adt.tomslot.types.PairNameDeclList  l) { return  tom.engine.adt.tomslot.types.pairnamedecllist.ConsconcPairNameDecl.make(e,l) ; }private static  tom.engine.adt.tomslot.types.PairNameDecl  tom_get_head_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) { return  l.getHeadconcPairNameDecl() ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_tail_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) { return  l.getTailconcPairNameDecl() ;}private static boolean tom_is_empty_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) { return  l.isEmptyconcPairNameDecl() ;}   private static   tom.engine.adt.tomslot.types.PairNameDeclList  tom_append_list_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList l1,  tom.engine.adt.tomslot.types.PairNameDeclList  l2) {     if(tom_is_empty_concPairNameDecl_PairNameDeclList(l1)) {       return l2;     } else if(tom_is_empty_concPairNameDecl_PairNameDeclList(l2)) {       return l1;     } else if(tom_is_empty_concPairNameDecl_PairNameDeclList(tom_get_tail_concPairNameDecl_PairNameDeclList(l1))) {       return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(tom_get_head_concPairNameDecl_PairNameDeclList(l1),l2);     } else {       return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(tom_get_head_concPairNameDecl_PairNameDeclList(l1),tom_append_list_concPairNameDecl(tom_get_tail_concPairNameDecl_PairNameDeclList(l1),l2));     }   }   private static   tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_slice_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList  begin,  tom.engine.adt.tomslot.types.PairNameDeclList  end, tom.engine.adt.tomslot.types.PairNameDeclList  tail) {     if(tom_equal_term_PairNameDeclList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(tom_get_head_concPairNameDecl_PairNameDeclList(begin),( tom.engine.adt.tomslot.types.PairNameDeclList )tom_get_slice_concPairNameDecl(tom_get_tail_concPairNameDecl_PairNameDeclList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concSlot( tom.engine.adt.tomslot.types.SlotList  t) { return  t instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot || t instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_empty_list_concSlot() { return  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ; }private static  tom.engine.adt.tomslot.types.SlotList  tom_cons_list_concSlot( tom.engine.adt.tomslot.types.Slot  e,  tom.engine.adt.tomslot.types.SlotList  l) { return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.engine.adt.tomslot.types.Slot  tom_get_head_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.getHeadconcSlot() ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_tail_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.getTailconcSlot() ;}private static boolean tom_is_empty_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) { return  l.isEmptyconcSlot() ;}   private static   tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList l1,  tom.engine.adt.tomslot.types.SlotList  l2) {     if(tom_is_empty_concSlot_SlotList(l1)) {       return l2;     } else if(tom_is_empty_concSlot_SlotList(l2)) {       return l1;     } else if(tom_is_empty_concSlot_SlotList(tom_get_tail_concSlot_SlotList(l1))) {       return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(l1),l2);     } else {       return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(tom_get_tail_concSlot_SlotList(l1),l2));     }   }   private static   tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end, tom.engine.adt.tomslot.types.SlotList  tail) {     if(tom_equal_term_SlotList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(tom_get_head_concSlot_SlotList(begin),( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot(tom_get_tail_concSlot_SlotList(begin),end,tail));     }   }    
   // Suppresses default constructor, ensuring non-instantiability.
  private ASTFactory() {}

  public static TomList reverse(TomList l) {
    TomList reverse = tom_empty_list_concTomTerm();
    while(!l.isEmptyconcTomTerm()){
      reverse = tom_cons_list_concTomTerm(l.getHeadconcTomTerm(),tom_append_list_concTomTerm(reverse,tom_empty_list_concTomTerm()));
      l = l.getTailconcTomTerm();
    }
    return reverse;
  }

  public static TomList makeList(Collection c) {
    Object array[] = c.toArray();
    TomList list = tom_empty_list_concTomTerm();
    for(int i=array.length-1; i>=0 ; i--) {
      Object elt = array[i];
      TomTerm term;
      if(elt instanceof TargetLanguage) {
        term = tom_make_TargetLanguageToTomTerm((TargetLanguage)elt);
      } else if(elt instanceof TomType) {
        term = tom_make_TomTypeToTomTerm((TomType)elt);
      } else if(elt instanceof Declaration) {
        term = tom_make_DeclarationToTomTerm((Declaration)elt);
      } else if(elt instanceof Expression) {
        term = tom_make_ExpressionToTomTerm((Expression)elt);
      } else if(elt instanceof TomName) {
        term = tom_make_TomNameToTomTerm((TomName)elt);
      } else if(elt instanceof Instruction) {
        term = tom_make_InstructionToTomTerm((Instruction)elt);
      } else {
        term = (TomTerm)elt;
      }
      list = tom_cons_list_concTomTerm(term,tom_append_list_concTomTerm(list,tom_empty_list_concTomTerm()));
    }
    return list;
  }

  public static InstructionList makeInstructionList(Collection c) {
    Object array[] = c.toArray();
    InstructionList list = tom_empty_list_concInstruction();
    for(int i=array.length-1; i>=0 ; i--) {
      Object elt = array[i];
      Instruction term;
      if(elt instanceof TargetLanguage) {
        term = tom_make_TargetLanguageToInstruction((TargetLanguage)elt);
      } else if(elt instanceof TomTerm) {
        term = tom_make_TomTermToInstruction((TomTerm)elt);
          //System.out.println("term   = " + term);
      } else if(elt instanceof Instruction) {
        term = (Instruction)elt;
      } else {
        /* XXX: is this an error ? if yes, it should not be that silent */
        System.out.println("elt   = " + elt);
        term = (Instruction) elt;
      }
      list = tom_cons_list_concInstruction(term,tom_append_list_concInstruction(list,tom_empty_list_concInstruction()));
    }
    return list;
  }

  public static OptionList makeOptionList(List argumentList) {
    OptionList list = tom_empty_list_concOption();
    for(int i=argumentList.size()-1; i>=0 ; i--) {
      Object elt = argumentList.get(i);
      Option term;
      if(elt instanceof TomName) {
        term = tom_make_TomNameToOption((TomName)elt);
      } else if(elt instanceof Declaration) {
        term = tom_make_DeclarationToOption((Declaration)elt);
      } else if(elt instanceof TomTerm) {
        term = tom_make_TomTermToOption((TomTerm)elt);
      } else {
        term = (Option) elt;
      }
      list = tom_cons_list_concOption(term,tom_append_list_concOption(list,tom_empty_list_concOption()));
    }
    return list;
  }

  public static ConstraintList makeConstraintList(List argumentList) {
    ConstraintList list = tom_empty_list_concConstraint();
    for(int i=argumentList.size()-1; i>=0 ; i--) {
      Object elt = argumentList.get(i);
      Constraint term;
      term = (Constraint)elt;
      list = tom_cons_list_concConstraint(term,tom_append_list_concConstraint(list,tom_empty_list_concConstraint()));
    }
    return list;
  }

  public static TomNameList makeNameList(List argumentList) {
    TomNameList list = tom_empty_list_concTomName();
    for(int i=argumentList.size()-1; i>=0 ; i--) {
      Object elt = argumentList.get(i);
      TomName term = (TomName) elt;
      list = tom_cons_list_concTomName(term,tom_append_list_concTomName(list,tom_empty_list_concTomName()));
    }
    return list;
  }

  public static SlotList makeSlotList(List argumentList) {
    SlotList list = tom_empty_list_concSlot();
    for(int i=argumentList.size()-1; i>=0 ; i--) {
      Object elt = argumentList.get(i);
      Slot term = (Slot) elt;
      list = tom_cons_list_concSlot(term,tom_append_list_concSlot(list,tom_empty_list_concSlot()));
    }
    return list;
  }

  public static PairNameDeclList makePairNameDeclList(List argumentList) {
    PairNameDeclList list = tom_empty_list_concPairNameDecl();
    for(int i=argumentList.size()-1; i>=0 ; i--) {
      Object elt = argumentList.get(i);
      PairNameDecl term = (PairNameDecl) elt;
      list = tom_cons_list_concPairNameDecl(term,tom_append_list_concPairNameDecl(list,tom_empty_list_concPairNameDecl()));
    }
    return list;
  }

  public static PatternInstructionList makePatternInstructionList(List argumentList) {
    PatternInstructionList list = tom_empty_list_concPatternInstruction();
    for(int i=argumentList.size()-1; i>=0 ; i--) {
      Object elt = argumentList.get(i);
      PatternInstruction term;
      term = (PatternInstruction)elt;
      list = tom_cons_list_concPatternInstruction(term,tom_append_list_concPatternInstruction(list,tom_empty_list_concPatternInstruction()));
    }
    return list;
  }

  public static TomVisitList makeTomVisitList(List argumentList) {
    TomVisitList list = tom_empty_list_concTomVisit();
    for(int i=argumentList.size()-1; i>=0 ; i--) {
      Object elt = argumentList.get(i);
      TomVisit term;
      term = (TomVisit)elt;
      list = tom_cons_list_concTomVisit(term,tom_append_list_concTomVisit(list,tom_empty_list_concTomVisit()));
    }
    return list;
  }
   
  public static TomSymbol makeSymbol(String symbolName, TomType resultType, TomTypeList typeList,
      PairNameDeclList pairNameDeclList, List optionList) {
    return tom_make_Symbol(tom_make_Name(symbolName),tom_make_TypesToType(typeList,resultType),pairNameDeclList,makeOptionList(optionList));
  }

  public static OptionList makeOption(Option arg) {
    OptionList list = tom_empty_list_concOption();
    if(arg!= null) {
      list = tom_cons_list_concOption(arg,tom_append_list_concOption(list,tom_empty_list_concOption()));
    }
    return list;
  }

  public static ConstraintList makeConstraint(Constraint arg) {
    ConstraintList list = tom_empty_list_concConstraint();
    if(arg!= null) {
      list = tom_cons_list_concConstraint(arg,tom_append_list_concConstraint(list,tom_empty_list_concConstraint()));
    }
    return list;
  }

  public static Constraint makeAssignTo(TomName name,int line, String fileName) {
    return tom_make_AssignTo(tom_make_Variable(makeOption(makeOriginTracking(name.getString(),line,fileName)),name,tom_make_TomTypeAlone("unknown type"),tom_empty_list_concConstraint()))


;
  }
  
  public static Constraint makeStorePosition(TomName name,int line, String fileName) {
    return tom_make_AssignPositionTo(tom_make_Variable(makeOption(makeOriginTracking(name.getString(),line,fileName)),name,tom_make_TomTypeAlone("unknown type"),tom_empty_list_concConstraint()))


;
  }

  public static OptionList makeOption(Option arg, Option info) {
    OptionList list = tom_empty_list_concOption();
    if(arg!= null) {
      list = tom_cons_list_concOption(arg,tom_append_list_concOption(list,tom_empty_list_concOption()));
    }
    list = tom_cons_list_concOption(info,tom_append_list_concOption(list,tom_empty_list_concOption()));
    return list;
  }

  
  private static Option makeOriginTracking(String name, int line , String fileName) {
    return tom_make_OriginTracking(tom_make_Name(name),line,fileName);
  }

  
  protected static TomType makeType(String typeNameTom, String typeNametGL) {
    TomType typeTom = tom_make_ASTTomType(typeNameTom);
    TomType sortTL  = tom_make_TLType(tom_make_ITL(typeNametGL));
    return tom_make_Type(typeTom,sortTL);
  }
  
    /*
     * create an <sort> symbol
     * where <sort> could be int. double or String  
     */
  private static void makeSortSymbol(SymbolTable symbolTable,
                             String sort,
                             String value, List optionList) {
    TomTypeList typeList = tom_empty_list_concTomType();
    PairNameDeclList pairSlotDeclList = tom_empty_list_concPairNameDecl();
    TomSymbol astSymbol = makeSymbol(value,tom_make_TomTypeAlone(sort),typeList,pairSlotDeclList,optionList);
    symbolTable.putSymbol(value,astSymbol);
  }
  
    /*
     * create an integer symbol
     */
  public static void makeIntegerSymbol(SymbolTable symbolTable,
                                String value, List optionList) {
    String sort = "int";
    makeSortSymbol(symbolTable, sort, value, optionList);
  }

    /*
     * create a long symbol
     */
  public static void makeLongSymbol(SymbolTable symbolTable,
                             String value, List optionList) {
    String sort = "long";
    makeSortSymbol(symbolTable, sort, value, optionList);
  }

    /*
     * create a char symbol
     */
  public static void makeCharSymbol(SymbolTable symbolTable,
                             String value, List optionList) {
    String sort = "char";
    makeSortSymbol(symbolTable, sort, value, optionList);
  }
    /*
     * create a double symbol
     */
  public static void makeDoubleSymbol(SymbolTable symbolTable,
                               String value, List optionList) {
    String sort = "double";
    makeSortSymbol(symbolTable, sort, value, optionList);
  }

    /*
     * create a string symbol
     */
  public static void makeStringSymbol(SymbolTable symbolTable,
                               String value, List optionList) {
    String sort = "String";
    makeSortSymbol(symbolTable, sort, value, optionList);
  } 
  
    /*
     * update the root of lhs: it becomes a defined symbol
     */
  public static TomSymbol updateDefinedSymbol(SymbolTable symbolTable, TomTerm term) {
    if(term.isTermAppl() || term.isRecordAppl()) {
      String key = term.getNameList().getHeadconcTomName().getString();
      TomSymbol symbol = symbolTable.getSymbolFromName(key);
      if (symbol != null) {
        OptionList optionList = symbol.getOption();
        optionList = tom_append_list_concOption(optionList,tom_cons_list_concOption(tom_make_DefinedSymbol(),tom_empty_list_concOption()));
        symbolTable.putSymbol(key,symbol.setOption(optionList));
        return symbol;
      }
    }
    return null;
  }

  public static String makeSingleLineCode(String code, boolean pretty) {
    if(!pretty) {
      code = code.replace('\n', ' ');
      code = code.replace('\t', ' ');
      code = code.replace('\r', ' ');
    }
    return code;
  }

  public static TomName makeName(String slotName) {
    if(slotName.length()>0)
      return tom_make_Name(slotName);
    else
      return tom_make_EmptyName();
  }

  public static String encodeXMLString(SymbolTable symbolTable, String name) {
    name = "\"" + name + "\"";
    makeStringSymbol(symbolTable,name, new LinkedList());
    return name;
  }

  public static String makeTomVariableName(String name) {
    return "tom_" + name;
  }

  public static TomList metaEncodeTermList(SymbolTable symbolTable,TomList list) {
    if (tom_is_sort_TomList(list)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch232NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomList )list);if (tom_is_fun_sym_concTomTerm(tomMatch232NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch232NameNumber_freshVar_0=tomMatch232NameNumberfreshSubject_1;if (tom_is_empty_concTomTerm_TomList(tomMatch232NameNumber_freshVar_0)) {if ( true ) {
 return tom_empty_list_concTomTerm();}}}}if (tom_is_fun_sym_concTomTerm(tomMatch232NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch232NameNumber_freshVar_1=tomMatch232NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch232NameNumber_freshVar_1))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch232NameNumber_freshVar_2=tom_get_tail_concTomTerm_TomList(tomMatch232NameNumber_freshVar_1);if ( true ) {

        TomList tl = metaEncodeTermList(symbolTable,tomMatch232NameNumber_freshVar_2);
        return tom_cons_list_concTomTerm(metaEncodeXMLAppl(symbolTable,tom_get_head_concTomTerm_TomList(tomMatch232NameNumber_freshVar_1)),tom_append_list_concTomTerm(tl,tom_empty_list_concTomTerm()));
      }}}}}}}

    return list;
  }

  public static TomTerm encodeXMLAppl(SymbolTable symbolTable, TomTerm term) {
      /*
       * encode a String into a quoted-string
       * Appl(...,Name("string"),...) becomes
       * Appl(...,Name("\"string\""),...)
       */
    TomNameList newNameList = tom_empty_list_concTomName();
    if (tom_is_sort_TomTerm(term)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch233NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )term);if (tom_is_fun_sym_RecordAppl(tomMatch233NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch233NameNumber_freshVar_0=tom_get_slot_RecordAppl_NameList(tomMatch233NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch233NameNumber_freshVar_0)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch233NameNumber_freshVar_1=tomMatch233NameNumber_freshVar_0;{  tom.engine.adt.tomname.types.TomNameList  tomMatch233NameNumber_begin_3=tomMatch233NameNumber_freshVar_1;{  tom.engine.adt.tomname.types.TomNameList  tomMatch233NameNumber_end_4=tomMatch233NameNumber_freshVar_1;do {{{  tom.engine.adt.tomname.types.TomNameList  tomMatch233NameNumber_freshVar_2=tomMatch233NameNumber_end_4;if (!(tom_is_empty_concTomName_TomNameList(tomMatch233NameNumber_freshVar_2))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch233NameNumber_freshVar_2))) {{  String  tomMatch233NameNumber_freshVar_7=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch233NameNumber_freshVar_2));{  tom.engine.adt.tomname.types.TomNameList  tomMatch233NameNumber_freshVar_5=tom_get_tail_concTomName_TomNameList(tomMatch233NameNumber_freshVar_2);if ( true ) {

        newNameList = tom_append_list_concTomName(newNameList,tom_cons_list_concTomName(tom_make_Name(encodeXMLString(symbolTable,tomMatch233NameNumber_freshVar_7)),tom_empty_list_concTomName()));
      }}}}}}if (tom_is_empty_concTomName_TomNameList(tomMatch233NameNumber_end_4)) {tomMatch233NameNumber_end_4=tomMatch233NameNumber_begin_3;} else {tomMatch233NameNumber_end_4=tom_get_tail_concTomName_TomNameList(tomMatch233NameNumber_end_4);}}} while(!(tom_equal_term_TomNameList(tomMatch233NameNumber_end_4, tomMatch233NameNumber_begin_3)));}}}}}}}}

    term = term.setNameList(newNameList);
      //System.out.println("encodeXMLAppl = " + term);
    return term;
  }

  public static TomTerm metaEncodeXMLAppl(SymbolTable symbolTable, TomTerm term) {
      /*
       * meta-encode a String into a TextNode
       * Appl(...,Name("\"string\""),...) becomes
       * Appl(...,Name("TextNode"),[Appl(...,Name("\"string\""),...)],...)
       */
      //System.out.println("metaEncode: " + term);
    if (tom_is_sort_TomTerm(term)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch234NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )term);if (tom_is_fun_sym_RecordAppl(tomMatch234NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch234NameNumber_freshVar_0=tom_get_slot_RecordAppl_NameList(tomMatch234NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch234NameNumber_freshVar_0)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch234NameNumber_freshVar_1=tomMatch234NameNumber_freshVar_0;if (!(tom_is_empty_concTomName_TomNameList(tomMatch234NameNumber_freshVar_1))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch234NameNumber_freshVar_1))) {{  String  tomMatch234NameNumber_freshVar_3=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch234NameNumber_freshVar_1));{  tom.engine.adt.tomname.types.TomNameList  tomMatch234NameNumber_freshVar_2=tom_get_tail_concTomName_TomNameList(tomMatch234NameNumber_freshVar_1);if (tom_is_empty_concTomName_TomNameList(tomMatch234NameNumber_freshVar_2)) {if ( true ) {

          //System.out.println("tomName = " + tomName);
        TomSymbol tomSymbol = symbolTable.getSymbolFromName(tomMatch234NameNumber_freshVar_3);
        if(tomSymbol != null) {
          if(symbolTable.isStringType(TomBase.getTomType(TomBase.getSymbolCodomain(tomSymbol)))) {
            Option info = tom_make_OriginTracking(tom_make_Name(Constants.TEXT_NODE),-1,"unknown filename");
            term = tom_make_RecordAppl(ASTFactory.makeOption(info),tom_cons_list_concTomName(tom_make_Name(Constants.TEXT_NODE),tom_empty_list_concTomName()),tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_make_Name(Constants.SLOT_DATA),term),tom_empty_list_concSlot()),tom_empty_list_concConstraint())

;
              //System.out.println("metaEncodeXmlAppl = " + term);
          }
        }
      }}}}}}}}}}}}

    return term;
  }

  public static boolean isExplicitTermList(LinkedList childs) {
    if(childs.size() == 1) {
      TomTerm term = (TomTerm) childs.getFirst();
      //System.out.println("isExplicitTermList: " + term);
      if (tom_is_sort_TomTerm(term)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch235NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )term);if (tom_is_fun_sym_RecordAppl(tomMatch235NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch235NameNumber_freshVar_0=tom_get_slot_RecordAppl_NameList(tomMatch235NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch235NameNumber_freshVar_0)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch235NameNumber_freshVar_1=tomMatch235NameNumber_freshVar_0;if (!(tom_is_empty_concTomName_TomNameList(tomMatch235NameNumber_freshVar_1))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch235NameNumber_freshVar_1))) {{  String  tomMatch235NameNumber_freshVar_3=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch235NameNumber_freshVar_1));if (tom_equal_term_String("", tomMatch235NameNumber_freshVar_3)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch235NameNumber_freshVar_2=tom_get_tail_concTomName_TomNameList(tomMatch235NameNumber_freshVar_1);if (tom_is_empty_concTomName_TomNameList(tomMatch235NameNumber_freshVar_2)) {if ( true ) {
 
          return true;
        }}}}}}}}}}}if (tom_is_fun_sym_TermAppl(tomMatch235NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch235NameNumber_freshVar_4=tom_get_slot_TermAppl_NameList(tomMatch235NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch235NameNumber_freshVar_4)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch235NameNumber_freshVar_5=tomMatch235NameNumber_freshVar_4;if (!(tom_is_empty_concTomName_TomNameList(tomMatch235NameNumber_freshVar_5))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch235NameNumber_freshVar_5))) {{  String  tomMatch235NameNumber_freshVar_7=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch235NameNumber_freshVar_5));if (tom_equal_term_String("", tomMatch235NameNumber_freshVar_7)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch235NameNumber_freshVar_6=tom_get_tail_concTomName_TomNameList(tomMatch235NameNumber_freshVar_5);if (tom_is_empty_concTomName_TomNameList(tomMatch235NameNumber_freshVar_6)) {if ( true ) {
 
          return true;
        }}}}}}}}}}}}}

    }
    return false;
  }
  
  public static LinkedList metaEncodeExplicitTermList(SymbolTable symbolTable, TomTerm term) {
    LinkedList list = new LinkedList();
    if (tom_is_sort_TomTerm(term)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch236NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )term);if (tom_is_fun_sym_RecordAppl(tomMatch236NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch236NameNumber_freshVar_0=tom_get_slot_RecordAppl_NameList(tomMatch236NameNumberfreshSubject_1);{  tom.engine.adt.tomslot.types.SlotList  tomMatch236NameNumber_freshVar_1=tom_get_slot_RecordAppl_Slots(tomMatch236NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch236NameNumber_freshVar_0)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch236NameNumber_freshVar_2=tomMatch236NameNumber_freshVar_0;if (!(tom_is_empty_concTomName_TomNameList(tomMatch236NameNumber_freshVar_2))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch236NameNumber_freshVar_2))) {{  String  tomMatch236NameNumber_freshVar_4=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch236NameNumber_freshVar_2));if (tom_equal_term_String("", tomMatch236NameNumber_freshVar_4)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch236NameNumber_freshVar_3=tom_get_tail_concTomName_TomNameList(tomMatch236NameNumber_freshVar_2);if (tom_is_empty_concTomName_TomNameList(tomMatch236NameNumber_freshVar_3)) {{  tom.engine.adt.tomslot.types.SlotList  tom_args=tomMatch236NameNumber_freshVar_1;if ( true ) {

        while(!tom_args.isEmptyconcSlot()) {
          list.add(metaEncodeXMLAppl(symbolTable,tom_args.getHeadconcSlot().getAppl()));
          tom_args= tom_args.getTailconcSlot();
        }
        return list;
      }}}}}}}}}}}}}if (tom_is_fun_sym_TermAppl(tomMatch236NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch236NameNumber_freshVar_5=tom_get_slot_TermAppl_NameList(tomMatch236NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomList  tomMatch236NameNumber_freshVar_6=tom_get_slot_TermAppl_Args(tomMatch236NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch236NameNumber_freshVar_5)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch236NameNumber_freshVar_7=tomMatch236NameNumber_freshVar_5;if (!(tom_is_empty_concTomName_TomNameList(tomMatch236NameNumber_freshVar_7))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch236NameNumber_freshVar_7))) {{  String  tomMatch236NameNumber_freshVar_9=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch236NameNumber_freshVar_7));if (tom_equal_term_String("", tomMatch236NameNumber_freshVar_9)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch236NameNumber_freshVar_8=tom_get_tail_concTomName_TomNameList(tomMatch236NameNumber_freshVar_7);if (tom_is_empty_concTomName_TomNameList(tomMatch236NameNumber_freshVar_8)) {{  tom.engine.adt.tomterm.types.TomList  tom_args=tomMatch236NameNumber_freshVar_6;if ( true ) {


        while(!tom_args.isEmptyconcTomTerm()) {
          list.add(metaEncodeXMLAppl(symbolTable,tom_args.getHeadconcTomTerm()));
          tom_args= tom_args.getTailconcTomTerm();
        }
        return list;
      }}}}}}}}}}}}}}}

    //System.out.println("metaEncodeExplicitTermList: strange case: " + term);
    list.add(term);
    return list;
  }

  //private TomList buildEmpty(TomName name) {
  //}

  public static TomTerm buildList(TomName name,TomList args, SymbolTable symbolTable) {
    //if(!args.isEmptyconcTomTerm()) System.out.println("buildList: " + args.getHeadconcTomTerm());
    TomSymbol topListSymbol = symbolTable.getSymbolFromName(name.getString());
    String topDomain = TomBase.getTomType(TomBase.getSymbolDomain(topListSymbol).getHeadconcTomType());
    String topCodomain = TomBase.getTomType(TomBase.getSymbolCodomain(topListSymbol));

    //System.out.println("topDomain = " + topDomain);
    //System.out.println("topCodomain = " + topCodomain);

    if (tom_is_sort_TomList(args)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomList )args);if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_0=tomMatch237NameNumberfreshSubject_1;if (tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_0)) {if ( true ) {

        return tom_make_BuildEmptyList(name);
      }}}}if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_1=tomMatch237NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_1))) {if (tom_is_fun_sym_VariableStar(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_1))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_2=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_1);if ( true ) {


        TomTerm subList = buildList(name,tomMatch237NameNumber_freshVar_2,symbolTable);
        /* a VariableStar is always flattened */
        return tom_make_BuildAppendList(name,tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_1),subList);
      }}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_15=tomMatch237NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_15))) {if (tom_is_fun_sym_Composite(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_15))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_23=tom_get_slot_Composite_Args(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_15));if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumber_freshVar_23)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_24=tomMatch237NameNumber_freshVar_23;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_24))) {if (tom_is_fun_sym_VariableStar(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_24))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_25=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_24);{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_16=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_15);if ( true ) {


        TomTerm subList = buildList(name,tomMatch237NameNumber_freshVar_16,symbolTable);
        /* a VariableStar is always flattened */
          return tom_make_BuildAppendList(name,tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_15),subList);
      }}}}}}}}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_53=tomMatch237NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_53))) {if (tom_is_fun_sym_Variable(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_53))) {{  tom.engine.adt.tomtype.types.TomType  tomMatch237NameNumber_freshVar_61=tom_get_slot_Variable_AstType(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_53));{  tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_53);{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_54=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_53);if ( true ) {


        //System.out.println("topDomain = " + topDomain);
        //System.out.println("topCodomain = " + topCodomain);
        //System.out.println("varType = " + TomBase.getTomType(`varType));

        TomTerm subList = buildList(name,tomMatch237NameNumber_freshVar_54,symbolTable);
        // a Variable is flattened if type and codomain are equals
        if(topDomain != topCodomain) {
          if(TomBase.getTomType(tomMatch237NameNumber_freshVar_61) == topCodomain) {
            return tom_make_BuildAppendList(name,tom_head,subList);
          }
        }
        return tom_make_BuildConsList(name,tom_head,subList);
      }}}}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_70=tomMatch237NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_70))) {if (tom_is_fun_sym_Composite(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_70))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_78=tom_get_slot_Composite_Args(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_70));if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumber_freshVar_78)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_79=tomMatch237NameNumber_freshVar_78;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_79))) {if (tom_is_fun_sym_Variable(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_79))) {{  tom.engine.adt.tomtype.types.TomType  tomMatch237NameNumber_freshVar_95=tom_get_slot_Variable_AstType(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_79));{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_80=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_79);{  tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_70);{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_71=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_70);if ( true ) {


        //System.out.println("topDomain = " + topDomain);
        //System.out.println("topCodomain = " + topCodomain);
        //System.out.println("varType = " + TomBase.getTomType(`varType));

        TomTerm subList = buildList(name,tomMatch237NameNumber_freshVar_71,symbolTable);
        // a Variable is flattened if type and codomain are equals
        if(topDomain != topCodomain) {
          if(TomBase.getTomType(tomMatch237NameNumber_freshVar_95) == topCodomain) {
            return tom_make_BuildAppendList(name,tom_head,subList);
          }
        }
        return tom_make_BuildConsList(name,tom_head,subList);
      }}}}}}}}}}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_111=tomMatch237NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_111))) {if (tom_is_fun_sym_Composite(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_111))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_119=tom_get_slot_Composite_Args(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_111));if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumber_freshVar_119)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_120=tomMatch237NameNumber_freshVar_119;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_120))) {if (tom_is_fun_sym_BuildConsList(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_120))) {{  tom.engine.adt.tomname.types.TomName  tomMatch237NameNumber_freshVar_136=tom_get_slot_BuildConsList_AstName(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_120));{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_121=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_120);{  tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_111);{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_112=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_111);if ( true ) {


        TomTerm subList = buildList(name,tomMatch237NameNumber_freshVar_112,symbolTable);
        /* Flatten nested lists, unless domain and codomain are equals */
        if(topDomain != topCodomain) {
          if(name==tomMatch237NameNumber_freshVar_136) {
            return tom_make_BuildAppendList(name,tom_head,subList);
          }
        }
        return tom_make_BuildConsList(name,tom_head,subList);
      }}}}}}}}}}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_152=tomMatch237NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_152))) {if (tom_is_fun_sym_Composite(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_152))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_160=tom_get_slot_Composite_Args(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_152));if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumber_freshVar_160)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_161=tomMatch237NameNumber_freshVar_160;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_161))) {if (tom_is_fun_sym_BuildTerm(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_161))) {{  tom.engine.adt.tomname.types.TomName  tomMatch237NameNumber_freshVar_177=tom_get_slot_BuildTerm_AstName(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_161));if (tom_is_fun_sym_Name(tomMatch237NameNumber_freshVar_177)) {{  String  tomMatch237NameNumber_freshVar_178=tom_get_slot_Name_String(tomMatch237NameNumber_freshVar_177);{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_162=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_161);{  tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_152);{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_153=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_152);if ( true ) {


        TomTerm subList = buildList(name,tomMatch237NameNumber_freshVar_153,symbolTable);
        if(topDomain != topCodomain) {
        /*
         * compare the codomain of tomName with topDomain
         * if the codomain of the inserted element is equal to the codomain
         * of the list operator, a BuildAppendList is performed 
         */
          TomSymbol symbol = symbolTable.getSymbolFromName(tomMatch237NameNumber_freshVar_178);
          String codomain = TomBase.getTomType(TomBase.getSymbolCodomain(symbol));
          if(codomain == topCodomain) {
            return tom_make_BuildAppendList(name,tom_head,subList);
          } 
        }
        return tom_make_BuildConsList(name,tom_head,subList);
      }}}}}}}}}}}}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_196=tomMatch237NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_196))) {{ boolean tomMatch237NameNumber_freshVar_210= false ;if (tom_is_fun_sym_BuildTerm(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_196))) {tomMatch237NameNumber_freshVar_210= true ;} else {if (tom_is_fun_sym_BuildConstant(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_196))) {tomMatch237NameNumber_freshVar_210= true ;} else {if (tom_is_fun_sym_Composite(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_196))) {tomMatch237NameNumber_freshVar_210= true ;} else {if (tom_is_fun_sym_Variable(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_196))) {tomMatch237NameNumber_freshVar_210= true ;}}}}if ((tomMatch237NameNumber_freshVar_210 ==  true )) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_197=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_196);if ( true ) {


        TomTerm subList = buildList(name,tomMatch237NameNumber_freshVar_197,symbolTable);
        return tom_make_BuildConsList(name,tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_196),subList);
      }}}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch237NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_211=tomMatch237NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch237NameNumber_freshVar_211))) {if (tom_is_fun_sym_TargetLanguageToTomTerm(tom_get_head_concTomTerm_TomList(tomMatch237NameNumber_freshVar_211))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch237NameNumber_freshVar_212=tom_get_tail_concTomTerm_TomList(tomMatch237NameNumber_freshVar_211);if ( true ) {


        TomTerm subList = buildList(name,tomMatch237NameNumber_freshVar_212,symbolTable);
        return subList;
      }}}}}}}}



    throw new TomRuntimeException("buildList strange term: " + args);
  }

  public static TomTerm buildArray(TomName name,TomList args, SymbolTable symbolTable) {
    return buildArray(name,reverse(args),0, symbolTable);
  }

  private static TomTerm buildArray(TomName name,TomList args, int size, SymbolTable symbolTable) {
    //if(!args.isEmptyconcTomTerm()) System.out.println("buildArray: " + args.getHeadconcTomTerm());
    TomSymbol topListSymbol = symbolTable.getSymbolFromName(name.getString());
    String topDomain = TomBase.getTomType(TomBase.getSymbolDomain(topListSymbol).getHeadconcTomType());
    String topCodomain = TomBase.getTomType(TomBase.getSymbolCodomain(topListSymbol));

    if (tom_is_sort_TomList(args)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomList )args);if (tom_is_fun_sym_concTomTerm(tomMatch238NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_0=tomMatch238NameNumberfreshSubject_1;if (tom_is_empty_concTomTerm_TomList(tomMatch238NameNumber_freshVar_0)) {if ( true ) {

        return tom_make_BuildEmptyArray(name,size);
      }}}}if (tom_is_fun_sym_concTomTerm(tomMatch238NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_1=tomMatch238NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch238NameNumber_freshVar_1))) {if (tom_is_fun_sym_VariableStar(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_1))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_2=tom_get_tail_concTomTerm_TomList(tomMatch238NameNumber_freshVar_1);if ( true ) {


        TomTerm subList = buildArray(name,tomMatch238NameNumber_freshVar_2,size+1,symbolTable);
        /* a VariableStar is always flattened */
        return tom_make_BuildAppendArray(name,tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_1),subList);
      }}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch238NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_15=tomMatch238NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch238NameNumber_freshVar_15))) {if (tom_is_fun_sym_Composite(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_15))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_23=tom_get_slot_Composite_Args(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_15));if (tom_is_fun_sym_concTomTerm(tomMatch238NameNumber_freshVar_23)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_24=tomMatch238NameNumber_freshVar_23;if (!(tom_is_empty_concTomTerm_TomList(tomMatch238NameNumber_freshVar_24))) {if (tom_is_fun_sym_VariableStar(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_24))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_25=tom_get_tail_concTomTerm_TomList(tomMatch238NameNumber_freshVar_24);{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_16=tom_get_tail_concTomTerm_TomList(tomMatch238NameNumber_freshVar_15);if ( true ) {


        TomTerm subList = buildArray(name,tomMatch238NameNumber_freshVar_16,size+1,symbolTable);
        /* a VariableStar is always flattened */
        return tom_make_BuildAppendArray(name,tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_15),subList);
      }}}}}}}}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch238NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_53=tomMatch238NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch238NameNumber_freshVar_53))) {if (tom_is_fun_sym_Composite(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_53))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_61=tom_get_slot_Composite_Args(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_53));if (tom_is_fun_sym_concTomTerm(tomMatch238NameNumber_freshVar_61)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_62=tomMatch238NameNumber_freshVar_61;if (!(tom_is_empty_concTomTerm_TomList(tomMatch238NameNumber_freshVar_62))) {if (tom_is_fun_sym_BuildConsArray(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_62))) {{  tom.engine.adt.tomname.types.TomName  tomMatch238NameNumber_freshVar_78=tom_get_slot_BuildConsArray_AstName(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_62));{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_63=tom_get_tail_concTomTerm_TomList(tomMatch238NameNumber_freshVar_62);{  tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_53);{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_54=tom_get_tail_concTomTerm_TomList(tomMatch238NameNumber_freshVar_53);if ( true ) {


































        TomTerm subList = buildArray(name,tomMatch238NameNumber_freshVar_54,size+1,symbolTable);
        /* Flatten nested lists, unless domain and codomain are equals */
        if(topDomain != topCodomain) {
          if(name==tomMatch238NameNumber_freshVar_78) {
            return tom_make_BuildAppendArray(name,tom_head,subList);
          }
        }
        //System.out.println("cons1: " +`head);
        return tom_make_BuildConsArray(name,tom_head,subList);
      }}}}}}}}}}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch238NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_94=tomMatch238NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch238NameNumber_freshVar_94))) {if (tom_is_fun_sym_Composite(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_94))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_102=tom_get_slot_Composite_Args(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_94));if (tom_is_fun_sym_concTomTerm(tomMatch238NameNumber_freshVar_102)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_103=tomMatch238NameNumber_freshVar_102;if (!(tom_is_empty_concTomTerm_TomList(tomMatch238NameNumber_freshVar_103))) {if (tom_is_fun_sym_BuildTerm(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_103))) {{  tom.engine.adt.tomname.types.TomName  tomMatch238NameNumber_freshVar_119=tom_get_slot_BuildTerm_AstName(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_103));if (tom_is_fun_sym_Name(tomMatch238NameNumber_freshVar_119)) {{  String  tomMatch238NameNumber_freshVar_120=tom_get_slot_Name_String(tomMatch238NameNumber_freshVar_119);{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_104=tom_get_tail_concTomTerm_TomList(tomMatch238NameNumber_freshVar_103);{  tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_94);{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_95=tom_get_tail_concTomTerm_TomList(tomMatch238NameNumber_freshVar_94);if ( true ) {


        TomTerm subList = buildArray(name,tomMatch238NameNumber_freshVar_95,size+1,symbolTable);
        if(topDomain != topCodomain) {
        /*
         * compare the codomain of tomName with topDomain
         * if the codomain of the inserted element is equal to the codomain
         * of the list operator, a BuildAppendArray is performed 
         */
          TomSymbol symbol = symbolTable.getSymbolFromName(tomMatch238NameNumber_freshVar_120);
          String codomain = TomBase.getTomType(TomBase.getSymbolCodomain(symbol));
          if(codomain == topCodomain) {
            return tom_make_BuildAppendArray(name,tom_head,subList);
          } 
        }
        //System.out.println("cons2: " +`head);
        return tom_make_BuildConsArray(name,tom_head,subList);
      }}}}}}}}}}}}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch238NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_138=tomMatch238NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch238NameNumber_freshVar_138))) {{ boolean tomMatch238NameNumber_freshVar_152= false ;if (tom_is_fun_sym_BuildTerm(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_138))) {tomMatch238NameNumber_freshVar_152= true ;} else {if (tom_is_fun_sym_BuildConstant(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_138))) {tomMatch238NameNumber_freshVar_152= true ;} else {if (tom_is_fun_sym_Variable(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_138))) {tomMatch238NameNumber_freshVar_152= true ;} else {if (tom_is_fun_sym_Composite(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_138))) {tomMatch238NameNumber_freshVar_152= true ;}}}}if ((tomMatch238NameNumber_freshVar_152 ==  true )) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_139=tom_get_tail_concTomTerm_TomList(tomMatch238NameNumber_freshVar_138);if ( true ) {

        TomTerm subList = buildArray(name,tomMatch238NameNumber_freshVar_139,size+1,symbolTable);
        //System.out.println("cons3: " +`head);
        return tom_make_BuildConsArray(name,tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_138),subList);
      }}}}}}}if (tom_is_fun_sym_concTomTerm(tomMatch238NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_153=tomMatch238NameNumberfreshSubject_1;if (!(tom_is_empty_concTomTerm_TomList(tomMatch238NameNumber_freshVar_153))) {if (tom_is_fun_sym_TargetLanguageToTomTerm(tom_get_head_concTomTerm_TomList(tomMatch238NameNumber_freshVar_153))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch238NameNumber_freshVar_154=tom_get_tail_concTomTerm_TomList(tomMatch238NameNumber_freshVar_153);if ( true ) {


        TomTerm subList = buildArray(name,tomMatch238NameNumber_freshVar_154,size,symbolTable);
        return subList;
      }}}}}}}}



    throw new TomRuntimeException("buildArray strange term: " + args);
     
  }

}

/*  Generated by TOM: Do not edit this file */  /*
   
    TOM - To One Matching Compiler

    Copyright (C) 2000-2003 INRIA
			    Nancy, France.

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

    Pierre-Etienne Moreau	e-mail: Pierre-Etienne.Moreau@loria.fr

*/

package jtom;
  
import java.util.*;

import aterm.*;

import jtom.tools.*;
import jtom.adt.tomsignature.*;
import jtom.adt.tomsignature.types.*;
import jtom.runtime.*;
import jtom.exception.TomRuntimeException;
import java.lang.Throwable;

public class TomBase {
  private TomEnvironment tomEnvironment;
  private TomList empty;
  private GenericTraversal traversal;

  public TomBase() {
  }
	
  public TomBase(TomEnvironment tomEnvironment) {
    this.tomEnvironment = tomEnvironment;
    this.empty = tomEnvironment.getTomSignatureFactory().makeTomList();
    this.traversal = new GenericTraversal();
  }

  protected ASTFactory ast() {
    return tomEnvironment.getASTFactory();
  }
	
  protected TomEnvironment environment() {
    return tomEnvironment;
  }
	
  protected Factory tsf() {
    return tomEnvironment.getTomSignatureFactory();
  }

  public GenericTraversal traversal() {
    return this.traversal;
  }

  protected final Factory getTomSignatureFactory() {
    return tsf();
  }
  
  protected SymbolTable symbolTable() {
    return tomEnvironment.getSymbolTable();
  }

  protected boolean isIntType(String type) {
    return type.equals("int");
  }

  protected boolean isStringType(String type) {
    return type.equals("String");
  }

  protected boolean isBoolType(String type) {
    return type.equals("bool");
  }

  protected boolean isDoubleType(String type) {
    return type.equals("double");
  }
  
  protected TomType getIntType() {
    return symbolTable().getType("int");
  }

  protected TomType getDoubleType() {
    return symbolTable().getType("double");
  }

  protected TomType getBoolType() {
    return symbolTable().getType("bool");
  }
  
  protected TomType getUniversalType() {
    return symbolTable().getType("universal");
  }

  protected TomNumber makeNumber(int n) {
    return tsf().makeTomNumber_Number(n);
  }
  
  protected OptionList emptyOption() {
    return ast().makeOption();
  }

  protected TomList empty() {
    return empty;
  }

  protected TomList cons(TomTerm t, TomList l) {
    if(t!=null) {
      return tsf().makeTomList(t,l);
    } else {
      System.out.println("cons: Warning t == null");
      return l;
    }
  }

  protected TomNumberList appendNumber(int n, TomNumberList path) {
    return (TomNumberList) path.append(makeNumber(n));
  }
  

  protected TomList appendInstruction(Instruction t, TomList l) {
    return append(tom_make_InstructionToTomTerm(t) , l);
  }
  
  protected TomList append(TomTerm t, TomList l) {
    if(l.isEmpty()) {
      return cons(t,l);
    } else {
      return cons(l.getHead(), append(t,l.getTail()));
    }
  }
  
  protected TomList concat(TomList l1, TomList l2) {
    if(l1.isEmpty()) {
      return l2;
    } else {
      return cons(l1.getHead(), concat(l1.getTail(),l2));
    }
  }

  protected TomList reverse(TomList l) {
    TomList reverse = empty();
    while(!l.isEmpty()){
      reverse = cons(l.getHead(),reverse);
      l = l.getTail();
    }
    return reverse;
  }

  protected int length(TomList l) {
    if(l.isEmpty()) {
      return 0;
    } else {
      return 1 + length(l.getTail());
    }
  }
  
// ------------------------------------------------------------
   /*  Generated by TOM: Do not edit this file */ public Object tom_get_fun_sym_String( String t) { return t; }public boolean tom_cmp_fun_sym_String(Object s1, Object s2) { return  s1.equals(s2); }public Object tom_get_subterm_String( String t,  int n) { return null; }public boolean tom_terms_equal_String(Object t1, Object t2) { return t1.equals(t2); }public  int tom_get_fun_sym_int( int t) { return t; }public boolean tom_cmp_fun_sym_int( int s1,  int s2) { return  (s1 == s2); }public Object tom_get_subterm_int( int t,  int n) { return null; }public boolean tom_terms_equal_int( int t1,  int t2) { return (t1 == t2); }public  double tom_get_fun_sym_double( double t) { return t; }public boolean tom_cmp_fun_sym_double( double s1,  double s2) { return  (s1 == s2); }public Object tom_get_subterm_double( double t,  int n) { return null; }public boolean tom_terms_equal_double( double t1,  double t2) { return (t1 == t2); }public Object tom_get_fun_sym_ATerm( aterm.ATerm t) { return ((t instanceof ATermAppl)?((ATermAppl)t).getAFun():null); }public boolean tom_cmp_fun_sym_ATerm(Object s1, Object s2) { return  s1==s2; }public Object tom_get_subterm_ATerm( aterm.ATerm t,  int n) { return (((ATermAppl)t).getArgument(n)); }public boolean tom_terms_equal_ATerm(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_fun_sym_ATermList( aterm.ATermList t) { return ((t instanceof ATermList)?getTomSignatureFactory().getPureFactory().makeAFun("conc",1,false):null); }public boolean tom_cmp_fun_sym_ATermList(Object s1, Object s2) { return  s1==s2; }public boolean tom_terms_equal_ATermList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_ATermList( aterm.ATermList l) { return l.getFirst(); }public  aterm.ATermList tom_get_tail_ATermList( aterm.ATermList l) { return l.getNext(); }public boolean tom_is_empty_ATermList( aterm.ATermList l) { return l.isEmpty(); }public Object tom_get_fun_sym_Declaration( Declaration t) { return null; }public boolean tom_cmp_fun_sym_Declaration(Object s1, Object s2) { return  false; }public Object tom_get_subterm_Declaration( Declaration t,  int n) { return null; }public boolean tom_terms_equal_Declaration(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_TypeTermDecl( Declaration t) { return  (t!= null) && t.isTypeTermDecl(); }public  Declaration tom_make_TypeTermDecl( TomName t0,  TomList t1,  Option t2) { return  getTomSignatureFactory().makeDeclaration_TypeTermDecl(t0, t1, t2); }public  TomName tom_get_slot_TypeTermDecl_astName( Declaration t) { return  t.getAstName(); }public  TomList tom_get_slot_TypeTermDecl_keywordList( Declaration t) { return  t.getKeywordList(); }public  Option tom_get_slot_TypeTermDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_TypeListDecl( Declaration t) { return  (t!= null) && t.isTypeListDecl(); }public  Declaration tom_make_TypeListDecl( TomName t0,  TomList t1,  Option t2) { return  getTomSignatureFactory().makeDeclaration_TypeListDecl(t0, t1, t2); }public  TomName tom_get_slot_TypeListDecl_astName( Declaration t) { return  t.getAstName(); }public  TomList tom_get_slot_TypeListDecl_keywordList( Declaration t) { return  t.getKeywordList(); }public  Option tom_get_slot_TypeListDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_TypeArrayDecl( Declaration t) { return  (t!= null) && t.isTypeArrayDecl(); }public  Declaration tom_make_TypeArrayDecl( TomName t0,  TomList t1,  Option t2) { return  getTomSignatureFactory().makeDeclaration_TypeArrayDecl(t0, t1, t2); }public  TomName tom_get_slot_TypeArrayDecl_astName( Declaration t) { return  t.getAstName(); }public  TomList tom_get_slot_TypeArrayDecl_keywordList( Declaration t) { return  t.getKeywordList(); }public  Option tom_get_slot_TypeArrayDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_GetFunctionSymbolDecl( Declaration t) { return  (t!= null) && t.isGetFunctionSymbolDecl(); }public  Declaration tom_make_GetFunctionSymbolDecl( TomTerm t0,  TargetLanguage t1,  Option t2) { return  getTomSignatureFactory().makeDeclaration_GetFunctionSymbolDecl(t0, t1, t2); }public  TomTerm tom_get_slot_GetFunctionSymbolDecl_termArg( Declaration t) { return  t.getTermArg(); }public  TargetLanguage tom_get_slot_GetFunctionSymbolDecl_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_GetFunctionSymbolDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_GetSubtermDecl( Declaration t) { return  (t!= null) && t.isGetSubtermDecl(); }public  Declaration tom_make_GetSubtermDecl( TomTerm t0,  TomTerm t1,  TargetLanguage t2,  Option t3) { return  getTomSignatureFactory().makeDeclaration_GetSubtermDecl(t0, t1, t2, t3); }public  TomTerm tom_get_slot_GetSubtermDecl_termArg( Declaration t) { return  t.getTermArg(); }public  TomTerm tom_get_slot_GetSubtermDecl_variable( Declaration t) { return  t.getVariable(); }public  TargetLanguage tom_get_slot_GetSubtermDecl_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_GetSubtermDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_IsFsymDecl( Declaration t) { return  (t!= null) && t.isIsFsymDecl(); }public  Declaration tom_make_IsFsymDecl( TomName t0,  TomTerm t1,  TargetLanguage t2,  Option t3) { return  getTomSignatureFactory().makeDeclaration_IsFsymDecl(t0, t1, t2, t3); }public  TomName tom_get_slot_IsFsymDecl_astName( Declaration t) { return  t.getAstName(); }public  TomTerm tom_get_slot_IsFsymDecl_variable( Declaration t) { return  t.getVariable(); }public  TargetLanguage tom_get_slot_IsFsymDecl_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_IsFsymDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_GetSlotDecl( Declaration t) { return  (t!= null) && t.isGetSlotDecl(); }public  Declaration tom_make_GetSlotDecl( TomName t0,  TomName t1,  TomTerm t2,  TargetLanguage t3,  Option t4) { return  getTomSignatureFactory().makeDeclaration_GetSlotDecl(t0, t1, t2, t3, t4); }public  TomName tom_get_slot_GetSlotDecl_astName( Declaration t) { return  t.getAstName(); }public  TomName tom_get_slot_GetSlotDecl_slotName( Declaration t) { return  t.getSlotName(); }public  TomTerm tom_get_slot_GetSlotDecl_variable( Declaration t) { return  t.getVariable(); }public  TargetLanguage tom_get_slot_GetSlotDecl_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_GetSlotDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_CompareFunctionSymbolDecl( Declaration t) { return  (t!= null) && t.isCompareFunctionSymbolDecl(); }public  Declaration tom_make_CompareFunctionSymbolDecl( TomTerm t0,  TomTerm t1,  TargetLanguage t2,  Option t3) { return  getTomSignatureFactory().makeDeclaration_CompareFunctionSymbolDecl(t0, t1, t2, t3); }public  TomTerm tom_get_slot_CompareFunctionSymbolDecl_symbolArg1( Declaration t) { return  t.getSymbolArg1(); }public  TomTerm tom_get_slot_CompareFunctionSymbolDecl_symbolArg2( Declaration t) { return  t.getSymbolArg2(); }public  TargetLanguage tom_get_slot_CompareFunctionSymbolDecl_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_CompareFunctionSymbolDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_TermsEqualDecl( Declaration t) { return  (t!= null) && t.isTermsEqualDecl(); }public  Declaration tom_make_TermsEqualDecl( TomTerm t0,  TomTerm t1,  TargetLanguage t2,  Option t3) { return  getTomSignatureFactory().makeDeclaration_TermsEqualDecl(t0, t1, t2, t3); }public  TomTerm tom_get_slot_TermsEqualDecl_termArg1( Declaration t) { return  t.getTermArg1(); }public  TomTerm tom_get_slot_TermsEqualDecl_termArg2( Declaration t) { return  t.getTermArg2(); }public  TargetLanguage tom_get_slot_TermsEqualDecl_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_TermsEqualDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_GetHeadDecl( Declaration t) { return  (t!= null) && t.isGetHeadDecl(); }public  Declaration tom_make_GetHeadDecl( TomTerm t0,  TargetLanguage t1,  Option t2) { return  getTomSignatureFactory().makeDeclaration_GetHeadDecl(t0, t1, t2); }public  TomTerm tom_get_slot_GetHeadDecl_var( Declaration t) { return  t.getVar(); }public  TargetLanguage tom_get_slot_GetHeadDecl_tlcode( Declaration t) { return  t.getTlcode(); }public  Option tom_get_slot_GetHeadDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_GetTailDecl( Declaration t) { return  (t!= null) && t.isGetTailDecl(); }public  Declaration tom_make_GetTailDecl( TomTerm t0,  TargetLanguage t1,  Option t2) { return  getTomSignatureFactory().makeDeclaration_GetTailDecl(t0, t1, t2); }public  TomTerm tom_get_slot_GetTailDecl_var( Declaration t) { return  t.getVar(); }public  TargetLanguage tom_get_slot_GetTailDecl_tlcode( Declaration t) { return  t.getTlcode(); }public  Option tom_get_slot_GetTailDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_IsEmptyDecl( Declaration t) { return  (t!= null) && t.isIsEmptyDecl(); }public  Declaration tom_make_IsEmptyDecl( TomTerm t0,  TargetLanguage t1,  Option t2) { return  getTomSignatureFactory().makeDeclaration_IsEmptyDecl(t0, t1, t2); }public  TomTerm tom_get_slot_IsEmptyDecl_var( Declaration t) { return  t.getVar(); }public  TargetLanguage tom_get_slot_IsEmptyDecl_tlcode( Declaration t) { return  t.getTlcode(); }public  Option tom_get_slot_IsEmptyDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_MakeEmptyList( Declaration t) { return  (t!= null) && t.isMakeEmptyList(); }public  Declaration tom_make_MakeEmptyList( TomName t0,  TargetLanguage t1,  Option t2) { return  getTomSignatureFactory().makeDeclaration_MakeEmptyList(t0, t1, t2); }public  TomName tom_get_slot_MakeEmptyList_astName( Declaration t) { return  t.getAstName(); }public  TargetLanguage tom_get_slot_MakeEmptyList_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_MakeEmptyList_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_MakeAddList( Declaration t) { return  (t!= null) && t.isMakeAddList(); }public  Declaration tom_make_MakeAddList( TomName t0,  TomTerm t1,  TomTerm t2,  TargetLanguage t3,  Option t4) { return  getTomSignatureFactory().makeDeclaration_MakeAddList(t0, t1, t2, t3, t4); }public  TomName tom_get_slot_MakeAddList_astName( Declaration t) { return  t.getAstName(); }public  TomTerm tom_get_slot_MakeAddList_varElt( Declaration t) { return  t.getVarElt(); }public  TomTerm tom_get_slot_MakeAddList_varList( Declaration t) { return  t.getVarList(); }public  TargetLanguage tom_get_slot_MakeAddList_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_MakeAddList_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_GetElementDecl( Declaration t) { return  (t!= null) && t.isGetElementDecl(); }public  Declaration tom_make_GetElementDecl( TomTerm t0,  TomTerm t1,  TargetLanguage t2,  Option t3) { return  getTomSignatureFactory().makeDeclaration_GetElementDecl(t0, t1, t2, t3); }public  TomTerm tom_get_slot_GetElementDecl_kid1( Declaration t) { return  t.getKid1(); }public  TomTerm tom_get_slot_GetElementDecl_kid2( Declaration t) { return  t.getKid2(); }public  TargetLanguage tom_get_slot_GetElementDecl_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_GetElementDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_GetSizeDecl( Declaration t) { return  (t!= null) && t.isGetSizeDecl(); }public  Declaration tom_make_GetSizeDecl( TomTerm t0,  TargetLanguage t1,  Option t2) { return  getTomSignatureFactory().makeDeclaration_GetSizeDecl(t0, t1, t2); }public  TomTerm tom_get_slot_GetSizeDecl_kid1( Declaration t) { return  t.getKid1(); }public  TargetLanguage tom_get_slot_GetSizeDecl_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_GetSizeDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_MakeEmptyArray( Declaration t) { return  (t!= null) && t.isMakeEmptyArray(); }public  Declaration tom_make_MakeEmptyArray( TomName t0,  TomTerm t1,  TargetLanguage t2,  Option t3) { return  getTomSignatureFactory().makeDeclaration_MakeEmptyArray(t0, t1, t2, t3); }public  TomName tom_get_slot_MakeEmptyArray_astName( Declaration t) { return  t.getAstName(); }public  TomTerm tom_get_slot_MakeEmptyArray_varSize( Declaration t) { return  t.getVarSize(); }public  TargetLanguage tom_get_slot_MakeEmptyArray_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_MakeEmptyArray_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_MakeAddArray( Declaration t) { return  (t!= null) && t.isMakeAddArray(); }public  Declaration tom_make_MakeAddArray( TomName t0,  TomTerm t1,  TomTerm t2,  TargetLanguage t3,  Option t4) { return  getTomSignatureFactory().makeDeclaration_MakeAddArray(t0, t1, t2, t3, t4); }public  TomName tom_get_slot_MakeAddArray_astName( Declaration t) { return  t.getAstName(); }public  TomTerm tom_get_slot_MakeAddArray_varElt( Declaration t) { return  t.getVarElt(); }public  TomTerm tom_get_slot_MakeAddArray_varList( Declaration t) { return  t.getVarList(); }public  TargetLanguage tom_get_slot_MakeAddArray_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_MakeAddArray_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_MakeDecl( Declaration t) { return  (t!= null) && t.isMakeDecl(); }public  Declaration tom_make_MakeDecl( TomName t0,  TomType t1,  TomList t2,  TargetLanguage t3,  Option t4) { return  getTomSignatureFactory().makeDeclaration_MakeDecl(t0, t1, t2, t3, t4); }public  TomName tom_get_slot_MakeDecl_astName( Declaration t) { return  t.getAstName(); }public  TomType tom_get_slot_MakeDecl_astType( Declaration t) { return  t.getAstType(); }public  TomList tom_get_slot_MakeDecl_args( Declaration t) { return  t.getArgs(); }public  TargetLanguage tom_get_slot_MakeDecl_tlCode( Declaration t) { return  t.getTlCode(); }public  Option tom_get_slot_MakeDecl_orgTrack( Declaration t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_SymbolDecl( Declaration t) { return  (t!= null) && t.isSymbolDecl(); }public  Declaration tom_make_SymbolDecl( TomName t0) { return  getTomSignatureFactory().makeDeclaration_SymbolDecl(t0); }public  TomName tom_get_slot_SymbolDecl_astName( Declaration t) { return  t.getAstName(); }public boolean tom_is_fun_sym_ListSymbolDecl( Declaration t) { return  (t!= null) && t.isListSymbolDecl(); }public  Declaration tom_make_ListSymbolDecl( TomName t0) { return  getTomSignatureFactory().makeDeclaration_ListSymbolDecl(t0); }public  TomName tom_get_slot_ListSymbolDecl_astName( Declaration t) { return  t.getAstName(); }public boolean tom_is_fun_sym_ArraySymbolDecl( Declaration t) { return  (t!= null) && t.isArraySymbolDecl(); }public  Declaration tom_make_ArraySymbolDecl( TomName t0) { return  getTomSignatureFactory().makeDeclaration_ArraySymbolDecl(t0); }public  TomName tom_get_slot_ArraySymbolDecl_astName( Declaration t) { return  t.getAstName(); }public boolean tom_is_fun_sym_EmptyDeclaration( Declaration t) { return  (t!= null) && t.isEmptyDeclaration(); }public  Declaration tom_make_EmptyDeclaration() { return  getTomSignatureFactory().makeDeclaration_EmptyDeclaration(); }public Object tom_get_fun_sym_Option( Option t) { return null; }public boolean tom_cmp_fun_sym_Option(Object s1, Object s2) { return  false; }public Object tom_get_subterm_Option( Option t,  int n) { return null; }public boolean tom_terms_equal_Option(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_DeclarationToOption( Option t) { return  (t!= null) && t.isDeclarationToOption(); }public  Option tom_make_DeclarationToOption( Declaration t0) { return  getTomSignatureFactory().makeOption_DeclarationToOption(t0); }public  Declaration tom_get_slot_DeclarationToOption_astDeclaration( Option t) { return  t.getAstDeclaration(); }public boolean tom_is_fun_sym_TomNameToOption( Option t) { return  (t!= null) && t.isTomNameToOption(); }public  Option tom_make_TomNameToOption( TomName t0) { return  getTomSignatureFactory().makeOption_TomNameToOption(t0); }public  TomName tom_get_slot_TomNameToOption_astName( Option t) { return  t.getAstName(); }public boolean tom_is_fun_sym_TomTermToOption( Option t) { return  (t!= null) && t.isTomTermToOption(); }public  Option tom_make_TomTermToOption( TomTerm t0) { return  getTomSignatureFactory().makeOption_TomTermToOption(t0); }public  TomTerm tom_get_slot_TomTermToOption_astTerm( Option t) { return  t.getAstTerm(); }public boolean tom_is_fun_sym_DefinedSymbol( Option t) { return  (t!= null) && t.isDefinedSymbol(); }public  Option tom_make_DefinedSymbol() { return  getTomSignatureFactory().makeOption_DefinedSymbol(); }public boolean tom_is_fun_sym_DefaultCase( Option t) { return  (t!= null) && t.isDefaultCase(); }public  Option tom_make_DefaultCase() { return  getTomSignatureFactory().makeOption_DefaultCase(); }public boolean tom_is_fun_sym_GeneratedMatch( Option t) { return  (t!= null) && t.isGeneratedMatch(); }public  Option tom_make_GeneratedMatch() { return  getTomSignatureFactory().makeOption_GeneratedMatch(); }public boolean tom_is_fun_sym_OriginTracking( Option t) { return  (t!= null) && t.isOriginTracking(); }public  Option tom_make_OriginTracking( TomName t0,  int t1,  TomName t2) { return  getTomSignatureFactory().makeOption_OriginTracking(t0, t1, t2); }public  TomName tom_get_slot_OriginTracking_astName( Option t) { return  t.getAstName(); }public  int tom_get_slot_OriginTracking_line( Option t) { return  t.getLine(); }public  TomName tom_get_slot_OriginTracking_fileName( Option t) { return  t.getFileName(); }public boolean tom_is_fun_sym_Constructor( Option t) { return  (t!= null) && t.isConstructor(); }public  Option tom_make_Constructor( NameList t0) { return  getTomSignatureFactory().makeOption_Constructor(t0); }public  NameList tom_get_slot_Constructor_nameList( Option t) { return  t.getNameList(); }public boolean tom_is_fun_sym_OriginalText( Option t) { return  (t!= null) && t.isOriginalText(); }public  Option tom_make_OriginalText( TomName t0) { return  getTomSignatureFactory().makeOption_OriginalText(t0); }public  TomName tom_get_slot_OriginalText_astName( Option t) { return  t.getAstName(); }public boolean tom_is_fun_sym_Label( Option t) { return  (t!= null) && t.isLabel(); }public  Option tom_make_Label( TomName t0) { return  getTomSignatureFactory().makeOption_Label(t0); }public  TomName tom_get_slot_Label_astName( Option t) { return  t.getAstName(); }public boolean tom_is_fun_sym_Debug( Option t) { return  (t!= null) && t.isDebug(); }public  Option tom_make_Debug( TomName t0) { return  getTomSignatureFactory().makeOption_Debug(t0); }public  TomName tom_get_slot_Debug_astName( Option t) { return  t.getAstName(); }public boolean tom_is_fun_sym_ImplicitXMLAttribut( Option t) { return  (t!= null) && t.isImplicitXMLAttribut(); }public  Option tom_make_ImplicitXMLAttribut() { return  getTomSignatureFactory().makeOption_ImplicitXMLAttribut(); }public boolean tom_is_fun_sym_ImplicitXMLChild( Option t) { return  (t!= null) && t.isImplicitXMLChild(); }public  Option tom_make_ImplicitXMLChild() { return  getTomSignatureFactory().makeOption_ImplicitXMLChild(); }public boolean tom_is_fun_sym_noOption( Option t) { return  (t!= null) && t.isNoOption(); }public  Option tom_make_noOption() { return  getTomSignatureFactory().makeOption_NoOption(); }public Object tom_get_fun_sym_Expression( Expression t) { return null; }public boolean tom_cmp_fun_sym_Expression(Object s1, Object s2) { return  false; }public Object tom_get_subterm_Expression( Expression t,  int n) { return null; }public boolean tom_terms_equal_Expression(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_TomTermToExpression( Expression t) { return  (t!= null) && t.isTomTermToExpression(); }public  Expression tom_make_TomTermToExpression( TomTerm t0) { return  getTomSignatureFactory().makeExpression_TomTermToExpression(t0); }public  TomTerm tom_get_slot_TomTermToExpression_astTerm( Expression t) { return  t.getAstTerm(); }public boolean tom_is_fun_sym_Not( Expression t) { return  (t!= null) && t.isNot(); }public  Expression tom_make_Not( Expression t0) { return  getTomSignatureFactory().makeExpression_Not(t0); }public  Expression tom_get_slot_Not_arg( Expression t) { return  t.getArg(); }public boolean tom_is_fun_sym_And( Expression t) { return  (t!= null) && t.isAnd(); }public  Expression tom_make_And( Expression t0,  Expression t1) { return  getTomSignatureFactory().makeExpression_And(t0, t1); }public  Expression tom_get_slot_And_arg1( Expression t) { return  t.getArg1(); }public  Expression tom_get_slot_And_arg2( Expression t) { return  t.getArg2(); }public boolean tom_is_fun_sym_Or( Expression t) { return  (t!= null) && t.isOr(); }public  Expression tom_make_Or( Expression t0,  Expression t1) { return  getTomSignatureFactory().makeExpression_Or(t0, t1); }public  Expression tom_get_slot_Or_arg1( Expression t) { return  t.getArg1(); }public  Expression tom_get_slot_Or_arg2( Expression t) { return  t.getArg2(); }public boolean tom_is_fun_sym_TrueTL( Expression t) { return  (t!= null) && t.isTrueTL(); }public  Expression tom_make_TrueTL() { return  getTomSignatureFactory().makeExpression_TrueTL(); }public boolean tom_is_fun_sym_FalseTL( Expression t) { return  (t!= null) && t.isFalseTL(); }public  Expression tom_make_FalseTL() { return  getTomSignatureFactory().makeExpression_FalseTL(); }public boolean tom_is_fun_sym_IsEmptyList( Expression t) { return  (t!= null) && t.isIsEmptyList(); }public  Expression tom_make_IsEmptyList( TomTerm t0) { return  getTomSignatureFactory().makeExpression_IsEmptyList(t0); }public  TomTerm tom_get_slot_IsEmptyList_kid1( Expression t) { return  t.getKid1(); }public boolean tom_is_fun_sym_IsEmptyArray( Expression t) { return  (t!= null) && t.isIsEmptyArray(); }public  Expression tom_make_IsEmptyArray( TomTerm t0,  TomTerm t1) { return  getTomSignatureFactory().makeExpression_IsEmptyArray(t0, t1); }public  TomTerm tom_get_slot_IsEmptyArray_kid1( Expression t) { return  t.getKid1(); }public  TomTerm tom_get_slot_IsEmptyArray_kid2( Expression t) { return  t.getKid2(); }public boolean tom_is_fun_sym_EqualFunctionSymbol( Expression t) { return  (t!= null) && t.isEqualFunctionSymbol(); }public  Expression tom_make_EqualFunctionSymbol( TomTerm t0,  TomTerm t1) { return  getTomSignatureFactory().makeExpression_EqualFunctionSymbol(t0, t1); }public  TomTerm tom_get_slot_EqualFunctionSymbol_kid1( Expression t) { return  t.getKid1(); }public  TomTerm tom_get_slot_EqualFunctionSymbol_kid2( Expression t) { return  t.getKid2(); }public boolean tom_is_fun_sym_EqualTerm( Expression t) { return  (t!= null) && t.isEqualTerm(); }public  Expression tom_make_EqualTerm( TomTerm t0,  TomTerm t1) { return  getTomSignatureFactory().makeExpression_EqualTerm(t0, t1); }public  TomTerm tom_get_slot_EqualTerm_kid1( Expression t) { return  t.getKid1(); }public  TomTerm tom_get_slot_EqualTerm_kid2( Expression t) { return  t.getKid2(); }public boolean tom_is_fun_sym_GetSubterm( Expression t) { return  (t!= null) && t.isGetSubterm(); }public  Expression tom_make_GetSubterm( TomTerm t0,  TomNumber t1) { return  getTomSignatureFactory().makeExpression_GetSubterm(t0, t1); }public  TomTerm tom_get_slot_GetSubterm_variable( Expression t) { return  t.getVariable(); }public  TomNumber tom_get_slot_GetSubterm_number( Expression t) { return  t.getNumber(); }public boolean tom_is_fun_sym_IsFsym( Expression t) { return  (t!= null) && t.isIsFsym(); }public  Expression tom_make_IsFsym( TomName t0,  TomTerm t1) { return  getTomSignatureFactory().makeExpression_IsFsym(t0, t1); }public  TomName tom_get_slot_IsFsym_astName( Expression t) { return  t.getAstName(); }public  TomTerm tom_get_slot_IsFsym_variable( Expression t) { return  t.getVariable(); }public boolean tom_is_fun_sym_GetSlot( Expression t) { return  (t!= null) && t.isGetSlot(); }public  Expression tom_make_GetSlot( TomName t0,  String t1,  TomTerm t2) { return  getTomSignatureFactory().makeExpression_GetSlot(t0, t1, t2); }public  TomName tom_get_slot_GetSlot_astName( Expression t) { return  t.getAstName(); }public  String tom_get_slot_GetSlot_slotNameString( Expression t) { return  t.getSlotNameString(); }public  TomTerm tom_get_slot_GetSlot_variable( Expression t) { return  t.getVariable(); }public boolean tom_is_fun_sym_GetHead( Expression t) { return  (t!= null) && t.isGetHead(); }public  Expression tom_make_GetHead( TomTerm t0) { return  getTomSignatureFactory().makeExpression_GetHead(t0); }public  TomTerm tom_get_slot_GetHead_kid1( Expression t) { return  t.getKid1(); }public boolean tom_is_fun_sym_GetTail( Expression t) { return  (t!= null) && t.isGetTail(); }public  Expression tom_make_GetTail( TomTerm t0) { return  getTomSignatureFactory().makeExpression_GetTail(t0); }public  TomTerm tom_get_slot_GetTail_kid1( Expression t) { return  t.getKid1(); }public boolean tom_is_fun_sym_GetSize( Expression t) { return  (t!= null) && t.isGetSize(); }public  Expression tom_make_GetSize( TomTerm t0) { return  getTomSignatureFactory().makeExpression_GetSize(t0); }public  TomTerm tom_get_slot_GetSize_kid1( Expression t) { return  t.getKid1(); }public boolean tom_is_fun_sym_GetElement( Expression t) { return  (t!= null) && t.isGetElement(); }public  Expression tom_make_GetElement( TomTerm t0,  TomTerm t1) { return  getTomSignatureFactory().makeExpression_GetElement(t0, t1); }public  TomTerm tom_get_slot_GetElement_kid1( Expression t) { return  t.getKid1(); }public  TomTerm tom_get_slot_GetElement_kid2( Expression t) { return  t.getKid2(); }public boolean tom_is_fun_sym_GetSliceList( Expression t) { return  (t!= null) && t.isGetSliceList(); }public  Expression tom_make_GetSliceList( TomName t0,  TomTerm t1,  TomTerm t2) { return  getTomSignatureFactory().makeExpression_GetSliceList(t0, t1, t2); }public  TomName tom_get_slot_GetSliceList_astName( Expression t) { return  t.getAstName(); }public  TomTerm tom_get_slot_GetSliceList_variableBeginAST( Expression t) { return  t.getVariableBeginAST(); }public  TomTerm tom_get_slot_GetSliceList_variableEndAST( Expression t) { return  t.getVariableEndAST(); }public boolean tom_is_fun_sym_GetSliceArray( Expression t) { return  (t!= null) && t.isGetSliceArray(); }public  Expression tom_make_GetSliceArray( TomName t0,  TomTerm t1,  TomTerm t2,  TomTerm t3) { return  getTomSignatureFactory().makeExpression_GetSliceArray(t0, t1, t2, t3); }public  TomName tom_get_slot_GetSliceArray_astName( Expression t) { return  t.getAstName(); }public  TomTerm tom_get_slot_GetSliceArray_subjectListName( Expression t) { return  t.getSubjectListName(); }public  TomTerm tom_get_slot_GetSliceArray_variableBeginAST( Expression t) { return  t.getVariableBeginAST(); }public  TomTerm tom_get_slot_GetSliceArray_variableEndAST( Expression t) { return  t.getVariableEndAST(); }public Object tom_get_fun_sym_TargetLanguage( TargetLanguage t) { return null; }public boolean tom_cmp_fun_sym_TargetLanguage(Object s1, Object s2) { return  false; }public Object tom_get_subterm_TargetLanguage( TargetLanguage t,  int n) { return null; }public boolean tom_terms_equal_TargetLanguage(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_TL( TargetLanguage t) { return  (t!= null) && t.isTL(); }public  TargetLanguage tom_make_TL( String t0,  Position t1,  Position t2) { return  getTomSignatureFactory().makeTargetLanguage_TL(t0, t1, t2); }public  String tom_get_slot_TL_code( TargetLanguage t) { return  t.getCode(); }public  Position tom_get_slot_TL_start( TargetLanguage t) { return  t.getStart(); }public  Position tom_get_slot_TL_end( TargetLanguage t) { return  t.getEnd(); }public boolean tom_is_fun_sym_ITL( TargetLanguage t) { return  (t!= null) && t.isITL(); }public  TargetLanguage tom_make_ITL( String t0) { return  getTomSignatureFactory().makeTargetLanguage_ITL(t0); }public  String tom_get_slot_ITL_code( TargetLanguage t) { return  t.getCode(); }public boolean tom_is_fun_sym_Comment( TargetLanguage t) { return  (t!= null) && t.isComment(); }public  TargetLanguage tom_make_Comment( String t0) { return  getTomSignatureFactory().makeTargetLanguage_Comment(t0); }public  String tom_get_slot_Comment_code( TargetLanguage t) { return  t.getCode(); }public Object tom_get_fun_sym_Position( Position t) { return null; }public boolean tom_cmp_fun_sym_Position(Object s1, Object s2) { return  false; }public Object tom_get_subterm_Position( Position t,  int n) { return null; }public boolean tom_terms_equal_Position(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_TextPosition( Position t) { return  (t!= null) && t.isTextPosition(); }public  Position tom_make_TextPosition( int t0,  int t1) { return  getTomSignatureFactory().makePosition_TextPosition(t0, t1); }public  int tom_get_slot_TextPosition_line( Position t) { return  t.getLine(); }public  int tom_get_slot_TextPosition_column( Position t) { return  t.getColumn(); }public Object tom_get_fun_sym_TomType( TomType t) { return null; }public boolean tom_cmp_fun_sym_TomType(Object s1, Object s2) { return  false; }public Object tom_get_subterm_TomType( TomType t,  int n) { return null; }public boolean tom_terms_equal_TomType(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_Type( TomType t) { return  (t!= null) && t.isType(); }public  TomType tom_make_Type( TomType t0,  TomType t1) { return  getTomSignatureFactory().makeTomType_Type(t0, t1); }public  TomType tom_get_slot_Type_tomType( TomType t) { return  t.getTomType(); }public  TomType tom_get_slot_Type_tlType( TomType t) { return  t.getTlType(); }public boolean tom_is_fun_sym_TypesToType( TomType t) { return  (t!= null) && t.isTypesToType(); }public  TomType tom_make_TypesToType( TomTypeList t0,  TomType t1) { return  getTomSignatureFactory().makeTomType_TypesToType(t0, t1); }public  TomTypeList tom_get_slot_TypesToType_domain( TomType t) { return  t.getDomain(); }public  TomType tom_get_slot_TypesToType_codomain( TomType t) { return  t.getCodomain(); }public boolean tom_is_fun_sym_ASTTomType( TomType t) { return  (t!= null) && t.isASTTomType(); }public  TomType tom_make_ASTTomType( String t0) { return  getTomSignatureFactory().makeTomType_ASTTomType(t0); }public  String tom_get_slot_ASTTomType_string( TomType t) { return  t.getString(); }public boolean tom_is_fun_sym_TomTypeAlone( TomType t) { return  (t!= null) && t.isTomTypeAlone(); }public  TomType tom_make_TomTypeAlone( String t0) { return  getTomSignatureFactory().makeTomType_TomTypeAlone(t0); }public  String tom_get_slot_TomTypeAlone_string( TomType t) { return  t.getString(); }public boolean tom_is_fun_sym_TLType( TomType t) { return  (t!= null) && t.isTLType(); }public  TomType tom_make_TLType( TargetLanguage t0) { return  getTomSignatureFactory().makeTomType_TLType(t0); }public  TargetLanguage tom_get_slot_TLType_tl( TomType t) { return  t.getTl(); }public boolean tom_is_fun_sym_EmptyType( TomType t) { return  (t!= null) && t.isEmptyType(); }public  TomType tom_make_EmptyType() { return  getTomSignatureFactory().makeTomType_EmptyType(); }public Object tom_get_fun_sym_TomName( TomName t) { return null; }public boolean tom_cmp_fun_sym_TomName(Object s1, Object s2) { return  false; }public Object tom_get_subterm_TomName( TomName t,  int n) { return null; }public boolean tom_terms_equal_TomName(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_Name( TomName t) { return  (t!= null) && t.isName(); }public  TomName tom_make_Name( String t0) { return  getTomSignatureFactory().makeTomName_Name(t0); }public  String tom_get_slot_Name_string( TomName t) { return  t.getString(); }public boolean tom_is_fun_sym_PositionName( TomName t) { return  (t!= null) && t.isPositionName(); }public  TomName tom_make_PositionName( TomNumberList t0) { return  getTomSignatureFactory().makeTomName_PositionName(t0); }public  TomNumberList tom_get_slot_PositionName_numberList( TomName t) { return  t.getNumberList(); }public boolean tom_is_fun_sym_EmptyName( TomName t) { return  (t!= null) && t.isEmptyName(); }public  TomName tom_make_EmptyName() { return  getTomSignatureFactory().makeTomName_EmptyName(); }public Object tom_get_fun_sym_TomTerm( TomTerm t) { return null; }public boolean tom_cmp_fun_sym_TomTerm(Object s1, Object s2) { return  false; }public Object tom_get_subterm_TomTerm( TomTerm t,  int n) { return null; }public boolean tom_terms_equal_TomTerm(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_Appl( TomTerm t) { return  (t!= null) && t.isAppl(); }public  TomTerm tom_make_Appl( OptionList t0,  NameList t1,  TomList t2) { return  getTomSignatureFactory().makeTomTerm_Appl(t0, t1, t2); }public  OptionList tom_get_slot_Appl_option( TomTerm t) { return  t.getOption(); }public  NameList tom_get_slot_Appl_nameList( TomTerm t) { return  t.getNameList(); }public  TomList tom_get_slot_Appl_args( TomTerm t) { return  t.getArgs(); }public boolean tom_is_fun_sym_XMLAppl( TomTerm t) { return  (t!= null) && t.isXMLAppl(); }public  TomTerm tom_make_XMLAppl( OptionList t0,  NameList t1,  TomList t2,  TomList t3) { return  getTomSignatureFactory().makeTomTerm_XMLAppl(t0, t1, t2, t3); }public  OptionList tom_get_slot_XMLAppl_option( TomTerm t) { return  t.getOption(); }public  NameList tom_get_slot_XMLAppl_nameList( TomTerm t) { return  t.getNameList(); }public  TomList tom_get_slot_XMLAppl_attrList( TomTerm t) { return  t.getAttrList(); }public  TomList tom_get_slot_XMLAppl_childList( TomTerm t) { return  t.getChildList(); }public boolean tom_is_fun_sym_VariableStar( TomTerm t) { return  (t!= null) && t.isVariableStar(); }public  TomTerm tom_make_VariableStar( OptionList t0,  TomName t1,  TomType t2) { return  getTomSignatureFactory().makeTomTerm_VariableStar(t0, t1, t2); }public  OptionList tom_get_slot_VariableStar_option( TomTerm t) { return  t.getOption(); }public  TomName tom_get_slot_VariableStar_astName( TomTerm t) { return  t.getAstName(); }public  TomType tom_get_slot_VariableStar_astType( TomTerm t) { return  t.getAstType(); }public boolean tom_is_fun_sym_Placeholder( TomTerm t) { return  (t!= null) && t.isPlaceholder(); }public  TomTerm tom_make_Placeholder( OptionList t0) { return  getTomSignatureFactory().makeTomTerm_Placeholder(t0); }public  OptionList tom_get_slot_Placeholder_option( TomTerm t) { return  t.getOption(); }public boolean tom_is_fun_sym_UnamedVariable( TomTerm t) { return  (t!= null) && t.isUnamedVariable(); }public  TomTerm tom_make_UnamedVariable( OptionList t0,  TomType t1) { return  getTomSignatureFactory().makeTomTerm_UnamedVariable(t0, t1); }public  OptionList tom_get_slot_UnamedVariable_option( TomTerm t) { return  t.getOption(); }public  TomType tom_get_slot_UnamedVariable_astType( TomTerm t) { return  t.getAstType(); }public boolean tom_is_fun_sym_UnamedVariableStar( TomTerm t) { return  (t!= null) && t.isUnamedVariableStar(); }public  TomTerm tom_make_UnamedVariableStar( OptionList t0,  TomType t1) { return  getTomSignatureFactory().makeTomTerm_UnamedVariableStar(t0, t1); }public  OptionList tom_get_slot_UnamedVariableStar_option( TomTerm t) { return  t.getOption(); }public  TomType tom_get_slot_UnamedVariableStar_astType( TomTerm t) { return  t.getAstType(); }public boolean tom_is_fun_sym_emptyTerm( TomTerm t) { return  (t!= null) && t.isEmptyTerm(); }public  TomTerm tom_make_emptyTerm() { return  getTomSignatureFactory().makeTomTerm_EmptyTerm(); }public boolean tom_is_fun_sym_TargetLanguageToTomTerm( TomTerm t) { return  (t!= null) && t.isTargetLanguageToTomTerm(); }public  TomTerm tom_make_TargetLanguageToTomTerm( TargetLanguage t0) { return  getTomSignatureFactory().makeTomTerm_TargetLanguageToTomTerm(t0); }public  TargetLanguage tom_get_slot_TargetLanguageToTomTerm_tl( TomTerm t) { return  t.getTl(); }public boolean tom_is_fun_sym_TomTypeToTomTerm( TomTerm t) { return  (t!= null) && t.isTomTypeToTomTerm(); }public  TomTerm tom_make_TomTypeToTomTerm( TomType t0) { return  getTomSignatureFactory().makeTomTerm_TomTypeToTomTerm(t0); }public  TomType tom_get_slot_TomTypeToTomTerm_astType( TomTerm t) { return  t.getAstType(); }public boolean tom_is_fun_sym_TomNameToTomTerm( TomTerm t) { return  (t!= null) && t.isTomNameToTomTerm(); }public  TomTerm tom_make_TomNameToTomTerm( TomName t0) { return  getTomSignatureFactory().makeTomTerm_TomNameToTomTerm(t0); }public  TomName tom_get_slot_TomNameToTomTerm_astName( TomTerm t) { return  t.getAstName(); }public boolean tom_is_fun_sym_TomSymbolToTomTerm( TomTerm t) { return  (t!= null) && t.isTomSymbolToTomTerm(); }public  TomTerm tom_make_TomSymbolToTomTerm( TomSymbol t0) { return  getTomSignatureFactory().makeTomTerm_TomSymbolToTomTerm(t0); }public  TomSymbol tom_get_slot_TomSymbolToTomTerm_astSymbol( TomTerm t) { return  t.getAstSymbol(); }public boolean tom_is_fun_sym_DeclarationToTomTerm( TomTerm t) { return  (t!= null) && t.isDeclarationToTomTerm(); }public  TomTerm tom_make_DeclarationToTomTerm( Declaration t0) { return  getTomSignatureFactory().makeTomTerm_DeclarationToTomTerm(t0); }public  Declaration tom_get_slot_DeclarationToTomTerm_astDeclaration( TomTerm t) { return  t.getAstDeclaration(); }public boolean tom_is_fun_sym_OptionToTomTerm( TomTerm t) { return  (t!= null) && t.isOptionToTomTerm(); }public  TomTerm tom_make_OptionToTomTerm( OptionList t0) { return  getTomSignatureFactory().makeTomTerm_OptionToTomTerm(t0); }public  OptionList tom_get_slot_OptionToTomTerm_option( TomTerm t) { return  t.getOption(); }public boolean tom_is_fun_sym_ExpressionToTomTerm( TomTerm t) { return  (t!= null) && t.isExpressionToTomTerm(); }public  TomTerm tom_make_ExpressionToTomTerm( Expression t0) { return  getTomSignatureFactory().makeTomTerm_ExpressionToTomTerm(t0); }public  Expression tom_get_slot_ExpressionToTomTerm_astExpression( TomTerm t) { return  t.getAstExpression(); }public boolean tom_is_fun_sym_InstructionToTomTerm( TomTerm t) { return  (t!= null) && t.isInstructionToTomTerm(); }public  TomTerm tom_make_InstructionToTomTerm( Instruction t0) { return  getTomSignatureFactory().makeTomTerm_InstructionToTomTerm(t0); }public  Instruction tom_get_slot_InstructionToTomTerm_astInstruction( TomTerm t) { return  t.getAstInstruction(); }public boolean tom_is_fun_sym_Tom( TomTerm t) { return  (t!= null) && t.isTom(); }public  TomTerm tom_make_Tom( TomList t0) { return  getTomSignatureFactory().makeTomTerm_Tom(t0); }public  TomList tom_get_slot_Tom_tomList( TomTerm t) { return  t.getTomList(); }public boolean tom_is_fun_sym_TomInclude( TomTerm t) { return  (t!= null) && t.isTomInclude(); }public  TomTerm tom_make_TomInclude( TomList t0) { return  getTomSignatureFactory().makeTomTerm_TomInclude(t0); }public  TomList tom_get_slot_TomInclude_tomList( TomTerm t) { return  t.getTomList(); }public boolean tom_is_fun_sym_MakeTerm( TomTerm t) { return  (t!= null) && t.isMakeTerm(); }public  TomTerm tom_make_MakeTerm( TomTerm t0) { return  getTomSignatureFactory().makeTomTerm_MakeTerm(t0); }public  TomTerm tom_get_slot_MakeTerm_kid1( TomTerm t) { return  t.getKid1(); }public boolean tom_is_fun_sym_FunctionCall( TomTerm t) { return  (t!= null) && t.isFunctionCall(); }public  TomTerm tom_make_FunctionCall( TomName t0,  TomList t1) { return  getTomSignatureFactory().makeTomTerm_FunctionCall(t0, t1); }public  TomName tom_get_slot_FunctionCall_astName( TomTerm t) { return  t.getAstName(); }public  TomList tom_get_slot_FunctionCall_args( TomTerm t) { return  t.getArgs(); }public boolean tom_is_fun_sym_MakeFunctionBegin( TomTerm t) { return  (t!= null) && t.isMakeFunctionBegin(); }public  TomTerm tom_make_MakeFunctionBegin( TomName t0,  TomTerm t1) { return  getTomSignatureFactory().makeTomTerm_MakeFunctionBegin(t0, t1); }public  TomName tom_get_slot_MakeFunctionBegin_astName( TomTerm t) { return  t.getAstName(); }public  TomTerm tom_get_slot_MakeFunctionBegin_subjectListAST( TomTerm t) { return  t.getSubjectListAST(); }public boolean tom_is_fun_sym_MakeFunctionEnd( TomTerm t) { return  (t!= null) && t.isMakeFunctionEnd(); }public  TomTerm tom_make_MakeFunctionEnd() { return  getTomSignatureFactory().makeTomTerm_MakeFunctionEnd(); }public boolean tom_is_fun_sym_BackQuoteAppl( TomTerm t) { return  (t!= null) && t.isBackQuoteAppl(); }public  TomTerm tom_make_BackQuoteAppl( OptionList t0,  TomName t1,  TomList t2) { return  getTomSignatureFactory().makeTomTerm_BackQuoteAppl(t0, t1, t2); }public  OptionList tom_get_slot_BackQuoteAppl_option( TomTerm t) { return  t.getOption(); }public  TomName tom_get_slot_BackQuoteAppl_astName( TomTerm t) { return  t.getAstName(); }public  TomList tom_get_slot_BackQuoteAppl_args( TomTerm t) { return  t.getArgs(); }public boolean tom_is_fun_sym_DoubleBackQuote( TomTerm t) { return  (t!= null) && t.isDoubleBackQuote(); }public  TomTerm tom_make_DoubleBackQuote( TomTerm t0) { return  getTomSignatureFactory().makeTomTerm_DoubleBackQuote(t0); }public  TomTerm tom_get_slot_DoubleBackQuote_arg( TomTerm t) { return  t.getArg(); }public boolean tom_is_fun_sym_Composite( TomTerm t) { return  (t!= null) && t.isComposite(); }public  TomTerm tom_make_Composite( TomList t0) { return  getTomSignatureFactory().makeTomTerm_Composite(t0); }public  TomList tom_get_slot_Composite_args( TomTerm t) { return  t.getArgs(); }public boolean tom_is_fun_sym_RecordAppl( TomTerm t) { return  (t!= null) && t.isRecordAppl(); }public  TomTerm tom_make_RecordAppl( OptionList t0,  NameList t1,  TomList t2) { return  getTomSignatureFactory().makeTomTerm_RecordAppl(t0, t1, t2); }public  OptionList tom_get_slot_RecordAppl_option( TomTerm t) { return  t.getOption(); }public  NameList tom_get_slot_RecordAppl_nameList( TomTerm t) { return  t.getNameList(); }public  TomList tom_get_slot_RecordAppl_args( TomTerm t) { return  t.getArgs(); }public boolean tom_is_fun_sym_PairSlotAppl( TomTerm t) { return  (t!= null) && t.isPairSlotAppl(); }public  TomTerm tom_make_PairSlotAppl( TomName t0,  TomTerm t1) { return  getTomSignatureFactory().makeTomTerm_PairSlotAppl(t0, t1); }public  TomName tom_get_slot_PairSlotAppl_slotName( TomTerm t) { return  t.getSlotName(); }public  TomTerm tom_get_slot_PairSlotAppl_appl( TomTerm t) { return  t.getAppl(); }public boolean tom_is_fun_sym_Match( TomTerm t) { return  (t!= null) && t.isMatch(); }public  TomTerm tom_make_Match( TomTerm t0,  TomTerm t1,  OptionList t2) { return  getTomSignatureFactory().makeTomTerm_Match(t0, t1, t2); }public  TomTerm tom_get_slot_Match_subjectList( TomTerm t) { return  t.getSubjectList(); }public  TomTerm tom_get_slot_Match_patternList( TomTerm t) { return  t.getPatternList(); }public  OptionList tom_get_slot_Match_option( TomTerm t) { return  t.getOption(); }public boolean tom_is_fun_sym_MatchingCondition( TomTerm t) { return  (t!= null) && t.isMatchingCondition(); }public  TomTerm tom_make_MatchingCondition( TomTerm t0,  TomTerm t1) { return  getTomSignatureFactory().makeTomTerm_MatchingCondition(t0, t1); }public  TomTerm tom_get_slot_MatchingCondition_lhs( TomTerm t) { return  t.getLhs(); }public  TomTerm tom_get_slot_MatchingCondition_rhs( TomTerm t) { return  t.getRhs(); }public boolean tom_is_fun_sym_EqualityCondition( TomTerm t) { return  (t!= null) && t.isEqualityCondition(); }public  TomTerm tom_make_EqualityCondition( TomTerm t0,  TomTerm t1) { return  getTomSignatureFactory().makeTomTerm_EqualityCondition(t0, t1); }public  TomTerm tom_get_slot_EqualityCondition_lhs( TomTerm t) { return  t.getLhs(); }public  TomTerm tom_get_slot_EqualityCondition_rhs( TomTerm t) { return  t.getRhs(); }public boolean tom_is_fun_sym_RuleSet( TomTerm t) { return  (t!= null) && t.isRuleSet(); }public  TomTerm tom_make_RuleSet( TomRuleList t0,  Option t1) { return  getTomSignatureFactory().makeTomTerm_RuleSet(t0, t1); }public  TomRuleList tom_get_slot_RuleSet_ruleList( TomTerm t) { return  t.getRuleList(); }public  Option tom_get_slot_RuleSet_orgTrack( TomTerm t) { return  t.getOrgTrack(); }public boolean tom_is_fun_sym_SubjectList( TomTerm t) { return  (t!= null) && t.isSubjectList(); }public  TomTerm tom_make_SubjectList( TomList t0) { return  getTomSignatureFactory().makeTomTerm_SubjectList(t0); }public  TomList tom_get_slot_SubjectList_tomList( TomTerm t) { return  t.getTomList(); }public boolean tom_is_fun_sym_PatternList( TomTerm t) { return  (t!= null) && t.isPatternList(); }public  TomTerm tom_make_PatternList( TomList t0) { return  getTomSignatureFactory().makeTomTerm_PatternList(t0); }public  TomList tom_get_slot_PatternList_tomList( TomTerm t) { return  t.getTomList(); }public boolean tom_is_fun_sym_TermList( TomTerm t) { return  (t!= null) && t.isTermList(); }public  TomTerm tom_make_TermList( TomList t0) { return  getTomSignatureFactory().makeTomTerm_TermList(t0); }public  TomList tom_get_slot_TermList_tomList( TomTerm t) { return  t.getTomList(); }public boolean tom_is_fun_sym_Term( TomTerm t) { return  (t!= null) && t.isTerm(); }public  TomTerm tom_make_Term( TomTerm t0) { return  getTomSignatureFactory().makeTomTerm_Term(t0); }public  TomTerm tom_get_slot_Term_tomTerm( TomTerm t) { return  t.getTomTerm(); }public boolean tom_is_fun_sym_PatternAction( TomTerm t) { return  (t!= null) && t.isPatternAction(); }public  TomTerm tom_make_PatternAction( TomTerm t0,  TomTerm t1,  OptionList t2) { return  getTomSignatureFactory().makeTomTerm_PatternAction(t0, t1, t2); }public  TomTerm tom_get_slot_PatternAction_termList( TomTerm t) { return  t.getTermList(); }public  TomTerm tom_get_slot_PatternAction_tom( TomTerm t) { return  t.getTom(); }public  OptionList tom_get_slot_PatternAction_option( TomTerm t) { return  t.getOption(); }public boolean tom_is_fun_sym_TLVar( TomTerm t) { return  (t!= null) && t.isTLVar(); }public  TomTerm tom_make_TLVar( String t0,  TomType t1) { return  getTomSignatureFactory().makeTomTerm_TLVar(t0, t1); }public  String tom_get_slot_TLVar_strName( TomTerm t) { return  t.getStrName(); }public  TomType tom_get_slot_TLVar_astType( TomTerm t) { return  t.getAstType(); }public boolean tom_is_fun_sym_Declaration( TomTerm t) { return  (t!= null) && t.isDeclaration(); }public  TomTerm tom_make_Declaration( TomTerm t0) { return  getTomSignatureFactory().makeTomTerm_Declaration(t0); }public  TomTerm tom_get_slot_Declaration_kid1( TomTerm t) { return  t.getKid1(); }public boolean tom_is_fun_sym_Variable( TomTerm t) { return  (t!= null) && t.isVariable(); }public  TomTerm tom_make_Variable( OptionList t0,  TomName t1,  TomType t2) { return  getTomSignatureFactory().makeTomTerm_Variable(t0, t1, t2); }public  OptionList tom_get_slot_Variable_option( TomTerm t) { return  t.getOption(); }public  TomName tom_get_slot_Variable_astName( TomTerm t) { return  t.getAstName(); }public  TomType tom_get_slot_Variable_astType( TomTerm t) { return  t.getAstType(); }public boolean tom_is_fun_sym_LocalVariable( TomTerm t) { return  (t!= null) && t.isLocalVariable(); }public  TomTerm tom_make_LocalVariable() { return  getTomSignatureFactory().makeTomTerm_LocalVariable(); }public boolean tom_is_fun_sym_EndLocalVariable( TomTerm t) { return  (t!= null) && t.isEndLocalVariable(); }public  TomTerm tom_make_EndLocalVariable() { return  getTomSignatureFactory().makeTomTerm_EndLocalVariable(); }public boolean tom_is_fun_sym_BuildVariable( TomTerm t) { return  (t!= null) && t.isBuildVariable(); }public  TomTerm tom_make_BuildVariable( TomName t0) { return  getTomSignatureFactory().makeTomTerm_BuildVariable(t0); }public  TomName tom_get_slot_BuildVariable_astName( TomTerm t) { return  t.getAstName(); }public boolean tom_is_fun_sym_BuildTerm( TomTerm t) { return  (t!= null) && t.isBuildTerm(); }public  TomTerm tom_make_BuildTerm( TomName t0,  TomList t1) { return  getTomSignatureFactory().makeTomTerm_BuildTerm(t0, t1); }public  TomName tom_get_slot_BuildTerm_astName( TomTerm t) { return  t.getAstName(); }public  TomList tom_get_slot_BuildTerm_args( TomTerm t) { return  t.getArgs(); }public boolean tom_is_fun_sym_BuildList( TomTerm t) { return  (t!= null) && t.isBuildList(); }public  TomTerm tom_make_BuildList( TomName t0,  TomList t1) { return  getTomSignatureFactory().makeTomTerm_BuildList(t0, t1); }public  TomName tom_get_slot_BuildList_astName( TomTerm t) { return  t.getAstName(); }public  TomList tom_get_slot_BuildList_args( TomTerm t) { return  t.getArgs(); }public boolean tom_is_fun_sym_BuildArray( TomTerm t) { return  (t!= null) && t.isBuildArray(); }public  TomTerm tom_make_BuildArray( TomName t0,  TomList t1) { return  getTomSignatureFactory().makeTomTerm_BuildArray(t0, t1); }public  TomName tom_get_slot_BuildArray_astName( TomTerm t) { return  t.getAstName(); }public  TomList tom_get_slot_BuildArray_args( TomTerm t) { return  t.getArgs(); }public boolean tom_is_fun_sym_CompiledMatch( TomTerm t) { return  (t!= null) && t.isCompiledMatch(); }public  TomTerm tom_make_CompiledMatch( TomList t0,  TomList t1,  OptionList t2) { return  getTomSignatureFactory().makeTomTerm_CompiledMatch(t0, t1, t2); }public  TomList tom_get_slot_CompiledMatch_decls( TomTerm t) { return  t.getDecls(); }public  TomList tom_get_slot_CompiledMatch_automataList( TomTerm t) { return  t.getAutomataList(); }public  OptionList tom_get_slot_CompiledMatch_option( TomTerm t) { return  t.getOption(); }public boolean tom_is_fun_sym_CompiledPattern( TomTerm t) { return  (t!= null) && t.isCompiledPattern(); }public  TomTerm tom_make_CompiledPattern( TomList t0) { return  getTomSignatureFactory().makeTomTerm_CompiledPattern(t0); }public  TomList tom_get_slot_CompiledPattern_instList( TomTerm t) { return  t.getInstList(); }public boolean tom_is_fun_sym_AssignedVariable( TomTerm t) { return  (t!= null) && t.isAssignedVariable(); }public  TomTerm tom_make_AssignedVariable( String t0,  Expression t1,  int t2,  Expression t3,  Expression t4) { return  getTomSignatureFactory().makeTomTerm_AssignedVariable(t0, t1, t2, t3, t4); }public  String tom_get_slot_AssignedVariable_varName( TomTerm t) { return  t.getVarName(); }public  Expression tom_get_slot_AssignedVariable_source( TomTerm t) { return  t.getSource(); }public  int tom_get_slot_AssignedVariable_nbUse( TomTerm t) { return  t.getNbUse(); }public  Expression tom_get_slot_AssignedVariable_usedInDoWhile( TomTerm t) { return  t.getUsedInDoWhile(); }public  Expression tom_get_slot_AssignedVariable_removable( TomTerm t) { return  t.getRemovable(); }public boolean tom_is_fun_sym_Automata( TomTerm t) { return  (t!= null) && t.isAutomata(); }public  TomTerm tom_make_Automata( OptionList t0,  TomNumberList t1,  TomList t2) { return  getTomSignatureFactory().makeTomTerm_Automata(t0, t1, t2); }public  OptionList tom_get_slot_Automata_option( TomTerm t) { return  t.getOption(); }public  TomNumberList tom_get_slot_Automata_numberList( TomTerm t) { return  t.getNumberList(); }public  TomList tom_get_slot_Automata_instList( TomTerm t) { return  t.getInstList(); }public Object tom_get_fun_sym_TomNumber( TomNumber t) { return null; }public boolean tom_cmp_fun_sym_TomNumber(Object s1, Object s2) { return  false; }public Object tom_get_subterm_TomNumber( TomNumber t,  int n) { return null; }public boolean tom_terms_equal_TomNumber(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_MatchNumber( TomNumber t) { return  (t!= null) && t.isMatchNumber(); }public  TomNumber tom_make_MatchNumber( TomNumber t0) { return  getTomSignatureFactory().makeTomNumber_MatchNumber(t0); }public  TomNumber tom_get_slot_MatchNumber_number( TomNumber t) { return  t.getNumber(); }public boolean tom_is_fun_sym_PatternNumber( TomNumber t) { return  (t!= null) && t.isPatternNumber(); }public  TomNumber tom_make_PatternNumber( TomNumber t0) { return  getTomSignatureFactory().makeTomNumber_PatternNumber(t0); }public  TomNumber tom_get_slot_PatternNumber_number( TomNumber t) { return  t.getNumber(); }public boolean tom_is_fun_sym_ListNumber( TomNumber t) { return  (t!= null) && t.isListNumber(); }public  TomNumber tom_make_ListNumber( TomNumber t0) { return  getTomSignatureFactory().makeTomNumber_ListNumber(t0); }public  TomNumber tom_get_slot_ListNumber_number( TomNumber t) { return  t.getNumber(); }public boolean tom_is_fun_sym_IndexNumber( TomNumber t) { return  (t!= null) && t.isIndexNumber(); }public  TomNumber tom_make_IndexNumber( TomNumber t0) { return  getTomSignatureFactory().makeTomNumber_IndexNumber(t0); }public  TomNumber tom_get_slot_IndexNumber_number( TomNumber t) { return  t.getNumber(); }public boolean tom_is_fun_sym_Begin( TomNumber t) { return  (t!= null) && t.isBegin(); }public  TomNumber tom_make_Begin( TomNumber t0) { return  getTomSignatureFactory().makeTomNumber_Begin(t0); }public  TomNumber tom_get_slot_Begin_number( TomNumber t) { return  t.getNumber(); }public boolean tom_is_fun_sym_End( TomNumber t) { return  (t!= null) && t.isEnd(); }public  TomNumber tom_make_End( TomNumber t0) { return  getTomSignatureFactory().makeTomNumber_End(t0); }public  TomNumber tom_get_slot_End_number( TomNumber t) { return  t.getNumber(); }public boolean tom_is_fun_sym_Number( TomNumber t) { return  (t!= null) && t.isNumber(); }public  TomNumber tom_make_Number( int t0) { return  getTomSignatureFactory().makeTomNumber_Number(t0); }public  int tom_get_slot_Number_integer( TomNumber t) { return  t.getInteger(); }public boolean tom_is_fun_sym_AbsVar( TomNumber t) { return  (t!= null) && t.isAbsVar(); }public  TomNumber tom_make_AbsVar( TomNumber t0) { return  getTomSignatureFactory().makeTomNumber_AbsVar(t0); }public  TomNumber tom_get_slot_AbsVar_number( TomNumber t) { return  t.getNumber(); }public boolean tom_is_fun_sym_RenamedVar( TomNumber t) { return  (t!= null) && t.isRenamedVar(); }public  TomNumber tom_make_RenamedVar( TomName t0) { return  getTomSignatureFactory().makeTomNumber_RenamedVar(t0); }public  TomName tom_get_slot_RenamedVar_astName( TomNumber t) { return  t.getAstName(); }public boolean tom_is_fun_sym_RuleVar( TomNumber t) { return  (t!= null) && t.isRuleVar(); }public  TomNumber tom_make_RuleVar() { return  getTomSignatureFactory().makeTomNumber_RuleVar(); }public Object tom_get_fun_sym_TomRule( TomRule t) { return null; }public boolean tom_cmp_fun_sym_TomRule(Object s1, Object s2) { return  false; }public Object tom_get_subterm_TomRule( TomRule t,  int n) { return null; }public boolean tom_terms_equal_TomRule(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_RewriteRule( TomRule t) { return  (t!= null) && t.isRewriteRule(); }public  TomRule tom_make_RewriteRule( TomTerm t0,  TomTerm t1,  TomList t2,  OptionList t3) { return  getTomSignatureFactory().makeTomRule_RewriteRule(t0, t1, t2, t3); }public  TomTerm tom_get_slot_RewriteRule_lhs( TomRule t) { return  t.getLhs(); }public  TomTerm tom_get_slot_RewriteRule_rhs( TomRule t) { return  t.getRhs(); }public  TomList tom_get_slot_RewriteRule_condList( TomRule t) { return  t.getCondList(); }public  OptionList tom_get_slot_RewriteRule_option( TomRule t) { return  t.getOption(); }public Object tom_get_fun_sym_Instruction( Instruction t) { return null; }public boolean tom_cmp_fun_sym_Instruction(Object s1, Object s2) { return  false; }public Object tom_get_subterm_Instruction( Instruction t,  int n) { return null; }public boolean tom_terms_equal_Instruction(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_IfThenElse( Instruction t) { return  (t!= null) && t.isIfThenElse(); }public  Instruction tom_make_IfThenElse( Expression t0,  TomList t1,  TomList t2) { return  getTomSignatureFactory().makeInstruction_IfThenElse(t0, t1, t2); }public  Expression tom_get_slot_IfThenElse_condition( Instruction t) { return  t.getCondition(); }public  TomList tom_get_slot_IfThenElse_succesList( Instruction t) { return  t.getSuccesList(); }public  TomList tom_get_slot_IfThenElse_failureList( Instruction t) { return  t.getFailureList(); }public boolean tom_is_fun_sym_DoWhile( Instruction t) { return  (t!= null) && t.isDoWhile(); }public  Instruction tom_make_DoWhile( TomList t0,  Expression t1) { return  getTomSignatureFactory().makeInstruction_DoWhile(t0, t1); }public  TomList tom_get_slot_DoWhile_instList( Instruction t) { return  t.getInstList(); }public  Expression tom_get_slot_DoWhile_condition( Instruction t) { return  t.getCondition(); }public boolean tom_is_fun_sym_Assign( Instruction t) { return  (t!= null) && t.isAssign(); }public  Instruction tom_make_Assign( TomTerm t0,  Expression t1) { return  getTomSignatureFactory().makeInstruction_Assign(t0, t1); }public  TomTerm tom_get_slot_Assign_kid1( Instruction t) { return  t.getKid1(); }public  Expression tom_get_slot_Assign_source( Instruction t) { return  t.getSource(); }public boolean tom_is_fun_sym_AssignMatchSubject( Instruction t) { return  (t!= null) && t.isAssignMatchSubject(); }public  Instruction tom_make_AssignMatchSubject( TomTerm t0,  Expression t1) { return  getTomSignatureFactory().makeInstruction_AssignMatchSubject(t0, t1); }public  TomTerm tom_get_slot_AssignMatchSubject_kid1( Instruction t) { return  t.getKid1(); }public  Expression tom_get_slot_AssignMatchSubject_source( Instruction t) { return  t.getSource(); }public boolean tom_is_fun_sym_Increment( Instruction t) { return  (t!= null) && t.isIncrement(); }public  Instruction tom_make_Increment( TomTerm t0) { return  getTomSignatureFactory().makeInstruction_Increment(t0); }public  TomTerm tom_get_slot_Increment_kid1( Instruction t) { return  t.getKid1(); }public boolean tom_is_fun_sym_Action( Instruction t) { return  (t!= null) && t.isAction(); }public  Instruction tom_make_Action( TomList t0) { return  getTomSignatureFactory().makeInstruction_Action(t0); }public  TomList tom_get_slot_Action_instList( Instruction t) { return  t.getInstList(); }public boolean tom_is_fun_sym_ExitAction( Instruction t) { return  (t!= null) && t.isExitAction(); }public  Instruction tom_make_ExitAction( TomNumberList t0) { return  getTomSignatureFactory().makeInstruction_ExitAction(t0); }public  TomNumberList tom_get_slot_ExitAction_numberList( Instruction t) { return  t.getNumberList(); }public boolean tom_is_fun_sym_Return( Instruction t) { return  (t!= null) && t.isReturn(); }public  Instruction tom_make_Return( TomTerm t0) { return  getTomSignatureFactory().makeInstruction_Return(t0); }public  TomTerm tom_get_slot_Return_kid1( Instruction t) { return  t.getKid1(); }public boolean tom_is_fun_sym_OpenBlock( Instruction t) { return  (t!= null) && t.isOpenBlock(); }public  Instruction tom_make_OpenBlock() { return  getTomSignatureFactory().makeInstruction_OpenBlock(); }public boolean tom_is_fun_sym_CloseBlock( Instruction t) { return  (t!= null) && t.isCloseBlock(); }public  Instruction tom_make_CloseBlock() { return  getTomSignatureFactory().makeInstruction_CloseBlock(); }public boolean tom_is_fun_sym_NamedBlock( Instruction t) { return  (t!= null) && t.isNamedBlock(); }public  Instruction tom_make_NamedBlock( String t0,  TomList t1) { return  getTomSignatureFactory().makeInstruction_NamedBlock(t0, t1); }public  String tom_get_slot_NamedBlock_blockName( Instruction t) { return  t.getBlockName(); }public  TomList tom_get_slot_NamedBlock_instList( Instruction t) { return  t.getInstList(); }public Object tom_get_fun_sym_TomSymbol( TomSymbol t) { return null; }public boolean tom_cmp_fun_sym_TomSymbol(Object s1, Object s2) { return  false; }public Object tom_get_subterm_TomSymbol( TomSymbol t,  int n) { return null; }public boolean tom_terms_equal_TomSymbol(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_emptySymbol( TomSymbol t) { return  (t!= null) && t.isEmptySymbol(); }public  TomSymbol tom_make_emptySymbol() { return  getTomSignatureFactory().makeTomSymbol_EmptySymbol(); }public boolean tom_is_fun_sym_Symbol( TomSymbol t) { return  (t!= null) && t.isSymbol(); }public  TomSymbol tom_make_Symbol( TomName t0,  TomType t1,  SlotList t2,  OptionList t3,  TargetLanguage t4) { return  getTomSignatureFactory().makeTomSymbol_Symbol(t0, t1, t2, t3, t4); }public  TomName tom_get_slot_Symbol_astName( TomSymbol t) { return  t.getAstName(); }public  TomType tom_get_slot_Symbol_typesToType( TomSymbol t) { return  t.getTypesToType(); }public  SlotList tom_get_slot_Symbol_slotList( TomSymbol t) { return  t.getSlotList(); }public  OptionList tom_get_slot_Symbol_option( TomSymbol t) { return  t.getOption(); }public  TargetLanguage tom_get_slot_Symbol_tlCode( TomSymbol t) { return  t.getTlCode(); }public Object tom_get_fun_sym_PairNameDecl( PairNameDecl t) { return null; }public boolean tom_cmp_fun_sym_PairNameDecl(Object s1, Object s2) { return  false; }public Object tom_get_subterm_PairNameDecl( PairNameDecl t,  int n) { return null; }public boolean tom_terms_equal_PairNameDecl(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_Slot( PairNameDecl t) { return  (t!= null) && t.isSlot(); }public  PairNameDecl tom_make_Slot( TomName t0,  Declaration t1) { return  getTomSignatureFactory().makePairNameDecl_Slot(t0, t1); }public  TomName tom_get_slot_Slot_slotName( PairNameDecl t) { return  t.getSlotName(); }public  Declaration tom_get_slot_Slot_slotDecl( PairNameDecl t) { return  t.getSlotDecl(); }public Object tom_get_fun_sym_TomSymbolTable( TomSymbolTable t) { return null; }public boolean tom_cmp_fun_sym_TomSymbolTable(Object s1, Object s2) { return  false; }public Object tom_get_subterm_TomSymbolTable( TomSymbolTable t,  int n) { return null; }public boolean tom_terms_equal_TomSymbolTable(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_Table( TomSymbolTable t) { return  (t!= null) && t.isTable(); }public  TomSymbolTable tom_make_Table( TomEntryList t0) { return  getTomSignatureFactory().makeTomSymbolTable_Table(t0); }public  TomEntryList tom_get_slot_Table_entryList( TomSymbolTable t) { return  t.getEntryList(); }public Object tom_get_fun_sym_TomEntry( TomEntry t) { return null; }public boolean tom_cmp_fun_sym_TomEntry(Object s1, Object s2) { return  false; }public Object tom_get_subterm_TomEntry( TomEntry t,  int n) { return null; }public boolean tom_terms_equal_TomEntry(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_Entry( TomEntry t) { return  (t!= null) && t.isEntry(); }public  TomEntry tom_make_Entry( String t0,  TomSymbol t1) { return  getTomSignatureFactory().makeTomEntry_Entry(t0, t1); }public  String tom_get_slot_Entry_strName( TomEntry t) { return  t.getStrName(); }public  TomSymbol tom_get_slot_Entry_astSymbol( TomEntry t) { return  t.getAstSymbol(); }public Object tom_get_fun_sym_TomStructureTable( TomStructureTable t) { return null; }public boolean tom_cmp_fun_sym_TomStructureTable(Object s1, Object s2) { return  false; }public Object tom_get_subterm_TomStructureTable( TomStructureTable t,  int n) { return null; }public boolean tom_terms_equal_TomStructureTable(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_StructTable( TomStructureTable t) { return  (t!= null) && t.isStructTable(); }public  TomStructureTable tom_make_StructTable( TomList t0) { return  getTomSignatureFactory().makeTomStructureTable_StructTable(t0); }public  TomList tom_get_slot_StructTable_structList( TomStructureTable t) { return  t.getStructList(); }public Object tom_get_fun_sym_TomError( TomError t) { return null; }public boolean tom_cmp_fun_sym_TomError(Object s1, Object s2) { return  false; }public Object tom_get_subterm_TomError( TomError t,  int n) { return null; }public boolean tom_terms_equal_TomError(Object t1, Object t2) { return t1.equals(t2); }public boolean tom_is_fun_sym_Error( TomError t) { return  (t!= null) && t.isError(); }public  TomError tom_make_Error( String t0,  String t1,  int t2,  int t3) { return  getTomSignatureFactory().makeTomError_Error(t0, t1, t2, t3); }public  String tom_get_slot_Error_message( TomError t) { return  t.getMessage(); }public  String tom_get_slot_Error_file( TomError t) { return  t.getFile(); }public  int tom_get_slot_Error_line( TomError t) { return  t.getLine(); }public  int tom_get_slot_Error_level( TomError t) { return  t.getLevel(); }public Object tom_get_fun_sym_TomList( TomList t) { return null; }public boolean tom_cmp_fun_sym_TomList(Object s1, Object s2) { return  false; }public boolean tom_terms_equal_TomList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_TomList( TomList l) { return l.getHead(); }public  TomList tom_get_tail_TomList( TomList l) { return l.getTail(); }public boolean tom_is_empty_TomList( TomList l) { return l.isEmpty(); }public boolean tom_is_fun_sym_concTomTerm( TomList t) { return (t!= null) && t.isSortTomList(); }public Object tom_make_empty_concTomTerm() { return getTomSignatureFactory().makeTomList(); }public  TomList tom_make_insert_concTomTerm( TomTerm e,  TomList l) { return getTomSignatureFactory().makeTomList(e,l); } public  TomList tom_reverse_concTomTerm( TomList l) {     TomList result = ( TomList)tom_make_empty_concTomTerm();     while(!tom_is_empty_TomList(l) ) {       result = ( TomList)tom_make_insert_concTomTerm(( TomTerm)tom_get_head_TomList(l),result);       l = ( TomList)tom_get_tail_TomList(l);     }     return result;   }  public  TomList tom_insert_list_concTomTerm( TomList l1,  TomList l2) {    if(tom_is_empty_TomList(l1)) {     return l2;    } else if(tom_is_empty_TomList(l2)) {     return l1;    } else if(tom_is_empty_TomList(( TomList)tom_get_tail_TomList(l1))) {     return ( TomList)tom_make_insert_concTomTerm(( TomTerm)tom_get_head_TomList(l1),l2);    } else {      return ( TomList)tom_make_insert_concTomTerm(( TomTerm)tom_get_head_TomList(l1),tom_insert_list_concTomTerm(( TomList)tom_get_tail_TomList(l1),l2));    }   }  public  TomList tom_get_slice_concTomTerm( TomList begin,  TomList end) {     TomList result = ( TomList)tom_make_empty_concTomTerm();     while(!tom_terms_equal_TomList(begin,end)) {       result = ( TomList)tom_make_insert_concTomTerm(( TomTerm)tom_get_head_TomList(begin),result);       begin = ( TomList)tom_get_tail_TomList(begin);      }     result = ( TomList)tom_reverse_concTomTerm(result);     return result;   } public boolean tom_is_fun_sym_emptyTomList( TomList t) { return  (t!= null) && t.isEmpty(); }public  TomList tom_make_emptyTomList() { return getTomSignatureFactory().makeTomList(); }public boolean tom_is_fun_sym_manyTomList( TomList t) { return  (t!= null) && t.isMany(); }public  TomList tom_make_manyTomList( TomTerm e,  TomList l) { return getTomSignatureFactory().makeTomList(e,l); }public  TomTerm tom_get_slot_manyTomList_head( TomList t) { return  t.getHead(); }public  TomList tom_get_slot_manyTomList_tail( TomList t) { return  t.getTail(); }public Object tom_get_fun_sym_TomNumberList( TomNumberList t) { return null; }public boolean tom_cmp_fun_sym_TomNumberList(Object s1, Object s2) { return  false; }public boolean tom_terms_equal_TomNumberList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_TomNumberList( TomNumberList l) { return l.getHead(); }public  TomNumberList tom_get_tail_TomNumberList( TomNumberList l) { return l.getTail(); }public boolean tom_is_empty_TomNumberList( TomNumberList l) { return l.isEmpty(); }public boolean tom_is_fun_sym_concTomNumber( TomNumberList t) { return (t!= null) && t.isSortTomNumberList(); }public Object tom_make_empty_concTomNumber() { return getTomSignatureFactory().makeTomNumberList(); }public  TomNumberList tom_make_insert_concTomNumber( TomNumber e,  TomNumberList l) { return getTomSignatureFactory().makeTomNumberList(e,l); } public  TomNumberList tom_reverse_concTomNumber( TomNumberList l) {     TomNumberList result = ( TomNumberList)tom_make_empty_concTomNumber();     while(!tom_is_empty_TomNumberList(l) ) {       result = ( TomNumberList)tom_make_insert_concTomNumber(( TomNumber)tom_get_head_TomNumberList(l),result);       l = ( TomNumberList)tom_get_tail_TomNumberList(l);     }     return result;   }  public  TomNumberList tom_insert_list_concTomNumber( TomNumberList l1,  TomNumberList l2) {    if(tom_is_empty_TomNumberList(l1)) {     return l2;    } else if(tom_is_empty_TomNumberList(l2)) {     return l1;    } else if(tom_is_empty_TomNumberList(( TomNumberList)tom_get_tail_TomNumberList(l1))) {     return ( TomNumberList)tom_make_insert_concTomNumber(( TomNumber)tom_get_head_TomNumberList(l1),l2);    } else {      return ( TomNumberList)tom_make_insert_concTomNumber(( TomNumber)tom_get_head_TomNumberList(l1),tom_insert_list_concTomNumber(( TomNumberList)tom_get_tail_TomNumberList(l1),l2));    }   }  public  TomNumberList tom_get_slice_concTomNumber( TomNumberList begin,  TomNumberList end) {     TomNumberList result = ( TomNumberList)tom_make_empty_concTomNumber();     while(!tom_terms_equal_TomNumberList(begin,end)) {       result = ( TomNumberList)tom_make_insert_concTomNumber(( TomNumber)tom_get_head_TomNumberList(begin),result);       begin = ( TomNumberList)tom_get_tail_TomNumberList(begin);      }     result = ( TomNumberList)tom_reverse_concTomNumber(result);     return result;   } public boolean tom_is_fun_sym_emptyTomNumberList( TomNumberList t) { return  (t!= null) && t.isEmpty(); }public  TomNumberList tom_make_emptyTomNumberList() { return getTomSignatureFactory().makeTomNumberList(); }public boolean tom_is_fun_sym_manyTomNumberList( TomNumberList t) { return  (t!= null) && t.isMany(); }public  TomNumberList tom_make_manyTomNumberList( TomNumber e,  TomNumberList l) { return getTomSignatureFactory().makeTomNumberList(e,l); }public  TomNumber tom_get_slot_manyTomNumberList_head( TomNumberList t) { return  t.getHead(); }public  TomNumberList tom_get_slot_manyTomNumberList_tail( TomNumberList t) { return  t.getTail(); }public Object tom_get_fun_sym_TomRuleList( TomRuleList t) { return null; }public boolean tom_cmp_fun_sym_TomRuleList(Object s1, Object s2) { return  false; }public boolean tom_terms_equal_TomRuleList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_TomRuleList( TomRuleList l) { return l.getHead(); }public  TomRuleList tom_get_tail_TomRuleList( TomRuleList l) { return l.getTail(); }public boolean tom_is_empty_TomRuleList( TomRuleList l) { return l.isEmpty(); }public boolean tom_is_fun_sym_concTomRule( TomRuleList t) { return (t!= null) && t.isSortTomRuleList(); }public Object tom_make_empty_concTomRule() { return getTomSignatureFactory().makeTomRuleList(); }public  TomRuleList tom_make_insert_concTomRule( TomRule e,  TomRuleList l) { return getTomSignatureFactory().makeTomRuleList(e,l); } public  TomRuleList tom_reverse_concTomRule( TomRuleList l) {     TomRuleList result = ( TomRuleList)tom_make_empty_concTomRule();     while(!tom_is_empty_TomRuleList(l) ) {       result = ( TomRuleList)tom_make_insert_concTomRule(( TomRule)tom_get_head_TomRuleList(l),result);       l = ( TomRuleList)tom_get_tail_TomRuleList(l);     }     return result;   }  public  TomRuleList tom_insert_list_concTomRule( TomRuleList l1,  TomRuleList l2) {    if(tom_is_empty_TomRuleList(l1)) {     return l2;    } else if(tom_is_empty_TomRuleList(l2)) {     return l1;    } else if(tom_is_empty_TomRuleList(( TomRuleList)tom_get_tail_TomRuleList(l1))) {     return ( TomRuleList)tom_make_insert_concTomRule(( TomRule)tom_get_head_TomRuleList(l1),l2);    } else {      return ( TomRuleList)tom_make_insert_concTomRule(( TomRule)tom_get_head_TomRuleList(l1),tom_insert_list_concTomRule(( TomRuleList)tom_get_tail_TomRuleList(l1),l2));    }   }  public  TomRuleList tom_get_slice_concTomRule( TomRuleList begin,  TomRuleList end) {     TomRuleList result = ( TomRuleList)tom_make_empty_concTomRule();     while(!tom_terms_equal_TomRuleList(begin,end)) {       result = ( TomRuleList)tom_make_insert_concTomRule(( TomRule)tom_get_head_TomRuleList(begin),result);       begin = ( TomRuleList)tom_get_tail_TomRuleList(begin);      }     result = ( TomRuleList)tom_reverse_concTomRule(result);     return result;   } public boolean tom_is_fun_sym_emptyTomRuleList( TomRuleList t) { return  (t!= null) && t.isEmpty(); }public  TomRuleList tom_make_emptyTomRuleList() { return getTomSignatureFactory().makeTomRuleList(); }public boolean tom_is_fun_sym_manyTomRuleList( TomRuleList t) { return  (t!= null) && t.isMany(); }public  TomRuleList tom_make_manyTomRuleList( TomRule e,  TomRuleList l) { return getTomSignatureFactory().makeTomRuleList(e,l); }public  TomRule tom_get_slot_manyTomRuleList_head( TomRuleList t) { return  t.getHead(); }public  TomRuleList tom_get_slot_manyTomRuleList_tail( TomRuleList t) { return  t.getTail(); }public Object tom_get_fun_sym_TomTypeList( TomTypeList t) { return null; }public boolean tom_cmp_fun_sym_TomTypeList(Object s1, Object s2) { return  false; }public boolean tom_terms_equal_TomTypeList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_TomTypeList( TomTypeList l) { return l.getHead(); }public  TomTypeList tom_get_tail_TomTypeList( TomTypeList l) { return l.getTail(); }public boolean tom_is_empty_TomTypeList( TomTypeList l) { return l.isEmpty(); }public boolean tom_is_fun_sym_concTomType( TomTypeList t) { return (t!= null) && t.isSortTomTypeList(); }public Object tom_make_empty_concTomType() { return getTomSignatureFactory().makeTomTypeList(); }public  TomTypeList tom_make_insert_concTomType( TomType e,  TomTypeList l) { return getTomSignatureFactory().makeTomTypeList(e,l); } public  TomTypeList tom_reverse_concTomType( TomTypeList l) {     TomTypeList result = ( TomTypeList)tom_make_empty_concTomType();     while(!tom_is_empty_TomTypeList(l) ) {       result = ( TomTypeList)tom_make_insert_concTomType(( TomType)tom_get_head_TomTypeList(l),result);       l = ( TomTypeList)tom_get_tail_TomTypeList(l);     }     return result;   }  public  TomTypeList tom_insert_list_concTomType( TomTypeList l1,  TomTypeList l2) {    if(tom_is_empty_TomTypeList(l1)) {     return l2;    } else if(tom_is_empty_TomTypeList(l2)) {     return l1;    } else if(tom_is_empty_TomTypeList(( TomTypeList)tom_get_tail_TomTypeList(l1))) {     return ( TomTypeList)tom_make_insert_concTomType(( TomType)tom_get_head_TomTypeList(l1),l2);    } else {      return ( TomTypeList)tom_make_insert_concTomType(( TomType)tom_get_head_TomTypeList(l1),tom_insert_list_concTomType(( TomTypeList)tom_get_tail_TomTypeList(l1),l2));    }   }  public  TomTypeList tom_get_slice_concTomType( TomTypeList begin,  TomTypeList end) {     TomTypeList result = ( TomTypeList)tom_make_empty_concTomType();     while(!tom_terms_equal_TomTypeList(begin,end)) {       result = ( TomTypeList)tom_make_insert_concTomType(( TomType)tom_get_head_TomTypeList(begin),result);       begin = ( TomTypeList)tom_get_tail_TomTypeList(begin);      }     result = ( TomTypeList)tom_reverse_concTomType(result);     return result;   } public boolean tom_is_fun_sym_emptyTomTypeList( TomTypeList t) { return  (t!= null) && t.isEmpty(); }public  TomTypeList tom_make_emptyTomTypeList() { return getTomSignatureFactory().makeTomTypeList(); }public boolean tom_is_fun_sym_manyTomTypeList( TomTypeList t) { return  (t!= null) && t.isMany(); }public  TomTypeList tom_make_manyTomTypeList( TomType e,  TomTypeList l) { return getTomSignatureFactory().makeTomTypeList(e,l); }public  TomType tom_get_slot_manyTomTypeList_head( TomTypeList t) { return  t.getHead(); }public  TomTypeList tom_get_slot_manyTomTypeList_tail( TomTypeList t) { return  t.getTail(); }public Object tom_get_fun_sym_OptionList( OptionList t) { return null; }public boolean tom_cmp_fun_sym_OptionList(Object s1, Object s2) { return  false; }public boolean tom_terms_equal_OptionList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_OptionList( OptionList l) { return l.getHead(); }public  OptionList tom_get_tail_OptionList( OptionList l) { return l.getTail(); }public boolean tom_is_empty_OptionList( OptionList l) { return l.isEmpty(); }public boolean tom_is_fun_sym_concOption( OptionList t) { return (t!= null) && t.isSortOptionList(); }public Object tom_make_empty_concOption() { return getTomSignatureFactory().makeOptionList(); }public  OptionList tom_make_insert_concOption( Option e,  OptionList l) { return getTomSignatureFactory().makeOptionList(e,l); } public  OptionList tom_reverse_concOption( OptionList l) {     OptionList result = ( OptionList)tom_make_empty_concOption();     while(!tom_is_empty_OptionList(l) ) {       result = ( OptionList)tom_make_insert_concOption(( Option)tom_get_head_OptionList(l),result);       l = ( OptionList)tom_get_tail_OptionList(l);     }     return result;   }  public  OptionList tom_insert_list_concOption( OptionList l1,  OptionList l2) {    if(tom_is_empty_OptionList(l1)) {     return l2;    } else if(tom_is_empty_OptionList(l2)) {     return l1;    } else if(tom_is_empty_OptionList(( OptionList)tom_get_tail_OptionList(l1))) {     return ( OptionList)tom_make_insert_concOption(( Option)tom_get_head_OptionList(l1),l2);    } else {      return ( OptionList)tom_make_insert_concOption(( Option)tom_get_head_OptionList(l1),tom_insert_list_concOption(( OptionList)tom_get_tail_OptionList(l1),l2));    }   }  public  OptionList tom_get_slice_concOption( OptionList begin,  OptionList end) {     OptionList result = ( OptionList)tom_make_empty_concOption();     while(!tom_terms_equal_OptionList(begin,end)) {       result = ( OptionList)tom_make_insert_concOption(( Option)tom_get_head_OptionList(begin),result);       begin = ( OptionList)tom_get_tail_OptionList(begin);      }     result = ( OptionList)tom_reverse_concOption(result);     return result;   } public boolean tom_is_fun_sym_emptyOptionList( OptionList t) { return  (t!= null) && t.isEmpty(); }public  OptionList tom_make_emptyOptionList() { return getTomSignatureFactory().makeOptionList(); }public boolean tom_is_fun_sym_manyOptionList( OptionList t) { return  (t!= null) && t.isMany(); }public  OptionList tom_make_manyOptionList( Option e,  OptionList l) { return getTomSignatureFactory().makeOptionList(e,l); }public  Option tom_get_slot_manyOptionList_head( OptionList t) { return  t.getHead(); }public  OptionList tom_get_slot_manyOptionList_tail( OptionList t) { return  t.getTail(); }public Object tom_get_fun_sym_InstructionList( InstructionList t) { return null; }public boolean tom_cmp_fun_sym_InstructionList(Object s1, Object s2) { return  false; }public boolean tom_terms_equal_InstructionList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_InstructionList( InstructionList l) { return l.getHead(); }public  InstructionList tom_get_tail_InstructionList( InstructionList l) { return l.getTail(); }public boolean tom_is_empty_InstructionList( InstructionList l) { return l.isEmpty(); }public boolean tom_is_fun_sym_concInstruction( InstructionList t) { return (t!= null) && t.isSortInstructionList(); }public Object tom_make_empty_concInstruction() { return getTomSignatureFactory().makeInstructionList(); }public  InstructionList tom_make_insert_concInstruction( Instruction e,  InstructionList l) { return getTomSignatureFactory().makeInstructionList(e,l); } public  InstructionList tom_reverse_concInstruction( InstructionList l) {     InstructionList result = ( InstructionList)tom_make_empty_concInstruction();     while(!tom_is_empty_InstructionList(l) ) {       result = ( InstructionList)tom_make_insert_concInstruction(( Instruction)tom_get_head_InstructionList(l),result);       l = ( InstructionList)tom_get_tail_InstructionList(l);     }     return result;   }  public  InstructionList tom_insert_list_concInstruction( InstructionList l1,  InstructionList l2) {    if(tom_is_empty_InstructionList(l1)) {     return l2;    } else if(tom_is_empty_InstructionList(l2)) {     return l1;    } else if(tom_is_empty_InstructionList(( InstructionList)tom_get_tail_InstructionList(l1))) {     return ( InstructionList)tom_make_insert_concInstruction(( Instruction)tom_get_head_InstructionList(l1),l2);    } else {      return ( InstructionList)tom_make_insert_concInstruction(( Instruction)tom_get_head_InstructionList(l1),tom_insert_list_concInstruction(( InstructionList)tom_get_tail_InstructionList(l1),l2));    }   }  public  InstructionList tom_get_slice_concInstruction( InstructionList begin,  InstructionList end) {     InstructionList result = ( InstructionList)tom_make_empty_concInstruction();     while(!tom_terms_equal_InstructionList(begin,end)) {       result = ( InstructionList)tom_make_insert_concInstruction(( Instruction)tom_get_head_InstructionList(begin),result);       begin = ( InstructionList)tom_get_tail_InstructionList(begin);      }     result = ( InstructionList)tom_reverse_concInstruction(result);     return result;   } public boolean tom_is_fun_sym_emptyInstructionList( InstructionList t) { return  (t!= null) && t.isEmpty(); }public  InstructionList tom_make_emptyInstructionList() { return getTomSignatureFactory().makeInstructionList(); }public boolean tom_is_fun_sym_manyInstructionList( InstructionList t) { return  (t!= null) && t.isMany(); }public  InstructionList tom_make_manyInstructionList( Instruction e,  InstructionList l) { return getTomSignatureFactory().makeInstructionList(e,l); }public  Instruction tom_get_slot_manyInstructionList_head( InstructionList t) { return  t.getHead(); }public  InstructionList tom_get_slot_manyInstructionList_tail( InstructionList t) { return  t.getTail(); }public Object tom_get_fun_sym_SlotList( SlotList t) { return null; }public boolean tom_cmp_fun_sym_SlotList(Object s1, Object s2) { return  false; }public boolean tom_terms_equal_SlotList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_SlotList( SlotList l) { return l.getHead(); }public  SlotList tom_get_tail_SlotList( SlotList l) { return l.getTail(); }public boolean tom_is_empty_SlotList( SlotList l) { return l.isEmpty(); }public boolean tom_is_fun_sym_concPairNameDecl( SlotList t) { return (t!= null) && t.isSortSlotList(); }public Object tom_make_empty_concPairNameDecl() { return getTomSignatureFactory().makeSlotList(); }public  SlotList tom_make_insert_concPairNameDecl( PairNameDecl e,  SlotList l) { return getTomSignatureFactory().makeSlotList(e,l); } public  SlotList tom_reverse_concPairNameDecl( SlotList l) {     SlotList result = ( SlotList)tom_make_empty_concPairNameDecl();     while(!tom_is_empty_SlotList(l) ) {       result = ( SlotList)tom_make_insert_concPairNameDecl(( PairNameDecl)tom_get_head_SlotList(l),result);       l = ( SlotList)tom_get_tail_SlotList(l);     }     return result;   }  public  SlotList tom_insert_list_concPairNameDecl( SlotList l1,  SlotList l2) {    if(tom_is_empty_SlotList(l1)) {     return l2;    } else if(tom_is_empty_SlotList(l2)) {     return l1;    } else if(tom_is_empty_SlotList(( SlotList)tom_get_tail_SlotList(l1))) {     return ( SlotList)tom_make_insert_concPairNameDecl(( PairNameDecl)tom_get_head_SlotList(l1),l2);    } else {      return ( SlotList)tom_make_insert_concPairNameDecl(( PairNameDecl)tom_get_head_SlotList(l1),tom_insert_list_concPairNameDecl(( SlotList)tom_get_tail_SlotList(l1),l2));    }   }  public  SlotList tom_get_slice_concPairNameDecl( SlotList begin,  SlotList end) {     SlotList result = ( SlotList)tom_make_empty_concPairNameDecl();     while(!tom_terms_equal_SlotList(begin,end)) {       result = ( SlotList)tom_make_insert_concPairNameDecl(( PairNameDecl)tom_get_head_SlotList(begin),result);       begin = ( SlotList)tom_get_tail_SlotList(begin);      }     result = ( SlotList)tom_reverse_concPairNameDecl(result);     return result;   } public boolean tom_is_fun_sym_emptySlotList( SlotList t) { return  (t!= null) && t.isEmpty(); }public  SlotList tom_make_emptySlotList() { return getTomSignatureFactory().makeSlotList(); }public boolean tom_is_fun_sym_manySlotList( SlotList t) { return  (t!= null) && t.isMany(); }public  SlotList tom_make_manySlotList( PairNameDecl e,  SlotList l) { return getTomSignatureFactory().makeSlotList(e,l); }public  PairNameDecl tom_get_slot_manySlotList_head( SlotList t) { return  t.getHead(); }public  SlotList tom_get_slot_manySlotList_tail( SlotList t) { return  t.getTail(); }public Object tom_get_fun_sym_TomEntryList( TomEntryList t) { return null; }public boolean tom_cmp_fun_sym_TomEntryList(Object s1, Object s2) { return  false; }public boolean tom_terms_equal_TomEntryList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_TomEntryList( TomEntryList l) { return l.getHead(); }public  TomEntryList tom_get_tail_TomEntryList( TomEntryList l) { return l.getTail(); }public boolean tom_is_empty_TomEntryList( TomEntryList l) { return l.isEmpty(); }public boolean tom_is_fun_sym_concTomEntry( TomEntryList t) { return (t!= null) && t.isSortTomEntryList(); }public Object tom_make_empty_concTomEntry() { return getTomSignatureFactory().makeTomEntryList(); }public  TomEntryList tom_make_insert_concTomEntry( TomEntry e,  TomEntryList l) { return getTomSignatureFactory().makeTomEntryList(e,l); } public  TomEntryList tom_reverse_concTomEntry( TomEntryList l) {     TomEntryList result = ( TomEntryList)tom_make_empty_concTomEntry();     while(!tom_is_empty_TomEntryList(l) ) {       result = ( TomEntryList)tom_make_insert_concTomEntry(( TomEntry)tom_get_head_TomEntryList(l),result);       l = ( TomEntryList)tom_get_tail_TomEntryList(l);     }     return result;   }  public  TomEntryList tom_insert_list_concTomEntry( TomEntryList l1,  TomEntryList l2) {    if(tom_is_empty_TomEntryList(l1)) {     return l2;    } else if(tom_is_empty_TomEntryList(l2)) {     return l1;    } else if(tom_is_empty_TomEntryList(( TomEntryList)tom_get_tail_TomEntryList(l1))) {     return ( TomEntryList)tom_make_insert_concTomEntry(( TomEntry)tom_get_head_TomEntryList(l1),l2);    } else {      return ( TomEntryList)tom_make_insert_concTomEntry(( TomEntry)tom_get_head_TomEntryList(l1),tom_insert_list_concTomEntry(( TomEntryList)tom_get_tail_TomEntryList(l1),l2));    }   }  public  TomEntryList tom_get_slice_concTomEntry( TomEntryList begin,  TomEntryList end) {     TomEntryList result = ( TomEntryList)tom_make_empty_concTomEntry();     while(!tom_terms_equal_TomEntryList(begin,end)) {       result = ( TomEntryList)tom_make_insert_concTomEntry(( TomEntry)tom_get_head_TomEntryList(begin),result);       begin = ( TomEntryList)tom_get_tail_TomEntryList(begin);      }     result = ( TomEntryList)tom_reverse_concTomEntry(result);     return result;   } public boolean tom_is_fun_sym_emptyTomEntryList( TomEntryList t) { return  (t!= null) && t.isEmpty(); }public  TomEntryList tom_make_emptyTomEntryList() { return getTomSignatureFactory().makeTomEntryList(); }public boolean tom_is_fun_sym_manyTomEntryList( TomEntryList t) { return  (t!= null) && t.isMany(); }public  TomEntryList tom_make_manyTomEntryList( TomEntry e,  TomEntryList l) { return getTomSignatureFactory().makeTomEntryList(e,l); }public  TomEntry tom_get_slot_manyTomEntryList_head( TomEntryList t) { return  t.getHead(); }public  TomEntryList tom_get_slot_manyTomEntryList_tail( TomEntryList t) { return  t.getTail(); }public Object tom_get_fun_sym_TomErrorList( TomErrorList t) { return null; }public boolean tom_cmp_fun_sym_TomErrorList(Object s1, Object s2) { return  false; }public boolean tom_terms_equal_TomErrorList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_TomErrorList( TomErrorList l) { return l.getHead(); }public  TomErrorList tom_get_tail_TomErrorList( TomErrorList l) { return l.getTail(); }public boolean tom_is_empty_TomErrorList( TomErrorList l) { return l.isEmpty(); }public boolean tom_is_fun_sym_concTomError( TomErrorList t) { return (t!= null) && t.isSortTomErrorList(); }public Object tom_make_empty_concTomError() { return getTomSignatureFactory().makeTomErrorList(); }public  TomErrorList tom_make_insert_concTomError( TomError e,  TomErrorList l) { return getTomSignatureFactory().makeTomErrorList(e,l); } public  TomErrorList tom_reverse_concTomError( TomErrorList l) {     TomErrorList result = ( TomErrorList)tom_make_empty_concTomError();     while(!tom_is_empty_TomErrorList(l) ) {       result = ( TomErrorList)tom_make_insert_concTomError(( TomError)tom_get_head_TomErrorList(l),result);       l = ( TomErrorList)tom_get_tail_TomErrorList(l);     }     return result;   }  public  TomErrorList tom_insert_list_concTomError( TomErrorList l1,  TomErrorList l2) {    if(tom_is_empty_TomErrorList(l1)) {     return l2;    } else if(tom_is_empty_TomErrorList(l2)) {     return l1;    } else if(tom_is_empty_TomErrorList(( TomErrorList)tom_get_tail_TomErrorList(l1))) {     return ( TomErrorList)tom_make_insert_concTomError(( TomError)tom_get_head_TomErrorList(l1),l2);    } else {      return ( TomErrorList)tom_make_insert_concTomError(( TomError)tom_get_head_TomErrorList(l1),tom_insert_list_concTomError(( TomErrorList)tom_get_tail_TomErrorList(l1),l2));    }   }  public  TomErrorList tom_get_slice_concTomError( TomErrorList begin,  TomErrorList end) {     TomErrorList result = ( TomErrorList)tom_make_empty_concTomError();     while(!tom_terms_equal_TomErrorList(begin,end)) {       result = ( TomErrorList)tom_make_insert_concTomError(( TomError)tom_get_head_TomErrorList(begin),result);       begin = ( TomErrorList)tom_get_tail_TomErrorList(begin);      }     result = ( TomErrorList)tom_reverse_concTomError(result);     return result;   } public boolean tom_is_fun_sym_emptyTomErrorList( TomErrorList t) { return  (t!= null) && t.isEmpty(); }public  TomErrorList tom_make_emptyTomErrorList() { return getTomSignatureFactory().makeTomErrorList(); }public boolean tom_is_fun_sym_manyTomErrorList( TomErrorList t) { return  (t!= null) && t.isMany(); }public  TomErrorList tom_make_manyTomErrorList( TomError e,  TomErrorList l) { return getTomSignatureFactory().makeTomErrorList(e,l); }public  TomError tom_get_slot_manyTomErrorList_head( TomErrorList t) { return  t.getHead(); }public  TomErrorList tom_get_slot_manyTomErrorList_tail( TomErrorList t) { return  t.getTail(); }public Object tom_get_fun_sym_SymbolList( SymbolList t) { return null; }public boolean tom_cmp_fun_sym_SymbolList(Object s1, Object s2) { return  false; }public boolean tom_terms_equal_SymbolList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_SymbolList( SymbolList l) { return l.getHead(); }public  SymbolList tom_get_tail_SymbolList( SymbolList l) { return l.getTail(); }public boolean tom_is_empty_SymbolList( SymbolList l) { return l.isEmpty(); }public boolean tom_is_fun_sym_concTomSymbol( SymbolList t) { return (t!= null) && t.isSortSymbolList(); }public Object tom_make_empty_concTomSymbol() { return getTomSignatureFactory().makeSymbolList(); }public  SymbolList tom_make_insert_concTomSymbol( TomSymbol e,  SymbolList l) { return getTomSignatureFactory().makeSymbolList(e,l); } public  SymbolList tom_reverse_concTomSymbol( SymbolList l) {     SymbolList result = ( SymbolList)tom_make_empty_concTomSymbol();     while(!tom_is_empty_SymbolList(l) ) {       result = ( SymbolList)tom_make_insert_concTomSymbol(( TomSymbol)tom_get_head_SymbolList(l),result);       l = ( SymbolList)tom_get_tail_SymbolList(l);     }     return result;   }  public  SymbolList tom_insert_list_concTomSymbol( SymbolList l1,  SymbolList l2) {    if(tom_is_empty_SymbolList(l1)) {     return l2;    } else if(tom_is_empty_SymbolList(l2)) {     return l1;    } else if(tom_is_empty_SymbolList(( SymbolList)tom_get_tail_SymbolList(l1))) {     return ( SymbolList)tom_make_insert_concTomSymbol(( TomSymbol)tom_get_head_SymbolList(l1),l2);    } else {      return ( SymbolList)tom_make_insert_concTomSymbol(( TomSymbol)tom_get_head_SymbolList(l1),tom_insert_list_concTomSymbol(( SymbolList)tom_get_tail_SymbolList(l1),l2));    }   }  public  SymbolList tom_get_slice_concTomSymbol( SymbolList begin,  SymbolList end) {     SymbolList result = ( SymbolList)tom_make_empty_concTomSymbol();     while(!tom_terms_equal_SymbolList(begin,end)) {       result = ( SymbolList)tom_make_insert_concTomSymbol(( TomSymbol)tom_get_head_SymbolList(begin),result);       begin = ( SymbolList)tom_get_tail_SymbolList(begin);      }     result = ( SymbolList)tom_reverse_concTomSymbol(result);     return result;   } public boolean tom_is_fun_sym_emptySymbolList( SymbolList t) { return  (t!= null) && t.isEmpty(); }public  SymbolList tom_make_emptySymbolList() { return getTomSignatureFactory().makeSymbolList(); }public boolean tom_is_fun_sym_manySymbolList( SymbolList t) { return  (t!= null) && t.isMany(); }public  SymbolList tom_make_manySymbolList( TomSymbol e,  SymbolList l) { return getTomSignatureFactory().makeSymbolList(e,l); }public  TomSymbol tom_get_slot_manySymbolList_head( SymbolList t) { return  t.getHead(); }public  SymbolList tom_get_slot_manySymbolList_tail( SymbolList t) { return  t.getTail(); }public Object tom_get_fun_sym_NameList( NameList t) { return null; }public boolean tom_cmp_fun_sym_NameList(Object s1, Object s2) { return  false; }public boolean tom_terms_equal_NameList(Object t1, Object t2) { return t1.equals(t2); }public Object tom_get_head_NameList( NameList l) { return l.getHead(); }public  NameList tom_get_tail_NameList( NameList l) { return l.getTail(); }public boolean tom_is_empty_NameList( NameList l) { return l.isEmpty(); }public boolean tom_is_fun_sym_concTomName( NameList t) { return (t!= null) && t.isSortNameList(); }public Object tom_make_empty_concTomName() { return getTomSignatureFactory().makeNameList(); }public  NameList tom_make_insert_concTomName( TomName e,  NameList l) { return getTomSignatureFactory().makeNameList(e,l); } public  NameList tom_reverse_concTomName( NameList l) {     NameList result = ( NameList)tom_make_empty_concTomName();     while(!tom_is_empty_NameList(l) ) {       result = ( NameList)tom_make_insert_concTomName(( TomName)tom_get_head_NameList(l),result);       l = ( NameList)tom_get_tail_NameList(l);     }     return result;   }  public  NameList tom_insert_list_concTomName( NameList l1,  NameList l2) {    if(tom_is_empty_NameList(l1)) {     return l2;    } else if(tom_is_empty_NameList(l2)) {     return l1;    } else if(tom_is_empty_NameList(( NameList)tom_get_tail_NameList(l1))) {     return ( NameList)tom_make_insert_concTomName(( TomName)tom_get_head_NameList(l1),l2);    } else {      return ( NameList)tom_make_insert_concTomName(( TomName)tom_get_head_NameList(l1),tom_insert_list_concTomName(( NameList)tom_get_tail_NameList(l1),l2));    }   }  public  NameList tom_get_slice_concTomName( NameList begin,  NameList end) {     NameList result = ( NameList)tom_make_empty_concTomName();     while(!tom_terms_equal_NameList(begin,end)) {       result = ( NameList)tom_make_insert_concTomName(( TomName)tom_get_head_NameList(begin),result);       begin = ( NameList)tom_get_tail_NameList(begin);      }     result = ( NameList)tom_reverse_concTomName(result);     return result;   } public boolean tom_is_fun_sym_emptyNameList( NameList t) { return  (t!= null) && t.isEmpty(); }public  NameList tom_make_emptyNameList() { return getTomSignatureFactory().makeNameList(); }public boolean tom_is_fun_sym_manyNameList( NameList t) { return  (t!= null) && t.isMany(); }public  NameList tom_make_manyNameList( TomName e,  NameList l) { return getTomSignatureFactory().makeNameList(e,l); }public  TomName tom_get_slot_manyNameList_head( NameList t) { return  t.getHead(); }public  NameList tom_get_slot_manyNameList_tail( NameList t) { return  t.getTail(); }  
// ------------------------------------------------------------

  protected String getTomType(TomType type) {
     {  TomType tom_match1_1 = null; tom_match1_1 = ( TomType) type;_match1_pattern1: {  String s = null; if(tom_is_fun_sym_ASTTomType(tom_match1_1) ||  false ) {  String tom_match1_1_1 = null; tom_match1_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match1_1); s = ( String) tom_match1_1_1;
 return s; }}_match1_pattern2: {  String s = null; if(tom_is_fun_sym_TomTypeAlone(tom_match1_1) ||  false ) {  String tom_match1_1_1 = null; tom_match1_1_1 = ( String) tom_get_slot_TomTypeAlone_string(tom_match1_1); s = ( String) tom_match1_1_1;
 return s; }}_match1_pattern3: {  String s = null; if(tom_is_fun_sym_Type(tom_match1_1) ||  false ) {  TomType tom_match1_1_1 = null; tom_match1_1_1 = ( TomType) tom_get_slot_Type_tomType(tom_match1_1); if(tom_is_fun_sym_ASTTomType(tom_match1_1_1) ||  false ) {  String tom_match1_1_1_1 = null; tom_match1_1_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match1_1_1); s = ( String) tom_match1_1_1_1;
 return s; } }}_match1_pattern4: { if(tom_is_fun_sym_EmptyType(tom_match1_1) ||  false ) {
 return null; }}_match1_pattern5: {
 
        System.out.println("getTomType error on term: " + type);
        throw new TomRuntimeException(new Throwable("getTomType error on term: " + type));
      } }
 
  }

  protected String getTLType(TomType type) {
    return getTLCode(type.getTlType());
  }

  protected String getTLCode(TomType type) {
     {  TomType tom_match2_1 = null; tom_match2_1 = ( TomType) type;_match2_pattern1: {  String tlType = null; if(tom_is_fun_sym_TLType(tom_match2_1) ||  false ) {  TargetLanguage tom_match2_1_1 = null; tom_match2_1_1 = ( TargetLanguage) tom_get_slot_TLType_tl(tom_match2_1); if(tom_is_fun_sym_TL(tom_match2_1_1) ||  false ) {  String tom_match2_1_1_1 = null; tom_match2_1_1_1 = ( String) tom_get_slot_TL_code(tom_match2_1_1); tlType = ( String) tom_match2_1_1_1;
  return tlType;  } }}_match2_pattern2: {  String tlType = null; if(tom_is_fun_sym_TLType(tom_match2_1) ||  false ) {  TargetLanguage tom_match2_1_1 = null; tom_match2_1_1 = ( TargetLanguage) tom_get_slot_TLType_tl(tom_match2_1); if(tom_is_fun_sym_ITL(tom_match2_1_1) ||  false ) {  String tom_match2_1_1_1 = null; tom_match2_1_1_1 = ( String) tom_get_slot_ITL_code(tom_match2_1_1); tlType = ( String) tom_match2_1_1_1;
  return tlType;  } }}_match2_pattern3: {
 
        System.out.println("getTLCode error on term: " + type);
        throw new TomRuntimeException(new Throwable("getTLCode error on term: " + type));
      } }
 
  }

  protected TomSymbol getSymbol(String tomName) {
    return symbolTable().getSymbol(tomName);
  }

  protected TomSymbol getSymbol(TomType tomType) {
    SymbolList list = symbolTable().getSymbol(tomType);
    SymbolList filteredList = tom_make_emptySymbolList() ;
    // Not necessary since checker ensure the uniqueness of the symbol
   while(!list.isEmpty()) {
      TomSymbol head = list.getHead();
      if(isArrayOperator(head) || isListOperator(head)) {
        filteredList = tom_make_manySymbolList(head,filteredList) ;
      }
      list = list.getTail();
    }
		return filteredList.getHead();
		/*
    if(filteredList.isEmpty()) {
        // TODO
      System.out.println("getSymbol: symbol not found: " + tomType);
    } else if(!filteredList.getTail().isEmpty()) {
        // TODO
      System.out.println("getSymbol: ambiguities: " + filteredList);
    } else {
      return filteredList.getHead();
    }
    return null;*/
  }
  
  protected TomType getSymbolCodomain(TomSymbol symbol) {
    if(symbol!=null) {
      return symbol.getTypesToType().getCodomain();
    } else {
        //System.out.println("getSymbolCodomain: symbol = " + symbol);
      return tom_make_EmptyType() ;
    }
  }   

  protected TomTypeList getSymbolDomain(TomSymbol symbol) {
    if(symbol!=null) {
      return symbol.getTypesToType().getDomain();
    } else {
        //System.out.println("getSymbolDomain: symbol = " + symbol);
      return tsf().makeTomTypeList();
    }
  }

  protected String getSymbolCode(TomSymbol symbol) {
      //%variable
     {  TomSymbol tom_match3_1 = null; tom_match3_1 = ( TomSymbol) symbol;_match3_pattern1: {  String tlCode = null; if(tom_is_fun_sym_Symbol(tom_match3_1) ||  false ) {  TargetLanguage tom_match3_1_5 = null; tom_match3_1_5 = ( TargetLanguage) tom_get_slot_Symbol_tlCode(tom_match3_1); if(tom_is_fun_sym_TL(tom_match3_1_5) ||  false ) {  String tom_match3_1_5_1 = null; tom_match3_1_5_1 = ( String) tom_get_slot_TL_code(tom_match3_1_5); tlCode = ( String) tom_match3_1_5_1;
  return tlCode;  } }}_match3_pattern2: {  String tlCode = null; if(tom_is_fun_sym_Symbol(tom_match3_1) ||  false ) {  TargetLanguage tom_match3_1_5 = null; tom_match3_1_5 = ( TargetLanguage) tom_get_slot_Symbol_tlCode(tom_match3_1); if(tom_is_fun_sym_ITL(tom_match3_1_5) ||  false ) {  String tom_match3_1_5_1 = null; tom_match3_1_5_1 = ( String) tom_get_slot_ITL_code(tom_match3_1_5); tlCode = ( String) tom_match3_1_5_1;
  return tlCode;  } }}_match3_pattern3: {
 
        System.out.println("getSymbolCode error on term: " + symbol);
		throw new TomRuntimeException(new Throwable("getSymbolCode error on term: " + symbol));
      } }
 
  }

  protected TomType getTermType(TomTerm t){
      //%variable
     {  TomTerm tom_match4_1 = null; tom_match4_1 = ( TomTerm) t;_match4_pattern1: {  OptionList option = null;  TomName tom_absvar1 = null;  TomList subterms = null; if(tom_is_fun_sym_Appl(tom_match4_1) ||  false ) {  OptionList tom_match4_1_1 = null;  NameList tom_match4_1_2 = null;  TomList tom_match4_1_3 = null; tom_match4_1_1 = ( OptionList) tom_get_slot_Appl_option(tom_match4_1); tom_match4_1_2 = ( NameList) tom_get_slot_Appl_nameList(tom_match4_1); tom_match4_1_3 = ( TomList) tom_get_slot_Appl_args(tom_match4_1); option = ( OptionList) tom_match4_1_1; if(tom_is_fun_sym_concTomName(tom_match4_1_2) ||  false ) {  NameList tom_match4_1_2_list1 = null; tom_match4_1_2_list1 = ( NameList) tom_match4_1_2; if(!(tom_is_empty_NameList(tom_match4_1_2_list1))) { tom_absvar1 = ( TomName) tom_get_head_NameList(tom_match4_1_2_list1); tom_match4_1_2_list1 = ( NameList) tom_get_tail_NameList(tom_match4_1_2_list1); subterms = ( TomList) tom_match4_1_3; {  TomName tom_match5_1 = null; tom_match5_1 = ( TomName) tom_absvar1;_match5_pattern1: {  String tomName = null; if(tom_is_fun_sym_Name(tom_match5_1) ||  false ) {  String tom_match5_1_1 = null; tom_match5_1_1 = ( String) tom_get_slot_Name_string(tom_match5_1); tomName = ( String) tom_match5_1_1;
 
        TomSymbol tomSymbol = symbolTable().getSymbol(tomName);
        return tomSymbol.getTypesToType().getCodomain();
       }} } } } }}_match4_pattern2: {  TomType type = null; if(tom_is_fun_sym_Variable(tom_match4_1) ||  false ) {  TomType tom_match4_1_3 = null; tom_match4_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match4_1); type = ( TomType) tom_match4_1_3;




  return type;  }}_match4_pattern3: {  TomType type = null; if(tom_is_fun_sym_VariableStar(tom_match4_1) ||  false ) {  TomType tom_match4_1_3 = null; tom_match4_1_3 = ( TomType) tom_get_slot_VariableStar_astType(tom_match4_1); type = ( TomType) tom_match4_1_3;  return type;  }}_match4_pattern4: {  TomType type = null; if(tom_is_fun_sym_UnamedVariable(tom_match4_1) ||  false ) {  TomType tom_match4_1_2 = null; tom_match4_1_2 = ( TomType) tom_get_slot_UnamedVariable_astType(tom_match4_1); type = ( TomType) tom_match4_1_2;  return type;  }}_match4_pattern5: {  TomType type = null; if(tom_is_fun_sym_UnamedVariableStar(tom_match4_1) ||  false ) {  TomType tom_match4_1_2 = null; tom_match4_1_2 = ( TomType) tom_get_slot_UnamedVariableStar_astType(tom_match4_1); type = ( TomType) tom_match4_1_2;  return type;  }}_match4_pattern6: {

 
        System.out.println("getTermType error on term: " + t);
        throw new TomRuntimeException(new Throwable("getTermType error on term: " + t));
      } }
 
  }

  private HashMap numberListToIdentifierMap = new HashMap();

  private String elementToIdentifier(TomNumber subject) {
     {  TomNumber tom_match6_1 = null; tom_match6_1 = ( TomNumber) subject;_match6_pattern1: {  int i; if(tom_is_fun_sym_Begin(tom_match6_1) ||  false ) {  TomNumber tom_match6_1_1 = null; tom_match6_1_1 = ( TomNumber) tom_get_slot_Begin_number(tom_match6_1); if(tom_is_fun_sym_Number(tom_match6_1_1) ||  false ) {  int tom_match6_1_1_1; tom_match6_1_1_1 = ( int) tom_get_slot_Number_integer(tom_match6_1_1); i = ( int) tom_match6_1_1_1;
  return "begin" + i;  } }}_match6_pattern2: {  int i; if(tom_is_fun_sym_End(tom_match6_1) ||  false ) {  TomNumber tom_match6_1_1 = null; tom_match6_1_1 = ( TomNumber) tom_get_slot_End_number(tom_match6_1); if(tom_is_fun_sym_Number(tom_match6_1_1) ||  false ) {  int tom_match6_1_1_1; tom_match6_1_1_1 = ( int) tom_get_slot_Number_integer(tom_match6_1_1); i = ( int) tom_match6_1_1_1;
  return "end" + i;  } }}_match6_pattern3: {  int i; if(tom_is_fun_sym_MatchNumber(tom_match6_1) ||  false ) {  TomNumber tom_match6_1_1 = null; tom_match6_1_1 = ( TomNumber) tom_get_slot_MatchNumber_number(tom_match6_1); if(tom_is_fun_sym_Number(tom_match6_1_1) ||  false ) {  int tom_match6_1_1_1; tom_match6_1_1_1 = ( int) tom_get_slot_Number_integer(tom_match6_1_1); i = ( int) tom_match6_1_1_1;
  return "match" + i;  } }}_match6_pattern4: {  int i; if(tom_is_fun_sym_PatternNumber(tom_match6_1) ||  false ) {  TomNumber tom_match6_1_1 = null; tom_match6_1_1 = ( TomNumber) tom_get_slot_PatternNumber_number(tom_match6_1); if(tom_is_fun_sym_Number(tom_match6_1_1) ||  false ) {  int tom_match6_1_1_1; tom_match6_1_1_1 = ( int) tom_get_slot_Number_integer(tom_match6_1_1); i = ( int) tom_match6_1_1_1;
  return "pattern" + i;  } }}_match6_pattern5: {  int i; if(tom_is_fun_sym_ListNumber(tom_match6_1) ||  false ) {  TomNumber tom_match6_1_1 = null; tom_match6_1_1 = ( TomNumber) tom_get_slot_ListNumber_number(tom_match6_1); if(tom_is_fun_sym_Number(tom_match6_1_1) ||  false ) {  int tom_match6_1_1_1; tom_match6_1_1_1 = ( int) tom_get_slot_Number_integer(tom_match6_1_1); i = ( int) tom_match6_1_1_1;
  return "list" + i;  } }}_match6_pattern6: {  int i; if(tom_is_fun_sym_IndexNumber(tom_match6_1) ||  false ) {  TomNumber tom_match6_1_1 = null; tom_match6_1_1 = ( TomNumber) tom_get_slot_IndexNumber_number(tom_match6_1); if(tom_is_fun_sym_Number(tom_match6_1_1) ||  false ) {  int tom_match6_1_1_1; tom_match6_1_1_1 = ( int) tom_get_slot_Number_integer(tom_match6_1_1); i = ( int) tom_match6_1_1_1;
  return "index" + i;  } }}_match6_pattern7: {  int i; if(tom_is_fun_sym_AbsVar(tom_match6_1) ||  false ) {  TomNumber tom_match6_1_1 = null; tom_match6_1_1 = ( TomNumber) tom_get_slot_AbsVar_number(tom_match6_1); if(tom_is_fun_sym_Number(tom_match6_1_1) ||  false ) {  int tom_match6_1_1_1; tom_match6_1_1_1 = ( int) tom_get_slot_Number_integer(tom_match6_1_1); i = ( int) tom_match6_1_1_1;
  return "absvar" + i;  } }}_match6_pattern8: {  String name = null; if(tom_is_fun_sym_RenamedVar(tom_match6_1) ||  false ) {  TomName tom_match6_1_1 = null; tom_match6_1_1 = ( TomName) tom_get_slot_RenamedVar_astName(tom_match6_1); if(tom_is_fun_sym_Name(tom_match6_1_1) ||  false ) {  String tom_match6_1_1_1 = null; tom_match6_1_1_1 = ( String) tom_get_slot_Name_string(tom_match6_1_1); name = ( String) tom_match6_1_1_1;
  return "renamedvar_" + name;  } }}_match6_pattern9: { if(tom_is_fun_sym_RuleVar(tom_match6_1) ||  false ) {
  return "rulevar";  }}_match6_pattern10: {  int i; if(tom_is_fun_sym_Number(tom_match6_1) ||  false ) {  int tom_match6_1_1; tom_match6_1_1 = ( int) tom_get_slot_Number_integer(tom_match6_1); i = ( int) tom_match6_1_1;
  return "" + i;  }}_match6_pattern11: {
  return subject.toString(); } }
 
  }
  
  protected String numberListToIdentifier(TomNumberList l) {
    String res = (String)numberListToIdentifierMap.get(l);
    if(res == null) {
      TomNumberList key = l;
      StringBuffer buf = new StringBuffer(30);
      while(!l.isEmpty()) {
        TomNumber elt = l.getHead();
        buf.append("_");
        buf.append(elementToIdentifier(elt));
        l = l.getTail();
      }
      res = buf.toString();
      numberListToIdentifierMap.put(key,res);
    }
    return res;
  }

  protected boolean isListOperator(TomSymbol subject) {
    //%variable
    if(subject==null) {
      return false;
    }
     {  TomSymbol tom_match7_1 = null; tom_match7_1 = ( TomSymbol) subject;_match7_pattern1: {  OptionList optionList = null; if(tom_is_fun_sym_Symbol(tom_match7_1) ||  false ) {  OptionList tom_match7_1_4 = null; tom_match7_1_4 = ( OptionList) tom_get_slot_Symbol_option(tom_match7_1); optionList = ( OptionList) tom_match7_1_4;
 
        while(!optionList.isEmpty()) {
          Option opt = optionList.getHead();
           {  Option tom_match8_1 = null; tom_match8_1 = ( Option) opt;_match8_pattern1: { if(tom_is_fun_sym_DeclarationToOption(tom_match8_1) ||  false ) {  Declaration tom_match8_1_1 = null; tom_match8_1_1 = ( Declaration) tom_get_slot_DeclarationToOption_astDeclaration(tom_match8_1); if(tom_is_fun_sym_MakeEmptyList(tom_match8_1_1) ||  false ) {
  return true;  } }}_match8_pattern2: { if(tom_is_fun_sym_DeclarationToOption(tom_match8_1) ||  false ) {  Declaration tom_match8_1_1 = null; tom_match8_1_1 = ( Declaration) tom_get_slot_DeclarationToOption_astDeclaration(tom_match8_1); if(tom_is_fun_sym_MakeAddList(tom_match8_1_1) ||  false ) {
  return true;  } }} }
 
          optionList = optionList.getTail();
        }
        return false;
       }}_match7_pattern2: {

 
        System.out.println("isListOperator: strange case: '" + subject + "'");
        throw new TomRuntimeException(new Throwable("isListOperator: strange case: '" + subject + "'"));
      } }
 
  }

  protected boolean isArrayOperator(TomSymbol subject) {
    //%variable
    if(subject==null) {
      return false;
    }
     {  TomSymbol tom_match9_1 = null; tom_match9_1 = ( TomSymbol) subject;_match9_pattern1: {  OptionList optionList = null; if(tom_is_fun_sym_Symbol(tom_match9_1) ||  false ) {  OptionList tom_match9_1_4 = null; tom_match9_1_4 = ( OptionList) tom_get_slot_Symbol_option(tom_match9_1); optionList = ( OptionList) tom_match9_1_4;
 
        while(!optionList.isEmpty()) {
          Option opt = optionList.getHead();
           {  Option tom_match10_1 = null; tom_match10_1 = ( Option) opt;_match10_pattern1: { if(tom_is_fun_sym_DeclarationToOption(tom_match10_1) ||  false ) {  Declaration tom_match10_1_1 = null; tom_match10_1_1 = ( Declaration) tom_get_slot_DeclarationToOption_astDeclaration(tom_match10_1); if(tom_is_fun_sym_MakeEmptyArray(tom_match10_1_1) ||  false ) {
  return true;  } }}_match10_pattern2: { if(tom_is_fun_sym_DeclarationToOption(tom_match10_1) ||  false ) {  Declaration tom_match10_1_1 = null; tom_match10_1_1 = ( Declaration) tom_get_slot_DeclarationToOption_astDeclaration(tom_match10_1); if(tom_is_fun_sym_MakeAddArray(tom_match10_1_1) ||  false ) {
  return true;  } }} }
 
          optionList = optionList.getTail();
        }
        return false;
       }}_match9_pattern2: {

 
        System.out.println("isArrayOperator: strange case: '" + subject + "'");
        throw new TomRuntimeException(new Throwable("isArrayOperator: strange case: '" + subject + "'"));
      } }
 
  }

  protected boolean isStringOperator(TomSymbol subject) {
    if(subject==null) { return false; }
    TomType type = subject.getTypesToType().getCodomain();
     {  TomType tom_match11_1 = null; tom_match11_1 = ( TomType) type;_match11_pattern1: { if(tom_is_fun_sym_TomTypeAlone(tom_match11_1) ||  false ) {  String tom_match11_1_1 = null; tom_match11_1_1 = ( String) tom_get_slot_TomTypeAlone_string(tom_match11_1); if(tom_cmp_fun_sym_String(tom_get_fun_sym_String(tom_match11_1_1) , "String") ||  false ) {
 
        return true;
       } }} }
 
    return false;
  }
  
  protected TomList tomListMap(TomList subject, Replace1 replace) {
    TomList res = subject;
    try {
      if(!subject.isEmpty()) {
        TomTerm term = (TomTerm) replace.apply(subject.getHead());
        TomList list = tomListMap(subject.getTail(),replace);
        res = cons(term,list);
      }
    } catch(Exception e) {
			System.out.println("tomListMap error: " + e);
      e.printStackTrace();
	  	throw new TomRuntimeException(new Throwable("tomListMap error: " + e));
    }
    return res;
  }
  
    // ------------------------------------------------------------
  protected void collectVariable(final Collection collection, TomTerm subject) {
    Collect1 collect = new Collect1() { 
        public boolean apply(ATerm t) {
            //%variable
          if(t instanceof TomTerm) {
            TomTerm annotedVariable = null;
             {  TomTerm tom_match12_1 = null; tom_match12_1 = ( TomTerm) t;_match12_pattern1: {  OptionList optionList = null; if(tom_is_fun_sym_Variable(tom_match12_1) ||  false ) {  OptionList tom_match12_1_1 = null; tom_match12_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match12_1); optionList = ( OptionList) tom_match12_1_1;

 
                collection.add(t);
                annotedVariable = getAnnotedVariable(optionList);
                if(annotedVariable!=null) {
                  collection.add(annotedVariable);
                }
                return false;
               }}_match12_pattern2: {  OptionList optionList = null; if(tom_is_fun_sym_VariableStar(tom_match12_1) ||  false ) {  OptionList tom_match12_1_1 = null; tom_match12_1_1 = ( OptionList) tom_get_slot_VariableStar_option(tom_match12_1); optionList = ( OptionList) tom_match12_1_1;                  collection.add(t);                 annotedVariable = getAnnotedVariable(optionList);                 if(annotedVariable!=null) {                   collection.add(annotedVariable);                 }                 return false;                }}_match12_pattern3: {  OptionList optionList = null; if(tom_is_fun_sym_UnamedVariable(tom_match12_1) ||  false ) {  OptionList tom_match12_1_1 = null; tom_match12_1_1 = ( OptionList) tom_get_slot_UnamedVariable_option(tom_match12_1); optionList = ( OptionList) tom_match12_1_1;


 
                annotedVariable = getAnnotedVariable(optionList);
                if(annotedVariable!=null) {
                  collection.add(annotedVariable);
                }
                return false;
               }}_match12_pattern4: {  OptionList optionList = null; if(tom_is_fun_sym_UnamedVariableStar(tom_match12_1) ||  false ) {  OptionList tom_match12_1_1 = null; tom_match12_1_1 = ( OptionList) tom_get_slot_UnamedVariableStar_option(tom_match12_1); optionList = ( OptionList) tom_match12_1_1;                  annotedVariable = getAnnotedVariable(optionList);                 if(annotedVariable!=null) {                   collection.add(annotedVariable);                 }                 return false;                }}_match12_pattern5: {  TomList subterms = null;  OptionList optionList = null; if(tom_is_fun_sym_Appl(tom_match12_1) ||  false ) {  OptionList tom_match12_1_1 = null;  TomList tom_match12_1_3 = null; tom_match12_1_1 = ( OptionList) tom_get_slot_Appl_option(tom_match12_1); tom_match12_1_3 = ( TomList) tom_get_slot_Appl_args(tom_match12_1); optionList = ( OptionList) tom_match12_1_1; subterms = ( TomList) tom_match12_1_3;


 
                collectVariable(collection,tom_make_Tom(subterms) );
                annotedVariable = getAnnotedVariable(optionList);
                if(annotedVariable!=null) {
                  collection.add(annotedVariable);
                }
                return false;
               }}_match12_pattern6: {

  return true; } }
 
          } else {
            return true;
          }
        } // end apply
      }; // end new
    
    traversal().genericCollect(subject, collect);
  }

  protected boolean isAnnotedVariable(TomTerm t) {
     {  TomTerm tom_match13_1 = null; tom_match13_1 = ( TomTerm) t;_match13_pattern1: {  OptionList optionList = null; if(tom_is_fun_sym_Appl(tom_match13_1) ||  false ) {  OptionList tom_match13_1_1 = null; tom_match13_1_1 = ( OptionList) tom_get_slot_Appl_option(tom_match13_1); optionList = ( OptionList) tom_match13_1_1;




 
        return getAnnotedVariable(optionList)!=null;
       }}_match13_pattern2: {  OptionList optionList = null; if(tom_is_fun_sym_Variable(tom_match13_1) ||  false ) {  OptionList tom_match13_1_1 = null; tom_match13_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match13_1); optionList = ( OptionList) tom_match13_1_1;          return getAnnotedVariable(optionList)!=null;        }}_match13_pattern3: {  OptionList optionList = null; if(tom_is_fun_sym_VariableStar(tom_match13_1) ||  false ) {  OptionList tom_match13_1_1 = null; tom_match13_1_1 = ( OptionList) tom_get_slot_VariableStar_option(tom_match13_1); optionList = ( OptionList) tom_match13_1_1;          return getAnnotedVariable(optionList)!=null;        }}_match13_pattern4: {  OptionList optionList = null; if(tom_is_fun_sym_UnamedVariable(tom_match13_1) ||  false ) {  OptionList tom_match13_1_1 = null; tom_match13_1_1 = ( OptionList) tom_get_slot_UnamedVariable_option(tom_match13_1); optionList = ( OptionList) tom_match13_1_1;          return getAnnotedVariable(optionList)!=null;        }}_match13_pattern5: {  OptionList optionList = null; if(tom_is_fun_sym_UnamedVariableStar(tom_match13_1) ||  false ) {  OptionList tom_match13_1_1 = null; tom_match13_1_1 = ( OptionList) tom_get_slot_UnamedVariableStar_option(tom_match13_1); optionList = ( OptionList) tom_match13_1_1;          return getAnnotedVariable(optionList)!=null;        }} }
 
    return false;
  }
   
  protected TomTerm getAnnotedVariable(OptionList optionList) {
     {  OptionList tom_match14_1 = null; tom_match14_1 = ( OptionList) optionList;_match14_pattern1: {  Option tom_absvar2 = null; if(tom_is_fun_sym_concOption(tom_match14_1) ||  false ) {  OptionList tom_match14_1_begin1 = null;  OptionList tom_match14_1_end1 = null;  OptionList tom_match14_1_list1 = null; tom_match14_1_list1 = ( OptionList) tom_match14_1; tom_match14_1_begin1 = ( OptionList) tom_match14_1_list1; tom_match14_1_end1 = ( OptionList) tom_match14_1_list1; do { if(!(tom_is_empty_OptionList(tom_match14_1_list1))) { tom_absvar2 = ( Option) tom_get_head_OptionList(tom_match14_1_list1); tom_match14_1_list1 = ( OptionList) tom_get_tail_OptionList(tom_match14_1_list1); {  Option tom_match15_1 = null; tom_match15_1 = ( Option) tom_absvar2;_match15_pattern1: {  TomTerm var = null; if(tom_is_fun_sym_TomTermToOption(tom_match15_1) ||  false ) {  TomTerm tom_match15_1_1 = null; tom_match15_1_1 = ( TomTerm) tom_get_slot_TomTermToOption_astTerm(tom_match15_1); if(tom_is_fun_sym_Variable(tom_match15_1_1) ||  false ) { var = ( TomTerm) tom_match15_1_1;
  return var;  } }} } } if(!(tom_is_empty_OptionList(tom_match14_1_end1))) { tom_match14_1_end1 = ( OptionList) tom_get_tail_OptionList(tom_match14_1_end1); } tom_match14_1_list1 = ( OptionList) tom_match14_1_end1; } while(!(tom_is_empty_OptionList(tom_match14_1_list1))); }} }
 
    return null;
  }
  
  protected Declaration getIsFsymDecl(OptionList optionList) {
     {  OptionList tom_match16_1 = null; tom_match16_1 = ( OptionList) optionList;_match16_pattern1: {  Option tom_absvar3 = null; if(tom_is_fun_sym_concOption(tom_match16_1) ||  false ) {  OptionList tom_match16_1_begin1 = null;  OptionList tom_match16_1_end1 = null;  OptionList tom_match16_1_list1 = null; tom_match16_1_list1 = ( OptionList) tom_match16_1; tom_match16_1_begin1 = ( OptionList) tom_match16_1_list1; tom_match16_1_end1 = ( OptionList) tom_match16_1_list1; do { if(!(tom_is_empty_OptionList(tom_match16_1_list1))) { tom_absvar3 = ( Option) tom_get_head_OptionList(tom_match16_1_list1); tom_match16_1_list1 = ( OptionList) tom_get_tail_OptionList(tom_match16_1_list1); {  Option tom_match17_1 = null; tom_match17_1 = ( Option) tom_absvar3;_match17_pattern1: {  Declaration decl = null; if(tom_is_fun_sym_DeclarationToOption(tom_match17_1) ||  false ) {  Declaration tom_match17_1_1 = null; tom_match17_1_1 = ( Declaration) tom_get_slot_DeclarationToOption_astDeclaration(tom_match17_1); if(tom_is_fun_sym_IsFsymDecl(tom_match17_1_1) ||  false ) { decl = ( Declaration) tom_match17_1_1;
  return decl;  } }} } } if(!(tom_is_empty_OptionList(tom_match16_1_end1))) { tom_match16_1_end1 = ( OptionList) tom_get_tail_OptionList(tom_match16_1_end1); } tom_match16_1_list1 = ( OptionList) tom_match16_1_end1; } while(!(tom_is_empty_OptionList(tom_match16_1_list1))); }} }
 
    return null;
  }

  protected String getDebug(OptionList optionList) {
     {  OptionList tom_match18_1 = null; tom_match18_1 = ( OptionList) optionList;_match18_pattern1: {  Option tom_absvar4 = null; if(tom_is_fun_sym_concOption(tom_match18_1) ||  false ) {  OptionList tom_match18_1_begin1 = null;  OptionList tom_match18_1_end1 = null;  OptionList tom_match18_1_list1 = null; tom_match18_1_list1 = ( OptionList) tom_match18_1; tom_match18_1_begin1 = ( OptionList) tom_match18_1_list1; tom_match18_1_end1 = ( OptionList) tom_match18_1_list1; do { if(!(tom_is_empty_OptionList(tom_match18_1_list1))) { tom_absvar4 = ( Option) tom_get_head_OptionList(tom_match18_1_list1); tom_match18_1_list1 = ( OptionList) tom_get_tail_OptionList(tom_match18_1_list1); {  Option tom_match19_1 = null; tom_match19_1 = ( Option) tom_absvar4;_match19_pattern1: {  String str = null; if(tom_is_fun_sym_Debug(tom_match19_1) ||  false ) {  TomName tom_match19_1_1 = null; tom_match19_1_1 = ( TomName) tom_get_slot_Debug_astName(tom_match19_1); if(tom_is_fun_sym_Name(tom_match19_1_1) ||  false ) {  String tom_match19_1_1_1 = null; tom_match19_1_1_1 = ( String) tom_get_slot_Name_string(tom_match19_1_1); str = ( String) tom_match19_1_1_1;
  return str;  } }} } } if(!(tom_is_empty_OptionList(tom_match18_1_end1))) { tom_match18_1_end1 = ( OptionList) tom_get_tail_OptionList(tom_match18_1_end1); } tom_match18_1_list1 = ( OptionList) tom_match18_1_end1; } while(!(tom_is_empty_OptionList(tom_match18_1_list1))); }} }
 

    return null;
  }

  protected boolean hasConstructor(OptionList optionList) {
     {  OptionList tom_match20_1 = null; tom_match20_1 = ( OptionList) optionList;_match20_pattern1: {  Option tom_absvar5 = null; if(tom_is_fun_sym_concOption(tom_match20_1) ||  false ) {  OptionList tom_match20_1_begin1 = null;  OptionList tom_match20_1_end1 = null;  OptionList tom_match20_1_list1 = null; tom_match20_1_list1 = ( OptionList) tom_match20_1; tom_match20_1_begin1 = ( OptionList) tom_match20_1_list1; tom_match20_1_end1 = ( OptionList) tom_match20_1_list1; do { if(!(tom_is_empty_OptionList(tom_match20_1_list1))) { tom_absvar5 = ( Option) tom_get_head_OptionList(tom_match20_1_list1); tom_match20_1_list1 = ( OptionList) tom_get_tail_OptionList(tom_match20_1_list1); {  Option tom_match21_1 = null; tom_match21_1 = ( Option) tom_absvar5;_match21_pattern1: { if(tom_is_fun_sym_Constructor(tom_match21_1) ||  false ) {
  return true;  }} } } if(!(tom_is_empty_OptionList(tom_match20_1_end1))) { tom_match20_1_end1 = ( OptionList) tom_get_tail_OptionList(tom_match20_1_end1); } tom_match20_1_list1 = ( OptionList) tom_match20_1_end1; } while(!(tom_is_empty_OptionList(tom_match20_1_list1))); }} }
 
    return false;
  }
  
  protected boolean hasGeneratedMatch(OptionList optionList) {
     {  OptionList tom_match22_1 = null; tom_match22_1 = ( OptionList) optionList;_match22_pattern1: {  Option tom_absvar6 = null; if(tom_is_fun_sym_concOption(tom_match22_1) ||  false ) {  OptionList tom_match22_1_begin1 = null;  OptionList tom_match22_1_end1 = null;  OptionList tom_match22_1_list1 = null; tom_match22_1_list1 = ( OptionList) tom_match22_1; tom_match22_1_begin1 = ( OptionList) tom_match22_1_list1; tom_match22_1_end1 = ( OptionList) tom_match22_1_list1; do { if(!(tom_is_empty_OptionList(tom_match22_1_list1))) { tom_absvar6 = ( Option) tom_get_head_OptionList(tom_match22_1_list1); tom_match22_1_list1 = ( OptionList) tom_get_tail_OptionList(tom_match22_1_list1); {  Option tom_match23_1 = null; tom_match23_1 = ( Option) tom_absvar6;_match23_pattern1: { if(tom_is_fun_sym_GeneratedMatch(tom_match23_1) ||  false ) {
  return true;  }} } } if(!(tom_is_empty_OptionList(tom_match22_1_end1))) { tom_match22_1_end1 = ( OptionList) tom_get_tail_OptionList(tom_match22_1_end1); } tom_match22_1_list1 = ( OptionList) tom_match22_1_end1; } while(!(tom_is_empty_OptionList(tom_match22_1_list1))); }} }
 
    return false;
  }
  
  protected boolean hasDefaultCase(OptionList optionList) {
     {  OptionList tom_match24_1 = null; tom_match24_1 = ( OptionList) optionList;_match24_pattern1: {  Option tom_absvar7 = null; if(tom_is_fun_sym_concOption(tom_match24_1) ||  false ) {  OptionList tom_match24_1_begin1 = null;  OptionList tom_match24_1_end1 = null;  OptionList tom_match24_1_list1 = null; tom_match24_1_list1 = ( OptionList) tom_match24_1; tom_match24_1_begin1 = ( OptionList) tom_match24_1_list1; tom_match24_1_end1 = ( OptionList) tom_match24_1_list1; do { if(!(tom_is_empty_OptionList(tom_match24_1_list1))) { tom_absvar7 = ( Option) tom_get_head_OptionList(tom_match24_1_list1); tom_match24_1_list1 = ( OptionList) tom_get_tail_OptionList(tom_match24_1_list1); {  Option tom_match25_1 = null; tom_match25_1 = ( Option) tom_absvar7;_match25_pattern1: { if(tom_is_fun_sym_DefaultCase(tom_match25_1) ||  false ) {
  return true;  }} } } if(!(tom_is_empty_OptionList(tom_match24_1_end1))) { tom_match24_1_end1 = ( OptionList) tom_get_tail_OptionList(tom_match24_1_end1); } tom_match24_1_list1 = ( OptionList) tom_match24_1_end1; } while(!(tom_is_empty_OptionList(tom_match24_1_list1))); }} }
 
    return false;
  }

  protected boolean hasDefinedSymbol(OptionList optionList) {
     {  OptionList tom_match26_1 = null; tom_match26_1 = ( OptionList) optionList;_match26_pattern1: {  Option tom_absvar8 = null; if(tom_is_fun_sym_concOption(tom_match26_1) ||  false ) {  OptionList tom_match26_1_begin1 = null;  OptionList tom_match26_1_end1 = null;  OptionList tom_match26_1_list1 = null; tom_match26_1_list1 = ( OptionList) tom_match26_1; tom_match26_1_begin1 = ( OptionList) tom_match26_1_list1; tom_match26_1_end1 = ( OptionList) tom_match26_1_list1; do { if(!(tom_is_empty_OptionList(tom_match26_1_list1))) { tom_absvar8 = ( Option) tom_get_head_OptionList(tom_match26_1_list1); tom_match26_1_list1 = ( OptionList) tom_get_tail_OptionList(tom_match26_1_list1); {  Option tom_match27_1 = null; tom_match27_1 = ( Option) tom_absvar8;_match27_pattern1: { if(tom_is_fun_sym_DefinedSymbol(tom_match27_1) ||  false ) {
  return true;  }} } } if(!(tom_is_empty_OptionList(tom_match26_1_end1))) { tom_match26_1_end1 = ( OptionList) tom_get_tail_OptionList(tom_match26_1_end1); } tom_match26_1_list1 = ( OptionList) tom_match26_1_end1; } while(!(tom_is_empty_OptionList(tom_match26_1_list1))); }} }
 
    return false;
  }

  protected boolean hasImplicitXMLAttribut(OptionList optionList) {
     {  OptionList tom_match28_1 = null; tom_match28_1 = ( OptionList) optionList;_match28_pattern1: {  Option tom_absvar9 = null; if(tom_is_fun_sym_concOption(tom_match28_1) ||  false ) {  OptionList tom_match28_1_begin1 = null;  OptionList tom_match28_1_end1 = null;  OptionList tom_match28_1_list1 = null; tom_match28_1_list1 = ( OptionList) tom_match28_1; tom_match28_1_begin1 = ( OptionList) tom_match28_1_list1; tom_match28_1_end1 = ( OptionList) tom_match28_1_list1; do { if(!(tom_is_empty_OptionList(tom_match28_1_list1))) { tom_absvar9 = ( Option) tom_get_head_OptionList(tom_match28_1_list1); tom_match28_1_list1 = ( OptionList) tom_get_tail_OptionList(tom_match28_1_list1); {  Option tom_match29_1 = null; tom_match29_1 = ( Option) tom_absvar9;_match29_pattern1: { if(tom_is_fun_sym_ImplicitXMLAttribut(tom_match29_1) ||  false ) {
  return true;  }} } } if(!(tom_is_empty_OptionList(tom_match28_1_end1))) { tom_match28_1_end1 = ( OptionList) tom_get_tail_OptionList(tom_match28_1_end1); } tom_match28_1_list1 = ( OptionList) tom_match28_1_end1; } while(!(tom_is_empty_OptionList(tom_match28_1_list1))); }} }
 
    return false;
  }

  protected boolean hasImplicitXMLChild(OptionList optionList) {
     {  OptionList tom_match30_1 = null; tom_match30_1 = ( OptionList) optionList;_match30_pattern1: {  Option tom_absvar10 = null; if(tom_is_fun_sym_concOption(tom_match30_1) ||  false ) {  OptionList tom_match30_1_begin1 = null;  OptionList tom_match30_1_end1 = null;  OptionList tom_match30_1_list1 = null; tom_match30_1_list1 = ( OptionList) tom_match30_1; tom_match30_1_begin1 = ( OptionList) tom_match30_1_list1; tom_match30_1_end1 = ( OptionList) tom_match30_1_list1; do { if(!(tom_is_empty_OptionList(tom_match30_1_list1))) { tom_absvar10 = ( Option) tom_get_head_OptionList(tom_match30_1_list1); tom_match30_1_list1 = ( OptionList) tom_get_tail_OptionList(tom_match30_1_list1); {  Option tom_match31_1 = null; tom_match31_1 = ( Option) tom_absvar10;_match31_pattern1: { if(tom_is_fun_sym_ImplicitXMLChild(tom_match31_1) ||  false ) {
  return true;  }} } } if(!(tom_is_empty_OptionList(tom_match30_1_end1))) { tom_match30_1_end1 = ( OptionList) tom_get_tail_OptionList(tom_match30_1_end1); } tom_match30_1_list1 = ( OptionList) tom_match30_1_end1; } while(!(tom_is_empty_OptionList(tom_match30_1_list1))); }} }
 
    return false;
  } 
  
  protected TomName getSlotName(TomSymbol symbol, int number) {
    //%variable
    SlotList slotList = symbol.getSlotList();
    for(int index = 0; !slotList.isEmpty() && index<number ; index++) {
      slotList = slotList.getTail();
    }
    if(slotList.isEmpty()) {
      System.out.println("getSlotName: bad index error");
	  throw new TomRuntimeException(new Throwable("getSlotName: bad index error"));
    }

    Declaration decl = slotList.getHead().getSlotDecl();
     {  Declaration tom_match32_1 = null; tom_match32_1 = ( Declaration) decl;_match32_pattern1: {  TomName name = null; if(tom_is_fun_sym_GetSlotDecl(tom_match32_1) ||  false ) {  TomName tom_match32_1_2 = null; tom_match32_1_2 = ( TomName) tom_get_slot_GetSlotDecl_slotName(tom_match32_1); name = ( TomName) tom_match32_1_2;
  return name;  }} }
 
    return null;
  }
  
  protected int getSlotIndex(SlotList slotList, TomName slotName) {
    //%variable
    int index = 0;
    while(!slotList.isEmpty()) {
      TomName name = slotList.getHead().getSlotName();
        // System.out.println("index = " + index + " name = " + name);
      if(slotName.equals(name)) {
        return index; 
      }
      slotList = slotList.getTail();
      index++;
    }
    return -1;
  }

  protected boolean isDefinedSymbol(TomSymbol subject) {
      //%variable
    if(subject==null) {
      System.out.println("isDefinedSymbol: subject == null");
      return false;
    }
     {  TomSymbol tom_match33_1 = null; tom_match33_1 = ( TomSymbol) subject;_match33_pattern1: {  OptionList optionList = null; if(tom_is_fun_sym_Symbol(tom_match33_1) ||  false ) {  OptionList tom_match33_1_4 = null; tom_match33_1_4 = ( OptionList) tom_get_slot_Symbol_option(tom_match33_1); optionList = ( OptionList) tom_match33_1_4;
 
        return hasDefinedSymbol(optionList);
       }} }
 
    return false;
  }
  
    // findOriginTracking(_) return the option containing OriginTracking information
  protected Option findOriginTracking(OptionList optionList) {
    if(optionList.isEmpty()) {
      return tom_make_noOption() ;
    }
    while(!optionList.isEmpty()) {
      Option subject = optionList.getHead();
       {  Option tom_match34_1 = null; tom_match34_1 = ( Option) subject;_match34_pattern1: {  Option orgTrack = null; if(tom_is_fun_sym_OriginTracking(tom_match34_1) ||  false ) { orgTrack = ( Option) tom_match34_1;
 
          return orgTrack;
         }} }
 
      optionList = optionList.getTail();
    }
    System.out.println("findOriginTracking:  not found" + optionList);
    throw new TomRuntimeException(new Throwable("findOriginTracking:  not found" + optionList));
  }

}

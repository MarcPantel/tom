/* Generated by TOM (version 2.5alpha): Do not edit this file *//*
 * 
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine;

import java.util.*;

import aterm.*;

import tom.engine.tools.*;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomname.types.tomname.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;
import tom.engine.adt.theory.types.*;

import tom.engine.exception.TomRuntimeException;

import tom.platform.adt.platformoption.*;

import tom.library.strategy.mutraveler.MuTraveler;
import jjtraveler.reflective.VisitableVisitor;
import jjtraveler.VisitFailure;


/**
 * Base class for most tom files in the compiler.
 * Provides access to the TomSignatureFactory and helper methods.
 */
public class TomBase {

  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) {  return  (t1.equals(t2))  ;}private static boolean tom_is_sort_String(String t) {  return  t instanceof String  ;}  /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) {  return  (t1==t2)  ;} private static boolean tom_equal_term_Instruction(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Instruction(Object t) {  return  t instanceof tom.engine.adt.tominstruction.types.Instruction  ;}private static boolean tom_equal_term_TomTypeList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomTypeList(Object t) {  return  t instanceof tom.engine.adt.tomtype.types.TomTypeList  ;}private static boolean tom_equal_term_TomType(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomType(Object t) {  return  t instanceof tom.engine.adt.tomtype.types.TomType  ;}private static boolean tom_equal_term_TomSymbolList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomSymbolList(Object t) {  return  t instanceof tom.engine.adt.tomsignature.types.TomSymbolList  ;}private static boolean tom_equal_term_Position(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Position(Object t) {  return  t instanceof tom.engine.adt.tomsignature.types.Position  ;}private static boolean tom_equal_term_TomSymbol(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomSymbol(Object t) {  return  t instanceof tom.engine.adt.tomsignature.types.TomSymbol  ;}private static boolean tom_equal_term_TargetLanguage(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TargetLanguage(Object t) {  return  t instanceof tom.engine.adt.tomsignature.types.TargetLanguage  ;}private static boolean tom_equal_term_ElementaryTheory(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_ElementaryTheory(Object t) {  return  t instanceof tom.engine.adt.theory.types.ElementaryTheory  ;}private static boolean tom_equal_term_Theory(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Theory(Object t) {  return  t instanceof tom.engine.adt.theory.types.Theory  ;}private static boolean tom_equal_term_Declaration(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Declaration(Object t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.Declaration  ;}private static boolean tom_equal_term_TomNumber(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomNumber(Object t) {  return  t instanceof tom.engine.adt.tomname.types.TomNumber  ;}private static boolean tom_equal_term_TomNumberList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomNumberList(Object t) {  return  t instanceof tom.engine.adt.tomname.types.TomNumberList  ;}private static boolean tom_equal_term_TomNameList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomNameList(Object t) {  return  t instanceof tom.engine.adt.tomname.types.TomNameList  ;}private static boolean tom_equal_term_TomName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomName(Object t) {  return  t instanceof tom.engine.adt.tomname.types.TomName  ;}private static boolean tom_equal_term_Expression(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Expression(Object t) {  return  t instanceof tom.engine.adt.tomexpression.types.Expression  ;}private static boolean tom_equal_term_TomList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomList(Object t) {  return  t instanceof tom.engine.adt.tomterm.types.TomList  ;}private static boolean tom_equal_term_TomTerm(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomTerm(Object t) {  return  t instanceof tom.engine.adt.tomterm.types.TomTerm  ;}private static boolean tom_equal_term_Option(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Option(Object t) {  return  t instanceof tom.engine.adt.tomoption.types.Option  ;}private static boolean tom_equal_term_OptionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_OptionList(Object t) {  return  t instanceof tom.engine.adt.tomoption.types.OptionList  ;}private static boolean tom_equal_term_Constraint(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Constraint(Object t) {  return  t instanceof tom.engine.adt.tomconstraint.types.Constraint  ;}private static boolean tom_equal_term_ConstraintList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_ConstraintList(Object t) {  return  t instanceof tom.engine.adt.tomconstraint.types.ConstraintList  ;}private static boolean tom_equal_term_PairNameDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_PairNameDecl(Object t) {  return  t instanceof tom.engine.adt.tomslot.types.PairNameDecl  ;}private static boolean tom_equal_term_PairNameDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_PairNameDeclList(Object t) {  return  t instanceof tom.engine.adt.tomslot.types.PairNameDeclList  ;}private static boolean tom_equal_term_SlotList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_SlotList(Object t) {  return  t instanceof tom.engine.adt.tomslot.types.SlotList  ;}private static boolean tom_equal_term_Slot(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Slot(Object t) {  return  t instanceof tom.engine.adt.tomslot.types.Slot  ;}private static boolean tom_is_fun_sym_Type( tom.engine.adt.tomtype.types.TomType  t) {  return  t instanceof tom.engine.adt.tomtype.types.tomtype.Type  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TomType( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTomType()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TlType( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTlType()  ;}private static boolean tom_is_fun_sym_TomTypeAlone( tom.engine.adt.tomtype.types.TomType  t) {  return  t instanceof tom.engine.adt.tomtype.types.tomtype.TomTypeAlone  ;}private static  String  tom_get_slot_TomTypeAlone_String( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_ASTTomType( tom.engine.adt.tomtype.types.TomType  t) {  return  t instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType  ;}private static  String  tom_get_slot_ASTTomType_String( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_TypesToType( tom.engine.adt.tomtype.types.TomType  t) {  return  t instanceof tom.engine.adt.tomtype.types.tomtype.TypesToType  ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_get_slot_TypesToType_Domain( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getDomain()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_TypesToType_Codomain( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getCodomain()  ;}private static boolean tom_is_fun_sym_TLType( tom.engine.adt.tomtype.types.TomType  t) {  return  t instanceof tom.engine.adt.tomtype.types.tomtype.TLType  ;}private static  tom.engine.adt.tomsignature.types.TargetLanguage  tom_get_slot_TLType_Tl( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTl()  ;}private static boolean tom_is_fun_sym_EmptyType( tom.engine.adt.tomtype.types.TomType  t) {  return  t instanceof tom.engine.adt.tomtype.types.tomtype.EmptyType  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_make_EmptyType() { return  tom.engine.adt.tomtype.types.tomtype.EmptyType.make(); }private static boolean tom_is_fun_sym_Symbol( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t instanceof tom.engine.adt.tomsignature.types.tomsymbol.Symbol  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Symbol_AstName( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Symbol_TypesToType( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getTypesToType()  ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_slot_Symbol_PairNameDeclList( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getPairNameDeclList()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Symbol_Option( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getOption()  ;}private static boolean tom_is_fun_sym_TL( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t instanceof tom.engine.adt.tomsignature.types.targetlanguage.TL  ;}private static  String  tom_get_slot_TL_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getCode()  ;}private static  tom.engine.adt.tomsignature.types.Position  tom_get_slot_TL_Start( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getStart()  ;}private static  tom.engine.adt.tomsignature.types.Position  tom_get_slot_TL_End( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getEnd()  ;}private static boolean tom_is_fun_sym_ITL( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t instanceof tom.engine.adt.tomsignature.types.targetlanguage.ITL  ;}private static  String  tom_get_slot_ITL_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getCode()  ;}private static boolean tom_is_fun_sym_IsFsymDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.IsFsymDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsFsymDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsFsymDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_IsFsymDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_IsFsymDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_GetSlotDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.GetSlotDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlotDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlotDecl_SlotName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getSlotName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSlotDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetSlotDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetSlotDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeEmptyList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeEmptyList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeEmptyList_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeEmptyList_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeEmptyList_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeAddList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeAddList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeAddList_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddList_VarElt( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarElt()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddList_VarList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarList()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeAddList_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeAddList_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeEmptyArray( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeEmptyArray  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeEmptyArray_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeEmptyArray_VarSize( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarSize()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeEmptyArray_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeEmptyArray_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeAddArray( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeAddArray  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeAddArray_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddArray_VarElt( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarElt()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddArray_VarList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarList()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeAddArray_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeAddArray_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_make_EmptyDeclaration() { return  tom.engine.adt.tomdeclaration.types.declaration.EmptyDeclaration.make(); }private static boolean tom_is_fun_sym_MatchNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.MatchNumber  ;}private static  int  tom_get_slot_MatchNumber_Integer( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getInteger()  ;}private static boolean tom_is_fun_sym_PatternNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.PatternNumber  ;}private static  int  tom_get_slot_PatternNumber_Integer( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getInteger()  ;}private static boolean tom_is_fun_sym_ListNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.ListNumber  ;}private static  int  tom_get_slot_ListNumber_Integer( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getInteger()  ;}private static boolean tom_is_fun_sym_IndexNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.IndexNumber  ;}private static  int  tom_get_slot_IndexNumber_Integer( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getInteger()  ;}private static boolean tom_is_fun_sym_Begin( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.Begin  ;}private static  int  tom_get_slot_Begin_Integer( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getInteger()  ;}private static boolean tom_is_fun_sym_End( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.End  ;}private static  int  tom_get_slot_End_Integer( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getInteger()  ;}private static boolean tom_is_fun_sym_Save( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.Save  ;}private static  int  tom_get_slot_Save_Integer( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getInteger()  ;}private static boolean tom_is_fun_sym_Position( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.Position  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_make_Position( int  t0) { return  tom.engine.adt.tomname.types.tomnumber.Position.make(t0); }private static  int  tom_get_slot_Position_Integer( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getInteger()  ;}private static boolean tom_is_fun_sym_AbsVar( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.AbsVar  ;}private static  int  tom_get_slot_AbsVar_Integer( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getInteger()  ;}private static boolean tom_is_fun_sym_RenamedVar( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.RenamedVar  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_RenamedVar_AstName( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_NameNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.NameNumber  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_NameNumber_AstName( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_RuleVar( tom.engine.adt.tomname.types.TomNumber  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumber.RuleVar  ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) {  return  t instanceof tom.engine.adt.tomname.types.tomname.Name  ;}private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_PositionName( tom.engine.adt.tomname.types.TomName  t) {  return  t instanceof tom.engine.adt.tomname.types.tomname.PositionName  ;}private static  tom.engine.adt.tomname.types.TomName  tom_make_PositionName( tom.engine.adt.tomname.types.TomNumberList  t0) { return  tom.engine.adt.tomname.types.tomname.PositionName.make(t0); }private static  tom.engine.adt.tomname.types.TomNumberList  tom_get_slot_PositionName_NumberList( tom.engine.adt.tomname.types.TomName  t) {  return  t.getNumberList()  ;}private static boolean tom_is_fun_sym_TomTermToExpression( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.TomTermToExpression  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_TomTermToExpression_AstTerm( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstTerm()  ;}private static boolean tom_is_fun_sym_GetSlot( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetSlot  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetSlot_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlot_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  String  tom_get_slot_GetSlot_SlotNameString( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getSlotNameString()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSlot_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetHead( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetHead  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetHead_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetHead_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetHead_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetTail( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetTail  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetTail_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetTail_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetElement( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetElement  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetElement_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetElement_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetElement_Kid1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid1()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetElement_Kid2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid2()  ;}private static boolean tom_is_fun_sym_GetSliceList( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetSliceList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSliceList_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceList_VariableBeginAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableBeginAST()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceList_VariableEndAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableEndAST()  ;}private static boolean tom_is_fun_sym_GetSliceArray( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetSliceArray  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSliceArray_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceArray_SubjectListName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getSubjectListName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceArray_VariableBeginAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableBeginAST()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceArray_VariableEndAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableEndAST()  ;}private static boolean tom_is_fun_sym_TermAppl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_TermAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_TermAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getNameList()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_TermAppl_Args( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getArgs()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_TermAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getNameList()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getSlots()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.Variable  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_VariableStar_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_VariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_UnamedVariable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_UnamedVariableStar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_TargetLanguageToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.TargetLanguageToTomTerm  ;}private static  tom.engine.adt.tomsignature.types.TargetLanguage  tom_get_slot_TargetLanguageToTomTerm_Tl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTl()  ;}private static boolean tom_is_fun_sym_AntiTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_AntiTerm_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTomTerm()  ;}private static boolean tom_is_fun_sym_Ref( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.Ref  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Ref_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTomTerm()  ;}private static boolean tom_is_fun_sym_FunctionCall( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.FunctionCall  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_FunctionCall_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_FunctionCall_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_FunctionCall_Args( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getArgs()  ;}private static boolean tom_is_fun_sym_DeclarationToOption( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.DeclarationToOption  ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_get_slot_DeclarationToOption_AstDeclaration( tom.engine.adt.tomoption.types.Option  t) {  return  t.getAstDeclaration()  ;}private static boolean tom_is_fun_sym_DefinedSymbol( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.DefinedSymbol  ;}private static boolean tom_is_fun_sym_GeneratedMatch( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.GeneratedMatch  ;}private static boolean tom_is_fun_sym_OriginTracking( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.OriginTracking  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_OriginTracking_AstName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getAstName()  ;}private static  int  tom_get_slot_OriginTracking_Line( tom.engine.adt.tomoption.types.Option  t) {  return  t.getLine()  ;}private static  String  tom_get_slot_OriginTracking_FileName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getFileName()  ;}private static boolean tom_is_fun_sym_Constant( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.Constant  ;}private static boolean tom_is_fun_sym_MatchingTheory( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.MatchingTheory  ;}private static  tom.engine.adt.theory.types.Theory  tom_get_slot_MatchingTheory_Theory( tom.engine.adt.tomoption.types.Option  t) {  return  t.getTheory()  ;}private static boolean tom_is_fun_sym_Debug( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.Debug  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Debug_AstName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_ModuleName( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.ModuleName  ;}private static  String  tom_get_slot_ModuleName_String( tom.engine.adt.tomoption.types.Option  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_ImplicitXMLAttribut( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.ImplicitXMLAttribut  ;}private static boolean tom_is_fun_sym_ImplicitXMLChild( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.ImplicitXMLChild  ;}private static  tom.engine.adt.tomoption.types.Option  tom_make_noOption() { return  tom.engine.adt.tomoption.types.option.noOption.make(); }private static boolean tom_is_fun_sym_AssignTo( tom.engine.adt.tomconstraint.types.Constraint  t) {  return  t instanceof tom.engine.adt.tomconstraint.types.constraint.AssignTo  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_AssignTo_Variable( tom.engine.adt.tomconstraint.types.Constraint  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_PairNameDecl( tom.engine.adt.tomslot.types.PairNameDecl  t) {  return  t instanceof tom.engine.adt.tomslot.types.pairnamedecl.PairNameDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_PairNameDecl_SlotName( tom.engine.adt.tomslot.types.PairNameDecl  t) {  return  t.getSlotName()  ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_get_slot_PairNameDecl_SlotDecl( tom.engine.adt.tomslot.types.PairNameDecl  t) {  return  t.getSlotDecl()  ;}private static boolean tom_is_fun_sym_PairSlotAppl( tom.engine.adt.tomslot.types.Slot  t) {  return  t instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl  ;}private static  tom.engine.adt.tomslot.types.Slot  tom_make_PairSlotAppl( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(t0, t1); }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_PairSlotAppl_SlotName( tom.engine.adt.tomslot.types.Slot  t) {  return  t.getSlotName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_PairSlotAppl_Appl( tom.engine.adt.tomslot.types.Slot  t) {  return  t.getAppl()  ;}private static boolean tom_is_fun_sym_concTomType( tom.engine.adt.tomtype.types.TomTypeList  t) {  return  t instanceof tom.engine.adt.tomtype.types.tomtypelist.ConsconcTomType || t instanceof tom.engine.adt.tomtype.types.tomtypelist.EmptyconcTomType  ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_empty_list_concTomType() { return  tom.engine.adt.tomtype.types.tomtypelist.EmptyconcTomType.make() ; }private static  tom.engine.adt.tomtype.types.TomTypeList  tom_cons_list_concTomType( tom.engine.adt.tomtype.types.TomType  e,  tom.engine.adt.tomtype.types.TomTypeList  l) { return  tom.engine.adt.tomtype.types.tomtypelist.ConsconcTomType.make(e,l) ; }private static  tom.engine.adt.tomtype.types.TomType  tom_get_head_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) {  return  l.getHeadconcTomType()  ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_get_tail_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) {  return  l.getTailconcTomType()  ;}private static boolean tom_is_empty_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) {  return  l.isEmptyconcTomType()  ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_append_list_concTomType( tom.engine.adt.tomtype.types.TomTypeList  l1,  tom.engine.adt.tomtype.types.TomTypeList  l2) {    if(tom_is_empty_concTomType_TomTypeList(l1)) {     return l2;    } else if(tom_is_empty_concTomType_TomTypeList(l2)) {     return l1;    } else if(tom_is_empty_concTomType_TomTypeList(( tom.engine.adt.tomtype.types.TomTypeList )tom_get_tail_concTomType_TomTypeList(l1))) {     return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(( tom.engine.adt.tomtype.types.TomType )tom_get_head_concTomType_TomTypeList(l1),l2);    } else {      return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(( tom.engine.adt.tomtype.types.TomType )tom_get_head_concTomType_TomTypeList(l1),tom_append_list_concTomType(( tom.engine.adt.tomtype.types.TomTypeList )tom_get_tail_concTomType_TomTypeList(l1),l2));    }   }  private static  tom.engine.adt.tomtype.types.TomTypeList  tom_get_slice_concTomType( tom.engine.adt.tomtype.types.TomTypeList  begin,  tom.engine.adt.tomtype.types.TomTypeList  end) {    if(tom_equal_term_TomTypeList(begin,end)) {      return ( tom.engine.adt.tomtype.types.TomTypeList )tom_empty_list_concTomType();    } else {      return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(( tom.engine.adt.tomtype.types.TomType )tom_get_head_concTomType_TomTypeList(begin),( tom.engine.adt.tomtype.types.TomTypeList )tom_get_slice_concTomType(( tom.engine.adt.tomtype.types.TomTypeList )tom_get_tail_concTomType_TomTypeList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbolList  t) {  return  t instanceof tom.engine.adt.tomsignature.types.tomsymbollist.ConsconcTomSymbol || t instanceof tom.engine.adt.tomsignature.types.tomsymbollist.EmptyconcTomSymbol  ;}private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_empty_list_concTomSymbol() { return  tom.engine.adt.tomsignature.types.tomsymbollist.EmptyconcTomSymbol.make() ; }private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_cons_list_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbol  e,  tom.engine.adt.tomsignature.types.TomSymbolList  l) { return  tom.engine.adt.tomsignature.types.tomsymbollist.ConsconcTomSymbol.make(e,l) ; }private static  tom.engine.adt.tomsignature.types.TomSymbol  tom_get_head_concTomSymbol_TomSymbolList( tom.engine.adt.tomsignature.types.TomSymbolList  l) {  return  l.getHeadconcTomSymbol()  ;}private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_get_tail_concTomSymbol_TomSymbolList( tom.engine.adt.tomsignature.types.TomSymbolList  l) {  return  l.getTailconcTomSymbol()  ;}private static boolean tom_is_empty_concTomSymbol_TomSymbolList( tom.engine.adt.tomsignature.types.TomSymbolList  l) {  return  l.isEmptyconcTomSymbol()  ;}private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_append_list_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbolList  l1,  tom.engine.adt.tomsignature.types.TomSymbolList  l2) {    if(tom_is_empty_concTomSymbol_TomSymbolList(l1)) {     return l2;    } else if(tom_is_empty_concTomSymbol_TomSymbolList(l2)) {     return l1;    } else if(tom_is_empty_concTomSymbol_TomSymbolList(( tom.engine.adt.tomsignature.types.TomSymbolList )tom_get_tail_concTomSymbol_TomSymbolList(l1))) {     return ( tom.engine.adt.tomsignature.types.TomSymbolList )tom_cons_list_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbol )tom_get_head_concTomSymbol_TomSymbolList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.TomSymbolList )tom_cons_list_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbol )tom_get_head_concTomSymbol_TomSymbolList(l1),tom_append_list_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbolList )tom_get_tail_concTomSymbol_TomSymbolList(l1),l2));    }   }  private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_get_slice_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbolList  begin,  tom.engine.adt.tomsignature.types.TomSymbolList  end) {    if(tom_equal_term_TomSymbolList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.TomSymbolList )tom_empty_list_concTomSymbol();    } else {      return ( tom.engine.adt.tomsignature.types.TomSymbolList )tom_cons_list_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbol )tom_get_head_concTomSymbol_TomSymbolList(begin),( tom.engine.adt.tomsignature.types.TomSymbolList )tom_get_slice_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbolList )tom_get_tail_concTomSymbol_TomSymbolList(begin),end));    }   }  private static boolean tom_is_fun_sym_concElementaryTheory( tom.engine.adt.theory.types.Theory  t) {  return  t instanceof tom.engine.adt.theory.types.theory.ConsconcElementaryTheory || t instanceof tom.engine.adt.theory.types.theory.EmptyconcElementaryTheory  ;}private static  tom.engine.adt.theory.types.Theory  tom_empty_list_concElementaryTheory() { return  tom.engine.adt.theory.types.theory.EmptyconcElementaryTheory.make() ; }private static  tom.engine.adt.theory.types.Theory  tom_cons_list_concElementaryTheory( tom.engine.adt.theory.types.ElementaryTheory  e,  tom.engine.adt.theory.types.Theory  l) { return  tom.engine.adt.theory.types.theory.ConsconcElementaryTheory.make(e,l) ; }private static  tom.engine.adt.theory.types.ElementaryTheory  tom_get_head_concElementaryTheory_Theory( tom.engine.adt.theory.types.Theory  l) {  return  l.getHeadconcElementaryTheory()  ;}private static  tom.engine.adt.theory.types.Theory  tom_get_tail_concElementaryTheory_Theory( tom.engine.adt.theory.types.Theory  l) {  return  l.getTailconcElementaryTheory()  ;}private static boolean tom_is_empty_concElementaryTheory_Theory( tom.engine.adt.theory.types.Theory  l) {  return  l.isEmptyconcElementaryTheory()  ;}private static  tom.engine.adt.theory.types.Theory  tom_append_list_concElementaryTheory( tom.engine.adt.theory.types.Theory  l1,  tom.engine.adt.theory.types.Theory  l2) {    if(tom_is_empty_concElementaryTheory_Theory(l1)) {     return l2;    } else if(tom_is_empty_concElementaryTheory_Theory(l2)) {     return l1;    } else if(tom_is_empty_concElementaryTheory_Theory(( tom.engine.adt.theory.types.Theory )tom_get_tail_concElementaryTheory_Theory(l1))) {     return ( tom.engine.adt.theory.types.Theory )tom_cons_list_concElementaryTheory(( tom.engine.adt.theory.types.ElementaryTheory )tom_get_head_concElementaryTheory_Theory(l1),l2);    } else {      return ( tom.engine.adt.theory.types.Theory )tom_cons_list_concElementaryTheory(( tom.engine.adt.theory.types.ElementaryTheory )tom_get_head_concElementaryTheory_Theory(l1),tom_append_list_concElementaryTheory(( tom.engine.adt.theory.types.Theory )tom_get_tail_concElementaryTheory_Theory(l1),l2));    }   }  private static  tom.engine.adt.theory.types.Theory  tom_get_slice_concElementaryTheory( tom.engine.adt.theory.types.Theory  begin,  tom.engine.adt.theory.types.Theory  end) {    if(tom_equal_term_Theory(begin,end)) {      return ( tom.engine.adt.theory.types.Theory )tom_empty_list_concElementaryTheory();    } else {      return ( tom.engine.adt.theory.types.Theory )tom_cons_list_concElementaryTheory(( tom.engine.adt.theory.types.ElementaryTheory )tom_get_head_concElementaryTheory_Theory(begin),( tom.engine.adt.theory.types.Theory )tom_get_slice_concElementaryTheory(( tom.engine.adt.theory.types.Theory )tom_get_tail_concElementaryTheory_Theory(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomNumber( tom.engine.adt.tomname.types.TomNumberList  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumberlist.ConsconcTomNumber || t instanceof tom.engine.adt.tomname.types.tomnumberlist.EmptyconcTomNumber  ;}private static  tom.engine.adt.tomname.types.TomNumberList  tom_empty_list_concTomNumber() { return  tom.engine.adt.tomname.types.tomnumberlist.EmptyconcTomNumber.make() ; }private static  tom.engine.adt.tomname.types.TomNumberList  tom_cons_list_concTomNumber( tom.engine.adt.tomname.types.TomNumber  e,  tom.engine.adt.tomname.types.TomNumberList  l) { return  tom.engine.adt.tomname.types.tomnumberlist.ConsconcTomNumber.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomNumber  tom_get_head_concTomNumber_TomNumberList( tom.engine.adt.tomname.types.TomNumberList  l) {  return  l.getHeadconcTomNumber()  ;}private static  tom.engine.adt.tomname.types.TomNumberList  tom_get_tail_concTomNumber_TomNumberList( tom.engine.adt.tomname.types.TomNumberList  l) {  return  l.getTailconcTomNumber()  ;}private static boolean tom_is_empty_concTomNumber_TomNumberList( tom.engine.adt.tomname.types.TomNumberList  l) {  return  l.isEmptyconcTomNumber()  ;}private static  tom.engine.adt.tomname.types.TomNumberList  tom_append_list_concTomNumber( tom.engine.adt.tomname.types.TomNumberList  l1,  tom.engine.adt.tomname.types.TomNumberList  l2) {    if(tom_is_empty_concTomNumber_TomNumberList(l1)) {     return l2;    } else if(tom_is_empty_concTomNumber_TomNumberList(l2)) {     return l1;    } else if(tom_is_empty_concTomNumber_TomNumberList(( tom.engine.adt.tomname.types.TomNumberList )tom_get_tail_concTomNumber_TomNumberList(l1))) {     return ( tom.engine.adt.tomname.types.TomNumberList )tom_cons_list_concTomNumber(( tom.engine.adt.tomname.types.TomNumber )tom_get_head_concTomNumber_TomNumberList(l1),l2);    } else {      return ( tom.engine.adt.tomname.types.TomNumberList )tom_cons_list_concTomNumber(( tom.engine.adt.tomname.types.TomNumber )tom_get_head_concTomNumber_TomNumberList(l1),tom_append_list_concTomNumber(( tom.engine.adt.tomname.types.TomNumberList )tom_get_tail_concTomNumber_TomNumberList(l1),l2));    }   }  private static  tom.engine.adt.tomname.types.TomNumberList  tom_get_slice_concTomNumber( tom.engine.adt.tomname.types.TomNumberList  begin,  tom.engine.adt.tomname.types.TomNumberList  end) {    if(tom_equal_term_TomNumberList(begin,end)) {      return ( tom.engine.adt.tomname.types.TomNumberList )tom_empty_list_concTomNumber();    } else {      return ( tom.engine.adt.tomname.types.TomNumberList )tom_cons_list_concTomNumber(( tom.engine.adt.tomname.types.TomNumber )tom_get_head_concTomNumber_TomNumberList(begin),( tom.engine.adt.tomname.types.TomNumberList )tom_get_slice_concTomNumber(( tom.engine.adt.tomname.types.TomNumberList )tom_get_tail_concTomNumber_TomNumberList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomname.types.TomNameList  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName || t instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_empty_list_concTomName() { return  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ; }private static  tom.engine.adt.tomname.types.TomNameList  tom_cons_list_concTomName( tom.engine.adt.tomname.types.TomName  e,  tom.engine.adt.tomname.types.TomNameList  l) { return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_head_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.getHeadconcTomName()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_tail_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.getTailconcTomName()  ;}private static boolean tom_is_empty_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.isEmptyconcTomName()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList  l1,  tom.engine.adt.tomname.types.TomNameList  l2) {    if(tom_is_empty_concTomName_TomNameList(l1)) {     return l2;    } else if(tom_is_empty_concTomName_TomNameList(l2)) {     return l1;    } else if(tom_is_empty_concTomName_TomNameList(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(l1))) {     return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(l1),l2);    } else {      return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(l1),tom_append_list_concTomName(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(l1),l2));    }   }  private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end) {    if(tom_equal_term_TomNameList(begin,end)) {      return ( tom.engine.adt.tomname.types.TomNameList )tom_empty_list_concTomName();    } else {      return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(begin),( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomTerm( tom.engine.adt.tomterm.types.TomList  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm || t instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_empty_list_concTomTerm() { return  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ; }private static  tom.engine.adt.tomterm.types.TomList  tom_cons_list_concTomTerm( tom.engine.adt.tomterm.types.TomTerm  e,  tom.engine.adt.tomterm.types.TomList  l) { return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(e,l) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_head_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.getHeadconcTomTerm()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_tail_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.getTailconcTomTerm()  ;}private static boolean tom_is_empty_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.isEmptyconcTomTerm()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList  l1,  tom.engine.adt.tomterm.types.TomList  l2) {    if(tom_is_empty_concTomTerm_TomList(l1)) {     return l2;    } else if(tom_is_empty_concTomTerm_TomList(l2)) {     return l1;    } else if(tom_is_empty_concTomTerm_TomList(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(l1))) {     return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(l1),l2);    } else {      return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(l1),tom_append_list_concTomTerm(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(l1),l2));    }   }  private static  tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end) {    if(tom_equal_term_TomList(begin,end)) {      return ( tom.engine.adt.tomterm.types.TomList )tom_empty_list_concTomTerm();    } else {      return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(begin),( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(begin),end));    }   }  private static boolean tom_is_fun_sym_concOption( tom.engine.adt.tomoption.types.OptionList  t) {  return  t instanceof tom.engine.adt.tomoption.types.optionlist.ConsconcOption || t instanceof tom.engine.adt.tomoption.types.optionlist.EmptyconcOption  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_empty_list_concOption() { return  tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_cons_list_concOption( tom.engine.adt.tomoption.types.Option  e,  tom.engine.adt.tomoption.types.OptionList  l) { return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make(e,l) ; }private static  tom.engine.adt.tomoption.types.Option  tom_get_head_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.getHeadconcOption()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_tail_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.getTailconcOption()  ;}private static boolean tom_is_empty_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.isEmptyconcOption()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList  l1,  tom.engine.adt.tomoption.types.OptionList  l2) {    if(tom_is_empty_concOption_OptionList(l1)) {     return l2;    } else if(tom_is_empty_concOption_OptionList(l2)) {     return l1;    } else if(tom_is_empty_concOption_OptionList(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(l1))) {     return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(l1),l2);    } else {      return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(l1),tom_append_list_concOption(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(l1),l2));    }   }  private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end) {    if(tom_equal_term_OptionList(begin,end)) {      return ( tom.engine.adt.tomoption.types.OptionList )tom_empty_list_concOption();    } else {      return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(begin),( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(begin),end));    }   }  private static boolean tom_is_fun_sym_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  t) {  return  t instanceof tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint || t instanceof tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_empty_list_concConstraint() { return  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ; }private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_cons_list_concConstraint( tom.engine.adt.tomconstraint.types.Constraint  e,  tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make(e,l) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_head_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.getHeadconcConstraint()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_tail_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.getTailconcConstraint()  ;}private static boolean tom_is_empty_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.isEmptyconcConstraint()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {    if(tom_is_empty_concConstraint_ConstraintList(l1)) {     return l2;    } else if(tom_is_empty_concConstraint_ConstraintList(l2)) {     return l1;    } else if(tom_is_empty_concConstraint_ConstraintList(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(l1))) {     return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(l1),l2);    } else {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(l1),tom_append_list_concConstraint(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(l1),l2));    }   }  private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end) {    if(tom_equal_term_ConstraintList(begin,end)) {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_empty_list_concConstraint();    } else {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(begin),( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(begin),end));    }   }  private static boolean tom_is_fun_sym_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList  t) {  return  t instanceof tom.engine.adt.tomslot.types.pairnamedecllist.ConsconcPairNameDecl || t instanceof tom.engine.adt.tomslot.types.pairnamedecllist.EmptyconcPairNameDecl  ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_empty_list_concPairNameDecl() { return  tom.engine.adt.tomslot.types.pairnamedecllist.EmptyconcPairNameDecl.make() ; }private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_cons_list_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDecl  e,  tom.engine.adt.tomslot.types.PairNameDeclList  l) { return  tom.engine.adt.tomslot.types.pairnamedecllist.ConsconcPairNameDecl.make(e,l) ; }private static  tom.engine.adt.tomslot.types.PairNameDecl  tom_get_head_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) {  return  l.getHeadconcPairNameDecl()  ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_tail_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) {  return  l.getTailconcPairNameDecl()  ;}private static boolean tom_is_empty_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) {  return  l.isEmptyconcPairNameDecl()  ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_append_list_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList  l1,  tom.engine.adt.tomslot.types.PairNameDeclList  l2) {    if(tom_is_empty_concPairNameDecl_PairNameDeclList(l1)) {     return l2;    } else if(tom_is_empty_concPairNameDecl_PairNameDeclList(l2)) {     return l1;    } else if(tom_is_empty_concPairNameDecl_PairNameDeclList(( tom.engine.adt.tomslot.types.PairNameDeclList )tom_get_tail_concPairNameDecl_PairNameDeclList(l1))) {     return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(( tom.engine.adt.tomslot.types.PairNameDecl )tom_get_head_concPairNameDecl_PairNameDeclList(l1),l2);    } else {      return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(( tom.engine.adt.tomslot.types.PairNameDecl )tom_get_head_concPairNameDecl_PairNameDeclList(l1),tom_append_list_concPairNameDecl(( tom.engine.adt.tomslot.types.PairNameDeclList )tom_get_tail_concPairNameDecl_PairNameDeclList(l1),l2));    }   }  private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_slice_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList  begin,  tom.engine.adt.tomslot.types.PairNameDeclList  end) {    if(tom_equal_term_PairNameDeclList(begin,end)) {      return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_empty_list_concPairNameDecl();    } else {      return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(( tom.engine.adt.tomslot.types.PairNameDecl )tom_get_head_concPairNameDecl_PairNameDeclList(begin),( tom.engine.adt.tomslot.types.PairNameDeclList )tom_get_slice_concPairNameDecl(( tom.engine.adt.tomslot.types.PairNameDeclList )tom_get_tail_concPairNameDecl_PairNameDeclList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSlot( tom.engine.adt.tomslot.types.SlotList  t) {  return  t instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot || t instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_empty_list_concSlot() { return  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ; }private static  tom.engine.adt.tomslot.types.SlotList  tom_cons_list_concSlot( tom.engine.adt.tomslot.types.Slot  e,  tom.engine.adt.tomslot.types.SlotList  l) { return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.engine.adt.tomslot.types.Slot  tom_get_head_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.getHeadconcSlot()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_tail_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.getTailconcSlot()  ;}private static boolean tom_is_empty_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.isEmptyconcSlot()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList  l1,  tom.engine.adt.tomslot.types.SlotList  l2) {    if(tom_is_empty_concSlot_SlotList(l1)) {     return l2;    } else if(tom_is_empty_concSlot_SlotList(l2)) {     return l1;    } else if(tom_is_empty_concSlot_SlotList(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(l1))) {     return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(l1),l2);    } else {      return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(l1),l2));    }   }  private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end) {    if(tom_equal_term_SlotList(begin,end)) {      return ( tom.engine.adt.tomslot.types.SlotList )tom_empty_list_concSlot();    } else {      return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(begin),( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(begin),end));    }   }   /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_Strategy(Object t1, Object t2) {  return t1.equals(t2) ;}private static boolean tom_is_sort_Strategy(Object t) {  return  t instanceof tom.library.strategy.mutraveler.MuStrategy  ;}private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_mu( tom.library.strategy.mutraveler.MuStrategy  var,  tom.library.strategy.mutraveler.MuStrategy  v) { return  new tom.library.strategy.mutraveler.Mu(var,v) ; }/* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Identity() { return  new tom.library.strategy.mutraveler.Identity() ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Fail() { return  new tom.library.strategy.mutraveler.Fail() ; }private static boolean tom_is_fun_sym_Sequence( tom.library.strategy.mutraveler.MuStrategy  t) {  return  (t instanceof tom.library.strategy.mutraveler.Sequence)  ;}private static  tom.library.strategy.mutraveler.MuStrategy  tom_empty_list_Sequence() { return  new tom.library.strategy.mutraveler.Identity() ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_cons_list_Sequence( tom.library.strategy.mutraveler.MuStrategy  head,  tom.library.strategy.mutraveler.MuStrategy  tail) { return  new tom.library.strategy.mutraveler.Sequence(head,tail) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_get_head_Sequence_Strategy( tom.library.strategy.mutraveler.MuStrategy  t) {  return  (tom.library.strategy.mutraveler.MuStrategy)t.getChildAt(tom.library.strategy.mutraveler.Sequence.FIRST)  ;}private static  tom.library.strategy.mutraveler.MuStrategy  tom_get_tail_Sequence_Strategy( tom.library.strategy.mutraveler.MuStrategy  t) {  return  (tom.library.strategy.mutraveler.MuStrategy)t.getChildAt(tom.library.strategy.mutraveler.Sequence.THEN)  ;}private static boolean tom_is_empty_Sequence_Strategy( tom.library.strategy.mutraveler.MuStrategy  t) {  return  t instanceof tom.library.strategy.mutraveler.Identity  ;}private static  tom.library.strategy.mutraveler.MuStrategy  tom_append_list_Sequence( tom.library.strategy.mutraveler.MuStrategy  l1,  tom.library.strategy.mutraveler.MuStrategy  l2) {    if(tom_is_empty_Sequence_Strategy(l1)) {     return l2;    } else if(tom_is_empty_Sequence_Strategy(l2)) {     return l1;    } else if(tom_is_fun_sym_Sequence(l1)) {       if(tom_is_empty_Sequence_Strategy(( tom.library.strategy.mutraveler.MuStrategy )tom_get_tail_Sequence_Strategy(l1))) {        return ( tom.library.strategy.mutraveler.MuStrategy )tom_cons_list_Sequence(( tom.library.strategy.mutraveler.MuStrategy )tom_get_head_Sequence_Strategy(l1),l2);      } else {        return ( tom.library.strategy.mutraveler.MuStrategy )tom_cons_list_Sequence(( tom.library.strategy.mutraveler.MuStrategy )tom_get_head_Sequence_Strategy(l1),tom_append_list_Sequence(( tom.library.strategy.mutraveler.MuStrategy )tom_get_tail_Sequence_Strategy(l1),l2));      }    } else {      return ( tom.library.strategy.mutraveler.MuStrategy )tom_cons_list_Sequence(l1 , l2);    }   }  private static  tom.library.strategy.mutraveler.MuStrategy  tom_get_slice_Sequence( tom.library.strategy.mutraveler.MuStrategy  begin,  tom.library.strategy.mutraveler.MuStrategy  end) {    if(tom_equal_term_Strategy(begin,end)) {      return ( tom.library.strategy.mutraveler.MuStrategy )tom_empty_list_Sequence();    } else {      return ( tom.library.strategy.mutraveler.MuStrategy )tom_cons_list_Sequence(( tom.library.strategy.mutraveler.MuStrategy )tom_get_head_Sequence_Strategy(begin),( tom.library.strategy.mutraveler.MuStrategy )tom_get_slice_Sequence(( tom.library.strategy.mutraveler.MuStrategy )tom_get_tail_Sequence_Strategy(begin),end));    }   }  private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Choice( tom.library.strategy.mutraveler.MuStrategy  first,  tom.library.strategy.mutraveler.MuStrategy  then) { return  new tom.library.strategy.mutraveler.Choice(first,then) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_All( tom.library.strategy.mutraveler.MuStrategy  v) { return  new tom.library.strategy.mutraveler.All(v) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_MuVar( String  name) { return  new tom.library.strategy.mutraveler.MuVar(name) ; } /* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Try( tom.library.strategy.mutraveler.MuStrategy  v) { return tom_make_Choice(v,tom_make_Identity()) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_TopDownCollect( tom.library.strategy.mutraveler.MuStrategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_make_Try(tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence())))) ; }   





 public final static String DEFAULT_MODULE_NAME = "default"; 
  
  /** shortcut */
  
  /* Generated by TOM (version 2.5alpha): Do not edit this file */ 
  
  protected static TomList cons(TomTerm t, TomList l) {
    if(t!=null) {
      return tom_cons_list_concTomTerm(t,tom_append_list_concTomTerm(l,tom_empty_list_concTomTerm()));
    } else {
      System.out.println("cons: Warning t == null");
      return l;
    }
  }

  protected static TomNumberList appendNumber(int n, TomNumberList path) {
    /*
     * concTomNumber(path*,Position(n))
     * can be used instead of 
     * concTomNumber(path*,NameNumber(PositionName(concTomNumber(Position(n)))))
     * thanks to hooks defined in TomName.gom
     */
    return tom_append_list_concTomNumber(path,tom_cons_list_concTomNumber(tom_make_Position(n),tom_empty_list_concTomNumber()));
    //return `concTomNumber(path*,NameNumber(PositionName(concTomNumber(Position(n)))));
  }
    
  protected static TomList append(TomTerm t, TomList l) {
    if(l.isEmptyconcTomTerm()) {
      return cons(t,l);
    } else {
      return cons(l.getHeadconcTomTerm(), append(t,l.getTailconcTomTerm()));
    }
  }

  protected static TomList concat(TomList l1, TomList l2) {
    if(l1.isEmptyconcTomTerm()) {
      return l2;
    } else {
      return cons(l1.getHeadconcTomTerm(), concat(l1.getTailconcTomTerm(),l2));
    }
  }

  public static String getTomType(TomType type) {
     if (tom_is_sort_TomType(type)) { { tom.engine.adt.tomtype.types.TomType  tomMatch1Position1=(( tom.engine.adt.tomtype.types.TomType )type); if ( ( tom_is_fun_sym_ASTTomType(tomMatch1Position1) ||  false  ) ) { { String  tom_s=tom_get_slot_ASTTomType_String(tomMatch1Position1); if ( true ) {
return tom_s; } } } if ( ( tom_is_fun_sym_TomTypeAlone(tomMatch1Position1) ||  false  ) ) { { String  tom_s=tom_get_slot_TomTypeAlone_String(tomMatch1Position1); if ( true ) {
return tom_s; } } } if ( ( tom_is_fun_sym_Type(tomMatch1Position1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tomMatch1Position1NameNumberTomType=tom_get_slot_Type_TomType(tomMatch1Position1); if ( ( tom_is_fun_sym_ASTTomType(tomMatch1Position1NameNumberTomType) ||  false  ) ) { { String  tom_s=tom_get_slot_ASTTomType_String(tomMatch1Position1NameNumberTomType); if ( true ) {
return tom_s; } } } } } if ( ( tom_is_fun_sym_EmptyType(tomMatch1Position1) ||  false  ) ) { if ( true ) {
return null; } } } }

    System.out.println("getTomType error on term: " + type);
    throw new TomRuntimeException("getTomType error on term: " + type);
  }

  protected static String getTLType(TomType type) {
     if (tom_is_sort_TomType(type)) { { tom.engine.adt.tomtype.types.TomType  tomMatch2Position1=(( tom.engine.adt.tomtype.types.TomType )type); if ( ( tom_is_fun_sym_TLType(tomMatch2Position1) ||  false  ) ) { if ( true ) {
 return getTLCode(type);  } } if ( ( tom_is_fun_sym_Type(tomMatch2Position1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_get_slot_Type_TlType(tomMatch2Position1); if ( true ) {
 return getTLCode(tom_tlType);  } } } } }

    throw new TomRuntimeException("getTLType error on term: " + type);
  }

  protected static String getTLCode(TomType type) {
     if (tom_is_sort_TomType(type)) { { tom.engine.adt.tomtype.types.TomType  tomMatch3Position1=(( tom.engine.adt.tomtype.types.TomType )type); if ( ( tom_is_fun_sym_TLType(tomMatch3Position1) ||  false  ) ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch3Position1NameNumberTl=tom_get_slot_TLType_Tl(tomMatch3Position1); if ( ( tom_is_fun_sym_TL(tomMatch3Position1NameNumberTl) ||  false  ) ) { { String  tom_tlType=tom_get_slot_TL_Code(tomMatch3Position1NameNumberTl); if ( true ) {
 return tom_tlType;  } } } } } if ( ( tom_is_fun_sym_TLType(tomMatch3Position1) ||  false  ) ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch3Position1NameNumberTl=tom_get_slot_TLType_Tl(tomMatch3Position1); if ( ( tom_is_fun_sym_ITL(tomMatch3Position1NameNumberTl) ||  false  ) ) { { String  tom_tlType=tom_get_slot_ITL_Code(tomMatch3Position1NameNumberTl); if ( true ) {
 return tom_tlType;  } } } } } } }

    System.out.println("getTLCode error on term: " + type);
    throw new TomRuntimeException("getTLCode error on term: " + type);
  }

  public static TomType getSymbolCodomain(TomSymbol symbol) {
    if(symbol!=null) {
      return symbol.getTypesToType().getCodomain();
    } else {
      //System.out.println("getSymbolCodomain: symbol = " + symbol);
      return tom_make_EmptyType();
    }
  }   

  public static TomTypeList getSymbolDomain(TomSymbol symbol) {
    if(symbol!=null) {
      return symbol.getTypesToType().getDomain();
    } else {
      //System.out.println("getSymbolDomain: symbol = " + symbol);
      return tom_empty_list_concTomType();
    }
  }

  private static HashMap tomNumberListToStringMap = new HashMap();
  protected static String tomNumberListToString(TomNumberList numberList) {
    String result = (String)tomNumberListToStringMap.get(numberList);
    if(result == null) {
      TomNumberList key = numberList;
      StringBuffer buf = new StringBuffer(30);
      while(!numberList.isEmptyconcTomNumber()) {
	TomNumber number = numberList.getHeadconcTomNumber();
	numberList = numberList.getTailconcTomNumber();
	 if (tom_is_sort_TomNumber(number)) { { tom.engine.adt.tomname.types.TomNumber  tomMatch4Position1=(( tom.engine.adt.tomname.types.TomNumber )number); if ( ( tom_is_fun_sym_Position(tomMatch4Position1) ||  false  ) ) { { int  tom_n=tom_get_slot_Position_Integer(tomMatch4Position1); if ( true ) {

	    buf.append("Position");
	    buf.append(Integer.toString(tom_n));
	   } } } if ( ( tom_is_fun_sym_MatchNumber(tomMatch4Position1) ||  false  ) ) { { int  tom_n=tom_get_slot_MatchNumber_Integer(tomMatch4Position1); if ( true ) {

	    buf.append("Match");
	    buf.append(Integer.toString(tom_n));
	   } } } if ( ( tom_is_fun_sym_PatternNumber(tomMatch4Position1) ||  false  ) ) { { int  tom_n=tom_get_slot_PatternNumber_Integer(tomMatch4Position1); if ( true ) {

	    buf.append("Pattern");
	    buf.append(Integer.toString(tom_n));
	   } } } if ( ( tom_is_fun_sym_ListNumber(tomMatch4Position1) ||  false  ) ) { { int  tom_n=tom_get_slot_ListNumber_Integer(tomMatch4Position1); if ( true ) {

	    buf.append("List");
	    buf.append(Integer.toString(tom_n));
	   } } } if ( ( tom_is_fun_sym_IndexNumber(tomMatch4Position1) ||  false  ) ) { { int  tom_n=tom_get_slot_IndexNumber_Integer(tomMatch4Position1); if ( true ) {

	    buf.append("Index");
	    buf.append(Integer.toString(tom_n));
	   } } } if ( ( tom_is_fun_sym_Begin(tomMatch4Position1) ||  false  ) ) { { int  tom_n=tom_get_slot_Begin_Integer(tomMatch4Position1); if ( true ) {

	    buf.append("Begin");
	    buf.append(Integer.toString(tom_n));
	   } } } if ( ( tom_is_fun_sym_End(tomMatch4Position1) ||  false  ) ) { { int  tom_n=tom_get_slot_End_Integer(tomMatch4Position1); if ( true ) {

	    buf.append("End");
	    buf.append(Integer.toString(tom_n));
	   } } } if ( ( tom_is_fun_sym_Save(tomMatch4Position1) ||  false  ) ) { { int  tom_n=tom_get_slot_Save_Integer(tomMatch4Position1); if ( true ) {

	    buf.append("Save");
	    buf.append(Integer.toString(tom_n));
	   } } } if ( ( tom_is_fun_sym_AbsVar(tomMatch4Position1) ||  false  ) ) { { int  tom_n=tom_get_slot_AbsVar_Integer(tomMatch4Position1); if ( true ) {

	    buf.append("AbsVar");
	    buf.append(Integer.toString(tom_n));
	   } } } if ( ( tom_is_fun_sym_RenamedVar(tomMatch4Position1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_tomName=tom_get_slot_RenamedVar_AstName(tomMatch4Position1); if ( true ) {

	    String identifier = "Empty";
	     if (tom_is_sort_TomName(tom_tomName)) { { tom.engine.adt.tomname.types.TomName  tomMatch5Position1=(( tom.engine.adt.tomname.types.TomName )tom_tomName); if ( ( tom_is_fun_sym_Name(tomMatch5Position1) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tomMatch5Position1); if ( true ) {

		identifier = tom_name;
	       } } } if ( ( tom_is_fun_sym_PositionName(tomMatch5Position1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomNumberList  tom_localNumberList=tom_get_slot_PositionName_NumberList(tomMatch5Position1); if ( true ) {

		identifier = tomNumberListToString(tom_localNumberList);
	       } } } } }

	    buf.append("RenamedVar");
	    buf.append(identifier);
	   } } } if ( ( tom_is_fun_sym_NameNumber(tomMatch4Position1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_tomName=tom_get_slot_NameNumber_AstName(tomMatch4Position1); if ( true ) {

	    String identifier = "Empty";
	     if (tom_is_sort_TomName(tom_tomName)) { { tom.engine.adt.tomname.types.TomName  tomMatch6Position1=(( tom.engine.adt.tomname.types.TomName )tom_tomName); if ( ( tom_is_fun_sym_Name(tomMatch6Position1) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tomMatch6Position1); if ( true ) {

		identifier = tom_name;
	       } } } if ( ( tom_is_fun_sym_PositionName(tomMatch6Position1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomNumberList  tom_localNumberList=tom_get_slot_PositionName_NumberList(tomMatch6Position1); if ( true ) {

		identifier = tomNumberListToString(tom_localNumberList);
	       } } } } }

	    buf.append("NameNumber");
	    buf.append(identifier);
	   } } } if ( ( tom_is_fun_sym_RuleVar(tomMatch4Position1) ||  false  ) ) { if ( true ) {

	    //buf.insert(0,"RuleVar");
	    buf.append("RuleVar");
	   } } } }

      }
      result = buf.toString();
      tomNumberListToStringMap.put(key,result);
    }
    return result;
  }

  public static boolean isListOperator(TomSymbol subject) {
    if(subject==null) {
      return false;
    }
     if (tom_is_sort_TomSymbol(subject)) { { tom.engine.adt.tomsignature.types.TomSymbol  tomMatch7Position1=(( tom.engine.adt.tomsignature.types.TomSymbol )subject); if ( ( tom_is_fun_sym_Symbol(tomMatch7Position1) ||  false  ) ) { { tom.engine.adt.tomoption.types.OptionList  tom_l=tom_get_slot_Symbol_Option(tomMatch7Position1); if ( true ) {

        OptionList optionList = tom_l;
        while(!optionList.isEmptyconcOption()) {
          Option opt = optionList.getHeadconcOption();
           if (tom_is_sort_Option(opt)) { { tom.engine.adt.tomoption.types.Option  tomMatch8Position1=(( tom.engine.adt.tomoption.types.Option )opt); if ( ( tom_is_fun_sym_DeclarationToOption(tomMatch8Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_MakeEmptyList(tom_get_slot_DeclarationToOption_AstDeclaration(tomMatch8Position1)) ||  false  ) ) { if ( true ) {
 return true;  } } } if ( ( tom_is_fun_sym_DeclarationToOption(tomMatch8Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_MakeAddList(tom_get_slot_DeclarationToOption_AstDeclaration(tomMatch8Position1)) ||  false  ) ) { if ( true ) {
 return true;  } } } } }

          optionList = optionList.getTailconcOption();
        }
        return false;
       } } } } }

    System.out.println("isListOperator: strange case: '" + subject + "'");
    throw new TomRuntimeException("isListOperator: strange case: '" + subject + "'");
  }

  protected static boolean isArrayOperator(TomSymbol subject) {
    if(subject==null) {
      return false;
    }
     if (tom_is_sort_TomSymbol(subject)) { { tom.engine.adt.tomsignature.types.TomSymbol  tomMatch9Position1=(( tom.engine.adt.tomsignature.types.TomSymbol )subject); if ( ( tom_is_fun_sym_Symbol(tomMatch9Position1) ||  false  ) ) { { tom.engine.adt.tomoption.types.OptionList  tom_l=tom_get_slot_Symbol_Option(tomMatch9Position1); if ( true ) {

        OptionList optionList = tom_l;
        while(!optionList.isEmptyconcOption()) {
          Option opt = optionList.getHeadconcOption();
           if (tom_is_sort_Option(opt)) { { tom.engine.adt.tomoption.types.Option  tomMatch10Position1=(( tom.engine.adt.tomoption.types.Option )opt); if ( ( tom_is_fun_sym_DeclarationToOption(tomMatch10Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_MakeEmptyArray(tom_get_slot_DeclarationToOption_AstDeclaration(tomMatch10Position1)) ||  false  ) ) { if ( true ) {
 return true;  } } } if ( ( tom_is_fun_sym_DeclarationToOption(tomMatch10Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_MakeAddArray(tom_get_slot_DeclarationToOption_AstDeclaration(tomMatch10Position1)) ||  false  ) ) { if ( true ) {
 return true;  } } } } }

          optionList = optionList.getTailconcOption();
        }
        return false;
       } } } } }

    System.out.println("isArrayOperator: strange case: '" + subject + "'");
    throw new TomRuntimeException("isArrayOperator: strange case: '" + subject + "'");
  }
  
  protected static boolean isSyntacticOperator(TomSymbol subject) {
    return (!(isListOperator(subject) || isArrayOperator(subject)));
  }


  // ------------------------------------------------------------
  public static void collectVariable(Collection collection, jjtraveler.Visitable subject) {
    tom_make_TopDownCollect(tom_make_collectVariable(collection)).apply(subject);
  }

   private static class collectVariable  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  java.util.Collection  collection;  public collectVariable(  java.util.Collection  collection ) { super(tom_make_Identity() ); this.collection=collection; } public  java.util.Collection  getcollection() { return collection;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_TomTerm(tom__arg)) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch11Position1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); {boolean tomNameNumberboolMatch11Position1= false ; { tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch11Position1NameNumberConstraints= null ; if (tom_is_fun_sym_Variable(tomMatch11Position1)) {tomNameNumberboolMatch11Position1= true ;tomMatch11Position1NameNumberConstraints=tom_get_slot_Variable_Constraints(tomMatch11Position1); } else { if (tom_is_fun_sym_VariableStar(tomMatch11Position1)) {tomNameNumberboolMatch11Position1= true ;tomMatch11Position1NameNumberConstraints=tom_get_slot_VariableStar_Constraints(tomMatch11Position1); } } if (tomNameNumberboolMatch11Position1) { { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraintList=tomMatch11Position1NameNumberConstraints; { tom.engine.adt.tomterm.types.TomTerm  tom_v=tomMatch11Position1; if ( true ) {


        collection.add(tom_v);
        TomTerm annotedVariable = getAssignToVariable(tom_constraintList);
        if(annotedVariable!=null) {
          collection.add(annotedVariable);
        }
        tom_make_Fail().visit(tom_v);
       } } } } } } {boolean tomNameNumberboolMatch11Position1= false ; { tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch11Position1NameNumberConstraints= null ; if (tom_is_fun_sym_UnamedVariable(tomMatch11Position1)) {tomNameNumberboolMatch11Position1= true ;tomMatch11Position1NameNumberConstraints=tom_get_slot_UnamedVariable_Constraints(tomMatch11Position1); } else { if (tom_is_fun_sym_UnamedVariableStar(tomMatch11Position1)) {tomNameNumberboolMatch11Position1= true ;tomMatch11Position1NameNumberConstraints=tom_get_slot_UnamedVariableStar_Constraints(tomMatch11Position1); } } if (tomNameNumberboolMatch11Position1) { { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraintList=tomMatch11Position1NameNumberConstraints; { tom.engine.adt.tomterm.types.TomTerm  tom_v=tomMatch11Position1; if ( true ) {


        TomTerm annotedVariable = getAssignToVariable(tom_constraintList);
        if(annotedVariable!=null) {
          collection.add(annotedVariable);
        }
        tom_make_Fail().visit(tom_v);
       } } } } } } if ( ( tom_is_fun_sym_RecordAppl(tomMatch11Position1) ||  false  ) ) { { tom.engine.adt.tomslot.types.SlotList  tom_subterms=tom_get_slot_RecordAppl_Slots(tomMatch11Position1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraintList=tom_get_slot_RecordAppl_Constraints(tomMatch11Position1); { tom.engine.adt.tomterm.types.TomTerm  tom_t=tomMatch11Position1; if ( true ) {



        collectVariable(collection,tom_subterms);
        TomTerm annotedVariable = getAssignToVariable(tom_constraintList);
        if(annotedVariable!=null) {
          collection.add(annotedVariable);
        }
        tom_make_Fail().visit(tom_t);
       } } } } } } } return super.visit_TomTerm(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_collectVariable( java.util.Collection  t0) { return new collectVariable(t0); }




  public static Map collectMultiplicity(jjtraveler.Visitable subject) {
    // collect variables
    ArrayList variableList = new ArrayList();
    collectVariable(variableList,subject);
    // compute multiplicities
    HashMap multiplicityMap = new HashMap();
    Iterator it = variableList.iterator();
    while(it.hasNext()) {
      TomTerm variable = (TomTerm)it.next();
      TomName name = variable.getAstName();
      if(multiplicityMap.containsKey(name)) {
        Integer value = (Integer)multiplicityMap.get(name);
        multiplicityMap.put(name, new Integer(1+value.intValue()));
      } else {
        multiplicityMap.put(name, new Integer(1));
      }
    }
    return multiplicityMap;
  }

  protected boolean isAnnotedVariable(TomTerm t) {
     if (tom_is_sort_TomTerm(t)) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch12Position1=(( tom.engine.adt.tomterm.types.TomTerm )t); {boolean tomNameNumberboolMatch12Position1= false ; { tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch12Position1NameNumberConstraints= null ; if (tom_is_fun_sym_RecordAppl(tomMatch12Position1)) {tomNameNumberboolMatch12Position1= true ;tomMatch12Position1NameNumberConstraints=tom_get_slot_RecordAppl_Constraints(tomMatch12Position1); } else { if (tom_is_fun_sym_Variable(tomMatch12Position1)) {tomNameNumberboolMatch12Position1= true ;tomMatch12Position1NameNumberConstraints=tom_get_slot_Variable_Constraints(tomMatch12Position1); } else { if (tom_is_fun_sym_VariableStar(tomMatch12Position1)) {tomNameNumberboolMatch12Position1= true ;tomMatch12Position1NameNumberConstraints=tom_get_slot_VariableStar_Constraints(tomMatch12Position1); } else { if (tom_is_fun_sym_UnamedVariable(tomMatch12Position1)) {tomNameNumberboolMatch12Position1= true ;tomMatch12Position1NameNumberConstraints=tom_get_slot_UnamedVariable_Constraints(tomMatch12Position1); } else { if (tom_is_fun_sym_UnamedVariableStar(tomMatch12Position1)) {tomNameNumberboolMatch12Position1= true ;tomMatch12Position1NameNumberConstraints=tom_get_slot_UnamedVariableStar_Constraints(tomMatch12Position1); } } } } } if (tomNameNumberboolMatch12Position1) { { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraintList=tomMatch12Position1NameNumberConstraints; if ( true ) {

        return getAssignToVariable(tom_constraintList)!=null;
       } } } } } } }

    return false;
  }

  public static TomTerm getAssignToVariable(ConstraintList constraintList) {
     if (tom_is_sort_ConstraintList(constraintList)) { { tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch13Position1=(( tom.engine.adt.tomconstraint.types.ConstraintList )constraintList); if ( ( tom_is_fun_sym_concConstraint(tomMatch13Position1) ||  false  ) ) { {int tomMatch13Position1Index1=0; { tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch13Position1List1=tomMatch13Position1; { tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch13Position1Begin1=tomMatch13Position1List1; { tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch13Position1End1=tomMatch13Position1List1; { while (!(tom_is_empty_concConstraint_ConstraintList(tomMatch13Position1End1))) {tomMatch13Position1List1=tomMatch13Position1End1; { { tom.engine.adt.tomconstraint.types.ConstraintList  tomMatch13Position1Save2=tomMatch13Position1List1; { { tom.engine.adt.tomconstraint.types.Constraint  tomMatch13Position1Position2=tom_get_head_concConstraint_ConstraintList(tomMatch13Position1List1);tomMatch13Position1Index1=tomMatch13Position1Index1 + 1;tomMatch13Position1List1=tom_get_tail_concConstraint_ConstraintList(tomMatch13Position1List1); if ( ( tom_is_fun_sym_AssignTo(tomMatch13Position1Position2) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch13Position1Position2NameNumberVariable=tom_get_slot_AssignTo_Variable(tomMatch13Position1Position2); if ( ( tom_is_fun_sym_Variable(tomMatch13Position1Position2NameNumberVariable) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_var=tomMatch13Position1Position2NameNumberVariable; if ( true ) {
 return tom_var;  } } } } } }tomMatch13Position1List1=tomMatch13Position1Save2; } }tomMatch13Position1End1=tom_get_tail_concConstraint_ConstraintList(tomMatch13Position1End1); } }tomMatch13Position1List1=tomMatch13Position1Begin1; } } } } } } } }

    return null;
  }

  protected static boolean hasTheory(OptionList optionList, ElementaryTheory elementaryTheory) {
     if (tom_is_sort_OptionList(optionList)) { { tom.engine.adt.tomoption.types.OptionList  tomMatch14Position1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if ( ( tom_is_fun_sym_concOption(tomMatch14Position1) ||  false  ) ) { {int tomMatch14Position1Index1=0; { tom.engine.adt.tomoption.types.OptionList  tomMatch14Position1List1=tomMatch14Position1; { tom.engine.adt.tomoption.types.OptionList  tomMatch14Position1Begin1=tomMatch14Position1List1; { tom.engine.adt.tomoption.types.OptionList  tomMatch14Position1End1=tomMatch14Position1List1; { while (!(tom_is_empty_concOption_OptionList(tomMatch14Position1End1))) {tomMatch14Position1List1=tomMatch14Position1End1; { { tom.engine.adt.tomoption.types.OptionList  tomMatch14Position1Save2=tomMatch14Position1List1; { { tom.engine.adt.tomoption.types.Option  tomMatch14Position1Position2=tom_get_head_concOption_OptionList(tomMatch14Position1List1);tomMatch14Position1Index1=tomMatch14Position1Index1 + 1;tomMatch14Position1List1=tom_get_tail_concOption_OptionList(tomMatch14Position1List1); if ( ( tom_is_fun_sym_MatchingTheory(tomMatch14Position1Position2) ||  false  ) ) { { tom.engine.adt.theory.types.Theory  tomMatch14Position1Position2NameNumberTheory=tom_get_slot_MatchingTheory_Theory(tomMatch14Position1Position2); if ( ( tom_is_fun_sym_concElementaryTheory(tomMatch14Position1Position2NameNumberTheory) ||  false  ) ) { {int tomMatch14Position1Position2NameNumberTheoryIndex1=0; { tom.engine.adt.theory.types.Theory  tomMatch14Position1Position2NameNumberTheoryList1=tomMatch14Position1Position2NameNumberTheory; { tom.engine.adt.theory.types.Theory  tomMatch14Position1Position2NameNumberTheoryBegin1=tomMatch14Position1Position2NameNumberTheoryList1; { tom.engine.adt.theory.types.Theory  tomMatch14Position1Position2NameNumberTheoryEnd1=tomMatch14Position1Position2NameNumberTheoryList1; { while (!(tom_is_empty_concElementaryTheory_Theory(tomMatch14Position1Position2NameNumberTheoryEnd1))) {tomMatch14Position1Position2NameNumberTheoryList1=tomMatch14Position1Position2NameNumberTheoryEnd1; { { tom.engine.adt.theory.types.Theory  tomMatch14Position1Position2NameNumberTheorySave2=tomMatch14Position1Position2NameNumberTheoryList1; { { tom.engine.adt.theory.types.ElementaryTheory  tom_theory=tom_get_head_concElementaryTheory_Theory(tomMatch14Position1Position2NameNumberTheoryList1);tomMatch14Position1Position2NameNumberTheoryIndex1=tomMatch14Position1Position2NameNumberTheoryIndex1 + 1;tomMatch14Position1Position2NameNumberTheoryList1=tom_get_tail_concElementaryTheory_Theory(tomMatch14Position1Position2NameNumberTheoryList1); if ( true ) {
 if(elementaryTheory == tom_theory) return true;  } }tomMatch14Position1Position2NameNumberTheoryList1=tomMatch14Position1Position2NameNumberTheorySave2; } }tomMatch14Position1Position2NameNumberTheoryEnd1=tom_get_tail_concElementaryTheory_Theory(tomMatch14Position1Position2NameNumberTheoryEnd1); } }tomMatch14Position1Position2NameNumberTheoryList1=tomMatch14Position1Position2NameNumberTheoryBegin1; } } } } } } } } }tomMatch14Position1List1=tomMatch14Position1Save2; } }tomMatch14Position1End1=tom_get_tail_concOption_OptionList(tomMatch14Position1End1); } }tomMatch14Position1List1=tomMatch14Position1Begin1; } } } } } } } }

    return false;
  }

  protected static Declaration getIsFsymDecl(OptionList optionList) {
     if (tom_is_sort_OptionList(optionList)) { { tom.engine.adt.tomoption.types.OptionList  tomMatch15Position1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if ( ( tom_is_fun_sym_concOption(tomMatch15Position1) ||  false  ) ) { {int tomMatch15Position1Index1=0; { tom.engine.adt.tomoption.types.OptionList  tomMatch15Position1List1=tomMatch15Position1; { tom.engine.adt.tomoption.types.OptionList  tomMatch15Position1Begin1=tomMatch15Position1List1; { tom.engine.adt.tomoption.types.OptionList  tomMatch15Position1End1=tomMatch15Position1List1; { while (!(tom_is_empty_concOption_OptionList(tomMatch15Position1End1))) {tomMatch15Position1List1=tomMatch15Position1End1; { { tom.engine.adt.tomoption.types.OptionList  tomMatch15Position1Save2=tomMatch15Position1List1; { { tom.engine.adt.tomoption.types.Option  tomMatch15Position1Position2=tom_get_head_concOption_OptionList(tomMatch15Position1List1);tomMatch15Position1Index1=tomMatch15Position1Index1 + 1;tomMatch15Position1List1=tom_get_tail_concOption_OptionList(tomMatch15Position1List1); if ( ( tom_is_fun_sym_DeclarationToOption(tomMatch15Position1Position2) ||  false  ) ) { { tom.engine.adt.tomdeclaration.types.Declaration  tomMatch15Position1Position2NameNumberAstDeclaration=tom_get_slot_DeclarationToOption_AstDeclaration(tomMatch15Position1Position2); if ( ( tom_is_fun_sym_IsFsymDecl(tomMatch15Position1Position2NameNumberAstDeclaration) ||  false  ) ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_decl=tomMatch15Position1Position2NameNumberAstDeclaration; if ( true ) {
 return tom_decl;  } } } } } }tomMatch15Position1List1=tomMatch15Position1Save2; } }tomMatch15Position1End1=tom_get_tail_concOption_OptionList(tomMatch15Position1End1); } }tomMatch15Position1List1=tomMatch15Position1Begin1; } } } } } } } }

    return null;
  }

  protected static boolean hasIsFsymDecl(TomSymbol tomSymbol) {
     if (tom_is_sort_TomSymbol(tomSymbol)) { { tom.engine.adt.tomsignature.types.TomSymbol  tomMatch16Position1=(( tom.engine.adt.tomsignature.types.TomSymbol )tomSymbol); if ( ( tom_is_fun_sym_Symbol(tomMatch16Position1) ||  false  ) ) { { tom.engine.adt.tomoption.types.OptionList  tomMatch16Position1NameNumberOption=tom_get_slot_Symbol_Option(tomMatch16Position1); if ( ( tom_is_fun_sym_concOption(tomMatch16Position1NameNumberOption) ||  false  ) ) { {int tomMatch16Position1NameNumberOptionIndex1=0; { tom.engine.adt.tomoption.types.OptionList  tomMatch16Position1NameNumberOptionList1=tomMatch16Position1NameNumberOption; { tom.engine.adt.tomoption.types.OptionList  tomMatch16Position1NameNumberOptionBegin1=tomMatch16Position1NameNumberOptionList1; { tom.engine.adt.tomoption.types.OptionList  tomMatch16Position1NameNumberOptionEnd1=tomMatch16Position1NameNumberOptionList1; { while (!(tom_is_empty_concOption_OptionList(tomMatch16Position1NameNumberOptionEnd1))) {tomMatch16Position1NameNumberOptionList1=tomMatch16Position1NameNumberOptionEnd1; { { tom.engine.adt.tomoption.types.OptionList  tomMatch16Position1NameNumberOptionSave2=tomMatch16Position1NameNumberOptionList1; { { tom.engine.adt.tomoption.types.Option  tomMatch16Position1NameNumberOptionPosition2=tom_get_head_concOption_OptionList(tomMatch16Position1NameNumberOptionList1);tomMatch16Position1NameNumberOptionIndex1=tomMatch16Position1NameNumberOptionIndex1 + 1;tomMatch16Position1NameNumberOptionList1=tom_get_tail_concOption_OptionList(tomMatch16Position1NameNumberOptionList1); if ( ( tom_is_fun_sym_DeclarationToOption(tomMatch16Position1NameNumberOptionPosition2) ||  false  ) ) { { tom.engine.adt.tomdeclaration.types.Declaration  tomMatch16Position1NameNumberOptionPosition2NameNumberAstDeclaration=tom_get_slot_DeclarationToOption_AstDeclaration(tomMatch16Position1NameNumberOptionPosition2); if ( ( tom_is_fun_sym_IsFsymDecl(tomMatch16Position1NameNumberOptionPosition2NameNumberAstDeclaration) ||  false  ) ) { if ( true ) {

        return true;
       } } } } }tomMatch16Position1NameNumberOptionList1=tomMatch16Position1NameNumberOptionSave2; } }tomMatch16Position1NameNumberOptionEnd1=tom_get_tail_concOption_OptionList(tomMatch16Position1NameNumberOptionEnd1); } }tomMatch16Position1NameNumberOptionList1=tomMatch16Position1NameNumberOptionBegin1; } } } } } } } } } }

    return false;
  }
  
  
  protected static String getModuleName(OptionList optionList) {
     if (tom_is_sort_OptionList(optionList)) { { tom.engine.adt.tomoption.types.OptionList  tomMatch17Position1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if ( ( tom_is_fun_sym_concOption(tomMatch17Position1) ||  false  ) ) { {int tomMatch17Position1Index1=0; { tom.engine.adt.tomoption.types.OptionList  tomMatch17Position1List1=tomMatch17Position1; { tom.engine.adt.tomoption.types.OptionList  tomMatch17Position1Begin1=tomMatch17Position1List1; { tom.engine.adt.tomoption.types.OptionList  tomMatch17Position1End1=tomMatch17Position1List1; { while (!(tom_is_empty_concOption_OptionList(tomMatch17Position1End1))) {tomMatch17Position1List1=tomMatch17Position1End1; { { tom.engine.adt.tomoption.types.OptionList  tomMatch17Position1Save2=tomMatch17Position1List1; { { tom.engine.adt.tomoption.types.Option  tomMatch17Position1Position2=tom_get_head_concOption_OptionList(tomMatch17Position1List1);tomMatch17Position1Index1=tomMatch17Position1Index1 + 1;tomMatch17Position1List1=tom_get_tail_concOption_OptionList(tomMatch17Position1List1); if ( ( tom_is_fun_sym_ModuleName(tomMatch17Position1Position2) ||  false  ) ) { { String  tom_moduleName=tom_get_slot_ModuleName_String(tomMatch17Position1Position2); if ( true ) {
 return tom_moduleName;  } } } }tomMatch17Position1List1=tomMatch17Position1Save2; } }tomMatch17Position1End1=tom_get_tail_concOption_OptionList(tomMatch17Position1End1); } }tomMatch17Position1List1=tomMatch17Position1Begin1; } } } } } } } }

    return null;
  }

  protected static String getDebug(OptionList optionList) {
     if (tom_is_sort_OptionList(optionList)) { { tom.engine.adt.tomoption.types.OptionList  tomMatch18Position1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if ( ( tom_is_fun_sym_concOption(tomMatch18Position1) ||  false  ) ) { {int tomMatch18Position1Index1=0; { tom.engine.adt.tomoption.types.OptionList  tomMatch18Position1List1=tomMatch18Position1; { tom.engine.adt.tomoption.types.OptionList  tomMatch18Position1Begin1=tomMatch18Position1List1; { tom.engine.adt.tomoption.types.OptionList  tomMatch18Position1End1=tomMatch18Position1List1; { while (!(tom_is_empty_concOption_OptionList(tomMatch18Position1End1))) {tomMatch18Position1List1=tomMatch18Position1End1; { { tom.engine.adt.tomoption.types.OptionList  tomMatch18Position1Save2=tomMatch18Position1List1; { { tom.engine.adt.tomoption.types.Option  tomMatch18Position1Position2=tom_get_head_concOption_OptionList(tomMatch18Position1List1);tomMatch18Position1Index1=tomMatch18Position1Index1 + 1;tomMatch18Position1List1=tom_get_tail_concOption_OptionList(tomMatch18Position1List1); if ( ( tom_is_fun_sym_Debug(tomMatch18Position1Position2) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tomMatch18Position1Position2NameNumberAstName=tom_get_slot_Debug_AstName(tomMatch18Position1Position2); if ( ( tom_is_fun_sym_Name(tomMatch18Position1Position2NameNumberAstName) ||  false  ) ) { { String  tom_str=tom_get_slot_Name_String(tomMatch18Position1Position2NameNumberAstName); if ( true ) {
 return tom_str;  } } } } } }tomMatch18Position1List1=tomMatch18Position1Save2; } }tomMatch18Position1End1=tom_get_tail_concOption_OptionList(tomMatch18Position1End1); } }tomMatch18Position1List1=tomMatch18Position1Begin1; } } } } } } } }

    return null;
  }

  protected static boolean hasGeneratedMatch(OptionList optionList) {
     if (tom_is_sort_OptionList(optionList)) { { tom.engine.adt.tomoption.types.OptionList  tomMatch19Position1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if ( ( tom_is_fun_sym_concOption(tomMatch19Position1) ||  false  ) ) { {int tomMatch19Position1Index1=0; { tom.engine.adt.tomoption.types.OptionList  tomMatch19Position1List1=tomMatch19Position1; { tom.engine.adt.tomoption.types.OptionList  tomMatch19Position1Begin1=tomMatch19Position1List1; { tom.engine.adt.tomoption.types.OptionList  tomMatch19Position1End1=tomMatch19Position1List1; { while (!(tom_is_empty_concOption_OptionList(tomMatch19Position1End1))) {tomMatch19Position1List1=tomMatch19Position1End1; { { tom.engine.adt.tomoption.types.OptionList  tomMatch19Position1Save2=tomMatch19Position1List1; { { tom.engine.adt.tomoption.types.Option  tomMatch19Position1Position2=tom_get_head_concOption_OptionList(tomMatch19Position1List1);tomMatch19Position1Index1=tomMatch19Position1Index1 + 1;tomMatch19Position1List1=tom_get_tail_concOption_OptionList(tomMatch19Position1List1); if ( ( tom_is_fun_sym_GeneratedMatch(tomMatch19Position1Position2) ||  false  ) ) { if ( true ) {
 return true;  } } }tomMatch19Position1List1=tomMatch19Position1Save2; } }tomMatch19Position1End1=tom_get_tail_concOption_OptionList(tomMatch19Position1End1); } }tomMatch19Position1List1=tomMatch19Position1Begin1; } } } } } } } }

    return false;
  }

  protected static boolean hasConstant(OptionList optionList) {
     if (tom_is_sort_OptionList(optionList)) { { tom.engine.adt.tomoption.types.OptionList  tomMatch20Position1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if ( ( tom_is_fun_sym_concOption(tomMatch20Position1) ||  false  ) ) { {int tomMatch20Position1Index1=0; { tom.engine.adt.tomoption.types.OptionList  tomMatch20Position1List1=tomMatch20Position1; { tom.engine.adt.tomoption.types.OptionList  tomMatch20Position1Begin1=tomMatch20Position1List1; { tom.engine.adt.tomoption.types.OptionList  tomMatch20Position1End1=tomMatch20Position1List1; { while (!(tom_is_empty_concOption_OptionList(tomMatch20Position1End1))) {tomMatch20Position1List1=tomMatch20Position1End1; { { tom.engine.adt.tomoption.types.OptionList  tomMatch20Position1Save2=tomMatch20Position1List1; { { tom.engine.adt.tomoption.types.Option  tomMatch20Position1Position2=tom_get_head_concOption_OptionList(tomMatch20Position1List1);tomMatch20Position1Index1=tomMatch20Position1Index1 + 1;tomMatch20Position1List1=tom_get_tail_concOption_OptionList(tomMatch20Position1List1); if ( ( tom_is_fun_sym_Constant(tomMatch20Position1Position2) ||  false  ) ) { if ( true ) {
 return true;  } } }tomMatch20Position1List1=tomMatch20Position1Save2; } }tomMatch20Position1End1=tom_get_tail_concOption_OptionList(tomMatch20Position1End1); } }tomMatch20Position1List1=tomMatch20Position1Begin1; } } } } } } } }

    return false;
  }

  protected static boolean hasDefinedSymbol(OptionList optionList) {
     if (tom_is_sort_OptionList(optionList)) { { tom.engine.adt.tomoption.types.OptionList  tomMatch21Position1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if ( ( tom_is_fun_sym_concOption(tomMatch21Position1) ||  false  ) ) { {int tomMatch21Position1Index1=0; { tom.engine.adt.tomoption.types.OptionList  tomMatch21Position1List1=tomMatch21Position1; { tom.engine.adt.tomoption.types.OptionList  tomMatch21Position1Begin1=tomMatch21Position1List1; { tom.engine.adt.tomoption.types.OptionList  tomMatch21Position1End1=tomMatch21Position1List1; { while (!(tom_is_empty_concOption_OptionList(tomMatch21Position1End1))) {tomMatch21Position1List1=tomMatch21Position1End1; { { tom.engine.adt.tomoption.types.OptionList  tomMatch21Position1Save2=tomMatch21Position1List1; { { tom.engine.adt.tomoption.types.Option  tomMatch21Position1Position2=tom_get_head_concOption_OptionList(tomMatch21Position1List1);tomMatch21Position1Index1=tomMatch21Position1Index1 + 1;tomMatch21Position1List1=tom_get_tail_concOption_OptionList(tomMatch21Position1List1); if ( ( tom_is_fun_sym_DefinedSymbol(tomMatch21Position1Position2) ||  false  ) ) { if ( true ) {
 return true;  } } }tomMatch21Position1List1=tomMatch21Position1Save2; } }tomMatch21Position1End1=tom_get_tail_concOption_OptionList(tomMatch21Position1End1); } }tomMatch21Position1List1=tomMatch21Position1Begin1; } } } } } } } }

    return false;
  }

  protected static boolean hasImplicitXMLAttribut(OptionList optionList) {
     if (tom_is_sort_OptionList(optionList)) { { tom.engine.adt.tomoption.types.OptionList  tomMatch22Position1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if ( ( tom_is_fun_sym_concOption(tomMatch22Position1) ||  false  ) ) { {int tomMatch22Position1Index1=0; { tom.engine.adt.tomoption.types.OptionList  tomMatch22Position1List1=tomMatch22Position1; { tom.engine.adt.tomoption.types.OptionList  tomMatch22Position1Begin1=tomMatch22Position1List1; { tom.engine.adt.tomoption.types.OptionList  tomMatch22Position1End1=tomMatch22Position1List1; { while (!(tom_is_empty_concOption_OptionList(tomMatch22Position1End1))) {tomMatch22Position1List1=tomMatch22Position1End1; { { tom.engine.adt.tomoption.types.OptionList  tomMatch22Position1Save2=tomMatch22Position1List1; { { tom.engine.adt.tomoption.types.Option  tomMatch22Position1Position2=tom_get_head_concOption_OptionList(tomMatch22Position1List1);tomMatch22Position1Index1=tomMatch22Position1Index1 + 1;tomMatch22Position1List1=tom_get_tail_concOption_OptionList(tomMatch22Position1List1); if ( ( tom_is_fun_sym_ImplicitXMLAttribut(tomMatch22Position1Position2) ||  false  ) ) { if ( true ) {
 return true;  } } }tomMatch22Position1List1=tomMatch22Position1Save2; } }tomMatch22Position1End1=tom_get_tail_concOption_OptionList(tomMatch22Position1End1); } }tomMatch22Position1List1=tomMatch22Position1Begin1; } } } } } } } }

    return false;
  }

  protected static boolean hasImplicitXMLChild(OptionList optionList) {
     if (tom_is_sort_OptionList(optionList)) { { tom.engine.adt.tomoption.types.OptionList  tomMatch23Position1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if ( ( tom_is_fun_sym_concOption(tomMatch23Position1) ||  false  ) ) { {int tomMatch23Position1Index1=0; { tom.engine.adt.tomoption.types.OptionList  tomMatch23Position1List1=tomMatch23Position1; { tom.engine.adt.tomoption.types.OptionList  tomMatch23Position1Begin1=tomMatch23Position1List1; { tom.engine.adt.tomoption.types.OptionList  tomMatch23Position1End1=tomMatch23Position1List1; { while (!(tom_is_empty_concOption_OptionList(tomMatch23Position1End1))) {tomMatch23Position1List1=tomMatch23Position1End1; { { tom.engine.adt.tomoption.types.OptionList  tomMatch23Position1Save2=tomMatch23Position1List1; { { tom.engine.adt.tomoption.types.Option  tomMatch23Position1Position2=tom_get_head_concOption_OptionList(tomMatch23Position1List1);tomMatch23Position1Index1=tomMatch23Position1Index1 + 1;tomMatch23Position1List1=tom_get_tail_concOption_OptionList(tomMatch23Position1List1); if ( ( tom_is_fun_sym_ImplicitXMLChild(tomMatch23Position1Position2) ||  false  ) ) { if ( true ) {
 return true;  } } }tomMatch23Position1List1=tomMatch23Position1Save2; } }tomMatch23Position1End1=tom_get_tail_concOption_OptionList(tomMatch23Position1End1); } }tomMatch23Position1List1=tomMatch23Position1Begin1; } } } } } } } }

    return false;
  } 

  protected static TomName getSlotName(TomSymbol symbol, int number) {
    PairNameDeclList pairNameDeclList = symbol.getPairNameDeclList();
    for(int index = 0; !pairNameDeclList.isEmptyconcPairNameDecl() && index<number ; index++) {
      pairNameDeclList = pairNameDeclList.getTailconcPairNameDecl();
    }
    if(pairNameDeclList.isEmptyconcPairNameDecl()) {
      System.out.println("getSlotName: bad index error");
      throw new TomRuntimeException("getSlotName: bad index error");
    }
    PairNameDecl pairNameDecl = pairNameDeclList.getHeadconcPairNameDecl();

    Declaration decl = pairNameDecl.getSlotDecl();
     if (tom_is_sort_Declaration(decl)) { { tom.engine.adt.tomdeclaration.types.Declaration  tomMatch24Position1=(( tom.engine.adt.tomdeclaration.types.Declaration )decl); if ( ( tom_is_fun_sym_GetSlotDecl(tomMatch24Position1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_name=tom_get_slot_GetSlotDecl_SlotName(tomMatch24Position1); if ( true ) {
 return tom_name;  } } } } }


    return pairNameDecl.getSlotName();
  }

  protected static int getSlotIndex(TomSymbol tomSymbol, TomName slotName) {
    int index = 0;
    PairNameDeclList pairNameDeclList = tomSymbol.getPairNameDeclList();
    while(!pairNameDeclList.isEmptyconcPairNameDecl()) {
      TomName name = pairNameDeclList.getHeadconcPairNameDecl().getSlotName();
      // System.out.println("index = " + index + " name = " + name);
      if(slotName.equals(name)) {
        return index; 
      }
      pairNameDeclList = pairNameDeclList.getTailconcPairNameDecl();
      index++;
    }
    return -1;
  }

  public static TomType elementAt(TomTypeList l, int index) {
    if (0 > index || index > l.length()) {
      throw new IllegalArgumentException("illegal list index: " + index);
    }
    for (int i = 0; i < index; i++) {
      l = l.getTailconcTomType();
    }
    return l.getHeadconcTomType();
  }

  public static TomType getSlotType(TomSymbol symbol, TomName slotName) {
     if (tom_is_sort_TomSymbol(symbol)) { { tom.engine.adt.tomsignature.types.TomSymbol  tomMatch25Position1=(( tom.engine.adt.tomsignature.types.TomSymbol )symbol); if ( ( tom_is_fun_sym_Symbol(tomMatch25Position1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tomMatch25Position1NameNumberTypesToType=tom_get_slot_Symbol_TypesToType(tomMatch25Position1); if ( ( tom_is_fun_sym_TypesToType(tomMatch25Position1NameNumberTypesToType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomTypeList  tom_typeList=tom_get_slot_TypesToType_Domain(tomMatch25Position1NameNumberTypesToType); if ( true ) {

        int index = getSlotIndex(symbol,slotName);
        return elementAt(tom_typeList,index);
       } } } } } } }

    throw new TomRuntimeException("getSlotType: bad slotName error");
  }

  protected static boolean isDefinedSymbol(TomSymbol subject) {
    if(subject==null) {
      System.out.println("isDefinedSymbol: subject == null");
      return false;
    }
     if (tom_is_sort_TomSymbol(subject)) { { tom.engine.adt.tomsignature.types.TomSymbol  tomMatch26Position1=(( tom.engine.adt.tomsignature.types.TomSymbol )subject); if ( ( tom_is_fun_sym_Symbol(tomMatch26Position1) ||  false  ) ) { { tom.engine.adt.tomoption.types.OptionList  tom_optionList=tom_get_slot_Symbol_Option(tomMatch26Position1); if ( true ) {

        return hasDefinedSymbol(tom_optionList);
       } } } } }

    return false;
  }

  protected static boolean isDefinedGetSlot(TomSymbol symbol, TomName slotName) {
    if(symbol==null) {
      System.out.println("isDefinedSymbol: symbol == null");
      return false;
    }
     if (tom_is_sort_TomSymbol(symbol)) { { tom.engine.adt.tomsignature.types.TomSymbol  tomMatch27Position1=(( tom.engine.adt.tomsignature.types.TomSymbol )symbol); if ( ( tom_is_fun_sym_Symbol(tomMatch27Position1) ||  false  ) ) { { tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch27Position1NameNumberPairNameDeclList=tom_get_slot_Symbol_PairNameDeclList(tomMatch27Position1); if ( ( tom_is_fun_sym_concPairNameDecl(tomMatch27Position1NameNumberPairNameDeclList) ||  false  ) ) { {int tomMatch27Position1NameNumberPairNameDeclListIndex1=0; { tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch27Position1NameNumberPairNameDeclListList1=tomMatch27Position1NameNumberPairNameDeclList; { tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch27Position1NameNumberPairNameDeclListBegin1=tomMatch27Position1NameNumberPairNameDeclListList1; { tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch27Position1NameNumberPairNameDeclListEnd1=tomMatch27Position1NameNumberPairNameDeclListList1; { while (!(tom_is_empty_concPairNameDecl_PairNameDeclList(tomMatch27Position1NameNumberPairNameDeclListEnd1))) {tomMatch27Position1NameNumberPairNameDeclListList1=tomMatch27Position1NameNumberPairNameDeclListEnd1; { { tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch27Position1NameNumberPairNameDeclListSave2=tomMatch27Position1NameNumberPairNameDeclListList1; { { tom.engine.adt.tomslot.types.PairNameDecl  tomMatch27Position1NameNumberPairNameDeclListPosition2=tom_get_head_concPairNameDecl_PairNameDeclList(tomMatch27Position1NameNumberPairNameDeclListList1);tomMatch27Position1NameNumberPairNameDeclListIndex1=tomMatch27Position1NameNumberPairNameDeclListIndex1 + 1;tomMatch27Position1NameNumberPairNameDeclListList1=tom_get_tail_concPairNameDecl_PairNameDeclList(tomMatch27Position1NameNumberPairNameDeclListList1); if ( ( tom_is_fun_sym_PairNameDecl(tomMatch27Position1NameNumberPairNameDeclListPosition2) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_name=tom_get_slot_PairNameDecl_SlotName(tomMatch27Position1NameNumberPairNameDeclListPosition2); { tom.engine.adt.tomdeclaration.types.Declaration  tom_decl=tom_get_slot_PairNameDecl_SlotDecl(tomMatch27Position1NameNumberPairNameDeclListPosition2); if ( true ) {

        if(tom_name==slotName && tom_decl!=tom_make_EmptyDeclaration()) {
          return true;
        }
       } } } } }tomMatch27Position1NameNumberPairNameDeclListList1=tomMatch27Position1NameNumberPairNameDeclListSave2; } }tomMatch27Position1NameNumberPairNameDeclListEnd1=tom_get_tail_concPairNameDecl_PairNameDeclList(tomMatch27Position1NameNumberPairNameDeclListEnd1); } }tomMatch27Position1NameNumberPairNameDeclListList1=tomMatch27Position1NameNumberPairNameDeclListBegin1; } } } } } } } } } }

    return false;
  }


  // findOriginTracking(_) return the option containing OriginTracking information
  protected static Option findOriginTracking(OptionList optionList) {
    if(optionList.isEmptyconcOption()) {
      return tom_make_noOption();
    }
    while(!optionList.isEmptyconcOption()) {
      Option subject = optionList.getHeadconcOption();
       if (tom_is_sort_Option(subject)) { { tom.engine.adt.tomoption.types.Option  tomMatch28Position1=(( tom.engine.adt.tomoption.types.Option )subject); if ( ( tom_is_fun_sym_OriginTracking(tomMatch28Position1) ||  false  ) ) { { tom.engine.adt.tomoption.types.Option  tom_orgTrack=tomMatch28Position1; if ( true ) {

          return tom_orgTrack;
         } } } } }

      optionList = optionList.getTailconcOption();
    }
    System.out.println("findOriginTracking:  not found" + optionList);
    throw new TomRuntimeException("findOriginTracking:  not found" + optionList);
  }

  protected static TomSymbol getSymbolFromName(String tomName, SymbolTable symbolTable) {
    return symbolTable.getSymbolFromName(tomName);
  }
  
  public static TomSymbol getSymbolFromType(TomType tomType, SymbolTable symbolTable) {
    TomSymbolList list = symbolTable.getSymbolFromType(tomType);
    TomSymbolList filteredList = tom_empty_list_concTomSymbol();
    // Not necessary since checker ensure the uniqueness of the symbol
    while(!list.isEmptyconcTomSymbol()) {
      TomSymbol head = list.getHeadconcTomSymbol();
      if(isArrayOperator(head) || isListOperator(head)) {
        filteredList = tom_cons_list_concTomSymbol(head,tom_append_list_concTomSymbol(filteredList,tom_empty_list_concTomSymbol()));
      }
      list = list.getTailconcTomSymbol();
    }
    return filteredList.getHeadconcTomSymbol();
  }

  public static TomType getTermType(TomTerm t, SymbolTable symbolTable) {
     if (tom_is_sort_TomTerm(t)) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch29Position1=(( tom.engine.adt.tomterm.types.TomTerm )t); {boolean tomNameNumberboolMatch29Position1= false ; { tom.engine.adt.tomname.types.TomNameList  tomMatch29Position1NameNumberNameList= null ; if (tom_is_fun_sym_TermAppl(tomMatch29Position1)) {tomNameNumberboolMatch29Position1= true ;tomMatch29Position1NameNumberNameList=tom_get_slot_TermAppl_NameList(tomMatch29Position1); } else { if (tom_is_fun_sym_RecordAppl(tomMatch29Position1)) {tomNameNumberboolMatch29Position1= true ;tomMatch29Position1NameNumberNameList=tom_get_slot_RecordAppl_NameList(tomMatch29Position1); } } if (tomNameNumberboolMatch29Position1) { if ( ( tom_is_fun_sym_concTomName(tomMatch29Position1NameNumberNameList) ||  false  ) ) { {int tomMatch29Position1NameNumberNameListIndex1=0; { tom.engine.adt.tomname.types.TomNameList  tomMatch29Position1NameNumberNameListList1=tomMatch29Position1NameNumberNameList; { tom.engine.adt.tomname.types.TomNameList  tomMatch29Position1NameNumberNameListSave1=tomMatch29Position1NameNumberNameListList1; { if (!(tom_is_empty_concTomName_TomNameList(tomMatch29Position1NameNumberNameListList1))) { { tom.engine.adt.tomname.types.TomName  tom_headName=tom_get_head_concTomName_TomNameList(tomMatch29Position1NameNumberNameListList1);tomMatch29Position1NameNumberNameListIndex1=tomMatch29Position1NameNumberNameListIndex1 + 1;tomMatch29Position1NameNumberNameListList1=tom_get_tail_concTomName_TomNameList(tomMatch29Position1NameNumberNameListList1); if ( true ) {

        String tomName = null;
        if((tom_headName) instanceof AntiName) {
          tomName = ((AntiName)tom_headName).getName().getString(); 
        } else {
          tomName = ((TomName)tom_headName).getString();
        }
        TomSymbol tomSymbol = symbolTable.getSymbolFromName(tomName);
        if(tomSymbol!=null) {
          return tomSymbol.getTypesToType().getCodomain();
        } else {
          return tom_make_EmptyType();
        }
       } } }tomMatch29Position1NameNumberNameListList1=tomMatch29Position1NameNumberNameListSave1; } } } } } } } } {boolean tomNameNumberboolMatch29Position1= false ; { tom.engine.adt.tomtype.types.TomType  tomMatch29Position1NameNumberAstType= null ; if (tom_is_fun_sym_Variable(tomMatch29Position1)) {tomNameNumberboolMatch29Position1= true ;tomMatch29Position1NameNumberAstType=tom_get_slot_Variable_AstType(tomMatch29Position1); } else { if (tom_is_fun_sym_VariableStar(tomMatch29Position1)) {tomNameNumberboolMatch29Position1= true ;tomMatch29Position1NameNumberAstType=tom_get_slot_VariableStar_AstType(tomMatch29Position1); } else { if (tom_is_fun_sym_UnamedVariable(tomMatch29Position1)) {tomNameNumberboolMatch29Position1= true ;tomMatch29Position1NameNumberAstType=tom_get_slot_UnamedVariable_AstType(tomMatch29Position1); } else { if (tom_is_fun_sym_UnamedVariableStar(tomMatch29Position1)) {tomNameNumberboolMatch29Position1= true ;tomMatch29Position1NameNumberAstType=tom_get_slot_UnamedVariableStar_AstType(tomMatch29Position1); } } } } if (tomNameNumberboolMatch29Position1) { { tom.engine.adt.tomtype.types.TomType  tom_type=tomMatch29Position1NameNumberAstType; if ( true ) {

 
        return tom_type; 
       } } } } } if ( ( tom_is_fun_sym_Ref(tomMatch29Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_get_slot_Ref_TomTerm(tomMatch29Position1); if ( true ) {

 return getTermType(tom_term, symbolTable);  } } } if ( ( tom_is_fun_sym_TargetLanguageToTomTerm(tomMatch29Position1) ||  false  ) ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tomMatch29Position1NameNumberTl=tom_get_slot_TargetLanguageToTomTerm_Tl(tomMatch29Position1); if ( ( tom_is_fun_sym_ITL(tomMatch29Position1NameNumberTl) ||  ( tom_is_fun_sym_TL(tomMatch29Position1NameNumberTl) ||  false  )  ) ) { if ( true ) {

 return tom_make_EmptyType();  } } } } if ( ( tom_is_fun_sym_FunctionCall(tomMatch29Position1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_type=tom_get_slot_FunctionCall_AstType(tomMatch29Position1); if ( true ) {

 return tom_type;  } } } if ( ( tom_is_fun_sym_AntiTerm(tomMatch29Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_get_slot_AntiTerm_TomTerm(tomMatch29Position1); if ( true ) {

 return getTermType(tom_term,symbolTable); } } } } }

    //System.out.println("getTermType error on term: " + t);
    //throw new TomRuntimeException("getTermType error on term: " + t);
    return tom_make_EmptyType();
  }
  
  protected static TomType getTermType(Expression t, SymbolTable symbolTable){
     if (tom_is_sort_Expression(t)) { { tom.engine.adt.tomexpression.types.Expression  tomMatch30Position1=(( tom.engine.adt.tomexpression.types.Expression )t); {boolean tomNameNumberboolMatch30Position1= false ; { tom.engine.adt.tomtype.types.TomType  tomMatch30Position1NameNumberCodomain= null ; if (tom_is_fun_sym_GetHead(tomMatch30Position1)) {tomNameNumberboolMatch30Position1= true ;tomMatch30Position1NameNumberCodomain=tom_get_slot_GetHead_Codomain(tomMatch30Position1); } else { if (tom_is_fun_sym_GetSlot(tomMatch30Position1)) {tomNameNumberboolMatch30Position1= true ;tomMatch30Position1NameNumberCodomain=tom_get_slot_GetSlot_Codomain(tomMatch30Position1); } else { if (tom_is_fun_sym_GetElement(tomMatch30Position1)) {tomNameNumberboolMatch30Position1= true ;tomMatch30Position1NameNumberCodomain=tom_get_slot_GetElement_Codomain(tomMatch30Position1); } } } if (tomNameNumberboolMatch30Position1) { { tom.engine.adt.tomtype.types.TomType  tom_type=tomMatch30Position1NameNumberCodomain; if ( true ) {
 return tom_type;  } } } } } if ( ( tom_is_fun_sym_TomTermToExpression(tomMatch30Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_get_slot_TomTermToExpression_AstTerm(tomMatch30Position1); if ( true ) {

 return getTermType(tom_term, symbolTable);  } } } if ( ( tom_is_fun_sym_GetTail(tomMatch30Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_get_slot_GetTail_Variable(tomMatch30Position1); if ( true ) {
 return getTermType(tom_term, symbolTable);  } } } if ( ( tom_is_fun_sym_GetSliceList(tomMatch30Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_get_slot_GetSliceList_VariableBeginAST(tomMatch30Position1); if ( true ) {
 return getTermType(tom_term, symbolTable);  } } } if ( ( tom_is_fun_sym_GetSliceArray(tomMatch30Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_get_slot_GetSliceArray_SubjectListName(tomMatch30Position1); if ( true ) {
 return getTermType(tom_term, symbolTable);  } } } } }

    System.out.println("getTermType error on term: " + t);
    throw new TomRuntimeException("getTermType error on term: " + t);
  }

  protected static SlotList tomListToSlotList(TomList tomList) {
    return tomListToSlotList(tomList,1);
  }

  protected static SlotList tomListToSlotList(TomList tomList, int index) {
     if (tom_is_sort_TomList(tomList)) { { tom.engine.adt.tomterm.types.TomList  tomMatch31Position1=(( tom.engine.adt.tomterm.types.TomList )tomList); if ( ( tom_is_fun_sym_concTomTerm(tomMatch31Position1) ||  false  ) ) { {int tomMatch31Position1Index1=0; { tom.engine.adt.tomterm.types.TomList  tomMatch31Position1List1=tomMatch31Position1; if (tom_is_empty_concTomTerm_TomList(tomMatch31Position1List1)) { if ( true ) {
 return tom_empty_list_concSlot();  } } } } } if ( ( tom_is_fun_sym_concTomTerm(tomMatch31Position1) ||  false  ) ) { {int tomMatch31Position1Index1=0; { tom.engine.adt.tomterm.types.TomList  tomMatch31Position1List1=tomMatch31Position1; { tom.engine.adt.tomterm.types.TomList  tomMatch31Position1Save1=tomMatch31Position1List1; { if (!(tom_is_empty_concTomTerm_TomList(tomMatch31Position1List1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_get_head_concTomTerm_TomList(tomMatch31Position1List1);tomMatch31Position1Index1=tomMatch31Position1Index1 + 1;tomMatch31Position1List1=tom_get_tail_concTomTerm_TomList(tomMatch31Position1List1); { tom.engine.adt.tomterm.types.TomList  tom_tail=tomMatch31Position1List1; if ( true ) {
 
        TomName slotName = tom_make_PositionName(tom_cons_list_concTomNumber(tom_make_Position(index),tom_empty_list_concTomNumber()));
        SlotList sl = tomListToSlotList(tom_tail,index+1);
        return tom_cons_list_concSlot(tom_make_PairSlotAppl(slotName,tom_head),tom_append_list_concSlot(sl,tom_empty_list_concSlot())); 
       } } } }tomMatch31Position1List1=tomMatch31Position1Save1; } } } } } } }

    throw new TomRuntimeException("tomListToSlotList: " + tomList);
  }

  protected static SlotList mergeTomListWithSlotList(TomList tomList, SlotList slotList) {
     if (tom_is_sort_TomList(tomList)) { { tom.engine.adt.tomterm.types.TomList  tomMatch32Position1=(( tom.engine.adt.tomterm.types.TomList )tomList); if (tom_is_sort_SlotList(slotList)) { { tom.engine.adt.tomslot.types.SlotList  tomMatch32Position2=(( tom.engine.adt.tomslot.types.SlotList )slotList); if ( ( tom_is_fun_sym_concTomTerm(tomMatch32Position1) ||  false  ) ) { {int tomMatch32Position1Index1=0; { tom.engine.adt.tomterm.types.TomList  tomMatch32Position1List1=tomMatch32Position1; if (tom_is_empty_concTomTerm_TomList(tomMatch32Position1List1)) { if ( ( tom_is_fun_sym_concSlot(tomMatch32Position2) ||  false  ) ) { {int tomMatch32Position2Index1=0; { tom.engine.adt.tomslot.types.SlotList  tomMatch32Position2List1=tomMatch32Position2; if (tom_is_empty_concSlot_SlotList(tomMatch32Position2List1)) { if ( true ) {
 
        return tom_empty_list_concSlot(); 
       } } } } } } } } } if ( ( tom_is_fun_sym_concTomTerm(tomMatch32Position1) ||  false  ) ) { {int tomMatch32Position1Index1=0; { tom.engine.adt.tomterm.types.TomList  tomMatch32Position1List1=tomMatch32Position1; { tom.engine.adt.tomterm.types.TomList  tomMatch32Position1Save1=tomMatch32Position1List1; { if (!(tom_is_empty_concTomTerm_TomList(tomMatch32Position1List1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_get_head_concTomTerm_TomList(tomMatch32Position1List1);tomMatch32Position1Index1=tomMatch32Position1Index1 + 1;tomMatch32Position1List1=tom_get_tail_concTomTerm_TomList(tomMatch32Position1List1); { tom.engine.adt.tomterm.types.TomList  tom_tail=tomMatch32Position1List1; if ( ( tom_is_fun_sym_concSlot(tomMatch32Position2) ||  false  ) ) { {int tomMatch32Position2Index1=0; { tom.engine.adt.tomslot.types.SlotList  tomMatch32Position2List1=tomMatch32Position2; { tom.engine.adt.tomslot.types.SlotList  tomMatch32Position2Save1=tomMatch32Position2List1; { if (!(tom_is_empty_concSlot_SlotList(tomMatch32Position2List1))) { { tom.engine.adt.tomslot.types.Slot  tomMatch32Position2Position1=tom_get_head_concSlot_SlotList(tomMatch32Position2List1);tomMatch32Position2Index1=tomMatch32Position2Index1 + 1;tomMatch32Position2List1=tom_get_tail_concSlot_SlotList(tomMatch32Position2List1); if ( ( tom_is_fun_sym_PairSlotAppl(tomMatch32Position2Position1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_slotName=tom_get_slot_PairSlotAppl_SlotName(tomMatch32Position2Position1); { tom.engine.adt.tomslot.types.SlotList  tom_tailSlotList=tomMatch32Position2List1; if ( true ) {
 
        SlotList sl = mergeTomListWithSlotList(tom_tail,tom_tailSlotList);
        return tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_slotName,tom_head),tom_append_list_concSlot(sl,tom_empty_list_concSlot())); 
       } } } } } }tomMatch32Position2List1=tomMatch32Position2Save1; } } } } } } } }tomMatch32Position1List1=tomMatch32Position1Save1; } } } } } } } } }

    throw new TomRuntimeException("mergeTomListWithSlotList: " + tomList + " and " + slotList);
  }

  protected static TomList slotListToTomList(SlotList tomList) {
     if (tom_is_sort_SlotList(tomList)) { { tom.engine.adt.tomslot.types.SlotList  tomMatch33Position1=(( tom.engine.adt.tomslot.types.SlotList )tomList); if ( ( tom_is_fun_sym_concSlot(tomMatch33Position1) ||  false  ) ) { {int tomMatch33Position1Index1=0; { tom.engine.adt.tomslot.types.SlotList  tomMatch33Position1List1=tomMatch33Position1; if (tom_is_empty_concSlot_SlotList(tomMatch33Position1List1)) { if ( true ) {
 return tom_empty_list_concTomTerm();  } } } } } if ( ( tom_is_fun_sym_concSlot(tomMatch33Position1) ||  false  ) ) { {int tomMatch33Position1Index1=0; { tom.engine.adt.tomslot.types.SlotList  tomMatch33Position1List1=tomMatch33Position1; { tom.engine.adt.tomslot.types.SlotList  tomMatch33Position1Save1=tomMatch33Position1List1; { if (!(tom_is_empty_concSlot_SlotList(tomMatch33Position1List1))) { { tom.engine.adt.tomslot.types.Slot  tomMatch33Position1Position1=tom_get_head_concSlot_SlotList(tomMatch33Position1List1);tomMatch33Position1Index1=tomMatch33Position1Index1 + 1;tomMatch33Position1List1=tom_get_tail_concSlot_SlotList(tomMatch33Position1List1); if ( ( tom_is_fun_sym_PairSlotAppl(tomMatch33Position1Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_get_slot_PairSlotAppl_Appl(tomMatch33Position1Position1); { tom.engine.adt.tomslot.types.SlotList  tom_tail=tomMatch33Position1List1; if ( true ) {

        TomList tl = slotListToTomList(tom_tail);
        return tom_cons_list_concTomTerm(tom_head,tom_append_list_concTomTerm(tl,tom_empty_list_concTomTerm()));
       } } } } } }tomMatch33Position1List1=tomMatch33Position1Save1; } } } } } } }

    throw new TomRuntimeException("slotListToTomList: " + tomList);
  }

} // class TomBase

/* Generated by TOM (version 2.4alpha): Do not edit this file *//*
 * 
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2006, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine;

import java.util.*;

import aterm.*;

import tom.engine.tools.*;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.exception.TomRuntimeException;

import tom.platform.adt.platformoption.*;

import tom.library.strategy.mutraveler.MuTraveler;
import jjtraveler.reflective.VisitableVisitor;
import jjtraveler.VisitFailure;


/**
 * Base class for most tom files in the compiler.
 * Provides access to the TomSignatureFactory and helper methods.
 */
public class TomBase {

  /* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file *//* Generated by TOM (version 2.4alpha): Do not edit this file */ private static boolean tom_terms_equal_String( String  t1,  String  t2) {  return  (t1.equals(t2))  ;}  /* Generated by TOM (version 2.4alpha): Do not edit this file */private static boolean tom_terms_equal_int( int  t1,  int  t2) {  return  (t1==t2)  ;} /* Generated by TOM (version 2.4alpha): Do not edit this file */ /* Generated by TOM (version 2.4alpha): Do not edit this file */ /* Generated by TOM (version 2.4alpha): Do not edit this file */ private static boolean tom_terms_equal_Instruction(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomTypeList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomType(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomSymbolList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Position(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomSymbol(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TargetLanguage(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Declaration(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomNumber(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomNumberList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomNameList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Expression(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomTerm(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Option(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_OptionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Constraint(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ConstraintList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Slot(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_PairNameDeclList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_PairNameDecl(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SlotList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_fun_sym_EmptyType( tom.engine.adt.tomtype.types.TomType  t) {  return  (t!=null) && t.isEmptyType()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_make_EmptyType() { return  tom.engine.adt.tomtype.types.tomtype.EmptyType.make(); }private static boolean tom_is_fun_sym_TLType( tom.engine.adt.tomtype.types.TomType  t) {  return  (t!=null) && t.isTLType()  ;}private static  tom.engine.adt.tomsignature.types.TargetLanguage  tom_get_slot_TLType_Tl( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTl()  ;}private static boolean tom_is_fun_sym_TypesToType( tom.engine.adt.tomtype.types.TomType  t) {  return  (t!=null) && t.isTypesToType()  ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_get_slot_TypesToType_Domain( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getDomain()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_TypesToType_Codomain( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getCodomain()  ;}private static boolean tom_is_fun_sym_ASTTomType( tom.engine.adt.tomtype.types.TomType  t) {  return  (t!=null) && t.isASTTomType()  ;}private static  String  tom_get_slot_ASTTomType_String( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_TomTypeAlone( tom.engine.adt.tomtype.types.TomType  t) {  return  (t!=null) && t.isTomTypeAlone()  ;}private static  String  tom_get_slot_TomTypeAlone_String( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_Type( tom.engine.adt.tomtype.types.TomType  t) {  return  (t!=null) && t.isType()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TomType( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTomType()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TlType( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTlType()  ;}private static boolean tom_is_fun_sym_Symbol( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  (t!=null) && t.isSymbol()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Symbol_AstName( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Symbol_TypesToType( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getTypesToType()  ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_slot_Symbol_PairNameDeclList( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getPairNameDeclList()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Symbol_Option( tom.engine.adt.tomsignature.types.TomSymbol  t) {  return  t.getOption()  ;}private static boolean tom_is_fun_sym_TL( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  (t!=null) && t.isTL()  ;}private static  String  tom_get_slot_TL_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getCode()  ;}private static  tom.engine.adt.tomsignature.types.Position  tom_get_slot_TL_Start( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getStart()  ;}private static  tom.engine.adt.tomsignature.types.Position  tom_get_slot_TL_End( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getEnd()  ;}private static boolean tom_is_fun_sym_ITL( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  (t!=null) && t.isITL()  ;}private static  String  tom_get_slot_ITL_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getCode()  ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_make_EmptyDeclaration() { return  tom.engine.adt.tomdeclaration.types.declaration.EmptyDeclaration.make(); }private static boolean tom_is_fun_sym_MakeAddArray( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  (t!=null) && t.isMakeAddArray()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeAddArray_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddArray_VarElt( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarElt()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddArray_VarList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarList()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeAddArray_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeAddArray_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeEmptyArray( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  (t!=null) && t.isMakeEmptyArray()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeEmptyArray_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeEmptyArray_VarSize( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarSize()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeEmptyArray_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeEmptyArray_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeAddList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  (t!=null) && t.isMakeAddList()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeAddList_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddList_VarElt( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarElt()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddList_VarList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarList()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeAddList_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeAddList_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeEmptyList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  (t!=null) && t.isMakeEmptyList()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeEmptyList_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeEmptyList_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeEmptyList_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_GetSlotDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  (t!=null) && t.isGetSlotDecl()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlotDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlotDecl_SlotName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getSlotName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSlotDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetSlotDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetSlotDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_IsFsymDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  (t!=null) && t.isIsFsymDecl()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsFsymDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsFsymDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_IsFsymDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_IsFsymDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_RuleVar( tom.engine.adt.tomname.types.TomNumber  t) {  return  (t!=null) && t.isRuleVar()  ;}private static boolean tom_is_fun_sym_NameNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  (t!=null) && t.isNameNumber()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_NameNumber_AstName( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_RenamedVar( tom.engine.adt.tomname.types.TomNumber  t) {  return  (t!=null) && t.isRenamedVar()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_RenamedVar_AstName( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_AbsVar( tom.engine.adt.tomname.types.TomNumber  t) {  return  (t!=null) && t.isAbsVar()  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_get_slot_AbsVar_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getNumber()  ;}private static boolean tom_is_fun_sym_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  (t!=null) && t.isNumber()  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_make_Number( int  t0) { return  tom.engine.adt.tomname.types.tomnumber.Number.make(t0); }private static  int  tom_get_slot_Number_Integer( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getInteger()  ;}private static boolean tom_is_fun_sym_End( tom.engine.adt.tomname.types.TomNumber  t) {  return  (t!=null) && t.isEnd()  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_get_slot_End_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getNumber()  ;}private static boolean tom_is_fun_sym_Begin( tom.engine.adt.tomname.types.TomNumber  t) {  return  (t!=null) && t.isBegin()  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_get_slot_Begin_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getNumber()  ;}private static boolean tom_is_fun_sym_IndexNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  (t!=null) && t.isIndexNumber()  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_get_slot_IndexNumber_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getNumber()  ;}private static boolean tom_is_fun_sym_ListNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  (t!=null) && t.isListNumber()  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_get_slot_ListNumber_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getNumber()  ;}private static boolean tom_is_fun_sym_PatternNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  (t!=null) && t.isPatternNumber()  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_get_slot_PatternNumber_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getNumber()  ;}private static boolean tom_is_fun_sym_MatchNumber( tom.engine.adt.tomname.types.TomNumber  t) {  return  (t!=null) && t.isMatchNumber()  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_get_slot_MatchNumber_Number( tom.engine.adt.tomname.types.TomNumber  t) {  return  t.getNumber()  ;}private static boolean tom_is_fun_sym_PositionName( tom.engine.adt.tomname.types.TomName  t) {  return  (t!=null) && t.isPositionName()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_make_PositionName( tom.engine.adt.tomname.types.TomNumberList  t0) { return  tom.engine.adt.tomname.types.tomname.PositionName.make(t0); }private static  tom.engine.adt.tomname.types.TomNumberList  tom_get_slot_PositionName_NumberList( tom.engine.adt.tomname.types.TomName  t) {  return  t.getNumberList()  ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) {  return  (t!=null) && t.isName()  ;}private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_GetSliceArray( tom.engine.adt.tomexpression.types.Expression  t) {  return  (t!=null) && t.isGetSliceArray()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSliceArray_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceArray_SubjectListName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getSubjectListName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceArray_VariableBeginAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableBeginAST()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceArray_VariableEndAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableEndAST()  ;}private static boolean tom_is_fun_sym_GetSliceList( tom.engine.adt.tomexpression.types.Expression  t) {  return  (t!=null) && t.isGetSliceList()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSliceList_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceList_VariableBeginAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableBeginAST()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceList_VariableEndAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableEndAST()  ;}private static boolean tom_is_fun_sym_GetElement( tom.engine.adt.tomexpression.types.Expression  t) {  return  (t!=null) && t.isGetElement()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetElement_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetElement_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetElement_Kid1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid1()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetElement_Kid2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid2()  ;}private static boolean tom_is_fun_sym_GetTail( tom.engine.adt.tomexpression.types.Expression  t) {  return  (t!=null) && t.isGetTail()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetTail_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetTail_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetHead( tom.engine.adt.tomexpression.types.Expression  t) {  return  (t!=null) && t.isGetHead()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetHead_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetHead_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetHead_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetSlot( tom.engine.adt.tomexpression.types.Expression  t) {  return  (t!=null) && t.isGetSlot()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetSlot_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlot_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  String  tom_get_slot_GetSlot_SlotNameString( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getSlotNameString()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSlot_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetSubterm( tom.engine.adt.tomexpression.types.Expression  t) {  return  (t!=null) && t.isGetSubterm()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetSubterm_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSubterm_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomname.types.TomNumber  tom_get_slot_GetSubterm_Number( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getNumber()  ;}private static boolean tom_is_fun_sym_TomTermToExpression( tom.engine.adt.tomexpression.types.Expression  t) {  return  (t!=null) && t.isTomTermToExpression()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_TomTermToExpression_AstTerm( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstTerm()  ;}private static boolean tom_is_fun_sym_FunctionCall( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isFunctionCall()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_FunctionCall_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_FunctionCall_Args( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getArgs()  ;}private static boolean tom_is_fun_sym_Ref( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isRef()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Ref_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTomTerm()  ;}private static boolean tom_is_fun_sym_TargetLanguageToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isTargetLanguageToTomTerm()  ;}private static  tom.engine.adt.tomsignature.types.TargetLanguage  tom_get_slot_TargetLanguageToTomTerm_Tl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTl()  ;}private static boolean tom_is_fun_sym_UnamedVariableStar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isUnamedVariableStar()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_UnamedVariable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isUnamedVariable()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isVariableStar()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_VariableStar_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_VariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isVariable()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  (t!=null) && t.isRecordAppl()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getNameList()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getSlots()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_make_noOption() { return  tom.engine.adt.tomoption.types.option.noOption.make(); }private static boolean tom_is_fun_sym_ImplicitXMLChild( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isImplicitXMLChild()  ;}private static boolean tom_is_fun_sym_ImplicitXMLAttribut( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isImplicitXMLAttribut()  ;}private static boolean tom_is_fun_sym_ModuleName( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isModuleName()  ;}private static  String  tom_get_slot_ModuleName_String( tom.engine.adt.tomoption.types.Option  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_Debug( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isDebug()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Debug_AstName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_Constant( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isConstant()  ;}private static boolean tom_is_fun_sym_OriginTracking( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isOriginTracking()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_OriginTracking_AstName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getAstName()  ;}private static  int  tom_get_slot_OriginTracking_Line( tom.engine.adt.tomoption.types.Option  t) {  return  t.getLine()  ;}private static  String  tom_get_slot_OriginTracking_FileName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getFileName()  ;}private static boolean tom_is_fun_sym_GeneratedMatch( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isGeneratedMatch()  ;}private static boolean tom_is_fun_sym_DefinedSymbol( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isDefinedSymbol()  ;}private static boolean tom_is_fun_sym_DeclarationToOption( tom.engine.adt.tomoption.types.Option  t) {  return  (t!=null) && t.isDeclarationToOption()  ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_get_slot_DeclarationToOption_AstDeclaration( tom.engine.adt.tomoption.types.Option  t) {  return  t.getAstDeclaration()  ;}private static boolean tom_is_fun_sym_AssignTo( tom.engine.adt.tomconstraint.types.Constraint  t) {  return  (t!=null) && t.isAssignTo()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_AssignTo_Variable( tom.engine.adt.tomconstraint.types.Constraint  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_PairSlotAppl( tom.engine.adt.tomslot.types.Slot  t) {  return  (t!=null) && t.isPairSlotAppl()  ;}private static  tom.engine.adt.tomslot.types.Slot  tom_make_PairSlotAppl( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomslot.types.slot.PairSlotAppl.make(t0, t1); }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_PairSlotAppl_SlotName( tom.engine.adt.tomslot.types.Slot  t) {  return  t.getSlotName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_PairSlotAppl_Appl( tom.engine.adt.tomslot.types.Slot  t) {  return  t.getAppl()  ;}private static boolean tom_is_fun_sym_PairNameDecl( tom.engine.adt.tomslot.types.PairNameDecl  t) {  return  (t!=null) && t.isPairNameDecl()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_PairNameDecl_SlotName( tom.engine.adt.tomslot.types.PairNameDecl  t) {  return  t.getSlotName()  ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_get_slot_PairNameDecl_SlotDecl( tom.engine.adt.tomslot.types.PairNameDecl  t) {  return  t.getSlotDecl()  ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_empty_list_concTomType() { return  tom.engine.adt.tomtype.types.tomtypelist.EmptyconcTomType.make() ; }private static  tom.engine.adt.tomtype.types.TomTypeList  tom_cons_list_concTomType( tom.engine.adt.tomtype.types.TomType  e,  tom.engine.adt.tomtype.types.TomTypeList  l) { return  tom.engine.adt.tomtype.types.tomtypelist.ConsconcTomType.make(e,l) ; }private static  tom.engine.adt.tomtype.types.TomType  tom_get_head_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) {  return  l.getHeadconcTomType()  ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_get_tail_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) {  return  l.getTailconcTomType()  ;}private static boolean tom_is_empty_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) {  return  l.isEmptyconcTomType()  ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_append_list_concTomType( tom.engine.adt.tomtype.types.TomTypeList  l1,  tom.engine.adt.tomtype.types.TomTypeList  l2) {    if(tom_is_empty_concTomType_TomTypeList(l1)) {     return l2;    } else if(tom_is_empty_concTomType_TomTypeList(l2)) {     return l1;    } else if(tom_is_empty_concTomType_TomTypeList(( tom.engine.adt.tomtype.types.TomTypeList )tom_get_tail_concTomType_TomTypeList(l1))) {     return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(( tom.engine.adt.tomtype.types.TomType )tom_get_head_concTomType_TomTypeList(l1),l2);    } else {      return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(( tom.engine.adt.tomtype.types.TomType )tom_get_head_concTomType_TomTypeList(l1),tom_append_list_concTomType(( tom.engine.adt.tomtype.types.TomTypeList )tom_get_tail_concTomType_TomTypeList(l1),l2));    }   }  private static  tom.engine.adt.tomtype.types.TomTypeList  tom_get_slice_concTomType( tom.engine.adt.tomtype.types.TomTypeList  begin,  tom.engine.adt.tomtype.types.TomTypeList  end) {    if(tom_terms_equal_TomTypeList(begin,end)) {      return ( tom.engine.adt.tomtype.types.TomTypeList )tom_empty_list_concTomType();    } else {      return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(( tom.engine.adt.tomtype.types.TomType )tom_get_head_concTomType_TomTypeList(begin),( tom.engine.adt.tomtype.types.TomTypeList )tom_get_slice_concTomType(( tom.engine.adt.tomtype.types.TomTypeList )tom_get_tail_concTomType_TomTypeList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbolList  t) {  return  t instanceof tom.engine.adt.tomsignature.types.tomsymbollist.ConsconcTomSymbol || t instanceof tom.engine.adt.tomsignature.types.tomsymbollist.EmptyconcTomSymbol  ;}private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_empty_list_concTomSymbol() { return  tom.engine.adt.tomsignature.types.tomsymbollist.EmptyconcTomSymbol.make() ; }private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_cons_list_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbol  e,  tom.engine.adt.tomsignature.types.TomSymbolList  l) { return  tom.engine.adt.tomsignature.types.tomsymbollist.ConsconcTomSymbol.make(e,l) ; }private static  tom.engine.adt.tomsignature.types.TomSymbol  tom_get_head_concTomSymbol_TomSymbolList( tom.engine.adt.tomsignature.types.TomSymbolList  l) {  return  l.getHeadconcTomSymbol()  ;}private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_get_tail_concTomSymbol_TomSymbolList( tom.engine.adt.tomsignature.types.TomSymbolList  l) {  return  l.getTailconcTomSymbol()  ;}private static boolean tom_is_empty_concTomSymbol_TomSymbolList( tom.engine.adt.tomsignature.types.TomSymbolList  l) {  return  l.isEmptyconcTomSymbol()  ;}private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_append_list_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbolList  l1,  tom.engine.adt.tomsignature.types.TomSymbolList  l2) {    if(tom_is_empty_concTomSymbol_TomSymbolList(l1)) {     return l2;    } else if(tom_is_empty_concTomSymbol_TomSymbolList(l2)) {     return l1;    } else if(tom_is_empty_concTomSymbol_TomSymbolList(( tom.engine.adt.tomsignature.types.TomSymbolList )tom_get_tail_concTomSymbol_TomSymbolList(l1))) {     return ( tom.engine.adt.tomsignature.types.TomSymbolList )tom_cons_list_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbol )tom_get_head_concTomSymbol_TomSymbolList(l1),l2);    } else {      return ( tom.engine.adt.tomsignature.types.TomSymbolList )tom_cons_list_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbol )tom_get_head_concTomSymbol_TomSymbolList(l1),tom_append_list_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbolList )tom_get_tail_concTomSymbol_TomSymbolList(l1),l2));    }   }  private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_get_slice_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbolList  begin,  tom.engine.adt.tomsignature.types.TomSymbolList  end) {    if(tom_terms_equal_TomSymbolList(begin,end)) {      return ( tom.engine.adt.tomsignature.types.TomSymbolList )tom_empty_list_concTomSymbol();    } else {      return ( tom.engine.adt.tomsignature.types.TomSymbolList )tom_cons_list_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbol )tom_get_head_concTomSymbol_TomSymbolList(begin),( tom.engine.adt.tomsignature.types.TomSymbolList )tom_get_slice_concTomSymbol(( tom.engine.adt.tomsignature.types.TomSymbolList )tom_get_tail_concTomSymbol_TomSymbolList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomNumber( tom.engine.adt.tomname.types.TomNumberList  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnumberlist.ConsconcTomNumber || t instanceof tom.engine.adt.tomname.types.tomnumberlist.EmptyconcTomNumber  ;}private static  tom.engine.adt.tomname.types.TomNumberList  tom_empty_list_concTomNumber() { return  tom.engine.adt.tomname.types.tomnumberlist.EmptyconcTomNumber.make() ; }private static  tom.engine.adt.tomname.types.TomNumberList  tom_cons_list_concTomNumber( tom.engine.adt.tomname.types.TomNumber  e,  tom.engine.adt.tomname.types.TomNumberList  l) { return  tom.engine.adt.tomname.types.tomnumberlist.ConsconcTomNumber.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomNumber  tom_get_head_concTomNumber_TomNumberList( tom.engine.adt.tomname.types.TomNumberList  l) {  return  l.getHeadconcTomNumber()  ;}private static  tom.engine.adt.tomname.types.TomNumberList  tom_get_tail_concTomNumber_TomNumberList( tom.engine.adt.tomname.types.TomNumberList  l) {  return  l.getTailconcTomNumber()  ;}private static boolean tom_is_empty_concTomNumber_TomNumberList( tom.engine.adt.tomname.types.TomNumberList  l) {  return  l.isEmptyconcTomNumber()  ;}private static  tom.engine.adt.tomname.types.TomNumberList  tom_append_list_concTomNumber( tom.engine.adt.tomname.types.TomNumberList  l1,  tom.engine.adt.tomname.types.TomNumberList  l2) {    if(tom_is_empty_concTomNumber_TomNumberList(l1)) {     return l2;    } else if(tom_is_empty_concTomNumber_TomNumberList(l2)) {     return l1;    } else if(tom_is_empty_concTomNumber_TomNumberList(( tom.engine.adt.tomname.types.TomNumberList )tom_get_tail_concTomNumber_TomNumberList(l1))) {     return ( tom.engine.adt.tomname.types.TomNumberList )tom_cons_list_concTomNumber(( tom.engine.adt.tomname.types.TomNumber )tom_get_head_concTomNumber_TomNumberList(l1),l2);    } else {      return ( tom.engine.adt.tomname.types.TomNumberList )tom_cons_list_concTomNumber(( tom.engine.adt.tomname.types.TomNumber )tom_get_head_concTomNumber_TomNumberList(l1),tom_append_list_concTomNumber(( tom.engine.adt.tomname.types.TomNumberList )tom_get_tail_concTomNumber_TomNumberList(l1),l2));    }   }  private static  tom.engine.adt.tomname.types.TomNumberList  tom_get_slice_concTomNumber( tom.engine.adt.tomname.types.TomNumberList  begin,  tom.engine.adt.tomname.types.TomNumberList  end) {    if(tom_terms_equal_TomNumberList(begin,end)) {      return ( tom.engine.adt.tomname.types.TomNumberList )tom_empty_list_concTomNumber();    } else {      return ( tom.engine.adt.tomname.types.TomNumberList )tom_cons_list_concTomNumber(( tom.engine.adt.tomname.types.TomNumber )tom_get_head_concTomNumber_TomNumberList(begin),( tom.engine.adt.tomname.types.TomNumberList )tom_get_slice_concTomNumber(( tom.engine.adt.tomname.types.TomNumberList )tom_get_tail_concTomNumber_TomNumberList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomname.types.TomNameList  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName || t instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_empty_list_concTomName() { return  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ; }private static  tom.engine.adt.tomname.types.TomNameList  tom_cons_list_concTomName( tom.engine.adt.tomname.types.TomName  e,  tom.engine.adt.tomname.types.TomNameList  l) { return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_head_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.getHeadconcTomName()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_tail_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.getTailconcTomName()  ;}private static boolean tom_is_empty_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.isEmptyconcTomName()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList  l1,  tom.engine.adt.tomname.types.TomNameList  l2) {    if(tom_is_empty_concTomName_TomNameList(l1)) {     return l2;    } else if(tom_is_empty_concTomName_TomNameList(l2)) {     return l1;    } else if(tom_is_empty_concTomName_TomNameList(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(l1))) {     return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(l1),l2);    } else {      return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(l1),tom_append_list_concTomName(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(l1),l2));    }   }  private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end) {    if(tom_terms_equal_TomNameList(begin,end)) {      return ( tom.engine.adt.tomname.types.TomNameList )tom_empty_list_concTomName();    } else {      return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(begin),( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomTerm( tom.engine.adt.tomterm.types.TomList  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm || t instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_empty_list_concTomTerm() { return  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ; }private static  tom.engine.adt.tomterm.types.TomList  tom_cons_list_concTomTerm( tom.engine.adt.tomterm.types.TomTerm  e,  tom.engine.adt.tomterm.types.TomList  l) { return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(e,l) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_head_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.getHeadconcTomTerm()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_tail_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.getTailconcTomTerm()  ;}private static boolean tom_is_empty_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.isEmptyconcTomTerm()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList  l1,  tom.engine.adt.tomterm.types.TomList  l2) {    if(tom_is_empty_concTomTerm_TomList(l1)) {     return l2;    } else if(tom_is_empty_concTomTerm_TomList(l2)) {     return l1;    } else if(tom_is_empty_concTomTerm_TomList(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(l1))) {     return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(l1),l2);    } else {      return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(l1),tom_append_list_concTomTerm(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(l1),l2));    }   }  private static  tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end) {    if(tom_terms_equal_TomList(begin,end)) {      return ( tom.engine.adt.tomterm.types.TomList )tom_empty_list_concTomTerm();    } else {      return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(begin),( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(begin),end));    }   }  private static boolean tom_is_fun_sym_concOption( tom.engine.adt.tomoption.types.OptionList  t) {  return  t instanceof tom.engine.adt.tomoption.types.optionlist.ConsconcOption || t instanceof tom.engine.adt.tomoption.types.optionlist.EmptyconcOption  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_empty_list_concOption() { return  tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_cons_list_concOption( tom.engine.adt.tomoption.types.Option  e,  tom.engine.adt.tomoption.types.OptionList  l) { return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make(e,l) ; }private static  tom.engine.adt.tomoption.types.Option  tom_get_head_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.getHeadconcOption()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_tail_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.getTailconcOption()  ;}private static boolean tom_is_empty_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) {  return  l.isEmptyconcOption()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList  l1,  tom.engine.adt.tomoption.types.OptionList  l2) {    if(tom_is_empty_concOption_OptionList(l1)) {     return l2;    } else if(tom_is_empty_concOption_OptionList(l2)) {     return l1;    } else if(tom_is_empty_concOption_OptionList(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(l1))) {     return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(l1),l2);    } else {      return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(l1),tom_append_list_concOption(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(l1),l2));    }   }  private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end) {    if(tom_terms_equal_OptionList(begin,end)) {      return ( tom.engine.adt.tomoption.types.OptionList )tom_empty_list_concOption();    } else {      return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(( tom.engine.adt.tomoption.types.Option )tom_get_head_concOption_OptionList(begin),( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption(( tom.engine.adt.tomoption.types.OptionList )tom_get_tail_concOption_OptionList(begin),end));    }   }  private static boolean tom_is_fun_sym_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  t) {  return  t instanceof tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint || t instanceof tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_empty_list_concConstraint() { return  tom.engine.adt.tomconstraint.types.constraintlist.EmptyconcConstraint.make() ; }private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_cons_list_concConstraint( tom.engine.adt.tomconstraint.types.Constraint  e,  tom.engine.adt.tomconstraint.types.ConstraintList  l) { return  tom.engine.adt.tomconstraint.types.constraintlist.ConsconcConstraint.make(e,l) ; }private static  tom.engine.adt.tomconstraint.types.Constraint  tom_get_head_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.getHeadconcConstraint()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_tail_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.getTailconcConstraint()  ;}private static boolean tom_is_empty_concConstraint_ConstraintList( tom.engine.adt.tomconstraint.types.ConstraintList  l) {  return  l.isEmptyconcConstraint()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_append_list_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  l1,  tom.engine.adt.tomconstraint.types.ConstraintList  l2) {    if(tom_is_empty_concConstraint_ConstraintList(l1)) {     return l2;    } else if(tom_is_empty_concConstraint_ConstraintList(l2)) {     return l1;    } else if(tom_is_empty_concConstraint_ConstraintList(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(l1))) {     return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(l1),l2);    } else {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(l1),tom_append_list_concConstraint(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(l1),l2));    }   }  private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slice_concConstraint( tom.engine.adt.tomconstraint.types.ConstraintList  begin,  tom.engine.adt.tomconstraint.types.ConstraintList  end) {    if(tom_terms_equal_ConstraintList(begin,end)) {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_empty_list_concConstraint();    } else {      return ( tom.engine.adt.tomconstraint.types.ConstraintList )tom_cons_list_concConstraint(( tom.engine.adt.tomconstraint.types.Constraint )tom_get_head_concConstraint_ConstraintList(begin),( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_slice_concConstraint(( tom.engine.adt.tomconstraint.types.ConstraintList )tom_get_tail_concConstraint_ConstraintList(begin),end));    }   }  private static boolean tom_is_fun_sym_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList  t) {  return  t instanceof tom.engine.adt.tomslot.types.pairnamedecllist.ConsconcPairNameDecl || t instanceof tom.engine.adt.tomslot.types.pairnamedecllist.EmptyconcPairNameDecl  ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_empty_list_concPairNameDecl() { return  tom.engine.adt.tomslot.types.pairnamedecllist.EmptyconcPairNameDecl.make() ; }private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_cons_list_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDecl  e,  tom.engine.adt.tomslot.types.PairNameDeclList  l) { return  tom.engine.adt.tomslot.types.pairnamedecllist.ConsconcPairNameDecl.make(e,l) ; }private static  tom.engine.adt.tomslot.types.PairNameDecl  tom_get_head_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) {  return  l.getHeadconcPairNameDecl()  ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_tail_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) {  return  l.getTailconcPairNameDecl()  ;}private static boolean tom_is_empty_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) {  return  l.isEmptyconcPairNameDecl()  ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_append_list_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList  l1,  tom.engine.adt.tomslot.types.PairNameDeclList  l2) {    if(tom_is_empty_concPairNameDecl_PairNameDeclList(l1)) {     return l2;    } else if(tom_is_empty_concPairNameDecl_PairNameDeclList(l2)) {     return l1;    } else if(tom_is_empty_concPairNameDecl_PairNameDeclList(( tom.engine.adt.tomslot.types.PairNameDeclList )tom_get_tail_concPairNameDecl_PairNameDeclList(l1))) {     return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(( tom.engine.adt.tomslot.types.PairNameDecl )tom_get_head_concPairNameDecl_PairNameDeclList(l1),l2);    } else {      return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(( tom.engine.adt.tomslot.types.PairNameDecl )tom_get_head_concPairNameDecl_PairNameDeclList(l1),tom_append_list_concPairNameDecl(( tom.engine.adt.tomslot.types.PairNameDeclList )tom_get_tail_concPairNameDecl_PairNameDeclList(l1),l2));    }   }  private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_slice_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList  begin,  tom.engine.adt.tomslot.types.PairNameDeclList  end) {    if(tom_terms_equal_PairNameDeclList(begin,end)) {      return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_empty_list_concPairNameDecl();    } else {      return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(( tom.engine.adt.tomslot.types.PairNameDecl )tom_get_head_concPairNameDecl_PairNameDeclList(begin),( tom.engine.adt.tomslot.types.PairNameDeclList )tom_get_slice_concPairNameDecl(( tom.engine.adt.tomslot.types.PairNameDeclList )tom_get_tail_concPairNameDecl_PairNameDeclList(begin),end));    }   }  private static boolean tom_is_fun_sym_concSlot( tom.engine.adt.tomslot.types.SlotList  t) {  return  t instanceof tom.engine.adt.tomslot.types.slotlist.ConsconcSlot || t instanceof tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_empty_list_concSlot() { return  tom.engine.adt.tomslot.types.slotlist.EmptyconcSlot.make() ; }private static  tom.engine.adt.tomslot.types.SlotList  tom_cons_list_concSlot( tom.engine.adt.tomslot.types.Slot  e,  tom.engine.adt.tomslot.types.SlotList  l) { return  tom.engine.adt.tomslot.types.slotlist.ConsconcSlot.make(e,l) ; }private static  tom.engine.adt.tomslot.types.Slot  tom_get_head_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.getHeadconcSlot()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_tail_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.getTailconcSlot()  ;}private static boolean tom_is_empty_concSlot_SlotList( tom.engine.adt.tomslot.types.SlotList  l) {  return  l.isEmptyconcSlot()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_append_list_concSlot( tom.engine.adt.tomslot.types.SlotList  l1,  tom.engine.adt.tomslot.types.SlotList  l2) {    if(tom_is_empty_concSlot_SlotList(l1)) {     return l2;    } else if(tom_is_empty_concSlot_SlotList(l2)) {     return l1;    } else if(tom_is_empty_concSlot_SlotList(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(l1))) {     return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(l1),l2);    } else {      return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(l1),tom_append_list_concSlot(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(l1),l2));    }   }  private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slice_concSlot( tom.engine.adt.tomslot.types.SlotList  begin,  tom.engine.adt.tomslot.types.SlotList  end) {    if(tom_terms_equal_SlotList(begin,end)) {      return ( tom.engine.adt.tomslot.types.SlotList )tom_empty_list_concSlot();    } else {      return ( tom.engine.adt.tomslot.types.SlotList )tom_cons_list_concSlot(( tom.engine.adt.tomslot.types.Slot )tom_get_head_concSlot_SlotList(begin),( tom.engine.adt.tomslot.types.SlotList )tom_get_slice_concSlot(( tom.engine.adt.tomslot.types.SlotList )tom_get_tail_concSlot_SlotList(begin),end));    }   }   /* Generated by TOM (version 2.4alpha): Do not edit this file */private static boolean tom_terms_equal_Strategy(Object t1, Object t2) {  return t1.equals(t2) ;}private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_mu( tom.library.strategy.mutraveler.MuStrategy  var,  tom.library.strategy.mutraveler.MuStrategy  v) { return  new tom.library.strategy.mutraveler.Mu(var,v) ; }/* Generated by TOM (version 2.4alpha): Do not edit this file */private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Identity() { return  new tom.library.strategy.mutraveler.Identity() ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Fail() { return  new tom.library.strategy.mutraveler.Fail() ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Sequence( tom.library.strategy.mutraveler.MuStrategy  first,  tom.library.strategy.mutraveler.MuStrategy  then) { return  new tom.library.strategy.mutraveler.Sequence(first,then) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Choice( tom.library.strategy.mutraveler.MuStrategy  first,  tom.library.strategy.mutraveler.MuStrategy  then) { return  new tom.library.strategy.mutraveler.Choice(first,then) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_All( tom.library.strategy.mutraveler.MuStrategy  v) { return  new tom.library.strategy.mutraveler.All(v) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_MuVar( String  name) { return  new tom.library.strategy.mutraveler.MuVar(name) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Try( tom.library.strategy.mutraveler.MuStrategy  v) { return tom_make_Choice(v,tom_make_Identity()) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_TopDownCollect( tom.library.strategy.mutraveler.MuStrategy  v) { return tom_make_mu(tom_make_MuVar("x"),tom_make_Try(tom_make_Sequence(v,tom_make_All(tom_make_MuVar("x"))))) ; }   





 public final static String DEFAULT_MODULE_NAME = "default"; 
  
  /** shortcut */
  
  /* Generated by TOM (version 2.4alpha): Do not edit this file */ 
  
  protected static TomList cons(TomTerm t, TomList l) {
    if(t!=null) {
      return tom_cons_list_concTomTerm(t,tom_append_list_concTomTerm(l,tom_empty_list_concTomTerm()));
    } else {
      System.out.println("cons: Warning t == null");
      return l;
    }
  }

  protected static TomNumberList appendNumber(int n, TomNumberList path) {
    return tom_append_list_concTomNumber(path,tom_cons_list_concTomNumber(tom_make_Number(n),tom_empty_list_concTomNumber()));
  }
    
  protected static TomList append(TomTerm t, TomList l) {
    if(l.isEmptyconcTomTerm()) {
      return cons(t,l);
    } else {
      return cons(l.getHeadconcTomTerm(), append(t,l.getTailconcTomTerm()));
    }
  }

  protected static TomList concat(TomList l1, TomList l2) {
    if(l1.isEmptyconcTomTerm()) {
      return l2;
    } else {
      return cons(l1.getHeadconcTomTerm(), concat(l1.getTailconcTomTerm(),l2));
    }
  }

  public static String getTomType(TomType type) {
     if(type instanceof  tom.engine.adt.tomtype.types.TomType ) { { tom.engine.adt.tomtype.types.TomType  tom_match1_1=(( tom.engine.adt.tomtype.types.TomType )type); if (tom_is_fun_sym_ASTTomType(tom_match1_1) ||  false ) { { String  tom_match1_1_String=tom_get_slot_ASTTomType_String(tom_match1_1); { String  tom_s=tom_match1_1_String; if ( true ) {
return tom_s; } } } } if (tom_is_fun_sym_TomTypeAlone(tom_match1_1) ||  false ) { { String  tom_match1_1_String=tom_get_slot_TomTypeAlone_String(tom_match1_1); { String  tom_s=tom_match1_1_String; if ( true ) {
return tom_s; } } } } if (tom_is_fun_sym_Type(tom_match1_1) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_match1_1_TomType=tom_get_slot_Type_TomType(tom_match1_1); { tom.engine.adt.tomtype.types.TomType  tom_match1_1_TlType=tom_get_slot_Type_TlType(tom_match1_1); if (tom_is_fun_sym_ASTTomType(tom_match1_1_TomType) ||  false ) { { String  tom_match1_1_TomType_String=tom_get_slot_ASTTomType_String(tom_match1_1_TomType); { String  tom_s=tom_match1_1_TomType_String; if ( true ) {
return tom_s; } } } } } } } if (tom_is_fun_sym_EmptyType(tom_match1_1) ||  false ) { if ( true ) {
return null; } } } }

		System.out.println("getTomType error on term: " + type);
		throw new TomRuntimeException("getTomType error on term: " + type);
  }

  protected static String getTLType(TomType type) {
     if(type instanceof  tom.engine.adt.tomtype.types.TomType ) { { tom.engine.adt.tomtype.types.TomType  tom_match2_1=(( tom.engine.adt.tomtype.types.TomType )type); if (tom_is_fun_sym_TLType(tom_match2_1) ||  false ) { if ( true ) {
 return getTLCode(type);  } } if (tom_is_fun_sym_Type(tom_match2_1) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_match2_1_TlType=tom_get_slot_Type_TlType(tom_match2_1); { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match2_1_TlType; if ( true ) {
 return getTLCode(tom_tlType);  } } } } } }

		throw new TomRuntimeException("getTLType error on term: " + type);
  }

  protected static String getTLCode(TomType type) {
     if(type instanceof  tom.engine.adt.tomtype.types.TomType ) { { tom.engine.adt.tomtype.types.TomType  tom_match3_1=(( tom.engine.adt.tomtype.types.TomType )type); if (tom_is_fun_sym_TLType(tom_match3_1) ||  false ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tom_match3_1_Tl=tom_get_slot_TLType_Tl(tom_match3_1); if (tom_is_fun_sym_TL(tom_match3_1_Tl) ||  false ) { { String  tom_match3_1_Tl_Code=tom_get_slot_TL_Code(tom_match3_1_Tl); { String  tom_tlType=tom_match3_1_Tl_Code; if ( true ) {
 return tom_tlType;  } } } } } } if (tom_is_fun_sym_TLType(tom_match3_1) ||  false ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tom_match3_1_Tl=tom_get_slot_TLType_Tl(tom_match3_1); if (tom_is_fun_sym_ITL(tom_match3_1_Tl) ||  false ) { { String  tom_match3_1_Tl_Code=tom_get_slot_ITL_Code(tom_match3_1_Tl); { String  tom_tlType=tom_match3_1_Tl_Code; if ( true ) {
 return tom_tlType;  } } } } } } } }

		System.out.println("getTLCode error on term: " + type);
		throw new TomRuntimeException("getTLCode error on term: " + type);
  }

  public static TomType getSymbolCodomain(TomSymbol symbol) {
    if(symbol!=null) {
      return symbol.getTypesToType().getCodomain();
    } else {
      //System.out.println("getSymbolCodomain: symbol = " + symbol);
      return tom_make_EmptyType();
    }
  }   

  protected static TomTypeList getSymbolDomain(TomSymbol symbol) {
    if(symbol!=null) {
      return symbol.getTypesToType().getDomain();
    } else {
      //System.out.println("getSymbolDomain: symbol = " + symbol);
      return tom_empty_list_concTomType();
    }
  }

  private static HashMap numberListToIdentifierMap = new HashMap();

  private static String elementToIdentifier(TomNumber subject) {
     if(subject instanceof  tom.engine.adt.tomname.types.TomNumber ) { { tom.engine.adt.tomname.types.TomNumber  tom_match4_1=(( tom.engine.adt.tomname.types.TomNumber )subject); if (tom_is_fun_sym_Begin(tom_match4_1) ||  false ) { { tom.engine.adt.tomname.types.TomNumber  tom_match4_1_Number=tom_get_slot_Begin_Number(tom_match4_1); if (tom_is_fun_sym_Number(tom_match4_1_Number) ||  false ) { { int  tom_match4_1_Number_Integer=tom_get_slot_Number_Integer(tom_match4_1_Number); { int  tom_i=tom_match4_1_Number_Integer; if ( true ) {
 return "_begin" + tom_i;  } } } } } } if (tom_is_fun_sym_End(tom_match4_1) ||  false ) { { tom.engine.adt.tomname.types.TomNumber  tom_match4_1_Number=tom_get_slot_End_Number(tom_match4_1); if (tom_is_fun_sym_Number(tom_match4_1_Number) ||  false ) { { int  tom_match4_1_Number_Integer=tom_get_slot_Number_Integer(tom_match4_1_Number); { int  tom_i=tom_match4_1_Number_Integer; if ( true ) {
 return "_end" + tom_i;  } } } } } } if (tom_is_fun_sym_MatchNumber(tom_match4_1) ||  false ) { { tom.engine.adt.tomname.types.TomNumber  tom_match4_1_Number=tom_get_slot_MatchNumber_Number(tom_match4_1); if (tom_is_fun_sym_Number(tom_match4_1_Number) ||  false ) { { int  tom_match4_1_Number_Integer=tom_get_slot_Number_Integer(tom_match4_1_Number); { int  tom_i=tom_match4_1_Number_Integer; if ( true ) {
 return "_match" + tom_i;  } } } } } } if (tom_is_fun_sym_PatternNumber(tom_match4_1) ||  false ) { { tom.engine.adt.tomname.types.TomNumber  tom_match4_1_Number=tom_get_slot_PatternNumber_Number(tom_match4_1); if (tom_is_fun_sym_Number(tom_match4_1_Number) ||  false ) { { int  tom_match4_1_Number_Integer=tom_get_slot_Number_Integer(tom_match4_1_Number); { int  tom_i=tom_match4_1_Number_Integer; if ( true ) {
 return "_pattern" + tom_i;  } } } } } } if (tom_is_fun_sym_ListNumber(tom_match4_1) ||  false ) { { tom.engine.adt.tomname.types.TomNumber  tom_match4_1_Number=tom_get_slot_ListNumber_Number(tom_match4_1); if (tom_is_fun_sym_Number(tom_match4_1_Number) ||  false ) { { int  tom_match4_1_Number_Integer=tom_get_slot_Number_Integer(tom_match4_1_Number); { int  tom_i=tom_match4_1_Number_Integer; if ( true ) {
 return "_list" + tom_i;  } } } } } } if (tom_is_fun_sym_IndexNumber(tom_match4_1) ||  false ) { { tom.engine.adt.tomname.types.TomNumber  tom_match4_1_Number=tom_get_slot_IndexNumber_Number(tom_match4_1); if (tom_is_fun_sym_Number(tom_match4_1_Number) ||  false ) { { int  tom_match4_1_Number_Integer=tom_get_slot_Number_Integer(tom_match4_1_Number); { int  tom_i=tom_match4_1_Number_Integer; if ( true ) {
 return "_index" + tom_i;  } } } } } } if (tom_is_fun_sym_AbsVar(tom_match4_1) ||  false ) { { tom.engine.adt.tomname.types.TomNumber  tom_match4_1_Number=tom_get_slot_AbsVar_Number(tom_match4_1); if (tom_is_fun_sym_Number(tom_match4_1_Number) ||  false ) { { int  tom_match4_1_Number_Integer=tom_get_slot_Number_Integer(tom_match4_1_Number); { int  tom_i=tom_match4_1_Number_Integer; if ( true ) {
 return "_absvar" + tom_i;  } } } } } } if (tom_is_fun_sym_RenamedVar(tom_match4_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match4_1_AstName=tom_get_slot_RenamedVar_AstName(tom_match4_1); if (tom_is_fun_sym_Name(tom_match4_1_AstName) ||  false ) { { String  tom_match4_1_AstName_String=tom_get_slot_Name_String(tom_match4_1_AstName); { String  tom_name=tom_match4_1_AstName_String; if ( true ) {
 return "_renamedvar_" + tom_name;  } } } } } } if (tom_is_fun_sym_NameNumber(tom_match4_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match4_1_AstName=tom_get_slot_NameNumber_AstName(tom_match4_1); if (tom_is_fun_sym_Name(tom_match4_1_AstName) ||  false ) { { String  tom_match4_1_AstName_String=tom_get_slot_Name_String(tom_match4_1_AstName); { String  tom_name=tom_match4_1_AstName_String; if ( true ) {
 return "_" + tom_name;  } } } } } } if (tom_is_fun_sym_NameNumber(tom_match4_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match4_1_AstName=tom_get_slot_NameNumber_AstName(tom_match4_1); if (tom_is_fun_sym_PositionName(tom_match4_1_AstName) ||  false ) { { tom.engine.adt.tomname.types.TomNumberList  tom_match4_1_AstName_NumberList=tom_get_slot_PositionName_NumberList(tom_match4_1_AstName); { tom.engine.adt.tomname.types.TomNumberList  tom_numberList=tom_match4_1_AstName_NumberList; if ( true ) {
 return numberListToIdentifier(tom_numberList);  } } } } } } if (tom_is_fun_sym_RuleVar(tom_match4_1) ||  false ) { if ( true ) {
 return "_rulevar";  } } if (tom_is_fun_sym_Number(tom_match4_1) ||  false ) { { int  tom_match4_1_Integer=tom_get_slot_Number_Integer(tom_match4_1); { int  tom_i=tom_match4_1_Integer; if ( true ) {
 return "_" + tom_i;  } } } } } }

		return subject.toString(); 
  }

  protected static String numberListToIdentifier(TomNumberList l) {
    String res = (String)numberListToIdentifierMap.get(l);
    if(res == null) {
      TomNumberList key = l;
      StringBuffer buf = new StringBuffer(30);
      while(!l.isEmptyconcTomNumber()) {
        TomNumber elt = l.getHeadconcTomNumber();
        //buf.append("_");
        buf.append(elementToIdentifier(elt));
        l = l.getTailconcTomNumber();
      }
      res = buf.toString();
      numberListToIdentifierMap.put(key,res);
    }
    return res;
  }

  protected static boolean isListOperator(TomSymbol subject) {
    if(subject==null) {
      return false;
    }
     if(subject instanceof  tom.engine.adt.tomsignature.types.TomSymbol ) { { tom.engine.adt.tomsignature.types.TomSymbol  tom_match5_1=(( tom.engine.adt.tomsignature.types.TomSymbol )subject); if (tom_is_fun_sym_Symbol(tom_match5_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match5_1_Option=tom_get_slot_Symbol_Option(tom_match5_1); { tom.engine.adt.tomoption.types.OptionList  tom_l=tom_match5_1_Option; if ( true ) {

        OptionList optionList = tom_l;
        while(!optionList.isEmptyconcOption()) {
          Option opt = optionList.getHeadconcOption();
           if(opt instanceof  tom.engine.adt.tomoption.types.Option ) { { tom.engine.adt.tomoption.types.Option  tom_match6_1=(( tom.engine.adt.tomoption.types.Option )opt); if (tom_is_fun_sym_DeclarationToOption(tom_match6_1) ||  false ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_match6_1_AstDeclaration=tom_get_slot_DeclarationToOption_AstDeclaration(tom_match6_1); if (tom_is_fun_sym_MakeEmptyList(tom_match6_1_AstDeclaration) ||  false ) { if ( true ) {
 return true;  } } } } if (tom_is_fun_sym_DeclarationToOption(tom_match6_1) ||  false ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_match6_1_AstDeclaration=tom_get_slot_DeclarationToOption_AstDeclaration(tom_match6_1); if (tom_is_fun_sym_MakeAddList(tom_match6_1_AstDeclaration) ||  false ) { if ( true ) {
 return true;  } } } } } }

          optionList = optionList.getTailconcOption();
        }
        return false;
       } } } } } }

		System.out.println("isListOperator: strange case: '" + subject + "'");
		throw new TomRuntimeException("isListOperator: strange case: '" + subject + "'");
  }

  protected static boolean isArrayOperator(TomSymbol subject) {
    //%variable
    if(subject==null) {
      return false;
    }
     if(subject instanceof  tom.engine.adt.tomsignature.types.TomSymbol ) { { tom.engine.adt.tomsignature.types.TomSymbol  tom_match7_1=(( tom.engine.adt.tomsignature.types.TomSymbol )subject); if (tom_is_fun_sym_Symbol(tom_match7_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match7_1_Option=tom_get_slot_Symbol_Option(tom_match7_1); { tom.engine.adt.tomoption.types.OptionList  tom_l=tom_match7_1_Option; if ( true ) {

        OptionList optionList = tom_l;
        while(!optionList.isEmptyconcOption()) {
          Option opt = optionList.getHeadconcOption();
           if(opt instanceof  tom.engine.adt.tomoption.types.Option ) { { tom.engine.adt.tomoption.types.Option  tom_match8_1=(( tom.engine.adt.tomoption.types.Option )opt); if (tom_is_fun_sym_DeclarationToOption(tom_match8_1) ||  false ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_match8_1_AstDeclaration=tom_get_slot_DeclarationToOption_AstDeclaration(tom_match8_1); if (tom_is_fun_sym_MakeEmptyArray(tom_match8_1_AstDeclaration) ||  false ) { if ( true ) {
 return true;  } } } } if (tom_is_fun_sym_DeclarationToOption(tom_match8_1) ||  false ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_match8_1_AstDeclaration=tom_get_slot_DeclarationToOption_AstDeclaration(tom_match8_1); if (tom_is_fun_sym_MakeAddArray(tom_match8_1_AstDeclaration) ||  false ) { if ( true ) {
 return true;  } } } } } }

          optionList = optionList.getTailconcOption();
        }
        return false;
       } } } } } }

		System.out.println("isArrayOperator: strange case: '" + subject + "'");
		throw new TomRuntimeException("isArrayOperator: strange case: '" + subject + "'");
  }

  // ------------------------------------------------------------
  public static void collectVariable(Collection collection, jjtraveler.Visitable subject) {
    tom_make_TopDownCollect(tom_make_collectVariable(collection)).apply(subject);
  }

	 private static class collectVariable  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  java.util.Collection  collection;  public collectVariable(  java.util.Collection  collection ) { super(tom_make_Identity() ); this.collection=collection; } public  java.util.Collection  getcollection() { return collection;} public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if(tom__arg instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match9_1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); { tom.engine.adt.tomterm.types.TomTerm  tom_v=tom_match9_1; {boolean tom_bool_match9_1= false ; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match9_1_Constraints= null ; if (tom_is_fun_sym_Variable(tom_match9_1)) {tom_bool_match9_1= true ;tom_match9_1_Constraints=tom_get_slot_Variable_Constraints(tom_match9_1); } else { if (tom_is_fun_sym_VariableStar(tom_match9_1)) {tom_bool_match9_1= true ;tom_match9_1_Constraints=tom_get_slot_VariableStar_Constraints(tom_match9_1); } } if (tom_bool_match9_1) { { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraintList=tom_match9_1_Constraints; if ( true ) {


				collection.add(tom_v);
				TomTerm annotedVariable = getAssignToVariable(tom_constraintList);
				if(annotedVariable!=null) {
					collection.add(annotedVariable);
				}
				tom_make_Fail().visit(tom_v);
			 } } } } } } { tom.engine.adt.tomterm.types.TomTerm  tom_v=tom_match9_1; {boolean tom_bool_match9_1= false ; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match9_1_Constraints= null ; if (tom_is_fun_sym_UnamedVariable(tom_match9_1)) {tom_bool_match9_1= true ;tom_match9_1_Constraints=tom_get_slot_UnamedVariable_Constraints(tom_match9_1); } else { if (tom_is_fun_sym_UnamedVariableStar(tom_match9_1)) {tom_bool_match9_1= true ;tom_match9_1_Constraints=tom_get_slot_UnamedVariableStar_Constraints(tom_match9_1); } } if (tom_bool_match9_1) { { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraintList=tom_match9_1_Constraints; if ( true ) {


				TomTerm annotedVariable = getAssignToVariable(tom_constraintList);
				if(annotedVariable!=null) {
					collection.add(annotedVariable);
				}
				tom_make_Fail().visit(tom_v);
			 } } } } } } if (tom_is_fun_sym_RecordAppl(tom_match9_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_t=tom_match9_1; { tom.engine.adt.tomslot.types.SlotList  tom_match9_1_Slots=tom_get_slot_RecordAppl_Slots(tom_match9_1); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match9_1_Constraints=tom_get_slot_RecordAppl_Constraints(tom_match9_1); { tom.engine.adt.tomslot.types.SlotList  tom_subterms=tom_match9_1_Slots; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraintList=tom_match9_1_Constraints; if ( true ) {



        collectVariable(collection,tom_subterms);
				TomTerm annotedVariable = getAssignToVariable(tom_constraintList);
				if(annotedVariable!=null) {
					collection.add(annotedVariable);
				}
				tom_make_Fail().visit(tom_t);
			 } } } } } } } } } return super.visit_TomTerm(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_collectVariable( java.util.Collection  t0) { return new collectVariable(t0); }




  public static Map collectMultiplicity(jjtraveler.Visitable subject) {
    // collect variables
    ArrayList variableList = new ArrayList();
    collectVariable(variableList,subject);
    // compute multiplicities
    HashMap multiplicityMap = new HashMap();
    Iterator it = variableList.iterator();
    while(it.hasNext()) {
      TomTerm variable = (TomTerm)it.next();
      TomName name = variable.getAstName();
      if(multiplicityMap.containsKey(name)) {
        Integer value = (Integer)multiplicityMap.get(name);
        multiplicityMap.put(name, new Integer(1+value.intValue()));
      } else {
        multiplicityMap.put(name, new Integer(1));
      }
    }
    return multiplicityMap;
  }

  protected boolean isAnnotedVariable(TomTerm t) {
     if(t instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match10_1=(( tom.engine.adt.tomterm.types.TomTerm )t); {boolean tom_bool_match10_1= false ; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match10_1_Constraints= null ; if (tom_is_fun_sym_RecordAppl(tom_match10_1)) {tom_bool_match10_1= true ;tom_match10_1_Constraints=tom_get_slot_RecordAppl_Constraints(tom_match10_1); } else { if (tom_is_fun_sym_Variable(tom_match10_1)) {tom_bool_match10_1= true ;tom_match10_1_Constraints=tom_get_slot_Variable_Constraints(tom_match10_1); } else { if (tom_is_fun_sym_VariableStar(tom_match10_1)) {tom_bool_match10_1= true ;tom_match10_1_Constraints=tom_get_slot_VariableStar_Constraints(tom_match10_1); } else { if (tom_is_fun_sym_UnamedVariable(tom_match10_1)) {tom_bool_match10_1= true ;tom_match10_1_Constraints=tom_get_slot_UnamedVariable_Constraints(tom_match10_1); } else { if (tom_is_fun_sym_UnamedVariableStar(tom_match10_1)) {tom_bool_match10_1= true ;tom_match10_1_Constraints=tom_get_slot_UnamedVariableStar_Constraints(tom_match10_1); } } } } } if (tom_bool_match10_1) { { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraintList=tom_match10_1_Constraints; if ( true ) {

        return getAssignToVariable(tom_constraintList)!=null;
       } } } } } } }

    return false;
  }

  public static TomTerm getAssignToVariable(ConstraintList constraintList) {
     if(constraintList instanceof  tom.engine.adt.tomconstraint.types.ConstraintList ) { { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match11_1=(( tom.engine.adt.tomconstraint.types.ConstraintList )constraintList); if (tom_is_fun_sym_concConstraint(tom_match11_1) ||  false ) { { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match11_1_list1=tom_match11_1; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match11_1_begin1=tom_match11_1_list1; { tom.engine.adt.tomconstraint.types.ConstraintList  tom_match11_1_end1=tom_match11_1_list1; { while (!(tom_is_empty_concConstraint_ConstraintList(tom_match11_1_end1))) {tom_match11_1_list1=tom_match11_1_end1; { { tom.engine.adt.tomconstraint.types.Constraint  tom_match11_1_2=tom_get_head_concConstraint_ConstraintList(tom_match11_1_list1);tom_match11_1_list1=tom_get_tail_concConstraint_ConstraintList(tom_match11_1_list1); if (tom_is_fun_sym_AssignTo(tom_match11_1_2) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match11_1_2_Variable=tom_get_slot_AssignTo_Variable(tom_match11_1_2); if (tom_is_fun_sym_Variable(tom_match11_1_2_Variable) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_var=tom_match11_1_2_Variable; if ( true ) {
 return tom_var;  } } } } } }tom_match11_1_end1=tom_get_tail_concConstraint_ConstraintList(tom_match11_1_end1); } }tom_match11_1_list1=tom_match11_1_begin1; } } } } } } }

    return null;
  }

  protected static Declaration getIsFsymDecl(OptionList optionList) {
     if(optionList instanceof  tom.engine.adt.tomoption.types.OptionList ) { { tom.engine.adt.tomoption.types.OptionList  tom_match12_1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if (tom_is_fun_sym_concOption(tom_match12_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match12_1_list1=tom_match12_1; { tom.engine.adt.tomoption.types.OptionList  tom_match12_1_begin1=tom_match12_1_list1; { tom.engine.adt.tomoption.types.OptionList  tom_match12_1_end1=tom_match12_1_list1; { while (!(tom_is_empty_concOption_OptionList(tom_match12_1_end1))) {tom_match12_1_list1=tom_match12_1_end1; { { tom.engine.adt.tomoption.types.Option  tom_match12_1_2=tom_get_head_concOption_OptionList(tom_match12_1_list1);tom_match12_1_list1=tom_get_tail_concOption_OptionList(tom_match12_1_list1); if (tom_is_fun_sym_DeclarationToOption(tom_match12_1_2) ||  false ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_match12_1_2_AstDeclaration=tom_get_slot_DeclarationToOption_AstDeclaration(tom_match12_1_2); if (tom_is_fun_sym_IsFsymDecl(tom_match12_1_2_AstDeclaration) ||  false ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_decl=tom_match12_1_2_AstDeclaration; if ( true ) {
 return tom_decl;  } } } } } }tom_match12_1_end1=tom_get_tail_concOption_OptionList(tom_match12_1_end1); } }tom_match12_1_list1=tom_match12_1_begin1; } } } } } } }

    return null;
  }
  
	protected static String getModuleName(OptionList optionList) {
     if(optionList instanceof  tom.engine.adt.tomoption.types.OptionList ) { { tom.engine.adt.tomoption.types.OptionList  tom_match13_1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if (tom_is_fun_sym_concOption(tom_match13_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match13_1_list1=tom_match13_1; { tom.engine.adt.tomoption.types.OptionList  tom_match13_1_begin1=tom_match13_1_list1; { tom.engine.adt.tomoption.types.OptionList  tom_match13_1_end1=tom_match13_1_list1; { while (!(tom_is_empty_concOption_OptionList(tom_match13_1_end1))) {tom_match13_1_list1=tom_match13_1_end1; { { tom.engine.adt.tomoption.types.Option  tom_match13_1_2=tom_get_head_concOption_OptionList(tom_match13_1_list1);tom_match13_1_list1=tom_get_tail_concOption_OptionList(tom_match13_1_list1); if (tom_is_fun_sym_ModuleName(tom_match13_1_2) ||  false ) { { String  tom_match13_1_2_String=tom_get_slot_ModuleName_String(tom_match13_1_2); { String  tom_moduleName=tom_match13_1_2_String; if ( true ) {
 return tom_moduleName;  } } } } }tom_match13_1_end1=tom_get_tail_concOption_OptionList(tom_match13_1_end1); } }tom_match13_1_list1=tom_match13_1_begin1; } } } } } } }

    return null;
  }

  protected static String getDebug(OptionList optionList) {
     if(optionList instanceof  tom.engine.adt.tomoption.types.OptionList ) { { tom.engine.adt.tomoption.types.OptionList  tom_match14_1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if (tom_is_fun_sym_concOption(tom_match14_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match14_1_list1=tom_match14_1; { tom.engine.adt.tomoption.types.OptionList  tom_match14_1_begin1=tom_match14_1_list1; { tom.engine.adt.tomoption.types.OptionList  tom_match14_1_end1=tom_match14_1_list1; { while (!(tom_is_empty_concOption_OptionList(tom_match14_1_end1))) {tom_match14_1_list1=tom_match14_1_end1; { { tom.engine.adt.tomoption.types.Option  tom_match14_1_2=tom_get_head_concOption_OptionList(tom_match14_1_list1);tom_match14_1_list1=tom_get_tail_concOption_OptionList(tom_match14_1_list1); if (tom_is_fun_sym_Debug(tom_match14_1_2) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match14_1_2_AstName=tom_get_slot_Debug_AstName(tom_match14_1_2); if (tom_is_fun_sym_Name(tom_match14_1_2_AstName) ||  false ) { { String  tom_match14_1_2_AstName_String=tom_get_slot_Name_String(tom_match14_1_2_AstName); { String  tom_str=tom_match14_1_2_AstName_String; if ( true ) {
 return tom_str;  } } } } } } }tom_match14_1_end1=tom_get_tail_concOption_OptionList(tom_match14_1_end1); } }tom_match14_1_list1=tom_match14_1_begin1; } } } } } } }

    return null;
  }

  protected static boolean hasGeneratedMatch(OptionList optionList) {
     if(optionList instanceof  tom.engine.adt.tomoption.types.OptionList ) { { tom.engine.adt.tomoption.types.OptionList  tom_match15_1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if (tom_is_fun_sym_concOption(tom_match15_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match15_1_list1=tom_match15_1; { tom.engine.adt.tomoption.types.OptionList  tom_match15_1_begin1=tom_match15_1_list1; { tom.engine.adt.tomoption.types.OptionList  tom_match15_1_end1=tom_match15_1_list1; { while (!(tom_is_empty_concOption_OptionList(tom_match15_1_end1))) {tom_match15_1_list1=tom_match15_1_end1; { { tom.engine.adt.tomoption.types.Option  tom_match15_1_2=tom_get_head_concOption_OptionList(tom_match15_1_list1);tom_match15_1_list1=tom_get_tail_concOption_OptionList(tom_match15_1_list1); if (tom_is_fun_sym_GeneratedMatch(tom_match15_1_2) ||  false ) { if ( true ) {
 return true;  } } }tom_match15_1_end1=tom_get_tail_concOption_OptionList(tom_match15_1_end1); } }tom_match15_1_list1=tom_match15_1_begin1; } } } } } } }

    return false;
  }

  protected static boolean hasConstant(OptionList optionList) {
     if(optionList instanceof  tom.engine.adt.tomoption.types.OptionList ) { { tom.engine.adt.tomoption.types.OptionList  tom_match16_1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if (tom_is_fun_sym_concOption(tom_match16_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match16_1_list1=tom_match16_1; { tom.engine.adt.tomoption.types.OptionList  tom_match16_1_begin1=tom_match16_1_list1; { tom.engine.adt.tomoption.types.OptionList  tom_match16_1_end1=tom_match16_1_list1; { while (!(tom_is_empty_concOption_OptionList(tom_match16_1_end1))) {tom_match16_1_list1=tom_match16_1_end1; { { tom.engine.adt.tomoption.types.Option  tom_match16_1_2=tom_get_head_concOption_OptionList(tom_match16_1_list1);tom_match16_1_list1=tom_get_tail_concOption_OptionList(tom_match16_1_list1); if (tom_is_fun_sym_Constant(tom_match16_1_2) ||  false ) { if ( true ) {
 return true;  } } }tom_match16_1_end1=tom_get_tail_concOption_OptionList(tom_match16_1_end1); } }tom_match16_1_list1=tom_match16_1_begin1; } } } } } } }

    return false;
  }

  protected static boolean hasDefinedSymbol(OptionList optionList) {
     if(optionList instanceof  tom.engine.adt.tomoption.types.OptionList ) { { tom.engine.adt.tomoption.types.OptionList  tom_match17_1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if (tom_is_fun_sym_concOption(tom_match17_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match17_1_list1=tom_match17_1; { tom.engine.adt.tomoption.types.OptionList  tom_match17_1_begin1=tom_match17_1_list1; { tom.engine.adt.tomoption.types.OptionList  tom_match17_1_end1=tom_match17_1_list1; { while (!(tom_is_empty_concOption_OptionList(tom_match17_1_end1))) {tom_match17_1_list1=tom_match17_1_end1; { { tom.engine.adt.tomoption.types.Option  tom_match17_1_2=tom_get_head_concOption_OptionList(tom_match17_1_list1);tom_match17_1_list1=tom_get_tail_concOption_OptionList(tom_match17_1_list1); if (tom_is_fun_sym_DefinedSymbol(tom_match17_1_2) ||  false ) { if ( true ) {
 return true;  } } }tom_match17_1_end1=tom_get_tail_concOption_OptionList(tom_match17_1_end1); } }tom_match17_1_list1=tom_match17_1_begin1; } } } } } } }

    return false;
  }

  protected static boolean hasImplicitXMLAttribut(OptionList optionList) {
     if(optionList instanceof  tom.engine.adt.tomoption.types.OptionList ) { { tom.engine.adt.tomoption.types.OptionList  tom_match18_1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if (tom_is_fun_sym_concOption(tom_match18_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match18_1_list1=tom_match18_1; { tom.engine.adt.tomoption.types.OptionList  tom_match18_1_begin1=tom_match18_1_list1; { tom.engine.adt.tomoption.types.OptionList  tom_match18_1_end1=tom_match18_1_list1; { while (!(tom_is_empty_concOption_OptionList(tom_match18_1_end1))) {tom_match18_1_list1=tom_match18_1_end1; { { tom.engine.adt.tomoption.types.Option  tom_match18_1_2=tom_get_head_concOption_OptionList(tom_match18_1_list1);tom_match18_1_list1=tom_get_tail_concOption_OptionList(tom_match18_1_list1); if (tom_is_fun_sym_ImplicitXMLAttribut(tom_match18_1_2) ||  false ) { if ( true ) {
 return true;  } } }tom_match18_1_end1=tom_get_tail_concOption_OptionList(tom_match18_1_end1); } }tom_match18_1_list1=tom_match18_1_begin1; } } } } } } }

    return false;
  }

  protected static boolean hasImplicitXMLChild(OptionList optionList) {
     if(optionList instanceof  tom.engine.adt.tomoption.types.OptionList ) { { tom.engine.adt.tomoption.types.OptionList  tom_match19_1=(( tom.engine.adt.tomoption.types.OptionList )optionList); if (tom_is_fun_sym_concOption(tom_match19_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match19_1_list1=tom_match19_1; { tom.engine.adt.tomoption.types.OptionList  tom_match19_1_begin1=tom_match19_1_list1; { tom.engine.adt.tomoption.types.OptionList  tom_match19_1_end1=tom_match19_1_list1; { while (!(tom_is_empty_concOption_OptionList(tom_match19_1_end1))) {tom_match19_1_list1=tom_match19_1_end1; { { tom.engine.adt.tomoption.types.Option  tom_match19_1_2=tom_get_head_concOption_OptionList(tom_match19_1_list1);tom_match19_1_list1=tom_get_tail_concOption_OptionList(tom_match19_1_list1); if (tom_is_fun_sym_ImplicitXMLChild(tom_match19_1_2) ||  false ) { if ( true ) {
 return true;  } } }tom_match19_1_end1=tom_get_tail_concOption_OptionList(tom_match19_1_end1); } }tom_match19_1_list1=tom_match19_1_begin1; } } } } } } }

    return false;
  } 

  /*
  protected boolean hasGetHead(OptionList optionList) {
    %match(OptionList optionList) {
      concOption(_*,DeclarationToOption(GetHeadDecl[]),_*) -> { return true; }
    }
    return false;
  } 

  protected boolean hasGetTail(OptionList optionList) {
    %match(OptionList optionList) {
      concOption(_*,DeclarationToOption(GetTailDecl[]),_*) -> { return true; }
    }
    return false;
  } 

  protected boolean hasIsEmpty(OptionList optionList) {
    %match(OptionList optionList) {
      concOption(_*,DeclarationToOption(IsEmptyDecl[]),_*) -> { return true; }
    }
    return false;
  } 
*/

  protected static TomName getSlotName(TomSymbol symbol, int number) {
    PairNameDeclList pairNameDeclList = symbol.getPairNameDeclList();
    for(int index = 0; !pairNameDeclList.isEmptyconcPairNameDecl() && index<number ; index++) {
      pairNameDeclList = pairNameDeclList.getTailconcPairNameDecl();
    }
    if(pairNameDeclList.isEmptyconcPairNameDecl()) {
      System.out.println("getSlotName: bad index error");
      throw new TomRuntimeException("getSlotName: bad index error");
    }
    PairNameDecl pairNameDecl = pairNameDeclList.getHeadconcPairNameDecl();

    Declaration decl = pairNameDecl.getSlotDecl();
     if(decl instanceof  tom.engine.adt.tomdeclaration.types.Declaration ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_match20_1=(( tom.engine.adt.tomdeclaration.types.Declaration )decl); if (tom_is_fun_sym_GetSlotDecl(tom_match20_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match20_1_SlotName=tom_get_slot_GetSlotDecl_SlotName(tom_match20_1); { tom.engine.adt.tomname.types.TomName  tom_name=tom_match20_1_SlotName; if ( true ) {
 return tom_name;  } } } } } }


    return pairNameDecl.getSlotName();
  }

  protected static int getSlotIndex(TomSymbol tomSymbol, TomName slotName) {
    int index = 0;
    PairNameDeclList pairNameDeclList = tomSymbol.getPairNameDeclList();
    while(!pairNameDeclList.isEmptyconcPairNameDecl()) {
      TomName name = pairNameDeclList.getHeadconcPairNameDecl().getSlotName();
      // System.out.println("index = " + index + " name = " + name);
      if(slotName.equals(name)) {
        return index; 
      }
      pairNameDeclList = pairNameDeclList.getTailconcPairNameDecl();
      index++;
    }
    return -1;
  }

  public static TomType elementAt(TomTypeList l, int index) {
    if (0 > index || index > l.length()) {
      throw new IllegalArgumentException("illegal list index: " + index);
    }
    for (int i = 0; i < index; i++) {
      l = l.getTailconcTomType();
    }
    return l.getHeadconcTomType();
  }

  protected static TomType getSlotType(TomSymbol symbol, TomName slotName) {
     if(symbol instanceof  tom.engine.adt.tomsignature.types.TomSymbol ) { { tom.engine.adt.tomsignature.types.TomSymbol  tom_match21_1=(( tom.engine.adt.tomsignature.types.TomSymbol )symbol); if (tom_is_fun_sym_Symbol(tom_match21_1) ||  false ) { { tom.engine.adt.tomtype.types.TomType  tom_match21_1_TypesToType=tom_get_slot_Symbol_TypesToType(tom_match21_1); if (tom_is_fun_sym_TypesToType(tom_match21_1_TypesToType) ||  false ) { { tom.engine.adt.tomtype.types.TomTypeList  tom_match21_1_TypesToType_Domain=tom_get_slot_TypesToType_Domain(tom_match21_1_TypesToType); { tom.engine.adt.tomtype.types.TomType  tom_match21_1_TypesToType_Codomain=tom_get_slot_TypesToType_Codomain(tom_match21_1_TypesToType); { tom.engine.adt.tomtype.types.TomTypeList  tom_typeList=tom_match21_1_TypesToType_Domain; if ( true ) {

        int index = getSlotIndex(symbol,slotName);
        return elementAt(tom_typeList,index);
       } } } } } } } } }

    throw new TomRuntimeException("getSlotType: bad slotName error");
  }

  protected static boolean isDefinedSymbol(TomSymbol subject) {
    if(subject==null) {
      System.out.println("isDefinedSymbol: subject == null");
      return false;
    }
     if(subject instanceof  tom.engine.adt.tomsignature.types.TomSymbol ) { { tom.engine.adt.tomsignature.types.TomSymbol  tom_match22_1=(( tom.engine.adt.tomsignature.types.TomSymbol )subject); if (tom_is_fun_sym_Symbol(tom_match22_1) ||  false ) { { tom.engine.adt.tomoption.types.OptionList  tom_match22_1_Option=tom_get_slot_Symbol_Option(tom_match22_1); { tom.engine.adt.tomoption.types.OptionList  tom_optionList=tom_match22_1_Option; if ( true ) {

        return hasDefinedSymbol(tom_optionList);
       } } } } } }

    return false;
  }

  protected static boolean isDefinedGetSlot(TomSymbol symbol, TomName slotName) {
    if(symbol==null) {
      System.out.println("isDefinedSymbol: symbol == null");
      return false;
    }
     if(symbol instanceof  tom.engine.adt.tomsignature.types.TomSymbol ) { { tom.engine.adt.tomsignature.types.TomSymbol  tom_match23_1=(( tom.engine.adt.tomsignature.types.TomSymbol )symbol); if (tom_is_fun_sym_Symbol(tom_match23_1) ||  false ) { { tom.engine.adt.tomslot.types.PairNameDeclList  tom_match23_1_PairNameDeclList=tom_get_slot_Symbol_PairNameDeclList(tom_match23_1); if (tom_is_fun_sym_concPairNameDecl(tom_match23_1_PairNameDeclList) ||  false ) { { tom.engine.adt.tomslot.types.PairNameDeclList  tom_match23_1_PairNameDeclList_list1=tom_match23_1_PairNameDeclList; { tom.engine.adt.tomslot.types.PairNameDeclList  tom_match23_1_PairNameDeclList_begin1=tom_match23_1_PairNameDeclList_list1; { tom.engine.adt.tomslot.types.PairNameDeclList  tom_match23_1_PairNameDeclList_end1=tom_match23_1_PairNameDeclList_list1; { while (!(tom_is_empty_concPairNameDecl_PairNameDeclList(tom_match23_1_PairNameDeclList_end1))) {tom_match23_1_PairNameDeclList_list1=tom_match23_1_PairNameDeclList_end1; { { tom.engine.adt.tomslot.types.PairNameDecl  tom_match23_1_PairNameDeclList_2=tom_get_head_concPairNameDecl_PairNameDeclList(tom_match23_1_PairNameDeclList_list1);tom_match23_1_PairNameDeclList_list1=tom_get_tail_concPairNameDecl_PairNameDeclList(tom_match23_1_PairNameDeclList_list1); if (tom_is_fun_sym_PairNameDecl(tom_match23_1_PairNameDeclList_2) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match23_1_PairNameDeclList_2_SlotName=tom_get_slot_PairNameDecl_SlotName(tom_match23_1_PairNameDeclList_2); { tom.engine.adt.tomdeclaration.types.Declaration  tom_match23_1_PairNameDeclList_2_SlotDecl=tom_get_slot_PairNameDecl_SlotDecl(tom_match23_1_PairNameDeclList_2); { tom.engine.adt.tomname.types.TomName  tom_name=tom_match23_1_PairNameDeclList_2_SlotName; { tom.engine.adt.tomdeclaration.types.Declaration  tom_decl=tom_match23_1_PairNameDeclList_2_SlotDecl; if ( true ) {

        if(tom_name==slotName && tom_decl!=tom_make_EmptyDeclaration()) {
          return true;
        }
       } } } } } } }tom_match23_1_PairNameDeclList_end1=tom_get_tail_concPairNameDecl_PairNameDeclList(tom_match23_1_PairNameDeclList_end1); } }tom_match23_1_PairNameDeclList_list1=tom_match23_1_PairNameDeclList_begin1; } } } } } } } } }

    return false;
  }


  // findOriginTracking(_) return the option containing OriginTracking information
  protected static Option findOriginTracking(OptionList optionList) {
    if(optionList.isEmptyconcOption()) {
      return tom_make_noOption();
    }
    while(!optionList.isEmptyconcOption()) {
      Option subject = optionList.getHeadconcOption();
       if(subject instanceof  tom.engine.adt.tomoption.types.Option ) { { tom.engine.adt.tomoption.types.Option  tom_match24_1=(( tom.engine.adt.tomoption.types.Option )subject); if (tom_is_fun_sym_OriginTracking(tom_match24_1) ||  false ) { { tom.engine.adt.tomoption.types.Option  tom_orgTrack=tom_match24_1; if ( true ) {

          return tom_orgTrack;
         } } } } }

      optionList = optionList.getTailconcOption();
    }
    System.out.println("findOriginTracking:  not found" + optionList);
    throw new TomRuntimeException("findOriginTracking:  not found" + optionList);
  }

  protected static TomSymbol getSymbolFromName(String tomName, SymbolTable symbolTable) {
    return symbolTable.getSymbolFromName(tomName);
  }
  
  protected static TomSymbol getSymbolFromType(TomType tomType, SymbolTable symbolTable) {
    TomSymbolList list = symbolTable.getSymbolFromType(tomType);
    TomSymbolList filteredList = tom_empty_list_concTomSymbol();
    // Not necessary since checker ensure the uniqueness of the symbol
    while(!list.isEmptyconcTomSymbol()) {
      TomSymbol head = list.getHeadconcTomSymbol();
      if(isArrayOperator(head) || isListOperator(head)) {
        filteredList = tom_cons_list_concTomSymbol(head,tom_append_list_concTomSymbol(filteredList,tom_empty_list_concTomSymbol()));
      }
      list = list.getTailconcTomSymbol();
    }
    return filteredList.getHeadconcTomSymbol();
  }

  protected static TomType getTermType(TomTerm t, SymbolTable symbolTable){
     if(t instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match25_1=(( tom.engine.adt.tomterm.types.TomTerm )t); if (tom_is_fun_sym_RecordAppl(tom_match25_1) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match25_1_NameList=tom_get_slot_RecordAppl_NameList(tom_match25_1); if (tom_is_fun_sym_concTomName(tom_match25_1_NameList) ||  false ) { { tom.engine.adt.tomname.types.TomNameList  tom_match25_1_NameList_list1=tom_match25_1_NameList; if (!(tom_is_empty_concTomName_TomNameList(tom_match25_1_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match25_1_NameList_1=tom_get_head_concTomName_TomNameList(tom_match25_1_NameList_list1);tom_match25_1_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match25_1_NameList_list1); if (tom_is_fun_sym_Name(tom_match25_1_NameList_1) ||  false ) { { String  tom_match25_1_NameList_1_String=tom_get_slot_Name_String(tom_match25_1_NameList_1); { String  tom_tomName=tom_match25_1_NameList_1_String; if ( true ) {

        TomSymbol tomSymbol = symbolTable.getSymbolFromName(tom_tomName);
        return tomSymbol.getTypesToType().getCodomain();
       } } } } } } } } } } {boolean tom_bool_match25_1= false ; { tom.engine.adt.tomtype.types.TomType  tom_match25_1_AstType= null ; if (tom_is_fun_sym_Variable(tom_match25_1)) {tom_bool_match25_1= true ;tom_match25_1_AstType=tom_get_slot_Variable_AstType(tom_match25_1); } else { if (tom_is_fun_sym_VariableStar(tom_match25_1)) {tom_bool_match25_1= true ;tom_match25_1_AstType=tom_get_slot_VariableStar_AstType(tom_match25_1); } else { if (tom_is_fun_sym_UnamedVariable(tom_match25_1)) {tom_bool_match25_1= true ;tom_match25_1_AstType=tom_get_slot_UnamedVariable_AstType(tom_match25_1); } else { if (tom_is_fun_sym_UnamedVariableStar(tom_match25_1)) {tom_bool_match25_1= true ;tom_match25_1_AstType=tom_get_slot_UnamedVariableStar_AstType(tom_match25_1); } } } } if (tom_bool_match25_1) { { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match25_1_AstType; if ( true ) {

 
        return tom_type; 
       } } } } } if (tom_is_fun_sym_Ref(tom_match25_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match25_1_TomTerm=tom_get_slot_Ref_TomTerm(tom_match25_1); { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_match25_1_TomTerm; if ( true ) {

 return getTermType(tom_term, symbolTable);  } } } } if (tom_is_fun_sym_TargetLanguageToTomTerm(tom_match25_1) ||  false ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tom_match25_1_Tl=tom_get_slot_TargetLanguageToTomTerm_Tl(tom_match25_1); if (tom_is_fun_sym_ITL(tom_match25_1_Tl) || tom_is_fun_sym_TL(tom_match25_1_Tl) ||  false ) { if ( true ) {

 return tom_make_EmptyType();  } } } } if (tom_is_fun_sym_FunctionCall(tom_match25_1) ||  false ) { if ( true ) {

 return tom_make_EmptyType();  } } } }

		System.out.println("getTermType error on term: " + t);
		throw new TomRuntimeException("getTermType error on term: " + t);
  }
  
  protected static TomType getTermType(Expression t, SymbolTable symbolTable){
     if(t instanceof  tom.engine.adt.tomexpression.types.Expression ) { { tom.engine.adt.tomexpression.types.Expression  tom_match26_1=(( tom.engine.adt.tomexpression.types.Expression )t); {boolean tom_bool_match26_1= false ; { tom.engine.adt.tomtype.types.TomType  tom_match26_1_Codomain= null ; if (tom_is_fun_sym_GetSubterm(tom_match26_1)) {tom_bool_match26_1= true ;tom_match26_1_Codomain=tom_get_slot_GetSubterm_Codomain(tom_match26_1); } else { if (tom_is_fun_sym_GetHead(tom_match26_1)) {tom_bool_match26_1= true ;tom_match26_1_Codomain=tom_get_slot_GetHead_Codomain(tom_match26_1); } else { if (tom_is_fun_sym_GetSlot(tom_match26_1)) {tom_bool_match26_1= true ;tom_match26_1_Codomain=tom_get_slot_GetSlot_Codomain(tom_match26_1); } else { if (tom_is_fun_sym_GetElement(tom_match26_1)) {tom_bool_match26_1= true ;tom_match26_1_Codomain=tom_get_slot_GetElement_Codomain(tom_match26_1); } } } } if (tom_bool_match26_1) { { tom.engine.adt.tomtype.types.TomType  tom_type=tom_match26_1_Codomain; if ( true ) {
 return tom_type;  } } } } } if (tom_is_fun_sym_TomTermToExpression(tom_match26_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match26_1_AstTerm=tom_get_slot_TomTermToExpression_AstTerm(tom_match26_1); { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_match26_1_AstTerm; if ( true ) {

 return getTermType(tom_term, symbolTable);  } } } } if (tom_is_fun_sym_GetTail(tom_match26_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match26_1_Variable=tom_get_slot_GetTail_Variable(tom_match26_1); { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_match26_1_Variable; if ( true ) {
 return getTermType(tom_term, symbolTable);  } } } } if (tom_is_fun_sym_GetSliceList(tom_match26_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match26_1_VariableBeginAST=tom_get_slot_GetSliceList_VariableBeginAST(tom_match26_1); { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_match26_1_VariableBeginAST; if ( true ) {
 return getTermType(tom_term, symbolTable);  } } } } if (tom_is_fun_sym_GetSliceArray(tom_match26_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match26_1_SubjectListName=tom_get_slot_GetSliceArray_SubjectListName(tom_match26_1); { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_match26_1_SubjectListName; if ( true ) {
 return getTermType(tom_term, symbolTable);  } } } } } }

		System.out.println("getTermType error on term: " + t);
		throw new TomRuntimeException("getTermType error on term: " + t);
  }

  protected static SlotList tomListToSlotList(TomList tomList) {
    return tomListToSlotList(tomList,1);
  }

  protected static SlotList tomListToSlotList(TomList tomList, int index) {
     if(tomList instanceof  tom.engine.adt.tomterm.types.TomList ) { { tom.engine.adt.tomterm.types.TomList  tom_match27_1=(( tom.engine.adt.tomterm.types.TomList )tomList); if (tom_is_fun_sym_concTomTerm(tom_match27_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match27_1_list1=tom_match27_1; if (tom_is_empty_concTomTerm_TomList(tom_match27_1_list1)) { if ( true ) {
 return tom_empty_list_concSlot();  } } } } if (tom_is_fun_sym_concTomTerm(tom_match27_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match27_1_list1=tom_match27_1; if (!(tom_is_empty_concTomTerm_TomList(tom_match27_1_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_get_head_concTomTerm_TomList(tom_match27_1_list1);tom_match27_1_list1=tom_get_tail_concTomTerm_TomList(tom_match27_1_list1); { tom.engine.adt.tomterm.types.TomList  tom_tail=tom_match27_1_list1; if ( true ) {
 
        TomName slotName = tom_make_PositionName(tom_cons_list_concTomNumber(tom_make_Number(index),tom_empty_list_concTomNumber()));
        SlotList sl = tomListToSlotList(tom_tail,index+1);
        return tom_cons_list_concSlot(tom_make_PairSlotAppl(slotName,tom_head),tom_append_list_concSlot(sl,tom_empty_list_concSlot())); 
       } } } } } } } }

    throw new TomRuntimeException("tomListToSlotList: " + tomList);
  }

  protected static SlotList mergeTomListWithSlotList(TomList tomList, SlotList slotList) {
     if(tomList instanceof  tom.engine.adt.tomterm.types.TomList ) { { tom.engine.adt.tomterm.types.TomList  tom_match28_1=(( tom.engine.adt.tomterm.types.TomList )tomList); if(slotList instanceof  tom.engine.adt.tomslot.types.SlotList ) { { tom.engine.adt.tomslot.types.SlotList  tom_match28_2=(( tom.engine.adt.tomslot.types.SlotList )slotList); if (tom_is_fun_sym_concTomTerm(tom_match28_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match28_1_list1=tom_match28_1; if (tom_is_empty_concTomTerm_TomList(tom_match28_1_list1)) { if (tom_is_fun_sym_concSlot(tom_match28_2) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match28_2_list1=tom_match28_2; if (tom_is_empty_concSlot_SlotList(tom_match28_2_list1)) { if ( true ) {
 
        return tom_empty_list_concSlot(); 
       } } } } } } } if (tom_is_fun_sym_concTomTerm(tom_match28_1) ||  false ) { { tom.engine.adt.tomterm.types.TomList  tom_match28_1_list1=tom_match28_1; if (!(tom_is_empty_concTomTerm_TomList(tom_match28_1_list1))) { { tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_get_head_concTomTerm_TomList(tom_match28_1_list1);tom_match28_1_list1=tom_get_tail_concTomTerm_TomList(tom_match28_1_list1); { tom.engine.adt.tomterm.types.TomList  tom_tail=tom_match28_1_list1; if (tom_is_fun_sym_concSlot(tom_match28_2) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match28_2_list1=tom_match28_2; if (!(tom_is_empty_concSlot_SlotList(tom_match28_2_list1))) { { tom.engine.adt.tomslot.types.Slot  tom_match28_2_1=tom_get_head_concSlot_SlotList(tom_match28_2_list1);tom_match28_2_list1=tom_get_tail_concSlot_SlotList(tom_match28_2_list1); if (tom_is_fun_sym_PairSlotAppl(tom_match28_2_1) ||  false ) { { tom.engine.adt.tomname.types.TomName  tom_match28_2_1_SlotName=tom_get_slot_PairSlotAppl_SlotName(tom_match28_2_1); { tom.engine.adt.tomname.types.TomName  tom_slotName=tom_match28_2_1_SlotName; { tom.engine.adt.tomslot.types.SlotList  tom_tailSlotList=tom_match28_2_list1; if ( true ) {
 
        SlotList sl = mergeTomListWithSlotList(tom_tail,tom_tailSlotList);
        return tom_cons_list_concSlot(tom_make_PairSlotAppl(tom_slotName,tom_head),tom_append_list_concSlot(sl,tom_empty_list_concSlot())); 
       } } } } } } } } } } } } } } } } } }

    throw new TomRuntimeException("mergeTomListWithSlotList: " + tomList + " and " + slotList);
  }

  protected static TomList slotListToTomList(SlotList tomList) {
     if(tomList instanceof  tom.engine.adt.tomslot.types.SlotList ) { { tom.engine.adt.tomslot.types.SlotList  tom_match29_1=(( tom.engine.adt.tomslot.types.SlotList )tomList); if (tom_is_fun_sym_concSlot(tom_match29_1) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match29_1_list1=tom_match29_1; if (tom_is_empty_concSlot_SlotList(tom_match29_1_list1)) { if ( true ) {
 return tom_empty_list_concTomTerm();  } } } } if (tom_is_fun_sym_concSlot(tom_match29_1) ||  false ) { { tom.engine.adt.tomslot.types.SlotList  tom_match29_1_list1=tom_match29_1; if (!(tom_is_empty_concSlot_SlotList(tom_match29_1_list1))) { { tom.engine.adt.tomslot.types.Slot  tom_match29_1_1=tom_get_head_concSlot_SlotList(tom_match29_1_list1);tom_match29_1_list1=tom_get_tail_concSlot_SlotList(tom_match29_1_list1); if (tom_is_fun_sym_PairSlotAppl(tom_match29_1_1) ||  false ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match29_1_1_Appl=tom_get_slot_PairSlotAppl_Appl(tom_match29_1_1); { tom.engine.adt.tomterm.types.TomTerm  tom_head=tom_match29_1_1_Appl; { tom.engine.adt.tomslot.types.SlotList  tom_tail=tom_match29_1_list1; if ( true ) {

        TomList tl = slotListToTomList(tom_tail);
        return tom_cons_list_concTomTerm(tom_head,tom_append_list_concTomTerm(tl,tom_empty_list_concTomTerm()));
       } } } } } } } } } } }

    throw new TomRuntimeException("slotListToTomList: " + tomList);
  }

} // class TomBase

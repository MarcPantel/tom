/* Generated by TOM (version 2.5alpha): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 *
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 *
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 * Julien Guyon
 *
 **/

package tom.engine.checker;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;

import tom.engine.TomBase;
import tom.engine.TomMessage;
import tom.engine.exception.TomRuntimeException;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomname.types.tomname.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.xml.Constants;
import tom.platform.OptionParser;
import tom.platform.adt.platformoption.types.PlatformOptionList;
import aterm.ATerm;
import tom.engine.tools.ASTFactory;

import tom.library.sl.*;

/**
 * The TomSyntaxChecker plugin.
 */
public class TomSyntaxChecker extends TomChecker {

  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) { return  (t1==t2) ;}private static boolean tom_is_sort_int(int t) { return  true ;} private static boolean tom_equal_term_Instruction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Instruction(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.Instruction ;}private static boolean tom_equal_term_TomTypeList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTypeList(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomTypeList ;}private static boolean tom_equal_term_TomType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomType(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomType ;}private static boolean tom_equal_term_TomSymbolList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomSymbolList(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomSymbolList ;}private static boolean tom_equal_term_TomVisit(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomVisit(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomVisit ;}private static boolean tom_equal_term_TomVisitList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomVisitList(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomVisitList ;}private static boolean tom_equal_term_TomSymbol(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomSymbol(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomSymbol ;}private static boolean tom_equal_term_DeclarationList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_DeclarationList(Object t) { return  t instanceof tom.engine.adt.tomdeclaration.types.DeclarationList ;}private static boolean tom_equal_term_Declaration(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Declaration(Object t) { return  t instanceof tom.engine.adt.tomdeclaration.types.Declaration ;}private static boolean tom_equal_term_TomNameList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNameList(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNameList ;}private static boolean tom_equal_term_TomName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomName(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomName ;}private static boolean tom_equal_term_PatternInstructionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PatternInstructionList(Object t) { return  t instanceof tom.engine.adt.tomterm.types.PatternInstructionList ;}private static boolean tom_equal_term_PatternInstruction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PatternInstruction(Object t) { return  t instanceof tom.engine.adt.tomterm.types.PatternInstruction ;}private static boolean tom_equal_term_Pattern(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Pattern(Object t) { return  t instanceof tom.engine.adt.tomterm.types.Pattern ;}private static boolean tom_equal_term_TomList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomList(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomList ;}private static boolean tom_equal_term_TomTerm(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTerm(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomTerm ;}private static boolean tom_equal_term_Option(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Option(Object t) { return  t instanceof tom.engine.adt.tomoption.types.Option ;}private static boolean tom_equal_term_OptionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OptionList(Object t) { return  t instanceof tom.engine.adt.tomoption.types.OptionList ;}private static boolean tom_equal_term_ConstraintList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ConstraintList(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.ConstraintList ;}private static boolean tom_equal_term_PairNameDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PairNameDecl(Object t) { return  t instanceof tom.engine.adt.tomslot.types.PairNameDecl ;}private static boolean tom_equal_term_PairNameDeclList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PairNameDeclList(Object t) { return  t instanceof tom.engine.adt.tomslot.types.PairNameDeclList ;}private static boolean tom_equal_term_SlotList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotList(Object t) { return  t instanceof tom.engine.adt.tomslot.types.SlotList ;}private static boolean tom_equal_term_Slot(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Slot(Object t) { return  t instanceof tom.engine.adt.tomslot.types.Slot ;}private static boolean tom_is_fun_sym_Match( tom.engine.adt.tominstruction.types.Instruction  t) { return  t instanceof tom.engine.adt.tominstruction.types.instruction.Match ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Match_SubjectList( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getSubjectList() ;}private static  tom.engine.adt.tomterm.types.PatternInstructionList  tom_get_slot_Match_AstPatternInstructionList( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getAstPatternInstructionList() ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Match_Option( tom.engine.adt.tominstruction.types.Instruction  t) { return  t.getOption() ;}private static boolean tom_is_fun_sym_TomTypeAlone( tom.engine.adt.tomtype.types.TomType  t) { return  t instanceof tom.engine.adt.tomtype.types.tomtype.TomTypeAlone ;}private static  tom.engine.adt.tomtype.types.TomType  tom_make_TomTypeAlone( String  t0) { return  tom.engine.adt.tomtype.types.tomtype.TomTypeAlone.make(t0) ; }private static  String  tom_get_slot_TomTypeAlone_String( tom.engine.adt.tomtype.types.TomType  t) { return  t.getString() ;}private static boolean tom_is_fun_sym_Codomain( tom.engine.adt.tomtype.types.TomType  t) { return  t instanceof tom.engine.adt.tomtype.types.tomtype.Codomain ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Codomain_AstName( tom.engine.adt.tomtype.types.TomType  t) { return  t.getAstName() ;}private static boolean tom_is_fun_sym_EmptyType( tom.engine.adt.tomtype.types.TomType  t) { return  t instanceof tom.engine.adt.tomtype.types.tomtype.EmptyType ;}private static  tom.engine.adt.tomtype.types.TomType  tom_make_EmptyType() { return  tom.engine.adt.tomtype.types.tomtype.EmptyType.make() ; }private static boolean tom_is_fun_sym_VisitTerm( tom.engine.adt.tomsignature.types.TomVisit  t) { return  t instanceof tom.engine.adt.tomsignature.types.tomvisit.VisitTerm ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VisitTerm_VNode( tom.engine.adt.tomsignature.types.TomVisit  t) { return  t.getVNode() ;}private static  tom.engine.adt.tomterm.types.PatternInstructionList  tom_get_slot_VisitTerm_AstPatternInstructionList( tom.engine.adt.tomsignature.types.TomVisit  t) { return  t.getAstPatternInstructionList() ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VisitTerm_Option( tom.engine.adt.tomsignature.types.TomVisit  t) { return  t.getOption() ;}private static boolean tom_is_fun_sym_TypeTermDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.TypeTermDecl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_TypeTermDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomdeclaration.types.DeclarationList  tom_get_slot_TypeTermDecl_Declarations( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getDeclarations() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_TypeTermDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_EqualTermDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.EqualTermDecl ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTermDecl_TermArg1( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getTermArg1() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTermDecl_TermArg2( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getTermArg2() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_EqualTermDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getInstr() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_EqualTermDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_GetHeadDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.GetHeadDecl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetHeadDecl_Opname( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOpname() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetHeadDecl_Codomain( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getCodomain() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetHeadDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getVariable() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetHeadDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getInstr() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetHeadDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_GetTailDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.GetTailDecl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetTailDecl_Opname( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOpname() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetTailDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getVariable() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetTailDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getInstr() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetTailDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_IsEmptyDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.IsEmptyDecl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsEmptyDecl_Opname( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOpname() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsEmptyDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getVariable() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_IsEmptyDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getInstr() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_IsEmptyDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_MakeEmptyList( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeEmptyList ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeEmptyList_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getAstName() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeEmptyList_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getInstr() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeEmptyList_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_MakeAddList( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeAddList ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeAddList_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddList_VarElt( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getVarElt() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddList_VarList( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getVarList() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeAddList_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getInstr() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeAddList_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_GetElementDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.GetElementDecl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetElementDecl_Opname( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOpname() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetElementDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getVariable() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetElementDecl_Index( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getIndex() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetElementDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getInstr() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetElementDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_GetSizeDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.GetSizeDecl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSizeDecl_Opname( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOpname() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSizeDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getVariable() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetSizeDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getInstr() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetSizeDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_MakeEmptyArray( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeEmptyArray ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeEmptyArray_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeEmptyArray_VarSize( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getVarSize() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeEmptyArray_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getInstr() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeEmptyArray_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_MakeAddArray( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeAddArray ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeAddArray_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddArray_VarElt( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getVarElt() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddArray_VarList( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getVarList() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeAddArray_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getInstr() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeAddArray_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_MakeDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeDecl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_MakeDecl_AstType( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_MakeDecl_Args( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getArgs() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getInstr() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_Strategy( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.Strategy ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Strategy_SName( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getSName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Strategy_ExtendsTerm( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getExtendsTerm() ;}private static  tom.engine.adt.tomsignature.types.TomVisitList  tom_get_slot_Strategy_VisitList( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getVisitList() ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_Strategy_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getOrgTrack() ;}private static boolean tom_is_fun_sym_SymbolDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.SymbolDecl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_SymbolDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getAstName() ;}private static boolean tom_is_fun_sym_ListSymbolDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.ListSymbolDecl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_ListSymbolDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getAstName() ;}private static boolean tom_is_fun_sym_ArraySymbolDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.ArraySymbolDecl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_ArraySymbolDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) { return  t.getAstName() ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) { return  t instanceof tom.engine.adt.tomname.types.tomname.Name ;}private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) { return  t.getString() ;}private static boolean tom_is_fun_sym_PatternInstruction( tom.engine.adt.tomterm.types.PatternInstruction  t) { return  t instanceof tom.engine.adt.tomterm.types.patterninstruction.PatternInstruction ;}private static  tom.engine.adt.tomterm.types.Pattern  tom_get_slot_PatternInstruction_Pattern( tom.engine.adt.tomterm.types.PatternInstruction  t) { return  t.getPattern() ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_PatternInstruction_Action( tom.engine.adt.tomterm.types.PatternInstruction  t) { return  t.getAction() ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_PatternInstruction_Option( tom.engine.adt.tomterm.types.PatternInstruction  t) { return  t.getOption() ;}private static boolean tom_is_fun_sym_Pattern( tom.engine.adt.tomterm.types.Pattern  t) { return  t instanceof tom.engine.adt.tomterm.types.pattern.Pattern ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_SubjectList( tom.engine.adt.tomterm.types.Pattern  t) { return  t.getSubjectList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_TomList( tom.engine.adt.tomterm.types.Pattern  t) { return  t.getTomList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Pattern_Guards( tom.engine.adt.tomterm.types.Pattern  t) { return  t.getGuards() ;}private static boolean tom_is_fun_sym_TermAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_TermAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_TermAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_TermAppl_Args( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getArgs() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_TermAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getSlots() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_XMLAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.XMLAppl ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_XMLAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_XMLAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_XMLAppl_AttrList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAttrList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_XMLAppl_ChildList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getChildList() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_XMLAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.Variable ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_VariableStar_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_VariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_UnamedVariable( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariable_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_UnamedVariableStar( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_SubjectList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.SubjectList ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_SubjectList_TomList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getTomList() ;}private static boolean tom_is_fun_sym_AntiTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_AntiTerm_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getTomTerm() ;}private static boolean tom_is_fun_sym_DeclarationToOption( tom.engine.adt.tomoption.types.Option  t) { return  t instanceof tom.engine.adt.tomoption.types.option.DeclarationToOption ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_get_slot_DeclarationToOption_AstDeclaration( tom.engine.adt.tomoption.types.Option  t) { return  t.getAstDeclaration() ;}private static boolean tom_is_fun_sym_OriginTracking( tom.engine.adt.tomoption.types.Option  t) { return  t instanceof tom.engine.adt.tomoption.types.option.OriginTracking ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_OriginTracking_AstName( tom.engine.adt.tomoption.types.Option  t) { return  t.getAstName() ;}private static  int  tom_get_slot_OriginTracking_Line( tom.engine.adt.tomoption.types.Option  t) { return  t.getLine() ;}private static  String  tom_get_slot_OriginTracking_FileName( tom.engine.adt.tomoption.types.Option  t) { return  t.getFileName() ;}private static boolean tom_is_fun_sym_PairNameDecl( tom.engine.adt.tomslot.types.PairNameDecl  t) { return  t instanceof tom.engine.adt.tomslot.types.pairnamedecl.PairNameDecl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_PairNameDecl_SlotName( tom.engine.adt.tomslot.types.PairNameDecl  t) { return  t.getSlotName() ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_get_slot_PairNameDecl_SlotDecl( tom.engine.adt.tomslot.types.PairNameDecl  t) { return  t.getSlotDecl() ;}private static boolean tom_is_fun_sym_PairSlotAppl( tom.engine.adt.tomslot.types.Slot  t) { return  t instanceof tom.engine.adt.tomslot.types.slot.PairSlotAppl ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_PairSlotAppl_SlotName( tom.engine.adt.tomslot.types.Slot  t) { return  t.getSlotName() ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_PairSlotAppl_Appl( tom.engine.adt.tomslot.types.Slot  t) { return  t.getAppl() ;}private static boolean tom_is_fun_sym_concTomType( tom.engine.adt.tomtype.types.TomTypeList  t) { return  t instanceof tom.engine.adt.tomtype.types.tomtypelist.ConsconcTomType || t instanceof tom.engine.adt.tomtype.types.tomtypelist.EmptyconcTomType ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_empty_list_concTomType() { return  tom.engine.adt.tomtype.types.tomtypelist.EmptyconcTomType.make() ; }private static  tom.engine.adt.tomtype.types.TomTypeList  tom_cons_list_concTomType( tom.engine.adt.tomtype.types.TomType  e,  tom.engine.adt.tomtype.types.TomTypeList  l) { return  tom.engine.adt.tomtype.types.tomtypelist.ConsconcTomType.make(e,l) ; }private static  tom.engine.adt.tomtype.types.TomType  tom_get_head_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) { return  l.getHeadconcTomType() ;}private static  tom.engine.adt.tomtype.types.TomTypeList  tom_get_tail_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) { return  l.getTailconcTomType() ;}private static boolean tom_is_empty_concTomType_TomTypeList( tom.engine.adt.tomtype.types.TomTypeList  l) { return  l.isEmptyconcTomType() ;}   private static   tom.engine.adt.tomtype.types.TomTypeList  tom_append_list_concTomType( tom.engine.adt.tomtype.types.TomTypeList l1,  tom.engine.adt.tomtype.types.TomTypeList  l2) {     if(tom_is_empty_concTomType_TomTypeList(l1)) {       return l2;     } else if(tom_is_empty_concTomType_TomTypeList(l2)) {       return l1;     } else if(tom_is_empty_concTomType_TomTypeList(tom_get_tail_concTomType_TomTypeList(l1))) {       return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(tom_get_head_concTomType_TomTypeList(l1),l2);     } else {       return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(tom_get_head_concTomType_TomTypeList(l1),tom_append_list_concTomType(tom_get_tail_concTomType_TomTypeList(l1),l2));     }   }   private static   tom.engine.adt.tomtype.types.TomTypeList  tom_get_slice_concTomType( tom.engine.adt.tomtype.types.TomTypeList  begin,  tom.engine.adt.tomtype.types.TomTypeList  end, tom.engine.adt.tomtype.types.TomTypeList  tail) {     if(tom_equal_term_TomTypeList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomtype.types.TomTypeList )tom_cons_list_concTomType(tom_get_head_concTomType_TomTypeList(begin),( tom.engine.adt.tomtype.types.TomTypeList )tom_get_slice_concTomType(tom_get_tail_concTomType_TomTypeList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbolList  t) { return  t instanceof tom.engine.adt.tomsignature.types.tomsymbollist.ConsconcTomSymbol || t instanceof tom.engine.adt.tomsignature.types.tomsymbollist.EmptyconcTomSymbol ;}private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_empty_list_concTomSymbol() { return  tom.engine.adt.tomsignature.types.tomsymbollist.EmptyconcTomSymbol.make() ; }private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_cons_list_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbol  e,  tom.engine.adt.tomsignature.types.TomSymbolList  l) { return  tom.engine.adt.tomsignature.types.tomsymbollist.ConsconcTomSymbol.make(e,l) ; }private static  tom.engine.adt.tomsignature.types.TomSymbol  tom_get_head_concTomSymbol_TomSymbolList( tom.engine.adt.tomsignature.types.TomSymbolList  l) { return  l.getHeadconcTomSymbol() ;}private static  tom.engine.adt.tomsignature.types.TomSymbolList  tom_get_tail_concTomSymbol_TomSymbolList( tom.engine.adt.tomsignature.types.TomSymbolList  l) { return  l.getTailconcTomSymbol() ;}private static boolean tom_is_empty_concTomSymbol_TomSymbolList( tom.engine.adt.tomsignature.types.TomSymbolList  l) { return  l.isEmptyconcTomSymbol() ;}   private static   tom.engine.adt.tomsignature.types.TomSymbolList  tom_append_list_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbolList l1,  tom.engine.adt.tomsignature.types.TomSymbolList  l2) {     if(tom_is_empty_concTomSymbol_TomSymbolList(l1)) {       return l2;     } else if(tom_is_empty_concTomSymbol_TomSymbolList(l2)) {       return l1;     } else if(tom_is_empty_concTomSymbol_TomSymbolList(tom_get_tail_concTomSymbol_TomSymbolList(l1))) {       return ( tom.engine.adt.tomsignature.types.TomSymbolList )tom_cons_list_concTomSymbol(tom_get_head_concTomSymbol_TomSymbolList(l1),l2);     } else {       return ( tom.engine.adt.tomsignature.types.TomSymbolList )tom_cons_list_concTomSymbol(tom_get_head_concTomSymbol_TomSymbolList(l1),tom_append_list_concTomSymbol(tom_get_tail_concTomSymbol_TomSymbolList(l1),l2));     }   }   private static   tom.engine.adt.tomsignature.types.TomSymbolList  tom_get_slice_concTomSymbol( tom.engine.adt.tomsignature.types.TomSymbolList  begin,  tom.engine.adt.tomsignature.types.TomSymbolList  end, tom.engine.adt.tomsignature.types.TomSymbolList  tail) {     if(tom_equal_term_TomSymbolList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomsignature.types.TomSymbolList )tom_cons_list_concTomSymbol(tom_get_head_concTomSymbol_TomSymbolList(begin),( tom.engine.adt.tomsignature.types.TomSymbolList )tom_get_slice_concTomSymbol(tom_get_tail_concTomSymbol_TomSymbolList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concDeclaration( tom.engine.adt.tomdeclaration.types.DeclarationList  t) { return  t instanceof tom.engine.adt.tomdeclaration.types.declarationlist.ConsconcDeclaration || t instanceof tom.engine.adt.tomdeclaration.types.declarationlist.EmptyconcDeclaration ;}private static  tom.engine.adt.tomdeclaration.types.DeclarationList  tom_empty_list_concDeclaration() { return  tom.engine.adt.tomdeclaration.types.declarationlist.EmptyconcDeclaration.make() ; }private static  tom.engine.adt.tomdeclaration.types.DeclarationList  tom_cons_list_concDeclaration( tom.engine.adt.tomdeclaration.types.Declaration  e,  tom.engine.adt.tomdeclaration.types.DeclarationList  l) { return  tom.engine.adt.tomdeclaration.types.declarationlist.ConsconcDeclaration.make(e,l) ; }private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_get_head_concDeclaration_DeclarationList( tom.engine.adt.tomdeclaration.types.DeclarationList  l) { return  l.getHeadconcDeclaration() ;}private static  tom.engine.adt.tomdeclaration.types.DeclarationList  tom_get_tail_concDeclaration_DeclarationList( tom.engine.adt.tomdeclaration.types.DeclarationList  l) { return  l.getTailconcDeclaration() ;}private static boolean tom_is_empty_concDeclaration_DeclarationList( tom.engine.adt.tomdeclaration.types.DeclarationList  l) { return  l.isEmptyconcDeclaration() ;}   private static   tom.engine.adt.tomdeclaration.types.DeclarationList  tom_append_list_concDeclaration( tom.engine.adt.tomdeclaration.types.DeclarationList l1,  tom.engine.adt.tomdeclaration.types.DeclarationList  l2) {     if(tom_is_empty_concDeclaration_DeclarationList(l1)) {       return l2;     } else if(tom_is_empty_concDeclaration_DeclarationList(l2)) {       return l1;     } else if(tom_is_empty_concDeclaration_DeclarationList(tom_get_tail_concDeclaration_DeclarationList(l1))) {       return ( tom.engine.adt.tomdeclaration.types.DeclarationList )tom_cons_list_concDeclaration(tom_get_head_concDeclaration_DeclarationList(l1),l2);     } else {       return ( tom.engine.adt.tomdeclaration.types.DeclarationList )tom_cons_list_concDeclaration(tom_get_head_concDeclaration_DeclarationList(l1),tom_append_list_concDeclaration(tom_get_tail_concDeclaration_DeclarationList(l1),l2));     }   }   private static   tom.engine.adt.tomdeclaration.types.DeclarationList  tom_get_slice_concDeclaration( tom.engine.adt.tomdeclaration.types.DeclarationList  begin,  tom.engine.adt.tomdeclaration.types.DeclarationList  end, tom.engine.adt.tomdeclaration.types.DeclarationList  tail) {     if(tom_equal_term_DeclarationList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomdeclaration.types.DeclarationList )tom_cons_list_concDeclaration(tom_get_head_concDeclaration_DeclarationList(begin),( tom.engine.adt.tomdeclaration.types.DeclarationList )tom_get_slice_concDeclaration(tom_get_tail_concDeclaration_DeclarationList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomname.types.TomNameList  t) { return  t instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName || t instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_empty_list_concTomName() { return  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ; }private static  tom.engine.adt.tomname.types.TomNameList  tom_cons_list_concTomName( tom.engine.adt.tomname.types.TomName  e,  tom.engine.adt.tomname.types.TomNameList  l) { return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_head_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getHeadconcTomName() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_tail_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getTailconcTomName() ;}private static boolean tom_is_empty_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.isEmptyconcTomName() ;}   private static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if(tom_is_empty_concTomName_TomNameList(l1)) {       return l2;     } else if(tom_is_empty_concTomName_TomNameList(l2)) {       return l1;     } else if(tom_is_empty_concTomName_TomNameList(tom_get_tail_concTomName_TomNameList(l1))) {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(l1),l2);     } else {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(l1),tom_append_list_concTomName(tom_get_tail_concTomName_TomNameList(l1),l2));     }   }   private static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if(tom_equal_term_TomNameList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(tom_get_head_concTomName_TomNameList(begin),( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName(tom_get_tail_concTomName_TomNameList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concPatternInstruction( tom.engine.adt.tomterm.types.PatternInstructionList  t) { return  t instanceof tom.engine.adt.tomterm.types.patterninstructionlist.ConsconcPatternInstruction || t instanceof tom.engine.adt.tomterm.types.patterninstructionlist.EmptyconcPatternInstruction ;}private static  tom.engine.adt.tomterm.types.PatternInstructionList  tom_empty_list_concPatternInstruction() { return  tom.engine.adt.tomterm.types.patterninstructionlist.EmptyconcPatternInstruction.make() ; }private static  tom.engine.adt.tomterm.types.PatternInstructionList  tom_cons_list_concPatternInstruction( tom.engine.adt.tomterm.types.PatternInstruction  e,  tom.engine.adt.tomterm.types.PatternInstructionList  l) { return  tom.engine.adt.tomterm.types.patterninstructionlist.ConsconcPatternInstruction.make(e,l) ; }private static  tom.engine.adt.tomterm.types.PatternInstruction  tom_get_head_concPatternInstruction_PatternInstructionList( tom.engine.adt.tomterm.types.PatternInstructionList  l) { return  l.getHeadconcPatternInstruction() ;}private static  tom.engine.adt.tomterm.types.PatternInstructionList  tom_get_tail_concPatternInstruction_PatternInstructionList( tom.engine.adt.tomterm.types.PatternInstructionList  l) { return  l.getTailconcPatternInstruction() ;}private static boolean tom_is_empty_concPatternInstruction_PatternInstructionList( tom.engine.adt.tomterm.types.PatternInstructionList  l) { return  l.isEmptyconcPatternInstruction() ;}   private static   tom.engine.adt.tomterm.types.PatternInstructionList  tom_append_list_concPatternInstruction( tom.engine.adt.tomterm.types.PatternInstructionList l1,  tom.engine.adt.tomterm.types.PatternInstructionList  l2) {     if(tom_is_empty_concPatternInstruction_PatternInstructionList(l1)) {       return l2;     } else if(tom_is_empty_concPatternInstruction_PatternInstructionList(l2)) {       return l1;     } else if(tom_is_empty_concPatternInstruction_PatternInstructionList(tom_get_tail_concPatternInstruction_PatternInstructionList(l1))) {       return ( tom.engine.adt.tomterm.types.PatternInstructionList )tom_cons_list_concPatternInstruction(tom_get_head_concPatternInstruction_PatternInstructionList(l1),l2);     } else {       return ( tom.engine.adt.tomterm.types.PatternInstructionList )tom_cons_list_concPatternInstruction(tom_get_head_concPatternInstruction_PatternInstructionList(l1),tom_append_list_concPatternInstruction(tom_get_tail_concPatternInstruction_PatternInstructionList(l1),l2));     }   }   private static   tom.engine.adt.tomterm.types.PatternInstructionList  tom_get_slice_concPatternInstruction( tom.engine.adt.tomterm.types.PatternInstructionList  begin,  tom.engine.adt.tomterm.types.PatternInstructionList  end, tom.engine.adt.tomterm.types.PatternInstructionList  tail) {     if(tom_equal_term_PatternInstructionList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomterm.types.PatternInstructionList )tom_cons_list_concPatternInstruction(tom_get_head_concPatternInstruction_PatternInstructionList(begin),( tom.engine.adt.tomterm.types.PatternInstructionList )tom_get_slice_concPatternInstruction(tom_get_tail_concPatternInstruction_PatternInstructionList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concTomTerm( tom.engine.adt.tomterm.types.TomList  t) { return  t instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm || t instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm ;}private static  tom.engine.adt.tomterm.types.TomList  tom_empty_list_concTomTerm() { return  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ; }private static  tom.engine.adt.tomterm.types.TomList  tom_cons_list_concTomTerm( tom.engine.adt.tomterm.types.TomTerm  e,  tom.engine.adt.tomterm.types.TomList  l) { return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(e,l) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_head_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) { return  l.getHeadconcTomTerm() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_tail_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) { return  l.getTailconcTomTerm() ;}private static boolean tom_is_empty_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) { return  l.isEmptyconcTomTerm() ;}   private static   tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList l1,  tom.engine.adt.tomterm.types.TomList  l2) {     if(tom_is_empty_concTomTerm_TomList(l1)) {       return l2;     } else if(tom_is_empty_concTomTerm_TomList(l2)) {       return l1;     } else if(tom_is_empty_concTomTerm_TomList(tom_get_tail_concTomTerm_TomList(l1))) {       return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(tom_get_head_concTomTerm_TomList(l1),l2);     } else {       return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(tom_get_head_concTomTerm_TomList(l1),tom_append_list_concTomTerm(tom_get_tail_concTomTerm_TomList(l1),l2));     }   }   private static   tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end, tom.engine.adt.tomterm.types.TomList  tail) {     if(tom_equal_term_TomList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(tom_get_head_concTomTerm_TomList(begin),( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm(tom_get_tail_concTomTerm_TomList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concOption( tom.engine.adt.tomoption.types.OptionList  t) { return  t instanceof tom.engine.adt.tomoption.types.optionlist.ConsconcOption || t instanceof tom.engine.adt.tomoption.types.optionlist.EmptyconcOption ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_empty_list_concOption() { return  tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_cons_list_concOption( tom.engine.adt.tomoption.types.Option  e,  tom.engine.adt.tomoption.types.OptionList  l) { return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make(e,l) ; }private static  tom.engine.adt.tomoption.types.Option  tom_get_head_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.getHeadconcOption() ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_tail_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.getTailconcOption() ;}private static boolean tom_is_empty_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.isEmptyconcOption() ;}   private static   tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList l1,  tom.engine.adt.tomoption.types.OptionList  l2) {     if(tom_is_empty_concOption_OptionList(l1)) {       return l2;     } else if(tom_is_empty_concOption_OptionList(l2)) {       return l1;     } else if(tom_is_empty_concOption_OptionList(tom_get_tail_concOption_OptionList(l1))) {       return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(tom_get_head_concOption_OptionList(l1),l2);     } else {       return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(tom_get_head_concOption_OptionList(l1),tom_append_list_concOption(tom_get_tail_concOption_OptionList(l1),l2));     }   }   private static   tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end, tom.engine.adt.tomoption.types.OptionList  tail) {     if(tom_equal_term_OptionList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomoption.types.OptionList )tom_cons_list_concOption(tom_get_head_concOption_OptionList(begin),( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption(tom_get_tail_concOption_OptionList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList  t) { return  t instanceof tom.engine.adt.tomslot.types.pairnamedecllist.ConsconcPairNameDecl || t instanceof tom.engine.adt.tomslot.types.pairnamedecllist.EmptyconcPairNameDecl ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_empty_list_concPairNameDecl() { return  tom.engine.adt.tomslot.types.pairnamedecllist.EmptyconcPairNameDecl.make() ; }private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_cons_list_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDecl  e,  tom.engine.adt.tomslot.types.PairNameDeclList  l) { return  tom.engine.adt.tomslot.types.pairnamedecllist.ConsconcPairNameDecl.make(e,l) ; }private static  tom.engine.adt.tomslot.types.PairNameDecl  tom_get_head_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) { return  l.getHeadconcPairNameDecl() ;}private static  tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_tail_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) { return  l.getTailconcPairNameDecl() ;}private static boolean tom_is_empty_concPairNameDecl_PairNameDeclList( tom.engine.adt.tomslot.types.PairNameDeclList  l) { return  l.isEmptyconcPairNameDecl() ;}   private static   tom.engine.adt.tomslot.types.PairNameDeclList  tom_append_list_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList l1,  tom.engine.adt.tomslot.types.PairNameDeclList  l2) {     if(tom_is_empty_concPairNameDecl_PairNameDeclList(l1)) {       return l2;     } else if(tom_is_empty_concPairNameDecl_PairNameDeclList(l2)) {       return l1;     } else if(tom_is_empty_concPairNameDecl_PairNameDeclList(tom_get_tail_concPairNameDecl_PairNameDeclList(l1))) {       return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(tom_get_head_concPairNameDecl_PairNameDeclList(l1),l2);     } else {       return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(tom_get_head_concPairNameDecl_PairNameDeclList(l1),tom_append_list_concPairNameDecl(tom_get_tail_concPairNameDecl_PairNameDeclList(l1),l2));     }   }   private static   tom.engine.adt.tomslot.types.PairNameDeclList  tom_get_slice_concPairNameDecl( tom.engine.adt.tomslot.types.PairNameDeclList  begin,  tom.engine.adt.tomslot.types.PairNameDeclList  end, tom.engine.adt.tomslot.types.PairNameDeclList  tail) {     if(tom_equal_term_PairNameDeclList(begin,end)) {       return tail;     } else {       return ( tom.engine.adt.tomslot.types.PairNameDeclList )tom_cons_list_concPairNameDecl(tom_get_head_concPairNameDecl_PairNameDeclList(begin),( tom.engine.adt.tomslot.types.PairNameDeclList )tom_get_slice_concPairNameDecl(tom_get_tail_concPairNameDecl_PairNameDeclList(begin),end,tail));     }   }    /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_Strategy(Object t1, Object t2) { return t1.equals(t2);}private static boolean tom_is_sort_Strategy(Object t) { return  t instanceof tom.library.sl.Strategy ;}/* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_mu( tom.library.sl.Strategy  var,  tom.library.sl.Strategy  v) { return  new tom.library.sl.Mu(var,v) ; }private static  tom.library.sl.Strategy  tom_make_MuVar( String  name) { return  new tom.library.sl.MuVar(name) ; }private static  tom.library.sl.Strategy  tom_make_Identity() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_make_All( tom.library.sl.Strategy  v) { return  new tom.library.sl.All(v) ; }private static boolean tom_is_fun_sym_Sequence( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.Sequence) ;}private static  tom.library.sl.Strategy  tom_empty_list_Sequence() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_cons_list_Sequence( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  new tom.library.sl.Sequence(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.THEN) ;}private static boolean tom_is_empty_Sequence_Strategy( tom.library.sl.Strategy  t) { return  t instanceof tom.library.sl.Identity ;}   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_Sequence_Strategy(l1)) {       return l2;     } else if(tom_is_empty_Sequence_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_Sequence(l1)) {       if(tom_is_empty_Sequence_Strategy(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()))) {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),tom_append_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_head_Sequence_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_tail_Sequence_Strategy(begin):tom_empty_list_Sequence()),end,tail));     }   }   private static  tom.library.sl.Strategy  tom_make_Choice( tom.library.sl.Strategy  first,  tom.library.sl.Strategy  then) { return  new tom.library.sl.Choice(first,then) ; } /* Generated by TOM (version 2.5alpha): Do not edit this file */ /* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_Try( tom.library.sl.Strategy  v) { return tom_make_Choice(v,tom_make_Identity()) ; }   


  /** the declared options string */
  public static final String DECLARED_OPTIONS = "<options><boolean name='noSyntaxCheck' altName='' description='Do not perform syntax checking' value='false'/></options>";

  /** op and type declarator */
  private final static String OPERATOR    = "Operator";
  private final static String CONSTRUCTOR = "%op";
  private final static String OP_ARRAY    = "%oparray";
  private final static String OP_LIST     = "%oplist";
  private final static String TYPE        = "Type";
  private final static String TYPE_TERM   = "%typeterm";

  /** type function symbols */
  private final static String EQUALS      = "equals";
  private final static String GET_ELEMENT = "get_element";
  private final static String GET_SIZE    = "get_size";
  private final static String GET_HEAD    = "get_head";
  private final static String GET_TAIL    = "get_tail";
  private final static String IS_EMPTY    = "is_empty";
  /** operator function symbols */
  private final static String MAKE_APPEND = "make_append";
  private final static String MAKE_EMPTY  = "make_empty";
  private final static String MAKE_INSERT = "make_insert";
  private final static String MAKE        = "make";

  /** the list of already studied and declared Types */
  private  ArrayList alreadyStudiedTypes =  new ArrayList();
  /** the list of already studied and declared Symbol */
  private  ArrayList alreadyStudiedSymbols =  new ArrayList();

  /** List of expected functional declaration in each type declaration */
  private final static ArrayList TypeTermSignature =
    new ArrayList( Arrays.asList(new String[]{ TomSyntaxChecker.EQUALS }));

  /** Constructor */
  public TomSyntaxChecker() {
    super("TomSyntaxChecker");
    reinit();
  }

  /**
   * inherited from OptionOwner interface (plugin)
   */
  public PlatformOptionList getDeclaredOptionList() {
    return OptionParser.xmlToOptionList(TomSyntaxChecker.DECLARED_OPTIONS);
  }

  protected void reinit() {
    super.reinit();
    alreadyStudiedTypes   = new ArrayList();
    alreadyStudiedSymbols = new ArrayList();
  }

  public void run() {
    if(isActivated()) {
      strictType = !getOptionBooleanValue("lazyType");
      long startChrono = System.currentTimeMillis();
      try {
        // clean up internals
        reinit();
        // perform analyse
        try {
          tom_make_mu(tom_make_MuVar("x"),tom_make_Try(tom_cons_list_Sequence(tom_make_checkSyntax(this),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("x")),tom_empty_list_Sequence())))).visitLight((TomTerm)getWorkingTerm());
        } catch(tom.library.sl.VisitFailure e) {
          System.out.println("strategy failed");
        }
        // verbose
        getLogger().log(Level.INFO, TomMessage.tomSyntaxCheckingPhase.getMessage(),
            new Integer((int)(System.currentTimeMillis()-startChrono)));
      } catch (Exception e) {
        getLogger().log(Level.SEVERE, TomMessage.exceptionMessage.getMessage(),
                        new Object[]{getClass().getName(),
                                     getStreamManager().getInputFileName(),
                                     e.getMessage() });
        e.printStackTrace();
      }
    } else {
      // syntax checker desactivated
      getLogger().log(Level.INFO, TomMessage.syntaxCheckerInactivated.getMessage());
    }
  }

  private boolean isActivated() {
    return !getOptionBooleanValue("noSyntaxCheck");
  }

  /**
   * Syntax checking entry point: Catch and verify all type and operator
   * declaration, Match instruction
   */
  private static boolean tom_is_sort_TomSyntaxChecker(Object t) { return 

 t instanceof TomSyntaxChecker ;}private static class checkSyntax extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy  {private  TomSyntaxChecker  tsc; public checkSyntax( TomSyntaxChecker  tsc) { super(tom_make_Identity());this.tsc=tsc;}public  TomSyntaxChecker  gettsc() { return tsc;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.engine.adt.tomdeclaration.types.Declaration  visit_Declaration( tom.engine.adt.tomdeclaration.types.Declaration  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Declaration(tom__arg)) {{  tom.engine.adt.tomdeclaration.types.Declaration  tomMatch83NameNumberfreshSubject_1=(( tom.engine.adt.tomdeclaration.types.Declaration )tom__arg);if (tom_is_fun_sym_Strategy(tomMatch83NameNumberfreshSubject_1)) {{  tom.engine.adt.tomsignature.types.TomVisitList  tomMatch83NameNumber_freshVar_0=tom_get_slot_Strategy_VisitList(tomMatch83NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.Option  tomMatch83NameNumber_freshVar_1=tom_get_slot_Strategy_OrgTrack(tomMatch83NameNumberfreshSubject_1);{  tom.engine.adt.tomsignature.types.TomVisitList  tom_list=tomMatch83NameNumber_freshVar_0;{  tom.engine.adt.tomoption.types.Option  tom_origin=tomMatch83NameNumber_freshVar_1;if ( true ) {




        if(tom_list.isEmptyconcTomVisit()) {
          if (tom_is_sort_Option(tom_origin)) {{  tom.engine.adt.tomoption.types.Option  tomMatch82NameNumberfreshSubject_1=(( tom.engine.adt.tomoption.types.Option )tom_origin);if (tom_is_fun_sym_OriginTracking(tomMatch82NameNumberfreshSubject_1)) {{  String  tomMatch82NameNumber_freshVar_0=tom_get_slot_OriginTracking_FileName(tomMatch82NameNumberfreshSubject_1);{  int  tomMatch82NameNumber_freshVar_1=tom_get_slot_OriginTracking_Line(tomMatch82NameNumberfreshSubject_1);if ( true ) {
 
              tsc.messageError(tomMatch82NameNumber_freshVar_0,tomMatch82NameNumber_freshVar_1,TomMessage.emptyStrategy,new Object[]{});
            }}}}}}

          tsc.messageError("unknown",-1,TomMessage.emptyStrategy,new Object[]{});
        }
        /* STRATEGY MATCH STRUCTURE */
        tsc.verifyStrategy(tom_list);
      }}}}}}if (tom_is_fun_sym_TypeTermDecl(tomMatch83NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch83NameNumber_freshVar_2=tom_get_slot_TypeTermDecl_AstName(tomMatch83NameNumberfreshSubject_1);{  tom.engine.adt.tomdeclaration.types.DeclarationList  tomMatch83NameNumber_freshVar_3=tom_get_slot_TypeTermDecl_Declarations(tomMatch83NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.Option  tomMatch83NameNumber_freshVar_4=tom_get_slot_TypeTermDecl_OrgTrack(tomMatch83NameNumberfreshSubject_1);if (tom_is_fun_sym_Name(tomMatch83NameNumber_freshVar_2)) {{  String  tomMatch83NameNumber_freshVar_5=tom_get_slot_Name_String(tomMatch83NameNumber_freshVar_2);if ( true ) {


        tsc.verifyTypeDecl(TomSyntaxChecker.TYPE_TERM, tomMatch83NameNumber_freshVar_5, tomMatch83NameNumber_freshVar_3, tomMatch83NameNumber_freshVar_4);
        throw new tom.library.sl.VisitFailure();
      }}}}}}}if (tom_is_fun_sym_SymbolDecl(tomMatch83NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch83NameNumber_freshVar_6=tom_get_slot_SymbolDecl_AstName(tomMatch83NameNumberfreshSubject_1);if (tom_is_fun_sym_Name(tomMatch83NameNumber_freshVar_6)) {{  String  tomMatch83NameNumber_freshVar_7=tom_get_slot_Name_String(tomMatch83NameNumber_freshVar_6);if ( true ) {


        tsc.verifySymbol(TomSyntaxChecker.CONSTRUCTOR, tsc.getSymbolFromName(tomMatch83NameNumber_freshVar_7));
        throw new tom.library.sl.VisitFailure();
      }}}}}if (tom_is_fun_sym_ArraySymbolDecl(tomMatch83NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch83NameNumber_freshVar_8=tom_get_slot_ArraySymbolDecl_AstName(tomMatch83NameNumberfreshSubject_1);if (tom_is_fun_sym_Name(tomMatch83NameNumber_freshVar_8)) {{  String  tomMatch83NameNumber_freshVar_9=tom_get_slot_Name_String(tomMatch83NameNumber_freshVar_8);if ( true ) {

        tsc.verifySymbol(TomSyntaxChecker.OP_ARRAY, tsc.getSymbolFromName(tomMatch83NameNumber_freshVar_9));
        throw new tom.library.sl.VisitFailure();
      }}}}}if (tom_is_fun_sym_ListSymbolDecl(tomMatch83NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch83NameNumber_freshVar_10=tom_get_slot_ListSymbolDecl_AstName(tomMatch83NameNumberfreshSubject_1);if (tom_is_fun_sym_Name(tomMatch83NameNumber_freshVar_10)) {{  String  tomMatch83NameNumber_freshVar_11=tom_get_slot_Name_String(tomMatch83NameNumber_freshVar_10);if ( true ) {

        tsc.verifySymbol(TomSyntaxChecker.OP_LIST, tsc.getSymbolFromName(tomMatch83NameNumber_freshVar_11));
        throw new tom.library.sl.VisitFailure();
      }}}}}}}return super.visit_Declaration(tom__arg); }public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction( tom.engine.adt.tominstruction.types.Instruction  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_Instruction(tom__arg)) {{  tom.engine.adt.tominstruction.types.Instruction  tomMatch84NameNumberfreshSubject_1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg);if (tom_is_fun_sym_Match(tomMatch84NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch84NameNumber_freshVar_0=tom_get_slot_Match_SubjectList(tomMatch84NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch84NameNumber_freshVar_1=tom_get_slot_Match_AstPatternInstructionList(tomMatch84NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tomMatch84NameNumber_freshVar_2=tom_get_slot_Match_Option(tomMatch84NameNumberfreshSubject_1);if (tom_is_fun_sym_SubjectList(tomMatch84NameNumber_freshVar_0)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch84NameNumber_freshVar_3=tom_get_slot_SubjectList_TomList(tomMatch84NameNumber_freshVar_0);if ( true ) {




       /* TOM MATCH STRUCTURE */
       tsc.verifyMatch(tomMatch84NameNumber_freshVar_3, tomMatch84NameNumber_freshVar_1, tomMatch84NameNumber_freshVar_2);
     }}}}}}}}}return super.visit_Instruction(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_checkSyntax( TomSyntaxChecker  t0) { return new checkSyntax(t0); }



  // /////////////////////////////
  // TYPE DECLARATION CONCERNS //
  // ////////////////////////////
  private void verifyTypeDecl(String declType, String tomName, DeclarationList listOfDeclaration, Option typeOrgTrack) {
    currentTomStructureOrgTrack = typeOrgTrack;
    // ensure first definition
    verifyMultipleDefinition(tomName, declType, TYPE);
    // verify Macro functions
    ArrayList verifyList = new ArrayList(TomSyntaxChecker.TypeTermSignature);

    if (tom_is_sort_DeclarationList(listOfDeclaration)) {{  tom.engine.adt.tomdeclaration.types.DeclarationList  tomMatch86NameNumberfreshSubject_1=(( tom.engine.adt.tomdeclaration.types.DeclarationList )listOfDeclaration);if (tom_is_fun_sym_concDeclaration(tomMatch86NameNumberfreshSubject_1)) {{  tom.engine.adt.tomdeclaration.types.DeclarationList  tomMatch86NameNumber_freshVar_0=tomMatch86NameNumberfreshSubject_1;{  tom.engine.adt.tomdeclaration.types.DeclarationList  tomMatch86NameNumber_begin_2=tomMatch86NameNumber_freshVar_0;{  tom.engine.adt.tomdeclaration.types.DeclarationList  tomMatch86NameNumber_end_3=tomMatch86NameNumber_freshVar_0;do {{{  tom.engine.adt.tomdeclaration.types.DeclarationList  tomMatch86NameNumber_freshVar_1=tomMatch86NameNumber_end_3;if (!(tom_is_empty_concDeclaration_DeclarationList(tomMatch86NameNumber_freshVar_1))) {{  tom.engine.adt.tomdeclaration.types.DeclarationList  tomMatch86NameNumber_freshVar_4=tom_get_tail_concDeclaration_DeclarationList(tomMatch86NameNumber_freshVar_1);if ( true ) {
 // for each Declaration
        Declaration decl = tom_get_head_concDeclaration_DeclarationList(tomMatch86NameNumber_freshVar_1);
        matchblock:{
          if (tom_is_sort_Declaration(decl)) {{  tom.engine.adt.tomdeclaration.types.Declaration  tomMatch85NameNumberfreshSubject_1=(( tom.engine.adt.tomdeclaration.types.Declaration )decl);if (tom_is_fun_sym_EqualTermDecl(tomMatch85NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch85NameNumber_freshVar_0=tom_get_slot_EqualTermDecl_TermArg1(tomMatch85NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch85NameNumber_freshVar_1=tom_get_slot_EqualTermDecl_TermArg2(tomMatch85NameNumberfreshSubject_1);{  tom.engine.adt.tominstruction.types.Instruction  tomMatch85NameNumber_freshVar_2=tom_get_slot_EqualTermDecl_Instr(tomMatch85NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.Option  tomMatch85NameNumber_freshVar_3=tom_get_slot_EqualTermDecl_OrgTrack(tomMatch85NameNumberfreshSubject_1);if (tom_is_fun_sym_Variable(tomMatch85NameNumber_freshVar_0)) {{  tom.engine.adt.tomname.types.TomName  tomMatch85NameNumber_freshVar_4=tom_get_slot_Variable_AstName(tomMatch85NameNumber_freshVar_0);if (tom_is_fun_sym_Name(tomMatch85NameNumber_freshVar_4)) {{  String  tomMatch85NameNumber_freshVar_5=tom_get_slot_Name_String(tomMatch85NameNumber_freshVar_4);if (tom_is_fun_sym_Variable(tomMatch85NameNumber_freshVar_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch85NameNumber_freshVar_6=tom_get_slot_Variable_AstName(tomMatch85NameNumber_freshVar_1);if (tom_is_fun_sym_Name(tomMatch85NameNumber_freshVar_6)) {{  String  tomMatch85NameNumber_freshVar_7=tom_get_slot_Name_String(tomMatch85NameNumber_freshVar_6);if ( true ) {checkFieldAndLinearArgs(TomSyntaxChecker.EQUALS,verifyList,tomMatch85NameNumber_freshVar_3,tomMatch85NameNumber_freshVar_5,tomMatch85NameNumber_freshVar_7,declType)


;
              break matchblock;
            }}}}}}}}}}}}}}if (tom_is_fun_sym_GetHeadDecl(tomMatch85NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.Option  tomMatch85NameNumber_freshVar_8=tom_get_slot_GetHeadDecl_OrgTrack(tomMatch85NameNumberfreshSubject_1);if ( true ) {checkField(TomSyntaxChecker.GET_HEAD,verifyList,tomMatch85NameNumber_freshVar_8,declType)


;
              break matchblock;
            }}}if (tom_is_fun_sym_GetTailDecl(tomMatch85NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.Option  tomMatch85NameNumber_freshVar_9=tom_get_slot_GetTailDecl_OrgTrack(tomMatch85NameNumberfreshSubject_1);if ( true ) {checkField(TomSyntaxChecker.GET_TAIL,verifyList,tomMatch85NameNumber_freshVar_9,declType)

;
              break matchblock;
            }}}if (tom_is_fun_sym_IsEmptyDecl(tomMatch85NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.Option  tomMatch85NameNumber_freshVar_10=tom_get_slot_IsEmptyDecl_OrgTrack(tomMatch85NameNumberfreshSubject_1);if ( true ) {checkField(TomSyntaxChecker.IS_EMPTY,verifyList,tomMatch85NameNumber_freshVar_10,declType)

;
              break matchblock;
            }}}if (tom_is_fun_sym_GetElementDecl(tomMatch85NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch85NameNumber_freshVar_11=tom_get_slot_GetElementDecl_Variable(tomMatch85NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch85NameNumber_freshVar_12=tom_get_slot_GetElementDecl_Index(tomMatch85NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.Option  tomMatch85NameNumber_freshVar_13=tom_get_slot_GetElementDecl_OrgTrack(tomMatch85NameNumberfreshSubject_1);if (tom_is_fun_sym_Variable(tomMatch85NameNumber_freshVar_11)) {{  tom.engine.adt.tomname.types.TomName  tomMatch85NameNumber_freshVar_14=tom_get_slot_Variable_AstName(tomMatch85NameNumber_freshVar_11);if (tom_is_fun_sym_Name(tomMatch85NameNumber_freshVar_14)) {{  String  tomMatch85NameNumber_freshVar_15=tom_get_slot_Name_String(tomMatch85NameNumber_freshVar_14);if (tom_is_fun_sym_Variable(tomMatch85NameNumber_freshVar_12)) {{  tom.engine.adt.tomname.types.TomName  tomMatch85NameNumber_freshVar_16=tom_get_slot_Variable_AstName(tomMatch85NameNumber_freshVar_12);if (tom_is_fun_sym_Name(tomMatch85NameNumber_freshVar_16)) {{  String  tomMatch85NameNumber_freshVar_17=tom_get_slot_Name_String(tomMatch85NameNumber_freshVar_16);if ( true ) {checkFieldAndLinearArgs(TomSyntaxChecker.GET_ELEMENT,verifyList,tomMatch85NameNumber_freshVar_13,tomMatch85NameNumber_freshVar_15,tomMatch85NameNumber_freshVar_17,declType)


;
              break matchblock;
            }}}}}}}}}}}}}if (tom_is_fun_sym_GetSizeDecl(tomMatch85NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.Option  tomMatch85NameNumber_freshVar_18=tom_get_slot_GetSizeDecl_OrgTrack(tomMatch85NameNumberfreshSubject_1);if ( true ) {checkField(TomSyntaxChecker.GET_SIZE,verifyList,tomMatch85NameNumber_freshVar_18,declType)

;
              break matchblock;
            }}}}}

                   }
      }}}}if (tom_is_empty_concDeclaration_DeclarationList(tomMatch86NameNumber_end_3)) {tomMatch86NameNumber_end_3=tomMatch86NameNumber_begin_2;} else {tomMatch86NameNumber_end_3=tom_get_tail_concDeclaration_DeclarationList(tomMatch86NameNumber_end_3);}}} while(!(tom_equal_term_DeclarationList(tomMatch86NameNumber_end_3, tomMatch86NameNumber_begin_2)));}}}}}}

    // remove non mandatory functions
    if(verifyList.contains(TomSyntaxChecker.EQUALS)) {
      verifyList.remove(verifyList.indexOf(TomSyntaxChecker.EQUALS));
    }
    if(!verifyList.isEmpty()) {
      messageMissingMacroFunctions(declType, verifyList);
    }
  } // verifyTypeDecl

  private void verifyMultipleDefinition(String name, String symbolType, String OperatorOrType) {
    ArrayList list;
    if (OperatorOrType.equals(TomSyntaxChecker.OPERATOR)) {
      list = alreadyStudiedSymbols;
    } else {
      list = alreadyStudiedTypes;
    }
    if(list.contains(name)) {
      messageError(currentTomStructureOrgTrack.getFileName(),
          currentTomStructureOrgTrack.getLine(),
          TomMessage.multipleSymbolDefinitionError,
          new Object[]{name});
    } else {
      list.add(name);
    }
  } // verifyMultipleDefinition

  private  void checkField(String function, ArrayList foundFunctions, Option orgTrack, String symbolType) {
    if(foundFunctions.contains(function)) {
      foundFunctions.remove(foundFunctions.indexOf(function));
    } else {
      messageError(orgTrack.getFileName(),orgTrack.getLine(),
                   TomMessage.macroFunctionRepeated,
                   new Object[]{function});
    }
  } // checkField

  private  void checkFieldAndLinearArgs(String function, ArrayList foundFunctions, Option orgTrack, String name1, String name2, String symbolType) {
    checkField(function,foundFunctions, orgTrack, symbolType);
    if(name1.equals(name2)) {
      messageError(orgTrack.getFileName(),orgTrack.getLine(),
                   TomMessage.nonLinearMacroFunction,
                   new Object[]{function, name1});
    }
  } // checkFieldAndLinearArgs

  // ///////////////////////////////
  // SYMBOL DECLARATION CONCERNS //
  // ///////////////////////////////
  private  void verifySymbol(String symbolType, TomSymbol tomSymbol){
    int domainLength;
    String symbStrName = tomSymbol.getAstName().getString();
    OptionList optionList = tomSymbol.getOption();
    // We save first the origin tracking of the symbol declaration
    currentTomStructureOrgTrack = TomBase.findOriginTracking(optionList);

    // ensure first definition then Codomain, Domain, Macros and Slots (Simple
    // operator)
    verifyMultipleDefinition(symbStrName, symbolType, TomSyntaxChecker.OPERATOR);
    verifySymbolCodomain(TomBase.getSymbolCodomain(tomSymbol), symbStrName, symbolType);
    domainLength = verifySymbolDomain(TomBase.getSymbolDomain(tomSymbol), symbStrName, symbolType);
    verifySymbolMacroFunctions(optionList, domainLength, symbolType);
  } // verifySymbol

  private  void verifySymbolCodomain(TomType codomain, String symbName, String symbolType) {
    if (tom_is_sort_TomType(codomain)) {{  tom.engine.adt.tomtype.types.TomType  tomMatch87NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomType )codomain);if (tom_is_fun_sym_Codomain(tomMatch87NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch87NameNumber_freshVar_0=tom_get_slot_Codomain_AstName(tomMatch87NameNumberfreshSubject_1);if (tom_is_fun_sym_Name(tomMatch87NameNumber_freshVar_0)) {{  String  tomMatch87NameNumber_freshVar_1=tom_get_slot_Name_String(tomMatch87NameNumber_freshVar_0);if ( true ) {

        if(symbolTable().getSymbolFromName(tomMatch87NameNumber_freshVar_1) == null) {
          messageError(currentTomStructureOrgTrack.getFileName(),currentTomStructureOrgTrack.getLine(),
              TomMessage.symbolCodomainError,
              new Object[]{symbName, codomain});
        }
        return;
      }}}}}if (tom_is_fun_sym_TomTypeAlone(tomMatch87NameNumberfreshSubject_1)) {{  String  tomMatch87NameNumber_freshVar_2=tom_get_slot_TomTypeAlone_String(tomMatch87NameNumberfreshSubject_1);{  String  tom_typeName=tomMatch87NameNumber_freshVar_2;if ( true ) {


        if(!testTypeExistence(tom_typeName)) {
          messageError(currentTomStructureOrgTrack.getFileName(),currentTomStructureOrgTrack.getLine(),
              TomMessage.symbolCodomainError,
              new Object[]{symbName, (tom_typeName)});
        }
        return;
      }}}}if (tom_is_fun_sym_EmptyType(tomMatch87NameNumberfreshSubject_1)) {if ( true ) {


        messageError(currentTomStructureOrgTrack.getFileName(),currentTomStructureOrgTrack.getLine(),
            TomMessage.symbolCodomainError,
            new Object[]{symbName, ""});
        return;
      }}}}

    throw new TomRuntimeException("Strange codomain "+codomain);
  }

  private  int verifySymbolDomain(TomTypeList args, String symbName, String symbolType) {
    int position = 1;
    if(symbolType.equals(TomSyntaxChecker.CONSTRUCTOR)) {
      if (tom_is_sort_TomTypeList(args)) {{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch88NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomTypeList )args);if (tom_is_fun_sym_concTomType(tomMatch88NameNumberfreshSubject_1)) {{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch88NameNumber_freshVar_0=tomMatch88NameNumberfreshSubject_1;{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch88NameNumber_begin_2=tomMatch88NameNumber_freshVar_0;{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch88NameNumber_end_3=tomMatch88NameNumber_freshVar_0;do {{{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch88NameNumber_freshVar_1=tomMatch88NameNumber_end_3;if (!(tom_is_empty_concTomType_TomTypeList(tomMatch88NameNumber_freshVar_1))) {if (tom_is_fun_sym_TomTypeAlone(tom_get_head_concTomType_TomTypeList(tomMatch88NameNumber_freshVar_1))) {{  String  tomMatch88NameNumber_freshVar_6=tom_get_slot_TomTypeAlone_String(tom_get_head_concTomType_TomTypeList(tomMatch88NameNumber_freshVar_1));{  String  tom_typeName=tomMatch88NameNumber_freshVar_6;{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch88NameNumber_freshVar_4=tom_get_tail_concTomType_TomTypeList(tomMatch88NameNumber_freshVar_1);if ( true ) {
 // for each symbol types
          if(!testTypeExistence(tom_typeName)) {
            messageError(currentTomStructureOrgTrack.getFileName(),
                currentTomStructureOrgTrack.getLine(),
                TomMessage.symbolDomainError,
                new Object[]{new Integer(position), symbName, (tom_typeName)});
          }
          position++;
        }}}}}}}if (tom_is_empty_concTomType_TomTypeList(tomMatch88NameNumber_end_3)) {tomMatch88NameNumber_end_3=tomMatch88NameNumber_begin_2;} else {tomMatch88NameNumber_end_3=tom_get_tail_concTomType_TomTypeList(tomMatch88NameNumber_end_3);}}} while(!(tom_equal_term_TomTypeList(tomMatch88NameNumber_end_3, tomMatch88NameNumber_begin_2)));}}}}}}

      return (position-1);
    } else { // OPARRAY and OPLIST
      if (tom_is_sort_TomTypeList(args)) {{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch89NameNumberfreshSubject_1=(( tom.engine.adt.tomtype.types.TomTypeList )args);if (tom_is_fun_sym_concTomType(tomMatch89NameNumberfreshSubject_1)) {{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch89NameNumber_freshVar_0=tomMatch89NameNumberfreshSubject_1;if (!(tom_is_empty_concTomType_TomTypeList(tomMatch89NameNumber_freshVar_0))) {if (tom_is_fun_sym_TomTypeAlone(tom_get_head_concTomType_TomTypeList(tomMatch89NameNumber_freshVar_0))) {{  String  tomMatch89NameNumber_freshVar_2=tom_get_slot_TomTypeAlone_String(tom_get_head_concTomType_TomTypeList(tomMatch89NameNumber_freshVar_0));{  String  tom_typeName=tomMatch89NameNumber_freshVar_2;{  tom.engine.adt.tomtype.types.TomTypeList  tomMatch89NameNumber_freshVar_1=tom_get_tail_concTomType_TomTypeList(tomMatch89NameNumber_freshVar_0);if (tom_is_empty_concTomType_TomTypeList(tomMatch89NameNumber_freshVar_1)) {if ( true ) {

          if(!testTypeExistence(tom_typeName)) {
            messageError(currentTomStructureOrgTrack.getFileName(),
                currentTomStructureOrgTrack.getLine(),
                TomMessage.listSymbolDomainError,
                new Object[]{symbName, (tom_typeName)});
          }
        }}}}}}}}}}}
 // match
      return 1;
    }
  } // verifySymbolDomain

  private  void verifySymbolMacroFunctions(OptionList option, int domainLength, String symbolType) {
    ArrayList verifyList = new ArrayList();
    boolean foundOpMake = false;
    if(symbolType.equals(TomSyntaxChecker.CONSTRUCTOR)) { // Nothing absolutely
                                                          // necessary
    } else if(symbolType == TomSyntaxChecker.OP_ARRAY ) {
      verifyList.add(TomSyntaxChecker.MAKE_EMPTY);
      verifyList.add(TomSyntaxChecker.MAKE_APPEND);
    } else if(symbolType == TomSyntaxChecker.OP_LIST) {
      verifyList.add(TomSyntaxChecker.MAKE_EMPTY);
      verifyList.add(TomSyntaxChecker.MAKE_INSERT);
    }

    if (tom_is_sort_OptionList(option)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch91NameNumberfreshSubject_1=(( tom.engine.adt.tomoption.types.OptionList )option);if (tom_is_fun_sym_concOption(tomMatch91NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch91NameNumber_freshVar_0=tomMatch91NameNumberfreshSubject_1;{  tom.engine.adt.tomoption.types.OptionList  tomMatch91NameNumber_begin_2=tomMatch91NameNumber_freshVar_0;{  tom.engine.adt.tomoption.types.OptionList  tomMatch91NameNumber_end_3=tomMatch91NameNumber_freshVar_0;do {{{  tom.engine.adt.tomoption.types.OptionList  tomMatch91NameNumber_freshVar_1=tomMatch91NameNumber_end_3;if (!(tom_is_empty_concOption_OptionList(tomMatch91NameNumber_freshVar_1))) {if (tom_is_fun_sym_DeclarationToOption(tom_get_head_concOption_OptionList(tomMatch91NameNumber_freshVar_1))) {{  tom.engine.adt.tomdeclaration.types.Declaration  tomMatch91NameNumber_freshVar_6=tom_get_slot_DeclarationToOption_AstDeclaration(tom_get_head_concOption_OptionList(tomMatch91NameNumber_freshVar_1));{  tom.engine.adt.tomoption.types.OptionList  tomMatch91NameNumber_freshVar_4=tom_get_tail_concOption_OptionList(tomMatch91NameNumber_freshVar_1);if ( true ) {
 // for each Declaration
        Declaration decl=tomMatch91NameNumber_freshVar_6;
        matchblock:{
          if (tom_is_sort_Declaration(decl)) {{  tom.engine.adt.tomdeclaration.types.Declaration  tomMatch90NameNumberfreshSubject_1=(( tom.engine.adt.tomdeclaration.types.Declaration )decl);if (tom_is_fun_sym_MakeEmptyArray(tomMatch90NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.Option  tomMatch90NameNumber_freshVar_0=tom_get_slot_MakeEmptyArray_OrgTrack(tomMatch90NameNumberfreshSubject_1);if ( true ) {checkField(TomSyntaxChecker.MAKE_EMPTY,verifyList,tomMatch90NameNumber_freshVar_0,symbolType)


;
              break matchblock;
            }}}if (tom_is_fun_sym_MakeAddArray(tomMatch90NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch90NameNumber_freshVar_1=tom_get_slot_MakeAddArray_VarList(tomMatch90NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch90NameNumber_freshVar_2=tom_get_slot_MakeAddArray_VarElt(tomMatch90NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.Option  tomMatch90NameNumber_freshVar_3=tom_get_slot_MakeAddArray_OrgTrack(tomMatch90NameNumberfreshSubject_1);if (tom_is_fun_sym_Variable(tomMatch90NameNumber_freshVar_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch90NameNumber_freshVar_4=tom_get_slot_Variable_AstName(tomMatch90NameNumber_freshVar_1);if (tom_is_fun_sym_Name(tomMatch90NameNumber_freshVar_4)) {{  String  tomMatch90NameNumber_freshVar_5=tom_get_slot_Name_String(tomMatch90NameNumber_freshVar_4);if (tom_is_fun_sym_Variable(tomMatch90NameNumber_freshVar_2)) {{  tom.engine.adt.tomname.types.TomName  tomMatch90NameNumber_freshVar_6=tom_get_slot_Variable_AstName(tomMatch90NameNumber_freshVar_2);if (tom_is_fun_sym_Name(tomMatch90NameNumber_freshVar_6)) {{  String  tomMatch90NameNumber_freshVar_7=tom_get_slot_Name_String(tomMatch90NameNumber_freshVar_6);if ( true ) {checkFieldAndLinearArgs(TomSyntaxChecker.MAKE_APPEND,verifyList,tomMatch90NameNumber_freshVar_3,tomMatch90NameNumber_freshVar_5,tomMatch90NameNumber_freshVar_7,symbolType)

;
              break matchblock;
            }}}}}}}}}}}}}if (tom_is_fun_sym_MakeEmptyList(tomMatch90NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.Option  tomMatch90NameNumber_freshVar_8=tom_get_slot_MakeEmptyList_OrgTrack(tomMatch90NameNumberfreshSubject_1);if ( true ) {checkField(TomSyntaxChecker.MAKE_EMPTY,verifyList,tomMatch90NameNumber_freshVar_8,symbolType)


;
              break matchblock;
            }}}if (tom_is_fun_sym_MakeAddList(tomMatch90NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch90NameNumber_freshVar_9=tom_get_slot_MakeAddList_VarList(tomMatch90NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch90NameNumber_freshVar_10=tom_get_slot_MakeAddList_VarElt(tomMatch90NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.Option  tomMatch90NameNumber_freshVar_11=tom_get_slot_MakeAddList_OrgTrack(tomMatch90NameNumberfreshSubject_1);if (tom_is_fun_sym_Variable(tomMatch90NameNumber_freshVar_9)) {{  tom.engine.adt.tomname.types.TomName  tomMatch90NameNumber_freshVar_12=tom_get_slot_Variable_AstName(tomMatch90NameNumber_freshVar_9);if (tom_is_fun_sym_Name(tomMatch90NameNumber_freshVar_12)) {{  String  tomMatch90NameNumber_freshVar_13=tom_get_slot_Name_String(tomMatch90NameNumber_freshVar_12);if (tom_is_fun_sym_Variable(tomMatch90NameNumber_freshVar_10)) {{  tom.engine.adt.tomname.types.TomName  tomMatch90NameNumber_freshVar_14=tom_get_slot_Variable_AstName(tomMatch90NameNumber_freshVar_10);if (tom_is_fun_sym_Name(tomMatch90NameNumber_freshVar_14)) {{  String  tomMatch90NameNumber_freshVar_15=tom_get_slot_Name_String(tomMatch90NameNumber_freshVar_14);if ( true ) {checkFieldAndLinearArgs(TomSyntaxChecker.MAKE_INSERT,verifyList,tomMatch90NameNumber_freshVar_11,tomMatch90NameNumber_freshVar_13,tomMatch90NameNumber_freshVar_15,symbolType)

;
              break matchblock;
            }}}}}}}}}}}}}if (tom_is_fun_sym_MakeDecl(tomMatch90NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch90NameNumber_freshVar_17=tom_get_slot_MakeDecl_Args(tomMatch90NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.Option  tomMatch90NameNumber_freshVar_18=tom_get_slot_MakeDecl_OrgTrack(tomMatch90NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.Option  tomMatch90NameNumber_freshVar_16=tomMatch90NameNumber_freshVar_18;if (tom_is_fun_sym_OriginTracking(tomMatch90NameNumber_freshVar_16)) {{  String  tomMatch90NameNumber_freshVar_19=tom_get_slot_OriginTracking_FileName(tomMatch90NameNumber_freshVar_16);{  int  tomMatch90NameNumber_freshVar_20=tom_get_slot_OriginTracking_Line(tomMatch90NameNumber_freshVar_16);if ( true ) {


              if (!foundOpMake) {
                foundOpMake = true;
                verifyMakeDeclArgs(tomMatch90NameNumber_freshVar_17,domainLength,tomMatch90NameNumber_freshVar_16,symbolType);
              } else {
                messageError(tomMatch90NameNumber_freshVar_19, tomMatch90NameNumber_freshVar_20,
                             TomMessage.macroFunctionRepeated,
                             new Object[]{TomSyntaxChecker.MAKE});
              }
              break matchblock;
            }}}}}}}}}}

        }
      }}}}}}if (tom_is_empty_concOption_OptionList(tomMatch91NameNumber_end_3)) {tomMatch91NameNumber_end_3=tomMatch91NameNumber_begin_2;} else {tomMatch91NameNumber_end_3=tom_get_tail_concOption_OptionList(tomMatch91NameNumber_end_3);}}} while(!(tom_equal_term_OptionList(tomMatch91NameNumber_end_3, tomMatch91NameNumber_begin_2)));}}}}}}

    if(!verifyList.isEmpty()) {
      messageMissingMacroFunctions(symbolType, verifyList);
    }
  }  // verifySymbolMacroFunctions

  private  void verifyMakeDeclArgs(TomList argsList, int domainLength, Option orgTrack, String symbolType){
      // we test the necessity to use different names for each
      // variable-parameter.
    int nbArgs = 0;
    ArrayList listVar = new ArrayList();
    if (tom_is_sort_TomList(argsList)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch92NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomList )argsList);if (tom_is_fun_sym_concTomTerm(tomMatch92NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch92NameNumber_freshVar_0=tomMatch92NameNumberfreshSubject_1;{  tom.engine.adt.tomterm.types.TomList  tomMatch92NameNumber_begin_2=tomMatch92NameNumber_freshVar_0;{  tom.engine.adt.tomterm.types.TomList  tomMatch92NameNumber_end_3=tomMatch92NameNumber_freshVar_0;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch92NameNumber_freshVar_1=tomMatch92NameNumber_end_3;if (!(tom_is_empty_concTomTerm_TomList(tomMatch92NameNumber_freshVar_1))) {if (tom_is_fun_sym_Variable(tom_get_head_concTomTerm_TomList(tomMatch92NameNumber_freshVar_1))) {{  tom.engine.adt.tomname.types.TomName  tomMatch92NameNumber_freshVar_6=tom_get_slot_Variable_AstName(tom_get_head_concTomTerm_TomList(tomMatch92NameNumber_freshVar_1));if (tom_is_fun_sym_Name(tomMatch92NameNumber_freshVar_6)) {{  String  tomMatch92NameNumber_freshVar_7=tom_get_slot_Name_String(tomMatch92NameNumber_freshVar_6);{  String  tom_name=tomMatch92NameNumber_freshVar_7;{  tom.engine.adt.tomterm.types.TomList  tomMatch92NameNumber_freshVar_4=tom_get_tail_concTomTerm_TomList(tomMatch92NameNumber_freshVar_1);if ( true ) {
 // for each Macro variable
        if(listVar.contains(tom_name)) {
          messageError(orgTrack.getFileName(),orgTrack.getLine(),
                       TomMessage.nonLinearMacroFunction,
                       new Object[]{TomSyntaxChecker.MAKE, (tom_name)});
        } else {
          listVar.add(tom_name);
        }
        nbArgs++;
      }}}}}}}}}if (tom_is_empty_concTomTerm_TomList(tomMatch92NameNumber_end_3)) {tomMatch92NameNumber_end_3=tomMatch92NameNumber_begin_2;} else {tomMatch92NameNumber_end_3=tom_get_tail_concTomTerm_TomList(tomMatch92NameNumber_end_3);}}} while(!(tom_equal_term_TomList(tomMatch92NameNumber_end_3, tomMatch92NameNumber_begin_2)));}}}}}}

    if(nbArgs != domainLength) {
      messageError(orgTrack.getFileName(),orgTrack.getLine(),
                   TomMessage.badMakeDefinition,
                   new Object[]{new Integer(nbArgs), new Integer(domainLength)});
    }
  } // verifyMakeDeclArgs

  private  void verifySymbolPairNameDeclList(PairNameDeclList pairNameDeclList, String symbolType) {
      // we test the existence of 2 same slot names
    ArrayList listSlot = new ArrayList();
    if (tom_is_sort_PairNameDeclList(pairNameDeclList)) {{  tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch93NameNumberfreshSubject_1=(( tom.engine.adt.tomslot.types.PairNameDeclList )pairNameDeclList);if (tom_is_fun_sym_concPairNameDecl(tomMatch93NameNumberfreshSubject_1)) {{  tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch93NameNumber_freshVar_0=tomMatch93NameNumberfreshSubject_1;{  tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch93NameNumber_begin_2=tomMatch93NameNumber_freshVar_0;{  tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch93NameNumber_end_3=tomMatch93NameNumber_freshVar_0;do {{{  tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch93NameNumber_freshVar_1=tomMatch93NameNumber_end_3;if (!(tom_is_empty_concPairNameDecl_PairNameDeclList(tomMatch93NameNumber_freshVar_1))) {if (tom_is_fun_sym_PairNameDecl(tom_get_head_concPairNameDecl_PairNameDeclList(tomMatch93NameNumber_freshVar_1))) {{  tom.engine.adt.tomname.types.TomName  tomMatch93NameNumber_freshVar_6=tom_get_slot_PairNameDecl_SlotName(tom_get_head_concPairNameDecl_PairNameDeclList(tomMatch93NameNumber_freshVar_1));if (tom_is_fun_sym_Name(tomMatch93NameNumber_freshVar_6)) {{  String  tomMatch93NameNumber_freshVar_7=tom_get_slot_Name_String(tomMatch93NameNumber_freshVar_6);{  String  tom_name=tomMatch93NameNumber_freshVar_7;{  tom.engine.adt.tomslot.types.PairNameDeclList  tomMatch93NameNumber_freshVar_4=tom_get_tail_concPairNameDecl_PairNameDeclList(tomMatch93NameNumber_freshVar_1);if ( true ) {
 // for each Slot
        if(listSlot.contains(tom_name)) {
            // TODO
            // messageWarningTwoSameSlotDeclError(name, orgTrack, symbolType);
        } else {
          listSlot.add(tom_name);
        }
      }}}}}}}}}if (tom_is_empty_concPairNameDecl_PairNameDeclList(tomMatch93NameNumber_end_3)) {tomMatch93NameNumber_end_3=tomMatch93NameNumber_begin_2;} else {tomMatch93NameNumber_end_3=tom_get_tail_concPairNameDecl_PairNameDeclList(tomMatch93NameNumber_end_3);}}} while(!(tom_equal_term_PairNameDeclList(tomMatch93NameNumber_end_3, tomMatch93NameNumber_begin_2)));}}}}}}

  } // verifySymbolPairNameDeclList

  private  void messageMissingMacroFunctions(String symbolType, ArrayList list) {
    StringBuffer listOfMissingMacros = new StringBuffer();
    for(int i=0;i<list.size();i++) {
      listOfMissingMacros.append(list.get(i) + ",  ");
    }
    String stringListOfMissingMacros = listOfMissingMacros.substring(0, listOfMissingMacros.length()-3);
    messageError(currentTomStructureOrgTrack.getFileName(),
        currentTomStructureOrgTrack.getLine(),
                 TomMessage.missingMacroFunctions,
                 new Object[]{stringListOfMissingMacros});
  } // messageMissingMacroFunctions

  // ////////////////////////////// /
  // MATCH VERIFICATION CONCERNS ///
  // ////////////////////////////////

  /*
   * Given a MatchConstruct's subject list and pattern-action list
   */
  private void verifyMatch(TomList subjectList, PatternInstructionList patternInstructionList, OptionList option) {
    currentTomStructureOrgTrack = TomBase.findOriginTracking(option);
    ArrayList typeMatchArgs = new ArrayList();
    ArrayList subjectMatchArgs = new ArrayList();
    int nbExpectedArgs = 0;
    // From the subjects list(match definition), we test each used type and keep
    // them in memory
    while(!subjectList.isEmptyconcTomTerm()) {
      TomTerm subject = subjectList.getHeadconcTomTerm();
      // for each Match args
      if (tom_is_sort_TomTerm(subject)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch94NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if (tom_is_fun_sym_Variable(tomMatch94NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch94NameNumber_freshVar_1=tom_get_slot_Variable_AstName(tomMatch94NameNumberfreshSubject_1);{  tom.engine.adt.tomtype.types.TomType  tomMatch94NameNumber_freshVar_2=tom_get_slot_Variable_AstType(tomMatch94NameNumberfreshSubject_1);if (tom_is_fun_sym_Name(tomMatch94NameNumber_freshVar_1)) {{  String  tomMatch94NameNumber_freshVar_3=tom_get_slot_Name_String(tomMatch94NameNumber_freshVar_1);{  String  tom_name=tomMatch94NameNumber_freshVar_3;{  tom.engine.adt.tomtype.types.TomType  tomMatch94NameNumber_freshVar_0=tomMatch94NameNumber_freshVar_2;if (tom_is_fun_sym_TomTypeAlone(tomMatch94NameNumber_freshVar_0)) {{  String  tomMatch94NameNumber_freshVar_4=tom_get_slot_TomTypeAlone_String(tomMatch94NameNumber_freshVar_0);{  String  tom_type=tomMatch94NameNumber_freshVar_4;if ( true ) {

	  nbExpectedArgs++;
	  subjectMatchArgs.add(tom_name);
          if(tom_type.equals("unknown type")) {
            typeMatchArgs.add(null);
          } else if(testTypeExistence(tom_type)) {
            typeMatchArgs.add(tomMatch94NameNumber_freshVar_0);
          } else {
            messageError(currentTomStructureOrgTrack.getFileName(),
                currentTomStructureOrgTrack.getLine(),
                TomMessage.unknownMatchArgumentTypeInSignature,
                new Object[]{tom_name, (tom_type)});
            typeMatchArgs.add(null);
          }
        }}}}}}}}}}}{  tom.engine.adt.tomterm.types.TomTerm  tomMatch94NameNumber_freshVar_5=tomMatch94NameNumberfreshSubject_1;if (tom_is_fun_sym_TermAppl(tomMatch94NameNumber_freshVar_5)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch94NameNumber_freshVar_6=tom_get_slot_TermAppl_NameList(tomMatch94NameNumber_freshVar_5);if (tom_is_fun_sym_concTomName(tomMatch94NameNumber_freshVar_6)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch94NameNumber_freshVar_7=tomMatch94NameNumber_freshVar_6;if (!(tom_is_empty_concTomName_TomNameList(tomMatch94NameNumber_freshVar_7))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch94NameNumber_freshVar_7))) {{  String  tomMatch94NameNumber_freshVar_9=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch94NameNumber_freshVar_7));{  String  tom_name=tomMatch94NameNumber_freshVar_9;{  tom.engine.adt.tomname.types.TomNameList  tomMatch94NameNumber_freshVar_8=tom_get_tail_concTomName_TomNameList(tomMatch94NameNumber_freshVar_7);if (tom_is_empty_concTomName_TomNameList(tomMatch94NameNumber_freshVar_8)) {if ( true ) {


	  nbExpectedArgs++;
	  subjectMatchArgs.add(tom_name);
	  TomSymbol symbol = getSymbolFromName(tom_name);
	  if(symbol!=null) {
	    TomType type = TomBase.getSymbolCodomain(symbol);
	    String typeName = TomBase.getTomType(type);
	    if(!testTypeExistence(typeName)) {
	      messageError(currentTomStructureOrgTrack.getFileName(),
		  currentTomStructureOrgTrack.getLine(),
		  TomMessage.unknownMatchArgumentTypeInSignature,
		  new Object[]{tom_name, typeName});
	    }
	    typeMatchArgs.add(type);
            validateTerm(tomMatch94NameNumber_freshVar_5, type, false, true, true);
	  } else {
	    typeMatchArgs.add(null);
	  }
        }}}}}}}}}}}}}}

      subjectList = subjectList.getTailconcTomTerm();
    }

    /*
     * if a type is not specified in the subjectList we look for a type in a
     * column and we update typeMatchArgs
     */
    for(int i=0 ; i<typeMatchArgs.size() ; i++) {
      // System.out.println("i = " + i);
block: {
	 if(typeMatchArgs.get(i) == null) {
	   if (tom_is_sort_PatternInstructionList(patternInstructionList)) {{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch97NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.PatternInstructionList )patternInstructionList);if (tom_is_fun_sym_concPatternInstruction(tomMatch97NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch97NameNumber_freshVar_0=tomMatch97NameNumberfreshSubject_1;{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch97NameNumber_begin_2=tomMatch97NameNumber_freshVar_0;{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch97NameNumber_end_3=tomMatch97NameNumber_freshVar_0;do {{{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch97NameNumber_freshVar_1=tomMatch97NameNumber_end_3;if (!(tom_is_empty_concPatternInstruction_PatternInstructionList(tomMatch97NameNumber_freshVar_1))) {if (tom_is_fun_sym_PatternInstruction(tom_get_head_concPatternInstruction_PatternInstructionList(tomMatch97NameNumber_freshVar_1))) {{  tom.engine.adt.tomterm.types.Pattern  tomMatch97NameNumber_freshVar_6=tom_get_slot_PatternInstruction_Pattern(tom_get_head_concPatternInstruction_PatternInstructionList(tomMatch97NameNumber_freshVar_1));if (tom_is_fun_sym_Pattern(tomMatch97NameNumber_freshVar_6)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch97NameNumber_freshVar_7=tom_get_slot_Pattern_TomList(tomMatch97NameNumber_freshVar_6);if (tom_is_fun_sym_concTomTerm(tomMatch97NameNumber_freshVar_7)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch97NameNumber_freshVar_8=tomMatch97NameNumber_freshVar_7;{  tom.engine.adt.tomterm.types.TomList  tomMatch97NameNumber_begin_10=tomMatch97NameNumber_freshVar_8;{  tom.engine.adt.tomterm.types.TomList  tomMatch97NameNumber_end_11=tomMatch97NameNumber_freshVar_8;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch97NameNumber_freshVar_9=tomMatch97NameNumber_end_11;if (!(tom_is_empty_concTomTerm_TomList(tomMatch97NameNumber_freshVar_9))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch97NameNumber_freshVar_12=tom_get_tail_concTomTerm_TomList(tomMatch97NameNumber_freshVar_9);{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch97NameNumber_freshVar_4=tom_get_tail_concPatternInstruction_PatternInstructionList(tomMatch97NameNumber_freshVar_1);if ( true ) {

	       TomTerm subject = tom_get_head_concTomTerm_TomList(tomMatch97NameNumber_freshVar_9);
	       if (tom_is_sort_TomTerm(subject)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch95NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);if (tom_is_fun_sym_AntiTerm(tomMatch95NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch95NameNumber_freshVar_0=tom_get_slot_AntiTerm_TomTerm(tomMatch95NameNumberfreshSubject_1);if ( true ) {
 subject = tomMatch95NameNumber_freshVar_0; }}}}}if (tom_is_sort_TomTerm(subject)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch96NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )subject);{ boolean tomMatch96NameNumber_freshVar_5= false ;{  tom.engine.adt.tomname.types.TomNameList  tomMatch96NameNumber_freshVar_0= null ;if (tom_is_fun_sym_TermAppl(tomMatch96NameNumberfreshSubject_1)) {{tomMatch96NameNumber_freshVar_5= true ;tomMatch96NameNumber_freshVar_0=tom_get_slot_TermAppl_NameList(tomMatch96NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_RecordAppl(tomMatch96NameNumberfreshSubject_1)) {{tomMatch96NameNumber_freshVar_5= true ;tomMatch96NameNumber_freshVar_0=tom_get_slot_RecordAppl_NameList(tomMatch96NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_XMLAppl(tomMatch96NameNumberfreshSubject_1)) {{tomMatch96NameNumber_freshVar_5= true ;tomMatch96NameNumber_freshVar_0=tom_get_slot_XMLAppl_NameList(tomMatch96NameNumberfreshSubject_1);}}}}if ((tomMatch96NameNumber_freshVar_5 ==  true )) {if (tom_is_fun_sym_concTomName(tomMatch96NameNumber_freshVar_0)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch96NameNumber_freshVar_1=tomMatch96NameNumber_freshVar_0;if (!(tom_is_empty_concTomName_TomNameList(tomMatch96NameNumber_freshVar_1))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch96NameNumber_freshVar_1))) {{  String  tomMatch96NameNumber_freshVar_4=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch96NameNumber_freshVar_1));{  String  tom_name=tomMatch96NameNumber_freshVar_4;{  tom.engine.adt.tomname.types.TomNameList  tomMatch96NameNumber_freshVar_2=tom_get_tail_concTomName_TomNameList(tomMatch96NameNumber_freshVar_1);if ( true ) {



		   // System.out.println("X.length = " + `X*.length());
		   if(tom_get_slice_concTomTerm(tomMatch97NameNumber_begin_10,tomMatch97NameNumber_end_11,tom_empty_list_concTomTerm()).length() == i) {
		     TomSymbol symbol = null;
		     if(subject.isXMLAppl()) {
		       symbol = getSymbolFromName(Constants.ELEMENT_NODE);
		     } else {
		       symbol = getSymbolFromName(tom_name);
		     }
		     // System.out.println("name = " + `name);
		     if(symbol!=null) {
		       TomType type = TomBase.getSymbolCodomain(symbol);
		       // System.out.println("type = " + type);
		       typeMatchArgs.set(i,type);
		       String typeName = TomBase.getTomType(type);
		       if(!testTypeExistence(typeName)) {
			 messageError(currentTomStructureOrgTrack.getFileName(),
			     currentTomStructureOrgTrack.getLine(),
			     TomMessage.unknownMatchArgumentTypeInSignature,
			     new Object[]{tom_name, typeName});
		       }

		       break block;
		     }
		   }
		 }}}}}}}}}}}}}

	     }}}}}if (tom_is_empty_concTomTerm_TomList(tomMatch97NameNumber_end_11)) {tomMatch97NameNumber_end_11=tomMatch97NameNumber_begin_10;} else {tomMatch97NameNumber_end_11=tom_get_tail_concTomTerm_TomList(tomMatch97NameNumber_end_11);}}} while(!(tom_equal_term_TomList(tomMatch97NameNumber_end_11, tomMatch97NameNumber_begin_10)));}}}}}}}}}}if (tom_is_empty_concPatternInstruction_PatternInstructionList(tomMatch97NameNumber_end_3)) {tomMatch97NameNumber_end_3=tomMatch97NameNumber_begin_2;} else {tomMatch97NameNumber_end_3=tom_get_tail_concPatternInstruction_PatternInstructionList(tomMatch97NameNumber_end_3);}}} while(!(tom_equal_term_PatternInstructionList(tomMatch97NameNumber_end_3, tomMatch97NameNumber_begin_2)));}}}}}}

	 }
       }
       if(typeMatchArgs.get(i) == null) {
	 messageError(currentTomStructureOrgTrack.getFileName(),
	     currentTomStructureOrgTrack.getLine(),
	     TomMessage.cannotGuessMatchType,
	     new Object[]{subjectMatchArgs.get(i)});
       }
    }

    // we now compare pattern to its definition
    if (tom_is_sort_PatternInstructionList(patternInstructionList)) {{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch98NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.PatternInstructionList )patternInstructionList);if (tom_is_fun_sym_concPatternInstruction(tomMatch98NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch98NameNumber_freshVar_0=tomMatch98NameNumberfreshSubject_1;{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch98NameNumber_begin_2=tomMatch98NameNumber_freshVar_0;{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch98NameNumber_end_3=tomMatch98NameNumber_freshVar_0;do {{{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch98NameNumber_freshVar_1=tomMatch98NameNumber_end_3;if (!(tom_is_empty_concPatternInstruction_PatternInstructionList(tomMatch98NameNumber_freshVar_1))) {if (tom_is_fun_sym_PatternInstruction(tom_get_head_concPatternInstruction_PatternInstructionList(tomMatch98NameNumber_freshVar_1))) {{  tom.engine.adt.tomterm.types.Pattern  tomMatch98NameNumber_freshVar_6=tom_get_slot_PatternInstruction_Pattern(tom_get_head_concPatternInstruction_PatternInstructionList(tomMatch98NameNumber_freshVar_1));if (tom_is_fun_sym_Pattern(tomMatch98NameNumber_freshVar_6)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch98NameNumber_freshVar_7=tom_get_slot_Pattern_TomList(tomMatch98NameNumber_freshVar_6);{  tom.engine.adt.tomterm.types.TomList  tomMatch98NameNumber_freshVar_8=tom_get_slot_Pattern_Guards(tomMatch98NameNumber_freshVar_6);{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch98NameNumber_freshVar_4=tom_get_tail_concPatternInstruction_PatternInstructionList(tomMatch98NameNumber_freshVar_1);if ( true ) {

        // control each pattern vs the match definition
        verifyMatchPattern(tomMatch98NameNumber_freshVar_7,typeMatchArgs,nbExpectedArgs);
        verifyWhenPattern(tomMatch98NameNumber_freshVar_8);
      }}}}}}}}}if (tom_is_empty_concPatternInstruction_PatternInstructionList(tomMatch98NameNumber_end_3)) {tomMatch98NameNumber_end_3=tomMatch98NameNumber_begin_2;} else {tomMatch98NameNumber_end_3=tom_get_tail_concPatternInstruction_PatternInstructionList(tomMatch98NameNumber_end_3);}}} while(!(tom_equal_term_PatternInstructionList(tomMatch98NameNumber_end_3, tomMatch98NameNumber_begin_2)));}}}}}}

  }

  // each patternList shall have the expected length and each term shall be
  // valid
  private  void verifyMatchPattern(TomList termList, ArrayList typeMatchArgs, int nbExpectedArgs) {
    int nbFoundArgs = termList.length();
    if(nbFoundArgs != nbExpectedArgs) {
      OptionList og = termList.getHeadconcTomTerm().getOption();
      messageError(findOriginTrackingFileName(og),findOriginTrackingLine(og),
                   TomMessage.badMatchNumberArgument,
                   new Object[]{new Integer(nbExpectedArgs), new Integer(nbFoundArgs)});
      // we cannot continue because we will use the fact that each element of
      // the pattern
      // has the expected type declared in the Match definition
      return ;
    }

    TomType expectedType;
    int counter = 0;
    if (tom_is_sort_TomList(termList)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch99NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomList )termList);if (tom_is_fun_sym_concTomTerm(tomMatch99NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch99NameNumber_freshVar_0=tomMatch99NameNumberfreshSubject_1;{  tom.engine.adt.tomterm.types.TomList  tomMatch99NameNumber_begin_2=tomMatch99NameNumber_freshVar_0;{  tom.engine.adt.tomterm.types.TomList  tomMatch99NameNumber_end_3=tomMatch99NameNumber_freshVar_0;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch99NameNumber_freshVar_1=tomMatch99NameNumber_end_3;if (!(tom_is_empty_concTomTerm_TomList(tomMatch99NameNumber_freshVar_1))) {{  tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_get_head_concTomTerm_TomList(tomMatch99NameNumber_freshVar_1);{  tom.engine.adt.tomterm.types.TomList  tomMatch99NameNumber_freshVar_4=tom_get_tail_concTomTerm_TomList(tomMatch99NameNumber_freshVar_1);if ( true ) {
 // no term can be a Var* nor _*: not
                                      // allowed as top leftmost symbol
        TermDescription termDesc = analyseTerm(tom_term);
        if(termDesc.getTermClass() == UNAMED_VARIABLE_STAR || termDesc.getTermClass() == VARIABLE_STAR) {
          messageError(termDesc.getFileName(),termDesc.getLine(),
                       TomMessage.incorrectVariableStarInMatch,
                       new Object[]{termDesc.getName()});
        } else {    // Analyse the term if expectedType != null
          expectedType = (TomType)typeMatchArgs.get(counter);
          if (expectedType != null) {
            // the type is known and found in the match signature
            validateTerm(tom_term, expectedType, false, true, false);
          }
        }
        counter++;
      }}}}}if (tom_is_empty_concTomTerm_TomList(tomMatch99NameNumber_end_3)) {tomMatch99NameNumber_end_3=tomMatch99NameNumber_begin_2;} else {tomMatch99NameNumber_end_3=tom_get_tail_concTomTerm_TomList(tomMatch99NameNumber_end_3);}}} while(!(tom_equal_term_TomList(tomMatch99NameNumber_end_3, tomMatch99NameNumber_begin_2)));}}}}}}

  }

  // each term shall be valid
  private  void verifyWhenPattern(TomList termList) {
    if (tom_is_sort_TomList(termList)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch100NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomList )termList);if (tom_is_fun_sym_concTomTerm(tomMatch100NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch100NameNumber_freshVar_0=tomMatch100NameNumberfreshSubject_1;{  tom.engine.adt.tomterm.types.TomList  tomMatch100NameNumber_begin_2=tomMatch100NameNumber_freshVar_0;{  tom.engine.adt.tomterm.types.TomList  tomMatch100NameNumber_end_3=tomMatch100NameNumber_freshVar_0;do {{{  tom.engine.adt.tomterm.types.TomList  tomMatch100NameNumber_freshVar_1=tomMatch100NameNumber_end_3;if (!(tom_is_empty_concTomTerm_TomList(tomMatch100NameNumber_freshVar_1))) {{  tom.engine.adt.tomterm.types.TomList  tomMatch100NameNumber_freshVar_4=tom_get_tail_concTomTerm_TomList(tomMatch100NameNumber_freshVar_1);if ( true ) {

        // the type is boolean, no variablestar, toplevel and permissive
        validateTerm(tom_get_head_concTomTerm_TomList(tomMatch100NameNumber_freshVar_1),tom_make_TomTypeAlone("boolean") ,false,true,true);
      }}}}if (tom_is_empty_concTomTerm_TomList(tomMatch100NameNumber_end_3)) {tomMatch100NameNumber_end_3=tomMatch100NameNumber_begin_2;} else {tomMatch100NameNumber_end_3=tom_get_tail_concTomTerm_TomList(tomMatch100NameNumber_end_3);}}} while(!(tom_equal_term_TomList(tomMatch100NameNumber_end_3, tomMatch100NameNumber_begin_2)));}}}}}}

  }

  // ///////////////////////////////
  // STRATEGY VERIFICATION CONCERNS /
  // ///////////////////////////////
  private  void verifyStrategy(TomVisitList visitList){
    while(!visitList.isEmptyconcTomVisit()) {
      TomVisit visit = visitList.getHeadconcTomVisit();
      verifyVisit(visit);
      // next visit
      visitList = visitList.getTailconcTomVisit();
    }
  }

  private  void verifyVisit(TomVisit visit){
    if (tom_is_sort_TomVisit(visit)) {{  tom.engine.adt.tomsignature.types.TomVisit  tomMatch102NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomVisit )visit);if (tom_is_fun_sym_VisitTerm(tomMatch102NameNumberfreshSubject_1)) {{  tom.engine.adt.tomtype.types.TomType  tomMatch102NameNumber_freshVar_0=tom_get_slot_VisitTerm_VNode(tomMatch102NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch102NameNumber_freshVar_1=tom_get_slot_VisitTerm_AstPatternInstructionList(tomMatch102NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tomMatch102NameNumber_freshVar_2=tom_get_slot_VisitTerm_Option(tomMatch102NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.PatternInstructionList  tom_patternInstructionList=tomMatch102NameNumber_freshVar_1;if ( true ) {

        ArrayList typeMatchArgs = new ArrayList();
        typeMatchArgs.add(tomMatch102NameNumber_freshVar_0);
        // we now compare pattern to its definition
        if (tom_is_sort_PatternInstructionList(tom_patternInstructionList)) {{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch101NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.PatternInstructionList )tom_patternInstructionList);if (tom_is_fun_sym_concPatternInstruction(tomMatch101NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch101NameNumber_freshVar_0=tomMatch101NameNumberfreshSubject_1;{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch101NameNumber_begin_2=tomMatch101NameNumber_freshVar_0;{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch101NameNumber_end_3=tomMatch101NameNumber_freshVar_0;do {{{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch101NameNumber_freshVar_1=tomMatch101NameNumber_end_3;if (!(tom_is_empty_concPatternInstruction_PatternInstructionList(tomMatch101NameNumber_freshVar_1))) {if (tom_is_fun_sym_PatternInstruction(tom_get_head_concPatternInstruction_PatternInstructionList(tomMatch101NameNumber_freshVar_1))) {{  tom.engine.adt.tomterm.types.Pattern  tomMatch101NameNumber_freshVar_6=tom_get_slot_PatternInstruction_Pattern(tom_get_head_concPatternInstruction_PatternInstructionList(tomMatch101NameNumber_freshVar_1));if (tom_is_fun_sym_Pattern(tomMatch101NameNumber_freshVar_6)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch101NameNumber_freshVar_7=tom_get_slot_Pattern_TomList(tomMatch101NameNumber_freshVar_6);{  tom.engine.adt.tomterm.types.TomList  tomMatch101NameNumber_freshVar_8=tom_get_slot_Pattern_Guards(tomMatch101NameNumber_freshVar_6);{  tom.engine.adt.tomterm.types.PatternInstructionList  tomMatch101NameNumber_freshVar_4=tom_get_tail_concPatternInstruction_PatternInstructionList(tomMatch101NameNumber_freshVar_1);if ( true ) {

            // control each pattern vs the match definition
            // always 1 expected argument in visit
            verifyMatchPattern(tomMatch101NameNumber_freshVar_7,typeMatchArgs,1);
            verifyWhenPattern(tomMatch101NameNumber_freshVar_8);
          }}}}}}}}}if (tom_is_empty_concPatternInstruction_PatternInstructionList(tomMatch101NameNumber_end_3)) {tomMatch101NameNumber_end_3=tomMatch101NameNumber_begin_2;} else {tomMatch101NameNumber_end_3=tom_get_tail_concPatternInstruction_PatternInstructionList(tomMatch101NameNumber_end_3);}}} while(!(tom_equal_term_PatternInstructionList(tomMatch101NameNumber_end_3, tomMatch101NameNumber_begin_2)));}}}}}}

      }}}}}}}}

  }

  private static boolean findMakeDecl(OptionList option) {
    if (tom_is_sort_OptionList(option)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch103NameNumberfreshSubject_1=(( tom.engine.adt.tomoption.types.OptionList )option);if (tom_is_fun_sym_concOption(tomMatch103NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch103NameNumber_freshVar_0=tomMatch103NameNumberfreshSubject_1;{  tom.engine.adt.tomoption.types.OptionList  tomMatch103NameNumber_begin_2=tomMatch103NameNumber_freshVar_0;{  tom.engine.adt.tomoption.types.OptionList  tomMatch103NameNumber_end_3=tomMatch103NameNumber_freshVar_0;do {{{  tom.engine.adt.tomoption.types.OptionList  tomMatch103NameNumber_freshVar_1=tomMatch103NameNumber_end_3;if (!(tom_is_empty_concOption_OptionList(tomMatch103NameNumber_freshVar_1))) {if (tom_is_fun_sym_DeclarationToOption(tom_get_head_concOption_OptionList(tomMatch103NameNumber_freshVar_1))) {{  tom.engine.adt.tomdeclaration.types.Declaration  tomMatch103NameNumber_freshVar_6=tom_get_slot_DeclarationToOption_AstDeclaration(tom_get_head_concOption_OptionList(tomMatch103NameNumber_freshVar_1));if (tom_is_fun_sym_MakeDecl(tomMatch103NameNumber_freshVar_6)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch103NameNumber_freshVar_4=tom_get_tail_concOption_OptionList(tomMatch103NameNumber_freshVar_1);if ( true ) {

        return true;
      }}}}}}}if (tom_is_empty_concOption_OptionList(tomMatch103NameNumber_end_3)) {tomMatch103NameNumber_end_3=tomMatch103NameNumber_begin_2;} else {tomMatch103NameNumber_end_3=tom_get_tail_concOption_OptionList(tomMatch103NameNumber_end_3);}}} while(!(tom_equal_term_OptionList(tomMatch103NameNumber_end_3, tomMatch103NameNumber_begin_2)));}}}}}}

    return false;
  }


  /**
   * Analyse a term given an expected type and re-enter recursively on children
   */
  public  TermDescription validateTerm(TomTerm term, TomType expectedType, boolean listSymbol, boolean topLevel, boolean permissive) {
    String termName = "emptyName";
    TomType type = null;
    int termClass=-1;
    String fileName = "unknown";
    int decLine=-1;
    Option orgTrack;
    matchblock:{
      if (tom_is_sort_TomTerm(term)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch105NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )term);if (tom_is_fun_sym_TermAppl(tomMatch105NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch105NameNumber_freshVar_0=tom_get_slot_TermAppl_Option(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomNameList  tomMatch105NameNumber_freshVar_1=tom_get_slot_TermAppl_NameList(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomList  tomMatch105NameNumber_freshVar_2=tom_get_slot_TermAppl_Args(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch105NameNumber_freshVar_0;if (tom_is_fun_sym_concTomName(tomMatch105NameNumber_freshVar_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch105NameNumber_freshVar_3=tomMatch105NameNumber_freshVar_1;if (!(tom_is_empty_concTomName_TomNameList(tomMatch105NameNumber_freshVar_3))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch105NameNumber_freshVar_3))) {{  String  tomMatch105NameNumber_freshVar_5=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch105NameNumber_freshVar_3));if (tom_equal_term_String("", tomMatch105NameNumber_freshVar_5)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch105NameNumber_freshVar_4=tom_get_tail_concTomName_TomNameList(tomMatch105NameNumber_freshVar_3);if (tom_is_empty_concTomName_TomNameList(tomMatch105NameNumber_freshVar_4)) {if ( true ) {

          fileName = findOriginTrackingFileName(tom_options);
          decLine = findOriginTrackingLine(tom_options);
          termClass = UNAMED_APPL;
            // there shall be only one list symbol with expectedType as Codomain
            // else ensureValidUnamedList returns null
          TomSymbol symbol = ensureValidUnamedList(expectedType, fileName,decLine);
          if(symbol == null) {
            break matchblock;
          } else {
            // there is only one list symbol and its type is the expected one
            // (ensure by ensureValidUnamedList call)
            type = expectedType;
            termName = symbol.getAstName().getString();
              // whatever the arity is, we continue recursively and there is
              // only one element in the Domain
            validateListOperatorArgs(tomMatch105NameNumber_freshVar_2, symbol.getTypesToType().getDomain().getHeadconcTomType(),
                symbol.getTypesToType().getCodomain(),permissive);
            if(permissive) { System.out.println("UnamedList but permissive");}
            break matchblock;
          }
        }}}}}}}}}}}}}}if (tom_is_fun_sym_TermAppl(tomMatch105NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch105NameNumber_freshVar_6=tom_get_slot_TermAppl_Option(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomNameList  tomMatch105NameNumber_freshVar_7=tom_get_slot_TermAppl_NameList(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomList  tomMatch105NameNumber_freshVar_8=tom_get_slot_TermAppl_Args(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch105NameNumber_freshVar_6;{  tom.engine.adt.tomname.types.TomNameList  tom_symbolNameList=tomMatch105NameNumber_freshVar_7;if ( true ) {


          TomList args = tomMatch105NameNumber_freshVar_8;
          fileName = findOriginTrackingFileName(tom_options);
          decLine = findOriginTrackingLine(tom_options);
          termClass = TERM_APPL;

          TomSymbol symbol = ensureValidApplDisjunction(tom_symbolNameList, expectedType, fileName, decLine, permissive, topLevel);

          if(symbol == null) {
            validateTermThrough(term,permissive);
            break matchblock;
          }
            // Type is OK
          type = expectedType;
          TomName headName = tom_symbolNameList.getHeadconcTomName();
          if (headName instanceof AntiName){
            headName = ((AntiName)headName).getName();
          }
          termName = headName.getString();
          boolean listOp = (TomBase.isListOperator(symbol) || TomBase.isArrayOperator(symbol));
          if(listOp) {
              // whatever the arity is, we continue recursively and there is
              // only one element in the Domain
              // - we can also have children that are sublists
            validateListOperatorArgs(args, symbol.getTypesToType().getDomain().getHeadconcTomType(),
                symbol.getTypesToType().getCodomain(),permissive);
          } else {
            // the arity is important also there are different types in Domain
            TomTypeList types = symbol.getTypesToType().getDomain();
            int nbArgs = args.length();
            int nbExpectedArgs = types.length();
            if(nbArgs != nbExpectedArgs) {
              messageError(fileName,decLine, TomMessage.symbolNumberArgument,
                  new Object[]{termName, new Integer(nbExpectedArgs), new Integer(nbArgs)});
              break matchblock;
            }
            while(!args.isEmptyconcTomTerm()) {
                // repeat analyse with associated expected type and control
                // arity
              validateTerm(args.getHeadconcTomTerm(), types.getHeadconcTomType(), listOp/* false */, false, permissive);
              args = args.getTailconcTomTerm();
              types = types.getTailconcTomType();
            }
          }
          break matchblock;
        }}}}}}}{  tom.engine.adt.tomterm.types.TomTerm  tomMatch105NameNumber_freshVar_9=tomMatch105NameNumberfreshSubject_1;if (tom_is_fun_sym_RecordAppl(tomMatch105NameNumber_freshVar_9)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch105NameNumber_freshVar_10=tom_get_slot_RecordAppl_Option(tomMatch105NameNumber_freshVar_9);{  tom.engine.adt.tomname.types.TomNameList  tomMatch105NameNumber_freshVar_11=tom_get_slot_RecordAppl_NameList(tomMatch105NameNumber_freshVar_9);{  tom.engine.adt.tomslot.types.SlotList  tomMatch105NameNumber_freshVar_12=tom_get_slot_RecordAppl_Slots(tomMatch105NameNumber_freshVar_9);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch105NameNumber_freshVar_10;{  tom.engine.adt.tomname.types.TomNameList  tom_symbolNameList=tomMatch105NameNumber_freshVar_11;{  tom.engine.adt.tomslot.types.SlotList  tom_slotList=tomMatch105NameNumber_freshVar_12;if ( true ) {


          if(permissive) {
            // Record are not allowed in a rhs
            messageError(findOriginTrackingFileName(tom_options),findOriginTrackingLine(tom_options), TomMessage.incorrectRuleRHSClass, new Object[]{getName(tomMatch105NameNumber_freshVar_9)+"[...]"});
          }
          fileName = findOriginTrackingFileName(tom_options);
          decLine = findOriginTrackingLine(tom_options);
          termClass = RECORD_APPL;
          TomSymbol symbol = ensureValidRecordDisjunction(tom_symbolNameList, tom_slotList, expectedType, fileName, decLine, true);
          if(symbol == null) {
            break matchblock;
          }

          if (tom_is_sort_TomNameList(tom_symbolNameList)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch104NameNumberfreshSubject_1=(( tom.engine.adt.tomname.types.TomNameList )tom_symbolNameList);if (tom_is_fun_sym_concTomName(tomMatch104NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch104NameNumber_freshVar_0=tomMatch104NameNumberfreshSubject_1;{  tom.engine.adt.tomname.types.TomNameList  tomMatch104NameNumber_begin_2=tomMatch104NameNumber_freshVar_0;{  tom.engine.adt.tomname.types.TomNameList  tomMatch104NameNumber_end_3=tomMatch104NameNumber_freshVar_0;do {{{  tom.engine.adt.tomname.types.TomNameList  tomMatch104NameNumber_freshVar_1=tomMatch104NameNumber_end_3;if (!(tom_is_empty_concTomName_TomNameList(tomMatch104NameNumber_freshVar_1))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch104NameNumber_freshVar_1))) {{  String  tomMatch104NameNumber_freshVar_6=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch104NameNumber_freshVar_1));{  tom.engine.adt.tomname.types.TomNameList  tomMatch104NameNumber_freshVar_4=tom_get_tail_concTomName_TomNameList(tomMatch104NameNumber_freshVar_1);if ( true ) {





              verifyRecordStructure(tom_options, tomMatch104NameNumber_freshVar_6, tom_slotList, fileName,decLine);
            }}}}}}if (tom_is_empty_concTomName_TomNameList(tomMatch104NameNumber_end_3)) {tomMatch104NameNumber_end_3=tomMatch104NameNumber_begin_2;} else {tomMatch104NameNumber_end_3=tom_get_tail_concTomName_TomNameList(tomMatch104NameNumber_end_3);}}} while(!(tom_equal_term_TomNameList(tomMatch104NameNumber_end_3, tomMatch104NameNumber_begin_2)));}}}}}}


          type = expectedType;
          TomName headName = tom_symbolNameList.getHeadconcTomName();
          if (headName 
        		  	instanceof AntiName){
        	  headName = ((AntiName)headName).getName();
          }
          termName = headName.getString();
          break matchblock;
        }}}}}}}}}if (tom_is_fun_sym_XMLAppl(tomMatch105NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch105NameNumber_freshVar_13=tom_get_slot_XMLAppl_Option(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomNameList  tomMatch105NameNumber_freshVar_14=tom_get_slot_XMLAppl_NameList(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomterm.types.TomList  tomMatch105NameNumber_freshVar_15=tom_get_slot_XMLAppl_ChildList(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch105NameNumber_freshVar_13;if (tom_is_fun_sym_concTomName(tomMatch105NameNumber_freshVar_14)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch105NameNumber_freshVar_16=tomMatch105NameNumber_freshVar_14;{  tom.engine.adt.tomname.types.TomNameList  tomMatch105NameNumber_begin_18=tomMatch105NameNumber_freshVar_16;{  tom.engine.adt.tomname.types.TomNameList  tomMatch105NameNumber_end_19=tomMatch105NameNumber_freshVar_16;do {{{  tom.engine.adt.tomname.types.TomNameList  tomMatch105NameNumber_freshVar_17=tomMatch105NameNumber_end_19;if (!(tom_is_empty_concTomName_TomNameList(tomMatch105NameNumber_freshVar_17))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch105NameNumber_freshVar_17))) {{  String  tomMatch105NameNumber_freshVar_22=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch105NameNumber_freshVar_17));{  tom.engine.adt.tomname.types.TomNameList  tomMatch105NameNumber_freshVar_20=tom_get_tail_concTomName_TomNameList(tomMatch105NameNumber_freshVar_17);if ( true ) {


            // TODO: can we do it
            // ensureValidDisjunction(symbolNameList); ??????????
          termClass = XML_APPL;
          fileName = findOriginTrackingFileName(tom_options);
          decLine = findOriginTrackingLine(tom_options);
          type = TomBase.getSymbolCodomain(getSymbolFromName(Constants.ELEMENT_NODE));
          termName = Constants.ELEMENT_NODE;

          TomList args = tomMatch105NameNumber_freshVar_15;
          /*
           * we cannot use the following expression TomType TNodeType =
           * symbolTable().getType(Constants.TNODE); because TNodeType should be
           * a TomTypeAlone and not an expanded type
           */
          TomType TNodeType = TomBase.getSymbolCodomain(symbolTable().getSymbolFromName(Constants.ELEMENT_NODE));
          // System.out.println("TNodeType = " + TNodeType);
          while(!args.isEmptyconcTomTerm()) {
            // repeat analyse with associated expected type and control arity
            validateTerm(args.getHeadconcTomTerm(), TNodeType, true, false, permissive);
            args = args.getTailconcTomTerm();
          }

          break matchblock;
        }}}}}}if (tom_is_empty_concTomName_TomNameList(tomMatch105NameNumber_end_19)) {tomMatch105NameNumber_end_19=tomMatch105NameNumber_begin_18;} else {tomMatch105NameNumber_end_19=tom_get_tail_concTomName_TomNameList(tomMatch105NameNumber_end_19);}}} while(!(tom_equal_term_TomNameList(tomMatch105NameNumber_end_19, tomMatch105NameNumber_begin_18)));}}}}}}}}}if (tom_is_fun_sym_Variable(tomMatch105NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch105NameNumber_freshVar_23=tom_get_slot_Variable_Option(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomName  tomMatch105NameNumber_freshVar_24=tom_get_slot_Variable_AstName(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch105NameNumber_freshVar_23;if (tom_is_fun_sym_Name(tomMatch105NameNumber_freshVar_24)) {{  String  tomMatch105NameNumber_freshVar_25=tom_get_slot_Name_String(tomMatch105NameNumber_freshVar_24);if ( true ) {


          termClass = VARIABLE;
          fileName = findOriginTrackingFileName(tom_options);
          decLine = findOriginTrackingLine(tom_options);
          type = null;
          termName = tomMatch105NameNumber_freshVar_25;
          break matchblock;
        }}}}}}}if (tom_is_fun_sym_VariableStar(tomMatch105NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch105NameNumber_freshVar_26=tom_get_slot_VariableStar_Option(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomName  tomMatch105NameNumber_freshVar_27=tom_get_slot_VariableStar_AstName(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch105NameNumber_freshVar_26;if (tom_is_fun_sym_Name(tomMatch105NameNumber_freshVar_27)) {{  String  tomMatch105NameNumber_freshVar_28=tom_get_slot_Name_String(tomMatch105NameNumber_freshVar_27);if ( true ) {


          termClass = VARIABLE_STAR;
          fileName = findOriginTrackingFileName(tom_options);
          decLine = findOriginTrackingLine(tom_options);
          type = null;
          termName = tomMatch105NameNumber_freshVar_28+"*";
          if(!listSymbol) {
            messageError(fileName,decLine, TomMessage.invalidVariableStarArgument, new Object[]{termName});
          }
          break matchblock;
        }}}}}}}if (tom_is_fun_sym_UnamedVariable(tomMatch105NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch105NameNumber_freshVar_29=tom_get_slot_UnamedVariable_Option(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch105NameNumber_freshVar_29;if ( true ) {


          termClass = UNAMED_VARIABLE;
          fileName = findOriginTrackingFileName(tom_options);
          decLine = findOriginTrackingLine(tom_options);
          type = null;
          termName = "_";
          if(permissive) {
            messageError(fileName,decLine, TomMessage.incorrectRuleRHSClass, new Object[]{termName});
          }
          break matchblock;
        }}}}if (tom_is_fun_sym_UnamedVariableStar(tomMatch105NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch105NameNumber_freshVar_30=tom_get_slot_UnamedVariableStar_Option(tomMatch105NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch105NameNumber_freshVar_30;if ( true ) {


          termClass = UNAMED_VARIABLE_STAR;
          fileName = findOriginTrackingFileName(tom_options);
          decLine = findOriginTrackingLine(tom_options);
          type = null;
          termName = "_*";
          if(!listSymbol) {
            messageError(fileName,decLine, TomMessage.invalidVariableStarArgument, new Object[]{termName});
          }
          if(permissive) {
            messageError(fileName,decLine, TomMessage.incorrectRuleRHSClass, new Object[]{termName});
          }
          break matchblock;
        }}}}}}

      throw new TomRuntimeException("Strange Term "+term);
    }
    return new TermDescription(termClass, termName, fileName,decLine, type);
  }

  private  void validateTermThrough(TomTerm term, boolean permissive) {
    if (tom_is_sort_TomTerm(term)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch106NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )term);if (tom_is_fun_sym_TermAppl(tomMatch106NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomList  tomMatch106NameNumber_freshVar_0=tom_get_slot_TermAppl_Args(tomMatch106NameNumberfreshSubject_1);if ( true ) {

        TomList args = tomMatch106NameNumber_freshVar_0;
        while(!args.isEmptyconcTomTerm()) {
          TomTerm child = args.getHeadconcTomTerm();
          TomSymbol sym = getSymbolFromName(getName(child));
          if(sym != null) {
            validateTerm(child,sym.getTypesToType().getCodomain(),false,false,permissive);
          } else {
            validateTermThrough(child,permissive);
          }
          args = args.getTailconcTomTerm();
        }
      }}}}}

  }

  public TermDescription analyseTerm(TomTerm term) {
    matchblock:{
      if (tom_is_sort_TomTerm(term)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch107NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )term);if (tom_is_fun_sym_TermAppl(tomMatch107NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch107NameNumber_freshVar_0=tom_get_slot_TermAppl_Option(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_1=tom_get_slot_TermAppl_NameList(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch107NameNumber_freshVar_0;if (tom_is_fun_sym_concTomName(tomMatch107NameNumber_freshVar_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_2=tomMatch107NameNumber_freshVar_1;if (!(tom_is_empty_concTomName_TomNameList(tomMatch107NameNumber_freshVar_2))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch107NameNumber_freshVar_2))) {{  String  tomMatch107NameNumber_freshVar_4=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch107NameNumber_freshVar_2));{  String  tom_str=tomMatch107NameNumber_freshVar_4;{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_3=tom_get_tail_concTomName_TomNameList(tomMatch107NameNumber_freshVar_2);if (tom_is_empty_concTomName_TomNameList(tomMatch107NameNumber_freshVar_3)) {if ( true ) {

          if (tom_str.equals("")) {
            return new TermDescription(UNAMED_APPL, tom_str,
                findOriginTrackingFileName(tom_options),
                findOriginTrackingLine(tom_options), 
                null);
              // TODO
          } else {
            return new TermDescription(TERM_APPL, tom_str,
                findOriginTrackingFileName(tom_options),
                findOriginTrackingLine(tom_options),
                TomBase.getSymbolCodomain(getSymbolFromName(tom_str)));
          }
        }}}}}}}}}}}}}if (tom_is_fun_sym_TermAppl(tomMatch107NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch107NameNumber_freshVar_5=tom_get_slot_TermAppl_Option(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_6=tom_get_slot_TermAppl_NameList(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch107NameNumber_freshVar_5;if (tom_is_fun_sym_concTomName(tomMatch107NameNumber_freshVar_6)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_7=tomMatch107NameNumber_freshVar_6;if (!(tom_is_empty_concTomName_TomNameList(tomMatch107NameNumber_freshVar_7))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch107NameNumber_freshVar_7))) {{  String  tomMatch107NameNumber_freshVar_10=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch107NameNumber_freshVar_7));{  String  tom_name=tomMatch107NameNumber_freshVar_10;{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_8=tom_get_tail_concTomName_TomNameList(tomMatch107NameNumber_freshVar_7);if ( true ) {

          return new TermDescription(APPL_DISJUNCTION, tom_name,
                findOriginTrackingFileName(tom_options),
              findOriginTrackingLine(tom_options),
              TomBase.getSymbolCodomain(getSymbolFromName(tom_name)));
        }}}}}}}}}}}}if (tom_is_fun_sym_RecordAppl(tomMatch107NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch107NameNumber_freshVar_11=tom_get_slot_RecordAppl_Option(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_12=tom_get_slot_RecordAppl_NameList(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch107NameNumber_freshVar_11;if (tom_is_fun_sym_concTomName(tomMatch107NameNumber_freshVar_12)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_13=tomMatch107NameNumber_freshVar_12;if (!(tom_is_empty_concTomName_TomNameList(tomMatch107NameNumber_freshVar_13))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch107NameNumber_freshVar_13))) {{  String  tomMatch107NameNumber_freshVar_15=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch107NameNumber_freshVar_13));{  String  tom_name=tomMatch107NameNumber_freshVar_15;{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_14=tom_get_tail_concTomName_TomNameList(tomMatch107NameNumber_freshVar_13);if (tom_is_empty_concTomName_TomNameList(tomMatch107NameNumber_freshVar_14)) {if ( true ) {

          return new TermDescription(RECORD_APPL, tom_name,
                findOriginTrackingFileName(tom_options),
              findOriginTrackingLine(tom_options),
              TomBase.getSymbolCodomain(getSymbolFromName(tom_name)));
        }}}}}}}}}}}}}if (tom_is_fun_sym_RecordAppl(tomMatch107NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch107NameNumber_freshVar_16=tom_get_slot_RecordAppl_Option(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_17=tom_get_slot_RecordAppl_NameList(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch107NameNumber_freshVar_16;if (tom_is_fun_sym_concTomName(tomMatch107NameNumber_freshVar_17)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_18=tomMatch107NameNumber_freshVar_17;if (!(tom_is_empty_concTomName_TomNameList(tomMatch107NameNumber_freshVar_18))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch107NameNumber_freshVar_18))) {{  String  tomMatch107NameNumber_freshVar_21=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch107NameNumber_freshVar_18));{  String  tom_name=tomMatch107NameNumber_freshVar_21;{  tom.engine.adt.tomname.types.TomNameList  tomMatch107NameNumber_freshVar_19=tom_get_tail_concTomName_TomNameList(tomMatch107NameNumber_freshVar_18);if ( true ) {

          return new TermDescription(RECORD_APPL_DISJUNCTION,tom_name,
                findOriginTrackingFileName(tom_options),
              findOriginTrackingLine(tom_options),
              TomBase.getSymbolCodomain(getSymbolFromName(tom_name)));
        }}}}}}}}}}}}if (tom_is_fun_sym_XMLAppl(tomMatch107NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch107NameNumber_freshVar_22=tom_get_slot_XMLAppl_Option(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch107NameNumber_freshVar_22;if ( true ) {

          return new TermDescription(XML_APPL, Constants.ELEMENT_NODE,
                findOriginTrackingFileName(tom_options),
              findOriginTrackingLine(tom_options),
              TomBase.getSymbolCodomain(getSymbolFromName(Constants.ELEMENT_NODE)));
        }}}}if (tom_is_fun_sym_Variable(tomMatch107NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch107NameNumber_freshVar_23=tom_get_slot_Variable_Option(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomName  tomMatch107NameNumber_freshVar_24=tom_get_slot_Variable_AstName(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch107NameNumber_freshVar_23;if (tom_is_fun_sym_Name(tomMatch107NameNumber_freshVar_24)) {{  String  tomMatch107NameNumber_freshVar_25=tom_get_slot_Name_String(tomMatch107NameNumber_freshVar_24);if ( true ) {

          return new TermDescription(VARIABLE, tomMatch107NameNumber_freshVar_25,
                findOriginTrackingFileName(tom_options),
              findOriginTrackingLine(tom_options),  null);
        }}}}}}}if (tom_is_fun_sym_VariableStar(tomMatch107NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch107NameNumber_freshVar_26=tom_get_slot_VariableStar_Option(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomName  tomMatch107NameNumber_freshVar_27=tom_get_slot_VariableStar_AstName(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch107NameNumber_freshVar_26;if (tom_is_fun_sym_Name(tomMatch107NameNumber_freshVar_27)) {{  String  tomMatch107NameNumber_freshVar_28=tom_get_slot_Name_String(tomMatch107NameNumber_freshVar_27);if ( true ) {

          return new TermDescription(VARIABLE_STAR, tomMatch107NameNumber_freshVar_28+"*",
                findOriginTrackingFileName(tom_options),
              findOriginTrackingLine(tom_options),  null);
        }}}}}}}if (tom_is_fun_sym_UnamedVariable(tomMatch107NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch107NameNumber_freshVar_29=tom_get_slot_UnamedVariable_Option(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch107NameNumber_freshVar_29;if ( true ) {

          return new TermDescription(UNAMED_VARIABLE, "_",
                findOriginTrackingFileName(tom_options),
              findOriginTrackingLine(tom_options),  null);
        }}}}if (tom_is_fun_sym_UnamedVariableStar(tomMatch107NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch107NameNumber_freshVar_30=tom_get_slot_UnamedVariableStar_Option(tomMatch107NameNumberfreshSubject_1);{  tom.engine.adt.tomoption.types.OptionList  tom_options=tomMatch107NameNumber_freshVar_30;if ( true ) {

          return new TermDescription(UNAMED_VARIABLE_STAR, "_*",
                findOriginTrackingFileName(tom_options),
              findOriginTrackingLine(tom_options),  null);
        }}}}}}

      throw new TomRuntimeException("Strange Term "+term);
    }
  }

  private  TomSymbol ensureValidUnamedList(TomType expectedType, String fileName,int decLine) {
    TomSymbolList symbolList = symbolTable().getSymbolFromType(expectedType);
    TomSymbolList filteredList = tom_empty_list_concTomSymbol();
    if (tom_is_sort_TomSymbolList(symbolList)) {{  tom.engine.adt.tomsignature.types.TomSymbolList  tomMatch108NameNumberfreshSubject_1=(( tom.engine.adt.tomsignature.types.TomSymbolList )symbolList);if (tom_is_fun_sym_concTomSymbol(tomMatch108NameNumberfreshSubject_1)) {{  tom.engine.adt.tomsignature.types.TomSymbolList  tomMatch108NameNumber_freshVar_0=tomMatch108NameNumberfreshSubject_1;{  tom.engine.adt.tomsignature.types.TomSymbolList  tomMatch108NameNumber_begin_2=tomMatch108NameNumber_freshVar_0;{  tom.engine.adt.tomsignature.types.TomSymbolList  tomMatch108NameNumber_end_3=tomMatch108NameNumber_freshVar_0;do {{{  tom.engine.adt.tomsignature.types.TomSymbolList  tomMatch108NameNumber_freshVar_1=tomMatch108NameNumber_end_3;if (!(tom_is_empty_concTomSymbol_TomSymbolList(tomMatch108NameNumber_freshVar_1))) {{  tom.engine.adt.tomsignature.types.TomSymbol  tom_symbol=tom_get_head_concTomSymbol_TomSymbolList(tomMatch108NameNumber_freshVar_1);{  tom.engine.adt.tomsignature.types.TomSymbolList  tomMatch108NameNumber_freshVar_4=tom_get_tail_concTomSymbol_TomSymbolList(tomMatch108NameNumber_freshVar_1);if ( true ) {

        if(TomBase.isArrayOperator(tom_symbol) || TomBase.isListOperator(tom_symbol)) {
          filteredList = tom_cons_list_concTomSymbol(tom_symbol,tom_append_list_concTomSymbol(filteredList,tom_empty_list_concTomSymbol()));
        }
      }}}}}if (tom_is_empty_concTomSymbol_TomSymbolList(tomMatch108NameNumber_end_3)) {tomMatch108NameNumber_end_3=tomMatch108NameNumber_begin_2;} else {tomMatch108NameNumber_end_3=tom_get_tail_concTomSymbol_TomSymbolList(tomMatch108NameNumber_end_3);}}} while(!(tom_equal_term_TomSymbolList(tomMatch108NameNumber_end_3, tomMatch108NameNumber_begin_2)));}}}}}}


    if(filteredList.isEmptyconcTomSymbol()) {
      messageError(fileName,decLine,
                   TomMessage.unknownUnamedList,
                   new Object[]{expectedType.getString()});
      return null;
    } else if(!filteredList.getTailconcTomSymbol().isEmptyconcTomSymbol()) {
      StringBuffer symbolsString = new StringBuffer();
      while(!filteredList.isEmptyconcTomSymbol()) {
        symbolsString .append(" " + filteredList.getHeadconcTomSymbol().getAstName().getString());
        filteredList= filteredList.getTailconcTomSymbol();
      }
      messageError(fileName,decLine,
                   TomMessage.ambigousUnamedList,
                   new Object[]{expectedType.getString(), symbolsString.toString()});
      return null;
    } else {
      return filteredList.getHeadconcTomSymbol();
    }
  }

  private TomSymbol ensureValidApplDisjunction(TomNameList symbolNameList, TomType expectedType, 
      String fileName, int decLine, boolean permissive, boolean topLevel) {

    if(symbolNameList.length()==1) { // Valid but has it a good type?
      String res = symbolNameList.getHeadconcTomName().getString();
      TomSymbol symbol = getSymbolFromName(res);
      if (symbol == null ) {
        // this correspond to a term like 'unknown()' or unknown(s1, s2, ...)
        if(!permissive) {
          messageError(fileName,decLine, TomMessage.unknownSymbol, new Object[]{res});
        } else {
          messageWarning(fileName,decLine, TomMessage.unknownPermissiveSymbol, new Object[]{res});
        }
      } else { // known symbol
        if ( strictType  || !topLevel ) {
          if (!ensureSymbolCodomain(TomBase.getSymbolCodomain(symbol), expectedType, TomMessage.invalidCodomain, res, fileName,decLine)) {
            return null;
          }
        }
      }
      return symbol;
    } else {
      // this is a disjunction
      if(permissive) {
	messageError(fileName,decLine, TomMessage.impossiblePermissiveAndDisjunction, new Object[]{});
      }

      TomSymbol symbol = null;
      TomTypeList domainReference = null;
      PairNameDeclList slotReference = null;
      String nameReference = null;
      if (tom_is_sort_TomNameList(symbolNameList)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch109NameNumberfreshSubject_1=(( tom.engine.adt.tomname.types.TomNameList )symbolNameList);if (tom_is_fun_sym_concTomName(tomMatch109NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch109NameNumber_freshVar_0=tomMatch109NameNumberfreshSubject_1;{  tom.engine.adt.tomname.types.TomNameList  tomMatch109NameNumber_begin_2=tomMatch109NameNumber_freshVar_0;{  tom.engine.adt.tomname.types.TomNameList  tomMatch109NameNumber_end_3=tomMatch109NameNumber_freshVar_0;do {{{  tom.engine.adt.tomname.types.TomNameList  tomMatch109NameNumber_freshVar_1=tomMatch109NameNumber_end_3;if (!(tom_is_empty_concTomName_TomNameList(tomMatch109NameNumber_freshVar_1))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch109NameNumber_freshVar_1))) {{  String  tomMatch109NameNumber_freshVar_6=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch109NameNumber_freshVar_1));{  String  tom_dijName=tomMatch109NameNumber_freshVar_6;{  tom.engine.adt.tomname.types.TomNameList  tomMatch109NameNumber_freshVar_4=tom_get_tail_concTomName_TomNameList(tomMatch109NameNumber_freshVar_1);if ( true ) {
 // for each SymbolName
	  symbol =  getSymbolFromName(tom_dijName);
	  if (symbol == null) {
	    // In disjunction we can only have known symbols
	    messageError(fileName,decLine, TomMessage.unknownSymbolInDisjunction, new Object[]{(tom_dijName)});
	    return null;
	  }
	  if ( strictType  || !topLevel ) {
	    // ensure codomain is correct
	    if (!ensureSymbolCodomain(TomBase.getSymbolCodomain(symbol), expectedType, TomMessage.invalidDisjunctionCodomain, tom_dijName, fileName,decLine)) {
	      return null;
	    }
	  }

	  if (domainReference == null) { // save Domain reference
	    domainReference = TomBase.getSymbolDomain(symbol);
	    slotReference = symbol.getPairNameDeclList();
	    nameReference = tom_dijName;
	  } else {
	    if(TomBase.getSymbolDomain(symbol) != domainReference) {
	      messageError(fileName,decLine, TomMessage.invalidDisjunctionDomain, new Object[]{nameReference, (tom_dijName) });
	      return null;
	    }
	    if(symbol.getPairNameDeclList() != slotReference) {
	      PairNameDeclList l1 = slotReference;
	      PairNameDeclList l2 = symbol.getPairNameDeclList();
	      while(!l1.isEmptyconcPairNameDecl()) {
		if(l1.getHeadconcPairNameDecl().getSlotName() != l2.getHeadconcPairNameDecl().getSlotName()) {
		  messageError(fileName,decLine, TomMessage.invalidDisjunctionDomain, new Object[]{nameReference, (tom_dijName) });
		  return null;
		}
		l1=l1.getTailconcPairNameDecl();
		l2=l2.getTailconcPairNameDecl();
	      }
	    }
	  }
	}}}}}}}if (tom_is_empty_concTomName_TomNameList(tomMatch109NameNumber_end_3)) {tomMatch109NameNumber_end_3=tomMatch109NameNumber_begin_2;} else {tomMatch109NameNumber_end_3=tom_get_tail_concTomName_TomNameList(tomMatch109NameNumber_end_3);}}} while(!(tom_equal_term_TomNameList(tomMatch109NameNumber_end_3, tomMatch109NameNumber_begin_2)));}}}}}}

      return symbol;
    }
  }

  private  boolean ensureSymbolCodomain(TomType currentCodomain, TomType expectedType, TomMessage msg, String symbolName, String fileName,int decLine) {
    if(currentCodomain != expectedType) {
      // System.out.println(currentCodomain+"!="+expectedType);
      messageError(fileName,decLine,
                   msg,
                   new Object[]{symbolName, currentCodomain.getString(), expectedType.getString()});
      return false;
    }
    return true;
  }

  private  TomSymbol ensureValidRecordDisjunction(TomNameList symbolNameList, SlotList slotList, 
      TomType expectedType, String fileName, int decLine, boolean topLevel) {
    if(symbolNameList.length()==1) { // Valid but has it a good type?
      String res = symbolNameList.getHeadconcTomName().getString();
      TomSymbol symbol =  getSymbolFromName(res);
      if (symbol == null ) { // this correspond to: unknown[]
          // it is not correct to use Record with unknown symbols
        messageError(fileName,decLine, TomMessage.unknownSymbol, new Object[]{res});
        return null;
      } else { // known symbol
          // ensure type correctness if necessary
        if ( strictType  || !topLevel ) {
          if (!ensureSymbolCodomain(TomBase.getSymbolCodomain(symbol), expectedType, TomMessage.invalidCodomain, res, fileName,decLine)) {
            return null;
          }
        }
      }
      return symbol;
    } else {
      TomSymbol symbol = null;
      TomSymbol referenceSymbol = null;
      TomTypeList referenceDomain = null;
      String referenceName = null;
      if (tom_is_sort_TomNameList(symbolNameList)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch110NameNumberfreshSubject_1=(( tom.engine.adt.tomname.types.TomNameList )symbolNameList);if (tom_is_fun_sym_concTomName(tomMatch110NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch110NameNumber_freshVar_0=tomMatch110NameNumberfreshSubject_1;{  tom.engine.adt.tomname.types.TomNameList  tomMatch110NameNumber_begin_2=tomMatch110NameNumber_freshVar_0;{  tom.engine.adt.tomname.types.TomNameList  tomMatch110NameNumber_end_3=tomMatch110NameNumber_freshVar_0;do {{{  tom.engine.adt.tomname.types.TomNameList  tomMatch110NameNumber_freshVar_1=tomMatch110NameNumber_end_3;if (!(tom_is_empty_concTomName_TomNameList(tomMatch110NameNumber_freshVar_1))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch110NameNumber_freshVar_1))) {{  String  tomMatch110NameNumber_freshVar_6=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch110NameNumber_freshVar_1));{  String  tom_dijName=tomMatch110NameNumber_freshVar_6;{  tom.engine.adt.tomname.types.TomNameList  tomMatch110NameNumber_freshVar_4=tom_get_tail_concTomName_TomNameList(tomMatch110NameNumber_freshVar_1);if ( true ) {
 // for each SymbolName
          symbol =  getSymbolFromName(tom_dijName);
          if (symbol == null) {
            // In disjunction we can only have known symbols
            messageError(fileName,decLine, TomMessage.unknownSymbolInDisjunction, new Object[]{(tom_dijName)});
            return null;
          }
          if ( strictType  || !topLevel ) {
            // ensure codomain is correct
            if (!ensureSymbolCodomain(TomBase.getSymbolCodomain(symbol), expectedType, TomMessage.invalidDisjunctionCodomain, tom_dijName, fileName,decLine)) {
              return null;
            }
          }
          // System.out.println("domain = " + getSymbolDomain(symbol));

          if (referenceDomain == null) { // save Domain reference
            referenceSymbol = symbol;
            referenceName = tom_dijName;
            referenceDomain = TomBase.getSymbolDomain(symbol);
          } else {
            // check that domains are compatible
            TomTypeList currentDomain = TomBase.getSymbolDomain(symbol);
            // restrict the domain to the record
            while(!slotList.isEmptyconcSlot()) {
              Slot slot = slotList.getHeadconcSlot();
              TomName slotName = slot.getSlotName();
              int currentSlotIndex = TomBase.getSlotIndex(symbol,slotName);
              int referenceSlotIndex = TomBase.getSlotIndex(referenceSymbol,slotName);

              // System.out.println("index1 = " + currentSlotIndex);
              // System.out.println("type1 = " +
              // TomBase.elementAt(currentDomain,currentSlotIndex));
              // System.out.println("index2 = " + referenceSlotIndex);
              // System.out.println("type2 = " +
              // TomBase.elementAt(referenceDomain,referenceSlotIndex));
              
              if (referenceSlotIndex == -1){
                messageError(fileName,decLine, TomMessage.invalidDisjunctionSlotName, new Object[]{referenceName,((Name)slotName).getString()});
                return null;                
              }
              
              if (currentSlotIndex == -1){
                messageError(fileName,decLine, TomMessage.invalidDisjunctionSlotName, new Object[]{(tom_dijName),((Name)slotName).getString() });
                return null;                
              }
              
              if(TomBase.elementAt(currentDomain,currentSlotIndex) != TomBase.elementAt(referenceDomain,referenceSlotIndex)) {
                messageError(fileName,decLine, TomMessage.invalidDisjunctionDomain, new Object[]{referenceName, (tom_dijName) });
                return null;
              }

              slotList = slotList.getTailconcSlot();
            }

          }
        }}}}}}}if (tom_is_empty_concTomName_TomNameList(tomMatch110NameNumber_end_3)) {tomMatch110NameNumber_end_3=tomMatch110NameNumber_begin_2;} else {tomMatch110NameNumber_end_3=tom_get_tail_concTomName_TomNameList(tomMatch110NameNumber_end_3);}}} while(!(tom_equal_term_TomNameList(tomMatch110NameNumber_end_3, tomMatch110NameNumber_begin_2)));}}}}}}

      return symbol;
    }
  }

  // /////////////////////
  // RECORDS CONCERNS ///
  // /////////////////////
  private  void verifyRecordStructure(OptionList option, String tomName, SlotList slotList, String fileName, int decLine)  {
    TomSymbol symbol = getSymbolFromName(tomName);
    if(symbol != null) {
        // constants have an emptyPairNameDeclList
        // the length of the pairNameDeclList corresponds to the arity of the
        // operator
        // list operator with [] no allowed
      if(slotList.isEmptyconcSlot() && (TomBase.isListOperator(symbol) ||  TomBase.isArrayOperator(symbol)) ) {
        messageError(fileName,decLine,
                     TomMessage.bracketOnListSymbol,
                     new Object[]{tomName});
      }
        // TODO verify type
      verifyRecordSlots(slotList,symbol, TomBase.getSymbolDomain(symbol), tomName, fileName, decLine);
    } else {
      messageError(fileName,decLine,
                   TomMessage.unknownSymbol,
                   new Object[]{tomName});
    }
  }

    // We test the existence/repetition of slotName contained in pairSlotAppl
    // and then the associated term
  private  void verifyRecordSlots(SlotList slotList, TomSymbol tomSymbol, TomTypeList typeList, String methodName, String fileName, int decLine) {
  TomName pairSlotName = null;
  ArrayList listOfPossibleSlot = null;
  ArrayList studiedSlotIndexList = new ArrayList();
    // for each pair slotName <=> Appl
  while( !slotList.isEmptyconcSlot() ) {
      pairSlotName = slotList.getHeadconcSlot().getSlotName();
        // First check for slot name correctness
      int index = TomBase.getSlotIndex(tomSymbol,pairSlotName);
      if(index < 0) {// Error: bad slot name
        if(listOfPossibleSlot == null) {
          // calculate list of possible slot names..
          listOfPossibleSlot = new ArrayList();
          PairNameDeclList listOfSlots = tomSymbol.getPairNameDeclList();
          while ( !listOfSlots.isEmptyconcPairNameDecl() ) {
            TomName sname = listOfSlots.getHeadconcPairNameDecl().getSlotName();
            if(!sname.isEmptyName()) {
              listOfPossibleSlot.add(sname.getString());
            }
            listOfSlots = listOfSlots.getTailconcPairNameDecl();
          }
        }
        messageError(fileName,decLine,
                     TomMessage.badSlotName,
                     new Object[]{pairSlotName.getString(), methodName, listOfPossibleSlot.toString()});
        return; // break analyses
      } else { // then check for repeated good slot name
        Integer integerIndex = new Integer(index);
        if(studiedSlotIndexList.contains(integerIndex)) {
            // Error: repeated slot
          messageError(fileName,decLine,
                       TomMessage.slotRepeated,
                       new Object[]{methodName, pairSlotName.getString()});
          return; // break analyses
        }
        studiedSlotIndexList.add(integerIndex);
      }

        // Now analyses associated term
      PairNameDeclList listOfSlots =  tomSymbol.getPairNameDeclList();
      TomTypeList listOfTypes = typeList;
      while(!listOfSlots.isEmptyconcPairNameDecl()) {
        SlotList listOfPair = slotList;
        TomName slotName = listOfSlots.getHeadconcPairNameDecl().getSlotName();
        TomType expectedType = listOfTypes.getHeadconcTomType();
        if(!slotName.isEmptyName()) {
          // look for a same name (from record)
          whileBlock: {
            while(!listOfPair.isEmptyconcSlot()) {
              Slot pairSlotTerm = listOfPair.getHeadconcSlot();
              if (tom_is_sort_TomName(slotName)) {{  tom.engine.adt.tomname.types.TomName  tomMatch111NameNumberfreshSubject_1=(( tom.engine.adt.tomname.types.TomName )slotName);if (tom_is_sort_Slot(pairSlotTerm)) {{  tom.engine.adt.tomslot.types.Slot  tomMatch111NameNumberfreshSubject_2=(( tom.engine.adt.tomslot.types.Slot )pairSlotTerm);if (tom_is_fun_sym_PairSlotAppl(tomMatch111NameNumberfreshSubject_2)) {{  tom.engine.adt.tomname.types.TomName  tomMatch111NameNumber_freshVar_0=tom_get_slot_PairSlotAppl_SlotName(tomMatch111NameNumberfreshSubject_2);{  tom.engine.adt.tomterm.types.TomTerm  tomMatch111NameNumber_freshVar_1=tom_get_slot_PairSlotAppl_Appl(tomMatch111NameNumberfreshSubject_2);if (tom_is_fun_sym_Name(tomMatch111NameNumber_freshVar_0)) {{  String  tomMatch111NameNumber_freshVar_2=tom_get_slot_Name_String(tomMatch111NameNumber_freshVar_0);if (tom_is_fun_sym_Name(tomMatch111NameNumberfreshSubject_1)) {{  String  tomMatch111NameNumber_freshVar_3=tom_get_slot_Name_String(tomMatch111NameNumberfreshSubject_1);if (tom_equal_term_String(tomMatch111NameNumber_freshVar_2, tomMatch111NameNumber_freshVar_3)) {if ( true ) {

                   validateTerm(tomMatch111NameNumber_freshVar_1,expectedType, false, true, false);
                   break whileBlock;
                 }}}}}}}}}if ( true ) {
listOfPair = listOfPair.getTailconcSlot();}}}}}

            }
          }
        }
        // prepare next step
        listOfSlots = listOfSlots.getTailconcPairNameDecl();
        listOfTypes = listOfTypes.getTailconcTomType();
      }

      slotList = slotList.getTailconcSlot();
    }
  }

  public  void validateListOperatorArgs(TomList args, TomType expectedType, TomType parentListCodomain, boolean permissive) {
    while(!args.isEmptyconcTomTerm()) {
      TomTerm currentArg = args.getHeadconcTomTerm();      
      TomSymbol argSymbol = getSymbolFromName(getName(currentArg));
      // if we have a sublist 
      if (TomBase.isListOperator(argSymbol)){
        // we can have two cases:
        // 1. the sublist has the codomain = parentListCodomain
        // 2. the sublist has the codomain = expectedType
        if (argSymbol.getTypesToType().getCodomain() == parentListCodomain){
            validateTerm(currentArg, parentListCodomain, true, false, permissive);            
        }else{
            validateTerm(currentArg, expectedType, true, false, permissive);    
        }        
      }else{
        validateTerm(currentArg, expectedType, true, false, permissive);
      }
      args = args.getTailconcTomTerm();
    }
  }

  private  boolean testTypeExistence(String typeName) {
    return symbolTable().getType(typeName) != null;
  }

  protected static class TermDescription {
    private int termClass;
    private String fileName;
    private int decLine;
    private String name ="";
    private TomType tomType = null;

    public TermDescription(int termClass, String name, String fileName, int decLine, TomType tomType) {
      this.termClass = termClass;
      this.fileName = fileName;
      this.decLine = decLine;
      this.name = name;
      this.tomType = tomType;
    }

    public int getTermClass() {
      return termClass;
    }

    public String getName() {
      return name;
    }
    
    public String getFileName() {
      return fileName;
    }

    public int getLine() {
      return decLine;
    }

    public TomType getType() {
      if(tomType != null && !tomType.isEmptyType()) {
        return tomType;
      } else {
        return tom_make_EmptyType();
      }
    }
  }
}

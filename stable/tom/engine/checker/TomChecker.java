/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 *   
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 * Julien Guyon
 *
 **/

package tom.engine.checker;

import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.engine.TomBase;
import tom.engine.TomMessage;
import tom.engine.exception.TomRuntimeException;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.tools.TomGenericPlugin;
import tom.platform.PlatformLogRecord;


abstract public class TomChecker extends TomGenericPlugin {
  
    // ------------------------------------------------------------
  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_char(char t1, char t2) { return  (t1==t2) ;}private static boolean tom_is_sort_char(char t) { return  true ;} private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  /* Generated by TOM (version 2.6alpha): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) { return  (t1==t2) ;}private static boolean tom_is_sort_int(int t) { return  true ;} private static boolean tom_equal_term_Instruction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Instruction(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.Instruction ;}private static boolean tom_equal_term_InstructionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_InstructionList(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.InstructionList ;}private static boolean tom_equal_term_ConstraintInstruction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ConstraintInstruction(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.ConstraintInstruction ;}private static boolean tom_equal_term_ConstraintInstructionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ConstraintInstructionList(Object t) { return  t instanceof tom.engine.adt.tominstruction.types.ConstraintInstructionList ;}private static boolean tom_equal_term_TomTypeList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTypeList(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomTypeList ;}private static boolean tom_equal_term_TomType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomType(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomType ;}private static boolean tom_equal_term_TomTypeDefinition(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTypeDefinition(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomTypeDefinition ;}private static boolean tom_equal_term_TomForwardType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomForwardType(Object t) { return  t instanceof tom.engine.adt.tomtype.types.TomForwardType ;}private static boolean tom_equal_term_TomSymbolList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomSymbolList(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomSymbolList ;}private static boolean tom_equal_term_TomVisit(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomVisit(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomVisit ;}private static boolean tom_equal_term_TomStructureTable(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomStructureTable(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomStructureTable ;}private static boolean tom_equal_term_Position(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Position(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.Position ;}private static boolean tom_equal_term_TomEntry(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomEntry(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomEntry ;}private static boolean tom_equal_term_TomEntryList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomEntryList(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomEntryList ;}private static boolean tom_equal_term_TomVisitList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomVisitList(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomVisitList ;}private static boolean tom_equal_term_TargetLanguage(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TargetLanguage(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TargetLanguage ;}private static boolean tom_equal_term_TomSymbolTable(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomSymbolTable(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomSymbolTable ;}private static boolean tom_equal_term_TomSymbol(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomSymbol(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.TomSymbol ;}private static boolean tom_equal_term_KeyEntry(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_KeyEntry(Object t) { return  t instanceof tom.engine.adt.tomsignature.types.KeyEntry ;}private static boolean tom_equal_term_ElementaryTheory(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ElementaryTheory(Object t) { return  t instanceof tom.engine.adt.theory.types.ElementaryTheory ;}private static boolean tom_equal_term_Theory(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Theory(Object t) { return  t instanceof tom.engine.adt.theory.types.Theory ;}private static boolean tom_equal_term_DeclarationList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_DeclarationList(Object t) { return  t instanceof tom.engine.adt.tomdeclaration.types.DeclarationList ;}private static boolean tom_equal_term_Declaration(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Declaration(Object t) { return  t instanceof tom.engine.adt.tomdeclaration.types.Declaration ;}private static boolean tom_equal_term_TomNumber(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNumber(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNumber ;}private static boolean tom_equal_term_TomNumberList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNumberList(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNumberList ;}private static boolean tom_equal_term_TomNameList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomNameList(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomNameList ;}private static boolean tom_equal_term_TomName(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomName(Object t) { return  t instanceof tom.engine.adt.tomname.types.TomName ;}private static boolean tom_equal_term_Expression(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Expression(Object t) { return  t instanceof tom.engine.adt.tomexpression.types.Expression ;}private static boolean tom_equal_term_TomList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomList(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomList ;}private static boolean tom_equal_term_TomTerm(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TomTerm(Object t) { return  t instanceof tom.engine.adt.tomterm.types.TomTerm ;}private static boolean tom_equal_term_Option(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Option(Object t) { return  t instanceof tom.engine.adt.tomoption.types.Option ;}private static boolean tom_equal_term_OptionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_OptionList(Object t) { return  t instanceof tom.engine.adt.tomoption.types.OptionList ;}private static boolean tom_equal_term_NumericConstraintType(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_NumericConstraintType(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.NumericConstraintType ;}private static boolean tom_equal_term_Constraint(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Constraint(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.Constraint ;}private static boolean tom_equal_term_ConstraintList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_ConstraintList(Object t) { return  t instanceof tom.engine.adt.tomconstraint.types.ConstraintList ;}private static boolean tom_equal_term_PairNameDecl(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PairNameDecl(Object t) { return  t instanceof tom.engine.adt.tomslot.types.PairNameDecl ;}private static boolean tom_equal_term_PairNameDeclList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_PairNameDeclList(Object t) { return  t instanceof tom.engine.adt.tomslot.types.PairNameDeclList ;}private static boolean tom_equal_term_SlotList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_SlotList(Object t) { return  t instanceof tom.engine.adt.tomslot.types.SlotList ;}private static boolean tom_equal_term_Slot(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_Slot(Object t) { return  t instanceof tom.engine.adt.tomslot.types.Slot ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) { return  (t instanceof tom.engine.adt.tomname.types.tomname.Name) ;}private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) { return  t.getString() ;}private static boolean tom_is_fun_sym_TermAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.TermAppl) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_TermAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_TermAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_TermAppl_Args( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getArgs() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_TermAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getSlots() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_XMLAppl( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.XMLAppl) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_XMLAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_XMLAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getNameList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_XMLAppl_AttrList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAttrList() ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_XMLAppl_ChildList( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getChildList() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_XMLAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_VariableStar_AstName( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstName() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_VariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_UnamedVariable( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariable_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_UnamedVariableStar( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getOption() ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getAstType() ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getConstraints() ;}private static boolean tom_is_fun_sym_AntiTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  (t instanceof tom.engine.adt.tomterm.types.tomterm.AntiTerm) ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_AntiTerm_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) { return  t.getTomTerm() ;}private static boolean tom_is_fun_sym_OriginTracking( tom.engine.adt.tomoption.types.Option  t) { return  (t instanceof tom.engine.adt.tomoption.types.option.OriginTracking) ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_OriginTracking_AstName( tom.engine.adt.tomoption.types.Option  t) { return  t.getAstName() ;}private static  int  tom_get_slot_OriginTracking_Line( tom.engine.adt.tomoption.types.Option  t) { return  t.getLine() ;}private static  String  tom_get_slot_OriginTracking_FileName( tom.engine.adt.tomoption.types.Option  t) { return  t.getFileName() ;}private static boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomname.types.TomNameList  t) { return  ((t instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName) || (t instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName)) ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_empty_list_concTomName() { return  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ; }private static  tom.engine.adt.tomname.types.TomNameList  tom_cons_list_concTomName( tom.engine.adt.tomname.types.TomName  e,  tom.engine.adt.tomname.types.TomNameList  l) { return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_head_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getHeadconcTomName() ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_tail_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.getTailconcTomName() ;}private static boolean tom_is_empty_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) { return  l.isEmptyconcTomName() ;}   private static   tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList l1,  tom.engine.adt.tomname.types.TomNameList  l2) {     if( l1.isEmptyconcTomName() ) {       return l2;     } else if( l2.isEmptyconcTomName() ) {       return l1;     } else if(  l1.getTailconcTomName() .isEmptyconcTomName() ) {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,l2) ;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( l1.getHeadconcTomName() ,tom_append_list_concTomName( l1.getTailconcTomName() ,l2)) ;     }   }   private static   tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end, tom.engine.adt.tomname.types.TomNameList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make( begin.getHeadconcTomName() ,( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName( begin.getTailconcTomName() ,end,tail)) ;     }   }   private static boolean tom_is_fun_sym_concOption( tom.engine.adt.tomoption.types.OptionList  t) { return  ((t instanceof tom.engine.adt.tomoption.types.optionlist.ConsconcOption) || (t instanceof tom.engine.adt.tomoption.types.optionlist.EmptyconcOption)) ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_empty_list_concOption() { return  tom.engine.adt.tomoption.types.optionlist.EmptyconcOption.make() ; }private static  tom.engine.adt.tomoption.types.OptionList  tom_cons_list_concOption( tom.engine.adt.tomoption.types.Option  e,  tom.engine.adt.tomoption.types.OptionList  l) { return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make(e,l) ; }private static  tom.engine.adt.tomoption.types.Option  tom_get_head_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.getHeadconcOption() ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_tail_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.getTailconcOption() ;}private static boolean tom_is_empty_concOption_OptionList( tom.engine.adt.tomoption.types.OptionList  l) { return  l.isEmptyconcOption() ;}   private static   tom.engine.adt.tomoption.types.OptionList  tom_append_list_concOption( tom.engine.adt.tomoption.types.OptionList l1,  tom.engine.adt.tomoption.types.OptionList  l2) {     if( l1.isEmptyconcOption() ) {       return l2;     } else if( l2.isEmptyconcOption() ) {       return l1;     } else if(  l1.getTailconcOption() .isEmptyconcOption() ) {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( l1.getHeadconcOption() ,l2) ;     } else {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( l1.getHeadconcOption() ,tom_append_list_concOption( l1.getTailconcOption() ,l2)) ;     }   }   private static   tom.engine.adt.tomoption.types.OptionList  tom_get_slice_concOption( tom.engine.adt.tomoption.types.OptionList  begin,  tom.engine.adt.tomoption.types.OptionList  end, tom.engine.adt.tomoption.types.OptionList  tail) {     if( begin.equals(end) ) {       return tail;     } else {       return  tom.engine.adt.tomoption.types.optionlist.ConsconcOption.make( begin.getHeadconcOption() ,( tom.engine.adt.tomoption.types.OptionList )tom_get_slice_concOption( begin.getTailconcOption() ,end,tail)) ;     }   }    
    // ------------------------------------------------------------
  
    // Different kind of structures
  protected final static int TERM_APPL               = 0;
  protected final static int UNAMED_APPL             = 1;
  protected final static int APPL_DISJUNCTION        = 2;
  protected final static int RECORD_APPL             = 3;
  protected final static int RECORD_APPL_DISJUNCTION = 4;
  protected final static int XML_APPL                = 5;
  protected final static int VARIABLE_STAR           = 6;
  protected final static int UNAMED_VARIABLE_STAR    = 7;
  protected final static int UNAMED_VARIABLE         = 8;
  protected final static int VARIABLE                = 9;
  
  protected boolean strictType = false;
  protected Option currentTomStructureOrgTrack;
    
  public TomChecker(String name) {
    super(name);
  }

  protected void reinit() {
    currentTomStructureOrgTrack = null;
  }
 
  public int getClass(TomTerm term) {
    if (tom_is_sort_TomTerm(term)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch75NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )term);if (tom_is_fun_sym_TermAppl(tomMatch75NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_0=tom_get_slot_TermAppl_NameList(tomMatch75NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch75NameNumber_freshVar_0)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_1=tomMatch75NameNumber_freshVar_0;if (!(tom_is_empty_concTomName_TomNameList(tomMatch75NameNumber_freshVar_1))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch75NameNumber_freshVar_1))) {{  String  tomMatch75NameNumber_freshVar_3=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch75NameNumber_freshVar_1));if (tom_equal_term_String("", tomMatch75NameNumber_freshVar_3)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_2=tom_get_tail_concTomName_TomNameList(tomMatch75NameNumber_freshVar_1);if (tom_is_empty_concTomName_TomNameList(tomMatch75NameNumber_freshVar_2)) {if ( true ) {
 return UNAMED_APPL;}}}}}}}}}}}if (tom_is_fun_sym_TermAppl(tomMatch75NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_4=tom_get_slot_TermAppl_NameList(tomMatch75NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch75NameNumber_freshVar_4)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_5=tomMatch75NameNumber_freshVar_4;if (!(tom_is_empty_concTomName_TomNameList(tomMatch75NameNumber_freshVar_5))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch75NameNumber_freshVar_5))) {{  String  tomMatch75NameNumber_freshVar_7=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch75NameNumber_freshVar_5));{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_6=tom_get_tail_concTomName_TomNameList(tomMatch75NameNumber_freshVar_5);if (tom_is_empty_concTomName_TomNameList(tomMatch75NameNumber_freshVar_6)) {if ( true ) {
 return TERM_APPL;}}}}}}}}}}if (tom_is_fun_sym_TermAppl(tomMatch75NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_8=tom_get_slot_TermAppl_NameList(tomMatch75NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch75NameNumber_freshVar_8)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_9=tomMatch75NameNumber_freshVar_8;if (!(tom_is_empty_concTomName_TomNameList(tomMatch75NameNumber_freshVar_9))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch75NameNumber_freshVar_9))) {{  String  tomMatch75NameNumber_freshVar_12=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch75NameNumber_freshVar_9));{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_10=tom_get_tail_concTomName_TomNameList(tomMatch75NameNumber_freshVar_9);if ( true ) {
 return APPL_DISJUNCTION;}}}}}}}}}if (tom_is_fun_sym_RecordAppl(tomMatch75NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_13=tom_get_slot_RecordAppl_NameList(tomMatch75NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch75NameNumber_freshVar_13)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_14=tomMatch75NameNumber_freshVar_13;if (!(tom_is_empty_concTomName_TomNameList(tomMatch75NameNumber_freshVar_14))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch75NameNumber_freshVar_14))) {{  String  tomMatch75NameNumber_freshVar_16=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch75NameNumber_freshVar_14));{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_15=tom_get_tail_concTomName_TomNameList(tomMatch75NameNumber_freshVar_14);if (tom_is_empty_concTomName_TomNameList(tomMatch75NameNumber_freshVar_15)) {if ( true ) {
 return RECORD_APPL;}}}}}}}}}}if (tom_is_fun_sym_RecordAppl(tomMatch75NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_17=tom_get_slot_RecordAppl_NameList(tomMatch75NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch75NameNumber_freshVar_17)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_18=tomMatch75NameNumber_freshVar_17;if (!(tom_is_empty_concTomName_TomNameList(tomMatch75NameNumber_freshVar_18))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch75NameNumber_freshVar_18))) {{  String  tomMatch75NameNumber_freshVar_21=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch75NameNumber_freshVar_18));{  tom.engine.adt.tomname.types.TomNameList  tomMatch75NameNumber_freshVar_19=tom_get_tail_concTomName_TomNameList(tomMatch75NameNumber_freshVar_18);if ( true ) {
 return RECORD_APPL_DISJUNCTION;}}}}}}}}}if (tom_is_fun_sym_XMLAppl(tomMatch75NameNumberfreshSubject_1)) {if ( true ) {
 return XML_APPL;}}if (tom_is_fun_sym_UnamedVariable(tomMatch75NameNumberfreshSubject_1)) {if ( true ) {
 return UNAMED_VARIABLE;}}if (tom_is_fun_sym_VariableStar(tomMatch75NameNumberfreshSubject_1)) {if ( true ) {
 return VARIABLE_STAR;}}if (tom_is_fun_sym_Variable(tomMatch75NameNumberfreshSubject_1)) {if ( true ) {
 return VARIABLE;}}if (tom_is_fun_sym_UnamedVariableStar(tomMatch75NameNumberfreshSubject_1)) {if ( true ) {
 return UNAMED_VARIABLE_STAR;}}}}

    throw new TomRuntimeException("Invalid Term");
  }
  
  public String getName(TomTerm term) {
    String dijunctionName = "";
    if (tom_is_sort_TomTerm(term)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch76NameNumberfreshSubject_1=(( tom.engine.adt.tomterm.types.TomTerm )term);if (tom_is_fun_sym_TermAppl(tomMatch76NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_0=tom_get_slot_TermAppl_NameList(tomMatch76NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch76NameNumber_freshVar_0)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_1=tomMatch76NameNumber_freshVar_0;if (!(tom_is_empty_concTomName_TomNameList(tomMatch76NameNumber_freshVar_1))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch76NameNumber_freshVar_1))) {{  String  tomMatch76NameNumber_freshVar_3=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch76NameNumber_freshVar_1));{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_2=tom_get_tail_concTomName_TomNameList(tomMatch76NameNumber_freshVar_1);if (tom_is_empty_concTomName_TomNameList(tomMatch76NameNumber_freshVar_2)) {if ( true ) {
 return tomMatch76NameNumber_freshVar_3;}}}}}}}}}}if (tom_is_fun_sym_TermAppl(tomMatch76NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_4=tom_get_slot_TermAppl_NameList(tomMatch76NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomNameList  tom_nameList=tomMatch76NameNumber_freshVar_4;if ( true ) {

        String head;
        dijunctionName = tom_nameList.getHeadconcTomName().getString();
        while(!tom_nameList.isEmptyconcTomName()) {
          head = tom_nameList.getHeadconcTomName().getString();
          dijunctionName = ( dijunctionName.compareTo(head) > 0)?dijunctionName:head;
          tom_nameList= tom_nameList.getTailconcTomName();
        }
        return dijunctionName;
      }}}}if (tom_is_fun_sym_RecordAppl(tomMatch76NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_5=tom_get_slot_RecordAppl_NameList(tomMatch76NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch76NameNumber_freshVar_5)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_6=tomMatch76NameNumber_freshVar_5;if (!(tom_is_empty_concTomName_TomNameList(tomMatch76NameNumber_freshVar_6))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch76NameNumber_freshVar_6))) {{  String  tomMatch76NameNumber_freshVar_8=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch76NameNumber_freshVar_6));{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_7=tom_get_tail_concTomName_TomNameList(tomMatch76NameNumber_freshVar_6);if (tom_is_empty_concTomName_TomNameList(tomMatch76NameNumber_freshVar_7)) {if ( true ) {
 return tomMatch76NameNumber_freshVar_8;}}}}}}}}}}if (tom_is_fun_sym_RecordAppl(tomMatch76NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_9=tom_get_slot_RecordAppl_NameList(tomMatch76NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomNameList  tom_nameList=tomMatch76NameNumber_freshVar_9;if ( true ) {

        String head;
        dijunctionName = tom_nameList.getHeadconcTomName().getString();
        while(!tom_nameList.isEmptyconcTomName()) {
          head = tom_nameList.getHeadconcTomName().getString();
          dijunctionName = ( dijunctionName.compareTo(head) > 0)?dijunctionName:head;
          tom_nameList= tom_nameList.getTailconcTomName();
        }
        return dijunctionName;
      }}}}if (tom_is_fun_sym_XMLAppl(tomMatch76NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_10=tom_get_slot_XMLAppl_NameList(tomMatch76NameNumberfreshSubject_1);if (tom_is_fun_sym_concTomName(tomMatch76NameNumber_freshVar_10)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_11=tomMatch76NameNumber_freshVar_10;if (!(tom_is_empty_concTomName_TomNameList(tomMatch76NameNumber_freshVar_11))) {if (tom_is_fun_sym_Name(tom_get_head_concTomName_TomNameList(tomMatch76NameNumber_freshVar_11))) {{  String  tomMatch76NameNumber_freshVar_14=tom_get_slot_Name_String(tom_get_head_concTomName_TomNameList(tomMatch76NameNumber_freshVar_11));{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_12=tom_get_tail_concTomName_TomNameList(tomMatch76NameNumber_freshVar_11);if ( true ) {
 return tomMatch76NameNumber_freshVar_14;}}}}}}}}}if (tom_is_fun_sym_XMLAppl(tomMatch76NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomNameList  tomMatch76NameNumber_freshVar_15=tom_get_slot_XMLAppl_NameList(tomMatch76NameNumberfreshSubject_1);{  tom.engine.adt.tomname.types.TomNameList  tom_nameList=tomMatch76NameNumber_freshVar_15;if ( true ) {

        String head;
        dijunctionName = tom_nameList.getHeadconcTomName().getString();
        while(!tom_nameList.isEmptyconcTomName()) {
          head = tom_nameList.getHeadconcTomName().getString();
          dijunctionName = ( dijunctionName.compareTo(head) > 0)?dijunctionName:head;
          tom_nameList= tom_nameList.getTailconcTomName();
        }
        return dijunctionName;
      }}}}if (tom_is_fun_sym_Variable(tomMatch76NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch76NameNumber_freshVar_16=tom_get_slot_Variable_AstName(tomMatch76NameNumberfreshSubject_1);if (tom_is_fun_sym_Name(tomMatch76NameNumber_freshVar_16)) {{  String  tomMatch76NameNumber_freshVar_17=tom_get_slot_Name_String(tomMatch76NameNumber_freshVar_16);if ( true ) {
 return tomMatch76NameNumber_freshVar_17;}}}}}if (tom_is_fun_sym_VariableStar(tomMatch76NameNumberfreshSubject_1)) {{  tom.engine.adt.tomname.types.TomName  tomMatch76NameNumber_freshVar_18=tom_get_slot_VariableStar_AstName(tomMatch76NameNumberfreshSubject_1);if (tom_is_fun_sym_Name(tomMatch76NameNumber_freshVar_18)) {{  String  tomMatch76NameNumber_freshVar_19=tom_get_slot_Name_String(tomMatch76NameNumber_freshVar_18);if ( true ) {
 return tomMatch76NameNumber_freshVar_19+"*";}}}}}if (tom_is_fun_sym_UnamedVariable(tomMatch76NameNumberfreshSubject_1)) {if ( true ) {
 return "_";}}if (tom_is_fun_sym_UnamedVariableStar(tomMatch76NameNumberfreshSubject_1)) {if ( true ) {
 return "_*";}}if (tom_is_fun_sym_AntiTerm(tomMatch76NameNumberfreshSubject_1)) {{  tom.engine.adt.tomterm.types.TomTerm  tomMatch76NameNumber_freshVar_20=tom_get_slot_AntiTerm_TomTerm(tomMatch76NameNumberfreshSubject_1);if ( true ) {
 return getName(tomMatch76NameNumber_freshVar_20); }}}}}

    throw new TomRuntimeException("Invalid Term:" + term);
  }
  
  /**
   * Shared Functions 
   */
  protected String extractType(TomSymbol symbol) {
    TomType type = TomBase.getSymbolCodomain(symbol);
    return TomBase.getTomType(type);
  }
  
  protected static String findOriginTrackingFileName(OptionList optionList) {
    if (tom_is_sort_OptionList(optionList)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch77NameNumberfreshSubject_1=(( tom.engine.adt.tomoption.types.OptionList )optionList);if (tom_is_fun_sym_concOption(tomMatch77NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch77NameNumber_freshVar_0=tomMatch77NameNumberfreshSubject_1;{  tom.engine.adt.tomoption.types.OptionList  tomMatch77NameNumber_begin_2=tomMatch77NameNumber_freshVar_0;{  tom.engine.adt.tomoption.types.OptionList  tomMatch77NameNumber_end_3=tomMatch77NameNumber_freshVar_0;do {{{  tom.engine.adt.tomoption.types.OptionList  tomMatch77NameNumber_freshVar_1=tomMatch77NameNumber_end_3;if (!(tom_is_empty_concOption_OptionList(tomMatch77NameNumber_freshVar_1))) {if (tom_is_fun_sym_OriginTracking(tom_get_head_concOption_OptionList(tomMatch77NameNumber_freshVar_1))) {{  String  tomMatch77NameNumber_freshVar_6=tom_get_slot_OriginTracking_FileName(tom_get_head_concOption_OptionList(tomMatch77NameNumber_freshVar_1));{  tom.engine.adt.tomoption.types.OptionList  tomMatch77NameNumber_freshVar_4=tom_get_tail_concOption_OptionList(tomMatch77NameNumber_freshVar_1);if ( true ) {
 return tomMatch77NameNumber_freshVar_6; }}}}}}if (tom_is_empty_concOption_OptionList(tomMatch77NameNumber_end_3)) {tomMatch77NameNumber_end_3=tomMatch77NameNumber_begin_2;} else {tomMatch77NameNumber_end_3=tom_get_tail_concOption_OptionList(tomMatch77NameNumber_end_3);}}} while(!(tom_equal_term_OptionList(tomMatch77NameNumber_end_3, tomMatch77NameNumber_begin_2)));}}}}}}

    return "unknown filename";
  }

  protected static int findOriginTrackingLine(OptionList optionList) {
    if (tom_is_sort_OptionList(optionList)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch78NameNumberfreshSubject_1=(( tom.engine.adt.tomoption.types.OptionList )optionList);if (tom_is_fun_sym_concOption(tomMatch78NameNumberfreshSubject_1)) {{  tom.engine.adt.tomoption.types.OptionList  tomMatch78NameNumber_freshVar_0=tomMatch78NameNumberfreshSubject_1;{  tom.engine.adt.tomoption.types.OptionList  tomMatch78NameNumber_begin_2=tomMatch78NameNumber_freshVar_0;{  tom.engine.adt.tomoption.types.OptionList  tomMatch78NameNumber_end_3=tomMatch78NameNumber_freshVar_0;do {{{  tom.engine.adt.tomoption.types.OptionList  tomMatch78NameNumber_freshVar_1=tomMatch78NameNumber_end_3;if (!(tom_is_empty_concOption_OptionList(tomMatch78NameNumber_freshVar_1))) {if (tom_is_fun_sym_OriginTracking(tom_get_head_concOption_OptionList(tomMatch78NameNumber_freshVar_1))) {{  int  tomMatch78NameNumber_freshVar_6=tom_get_slot_OriginTracking_Line(tom_get_head_concOption_OptionList(tomMatch78NameNumber_freshVar_1));{  tom.engine.adt.tomoption.types.OptionList  tomMatch78NameNumber_freshVar_4=tom_get_tail_concOption_OptionList(tomMatch78NameNumber_freshVar_1);if ( true ) {
 return tomMatch78NameNumber_freshVar_6; }}}}}}if (tom_is_empty_concOption_OptionList(tomMatch78NameNumber_end_3)) {tomMatch78NameNumber_end_3=tomMatch78NameNumber_begin_2;} else {tomMatch78NameNumber_end_3=tom_get_tail_concOption_OptionList(tomMatch78NameNumber_end_3);}}} while(!(tom_equal_term_OptionList(tomMatch78NameNumber_end_3, tomMatch78NameNumber_begin_2)));}}}}}}

    return -1;
  }

  protected void ensureOriginTrackingLine(int line) {
    if(line < 0) {
      getLogger().log(Level.SEVERE,
                      TomMessage.findOTL.getMessage(),
                      getStreamManager().getInputFileName());
      //System.out.println("findOriginTrackingLine: not found ");
    }
  }

  /**
   * Message Functions
   */
  protected void messageError(String fileName, int errorLine, TomMessage msg, Object[] msgArgs) {
    getLogger().log(new PlatformLogRecord(Level.SEVERE, msg, msgArgs,fileName, errorLine));
  }
  
  protected void messageWarning(String fileName, int errorLine, TomMessage msg, Object[] msgArgs) {
    getLogger().log(new PlatformLogRecord(Level.WARNING,msg,msgArgs,fileName, errorLine));
  }
  
  public static void messageError(String className,String fileName, int errorLine, TomMessage msg, Object[] msgArgs) {
    Logger.getLogger(className).log(new PlatformLogRecord(Level.SEVERE, msg, msgArgs,fileName, errorLine));
  }
  
  public static void messageWarning(String className,String fileName, int errorLine, TomMessage msg, Object[] msgArgs) {
    Logger.getLogger(className).log(new PlatformLogRecord(Level.WARNING, msg, msgArgs,fileName, errorLine));
  }
  
}  //Class TomChecker

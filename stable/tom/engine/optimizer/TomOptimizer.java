/* Generated by TOM (version 2.5alpha): Do not edit this file *//*
 * 
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine.optimizer;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.TomMessage;
import tom.engine.tools.TomGenericPlugin;
import tom.engine.tools.PILFactory;
import tom.engine.tools.Tools;
import tom.platform.OptionParser;
import tom.platform.adt.platformoption.types.PlatformOptionList;

import jjtraveler.reflective.VisitableVisitor;
import jjtraveler.VisitFailure;
import tom.library.strategy.mutraveler.*;


/**
 * The TomOptimizer plugin.
 */
public class TomOptimizer extends TomGenericPlugin {

  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) {  return  (t1.equals(t2))  ;}private static boolean tom_is_sort_String(String t) {  return  t instanceof String  ;}  /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) {  return  (t1==t2)  ;} private static boolean tom_equal_term_Instruction(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Instruction(Object t) {  return  t instanceof tom.engine.adt.tominstruction.types.Instruction  ;}private static boolean tom_equal_term_InstructionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_InstructionList(Object t) {  return  t instanceof tom.engine.adt.tominstruction.types.InstructionList  ;}private static boolean tom_equal_term_TomType(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomType(Object t) {  return  t instanceof tom.engine.adt.tomtype.types.TomType  ;}private static boolean tom_equal_term_TomName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomName(Object t) {  return  t instanceof tom.engine.adt.tomname.types.TomName  ;}private static boolean tom_equal_term_Expression(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_Expression(Object t) {  return  t instanceof tom.engine.adt.tomexpression.types.Expression  ;}private static boolean tom_equal_term_TomTerm(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_TomTerm(Object t) {  return  t instanceof tom.engine.adt.tomterm.types.TomTerm  ;}private static boolean tom_equal_term_OptionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_OptionList(Object t) {  return  t instanceof tom.engine.adt.tomoption.types.OptionList  ;}private static boolean tom_equal_term_ConstraintList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_sort_ConstraintList(Object t) {  return  t instanceof tom.engine.adt.tomconstraint.types.ConstraintList  ;}private static boolean tom_is_fun_sym_If( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.If  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_If( tom.engine.adt.tomexpression.types.Expression  t0,  tom.engine.adt.tominstruction.types.Instruction  t1,  tom.engine.adt.tominstruction.types.Instruction  t2) { return  tom.engine.adt.tominstruction.types.instruction.If.make(t0, t1, t2); }private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_If_Condition( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getCondition()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_If_SuccesInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSuccesInst()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_If_FailureInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getFailureInst()  ;}private static boolean tom_is_fun_sym_Assign( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Assign  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Assign_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Assign_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static boolean tom_is_fun_sym_Let( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Let  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_Let( tom.engine.adt.tomterm.types.TomTerm  t0,  tom.engine.adt.tomexpression.types.Expression  t1,  tom.engine.adt.tominstruction.types.Instruction  t2) { return  tom.engine.adt.tominstruction.types.instruction.Let.make(t0, t1, t2); }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Let_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Let_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_Let_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_LetRef( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.LetRef  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_LetRef_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_LetRef_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_LetRef_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_LetAssign( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.LetAssign  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_LetAssign_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_LetAssign_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_LetAssign_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_Nop( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Nop  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_Nop() { return  tom.engine.adt.tominstruction.types.instruction.Nop.make(); }private static boolean tom_is_fun_sym_AbstractBlock( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.AbstractBlock  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_make_AbstractBlock( tom.engine.adt.tominstruction.types.InstructionList  t0) { return  tom.engine.adt.tominstruction.types.instruction.AbstractBlock.make(t0); }private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slot_AbstractBlock_InstList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getInstList()  ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) {  return  t instanceof tom.engine.adt.tomname.types.tomname.Name  ;}private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_TomTermToExpression( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.TomTermToExpression  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_TomTermToExpression_AstTerm( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstTerm()  ;}private static boolean tom_is_fun_sym_And( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.And  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_make_And( tom.engine.adt.tomexpression.types.Expression  t0,  tom.engine.adt.tomexpression.types.Expression  t1) { return  tom.engine.adt.tomexpression.types.expression.And.make(t0, t1); }private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_And_Arg1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg1()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_And_Arg2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg2()  ;}private static boolean tom_is_fun_sym_Or( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.Or  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Or_Arg1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg1()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Or_Arg2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg2()  ;}private static boolean tom_is_fun_sym_TrueTL( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.TrueTL  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_make_TrueTL() { return  tom.engine.adt.tomexpression.types.expression.TrueTL.make(); }private static boolean tom_is_fun_sym_FalseTL( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.FalseTL  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_make_FalseTL() { return  tom.engine.adt.tomexpression.types.expression.FalseTL.make(); }private static boolean tom_is_fun_sym_EqualFunctionSymbol( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.EqualFunctionSymbol  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_make_EqualFunctionSymbol( tom.engine.adt.tomtype.types.TomType  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return  tom.engine.adt.tomexpression.types.expression.EqualFunctionSymbol.make(t0, t1, t2); }private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_EqualFunctionSymbol_AstType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualFunctionSymbol_Exp1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getExp1()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualFunctionSymbol_Exp2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getExp2()  ;}private static boolean tom_is_fun_sym_EqualTerm( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.EqualTerm  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_EqualTerm_TomType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getTomType()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTerm_Kid1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid1()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTerm_Kid2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid2()  ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.Variable  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_VariableStar_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_VariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_UnamedVariable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_UnamedVariableStar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_ExpressionToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.ExpressionToTomTerm  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_ExpressionToTomTerm( tom.engine.adt.tomexpression.types.Expression  t0) { return  tom.engine.adt.tomterm.types.tomterm.ExpressionToTomTerm.make(t0); }private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_ExpressionToTomTerm_AstExpression( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstExpression()  ;}private static boolean tom_is_fun_sym_Ref( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.Ref  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Ref_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTomTerm()  ;}private static boolean tom_is_fun_sym_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction || t instanceof tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_empty_list_concInstruction() { return  tom.engine.adt.tominstruction.types.instructionlist.EmptyconcInstruction.make() ; }private static  tom.engine.adt.tominstruction.types.InstructionList  tom_cons_list_concInstruction( tom.engine.adt.tominstruction.types.Instruction  e,  tom.engine.adt.tominstruction.types.InstructionList  l) { return  tom.engine.adt.tominstruction.types.instructionlist.ConsconcInstruction.make(e,l) ; }private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_head_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.getHeadconcInstruction()  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_tail_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.getTailconcInstruction()  ;}private static boolean tom_is_empty_concInstruction_InstructionList( tom.engine.adt.tominstruction.types.InstructionList  l) {  return  l.isEmptyconcInstruction()  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_append_list_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  l1,  tom.engine.adt.tominstruction.types.InstructionList  l2) {    if(tom_is_empty_concInstruction_InstructionList(l1)) {     return l2;    } else if(tom_is_empty_concInstruction_InstructionList(l2)) {     return l1;    } else if(tom_is_empty_concInstruction_InstructionList(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(l1))) {     return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(l1),l2);    } else {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(l1),tom_append_list_concInstruction(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(l1),l2));    }   }  private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slice_concInstruction( tom.engine.adt.tominstruction.types.InstructionList  begin,  tom.engine.adt.tominstruction.types.InstructionList  end) {    if(tom_equal_term_InstructionList(begin,end)) {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_empty_list_concInstruction();    } else {      return ( tom.engine.adt.tominstruction.types.InstructionList )tom_cons_list_concInstruction(( tom.engine.adt.tominstruction.types.Instruction )tom_get_head_concInstruction_InstructionList(begin),( tom.engine.adt.tominstruction.types.InstructionList )tom_get_slice_concInstruction(( tom.engine.adt.tominstruction.types.InstructionList )tom_get_tail_concInstruction_InstructionList(begin),end));    }   }   /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_Strategy(Object t1, Object t2) {  return t1.equals(t2) ;}private static boolean tom_is_sort_Strategy(Object t) {  return  t instanceof tom.library.strategy.mutraveler.MuStrategy  ;}private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_mu( tom.library.strategy.mutraveler.MuStrategy  var,  tom.library.strategy.mutraveler.MuStrategy  v) { return  new tom.library.strategy.mutraveler.Mu(var,v) ; }/* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Identity() { return  new tom.library.strategy.mutraveler.Identity() ; }private static boolean tom_is_fun_sym_Sequence( tom.library.strategy.mutraveler.MuStrategy  t) {  return  (t instanceof tom.library.strategy.mutraveler.Sequence)  ;}private static  tom.library.strategy.mutraveler.MuStrategy  tom_empty_list_Sequence() { return  new tom.library.strategy.mutraveler.Identity() ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_cons_list_Sequence( tom.library.strategy.mutraveler.MuStrategy  head,  tom.library.strategy.mutraveler.MuStrategy  tail) { return  new tom.library.strategy.mutraveler.Sequence(head,tail) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_get_head_Sequence_Strategy( tom.library.strategy.mutraveler.MuStrategy  t) {  return  (tom.library.strategy.mutraveler.MuStrategy)t.getChildAt(tom.library.strategy.mutraveler.Sequence.FIRST)  ;}private static  tom.library.strategy.mutraveler.MuStrategy  tom_get_tail_Sequence_Strategy( tom.library.strategy.mutraveler.MuStrategy  t) {  return  (tom.library.strategy.mutraveler.MuStrategy)t.getChildAt(tom.library.strategy.mutraveler.Sequence.THEN)  ;}private static boolean tom_is_empty_Sequence_Strategy( tom.library.strategy.mutraveler.MuStrategy  t) {  return  t instanceof tom.library.strategy.mutraveler.Identity  ;}private static  tom.library.strategy.mutraveler.MuStrategy  tom_append_list_Sequence( tom.library.strategy.mutraveler.MuStrategy  l1,  tom.library.strategy.mutraveler.MuStrategy  l2) {    if(tom_is_empty_Sequence_Strategy(l1)) {     return l2;    } else if(tom_is_empty_Sequence_Strategy(l2)) {     return l1;    } else if(tom_is_fun_sym_Sequence(l1)) {       if(tom_is_empty_Sequence_Strategy(( tom.library.strategy.mutraveler.MuStrategy )tom_get_tail_Sequence_Strategy(l1))) {        return ( tom.library.strategy.mutraveler.MuStrategy )tom_cons_list_Sequence(( tom.library.strategy.mutraveler.MuStrategy )tom_get_head_Sequence_Strategy(l1),l2);      } else {        return ( tom.library.strategy.mutraveler.MuStrategy )tom_cons_list_Sequence(( tom.library.strategy.mutraveler.MuStrategy )tom_get_head_Sequence_Strategy(l1),tom_append_list_Sequence(( tom.library.strategy.mutraveler.MuStrategy )tom_get_tail_Sequence_Strategy(l1),l2));      }    } else {      return ( tom.library.strategy.mutraveler.MuStrategy )tom_cons_list_Sequence(l1 , l2);    }   }  private static  tom.library.strategy.mutraveler.MuStrategy  tom_get_slice_Sequence( tom.library.strategy.mutraveler.MuStrategy  begin,  tom.library.strategy.mutraveler.MuStrategy  end) {    if(tom_equal_term_Strategy(begin,end)) {      return ( tom.library.strategy.mutraveler.MuStrategy )tom_empty_list_Sequence();    } else {      return ( tom.library.strategy.mutraveler.MuStrategy )tom_cons_list_Sequence(( tom.library.strategy.mutraveler.MuStrategy )tom_get_head_Sequence_Strategy(begin),( tom.library.strategy.mutraveler.MuStrategy )tom_get_slice_Sequence(( tom.library.strategy.mutraveler.MuStrategy )tom_get_tail_Sequence_Strategy(begin),end));    }   }  private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Choice( tom.library.strategy.mutraveler.MuStrategy  first,  tom.library.strategy.mutraveler.MuStrategy  then) { return  new tom.library.strategy.mutraveler.Choice(first,then) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_All( tom.library.strategy.mutraveler.MuStrategy  v) { return  new tom.library.strategy.mutraveler.All(v) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_MuVar( String  name) { return  new tom.library.strategy.mutraveler.MuVar(name) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_OneId( tom.library.strategy.mutraveler.MuStrategy  v) { return  new tom.library.strategy.mutraveler.OneId(v) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_SequenceId( tom.library.strategy.mutraveler.MuStrategy  first,  tom.library.strategy.mutraveler.MuStrategy  then) { return  new tom.library.strategy.mutraveler.SequenceId(first,then) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_ChoiceId( tom.library.strategy.mutraveler.MuStrategy  first,  tom.library.strategy.mutraveler.MuStrategy  then) { return  new tom.library.strategy.mutraveler.ChoiceId(first,then) ; } /* Generated by TOM (version 2.5alpha): Do not edit this file */private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_Try( tom.library.strategy.mutraveler.MuStrategy  v) { return tom_make_Choice(v,tom_make_Identity()) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_TopDown( tom.library.strategy.mutraveler.MuStrategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence()))) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_TopDownCollect( tom.library.strategy.mutraveler.MuStrategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_make_Try(tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence())))) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_RepeatId( tom.library.strategy.mutraveler.MuStrategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_make_SequenceId(v,tom_make_MuVar("_x"))) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_OnceTopDownId( tom.library.strategy.mutraveler.MuStrategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_make_ChoiceId(v,tom_make_OneId(tom_make_MuVar("_x")))) ; }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_InnermostId( tom.library.strategy.mutraveler.MuStrategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_cons_list_Sequence(tom_make_SequenceId(v,tom_make_MuVar("_x")),tom_empty_list_Sequence()))) ; }   /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_ArrayList(Object l1, Object l2) {  return  l1.equals(l2)  ;}private static boolean tom_is_sort_ArrayList(Object t) {  return  t instanceof java.util.ArrayList  ;} /* Generated by TOM (version 2.5alpha): Do not edit this file */   private static java.util.ArrayList concArrayListAppend(Object o, java.util.ArrayList l) {   java.util.ArrayList res = (java.util.ArrayList)l.clone();   res.add(o);   return res; } /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_equal_term_HashSet(Object l1, Object l2) {  return  l1.equals(l2)  ;}private static boolean tom_is_sort_HashSet(Object t) {  return  t instanceof java.util.HashSet  ;}   private static java.util.HashSet hashSetAppend(Object o, java.util.HashSet s) {   java.util.HashSet res = (java.util.HashSet) s.clone();   res.add(o);   return res; }  private static Object hashSetGetHead(java.util.HashSet s) {   java.util.Iterator it = s.iterator();   return it.next(); }  private static java.util.HashSet hashSetGetTail(java.util.HashSet s) {   java.util.HashSet res = (java.util.HashSet) s.clone();   java.util.Iterator it = s.iterator();   res.remove(it.next());   return res; } 




  /** some output suffixes */
  private static final String OPTIMIZED_SUFFIX = ".tfix.optimized";

  /** the declared options string*/
  private static final String DECLARED_OPTIONS = "<options>" + 
    "<boolean name='optimize' altName='O' description='Optimized generated code' value='false'/>" +
    "<boolean name='optimize2' altName='O2' description='Optimized generated code' value='false'/>" +
    "<boolean name='prettyPIL' altName='pil' description='PrettyPrint IL' value='false'/>" +
    "</options>";

  public void optionChanged(String optionName, Object optionValue) {
    if(optionName.equals("optimize2") && ((Boolean)optionValue).booleanValue() ) { 
      setOptionValue("pretty", Boolean.TRUE);        
    }
  }

  // this static field is necessary for %strategy instructions that generate static code
  private static PILFactory factory = new PILFactory();
  private static Logger logger = Logger.getLogger("tom.engine.optimizer.TomOptimizer");

  /** Constructor */
  public TomOptimizer() {
    super("TomOptimizer");
  }

  public void run() {
    if(getOptionBooleanValue("optimize") || getOptionBooleanValue("optimize2")) {
      // Initialize strategies

      VisitableVisitor optStrategy1 = tom_make_InnermostId(tom_make_RewriteSystem1());

      VisitableVisitor optStrategy2 = tom_cons_list_Sequence(tom_make_InnermostId(tom_make_ChoiceId(tom_make_RepeatId((tom_make_NopElimAndFlatten())),tom_make_NormExpr())),tom_cons_list_Sequence(tom_make_InnermostId(tom_make_ChoiceId(tom_cons_list_Sequence(tom_make_RepeatId(tom_make_IfSwapping()),tom_cons_list_Sequence(tom_make_RepeatId(tom_make_SequenceId(tom_make_ChoiceId(tom_make_BlockFusion(),tom_make_IfFusion()),tom_make_OnceTopDownId(tom_make_NopElimAndFlatten()))),tom_empty_list_Sequence())),tom_make_SequenceId(tom_make_InterBlock(),tom_make_OnceTopDownId(tom_make_RepeatId(tom_make_NopElimAndFlatten()))))
            ),tom_empty_list_Sequence()))






;

      long startChrono = System.currentTimeMillis();
      boolean intermediate = getOptionBooleanValue("intermediate");
      try {
        TomTerm renamedTerm = (TomTerm)getWorkingTerm();

        if(getOptionBooleanValue("optimize2")) {
          renamedTerm = (TomTerm) optStrategy2.visit(renamedTerm);
          renamedTerm = (TomTerm) optStrategy1.visit(renamedTerm);
          renamedTerm = (TomTerm) optStrategy2.visit(renamedTerm);
        }else{
         if(getOptionBooleanValue("optimize")) {
           renamedTerm = (TomTerm) optStrategy1.visit(renamedTerm);
         }
        }
        setWorkingTerm(renamedTerm);

        // verbose
        logger.log(Level.INFO, TomMessage.tomOptimizationPhase.getMessage(),
            new Integer((int)(System.currentTimeMillis()-startChrono)) );
      } catch (Exception e) {
        logger.log( Level.SEVERE, TomMessage.exceptionMessage.getMessage(),
            new Object[]{"TomOptimizer", getStreamManager().getInputFileName(), e.getMessage()} );

        e.printStackTrace();
        return;
      }
      if(intermediate) {
        Tools.generateOutput(getStreamManager().getOutputFileNameWithoutSuffix() + OPTIMIZED_SUFFIX, 
            (TomTerm)getWorkingTerm() );
      }
    } else {
      // not active plugin
      logger.log(Level.INFO, "The optimizer is not activated and thus WILL NOT RUN.");
    }
    if(getOptionBooleanValue("prettyPIL")) {
      System.out.println(factory.prettyPrintCompiledMatch(factory.remove((TomTerm)getWorkingTerm())));
    }

  }

  public PlatformOptionList getDeclaredOptionList() {
    return OptionParser.xmlToOptionList(TomOptimizer.DECLARED_OPTIONS);
  }

  private static String extractRealName(String name) {
    if(name.startsWith("tom_")) {
      return name.substring(4);
    }
    return name;
  }

  private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_inlineInstruction( tom.engine.adt.tomname.types.TomName  variableName,  tom.engine.adt.tomexpression.types.Expression  expression) { return tom_make_TopDown(tom_make_inlineInstrOnce(variableName,expression))
; } private static class inlineInstrOnce  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  tom.engine.adt.tomname.types.TomName  variableName;  private  tom.engine.adt.tomexpression.types.Expression  expression;  public inlineInstrOnce(  tom.engine.adt.tomname.types.TomName  variableName ,   tom.engine.adt.tomexpression.types.Expression  expression ) { super(tom_make_Identity() ); this.variableName=variableName; this.expression=expression; } public  tom.engine.adt.tomname.types.TomName  getvariableName() { return variableName;} public  tom.engine.adt.tomexpression.types.Expression  getexpression() { return expression;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_TomTerm(tom__arg)) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch1Position1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); {boolean tomNameNumberboolMatch1Position1= false ; { tom.engine.adt.tomname.types.TomName  tomMatch1Position1NameNumberAstName= null ; if (tom_is_fun_sym_Variable(tomMatch1Position1)) {tomNameNumberboolMatch1Position1= true ;tomMatch1Position1NameNumberAstName=tom_get_slot_Variable_AstName(tomMatch1Position1); } else { if (tom_is_fun_sym_VariableStar(tomMatch1Position1)) {tomNameNumberboolMatch1Position1= true ;tomMatch1Position1NameNumberAstName=tom_get_slot_VariableStar_AstName(tomMatch1Position1); } } if (tomNameNumberboolMatch1Position1) { { tom.engine.adt.tomname.types.TomName  tom_name=tomMatch1Position1NameNumberAstName; if ( true ) {





        if(variableName == tom_name) {
          return tom_make_ExpressionToTomTerm(expression);
        }
       } } } } } } } return super.visit_TomTerm(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_inlineInstrOnce( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomexpression.types.Expression  t1) { return new inlineInstrOnce(t0,t1); }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_computeOccurences( tom.engine.adt.tomname.types.TomName  variableName,  java.util.ArrayList  list) { return tom_make_TopDown(tom_make_findOccurence(variableName,list))




; } private static class findOccurence  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  tom.engine.adt.tomname.types.TomName  variableName;  private  java.util.ArrayList  list;  public findOccurence(  tom.engine.adt.tomname.types.TomName  variableName ,   java.util.ArrayList  list ) { super(tom_make_Identity() ); this.variableName=variableName; this.list=list; } public  tom.engine.adt.tomname.types.TomName  getvariableName() { return variableName;} public  java.util.ArrayList  getlist() { return list;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_TomTerm(tom__arg)) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch2Position1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); {boolean tomNameNumberboolMatch2Position1= false ; { tom.engine.adt.tomname.types.TomName  tomMatch2Position1NameNumberAstName= null ; if (tom_is_fun_sym_Variable(tomMatch2Position1)) {tomNameNumberboolMatch2Position1= true ;tomMatch2Position1NameNumberAstName=tom_get_slot_Variable_AstName(tomMatch2Position1); } else { if (tom_is_fun_sym_VariableStar(tomMatch2Position1)) {tomNameNumberboolMatch2Position1= true ;tomMatch2Position1NameNumberAstName=tom_get_slot_VariableStar_AstName(tomMatch2Position1); } } if (tomNameNumberboolMatch2Position1) { { tom.engine.adt.tomname.types.TomName  tom_name=tomMatch2Position1NameNumberAstName; { tom.engine.adt.tomterm.types.TomTerm  tom_t=tomMatch2Position1; if ( true ) {





        if(variableName == tom_name) {
          list.add(tom_t);
        }
       } } } } } } } } return super.visit_TomTerm(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_findOccurence( tom.engine.adt.tomname.types.TomName  t0,  java.util.ArrayList  t1) { return new findOccurence(t0,t1); }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_isAssigned( tom.engine.adt.tomname.types.TomName  variableName) { return tom_make_TopDown(tom_make_findAssignment(variableName))




; } private static class findAssignment  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  tom.engine.adt.tomname.types.TomName  variableName;  public findAssignment(  tom.engine.adt.tomname.types.TomName  variableName ) { super(tom_make_Identity() ); this.variableName=variableName; } public  tom.engine.adt.tomname.types.TomName  getvariableName() { return variableName;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction(  tom.engine.adt.tominstruction.types.Instruction  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Instruction(tom__arg)) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch3Position1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg); if ( ( tom_is_fun_sym_Assign(tomMatch3Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch3Position1NameNumberVariable=tom_get_slot_Assign_Variable(tomMatch3Position1); {boolean tomNameNumberboolMatch3Position1NameNumberVariable= false ; { tom.engine.adt.tomname.types.TomName  tomMatch3Position1NameNumberVariableNameNumberAstName= null ; if (tom_is_fun_sym_Variable(tomMatch3Position1NameNumberVariable)) {tomNameNumberboolMatch3Position1NameNumberVariable= true ;tomMatch3Position1NameNumberVariableNameNumberAstName=tom_get_slot_Variable_AstName(tomMatch3Position1NameNumberVariable); } else { if (tom_is_fun_sym_VariableStar(tomMatch3Position1NameNumberVariable)) {tomNameNumberboolMatch3Position1NameNumberVariable= true ;tomMatch3Position1NameNumberVariableNameNumberAstName=tom_get_slot_VariableStar_AstName(tomMatch3Position1NameNumberVariable); } } if (tomNameNumberboolMatch3Position1NameNumberVariable) { { tom.engine.adt.tomname.types.TomName  tom_name=tomMatch3Position1NameNumberVariableNameNumberAstName; if ( true ) {






        if(variableName == tom_name) {
          throw new VisitFailure();
        }
       } } } } } } } if ( ( tom_is_fun_sym_LetAssign(tomMatch3Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch3Position1NameNumberVariable=tom_get_slot_LetAssign_Variable(tomMatch3Position1); {boolean tomNameNumberboolMatch3Position1NameNumberVariable= false ; { tom.engine.adt.tomname.types.TomName  tomMatch3Position1NameNumberVariableNameNumberAstName= null ; if (tom_is_fun_sym_Variable(tomMatch3Position1NameNumberVariable)) {tomNameNumberboolMatch3Position1NameNumberVariable= true ;tomMatch3Position1NameNumberVariableNameNumberAstName=tom_get_slot_Variable_AstName(tomMatch3Position1NameNumberVariable); } else { if (tom_is_fun_sym_VariableStar(tomMatch3Position1NameNumberVariable)) {tomNameNumberboolMatch3Position1NameNumberVariable= true ;tomMatch3Position1NameNumberVariableNameNumberAstName=tom_get_slot_VariableStar_AstName(tomMatch3Position1NameNumberVariable); } } if (tomNameNumberboolMatch3Position1NameNumberVariable) { { tom.engine.adt.tomname.types.TomName  tom_name=tomMatch3Position1NameNumberVariableNameNumberAstName; if ( true ) {


        if(variableName == tom_name) {
          throw new VisitFailure();
        }
       } } } } } } } } } return super.visit_Instruction(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_findAssignment( tom.engine.adt.tomname.types.TomName  t0) { return new findAssignment(t0); }



  private static boolean expConstantInBody(Expression exp, Instruction body) {
    HashSet c = new HashSet();
    try {
      MuTraveler.init(tom_make_TopDownCollect(tom_make_findRefVariable(c))).visit(exp);
    } catch(VisitFailure e) {
      logger.log( Level.SEVERE, "Error during collecting variables in "+exp);
    }
    Iterator it = c.iterator();
    while(it.hasNext()) {
      TomName name = (TomName) it.next();
      try {
        MuTraveler.init(tom_make_isAssigned(name)).visit(body);
      } catch(VisitFailure e) {
        return false;
      }
    }
    return true; 
  }

     private static class findRefVariable  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  java.util.HashSet  set;  public findRefVariable(  java.util.HashSet  set ) { super(tom_make_Identity() ); this.set=set; } public  java.util.HashSet  getset() { return set;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_TomTerm(tom__arg)) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch4Position1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); if ( ( tom_is_fun_sym_Ref(tomMatch4Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch4Position1NameNumberTomTerm=tom_get_slot_Ref_TomTerm(tomMatch4Position1); {boolean tomNameNumberboolMatch4Position1NameNumberTomTerm= false ; { tom.engine.adt.tomname.types.TomName  tomMatch4Position1NameNumberTomTermNameNumberAstName= null ; if (tom_is_fun_sym_Variable(tomMatch4Position1NameNumberTomTerm)) {tomNameNumberboolMatch4Position1NameNumberTomTerm= true ;tomMatch4Position1NameNumberTomTermNameNumberAstName=tom_get_slot_Variable_AstName(tomMatch4Position1NameNumberTomTerm); } else { if (tom_is_fun_sym_VariableStar(tomMatch4Position1NameNumberTomTerm)) {tomNameNumberboolMatch4Position1NameNumberTomTerm= true ;tomMatch4Position1NameNumberTomTermNameNumberAstName=tom_get_slot_VariableStar_AstName(tomMatch4Position1NameNumberTomTerm); } } if (tomNameNumberboolMatch4Position1NameNumberTomTerm) { { tom.engine.adt.tomname.types.TomName  tom_name=tomMatch4Position1NameNumberTomTermNameNumberAstName; if ( true ) {


          set.add(tom_name);
          //stop to visit this branch (like "return false" with traversal) 
          throw new VisitFailure();
         } } } } } } } } } return super.visit_TomTerm(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_findRefVariable( java.util.HashSet  t0) { return new findRefVariable(t0); }



    /* 
     * rename variable1 into variable2
     */

    private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_renameVariable( tom.engine.adt.tomname.types.TomName  variable1,  tom.engine.adt.tomname.types.TomName  variable2) { return tom_make_TopDown(tom_make_renameVariableOnce(variable1,variable2))
; } private static class renameVariableOnce  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { private  tom.engine.adt.tomname.types.TomName  variable1;  private  tom.engine.adt.tomname.types.TomName  variable2;  public renameVariableOnce(  tom.engine.adt.tomname.types.TomName  variable1 ,   tom.engine.adt.tomname.types.TomName  variable2 ) { super(tom_make_Identity() ); this.variable1=variable1; this.variable2=variable2; } public  tom.engine.adt.tomname.types.TomName  getvariable1() { return variable1;} public  tom.engine.adt.tomname.types.TomName  getvariable2() { return variable2;} public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_TomTerm(tom__arg)) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch5Position1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); {boolean tomNameNumberboolMatch5Position1= false ; { tom.engine.adt.tomname.types.TomName  tomMatch5Position1NameNumberAstName= null ; if (tom_is_fun_sym_Variable(tomMatch5Position1)) {tomNameNumberboolMatch5Position1= true ;tomMatch5Position1NameNumberAstName=tom_get_slot_Variable_AstName(tomMatch5Position1); } else { if (tom_is_fun_sym_VariableStar(tomMatch5Position1)) {tomNameNumberboolMatch5Position1= true ;tomMatch5Position1NameNumberAstName=tom_get_slot_VariableStar_AstName(tomMatch5Position1); } } if (tomNameNumberboolMatch5Position1) { { tom.engine.adt.tomname.types.TomName  tom_astName=tomMatch5Position1NameNumberAstName; { tom.engine.adt.tomterm.types.TomTerm  tom_var=tomMatch5Position1; if ( true ) {





          if(variable1 == tom_astName) {
            return tom_var.setAstName(variable2);
          }
         } } } } } } } } return super.visit_TomTerm(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_renameVariableOnce( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomname.types.TomName  t1) { return new renameVariableOnce(t0,t1); }




    private static boolean compare (jjtraveler.Visitable term1, jjtraveler.Visitable term2){
      return factory.remove(term1)==factory.remove(term2);
    }

     private static class RewriteSystem1  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { public RewriteSystem1( ) { super(tom_make_Identity() ); } public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tomterm.types.TomTerm  visit_TomTerm(  tom.engine.adt.tomterm.types.TomTerm  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_TomTerm(tom__arg)) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch6Position1=(( tom.engine.adt.tomterm.types.TomTerm )tom__arg); if ( ( tom_is_fun_sym_ExpressionToTomTerm(tomMatch6Position1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tomMatch6Position1NameNumberAstExpression=tom_get_slot_ExpressionToTomTerm_AstExpression(tomMatch6Position1); if ( ( tom_is_fun_sym_TomTermToExpression(tomMatch6Position1NameNumberAstExpression) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_t=tom_get_slot_TomTermToExpression_AstTerm(tomMatch6Position1NameNumberAstExpression); if ( true ) {


          return tom_t;
         } } } } } } } return super.visit_TomTerm(tom__arg) ;  } public  tom.engine.adt.tomexpression.types.Expression  visit_Expression(  tom.engine.adt.tomexpression.types.Expression  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Expression(tom__arg)) { { tom.engine.adt.tomexpression.types.Expression  tomMatch7Position1=(( tom.engine.adt.tomexpression.types.Expression )tom__arg); if ( ( tom_is_fun_sym_TomTermToExpression(tomMatch7Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch7Position1NameNumberAstTerm=tom_get_slot_TomTermToExpression_AstTerm(tomMatch7Position1); if ( ( tom_is_fun_sym_ExpressionToTomTerm(tomMatch7Position1NameNumberAstTerm) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_t=tom_get_slot_ExpressionToTomTerm_AstExpression(tomMatch7Position1NameNumberAstTerm); if ( true ) {



          return tom_t;
         } } } } } } } return super.visit_Expression(tom__arg) ;  } public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction(  tom.engine.adt.tominstruction.types.Instruction  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Instruction(tom__arg)) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch8Position1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg); {boolean tomNameNumberboolMatch8Position1= false ; { tom.engine.adt.tomterm.types.TomTerm  tomMatch8Position1NameNumberVariable= null ; { tom.engine.adt.tomexpression.types.Expression  tomMatch8Position1NameNumberSource= null ; { tom.engine.adt.tominstruction.types.Instruction  tomMatch8Position1NameNumberAstInstruction= null ; if (tom_is_fun_sym_LetRef(tomMatch8Position1)) {tomNameNumberboolMatch8Position1= true ;tomMatch8Position1NameNumberVariable=tom_get_slot_LetRef_Variable(tomMatch8Position1);tomMatch8Position1NameNumberSource=tom_get_slot_LetRef_Source(tomMatch8Position1);tomMatch8Position1NameNumberAstInstruction=tom_get_slot_LetRef_AstInstruction(tomMatch8Position1); } else { if (tom_is_fun_sym_LetAssign(tomMatch8Position1)) {tomNameNumberboolMatch8Position1= true ;tomMatch8Position1NameNumberVariable=tom_get_slot_LetAssign_Variable(tomMatch8Position1);tomMatch8Position1NameNumberSource=tom_get_slot_LetAssign_Source(tomMatch8Position1);tomMatch8Position1NameNumberAstInstruction=tom_get_slot_LetAssign_AstInstruction(tomMatch8Position1); } } if (tomNameNumberboolMatch8Position1) { {boolean tomNameNumberboolMatch8Position1NameNumberVariable= false ; { tom.engine.adt.tomname.types.TomName  tomMatch8Position1NameNumberVariableNameNumberAstName= null ; if (tom_is_fun_sym_Variable(tomMatch8Position1NameNumberVariable)) {tomNameNumberboolMatch8Position1NameNumberVariable= true ;tomMatch8Position1NameNumberVariableNameNumberAstName=tom_get_slot_Variable_AstName(tomMatch8Position1NameNumberVariable); } else { if (tom_is_fun_sym_VariableStar(tomMatch8Position1NameNumberVariable)) {tomNameNumberboolMatch8Position1NameNumberVariable= true ;tomMatch8Position1NameNumberVariableNameNumberAstName=tom_get_slot_VariableStar_AstName(tomMatch8Position1NameNumberVariable); } } if (tomNameNumberboolMatch8Position1NameNumberVariable) { if ( ( tom_is_fun_sym_Name(tomMatch8Position1NameNumberVariableNameNumberAstName) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_name=tomMatch8Position1NameNumberVariableNameNumberAstName; { tom.engine.adt.tomterm.types.TomTerm  tom_var=tomMatch8Position1NameNumberVariable; { tom.engine.adt.tomexpression.types.Expression  tom_exp=tomMatch8Position1NameNumberSource; { tom.engine.adt.tominstruction.types.Instruction  tom_body=tomMatch8Position1NameNumberAstInstruction; { tom.engine.adt.tominstruction.types.Instruction  tom_let=tomMatch8Position1; if ( true ) {









          /*
           * do not optimize Variable(TomNumber...) because LetRef X*=GeTTail(X*) in ...
           * is not correctly handled 
           * we must check that X notin exp
           */
          String varName = "";
           if (tom_is_sort_TomName(tom_name)) { { tom.engine.adt.tomname.types.TomName  tomMatch9Position1=(( tom.engine.adt.tomname.types.TomName )tom_name); if ( ( tom_is_fun_sym_Name(tomMatch9Position1) ||  false  ) ) { { String  tom_tomName=tom_get_slot_Name_String(tomMatch9Position1); if ( true ) {
 varName = tom_tomName;  } } } } }


          ArrayList list  = new ArrayList();
          MuTraveler.init(tom_make_computeOccurences(tom_name,list)).visit(tom_body);
          int mult = list.size();
          if(mult == 0) {
            if(varName.length() > 0) {
              Option orgTrack = findOriginTracking(tom_var.getOption());
	      TomMessage.warning(logger,orgTrack.getFileName(), orgTrack.getLine(),
		  TomMessage.unusedVariable,extractRealName(varName));
              logger.log( Level.INFO,
                  TomMessage.remove.getMessage(),
                  new Object[]{ new Integer(mult), extractRealName(varName) });
            }
            return tom_body;
          } else if(mult == 1) {
            list.clear();
            tom_make_computeOccurences(tom_name,list).apply(tom_exp);
            if(tom_let.isLetRef() && expConstantInBody(tom_exp,tom_body) && list.size()==0) {
              if(varName.length() > 0) {
                logger.log( Level.INFO,
                    TomMessage.inline.getMessage(),
                    new Object[]{ new Integer(mult), extractRealName(varName) });
              }
              //System.out.println("replace1: " + `var + "\nby: " + `exp);
              return (Instruction) (MuTraveler.init(tom_make_inlineInstruction(tom_name,tom_exp)).visit(tom_body));
            } else {
              if(varName.length() > 0) {
                logger.log( Level.INFO,
                    TomMessage.noInline.getMessage(),
                    new Object[]{ new Integer(mult), extractRealName(varName) });
              }
            }
          } else {
            /* do nothing: traversal() */
            if(varName.length() > 0) {
              logger.log( Level.INFO,
                  TomMessage.doNothing.getMessage(),
                  new Object[]{ new Integer(mult), extractRealName(varName) });
            }
          }
         } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_Let(tomMatch8Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch8Position1NameNumberVariable=tom_get_slot_Let_Variable(tomMatch8Position1); if ( ( tom_is_fun_sym_UnamedVariableStar(tomMatch8Position1NameNumberVariable) ||  ( tom_is_fun_sym_UnamedVariable(tomMatch8Position1NameNumberVariable) ||  false  )  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_body=tom_get_slot_Let_AstInstruction(tomMatch8Position1); if ( true ) {



          return tom_body; 
         } } } } } if ( ( tom_is_fun_sym_Let(tomMatch8Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch8Position1NameNumberVariable=tom_get_slot_Let_Variable(tomMatch8Position1); {boolean tomNameNumberboolMatch8Position1NameNumberVariable= false ; { tom.engine.adt.tomname.types.TomName  tomMatch8Position1NameNumberVariableNameNumberAstName= null ; if (tom_is_fun_sym_Variable(tomMatch8Position1NameNumberVariable)) {tomNameNumberboolMatch8Position1NameNumberVariable= true ;tomMatch8Position1NameNumberVariableNameNumberAstName=tom_get_slot_Variable_AstName(tomMatch8Position1NameNumberVariable); } else { if (tom_is_fun_sym_VariableStar(tomMatch8Position1NameNumberVariable)) {tomNameNumberboolMatch8Position1NameNumberVariable= true ;tomMatch8Position1NameNumberVariableNameNumberAstName=tom_get_slot_VariableStar_AstName(tomMatch8Position1NameNumberVariable); } } if (tomNameNumberboolMatch8Position1NameNumberVariable) { { tom.engine.adt.tomname.types.TomName  tom_name=tomMatch8Position1NameNumberVariableNameNumberAstName; { tom.engine.adt.tomterm.types.TomTerm  tom_var=tomMatch8Position1NameNumberVariable; { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_Let_Source(tomMatch8Position1); { tom.engine.adt.tominstruction.types.Instruction  tom_body=tom_get_slot_Let_AstInstruction(tomMatch8Position1); { tom.engine.adt.tominstruction.types.Instruction  tom_let=tomMatch8Position1; if ( true ) {


          String varName = "";
           if (tom_is_sort_TomName(tom_name)) { { tom.engine.adt.tomname.types.TomName  tomMatch10Position1=(( tom.engine.adt.tomname.types.TomName )tom_name); if ( ( tom_is_fun_sym_Name(tomMatch10Position1) ||  false  ) ) { { String  tom_tomName=tom_get_slot_Name_String(tomMatch10Position1); if ( true ) {
 varName = tom_tomName;  } } } } }

          ArrayList list  = new ArrayList();
          MuTraveler.init(tom_make_computeOccurences(tom_name,list)).visit(tom_body);
          int mult = list.size();

          //System.out.println("name: " + `name);
          if(mult == 0) {
            if(varName.length() > 0) {
              Option orgTrack = findOriginTracking(tom_var.getOption());
	      TomMessage.warning(logger,orgTrack.getFileName(), orgTrack.getLine(),
		  TomMessage.unusedVariable,extractRealName(varName));
              logger.log( Level.INFO,
                  TomMessage.remove.getMessage(),
                  new Object[]{ new Integer(mult), extractRealName(varName) });
            }
            //System.out.println("elim2: " + `var);
            //System.out.println("let: " + `let);
            return tom_body; 
          } else if(mult == 1) {
            if(expConstantInBody(tom_exp,tom_body)) {
              if(varName.length() > 0) {
                logger.log( Level.INFO,
                    TomMessage.inline.getMessage(),
                    new Object[]{ new Integer(mult), extractRealName(varName) });
              }
              // System.out.println("replace2: " + `var + "\nby: " + `exp);
              return (Instruction) (MuTraveler.init(tom_make_inlineInstruction(tom_name,tom_exp)).visit(tom_body));
            } else {
              if(varName.length() > 0) {
                logger.log( Level.INFO,
                    TomMessage.noInline.getMessage(),
                    new Object[]{ new Integer(mult), extractRealName(varName) });
              }
            }
          } else {
            /* do nothing: traversal() */
            if(varName.length() > 0) {
              logger.log( Level.INFO,
                  TomMessage.doNothing.getMessage(),
                  new Object[]{ new Integer(mult), extractRealName(varName) });
            }
          }
         } } } } } } } } } } } } } return super.visit_Instruction(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_RewriteSystem1() { return new RewriteSystem1(); } private static class NopElimAndFlatten  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { public NopElimAndFlatten( ) { super(tom_make_Identity() ); } public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction(  tom.engine.adt.tominstruction.types.Instruction  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Instruction(tom__arg)) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch11Position1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg); if ( ( tom_is_fun_sym_AbstractBlock(tomMatch11Position1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstList=tom_get_slot_AbstractBlock_InstList(tomMatch11Position1); if ( ( tom_is_fun_sym_concInstruction(tomMatch11Position1NameNumberInstList) ||  false  ) ) { {int tomMatch11Position1NameNumberInstListIndex1=0; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstListList1=tomMatch11Position1NameNumberInstList; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstListBegin1=tomMatch11Position1NameNumberInstListList1; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstListEnd1=tomMatch11Position1NameNumberInstListList1; { while (!(tom_is_empty_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListEnd1))) {tomMatch11Position1NameNumberInstListList1=tomMatch11Position1NameNumberInstListEnd1; { { tom.engine.adt.tominstruction.types.InstructionList  tom_C1=tom_get_slice_concInstruction(tomMatch11Position1NameNumberInstListBegin1,tomMatch11Position1NameNumberInstListEnd1); { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstListSave2=tomMatch11Position1NameNumberInstListList1; { { tom.engine.adt.tominstruction.types.Instruction  tomMatch11Position1NameNumberInstListPosition2=tom_get_head_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListList1);tomMatch11Position1NameNumberInstListIndex1=tomMatch11Position1NameNumberInstListIndex1 + 1;tomMatch11Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListList1); if ( ( tom_is_fun_sym_AbstractBlock(tomMatch11Position1NameNumberInstListPosition2) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tom_L1=tom_get_slot_AbstractBlock_InstList(tomMatch11Position1NameNumberInstListPosition2); { tom.engine.adt.tominstruction.types.InstructionList  tom_C2=tomMatch11Position1NameNumberInstListList1; if ( true ) {








          logger.log( Level.INFO, TomMessage.tomOptimizationType.getMessage(),
              "flatten");     
          return tom_make_AbstractBlock(tom_append_list_concInstruction(tom_C1,tom_append_list_concInstruction(tom_L1,tom_append_list_concInstruction(tom_C2,tom_empty_list_concInstruction()))));
         } } } } }tomMatch11Position1NameNumberInstListList1=tomMatch11Position1NameNumberInstListSave2; } } }tomMatch11Position1NameNumberInstListEnd1=tom_get_tail_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListEnd1); } }tomMatch11Position1NameNumberInstListList1=tomMatch11Position1NameNumberInstListBegin1; } } } } } } } } if ( ( tom_is_fun_sym_AbstractBlock(tomMatch11Position1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstList=tom_get_slot_AbstractBlock_InstList(tomMatch11Position1); if ( ( tom_is_fun_sym_concInstruction(tomMatch11Position1NameNumberInstList) ||  false  ) ) { {int tomMatch11Position1NameNumberInstListIndex1=0; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstListList1=tomMatch11Position1NameNumberInstList; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstListBegin1=tomMatch11Position1NameNumberInstListList1; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstListEnd1=tomMatch11Position1NameNumberInstListList1; { while (!(tom_is_empty_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListEnd1))) {tomMatch11Position1NameNumberInstListList1=tomMatch11Position1NameNumberInstListEnd1; { { tom.engine.adt.tominstruction.types.InstructionList  tom_C1=tom_get_slice_concInstruction(tomMatch11Position1NameNumberInstListBegin1,tomMatch11Position1NameNumberInstListEnd1); { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstListSave2=tomMatch11Position1NameNumberInstListList1; { { tom.engine.adt.tominstruction.types.Instruction  tomMatch11Position1NameNumberInstListPosition2=tom_get_head_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListList1);tomMatch11Position1NameNumberInstListIndex1=tomMatch11Position1NameNumberInstListIndex1 + 1;tomMatch11Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListList1); if ( ( tom_is_fun_sym_Nop(tomMatch11Position1NameNumberInstListPosition2) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tom_C2=tomMatch11Position1NameNumberInstListList1; if ( true ) {


          logger.log( Level.INFO, TomMessage.tomOptimizationType.getMessage(),
              "nop-elim");     
          return tom_make_AbstractBlock(tom_append_list_concInstruction(tom_C1,tom_append_list_concInstruction(tom_C2,tom_empty_list_concInstruction())));
         } } } }tomMatch11Position1NameNumberInstListList1=tomMatch11Position1NameNumberInstListSave2; } } }tomMatch11Position1NameNumberInstListEnd1=tom_get_tail_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListEnd1); } }tomMatch11Position1NameNumberInstListList1=tomMatch11Position1NameNumberInstListBegin1; } } } } } } } } if ( ( tom_is_fun_sym_AbstractBlock(tomMatch11Position1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstList=tom_get_slot_AbstractBlock_InstList(tomMatch11Position1); if ( ( tom_is_fun_sym_concInstruction(tomMatch11Position1NameNumberInstList) ||  false  ) ) { {int tomMatch11Position1NameNumberInstListIndex1=0; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstListList1=tomMatch11Position1NameNumberInstList; if (tom_is_empty_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListList1)) { if ( true ) {


          logger.log( Level.INFO, TomMessage.tomOptimizationType.getMessage(),
              "abstractblock-elim1");     
          return tom_make_Nop();
         } } } } } } } if ( ( tom_is_fun_sym_AbstractBlock(tomMatch11Position1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstList=tom_get_slot_AbstractBlock_InstList(tomMatch11Position1); if ( ( tom_is_fun_sym_concInstruction(tomMatch11Position1NameNumberInstList) ||  false  ) ) { {int tomMatch11Position1NameNumberInstListIndex1=0; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstListList1=tomMatch11Position1NameNumberInstList; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch11Position1NameNumberInstListSave1=tomMatch11Position1NameNumberInstListList1; { if (!(tom_is_empty_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListList1))) { { tom.engine.adt.tominstruction.types.Instruction  tom_i=tom_get_head_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListList1);tomMatch11Position1NameNumberInstListIndex1=tomMatch11Position1NameNumberInstListIndex1 + 1;tomMatch11Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListList1); if (tom_is_empty_concInstruction_InstructionList(tomMatch11Position1NameNumberInstListList1)) { if ( true ) {


          logger.log( Level.INFO, TomMessage.tomOptimizationType.getMessage(),
              "abstractblock-elim2");     
          return tom_i;
         } } } }tomMatch11Position1NameNumberInstListList1=tomMatch11Position1NameNumberInstListSave1; } } } } } } } } } return super.visit_Instruction(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_NopElimAndFlatten() { return new NopElimAndFlatten(); } private static class IfSwapping  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { public IfSwapping( ) { super(tom_make_Identity() ); } public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction(  tom.engine.adt.tominstruction.types.Instruction  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Instruction(tom__arg)) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch12Position1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg); if ( ( tom_is_fun_sym_AbstractBlock(tomMatch12Position1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tomMatch12Position1NameNumberInstList=tom_get_slot_AbstractBlock_InstList(tomMatch12Position1); if ( ( tom_is_fun_sym_concInstruction(tomMatch12Position1NameNumberInstList) ||  false  ) ) { {int tomMatch12Position1NameNumberInstListIndex1=0; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch12Position1NameNumberInstListList1=tomMatch12Position1NameNumberInstList; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch12Position1NameNumberInstListBegin1=tomMatch12Position1NameNumberInstListList1; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch12Position1NameNumberInstListEnd1=tomMatch12Position1NameNumberInstListList1; { while (!(tom_is_empty_concInstruction_InstructionList(tomMatch12Position1NameNumberInstListEnd1))) {tomMatch12Position1NameNumberInstListList1=tomMatch12Position1NameNumberInstListEnd1; { { tom.engine.adt.tominstruction.types.InstructionList  tom_X1=tom_get_slice_concInstruction(tomMatch12Position1NameNumberInstListBegin1,tomMatch12Position1NameNumberInstListEnd1); { tom.engine.adt.tominstruction.types.InstructionList  tomMatch12Position1NameNumberInstListSave2=tomMatch12Position1NameNumberInstListList1; { { tom.engine.adt.tominstruction.types.Instruction  tomMatch12Position1NameNumberInstListPosition2=tom_get_head_concInstruction_InstructionList(tomMatch12Position1NameNumberInstListList1);tomMatch12Position1NameNumberInstListIndex1=tomMatch12Position1NameNumberInstListIndex1 + 1;tomMatch12Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch12Position1NameNumberInstListList1); if ( ( tom_is_fun_sym_If(tomMatch12Position1NameNumberInstListPosition2) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_cond1=tom_get_slot_If_Condition(tomMatch12Position1NameNumberInstListPosition2); if ( ( tom_is_fun_sym_Nop(tom_get_slot_If_FailureInst(tomMatch12Position1NameNumberInstListPosition2)) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_I1=tomMatch12Position1NameNumberInstListPosition2; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch12Position1NameNumberInstListSave3=tomMatch12Position1NameNumberInstListList1; { if (!(tom_is_empty_concInstruction_InstructionList(tomMatch12Position1NameNumberInstListList1))) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch12Position1NameNumberInstListPosition3=tom_get_head_concInstruction_InstructionList(tomMatch12Position1NameNumberInstListList1);tomMatch12Position1NameNumberInstListIndex1=tomMatch12Position1NameNumberInstListIndex1 + 1;tomMatch12Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch12Position1NameNumberInstListList1); if ( ( tom_is_fun_sym_If(tomMatch12Position1NameNumberInstListPosition3) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_cond2=tom_get_slot_If_Condition(tomMatch12Position1NameNumberInstListPosition3); if ( ( tom_is_fun_sym_Nop(tom_get_slot_If_FailureInst(tomMatch12Position1NameNumberInstListPosition3)) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_I2=tomMatch12Position1NameNumberInstListPosition3; { tom.engine.adt.tominstruction.types.InstructionList  tom_X2=tomMatch12Position1NameNumberInstListList1; if ( true ) {








          String s1 = factory.prettyPrint(factory.remove(tom_cond1));
          String s2 = factory.prettyPrint(factory.remove(tom_cond2));

          if(s1.compareTo(s2) < 0) {
            Expression compatible = (Expression) tom_make_InnermostId(tom_make_NormExpr()).visit(tom_make_And(tom_cond1,tom_cond2));
            if(compatible==tom_make_FalseTL()) {
              logger.log( Level.INFO, TomMessage.tomOptimizationType.getMessage(),
                  new Object[]{"if-swapping"});     
              return tom_make_AbstractBlock(tom_append_list_concInstruction(tom_X1,tom_cons_list_concInstruction(tom_I2,tom_cons_list_concInstruction(tom_I1,tom_append_list_concInstruction(tom_X2,tom_empty_list_concInstruction())))));
            }
          }
         } } } } } } } }tomMatch12Position1NameNumberInstListList1=tomMatch12Position1NameNumberInstListSave3; } } } } } } }tomMatch12Position1NameNumberInstListList1=tomMatch12Position1NameNumberInstListSave2; } } }tomMatch12Position1NameNumberInstListEnd1=tom_get_tail_concInstruction_InstructionList(tomMatch12Position1NameNumberInstListEnd1); } }tomMatch12Position1NameNumberInstListList1=tomMatch12Position1NameNumberInstListBegin1; } } } } } } } } } } return super.visit_Instruction(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_IfSwapping() { return new IfSwapping(); } private static class BlockFusion  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { public BlockFusion( ) { super(tom_make_Identity() ); } public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction(  tom.engine.adt.tominstruction.types.Instruction  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Instruction(tom__arg)) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch13Position1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg); if ( ( tom_is_fun_sym_AbstractBlock(tomMatch13Position1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tomMatch13Position1NameNumberInstList=tom_get_slot_AbstractBlock_InstList(tomMatch13Position1); if ( ( tom_is_fun_sym_concInstruction(tomMatch13Position1NameNumberInstList) ||  false  ) ) { {int tomMatch13Position1NameNumberInstListIndex1=0; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch13Position1NameNumberInstListList1=tomMatch13Position1NameNumberInstList; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch13Position1NameNumberInstListBegin1=tomMatch13Position1NameNumberInstListList1; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch13Position1NameNumberInstListEnd1=tomMatch13Position1NameNumberInstListList1; { while (!(tom_is_empty_concInstruction_InstructionList(tomMatch13Position1NameNumberInstListEnd1))) {tomMatch13Position1NameNumberInstListList1=tomMatch13Position1NameNumberInstListEnd1; { { tom.engine.adt.tominstruction.types.InstructionList  tom_X1=tom_get_slice_concInstruction(tomMatch13Position1NameNumberInstListBegin1,tomMatch13Position1NameNumberInstListEnd1); { tom.engine.adt.tominstruction.types.InstructionList  tomMatch13Position1NameNumberInstListSave2=tomMatch13Position1NameNumberInstListList1; { { tom.engine.adt.tominstruction.types.Instruction  tomMatch13Position1NameNumberInstListPosition2=tom_get_head_concInstruction_InstructionList(tomMatch13Position1NameNumberInstListList1);tomMatch13Position1NameNumberInstListIndex1=tomMatch13Position1NameNumberInstListIndex1 + 1;tomMatch13Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch13Position1NameNumberInstListList1); if ( ( tom_is_fun_sym_Let(tomMatch13Position1NameNumberInstListPosition2) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch13Position1NameNumberInstListPosition2NameNumberVariable=tom_get_slot_Let_Variable(tomMatch13Position1NameNumberInstListPosition2); {boolean tomNameNumberboolMatch13Position1NameNumberInstListPosition2NameNumberVariable= false ; { tom.engine.adt.tomname.types.TomName  tomMatch13Position1NameNumberInstListPosition2NameNumberVariableNameNumberAstName= null ; if (tom_is_fun_sym_Variable(tomMatch13Position1NameNumberInstListPosition2NameNumberVariable)) {tomNameNumberboolMatch13Position1NameNumberInstListPosition2NameNumberVariable= true ;tomMatch13Position1NameNumberInstListPosition2NameNumberVariableNameNumberAstName=tom_get_slot_Variable_AstName(tomMatch13Position1NameNumberInstListPosition2NameNumberVariable); } else { if (tom_is_fun_sym_VariableStar(tomMatch13Position1NameNumberInstListPosition2NameNumberVariable)) {tomNameNumberboolMatch13Position1NameNumberInstListPosition2NameNumberVariable= true ;tomMatch13Position1NameNumberInstListPosition2NameNumberVariableNameNumberAstName=tom_get_slot_VariableStar_AstName(tomMatch13Position1NameNumberInstListPosition2NameNumberVariable); } } if (tomNameNumberboolMatch13Position1NameNumberInstListPosition2NameNumberVariable) { { tom.engine.adt.tomname.types.TomName  tom_name1=tomMatch13Position1NameNumberInstListPosition2NameNumberVariableNameNumberAstName; { tom.engine.adt.tomterm.types.TomTerm  tom_var1=tomMatch13Position1NameNumberInstListPosition2NameNumberVariable; { tom.engine.adt.tomexpression.types.Expression  tom_term1=tom_get_slot_Let_Source(tomMatch13Position1NameNumberInstListPosition2); { tom.engine.adt.tominstruction.types.Instruction  tom_body1=tom_get_slot_Let_AstInstruction(tomMatch13Position1NameNumberInstListPosition2); { tom.engine.adt.tominstruction.types.InstructionList  tomMatch13Position1NameNumberInstListSave3=tomMatch13Position1NameNumberInstListList1; { if (!(tom_is_empty_concInstruction_InstructionList(tomMatch13Position1NameNumberInstListList1))) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch13Position1NameNumberInstListPosition3=tom_get_head_concInstruction_InstructionList(tomMatch13Position1NameNumberInstListList1);tomMatch13Position1NameNumberInstListIndex1=tomMatch13Position1NameNumberInstListIndex1 + 1;tomMatch13Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch13Position1NameNumberInstListList1); if ( ( tom_is_fun_sym_Let(tomMatch13Position1NameNumberInstListPosition3) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tomMatch13Position1NameNumberInstListPosition3NameNumberVariable=tom_get_slot_Let_Variable(tomMatch13Position1NameNumberInstListPosition3); {boolean tomNameNumberboolMatch13Position1NameNumberInstListPosition3NameNumberVariable= false ; { tom.engine.adt.tomname.types.TomName  tomMatch13Position1NameNumberInstListPosition3NameNumberVariableNameNumberAstName= null ; if (tom_is_fun_sym_Variable(tomMatch13Position1NameNumberInstListPosition3NameNumberVariable)) {tomNameNumberboolMatch13Position1NameNumberInstListPosition3NameNumberVariable= true ;tomMatch13Position1NameNumberInstListPosition3NameNumberVariableNameNumberAstName=tom_get_slot_Variable_AstName(tomMatch13Position1NameNumberInstListPosition3NameNumberVariable); } else { if (tom_is_fun_sym_VariableStar(tomMatch13Position1NameNumberInstListPosition3NameNumberVariable)) {tomNameNumberboolMatch13Position1NameNumberInstListPosition3NameNumberVariable= true ;tomMatch13Position1NameNumberInstListPosition3NameNumberVariableNameNumberAstName=tom_get_slot_VariableStar_AstName(tomMatch13Position1NameNumberInstListPosition3NameNumberVariable); } } if (tomNameNumberboolMatch13Position1NameNumberInstListPosition3NameNumberVariable) { { tom.engine.adt.tomname.types.TomName  tom_name2=tomMatch13Position1NameNumberInstListPosition3NameNumberVariableNameNumberAstName; { tom.engine.adt.tomterm.types.TomTerm  tom_var2=tomMatch13Position1NameNumberInstListPosition3NameNumberVariable; { tom.engine.adt.tomexpression.types.Expression  tom_term2=tom_get_slot_Let_Source(tomMatch13Position1NameNumberInstListPosition3); { tom.engine.adt.tominstruction.types.Instruction  tom_body2=tom_get_slot_Let_AstInstruction(tomMatch13Position1NameNumberInstListPosition3); { tom.engine.adt.tominstruction.types.InstructionList  tom_X2=tomMatch13Position1NameNumberInstListList1; if ( true ) {






          /* Fusion de 2 blocs Let contigus instanciant deux variables egales */
          if(compare(tom_term1,tom_term2)) {
            if(compare(tom_var1,tom_var2)) {
              logger.log( Level.INFO, TomMessage.tomOptimizationType.getMessage(),
                  new Object[]{"block-fusion1"});     
              return tom_make_AbstractBlock(tom_append_list_concInstruction(tom_X1,tom_cons_list_concInstruction(tom_make_Let(tom_var1,tom_term1,tom_make_AbstractBlock(tom_cons_list_concInstruction(tom_body1,tom_cons_list_concInstruction(tom_body2,tom_empty_list_concInstruction())))),tom_append_list_concInstruction(tom_X2,tom_empty_list_concInstruction()))));
            } else {
              ArrayList list  = new ArrayList();
              tom_make_computeOccurences(tom_name1,list).visit(tom_body2);
              int mult = list.size();
              if(mult==0){
                logger.log( Level.INFO, TomMessage.tomOptimizationType.getMessage(),
                    new Object[]{"block-fusion2"});    
                Instruction newBody2 =  (Instruction)(MuTraveler.init(tom_make_renameVariable(tom_name2,tom_name1)).visit(tom_body2));
                return tom_make_AbstractBlock(tom_append_list_concInstruction(tom_X1,tom_cons_list_concInstruction(tom_make_Let(tom_var1,tom_term1,tom_make_AbstractBlock(tom_cons_list_concInstruction(tom_body1,tom_cons_list_concInstruction(newBody2,tom_empty_list_concInstruction())))),tom_append_list_concInstruction(tom_X2,tom_empty_list_concInstruction()))));
              }
            }
          }
         } } } } } } } } } } } } }tomMatch13Position1NameNumberInstListList1=tomMatch13Position1NameNumberInstListSave3; } } } } } } } } } } } }tomMatch13Position1NameNumberInstListList1=tomMatch13Position1NameNumberInstListSave2; } } }tomMatch13Position1NameNumberInstListEnd1=tom_get_tail_concInstruction_InstructionList(tomMatch13Position1NameNumberInstListEnd1); } }tomMatch13Position1NameNumberInstListList1=tomMatch13Position1NameNumberInstListBegin1; } } } } } } } } } } return super.visit_Instruction(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_BlockFusion() { return new BlockFusion(); } private static class IfFusion  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { public IfFusion( ) { super(tom_make_Identity() ); } public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction(  tom.engine.adt.tominstruction.types.Instruction  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Instruction(tom__arg)) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch14Position1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg); if ( ( tom_is_fun_sym_AbstractBlock(tomMatch14Position1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tomMatch14Position1NameNumberInstList=tom_get_slot_AbstractBlock_InstList(tomMatch14Position1); if ( ( tom_is_fun_sym_concInstruction(tomMatch14Position1NameNumberInstList) ||  false  ) ) { {int tomMatch14Position1NameNumberInstListIndex1=0; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch14Position1NameNumberInstListList1=tomMatch14Position1NameNumberInstList; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch14Position1NameNumberInstListBegin1=tomMatch14Position1NameNumberInstListList1; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch14Position1NameNumberInstListEnd1=tomMatch14Position1NameNumberInstListList1; { while (!(tom_is_empty_concInstruction_InstructionList(tomMatch14Position1NameNumberInstListEnd1))) {tomMatch14Position1NameNumberInstListList1=tomMatch14Position1NameNumberInstListEnd1; { { tom.engine.adt.tominstruction.types.InstructionList  tom_X1=tom_get_slice_concInstruction(tomMatch14Position1NameNumberInstListBegin1,tomMatch14Position1NameNumberInstListEnd1); { tom.engine.adt.tominstruction.types.InstructionList  tomMatch14Position1NameNumberInstListSave2=tomMatch14Position1NameNumberInstListList1; { { tom.engine.adt.tominstruction.types.Instruction  tomMatch14Position1NameNumberInstListPosition2=tom_get_head_concInstruction_InstructionList(tomMatch14Position1NameNumberInstListList1);tomMatch14Position1NameNumberInstListIndex1=tomMatch14Position1NameNumberInstListIndex1 + 1;tomMatch14Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch14Position1NameNumberInstListList1); if ( ( tom_is_fun_sym_If(tomMatch14Position1NameNumberInstListPosition2) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_cond1=tom_get_slot_If_Condition(tomMatch14Position1NameNumberInstListPosition2); { tom.engine.adt.tominstruction.types.Instruction  tom_success1=tom_get_slot_If_SuccesInst(tomMatch14Position1NameNumberInstListPosition2); { tom.engine.adt.tominstruction.types.Instruction  tom_failure1=tom_get_slot_If_FailureInst(tomMatch14Position1NameNumberInstListPosition2); { tom.engine.adt.tominstruction.types.InstructionList  tomMatch14Position1NameNumberInstListSave3=tomMatch14Position1NameNumberInstListList1; { if (!(tom_is_empty_concInstruction_InstructionList(tomMatch14Position1NameNumberInstListList1))) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch14Position1NameNumberInstListPosition3=tom_get_head_concInstruction_InstructionList(tomMatch14Position1NameNumberInstListList1);tomMatch14Position1NameNumberInstListIndex1=tomMatch14Position1NameNumberInstListIndex1 + 1;tomMatch14Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch14Position1NameNumberInstListList1); if ( ( tom_is_fun_sym_If(tomMatch14Position1NameNumberInstListPosition3) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_cond2=tom_get_slot_If_Condition(tomMatch14Position1NameNumberInstListPosition3); { tom.engine.adt.tominstruction.types.Instruction  tom_success2=tom_get_slot_If_SuccesInst(tomMatch14Position1NameNumberInstListPosition3); { tom.engine.adt.tominstruction.types.Instruction  tom_failure2=tom_get_slot_If_FailureInst(tomMatch14Position1NameNumberInstListPosition3); { tom.engine.adt.tominstruction.types.InstructionList  tom_X2=tomMatch14Position1NameNumberInstListList1; if ( true ) {






          /* Fusion de 2 blocs If gardes par la meme condition */
          if(compare(tom_cond1,tom_cond2)) {
            if(tom_failure1.isNop() && tom_failure2.isNop()) {
              logger.log( Level.INFO, TomMessage.tomOptimizationType.getMessage(),
                  new Object[]{"if-fusion1"});
              Instruction res = tom_make_AbstractBlock(tom_append_list_concInstruction(tom_X1,tom_cons_list_concInstruction(tom_make_If(tom_cond1,tom_make_AbstractBlock(tom_cons_list_concInstruction(tom_success1,tom_cons_list_concInstruction(tom_success2,tom_empty_list_concInstruction()))),tom_make_Nop()),tom_append_list_concInstruction(tom_X2,tom_empty_list_concInstruction()))));
              //System.out.println(res);

              return res;
            } else {
              logger.log( Level.INFO, TomMessage.tomOptimizationType.getMessage(),
                  new Object[]{ "if-fusion2"});
              return tom_make_AbstractBlock(tom_append_list_concInstruction(tom_X1,tom_cons_list_concInstruction(tom_make_If(tom_cond1,tom_make_AbstractBlock(tom_cons_list_concInstruction(tom_success1,tom_cons_list_concInstruction(tom_success2,tom_empty_list_concInstruction()))),tom_make_AbstractBlock(tom_cons_list_concInstruction(tom_failure1,tom_cons_list_concInstruction(tom_failure2,tom_empty_list_concInstruction())))),tom_append_list_concInstruction(tom_X2,tom_empty_list_concInstruction()))));
            }
          }
         } } } } } } } }tomMatch14Position1NameNumberInstListList1=tomMatch14Position1NameNumberInstListSave3; } } } } } } }tomMatch14Position1NameNumberInstListList1=tomMatch14Position1NameNumberInstListSave2; } } }tomMatch14Position1NameNumberInstListEnd1=tom_get_tail_concInstruction_InstructionList(tomMatch14Position1NameNumberInstListEnd1); } }tomMatch14Position1NameNumberInstListList1=tomMatch14Position1NameNumberInstListBegin1; } } } } } } } } } } return super.visit_Instruction(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_IfFusion() { return new IfFusion(); } private static class InterBlock  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { public InterBlock( ) { super(tom_make_Identity() ); } public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tominstruction.types.Instruction  visit_Instruction(  tom.engine.adt.tominstruction.types.Instruction  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Instruction(tom__arg)) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch15Position1=(( tom.engine.adt.tominstruction.types.Instruction )tom__arg); if ( ( tom_is_fun_sym_AbstractBlock(tomMatch15Position1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tomMatch15Position1NameNumberInstList=tom_get_slot_AbstractBlock_InstList(tomMatch15Position1); if ( ( tom_is_fun_sym_concInstruction(tomMatch15Position1NameNumberInstList) ||  false  ) ) { {int tomMatch15Position1NameNumberInstListIndex1=0; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch15Position1NameNumberInstListList1=tomMatch15Position1NameNumberInstList; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch15Position1NameNumberInstListBegin1=tomMatch15Position1NameNumberInstListList1; { tom.engine.adt.tominstruction.types.InstructionList  tomMatch15Position1NameNumberInstListEnd1=tomMatch15Position1NameNumberInstListList1; { while (!(tom_is_empty_concInstruction_InstructionList(tomMatch15Position1NameNumberInstListEnd1))) {tomMatch15Position1NameNumberInstListList1=tomMatch15Position1NameNumberInstListEnd1; { { tom.engine.adt.tominstruction.types.InstructionList  tom_X1=tom_get_slice_concInstruction(tomMatch15Position1NameNumberInstListBegin1,tomMatch15Position1NameNumberInstListEnd1); { tom.engine.adt.tominstruction.types.InstructionList  tomMatch15Position1NameNumberInstListSave2=tomMatch15Position1NameNumberInstListList1; { { tom.engine.adt.tominstruction.types.Instruction  tomMatch15Position1NameNumberInstListPosition2=tom_get_head_concInstruction_InstructionList(tomMatch15Position1NameNumberInstListList1);tomMatch15Position1NameNumberInstListIndex1=tomMatch15Position1NameNumberInstListIndex1 + 1;tomMatch15Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch15Position1NameNumberInstListList1); if ( ( tom_is_fun_sym_If(tomMatch15Position1NameNumberInstListPosition2) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_cond1=tom_get_slot_If_Condition(tomMatch15Position1NameNumberInstListPosition2); { tom.engine.adt.tominstruction.types.Instruction  tom_suc1=tom_get_slot_If_SuccesInst(tomMatch15Position1NameNumberInstListPosition2); { tom.engine.adt.tominstruction.types.Instruction  tom_fail1=tom_get_slot_If_FailureInst(tomMatch15Position1NameNumberInstListPosition2); { tom.engine.adt.tominstruction.types.InstructionList  tomMatch15Position1NameNumberInstListSave3=tomMatch15Position1NameNumberInstListList1; { if (!(tom_is_empty_concInstruction_InstructionList(tomMatch15Position1NameNumberInstListList1))) { { tom.engine.adt.tominstruction.types.Instruction  tomMatch15Position1NameNumberInstListPosition3=tom_get_head_concInstruction_InstructionList(tomMatch15Position1NameNumberInstListList1);tomMatch15Position1NameNumberInstListIndex1=tomMatch15Position1NameNumberInstListIndex1 + 1;tomMatch15Position1NameNumberInstListList1=tom_get_tail_concInstruction_InstructionList(tomMatch15Position1NameNumberInstListList1); if ( ( tom_is_fun_sym_If(tomMatch15Position1NameNumberInstListPosition3) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_cond2=tom_get_slot_If_Condition(tomMatch15Position1NameNumberInstListPosition3); { tom.engine.adt.tominstruction.types.Instruction  tom_suc2=tom_get_slot_If_SuccesInst(tomMatch15Position1NameNumberInstListPosition3); if ( ( tom_is_fun_sym_Nop(tom_get_slot_If_FailureInst(tomMatch15Position1NameNumberInstListPosition3)) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tom_X2=tomMatch15Position1NameNumberInstListList1; if ( true ) {







          Expression compatible = (Expression) tom_make_InnermostId(tom_make_NormExpr()).visit(tom_make_And(tom_cond1,tom_cond2));
          if(compatible==tom_make_FalseTL()) {
            logger.log( Level.INFO, TomMessage.tomOptimizationType.getMessage(),
                new Object[]{"inter-block"});
            return tom_make_AbstractBlock(tom_append_list_concInstruction(tom_X1,tom_cons_list_concInstruction(tom_make_If(tom_cond1,tom_suc1,tom_make_AbstractBlock(tom_cons_list_concInstruction(tom_fail1,tom_cons_list_concInstruction(tom_make_If(tom_cond2,tom_suc2,tom_make_Nop()),tom_empty_list_concInstruction())))),tom_append_list_concInstruction(tom_X2,tom_empty_list_concInstruction()))));

          }  
         } } } } } } } }tomMatch15Position1NameNumberInstListList1=tomMatch15Position1NameNumberInstListSave3; } } } } } } }tomMatch15Position1NameNumberInstListList1=tomMatch15Position1NameNumberInstListSave2; } } }tomMatch15Position1NameNumberInstListEnd1=tom_get_tail_concInstruction_InstructionList(tomMatch15Position1NameNumberInstListEnd1); } }tomMatch15Position1NameNumberInstListList1=tomMatch15Position1NameNumberInstListBegin1; } } } } } } } } } } return super.visit_Instruction(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_InterBlock() { return new InterBlock(); } private static class NormExpr  extends  tom.engine.adt.tomsignature.TomSignatureBasicStrategy   { public NormExpr( ) { super(tom_make_Identity() ); } public int getChildCount() { return 1; } public jjtraveler.Visitable getChildAt(int i) { switch (i) { case 0: return super.getChildAt(0); default: throw new IndexOutOfBoundsException(); }} public jjtraveler.Visitable setChildAt(int i, jjtraveler.Visitable child) { switch (i) { case 0: return super.setChildAt(0, child); default: throw new IndexOutOfBoundsException(); }} public  tom.engine.adt.tomexpression.types.Expression  visit_Expression(  tom.engine.adt.tomexpression.types.Expression  tom__arg )  throws jjtraveler.VisitFailure { if (tom_is_sort_Expression(tom__arg)) { { tom.engine.adt.tomexpression.types.Expression  tomMatch16Position1=(( tom.engine.adt.tomexpression.types.Expression )tom__arg); if ( ( tom_is_fun_sym_Or(tomMatch16Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_TrueTL(tom_get_slot_Or_Arg2(tomMatch16Position1)) ||  false  ) ) { if ( true ) {






          return tom_make_TrueTL();
         } } } if ( ( tom_is_fun_sym_Or(tomMatch16Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_TrueTL(tom_get_slot_Or_Arg1(tomMatch16Position1)) ||  false  ) ) { if ( true ) {

          return tom_make_TrueTL();
         } } } if ( ( tom_is_fun_sym_Or(tomMatch16Position1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_t1=tom_get_slot_Or_Arg1(tomMatch16Position1); if ( ( tom_is_fun_sym_FalseTL(tom_get_slot_Or_Arg2(tomMatch16Position1)) ||  false  ) ) { if ( true ) {

          return tom_t1;
         } } } } if ( ( tom_is_fun_sym_Or(tomMatch16Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_FalseTL(tom_get_slot_Or_Arg1(tomMatch16Position1)) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_t1=tom_get_slot_Or_Arg2(tomMatch16Position1); if ( true ) {

          return tom_t1;
         } } } } if ( ( tom_is_fun_sym_And(tomMatch16Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_TrueTL(tom_get_slot_And_Arg1(tomMatch16Position1)) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_t1=tom_get_slot_And_Arg2(tomMatch16Position1); if ( true ) {

          return tom_t1;
         } } } } if ( ( tom_is_fun_sym_And(tomMatch16Position1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_t1=tom_get_slot_And_Arg1(tomMatch16Position1); if ( ( tom_is_fun_sym_TrueTL(tom_get_slot_And_Arg2(tomMatch16Position1)) ||  false  ) ) { if ( true ) {

          return tom_t1;
         } } } } if ( ( tom_is_fun_sym_And(tomMatch16Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_FalseTL(tom_get_slot_And_Arg1(tomMatch16Position1)) ||  false  ) ) { if ( true ) {

          return tom_make_FalseTL();
         } } } if ( ( tom_is_fun_sym_And(tomMatch16Position1) ||  false  ) ) { if ( ( tom_is_fun_sym_TrueTL(tom_get_slot_And_Arg1(tomMatch16Position1)) ||  false  ) ) { if ( true ) {

          return tom_make_FalseTL();
         } } } if ( ( tom_is_fun_sym_EqualTerm(tomMatch16Position1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_kid1=tom_get_slot_EqualTerm_Kid1(tomMatch16Position1); { tom.engine.adt.tomterm.types.TomTerm  tom_kid2=tom_get_slot_EqualTerm_Kid2(tomMatch16Position1); { tom.engine.adt.tomexpression.types.Expression  tom_ref=tomMatch16Position1; if ( true ) {

//System.out.println("kid1 = " + `kid1);
//System.out.println("kid2 = " + `kid2);
          if(compare(tom_kid1,tom_kid2)){
            return tom_make_TrueTL();
          } else {
            return tom_ref;
          }
         } } } } } if ( ( tom_is_fun_sym_And(tomMatch16Position1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tomMatch16Position1NameNumberArg1=tom_get_slot_And_Arg1(tomMatch16Position1); { tom.engine.adt.tomexpression.types.Expression  tomMatch16Position1NameNumberArg2=tom_get_slot_And_Arg2(tomMatch16Position1); if ( ( tom_is_fun_sym_EqualFunctionSymbol(tomMatch16Position1NameNumberArg1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_astType=tom_get_slot_EqualFunctionSymbol_AstType(tomMatch16Position1NameNumberArg1); { tom.engine.adt.tomterm.types.TomTerm  tom_exp=tom_get_slot_EqualFunctionSymbol_Exp1(tomMatch16Position1NameNumberArg1); { tom.engine.adt.tomterm.types.TomTerm  tom_exp1=tom_get_slot_EqualFunctionSymbol_Exp2(tomMatch16Position1NameNumberArg1); if ( ( tom_is_fun_sym_EqualFunctionSymbol(tomMatch16Position1NameNumberArg2) ||  false  ) ) { if (tom_equal_term_TomType(tom_astType, tom_get_slot_EqualFunctionSymbol_AstType(tomMatch16Position1NameNumberArg2))) { if (tom_equal_term_TomTerm(tom_exp, tom_get_slot_EqualFunctionSymbol_Exp1(tomMatch16Position1NameNumberArg2))) { { tom.engine.adt.tomterm.types.TomTerm  tom_exp2=tom_get_slot_EqualFunctionSymbol_Exp2(tomMatch16Position1NameNumberArg2); { tom.engine.adt.tomexpression.types.Expression  tom_ref=tomMatch16Position1; if ( true ) {

          TomNameList l1 = tom_exp1.getNameList();
          TomNameList l2 = tom_exp2.getNameList();
          if (tom_exp1.getNameList()==tom_exp2.getNameList()){
            return tom_make_EqualFunctionSymbol(tom_astType,tom_exp,tom_exp1);
          } else if(l1.length()==1 && l2.length()==1) {
            return tom_make_FalseTL();
          } else {
            return tom_ref;
          }
         } } } } } } } } } } } } } } } return super.visit_Expression(tom__arg) ;  } }private static  tom.library.strategy.mutraveler.MuStrategy  tom_make_NormExpr() { return new NormExpr(); }



  } // class TomOptimizer

/* Generated by TOM: Do not edit this file */ /*
  
    TOM - To One Matching Compiler

    Copyright (C) 2000-2004 INRIA
			    Nancy, France.

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA

    Pierre-Etienne Moreau	e-mail: Pierre-Etienne.Moreau@loria.fr

*/

package jtom.backend;

import aterm.*;

import java.io.IOException;

import jtom.adt.tomsignature.types.*;
import jtom.TomBase;
import jtom.tools.TomTaskInput;
import jtom.tools.OutputCode;
import jtom.exception.TomRuntimeException;
import jtom.TomEnvironment;

public abstract class TomAbstractGenerator extends TomBase {
  
  protected OutputCode output;
  protected TomTaskInput input;
  protected String debugKey;
  protected boolean debugMode = false, strictType = false,
    staticFunction = false, genDecl = false, pretty = false, verbose = false;

  public TomAbstractGenerator(TomEnvironment environment, OutputCode output, TomTaskInput input) {
    super(environment);
	  this.output = output;
    this.input = input;
		this.debugMode = input.isDebugMode();
		this.strictType = input.isStrictType();
		this.staticFunction = input.isStaticFunction();
		this.genDecl = input.isGenDecl();
		this.pretty = input.isPretty();
  }

// ------------------------------------------------------------
  /* Generated by TOM: Do not edit this file
// ------------------------------------------------------------

    /*
     * Generate the goal language
     */
 
  protected void generate(int deep, TomTerm subject)throws IOException {
     { TomTerm tom_match1_1 = ( TomTerm) subject;{ if(tom_is_fun_sym_Tom(tom_match1_1) ||  false ) { { TomList tom_match1_1_1 = ( TomList) tom_get_slot_Tom_tomList(tom_match1_1); { TomList l = ( TomList) tom_match1_1_1;

 
        generateList(deep,l);
        return;
      }} } if(tom_is_fun_sym_TomInclude(tom_match1_1) ||  false ) { { TomList tom_match1_1_1 = ( TomList) tom_get_slot_TomInclude_tomList(tom_match1_1); { TomList l = ( TomList) tom_match1_1_1;

 
        generateListInclude(deep,l);
        return;
      }} } if(tom_is_fun_sym_Ref(tom_match1_1) ||  false ) { { TomTerm tom_match1_1_1 = ( TomTerm) tom_get_slot_Ref_tomTerm(tom_match1_1); { TomTerm term = ( TomTerm) tom_match1_1_1;

 
        buildRef(deep, term);
        return;
      }} } if(tom_is_fun_sym_BuildVariable(tom_match1_1) ||  false ) { { TomName tom_match1_1_1 = ( TomName) tom_get_slot_BuildVariable_astName(tom_match1_1); if(tom_is_fun_sym_Name(tom_match1_1_1) ||  false ) { { String tom_match1_1_1_1 = ( String) tom_get_slot_Name_string(tom_match1_1_1); { String name = ( String) tom_match1_1_1_1;

 
        output.write(name);
        return;
      }} }} } if(tom_is_fun_sym_BuildVariable(tom_match1_1) ||  false ) { { TomName tom_match1_1_1 = ( TomName) tom_get_slot_BuildVariable_astName(tom_match1_1); if(tom_is_fun_sym_PositionName(tom_match1_1_1) ||  false ) { { TomNumberList tom_match1_1_1_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match1_1_1); { TomNumberList l1 = ( TomNumberList) tom_match1_1_1_1;

 
        output.write("tom" + numberListToIdentifier(l1));
        return;
      }} }} } if(tom_is_fun_sym_BuildTerm(tom_match1_1) ||  false ) { { TomName tom_match1_1_1 = ( TomName) tom_get_slot_BuildTerm_astName(tom_match1_1); { TomList tom_match1_1_2 = ( TomList) tom_get_slot_BuildTerm_args(tom_match1_1); if(tom_is_fun_sym_Name(tom_match1_1_1) ||  false ) { { String tom_match1_1_1_1 = ( String) tom_get_slot_Name_string(tom_match1_1_1); { String name = ( String) tom_match1_1_1_1; { TomList argList = ( TomList) tom_match1_1_2;

 
        buildTerm(deep, name, argList);
        return;
      }}} }}} } if(tom_is_fun_sym_BuildList(tom_match1_1) ||  false ) { { TomName tom_match1_1_1 = ( TomName) tom_get_slot_BuildList_astName(tom_match1_1); { TomList tom_match1_1_2 = ( TomList) tom_get_slot_BuildList_args(tom_match1_1); if(tom_is_fun_sym_Name(tom_match1_1_1) ||  false ) { { String tom_match1_1_1_1 = ( String) tom_get_slot_Name_string(tom_match1_1_1); { String name = ( String) tom_match1_1_1_1; { TomList argList = ( TomList) tom_match1_1_2;

 
        buildList(deep, name, argList);
        return;
      }}} }}} } if(tom_is_fun_sym_BuildArray(tom_match1_1) ||  false ) { { TomName tom_match1_1_1 = ( TomName) tom_get_slot_BuildArray_astName(tom_match1_1); { TomList tom_match1_1_2 = ( TomList) tom_get_slot_BuildArray_args(tom_match1_1); if(tom_is_fun_sym_Name(tom_match1_1_1) ||  false ) { { String tom_match1_1_1_1 = ( String) tom_get_slot_Name_string(tom_match1_1_1); { String name = ( String) tom_match1_1_1_1; { TomList argList = ( TomList) tom_match1_1_2;

 
        buildArray(deep, name, argList);
        return;
      }}} }}} } if(tom_is_fun_sym_FunctionCall(tom_match1_1) ||  false ) { { TomName tom_match1_1_1 = ( TomName) tom_get_slot_FunctionCall_astName(tom_match1_1); { TomList tom_match1_1_2 = ( TomList) tom_get_slot_FunctionCall_args(tom_match1_1); if(tom_is_fun_sym_Name(tom_match1_1_1) ||  false ) { { String tom_match1_1_1_1 = ( String) tom_get_slot_Name_string(tom_match1_1_1); { String name = ( String) tom_match1_1_1_1; { TomList argList = ( TomList) tom_match1_1_2;

 
        buildFunctionCall(deep, name, argList);
        return;
      }}} }}} } if(tom_is_fun_sym_Composite(tom_match1_1) ||  false ) { { TomList tom_match1_1_1 = ( TomList) tom_get_slot_Composite_args(tom_match1_1); { TomList argList = ( TomList) tom_match1_1_1;

 
        generateList(deep,argList);
        return;
      }} } if(tom_is_fun_sym_Variable(tom_match1_1) ||  false ) { { OptionList tom_match1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match1_1); { TomName tom_match1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match1_1); { TomType tom_match1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match1_1); { OptionList option1 = ( OptionList) tom_match1_1_1; if(tom_is_fun_sym_PositionName(tom_match1_1_2) ||  false ) { { TomNumberList tom_match1_1_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match1_1_2); { TomNumberList l1 = ( TomNumberList) tom_match1_1_2_1; { TomType type1 = ( TomType) tom_match1_1_3;

 
          /*
           * sans type: re-definition lorsque %variable est utilise
           * avec type: probleme en cas de filtrage dynamique
           */
        output.write("tom" + numberListToIdentifier(l1));
        return;
      }}} }}}}} } if(tom_is_fun_sym_Variable(tom_match1_1) ||  false ) { { OptionList tom_match1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match1_1); { TomName tom_match1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match1_1); { TomType tom_match1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match1_1); { OptionList option1 = ( OptionList) tom_match1_1_1; if(tom_is_fun_sym_Name(tom_match1_1_2) ||  false ) { { String tom_match1_1_2_1 = ( String) tom_get_slot_Name_string(tom_match1_1_2); { String name1 = ( String) tom_match1_1_2_1; { TomType type1 = ( TomType) tom_match1_1_3;

 
        output.write(name1);
        return;
      }}} }}}}} } if(tom_is_fun_sym_VariableStar(tom_match1_1) ||  false ) { { OptionList tom_match1_1_1 = ( OptionList) tom_get_slot_VariableStar_option(tom_match1_1); { TomName tom_match1_1_2 = ( TomName) tom_get_slot_VariableStar_astName(tom_match1_1); { TomType tom_match1_1_3 = ( TomType) tom_get_slot_VariableStar_astType(tom_match1_1); { OptionList option1 = ( OptionList) tom_match1_1_1; if(tom_is_fun_sym_PositionName(tom_match1_1_2) ||  false ) { { TomNumberList tom_match1_1_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match1_1_2); { TomNumberList l1 = ( TomNumberList) tom_match1_1_2_1; { TomType type1 = ( TomType) tom_match1_1_3;

 
        output.write("tom" + numberListToIdentifier(l1));
        return;  
      }}} }}}}} } if(tom_is_fun_sym_VariableStar(tom_match1_1) ||  false ) { { OptionList tom_match1_1_1 = ( OptionList) tom_get_slot_VariableStar_option(tom_match1_1); { TomName tom_match1_1_2 = ( TomName) tom_get_slot_VariableStar_astName(tom_match1_1); { TomType tom_match1_1_3 = ( TomType) tom_get_slot_VariableStar_astType(tom_match1_1); { OptionList option1 = ( OptionList) tom_match1_1_1; if(tom_is_fun_sym_Name(tom_match1_1_2) ||  false ) { { String tom_match1_1_2_1 = ( String) tom_get_slot_Name_string(tom_match1_1_2); { String name1 = ( String) tom_match1_1_2_1; { TomType type1 = ( TomType) tom_match1_1_3;

 
        output.write(name1);
        return;
      }}} }}}}} } if(tom_is_fun_sym_TargetLanguageToTomTerm(tom_match1_1) ||  false ) { { TargetLanguage tom_match1_1_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToTomTerm_tl(tom_match1_1); { TargetLanguage t = ( TargetLanguage) tom_match1_1_1;

 
        generateTargetLanguage(deep,t);
        return;
      }} } if(tom_is_fun_sym_DeclarationToTomTerm(tom_match1_1) ||  false ) { { Declaration tom_match1_1_1 = ( Declaration) tom_get_slot_DeclarationToTomTerm_astDeclaration(tom_match1_1); { Declaration t = ( Declaration) tom_match1_1_1;

 
        generateDeclaration(deep,t);
        return;
      }} } if(tom_is_fun_sym_ExpressionToTomTerm(tom_match1_1) ||  false ) { { Expression tom_match1_1_1 = ( Expression) tom_get_slot_ExpressionToTomTerm_astExpression(tom_match1_1); { Expression t = ( Expression) tom_match1_1_1;

 
        generateExpression(deep,t);
        return;
      }} } if(tom_is_fun_sym_InstructionToTomTerm(tom_match1_1) ||  false ) { { Instruction tom_match1_1_1 = ( Instruction) tom_get_slot_InstructionToTomTerm_astInstruction(tom_match1_1); { Instruction t = ( Instruction) tom_match1_1_1;

 
        generateInstruction(deep,t);
        return;
      }} } { TomTerm t = ( TomTerm) tom_match1_1;

 
        System.out.println("Cannot generate code for: " + t);
        throw new TomRuntimeException(new Throwable("Cannot generate code for: " + t));
      }}}
 
  }

  public void generateExpression(int deep, Expression subject) throws IOException {
     { Expression tom_match2_1 = ( Expression) subject;{ if(tom_is_fun_sym_Not(tom_match2_1) ||  false ) { { Expression tom_match2_1_1 = ( Expression) tom_get_slot_Not_arg(tom_match2_1); { Expression exp = ( Expression) tom_match2_1_1;
 
        buildExpNot(deep, exp);
        return;
      }} } if(tom_is_fun_sym_And(tom_match2_1) ||  false ) { { Expression tom_match2_1_1 = ( Expression) tom_get_slot_And_arg1(tom_match2_1); { Expression tom_match2_1_2 = ( Expression) tom_get_slot_And_arg2(tom_match2_1); { Expression exp1 = ( Expression) tom_match2_1_1; { Expression exp2 = ( Expression) tom_match2_1_2;

 
        buildExpAnd(deep, exp1, exp2);
        return;
      }}}} } if(tom_is_fun_sym_Or(tom_match2_1) ||  false ) { { Expression tom_match2_1_1 = ( Expression) tom_get_slot_Or_arg1(tom_match2_1); { Expression tom_match2_1_2 = ( Expression) tom_get_slot_Or_arg2(tom_match2_1); { Expression exp1 = ( Expression) tom_match2_1_1; { Expression exp2 = ( Expression) tom_match2_1_2;

 
        buildExpOr(deep, exp1, exp2);
        return;
      }}}} } if(tom_is_fun_sym_TrueTL(tom_match2_1) ||  false ) {

 
        buildExpTrue(deep);
        return;
       } if(tom_is_fun_sym_FalseTL(tom_match2_1) ||  false ) {

 
        buildExpFalse(deep);
        return;
       } if(tom_is_fun_sym_IsEmptyList(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_IsEmptyList_kid1(tom_match2_1); if(tom_is_fun_sym_Ref(tom_match2_1_1) ||  false ) { { TomTerm var = ( TomTerm) tom_match2_1_1; { TomTerm tom_match2_1_1_1 = ( TomTerm) tom_get_slot_Ref_tomTerm(tom_match2_1_1); if(tom_is_fun_sym_Variable(tom_match2_1_1_1) ||  false ) { { TomType tom_match2_1_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_1_1); { TomType type1 = ( TomType) tom_match2_1_1_1_3;

 
        buildExpEmptyList(deep, type1, var);
        return;
      }} }}} }} } if(tom_is_fun_sym_IsEmptyArray(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_IsEmptyArray_kid1(tom_match2_1); { TomTerm tom_match2_1_2 = ( TomTerm) tom_get_slot_IsEmptyArray_kid2(tom_match2_1); if(tom_is_fun_sym_Ref(tom_match2_1_1) ||  false ) { { TomTerm varArray = ( TomTerm) tom_match2_1_1; { TomTerm tom_match2_1_1_1 = ( TomTerm) tom_get_slot_Ref_tomTerm(tom_match2_1_1); if(tom_is_fun_sym_Variable(tom_match2_1_1_1) ||  false ) { { TomType tom_match2_1_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_1_1); { TomType type1 = ( TomType) tom_match2_1_1_1_3; if(tom_is_fun_sym_Ref(tom_match2_1_2) ||  false ) { { TomTerm varIndex = ( TomTerm) tom_match2_1_2; { TomTerm tom_match2_1_2_1 = ( TomTerm) tom_get_slot_Ref_tomTerm(tom_match2_1_2); if(tom_is_fun_sym_Variable(tom_match2_1_2_1) ||  false ) {

 
        buildExpEmptyArray(deep, type1, varIndex, varArray);
        return;
       }}} }}} }}} }}} } if(tom_is_fun_sym_EqualFunctionSymbol(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_EqualFunctionSymbol_kid1(tom_match2_1); { TomTerm tom_match2_1_2 = ( TomTerm) tom_get_slot_EqualFunctionSymbol_kid2(tom_match2_1); if(tom_is_fun_sym_Variable(tom_match2_1_1) ||  false ) { { TomTerm var = ( TomTerm) tom_match2_1_1; { TomType tom_match2_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_1); { TomType type1 = ( TomType) tom_match2_1_1_3; if(tom_is_fun_sym_Appl(tom_match2_1_2) ||  false ) { { OptionList tom_match2_1_2_1 = ( OptionList) tom_get_slot_Appl_option(tom_match2_1_2); { NameList tom_match2_1_2_2 = ( NameList) tom_get_slot_Appl_nameList(tom_match2_1_2); { TomList tom_match2_1_2_3 = ( TomList) tom_get_slot_Appl_args(tom_match2_1_2); { OptionList option = ( OptionList) tom_match2_1_2_1; if(tom_is_fun_sym_concTomName(tom_match2_1_2_2) ||  false ) { { NameList tom_match2_1_2_2_list1 = ( NameList) tom_match2_1_2_2; if(!(tom_is_empty_NameList(tom_match2_1_2_2_list1))) { { TomName tom_absvar1 = ( TomName) tom_get_head_NameList(tom_match2_1_2_2_list1);{ tom_match2_1_2_2_list1 = ( NameList) tom_get_tail_NameList(tom_match2_1_2_2_list1); if(tom_is_empty_NameList(tom_match2_1_2_2_list1)) { { TomList l = ( TomList) tom_match2_1_2_3; { TomName tom_match3_1 = ( TomName) tom_absvar1;{ if(tom_is_fun_sym_Name(tom_match3_1) ||  false ) { { String tom_match3_1_1 = ( String) tom_get_slot_Name_string(tom_match3_1); { String tomName = ( String) tom_match3_1_1;


  // needs to be checked
        buildExpEqualFunctionVarAppl(deep, var, type1, tomName);
        return;
      }} }}}} }}} }} }}}}} }}}} }}} } if(tom_is_fun_sym_EqualFunctionSymbol(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_EqualFunctionSymbol_kid1(tom_match2_1); { TomTerm tom_match2_1_2 = ( TomTerm) tom_get_slot_EqualFunctionSymbol_kid2(tom_match2_1); if(tom_is_fun_sym_Variable(tom_match2_1_1) ||  false ) { { TomTerm var1 = ( TomTerm) tom_match2_1_1; { TomType tom_match2_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_1); { TomType type1 = ( TomType) tom_match2_1_1_3; { TomTerm var2 = ( TomTerm) tom_match2_1_2;

 
          //System.out.println("EqualFunctionSymbol(...," + var2 + ")");
        String s = var2.toString();
        buildExpEqualFunctionVarVar(deep, type1, var1, s);
        return;
      }}}} }}} } if(tom_is_fun_sym_EqualTerm(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_EqualTerm_kid1(tom_match2_1); { TomTerm tom_match2_1_2 = ( TomTerm) tom_get_slot_EqualTerm_kid2(tom_match2_1); if(tom_is_fun_sym_Variable(tom_match2_1_1) ||  false ) { { TomTerm var1 = ( TomTerm) tom_match2_1_1; { TomType tom_match2_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_1); { TomType type1 = ( TomType) tom_match2_1_1_3; { TomTerm var2 = ( TomTerm) tom_match2_1_2;

 
        buildExpEqualTermVar(deep, type1, var1, var2);
        return;
      }}}} }}} } if(tom_is_fun_sym_EqualTerm(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_EqualTerm_kid1(tom_match2_1); { TomTerm tom_match2_1_2 = ( TomTerm) tom_get_slot_EqualTerm_kid2(tom_match2_1); if(tom_is_fun_sym_VariableStar(tom_match2_1_1) ||  false ) { { TomTerm var1 = ( TomTerm) tom_match2_1_1; { TomType tom_match2_1_1_3 = ( TomType) tom_get_slot_VariableStar_astType(tom_match2_1_1); { TomType type1 = ( TomType) tom_match2_1_1_3; { TomTerm var2 = ( TomTerm) tom_match2_1_2;

 
        buildExpEqualTermVarStar(deep, type1, var1, var2);
        return;
      }}}} }}} } if(tom_is_fun_sym_IsFsym(tom_match2_1) ||  false ) { { TomName tom_match2_1_1 = ( TomName) tom_get_slot_IsFsym_astName(tom_match2_1); { TomTerm tom_match2_1_2 = ( TomTerm) tom_get_slot_IsFsym_variable(tom_match2_1); if(tom_is_fun_sym_Name(tom_match2_1_1) ||  false ) { { String tom_match2_1_1_1 = ( String) tom_get_slot_Name_string(tom_match2_1_1); { String opname = ( String) tom_match2_1_1_1; if(tom_is_fun_sym_Variable(tom_match2_1_2) ||  false ) { { TomTerm var = ( TomTerm) tom_match2_1_2; { OptionList tom_match2_1_2_1 = ( OptionList) tom_get_slot_Variable_option(tom_match2_1_2); { TomName tom_match2_1_2_2 = ( TomName) tom_get_slot_Variable_astName(tom_match2_1_2); { TomType tom_match2_1_2_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_2); { OptionList option1 = ( OptionList) tom_match2_1_2_1; if(tom_is_fun_sym_PositionName(tom_match2_1_2_2) ||  false ) { { TomNumberList tom_match2_1_2_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match2_1_2_2); { TomNumberList l1 = ( TomNumberList) tom_match2_1_2_2_1; { TomType type1 = ( TomType) tom_match2_1_2_3;

 
        buildExpIsFsym(deep, opname, var);
        return;
      }}} }}}}}} }}} }}} } if(tom_is_fun_sym_GetSubterm(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_GetSubterm_variable(tom_match2_1); { TomNumber tom_match2_1_2 = ( TomNumber) tom_get_slot_GetSubterm_number(tom_match2_1); if(tom_is_fun_sym_Variable(tom_match2_1_1) ||  false ) { { TomTerm var = ( TomTerm) tom_match2_1_1; { OptionList tom_match2_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match2_1_1); { TomName tom_match2_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match2_1_1); { TomType tom_match2_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_1); { OptionList option1 = ( OptionList) tom_match2_1_1_1; if(tom_is_fun_sym_PositionName(tom_match2_1_1_2) ||  false ) { { TomNumberList tom_match2_1_1_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match2_1_1_2); { TomNumberList l1 = ( TomNumberList) tom_match2_1_1_2_1; { TomType type1 = ( TomType) tom_match2_1_1_3; if(tom_is_fun_sym_Number(tom_match2_1_2) ||  false ) { { int tom_match2_1_2_1 = ( int) tom_get_slot_Number_integer(tom_match2_1_2); { int number = ( int) tom_match2_1_2_1;

 
        buildExpGetSubterm(deep, var, type1, number);
        return;
      }} }}}} }}}}}} }}} } if(tom_is_fun_sym_GetSlot(tom_match2_1) ||  false ) { { TomName tom_match2_1_1 = ( TomName) tom_get_slot_GetSlot_astName(tom_match2_1); { String tom_match2_1_2 = ( String) tom_get_slot_GetSlot_slotNameString(tom_match2_1); { TomTerm tom_match2_1_3 = ( TomTerm) tom_get_slot_GetSlot_variable(tom_match2_1); if(tom_is_fun_sym_Name(tom_match2_1_1) ||  false ) { { String tom_match2_1_1_1 = ( String) tom_get_slot_Name_string(tom_match2_1_1); { String opname = ( String) tom_match2_1_1_1; { String slotName = ( String) tom_match2_1_2; if(tom_is_fun_sym_Variable(tom_match2_1_3) ||  false ) { { TomTerm var = ( TomTerm) tom_match2_1_3;

 
        buildExpGetSlot(deep, opname, slotName, var);
        return;
      } }}}} }}}} } if(tom_is_fun_sym_GetHead(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_GetHead_variable(tom_match2_1); if(tom_is_fun_sym_Ref(tom_match2_1_1) ||  false ) { { TomTerm var = ( TomTerm) tom_match2_1_1; { TomTerm tom_match2_1_1_1 = ( TomTerm) tom_get_slot_Ref_tomTerm(tom_match2_1_1); if(tom_is_fun_sym_Variable(tom_match2_1_1_1) ||  false ) { { OptionList tom_match2_1_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match2_1_1_1); { TomName tom_match2_1_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match2_1_1_1); { TomType tom_match2_1_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_1_1); { OptionList option1 = ( OptionList) tom_match2_1_1_1_1; if(tom_is_fun_sym_PositionName(tom_match2_1_1_1_2) ||  false ) { { TomNumberList tom_match2_1_1_1_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match2_1_1_1_2); { TomNumberList l1 = ( TomNumberList) tom_match2_1_1_1_2_1; { TomType type1 = ( TomType) tom_match2_1_1_1_3;

 
        buildExpGetHead(deep, type1, var);
        return;
      }}} }}}}} }}} }} } if(tom_is_fun_sym_GetTail(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_GetTail_kid1(tom_match2_1); if(tom_is_fun_sym_Ref(tom_match2_1_1) ||  false ) { { TomTerm var = ( TomTerm) tom_match2_1_1; { TomTerm tom_match2_1_1_1 = ( TomTerm) tom_get_slot_Ref_tomTerm(tom_match2_1_1); if(tom_is_fun_sym_Variable(tom_match2_1_1_1) ||  false ) { { OptionList tom_match2_1_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match2_1_1_1); { TomName tom_match2_1_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match2_1_1_1); { TomType tom_match2_1_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_1_1); { OptionList option1 = ( OptionList) tom_match2_1_1_1_1; if(tom_is_fun_sym_PositionName(tom_match2_1_1_1_2) ||  false ) { { TomNumberList tom_match2_1_1_1_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match2_1_1_1_2); { TomNumberList l1 = ( TomNumberList) tom_match2_1_1_1_2_1; { TomType type1 = ( TomType) tom_match2_1_1_1_3;

 
        buildExpGetTail(deep, type1, var);
        return;
      }}} }}}}} }}} }} } if(tom_is_fun_sym_GetSize(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_GetSize_kid1(tom_match2_1); if(tom_is_fun_sym_Variable(tom_match2_1_1) ||  false ) { { TomTerm var = ( TomTerm) tom_match2_1_1; { OptionList tom_match2_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match2_1_1); { TomName tom_match2_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match2_1_1); { TomType tom_match2_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_1); { OptionList option1 = ( OptionList) tom_match2_1_1_1; if(tom_is_fun_sym_PositionName(tom_match2_1_1_2) ||  false ) { { TomNumberList tom_match2_1_1_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match2_1_1_2); { TomNumberList l1 = ( TomNumberList) tom_match2_1_1_2_1; { TomType type1 = ( TomType) tom_match2_1_1_3;

 
        buildExpGetSize(deep, type1, var);
        return;
      }}} }}}}}} }} } if(tom_is_fun_sym_GetElement(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_GetElement_kid1(tom_match2_1); { TomTerm tom_match2_1_2 = ( TomTerm) tom_get_slot_GetElement_kid2(tom_match2_1); if(tom_is_fun_sym_Variable(tom_match2_1_1) ||  false ) { { TomTerm varName = ( TomTerm) tom_match2_1_1; { OptionList tom_match2_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match2_1_1); { TomName tom_match2_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match2_1_1); { TomType tom_match2_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_1); { OptionList option1 = ( OptionList) tom_match2_1_1_1; if(tom_is_fun_sym_PositionName(tom_match2_1_1_2) ||  false ) { { TomNumberList tom_match2_1_1_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match2_1_1_2); { TomNumberList l1 = ( TomNumberList) tom_match2_1_1_2_1; { TomType type1 = ( TomType) tom_match2_1_1_3; if(tom_is_fun_sym_Variable(tom_match2_1_2) ||  false ) { { TomTerm varIndex = ( TomTerm) tom_match2_1_2; { OptionList tom_match2_1_2_1 = ( OptionList) tom_get_slot_Variable_option(tom_match2_1_2); { TomName tom_match2_1_2_2 = ( TomName) tom_get_slot_Variable_astName(tom_match2_1_2); { TomType tom_match2_1_2_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_2); { OptionList option2 = ( OptionList) tom_match2_1_2_1; if(tom_is_fun_sym_PositionName(tom_match2_1_2_2) ||  false ) { { TomNumberList tom_match2_1_2_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match2_1_2_2); { TomNumberList l2 = ( TomNumberList) tom_match2_1_2_2_1; { TomType type2 = ( TomType) tom_match2_1_2_3;


 
        buildExpGetElement(deep, type1, varName, varIndex);
        return;
      }}} }}}}}} }}}} }}}}}} }}} } if(tom_is_fun_sym_GetSliceList(tom_match2_1) ||  false ) { { TomName tom_match2_1_1 = ( TomName) tom_get_slot_GetSliceList_astName(tom_match2_1); { TomTerm tom_match2_1_2 = ( TomTerm) tom_get_slot_GetSliceList_variableBeginAST(tom_match2_1); { TomTerm tom_match2_1_3 = ( TomTerm) tom_get_slot_GetSliceList_variableEndAST(tom_match2_1); if(tom_is_fun_sym_Name(tom_match2_1_1) ||  false ) { { String tom_match2_1_1_1 = ( String) tom_get_slot_Name_string(tom_match2_1_1); { String name = ( String) tom_match2_1_1_1; if(tom_is_fun_sym_Ref(tom_match2_1_2) ||  false ) { { TomTerm varBegin = ( TomTerm) tom_match2_1_2; { TomTerm tom_match2_1_2_1 = ( TomTerm) tom_get_slot_Ref_tomTerm(tom_match2_1_2); if(tom_is_fun_sym_Variable(tom_match2_1_2_1) ||  false ) { { OptionList tom_match2_1_2_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match2_1_2_1); { TomName tom_match2_1_2_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match2_1_2_1); { TomType tom_match2_1_2_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_2_1); { OptionList option1 = ( OptionList) tom_match2_1_2_1_1; if(tom_is_fun_sym_PositionName(tom_match2_1_2_1_2) ||  false ) { { TomNumberList tom_match2_1_2_1_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match2_1_2_1_2); { TomNumberList l1 = ( TomNumberList) tom_match2_1_2_1_2_1; { TomType type1 = ( TomType) tom_match2_1_2_1_3; if(tom_is_fun_sym_Ref(tom_match2_1_3) ||  false ) { { TomTerm varEnd = ( TomTerm) tom_match2_1_3; { TomTerm tom_match2_1_3_1 = ( TomTerm) tom_get_slot_Ref_tomTerm(tom_match2_1_3); if(tom_is_fun_sym_Variable(tom_match2_1_3_1) ||  false ) { { OptionList tom_match2_1_3_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match2_1_3_1); { TomName tom_match2_1_3_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match2_1_3_1); { TomType tom_match2_1_3_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_3_1); { OptionList option2 = ( OptionList) tom_match2_1_3_1_1; if(tom_is_fun_sym_PositionName(tom_match2_1_3_1_2) ||  false ) { { TomNumberList tom_match2_1_3_1_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match2_1_3_1_2); { TomNumberList l2 = ( TomNumberList) tom_match2_1_3_1_2_1; { TomType type2 = ( TomType) tom_match2_1_3_1_3;



 
        
        buildExpGetSliceList(deep, name, varBegin, varEnd);
        return;
      }}} }}}}} }}} }}}} }}}}} }}} }}} }}}} } if(tom_is_fun_sym_GetSliceArray(tom_match2_1) ||  false ) { { TomName tom_match2_1_1 = ( TomName) tom_get_slot_GetSliceArray_astName(tom_match2_1); { TomTerm tom_match2_1_2 = ( TomTerm) tom_get_slot_GetSliceArray_subjectListName(tom_match2_1); { TomTerm tom_match2_1_3 = ( TomTerm) tom_get_slot_GetSliceArray_variableBeginAST(tom_match2_1); { TomTerm tom_match2_1_4 = ( TomTerm) tom_get_slot_GetSliceArray_variableEndAST(tom_match2_1); if(tom_is_fun_sym_Name(tom_match2_1_1) ||  false ) { { String tom_match2_1_1_1 = ( String) tom_get_slot_Name_string(tom_match2_1_1); { String name = ( String) tom_match2_1_1_1; if(tom_is_fun_sym_Ref(tom_match2_1_2) ||  false ) { { TomTerm varArray = ( TomTerm) tom_match2_1_2; { TomTerm tom_match2_1_2_1 = ( TomTerm) tom_get_slot_Ref_tomTerm(tom_match2_1_2); if(tom_is_fun_sym_Variable(tom_match2_1_2_1) ||  false ) { { OptionList tom_match2_1_2_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match2_1_2_1); { TomName tom_match2_1_2_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match2_1_2_1); { TomType tom_match2_1_2_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_2_1); { OptionList option1 = ( OptionList) tom_match2_1_2_1_1; if(tom_is_fun_sym_PositionName(tom_match2_1_2_1_2) ||  false ) { { TomNumberList tom_match2_1_2_1_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match2_1_2_1_2); { TomNumberList l1 = ( TomNumberList) tom_match2_1_2_1_2_1; { TomType type1 = ( TomType) tom_match2_1_2_1_3; if(tom_is_fun_sym_Ref(tom_match2_1_3) ||  false ) { { TomTerm varBegin = ( TomTerm) tom_match2_1_3; { TomTerm tom_match2_1_3_1 = ( TomTerm) tom_get_slot_Ref_tomTerm(tom_match2_1_3); if(tom_is_fun_sym_Variable(tom_match2_1_3_1) ||  false ) { { OptionList tom_match2_1_3_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match2_1_3_1); { TomName tom_match2_1_3_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match2_1_3_1); { TomType tom_match2_1_3_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match2_1_3_1); { OptionList option2 = ( OptionList) tom_match2_1_3_1_1; if(tom_is_fun_sym_PositionName(tom_match2_1_3_1_2) ||  false ) { { TomNumberList tom_match2_1_3_1_2_1 = ( TomNumberList) tom_get_slot_PositionName_numberList(tom_match2_1_3_1_2); { TomNumberList l2 = ( TomNumberList) tom_match2_1_3_1_2_1; { TomType type2 = ( TomType) tom_match2_1_3_1_3; { TomTerm expEnd = ( TomTerm) tom_match2_1_4;




 
        buildExpGetSliceArray(deep, name, varArray, varBegin, expEnd);
        return;
      }}}} }}}}} }}} }}}} }}}}} }}} }}} }}}}} } if(tom_is_fun_sym_TomTermToExpression(tom_match2_1) ||  false ) { { TomTerm tom_match2_1_1 = ( TomTerm) tom_get_slot_TomTermToExpression_astTerm(tom_match2_1); { TomTerm t = ( TomTerm) tom_match2_1_1;

 
        generate(deep,t);
        return;
      }} } { Expression t = ( Expression) tom_match2_1;

 
        System.out.println("Cannot generate code for expression: " + t);
        throw new TomRuntimeException(new Throwable("Cannot generate code for expression: " + t));
      }}}
 
  }

  public void generateInstruction(int deep, Instruction subject) throws IOException {
     { Instruction tom_match4_1 = ( Instruction) subject;{ if(tom_is_fun_sym_TargetLanguageToInstruction(tom_match4_1) ||  false ) { { TargetLanguage tom_match4_1_1 = ( TargetLanguage) tom_get_slot_TargetLanguageToInstruction_tl(tom_match4_1); { TargetLanguage t = ( TargetLanguage) tom_match4_1_1;

 
        generateTargetLanguage(deep,t);
        return;
      }} } if(tom_is_fun_sym_TomTermToInstruction(tom_match4_1) ||  false ) { { TomTerm tom_match4_1_1 = ( TomTerm) tom_get_slot_TomTermToInstruction_tom(tom_match4_1); { TomTerm t = ( TomTerm) tom_match4_1_1;

 
        generate(deep,t);
        return;
      }} } if(tom_is_fun_sym_Nop(tom_match4_1) ||  false ) {

 
        return;
       } if(tom_is_fun_sym_MakeFunctionBegin(tom_match4_1) ||  false ) { { TomName tom_match4_1_1 = ( TomName) tom_get_slot_MakeFunctionBegin_astName(tom_match4_1); { TomTerm tom_match4_1_2 = ( TomTerm) tom_get_slot_MakeFunctionBegin_subjectListAST(tom_match4_1); if(tom_is_fun_sym_Name(tom_match4_1_1) ||  false ) { { String tom_match4_1_1_1 = ( String) tom_get_slot_Name_string(tom_match4_1_1); { String tomName = ( String) tom_match4_1_1_1; if(tom_is_fun_sym_SubjectList(tom_match4_1_2) ||  false ) { { TomList tom_match4_1_2_1 = ( TomList) tom_get_slot_SubjectList_tomList(tom_match4_1_2); { TomList varList = ( TomList) tom_match4_1_2_1;

 
        buildFunctionBegin(deep, tomName, varList);
        return;
      }} }}} }}} } if(tom_is_fun_sym_MakeFunctionEnd(tom_match4_1) ||  false ) {

 
        buildFunctionEnd(deep);
        return;
       } if(tom_is_fun_sym_EndLocalVariable(tom_match4_1) ||  false ) {

 
        output.writeln(deep,"do");
        return;
       } if(tom_is_fun_sym_Assign(tom_match4_1) ||  false ) { { TomTerm tom_match4_1_1 = ( TomTerm) tom_get_slot_Assign_variable(tom_match4_1); { Expression tom_match4_1_2 = ( Expression) tom_get_slot_Assign_source(tom_match4_1); if(tom_is_fun_sym_VariableStar(tom_match4_1_1) || tom_is_fun_sym_Variable(tom_match4_1_1) ||  false ) { { TomTerm var = ( TomTerm) tom_match4_1_1; { OptionList tom_match4_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match4_1_1); { TomName tom_match4_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match4_1_1); { TomType tom_match4_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match4_1_1); { OptionList option = ( OptionList) tom_match4_1_1_1; { TomName name1 = ( TomName) tom_match4_1_1_2; if(tom_is_fun_sym_Type(tom_match4_1_1_3) ||  false ) { { TomType tom_match4_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match4_1_1_3); { TomType tom_match4_1_1_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match4_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match4_1_1_3_1) ||  false ) { { String tom_match4_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match4_1_1_3_1); { String type = ( String) tom_match4_1_1_3_1_1; if(tom_is_fun_sym_TLType(tom_match4_1_1_3_2) ||  false ) { { TomType tlType = ( TomType) tom_match4_1_1_3_2; { Expression exp = ( Expression) tom_match4_1_2;


 
        buildAssignVar(deep, var, option, type, tlType, exp);
        return;
      }} }}} }}} }}}}}}} }}} } if(tom_is_fun_sym_AssignMatchSubject(tom_match4_1) ||  false ) { { TomTerm tom_match4_1_1 = ( TomTerm) tom_get_slot_AssignMatchSubject_kid1(tom_match4_1); { Expression tom_match4_1_2 = ( Expression) tom_get_slot_AssignMatchSubject_source(tom_match4_1); if(tom_is_fun_sym_Variable(tom_match4_1_1) ||  false ) { { TomTerm var = ( TomTerm) tom_match4_1_1; { OptionList tom_match4_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match4_1_1); { TomName tom_match4_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match4_1_1); { TomType tom_match4_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match4_1_1); { OptionList option = ( OptionList) tom_match4_1_1_1; { TomName name1 = ( TomName) tom_match4_1_1_2; if(tom_is_fun_sym_Type(tom_match4_1_1_3) ||  false ) { { TomType tom_match4_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match4_1_1_3); { TomType tom_match4_1_1_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match4_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match4_1_1_3_1) ||  false ) { { TomType tomType = ( TomType) tom_match4_1_1_3_1; { String tom_match4_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match4_1_1_3_1); { String type = ( String) tom_match4_1_1_3_1_1; if(tom_is_fun_sym_TLType(tom_match4_1_1_3_2) ||  false ) { { TomType tlType = ( TomType) tom_match4_1_1_3_2; { Expression exp = ( Expression) tom_match4_1_2;


 
				buildAssignVar(deep, var, option, type, tlType, exp);
				return;
			}} }}}} }}} }}}}}}} }}} } if(tom_is_fun_sym_Assign(tom_match4_1) ||  false ) { { TomTerm tom_match4_1_1 = ( TomTerm) tom_get_slot_Assign_variable(tom_match4_1); { Expression tom_match4_1_2 = ( Expression) tom_get_slot_Assign_source(tom_match4_1); if(tom_is_fun_sym_UnamedVariableStar(tom_match4_1_1) || tom_is_fun_sym_UnamedVariable(tom_match4_1_1) ||  false ) { { Expression exp = ( Expression) tom_match4_1_2;

 
        return;
      } }}} } if(tom_is_fun_sym_LetRef(tom_match4_1) || tom_is_fun_sym_Let(tom_match4_1) ||  false ) { { TomTerm tom_match4_1_1 = ( TomTerm) tom_get_slot_Let_variable(tom_match4_1); { Expression tom_match4_1_2 = ( Expression) tom_get_slot_Let_source(tom_match4_1); { Instruction tom_match4_1_3 = ( Instruction) tom_get_slot_Let_astInstruction(tom_match4_1); if(tom_is_fun_sym_UnamedVariableStar(tom_match4_1_1) || tom_is_fun_sym_UnamedVariable(tom_match4_1_1) ||  false ) { { Expression exp = ( Expression) tom_match4_1_2; { Instruction body = ( Instruction) tom_match4_1_3;

 
        generateInstruction(deep,body);
        return;
      }} }}}} } if(tom_is_fun_sym_Let(tom_match4_1) ||  false ) { { TomTerm tom_match4_1_1 = ( TomTerm) tom_get_slot_Let_variable(tom_match4_1); { Expression tom_match4_1_2 = ( Expression) tom_get_slot_Let_source(tom_match4_1); { Instruction tom_match4_1_3 = ( Instruction) tom_get_slot_Let_astInstruction(tom_match4_1); if(tom_is_fun_sym_VariableStar(tom_match4_1_1) || tom_is_fun_sym_Variable(tom_match4_1_1) ||  false ) { { TomTerm var = ( TomTerm) tom_match4_1_1; { OptionList tom_match4_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match4_1_1); { TomName tom_match4_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match4_1_1); { TomType tom_match4_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match4_1_1); { OptionList list = ( OptionList) tom_match4_1_1_1; { TomName name1 = ( TomName) tom_match4_1_1_2; if(tom_is_fun_sym_Type(tom_match4_1_1_3) ||  false ) { { TomType tom_match4_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match4_1_1_3); { TomType tom_match4_1_1_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match4_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match4_1_1_3_1) ||  false ) { { String tom_match4_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match4_1_1_3_1); { String type = ( String) tom_match4_1_1_3_1_1; if(tom_is_fun_sym_TLType(tom_match4_1_1_3_2) ||  false ) { { TomType tlType = ( TomType) tom_match4_1_1_3_2; { Expression exp = ( Expression) tom_match4_1_2; { Instruction body = ( Instruction) tom_match4_1_3;

 
        buildLet(deep, var, list, type, tlType, exp, body);
        return;
      }}} }}} }}} }}}}}}} }}}} } if(tom_is_fun_sym_LetRef(tom_match4_1) ||  false ) { { TomTerm tom_match4_1_1 = ( TomTerm) tom_get_slot_LetRef_variable(tom_match4_1); { Expression tom_match4_1_2 = ( Expression) tom_get_slot_LetRef_source(tom_match4_1); { Instruction tom_match4_1_3 = ( Instruction) tom_get_slot_LetRef_astInstruction(tom_match4_1); if(tom_is_fun_sym_VariableStar(tom_match4_1_1) || tom_is_fun_sym_Variable(tom_match4_1_1) ||  false ) { { TomTerm var = ( TomTerm) tom_match4_1_1; { OptionList tom_match4_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match4_1_1); { TomName tom_match4_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match4_1_1); { TomType tom_match4_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match4_1_1); { OptionList list = ( OptionList) tom_match4_1_1_1; { TomName name1 = ( TomName) tom_match4_1_1_2; if(tom_is_fun_sym_Type(tom_match4_1_1_3) ||  false ) { { TomType tom_match4_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match4_1_1_3); { TomType tom_match4_1_1_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match4_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match4_1_1_3_1) ||  false ) { { String tom_match4_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match4_1_1_3_1); { String type = ( String) tom_match4_1_1_3_1_1; if(tom_is_fun_sym_TLType(tom_match4_1_1_3_2) ||  false ) { { TomType tlType = ( TomType) tom_match4_1_1_3_2; { Expression exp = ( Expression) tom_match4_1_2; { Instruction body = ( Instruction) tom_match4_1_3;

 
        buildLetRef(deep, var, list, type, tlType, exp, body);
        return;
      }}} }}} }}} }}}}}}} }}}} } if(tom_is_fun_sym_AbstractBlock(tom_match4_1) ||  false ) { { InstructionList tom_match4_1_1 = ( InstructionList) tom_get_slot_AbstractBlock_instList(tom_match4_1); { InstructionList instList = ( InstructionList) tom_match4_1_1;

 
        generateInstructionList(deep, instList);
        return;
      }} } if(tom_is_fun_sym_UnamedBlock(tom_match4_1) ||  false ) { { InstructionList tom_match4_1_1 = ( InstructionList) tom_get_slot_UnamedBlock_instList(tom_match4_1); { InstructionList instList = ( InstructionList) tom_match4_1_1;

 
        buildUnamedBlock(deep, instList);
        return;
      }} } if(tom_is_fun_sym_NamedBlock(tom_match4_1) ||  false ) { { String tom_match4_1_1 = ( String) tom_get_slot_NamedBlock_blockName(tom_match4_1); { InstructionList tom_match4_1_2 = ( InstructionList) tom_get_slot_NamedBlock_instList(tom_match4_1); { String blockName = ( String) tom_match4_1_1; { InstructionList instList = ( InstructionList) tom_match4_1_2;

 
        buildNamedBlock(deep, blockName, instList);
        return;
      }}}} } if(tom_is_fun_sym_IfThenElse(tom_match4_1) ||  false ) { { Expression tom_match4_1_1 = ( Expression) tom_get_slot_IfThenElse_condition(tom_match4_1); { Instruction tom_match4_1_2 = ( Instruction) tom_get_slot_IfThenElse_succesInst(tom_match4_1); { Instruction tom_match4_1_3 = ( Instruction) tom_get_slot_IfThenElse_failureInst(tom_match4_1); { Expression exp = ( Expression) tom_match4_1_1; { Instruction succesList = ( Instruction) tom_match4_1_2; if(tom_is_fun_sym_Nop(tom_match4_1_3) ||  false ) {


 
        buildIfThenElse(deep, exp,succesList);
        return;
       }}}}}} } if(tom_is_fun_sym_IfThenElse(tom_match4_1) ||  false ) { { Expression tom_match4_1_1 = ( Expression) tom_get_slot_IfThenElse_condition(tom_match4_1); { Instruction tom_match4_1_2 = ( Instruction) tom_get_slot_IfThenElse_succesInst(tom_match4_1); { Instruction tom_match4_1_3 = ( Instruction) tom_get_slot_IfThenElse_failureInst(tom_match4_1); { Expression exp = ( Expression) tom_match4_1_1; { Instruction succesList = ( Instruction) tom_match4_1_2; { Instruction failureList = ( Instruction) tom_match4_1_3;

 
        buildIfThenElseWithFailure(deep, exp, succesList, failureList);
        return;
      }}}}}} } if(tom_is_fun_sym_DoWhile(tom_match4_1) ||  false ) { { Instruction tom_match4_1_1 = ( Instruction) tom_get_slot_DoWhile_doInst(tom_match4_1); { Expression tom_match4_1_2 = ( Expression) tom_get_slot_DoWhile_condition(tom_match4_1); { Instruction succes = ( Instruction) tom_match4_1_1; { Expression exp = ( Expression) tom_match4_1_2;

 
        buildDoWhile(deep, succes,exp);
        return;
      }}}} } if(tom_is_fun_sym_Increment(tom_match4_1) ||  false ) { { TomTerm tom_match4_1_1 = ( TomTerm) tom_get_slot_Increment_kid1(tom_match4_1); if(tom_is_fun_sym_Variable(tom_match4_1_1) ||  false ) { { TomTerm var = ( TomTerm) tom_match4_1_1;

 
        buildIncrement(deep, var);
        return;
      } }} } if(tom_is_fun_sym_Action(tom_match4_1) ||  false ) { { TomList tom_match4_1_1 = ( TomList) tom_get_slot_Action_instTomList(tom_match4_1); { TomList l = ( TomList) tom_match4_1_1;

 
        generateList(deep, l);
        return;
      }} } if(tom_is_fun_sym_Return(tom_match4_1) ||  false ) { { TomTerm tom_match4_1_1 = ( TomTerm) tom_get_slot_Return_kid1(tom_match4_1); { TomTerm exp = ( TomTerm) tom_match4_1_1;

 
        buildReturn(deep, exp);
        return;
      }} } if(tom_is_fun_sym_CompiledMatch(tom_match4_1) ||  false ) { { Instruction tom_match4_1_1 = ( Instruction) tom_get_slot_CompiledMatch_automataInst(tom_match4_1); { OptionList tom_match4_1_2 = ( OptionList) tom_get_slot_CompiledMatch_option(tom_match4_1); { Instruction instruction = ( Instruction) tom_match4_1_1; { OptionList list = ( OptionList) tom_match4_1_2;

 
        buildCompiledMatch(deep, instruction, list);
        return;
      }}}} } if(tom_is_fun_sym_CompiledPattern(tom_match4_1) ||  false ) { { Instruction tom_match4_1_1 = ( Instruction) tom_get_slot_CompiledPattern_automataInst(tom_match4_1); { Instruction instruction = ( Instruction) tom_match4_1_1;

 
        buildInstructionSequence(deep,instruction);
        return;
      }} } { Instruction t = ( Instruction) tom_match4_1;

 
        System.out.println("Cannot generate code for instruction: " + t);
        throw new TomRuntimeException(new Throwable("Cannot generate code for instruction: " + t));
      }}}
 
  }
  
  public void generateTargetLanguage(int deep, TargetLanguage subject) throws IOException {
     { TargetLanguage tom_match5_1 = ( TargetLanguage) subject;{ if(tom_is_fun_sym_TL(tom_match5_1) ||  false ) { { String tom_match5_1_1 = ( String) tom_get_slot_TL_code(tom_match5_1); { Position tom_match5_1_2 = ( Position) tom_get_slot_TL_start(tom_match5_1); { Position tom_match5_1_3 = ( Position) tom_get_slot_TL_end(tom_match5_1); { String t = ( String) tom_match5_1_1; if(tom_is_fun_sym_TextPosition(tom_match5_1_2) ||  false ) { { int tom_match5_1_2_1 = ( int) tom_get_slot_TextPosition_line(tom_match5_1_2); { int startLine = ( int) tom_match5_1_2_1; if(tom_is_fun_sym_TextPosition(tom_match5_1_3) ||  false ) { { int tom_match5_1_3_1 = ( int) tom_get_slot_TextPosition_line(tom_match5_1_3); { int endLine = ( int) tom_match5_1_3_1;
 
        output.write(deep,t, startLine, endLine-startLine);
        return;
      }} }}} }}}}} } if(tom_is_fun_sym_ITL(tom_match5_1) ||  false ) { { String tom_match5_1_1 = ( String) tom_get_slot_ITL_code(tom_match5_1); { String t = ( String) tom_match5_1_1;

 
        output.write(deep,t);
        return;
      }} } if(tom_is_fun_sym_Comment(tom_match5_1) ||  false ) { { String tom_match5_1_1 = ( String) tom_get_slot_Comment_code(tom_match5_1); { String t = ( String) tom_match5_1_1;

 
        buildComment(deep,t);
        return;
      }} } { TargetLanguage t = ( TargetLanguage) tom_match5_1;

 
        System.out.println("Cannot generate code for TL: " + t);
        throw new TomRuntimeException(new Throwable("Cannot generate code for TL: " + t));
      }}}
 
  }

  public void generateOption(int deep, Option subject) throws IOException {
     { Option tom_match6_1 = ( Option) subject;{ if(tom_is_fun_sym_DeclarationToOption(tom_match6_1) ||  false ) { { Declaration tom_match6_1_1 = ( Declaration) tom_get_slot_DeclarationToOption_astDeclaration(tom_match6_1); { Declaration decl = ( Declaration) tom_match6_1_1;
 
        generateDeclaration(deep,decl);
        return;
      }} } if(tom_is_fun_sym_OriginTracking(tom_match6_1) ||  false ) {
  return;  } if(tom_is_fun_sym_DefinedSymbol(tom_match6_1) ||  false ) {
  return;  } if(tom_is_fun_sym_Constructor(tom_match6_1) ||  false ) {
  return;  } { Option t = ( Option) tom_match6_1;

 
        System.out.println("Cannot generate code for option: " + t);
        throw new TomRuntimeException(new Throwable("Cannot generate code for option: " + t));
      }}}
 
  }
  
  public void generateDeclaration(int deep, Declaration subject) throws IOException {
     { Declaration tom_match7_1 = ( Declaration) subject;{ if(tom_is_fun_sym_EmptyDeclaration(tom_match7_1) ||  false ) {
 
        return;
       } if(tom_is_fun_sym_ListSymbolDecl(tom_match7_1) || tom_is_fun_sym_ArraySymbolDecl(tom_match7_1) || tom_is_fun_sym_SymbolDecl(tom_match7_1) ||  false ) { { TomName tom_match7_1_1 = ( TomName) tom_get_slot_SymbolDecl_astName(tom_match7_1); if(tom_is_fun_sym_Name(tom_match7_1_1) ||  false ) { { String tom_match7_1_1_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1); { String tomName = ( String) tom_match7_1_1_1;
 
        buildSymbolDecl(deep, tomName);
        return ;
      }} }} } if(tom_is_fun_sym_GetFunctionSymbolDecl(tom_match7_1) ||  false ) { { TomTerm tom_match7_1_1 = ( TomTerm) tom_get_slot_GetFunctionSymbolDecl_termArg(tom_match7_1); { TargetLanguage tom_match7_1_2 = ( TargetLanguage) tom_get_slot_GetFunctionSymbolDecl_tlCode(tom_match7_1); if(tom_is_fun_sym_Variable(tom_match7_1_1) ||  false ) { { OptionList tom_match7_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_1); { TomName tom_match7_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_1); { TomType tom_match7_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_1); { OptionList option = ( OptionList) tom_match7_1_1_1; if(tom_is_fun_sym_Name(tom_match7_1_1_2) ||  false ) { { String tom_match7_1_1_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1_2); { String name = ( String) tom_match7_1_1_2_1; if(tom_is_fun_sym_Type(tom_match7_1_1_3) ||  false ) { { TomType tom_match7_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_1_3); { TomType tom_match7_1_1_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_1_3_1) ||  false ) { { String tom_match7_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_1_3_1); { String type = ( String) tom_match7_1_1_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_1_3_2) ||  false ) { { TomType tlType = ( TomType) tom_match7_1_1_3_2; { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_2;



 
        buildGetFunctionSymbolDecl(deep, type, name, tlType, tlCode);
        return;
      }} }}} }}} }}} }}}}} }}} } if(tom_is_fun_sym_GetSubtermDecl(tom_match7_1) ||  false ) { { TomTerm tom_match7_1_1 = ( TomTerm) tom_get_slot_GetSubtermDecl_termArg(tom_match7_1); { TomTerm tom_match7_1_2 = ( TomTerm) tom_get_slot_GetSubtermDecl_variable(tom_match7_1); { TargetLanguage tom_match7_1_3 = ( TargetLanguage) tom_get_slot_GetSubtermDecl_tlCode(tom_match7_1); if(tom_is_fun_sym_Variable(tom_match7_1_1) ||  false ) { { OptionList tom_match7_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_1); { TomName tom_match7_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_1); { TomType tom_match7_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_1); { OptionList option1 = ( OptionList) tom_match7_1_1_1; if(tom_is_fun_sym_Name(tom_match7_1_1_2) ||  false ) { { String tom_match7_1_1_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1_2); { String name1 = ( String) tom_match7_1_1_2_1; if(tom_is_fun_sym_Type(tom_match7_1_1_3) ||  false ) { { TomType tom_match7_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_1_3); { TomType tom_match7_1_1_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_1_3_1) ||  false ) { { String tom_match7_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_1_3_1); { String type1 = ( String) tom_match7_1_1_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_1_3_2) ||  false ) { { TomType tlType1 = ( TomType) tom_match7_1_1_3_2; if(tom_is_fun_sym_Variable(tom_match7_1_2) ||  false ) { { OptionList tom_match7_1_2_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_2); { TomName tom_match7_1_2_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_2); { TomType tom_match7_1_2_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_2); { OptionList option2 = ( OptionList) tom_match7_1_2_1; if(tom_is_fun_sym_Name(tom_match7_1_2_2) ||  false ) { { String tom_match7_1_2_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_2_2); { String name2 = ( String) tom_match7_1_2_2_1; if(tom_is_fun_sym_Type(tom_match7_1_2_3) ||  false ) { { TomType tom_match7_1_2_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_2_3); { TomType tom_match7_1_2_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_2_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_2_3_1) ||  false ) { { String tom_match7_1_2_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_2_3_1); { String type2 = ( String) tom_match7_1_2_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_2_3_2) ||  false ) { { TomType tlType2 = ( TomType) tom_match7_1_2_3_2; { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_3;





 
        buildGetSubtermDecl(deep, name1, name2, type1, tlType1, tlType2, tlCode);
        return;
      }} }}} }}} }}} }}}}} }} }}} }}} }}} }}}}} }}}} } if(tom_is_fun_sym_IsFsymDecl(tom_match7_1) ||  false ) { { TomName tom_match7_1_1 = ( TomName) tom_get_slot_IsFsymDecl_astName(tom_match7_1); { TomTerm tom_match7_1_2 = ( TomTerm) tom_get_slot_IsFsymDecl_variable(tom_match7_1); { TargetLanguage tom_match7_1_3 = ( TargetLanguage) tom_get_slot_IsFsymDecl_tlCode(tom_match7_1); if(tom_is_fun_sym_Name(tom_match7_1_1) ||  false ) { { String tom_match7_1_1_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1); { String tomName = ( String) tom_match7_1_1_1; if(tom_is_fun_sym_Variable(tom_match7_1_2) ||  false ) { { OptionList tom_match7_1_2_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_2); { TomName tom_match7_1_2_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_2); { TomType tom_match7_1_2_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_2); { OptionList option1 = ( OptionList) tom_match7_1_2_1; if(tom_is_fun_sym_Name(tom_match7_1_2_2) ||  false ) { { String tom_match7_1_2_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_2_2); { String name1 = ( String) tom_match7_1_2_2_1; if(tom_is_fun_sym_Type(tom_match7_1_2_3) ||  false ) { { TomType tom_match7_1_2_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_2_3); { TomType tom_match7_1_2_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_2_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_2_3_1) ||  false ) { { String tom_match7_1_2_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_2_3_1); { String type1 = ( String) tom_match7_1_2_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_2_3_2) ||  false ) { { TomType tlType = ( TomType) tom_match7_1_2_3_2; if(tom_is_fun_sym_TL(tom_match7_1_3) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_3;



 
        buildIsFsymDecl(deep, tomName, name1, tlType, tlCode);
        return;
      } }} }}} }}} }}} }}}}} }}} }}}} } if(tom_is_fun_sym_GetSlotDecl(tom_match7_1) ||  false ) { { TomName tom_match7_1_1 = ( TomName) tom_get_slot_GetSlotDecl_astName(tom_match7_1); { TomName tom_match7_1_2 = ( TomName) tom_get_slot_GetSlotDecl_slotName(tom_match7_1); { TomTerm tom_match7_1_3 = ( TomTerm) tom_get_slot_GetSlotDecl_variable(tom_match7_1); { TargetLanguage tom_match7_1_4 = ( TargetLanguage) tom_get_slot_GetSlotDecl_tlCode(tom_match7_1); if(tom_is_fun_sym_Name(tom_match7_1_1) ||  false ) { { String tom_match7_1_1_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1); { String tomName = ( String) tom_match7_1_1_1; { TomName slotName = ( TomName) tom_match7_1_2; if(tom_is_fun_sym_Variable(tom_match7_1_3) ||  false ) { { OptionList tom_match7_1_3_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_3); { TomName tom_match7_1_3_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_3); { TomType tom_match7_1_3_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_3); { OptionList option1 = ( OptionList) tom_match7_1_3_1; if(tom_is_fun_sym_Name(tom_match7_1_3_2) ||  false ) { { String tom_match7_1_3_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_3_2); { String name1 = ( String) tom_match7_1_3_2_1; if(tom_is_fun_sym_Type(tom_match7_1_3_3) ||  false ) { { TomType tom_match7_1_3_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_3_3); { TomType tom_match7_1_3_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_3_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_3_3_1) ||  false ) { { String tom_match7_1_3_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_3_3_1); { String type1 = ( String) tom_match7_1_3_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_3_3_2) ||  false ) { { TomType tlType = ( TomType) tom_match7_1_3_3_2; if(tom_is_fun_sym_TL(tom_match7_1_4) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_4;




 
        buildGetSlotDecl(deep, tomName, name1, tlType, tlCode, slotName);
        return;
      } }} }}} }}} }}} }}}}} }}}} }}}}} } if(tom_is_fun_sym_CompareFunctionSymbolDecl(tom_match7_1) ||  false ) { { TomTerm tom_match7_1_1 = ( TomTerm) tom_get_slot_CompareFunctionSymbolDecl_symbolArg1(tom_match7_1); { TomTerm tom_match7_1_2 = ( TomTerm) tom_get_slot_CompareFunctionSymbolDecl_symbolArg2(tom_match7_1); { TargetLanguage tom_match7_1_3 = ( TargetLanguage) tom_get_slot_CompareFunctionSymbolDecl_tlCode(tom_match7_1); if(tom_is_fun_sym_Variable(tom_match7_1_1) ||  false ) { { OptionList tom_match7_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_1); { TomName tom_match7_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_1); { TomType tom_match7_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_1); { OptionList option1 = ( OptionList) tom_match7_1_1_1; if(tom_is_fun_sym_Name(tom_match7_1_1_2) ||  false ) { { String tom_match7_1_1_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1_2); { String name1 = ( String) tom_match7_1_1_2_1; if(tom_is_fun_sym_Type(tom_match7_1_1_3) ||  false ) { { TomType tom_match7_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_1_3_1) ||  false ) { { String tom_match7_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_1_3_1); { String type1 = ( String) tom_match7_1_1_3_1_1; if(tom_is_fun_sym_Variable(tom_match7_1_2) ||  false ) { { OptionList tom_match7_1_2_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_2); { TomName tom_match7_1_2_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_2); { TomType tom_match7_1_2_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_2); { OptionList option2 = ( OptionList) tom_match7_1_2_1; if(tom_is_fun_sym_Name(tom_match7_1_2_2) ||  false ) { { String tom_match7_1_2_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_2_2); { String name2 = ( String) tom_match7_1_2_2_1; if(tom_is_fun_sym_Type(tom_match7_1_2_3) ||  false ) { { TomType tom_match7_1_2_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_2_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_2_3_1) ||  false ) { { String tom_match7_1_2_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_2_3_1); { String type2 = ( String) tom_match7_1_2_3_1_1; { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_3;



 
        buildCompareFunctionSymbolDecl(deep, name1, name2, type1, type2, tlCode);
        return;
      }}} }} }}} }}}}} }}} }} }}} }}}}} }}}} } if(tom_is_fun_sym_TermsEqualDecl(tom_match7_1) ||  false ) { { TomTerm tom_match7_1_1 = ( TomTerm) tom_get_slot_TermsEqualDecl_termArg1(tom_match7_1); { TomTerm tom_match7_1_2 = ( TomTerm) tom_get_slot_TermsEqualDecl_termArg2(tom_match7_1); { TargetLanguage tom_match7_1_3 = ( TargetLanguage) tom_get_slot_TermsEqualDecl_tlCode(tom_match7_1); if(tom_is_fun_sym_Variable(tom_match7_1_1) ||  false ) { { OptionList tom_match7_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_1); { TomName tom_match7_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_1); { TomType tom_match7_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_1); { OptionList option1 = ( OptionList) tom_match7_1_1_1; if(tom_is_fun_sym_Name(tom_match7_1_1_2) ||  false ) { { String tom_match7_1_1_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1_2); { String name1 = ( String) tom_match7_1_1_2_1; if(tom_is_fun_sym_Type(tom_match7_1_1_3) ||  false ) { { TomType tom_match7_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_1_3_1) ||  false ) { { String tom_match7_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_1_3_1); { String type1 = ( String) tom_match7_1_1_3_1_1; if(tom_is_fun_sym_Variable(tom_match7_1_2) ||  false ) { { OptionList tom_match7_1_2_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_2); { TomName tom_match7_1_2_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_2); { TomType tom_match7_1_2_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_2); { OptionList option2 = ( OptionList) tom_match7_1_2_1; if(tom_is_fun_sym_Name(tom_match7_1_2_2) ||  false ) { { String tom_match7_1_2_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_2_2); { String name2 = ( String) tom_match7_1_2_2_1; if(tom_is_fun_sym_Type(tom_match7_1_2_3) ||  false ) { { TomType tom_match7_1_2_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_2_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_2_3_1) ||  false ) { { String tom_match7_1_2_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_2_3_1); { String type2 = ( String) tom_match7_1_2_3_1_1; { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_3;



 
        buildTermsEqualDecl(deep, name1, name2, type1, type2, tlCode);
        return;
      }}} }} }}} }}}}} }}} }} }}} }}}}} }}}} } if(tom_is_fun_sym_GetHeadDecl(tom_match7_1) ||  false ) { { TomTerm tom_match7_1_1 = ( TomTerm) tom_get_slot_GetHeadDecl_var(tom_match7_1); { TargetLanguage tom_match7_1_2 = ( TargetLanguage) tom_get_slot_GetHeadDecl_tlcode(tom_match7_1); if(tom_is_fun_sym_Variable(tom_match7_1_1) ||  false ) { { OptionList tom_match7_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_1); { TomName tom_match7_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_1); { TomType tom_match7_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_1); { OptionList option1 = ( OptionList) tom_match7_1_1_1; if(tom_is_fun_sym_Name(tom_match7_1_1_2) ||  false ) { { String tom_match7_1_1_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1_2); { String name1 = ( String) tom_match7_1_1_2_1; if(tom_is_fun_sym_Type(tom_match7_1_1_3) ||  false ) { { TomType tom_match7_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_1_3); { TomType tom_match7_1_1_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_1_3_1) ||  false ) { { String tom_match7_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_1_3_1); { String type = ( String) tom_match7_1_1_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_1_3_2) ||  false ) { { TomType tlType = ( TomType) tom_match7_1_1_3_2; if(tom_is_fun_sym_TL(tom_match7_1_2) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_2;


 
        buildGetHeadDecl(deep, name1, type, tlType, tlCode);
        return;
      } }} }}} }}} }}} }}}}} }}} } if(tom_is_fun_sym_GetTailDecl(tom_match7_1) ||  false ) { { TomTerm tom_match7_1_1 = ( TomTerm) tom_get_slot_GetTailDecl_var(tom_match7_1); { TargetLanguage tom_match7_1_2 = ( TargetLanguage) tom_get_slot_GetTailDecl_tlcode(tom_match7_1); if(tom_is_fun_sym_Variable(tom_match7_1_1) ||  false ) { { OptionList tom_match7_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_1); { TomName tom_match7_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_1); { TomType tom_match7_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_1); { OptionList option1 = ( OptionList) tom_match7_1_1_1; if(tom_is_fun_sym_Name(tom_match7_1_1_2) ||  false ) { { String tom_match7_1_1_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1_2); { String name1 = ( String) tom_match7_1_1_2_1; if(tom_is_fun_sym_Type(tom_match7_1_1_3) ||  false ) { { TomType tom_match7_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_1_3); { TomType tom_match7_1_1_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_1_3_1) ||  false ) { { String tom_match7_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_1_3_1); { String type = ( String) tom_match7_1_1_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_1_3_2) ||  false ) { { TomType tlType = ( TomType) tom_match7_1_1_3_2; if(tom_is_fun_sym_TL(tom_match7_1_2) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_2;


 
        buildGetTailDecl(deep, name1, type, tlType, tlCode);
        return;
      } }} }}} }}} }}} }}}}} }}} } if(tom_is_fun_sym_IsEmptyDecl(tom_match7_1) ||  false ) { { TomTerm tom_match7_1_1 = ( TomTerm) tom_get_slot_IsEmptyDecl_var(tom_match7_1); { TargetLanguage tom_match7_1_2 = ( TargetLanguage) tom_get_slot_IsEmptyDecl_tlcode(tom_match7_1); if(tom_is_fun_sym_Variable(tom_match7_1_1) ||  false ) { { OptionList tom_match7_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_1); { TomName tom_match7_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_1); { TomType tom_match7_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_1); { OptionList option1 = ( OptionList) tom_match7_1_1_1; if(tom_is_fun_sym_Name(tom_match7_1_1_2) ||  false ) { { String tom_match7_1_1_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1_2); { String name1 = ( String) tom_match7_1_1_2_1; if(tom_is_fun_sym_Type(tom_match7_1_1_3) ||  false ) { { TomType tom_match7_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_1_3); { TomType tom_match7_1_1_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_1_3_1) ||  false ) { { String tom_match7_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_1_3_1); { String type = ( String) tom_match7_1_1_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_1_3_2) ||  false ) { { TomType tlType = ( TomType) tom_match7_1_1_3_2; if(tom_is_fun_sym_TL(tom_match7_1_2) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_2;


 
        buildIsEmptyDecl(deep, name1, type, tlType, tlCode);
        return;
      } }} }}} }}} }}} }}}}} }}} } if(tom_is_fun_sym_MakeEmptyList(tom_match7_1) ||  false ) { { TomName tom_match7_1_1 = ( TomName) tom_get_slot_MakeEmptyList_astName(tom_match7_1); { TargetLanguage tom_match7_1_2 = ( TargetLanguage) tom_get_slot_MakeEmptyList_tlCode(tom_match7_1); if(tom_is_fun_sym_Name(tom_match7_1_1) ||  false ) { { String tom_match7_1_1_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1); { String opname = ( String) tom_match7_1_1_1; if(tom_is_fun_sym_TL(tom_match7_1_2) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_2;

 
        //System.out.println("symbol = " + getSymbol(opname));
        TomType codomain = getSymbolCodomain(getSymbol(opname));
        buildMakeEmptyList(deep, opname, codomain, tlCode);
        return;
      } }}} }}} } if(tom_is_fun_sym_MakeAddList(tom_match7_1) ||  false ) { { TomName tom_match7_1_1 = ( TomName) tom_get_slot_MakeAddList_astName(tom_match7_1); { TomTerm tom_match7_1_2 = ( TomTerm) tom_get_slot_MakeAddList_varElt(tom_match7_1); { TomTerm tom_match7_1_3 = ( TomTerm) tom_get_slot_MakeAddList_varList(tom_match7_1); { TargetLanguage tom_match7_1_4 = ( TargetLanguage) tom_get_slot_MakeAddList_tlCode(tom_match7_1); if(tom_is_fun_sym_Name(tom_match7_1_1) ||  false ) { { String tom_match7_1_1_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1); { String opname = ( String) tom_match7_1_1_1; if(tom_is_fun_sym_Variable(tom_match7_1_2) ||  false ) { { OptionList tom_match7_1_2_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_2); { TomName tom_match7_1_2_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_2); { TomType tom_match7_1_2_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_2); { OptionList option1 = ( OptionList) tom_match7_1_2_1; if(tom_is_fun_sym_Name(tom_match7_1_2_2) ||  false ) { { String tom_match7_1_2_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_2_2); { String name1 = ( String) tom_match7_1_2_2_1; if(tom_is_fun_sym_Type(tom_match7_1_2_3) ||  false ) { { TomType fullEltType = ( TomType) tom_match7_1_2_3; { TomType tom_match7_1_2_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_2_3); { TomType tom_match7_1_2_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_2_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_2_3_1) ||  false ) { { String tom_match7_1_2_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_2_3_1); { String type1 = ( String) tom_match7_1_2_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_2_3_2) ||  false ) { { TomType tlType1 = ( TomType) tom_match7_1_2_3_2; if(tom_is_fun_sym_Variable(tom_match7_1_3) ||  false ) { { OptionList tom_match7_1_3_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_3); { TomName tom_match7_1_3_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_3); { TomType tom_match7_1_3_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_3); { OptionList option2 = ( OptionList) tom_match7_1_3_1; if(tom_is_fun_sym_Name(tom_match7_1_3_2) ||  false ) { { String tom_match7_1_3_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_3_2); { String name2 = ( String) tom_match7_1_3_2_1; if(tom_is_fun_sym_Type(tom_match7_1_3_3) ||  false ) { { TomType fullListType = ( TomType) tom_match7_1_3_3; { TomType tom_match7_1_3_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_3_3); { TomType tom_match7_1_3_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_3_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_3_3_1) ||  false ) { { String tom_match7_1_3_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_3_3_1); { String type2 = ( String) tom_match7_1_3_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_3_3_2) ||  false ) { { TomType tlType2 = ( TomType) tom_match7_1_3_3_2; if(tom_is_fun_sym_TL(tom_match7_1_4) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_4;




 
        buildMakeAddList(deep, opname, name1, name2, tlType1, tlType2, fullEltType, fullListType, tlCode);
        return;
      } }} }}} }}}} }}} }}}}} }} }}} }}}} }}} }}}}} }}} }}}}} } if(tom_is_fun_sym_GetElementDecl(tom_match7_1) ||  false ) { { TomTerm tom_match7_1_1 = ( TomTerm) tom_get_slot_GetElementDecl_kid1(tom_match7_1); { TomTerm tom_match7_1_2 = ( TomTerm) tom_get_slot_GetElementDecl_kid2(tom_match7_1); { TargetLanguage tom_match7_1_3 = ( TargetLanguage) tom_get_slot_GetElementDecl_tlCode(tom_match7_1); if(tom_is_fun_sym_Variable(tom_match7_1_1) ||  false ) { { OptionList tom_match7_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_1); { TomName tom_match7_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_1); { TomType tom_match7_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_1); { OptionList option1 = ( OptionList) tom_match7_1_1_1; if(tom_is_fun_sym_Name(tom_match7_1_1_2) ||  false ) { { String tom_match7_1_1_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1_2); { String name1 = ( String) tom_match7_1_1_2_1; if(tom_is_fun_sym_Type(tom_match7_1_1_3) ||  false ) { { TomType tom_match7_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_1_3); { TomType tom_match7_1_1_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_1_3_1) ||  false ) { { String tom_match7_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_1_3_1); { String type1 = ( String) tom_match7_1_1_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_1_3_2) ||  false ) { { TomType tlType1 = ( TomType) tom_match7_1_1_3_2; if(tom_is_fun_sym_Variable(tom_match7_1_2) ||  false ) { { OptionList tom_match7_1_2_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_2); { TomName tom_match7_1_2_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_2); { TomType tom_match7_1_2_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_2); { OptionList option2 = ( OptionList) tom_match7_1_2_1; if(tom_is_fun_sym_Name(tom_match7_1_2_2) ||  false ) { { String tom_match7_1_2_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_2_2); { String name2 = ( String) tom_match7_1_2_2_1; if(tom_is_fun_sym_Type(tom_match7_1_2_3) ||  false ) { { TomType tom_match7_1_2_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_2_3); { TomType tom_match7_1_2_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_2_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_2_3_1) ||  false ) { { String tom_match7_1_2_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_2_3_1); { String type2 = ( String) tom_match7_1_2_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_2_3_2) ||  false ) { { TomType tlType2 = ( TomType) tom_match7_1_2_3_2; if(tom_is_fun_sym_TL(tom_match7_1_3) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_3;



 
        buildGetElementDecl(deep, name1, name2, type1, tlType1, tlCode);
        return;
      } }} }}} }}} }}} }}}}} }} }}} }}} }}} }}}}} }}}} } if(tom_is_fun_sym_GetSizeDecl(tom_match7_1) ||  false ) { { TomTerm tom_match7_1_1 = ( TomTerm) tom_get_slot_GetSizeDecl_kid1(tom_match7_1); { TargetLanguage tom_match7_1_2 = ( TargetLanguage) tom_get_slot_GetSizeDecl_tlCode(tom_match7_1); if(tom_is_fun_sym_Variable(tom_match7_1_1) ||  false ) { { OptionList tom_match7_1_1_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_1); { TomName tom_match7_1_1_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_1); { TomType tom_match7_1_1_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_1); { OptionList option1 = ( OptionList) tom_match7_1_1_1; if(tom_is_fun_sym_Name(tom_match7_1_1_2) ||  false ) { { String tom_match7_1_1_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1_2); { String name1 = ( String) tom_match7_1_1_2_1; if(tom_is_fun_sym_Type(tom_match7_1_1_3) ||  false ) { { TomType tom_match7_1_1_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_1_3); { TomType tom_match7_1_1_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_1_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_1_3_1) ||  false ) { { String tom_match7_1_1_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_1_3_1); { String type = ( String) tom_match7_1_1_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_1_3_2) ||  false ) { { TomType tlType = ( TomType) tom_match7_1_1_3_2; if(tom_is_fun_sym_TL(tom_match7_1_2) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_2;


 
        buildGetSizeDecl(deep, name1, type, tlType, tlCode);
        return;
      } }} }}} }}} }}} }}}}} }}} } if(tom_is_fun_sym_MakeEmptyArray(tom_match7_1) ||  false ) { { TomName tom_match7_1_1 = ( TomName) tom_get_slot_MakeEmptyArray_astName(tom_match7_1); { TomTerm tom_match7_1_2 = ( TomTerm) tom_get_slot_MakeEmptyArray_varSize(tom_match7_1); { TargetLanguage tom_match7_1_3 = ( TargetLanguage) tom_get_slot_MakeEmptyArray_tlCode(tom_match7_1); if(tom_is_fun_sym_Name(tom_match7_1_1) ||  false ) { { String tom_match7_1_1_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1); { String opname = ( String) tom_match7_1_1_1; if(tom_is_fun_sym_Variable(tom_match7_1_2) ||  false ) { { OptionList tom_match7_1_2_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_2); { TomName tom_match7_1_2_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_2); { TomType tom_match7_1_2_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_2); { OptionList option1 = ( OptionList) tom_match7_1_2_1; if(tom_is_fun_sym_Name(tom_match7_1_2_2) ||  false ) { { String tom_match7_1_2_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_2_2); { String name1 = ( String) tom_match7_1_2_2_1; if(tom_is_fun_sym_Type(tom_match7_1_2_3) ||  false ) { { TomType tom_match7_1_2_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_2_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_2_3_1) ||  false ) { { String tom_match7_1_2_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_2_3_1); { String type1 = ( String) tom_match7_1_2_3_1_1; if(tom_is_fun_sym_TL(tom_match7_1_3) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_3;



 
        TomType codomain = getSymbolCodomain(getSymbol(opname));
        buildMakeEmptyArray(deep, opname, codomain, name1, tlCode);
        return;
      } }}} }} }}} }}}}} }}} }}}} } if(tom_is_fun_sym_MakeAddArray(tom_match7_1) ||  false ) { { TomName tom_match7_1_1 = ( TomName) tom_get_slot_MakeAddArray_astName(tom_match7_1); { TomTerm tom_match7_1_2 = ( TomTerm) tom_get_slot_MakeAddArray_varElt(tom_match7_1); { TomTerm tom_match7_1_3 = ( TomTerm) tom_get_slot_MakeAddArray_varList(tom_match7_1); { TargetLanguage tom_match7_1_4 = ( TargetLanguage) tom_get_slot_MakeAddArray_tlCode(tom_match7_1); if(tom_is_fun_sym_Name(tom_match7_1_1) ||  false ) { { String tom_match7_1_1_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1); { String opname = ( String) tom_match7_1_1_1; if(tom_is_fun_sym_Variable(tom_match7_1_2) ||  false ) { { OptionList tom_match7_1_2_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_2); { TomName tom_match7_1_2_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_2); { TomType tom_match7_1_2_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_2); { OptionList option1 = ( OptionList) tom_match7_1_2_1; if(tom_is_fun_sym_Name(tom_match7_1_2_2) ||  false ) { { String tom_match7_1_2_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_2_2); { String name1 = ( String) tom_match7_1_2_2_1; if(tom_is_fun_sym_Type(tom_match7_1_2_3) ||  false ) { { TomType fullEltType = ( TomType) tom_match7_1_2_3; { TomType tom_match7_1_2_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_2_3); { TomType tom_match7_1_2_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_2_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_2_3_1) ||  false ) { { String tom_match7_1_2_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_2_3_1); { String type1 = ( String) tom_match7_1_2_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_2_3_2) ||  false ) { { TomType tlType1 = ( TomType) tom_match7_1_2_3_2; if(tom_is_fun_sym_Variable(tom_match7_1_3) ||  false ) { { OptionList tom_match7_1_3_1 = ( OptionList) tom_get_slot_Variable_option(tom_match7_1_3); { TomName tom_match7_1_3_2 = ( TomName) tom_get_slot_Variable_astName(tom_match7_1_3); { TomType tom_match7_1_3_3 = ( TomType) tom_get_slot_Variable_astType(tom_match7_1_3); { OptionList option2 = ( OptionList) tom_match7_1_3_1; if(tom_is_fun_sym_Name(tom_match7_1_3_2) ||  false ) { { String tom_match7_1_3_2_1 = ( String) tom_get_slot_Name_string(tom_match7_1_3_2); { String name2 = ( String) tom_match7_1_3_2_1; if(tom_is_fun_sym_Type(tom_match7_1_3_3) ||  false ) { { TomType fullArrayType = ( TomType) tom_match7_1_3_3; { TomType tom_match7_1_3_3_1 = ( TomType) tom_get_slot_Type_tomType(tom_match7_1_3_3); { TomType tom_match7_1_3_3_2 = ( TomType) tom_get_slot_Type_tlType(tom_match7_1_3_3); if(tom_is_fun_sym_ASTTomType(tom_match7_1_3_3_1) ||  false ) { { String tom_match7_1_3_3_1_1 = ( String) tom_get_slot_ASTTomType_string(tom_match7_1_3_3_1); { String type2 = ( String) tom_match7_1_3_3_1_1; if(tom_is_fun_sym_TLType(tom_match7_1_3_3_2) ||  false ) { { TomType tlType2 = ( TomType) tom_match7_1_3_3_2; if(tom_is_fun_sym_TL(tom_match7_1_4) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_4;




 
        buildMakeAddArray(deep, opname, name1, name2, tlType1, tlType2, fullEltType, fullArrayType, tlCode);
        return;
      } }} }}} }}}} }}} }}}}} }} }}} }}}} }}} }}}}} }}} }}}}} } if(tom_is_fun_sym_MakeDecl(tom_match7_1) ||  false ) { { TomName tom_match7_1_1 = ( TomName) tom_get_slot_MakeDecl_astName(tom_match7_1); { TomType tom_match7_1_2 = ( TomType) tom_get_slot_MakeDecl_astType(tom_match7_1); { TomList tom_match7_1_3 = ( TomList) tom_get_slot_MakeDecl_args(tom_match7_1); { TargetLanguage tom_match7_1_4 = ( TargetLanguage) tom_get_slot_MakeDecl_tlCode(tom_match7_1); if(tom_is_fun_sym_Name(tom_match7_1_1) ||  false ) { { String tom_match7_1_1_1 = ( String) tom_get_slot_Name_string(tom_match7_1_1); { String opname = ( String) tom_match7_1_1_1; { TomType returnType = ( TomType) tom_match7_1_2; { TomList argList = ( TomList) tom_match7_1_3; if(tom_is_fun_sym_TL(tom_match7_1_4) ||  false ) { { TargetLanguage tlCode = ( TargetLanguage) tom_match7_1_4;

 
        generateTargetLanguage(deep, genDeclMake(opname, returnType, argList, tlCode));
        return;
      } }}}}} }}}}} } if(tom_is_fun_sym_TypeTermDecl(tom_match7_1) ||  false ) { { TomList tom_match7_1_2 = ( TomList) tom_get_slot_TypeTermDecl_keywordList(tom_match7_1); { TomList declList = ( TomList) tom_match7_1_2;

 
        buildTypeTermDecl(deep, declList);
        return;
      }} } if(tom_is_fun_sym_TypeListDecl(tom_match7_1) ||  false ) { { TomList tom_match7_1_2 = ( TomList) tom_get_slot_TypeListDecl_keywordList(tom_match7_1); { TomList declList = ( TomList) tom_match7_1_2;

  
        buildTypeListDecl(deep, declList);
        return;
      }} } if(tom_is_fun_sym_TypeArrayDecl(tom_match7_1) ||  false ) { { TomList tom_match7_1_2 = ( TomList) tom_get_slot_TypeArrayDecl_keywordList(tom_match7_1); { TomList declList = ( TomList) tom_match7_1_2;

  
        buildTypeArrayDecl(deep, declList);
        return;
      }} } { Declaration t = ( Declaration) tom_match7_1;

 
        System.out.println("Cannot generate code for declaration: " + t);
        throw new TomRuntimeException(new Throwable("Cannot generate code for declaration: " + t));
      }}}
 
  }
	
	public void generateListInclude(int deep, TomList subject) throws IOException {
 		output.setSingleLine();
		generateList(deep, subject);
		output.unsetSingleLine();
	}

  public void generateList(int deep, TomList subject)
    throws IOException {
    while(!subject.isEmpty()) {
      generate(deep,subject.getHead());
      subject = subject.getTail();
    }
  }
  
  public void generateOptionList(int deep, OptionList subject)
    throws IOException {
    while(!subject.isEmpty()) {
      generateOption(deep,subject.getHead());
      subject = subject.getTail();
    }
  }

  public void generateInstructionList(int deep, InstructionList subject)
    throws IOException {
    while(!subject.isEmpty()) {
      generateInstruction(deep,subject.getHead());
      subject = subject.getTail();
    }
  }

  public void generateSlotList(int deep, SlotList slotList)
    throws IOException {
    while ( !slotList.isEmpty() ) {
      generateDeclaration(deep, slotList.getHead().getSlotDecl());
      slotList = slotList.getTail();
    }
  }
  
	
    // ------------------------------------------------------------
	
  protected abstract TargetLanguage genDecl(String returnType,
                                            String declName,
                                            String suffix,
                                            String args[],
                                            TargetLanguage tlCode);
  
  protected abstract TargetLanguage genDeclMake(String opname, TomType returnType, 
                                            TomList argList, TargetLanguage tlCode);
  
  protected abstract TargetLanguage genDeclList(String name, TomType listType, TomType eltType);

  protected abstract TargetLanguage genDeclArray(String name, TomType listType, TomType eltType);
 
	// ------------------------------------------------------------
  
  protected abstract void buildInstructionSequence(int deep, Instruction instruction) throws IOException;
  protected abstract void buildComment(int deep, String text) throws IOException;
  protected abstract void buildTerm(int deep, String name, TomList argList) throws IOException;
  protected abstract void buildRef(int deep, TomTerm term) throws IOException;
  protected abstract void buildList(int deep, String name, TomList argList) throws IOException;
  protected abstract void buildArray(int deep,String name, TomList argList) throws IOException;
  protected abstract void buildFunctionCall(int deep, String name, TomList argList)  throws IOException;
  protected abstract void buildFunctionBegin(int deep, String tomName, TomList varList) throws IOException; 
  protected abstract void buildFunctionEnd(int deep) throws IOException;
  protected abstract void buildExpNot(int deep, Expression exp) throws IOException;

  protected abstract void buildCompiledMatch(int deep, Instruction instruction, OptionList list) throws IOException;
	protected abstract void buildExpAnd(int deep, Expression exp1, Expression exp2) throws IOException;
  protected abstract void buildExpOr(int deep, Expression exp1, Expression exp2) throws IOException;
  protected abstract void buildExpTrue(int deep) throws IOException;
  protected abstract void buildExpFalse(int deep) throws IOException;
  protected abstract void buildExpEmptyList(int deep, TomType type1, TomTerm var) throws IOException;
  protected abstract void buildExpEmptyArray(int deep, TomType type1, TomTerm varIndex, TomTerm varArray) throws IOException;
  protected abstract void buildExpEqualFunctionVarAppl(int deep, TomTerm var, TomType type1, String tomName) throws IOException;
  protected abstract void buildExpEqualFunctionVarVar(int deep, TomType type1, TomTerm var1, String var2) throws IOException;
  protected abstract void buildExpEqualTermVar(int deep, TomType type1, TomTerm var1,TomTerm var2) throws IOException;
  protected abstract void buildExpEqualTermVarStar(int deep, TomType type1, TomTerm var1, TomTerm var2) throws IOException;
  protected abstract void buildExpIsFsym(int deep, String opname, TomTerm var) throws IOException;
  protected abstract void buildExpGetSubterm(int deep, TomTerm var, TomType type1, int number) throws IOException;
  protected abstract void buildExpGetSlot(int deep, String opname, String slotName, TomTerm var) throws IOException;
  protected abstract void buildExpGetHead(int deep, TomType type1, TomTerm var) throws IOException;
  protected abstract void buildExpGetTail(int deep, TomType type1, TomTerm var) throws IOException;
  protected abstract void buildExpGetSize(int deep, TomType type1, TomTerm var) throws IOException;
  protected abstract void buildExpGetElement(int deep, TomType type1, TomTerm varName, TomTerm varIndex) throws IOException;
  protected abstract void buildExpGetSliceList(int deep, String name, TomTerm varBegin, TomTerm varEnd) throws IOException;
  protected abstract void buildExpGetSliceArray(int deep, String name, TomTerm varArray, TomTerm varBegin, TomTerm expEnd) throws IOException;
  protected abstract void buildAssignVar(int deep, TomTerm var, OptionList list, String type, TomType tlType, Expression exp) throws IOException ;
  protected abstract void buildLet(int deep, TomTerm var, OptionList list, String type, TomType tlType, Expression exp, Instruction body) throws IOException ;
  protected abstract void buildLetRef(int deep, TomTerm var, OptionList list, String type, TomType tlType, Expression exp, Instruction body) throws IOException ;
  protected abstract void buildNamedBlock(int deep, String blockName, InstructionList instList) throws IOException ;
  protected abstract void buildUnamedBlock(int deep, InstructionList instList) throws IOException ;
  protected abstract void buildIfThenElse(int deep, Expression exp, Instruction succes) throws IOException ;
  protected abstract void buildIfThenElseWithFailure(int deep, Expression exp, Instruction succes, Instruction failure) throws IOException ;
  protected abstract void buildDoWhile(int deep, Instruction succes, Expression exp) throws IOException;
  protected abstract void buildIncrement(int deep, TomTerm var) throws IOException;
  protected abstract void buildReturn(int deep, TomTerm exp) throws IOException ;
  protected abstract void buildSymbolDecl(int deep, String tomName) throws IOException ;
  protected abstract void buildGetFunctionSymbolDecl(int deep, String type, String name,
TomType tlType, TargetLanguage tlCode) throws IOException;
  protected abstract void buildGetSubtermDecl(int deep, String name1, String name2, String type1,
TomType tlType1, TomType tlType2, TargetLanguage tlCode) throws IOException ;
  protected abstract void buildIsFsymDecl(int deep, String tomName, String name1,
TomType tlType, TargetLanguage tlCode) throws IOException;
  protected abstract void buildGetSlotDecl(int deep, String tomName, String name1,
TomType tlType, TargetLanguage tlCode, TomName slotName) throws IOException;
  protected abstract void  buildCompareFunctionSymbolDecl(int deep, String name1,
String name2, String type1, String type2, TargetLanguage tlCode) throws IOException;
  protected abstract void buildTermsEqualDecl(int deep, String name1, String name2,
String type1, String type2, TargetLanguage tlCode) throws IOException;
  protected abstract void buildGetHeadDecl(int deep, String name1, String type, TomType tlType,TargetLanguage tlCode) throws IOException;
  protected abstract void buildGetTailDecl(int deep, String name1, String type, TomType tlType, TargetLanguage tlCode) throws IOException;
  protected abstract void buildIsEmptyDecl(int deep, String name1, String type,
TomType tlType, TargetLanguage tlCode) throws IOException;
  protected abstract void buildMakeEmptyList(int deep, String opname, TomType codomain, TargetLanguage tlCode) throws IOException;
  protected abstract void buildMakeAddList(int deep, String opname, String name1,
String name2, TomType tlType1, TomType tlType2, TomType fullEltType,
TomType fullListType, TargetLanguage tlCode) throws IOException;
  protected abstract void buildGetElementDecl(int deep, String name1, String name2,
String type1, TomType tlType1, TargetLanguage tlCode) throws IOException;
  protected abstract void buildGetSizeDecl(int deep, String name1, String type,
TomType tlType, TargetLanguage tlCode) throws IOException;
  protected abstract void buildMakeEmptyArray(int deep, String opname, TomType codomain,String name1, TargetLanguage tlCode) throws IOException;
  protected abstract void buildMakeAddArray(int deep, String opname, String name1, String name2, TomType tlType1,
TomType tlType2, TomType fullEltType, TomType fullArrayType, TargetLanguage tlCode) throws IOException;
  protected abstract void buildTypeTermDecl(int deep, TomList declList) throws IOException;
  protected abstract void buildTypeListDecl(int deep, TomList declList) throws IOException;
  protected abstract void buildTypeArrayDecl(int deep, TomList declList) throws IOException;
  protected abstract void generateDeclarationFromList(int deep, TomList declList) throws IOException;
} // class TomAbstractGenerator

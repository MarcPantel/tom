/* Generated by TOM (version 2.5alpha): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2007, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine.backend;

import java.io.IOException;

import tom.engine.TomBase;
import tom.engine.exception.TomRuntimeException;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.tools.OutputCode;
import tom.engine.tools.SymbolTable;
import tom.platform.OptionManager;

import aterm.*;

public abstract class TomAbstractGenerator extends TomBase {

  protected OutputCode output;
  protected OptionManager optionManager;
  protected SymbolTable symbolTable;
  protected boolean prettyMode;

  public TomAbstractGenerator(OutputCode output, OptionManager optionManager,
                              SymbolTable symbolTable) {
    this.symbolTable = symbolTable;
    this.optionManager = optionManager;
    this.output = output;
    this.prettyMode = ((Boolean)optionManager.getOptionValue("pretty")).booleanValue();
  }

  protected SymbolTable getSymbolTable(String moduleName) {
    //TODO//
    //Using of the moduleName
    ////////
    return symbolTable;
  }

  protected TomSymbol getSymbolFromName(String tomName) {
    return getSymbolFromName(tomName, symbolTable);
  }

  protected TomSymbol getSymbolFromType(TomType tomType) {
    return getSymbolFromType(tomType, symbolTable);
  }

  protected TomType getTermType(TomTerm t) {
    return getTermType(t, symbolTable);
  }

  protected TomType getUniversalType() {
    return symbolTable.getUniversalType();
  }
// ------------------------------------------------------------
  /* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file *//* Generated by TOM (version 2.5alpha): Do not edit this file */ private static boolean tom_terms_equal_String(String t1, String t2) {  return  (t1.equals(t2))  ;}  /* Generated by TOM (version 2.5alpha): Do not edit this file */private static boolean tom_terms_equal_int(int t1, int t2) {  return  (t1==t2)  ;} private static boolean tom_terms_equal_Instruction(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_InstructionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomForwardType(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomType(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TargetLanguage(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Position(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Declaration(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_DeclarationList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomNameList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomNumberList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomName(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Expression(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomTerm(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_TomList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Pattern(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_PatternList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_Option(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_OptionList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_ConstraintList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_terms_equal_SlotList(Object t1, Object t2) {  return  t1.equals(t2)  ;}private static boolean tom_is_fun_sym_TomTermToInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.TomTermToInstruction  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_TomTermToInstruction_Tom( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getTom()  ;}private static boolean tom_is_fun_sym_TargetLanguageToInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.TargetLanguageToInstruction  ;}private static  tom.engine.adt.tomsignature.types.TargetLanguage  tom_get_slot_TargetLanguageToInstruction_Tl( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getTl()  ;}private static boolean tom_is_fun_sym_If( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.If  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_If_Condition( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getCondition()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_If_SuccesInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSuccesInst()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_If_FailureInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getFailureInst()  ;}private static boolean tom_is_fun_sym_DoWhile( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.DoWhile  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_DoWhile_DoInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getDoInst()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_DoWhile_Condition( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getCondition()  ;}private static boolean tom_is_fun_sym_WhileDo( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.WhileDo  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_WhileDo_Condition( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getCondition()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_WhileDo_DoInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getDoInst()  ;}private static boolean tom_is_fun_sym_Assign( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Assign  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Assign_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Assign_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static boolean tom_is_fun_sym_Let( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Let  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Let_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Let_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_Let_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_LetRef( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.LetRef  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_LetRef_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_LetRef_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_LetRef_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_LetAssign( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.LetAssign  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_LetAssign_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_LetAssign_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_LetAssign_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_AssignMatchSubject( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.AssignMatchSubject  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_AssignMatchSubject_Kid1( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getKid1()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_AssignMatchSubject_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static boolean tom_is_fun_sym_Return( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Return  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Return_Kid1( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getKid1()  ;}private static boolean tom_is_fun_sym_Nop( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.Nop  ;}private static boolean tom_is_fun_sym_AbstractBlock( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.AbstractBlock  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slot_AbstractBlock_InstList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getInstList()  ;}private static boolean tom_is_fun_sym_UnamedBlock( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.UnamedBlock  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slot_UnamedBlock_InstList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getInstList()  ;}private static boolean tom_is_fun_sym_NamedBlock( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.NamedBlock  ;}private static  String  tom_get_slot_NamedBlock_BlockName( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getBlockName()  ;}private static  tom.engine.adt.tominstruction.types.InstructionList  tom_get_slot_NamedBlock_InstList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getInstList()  ;}private static boolean tom_is_fun_sym_CompiledMatch( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.CompiledMatch  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_CompiledMatch_AutomataInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAutomataInst()  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_CompiledMatch_Option( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getOption()  ;}private static boolean tom_is_fun_sym_CompiledPattern( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.CompiledPattern  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_CompiledPattern_PatternList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getPatternList()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_CompiledPattern_AutomataInst( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAutomataInst()  ;}private static boolean tom_is_fun_sym_CheckStamp( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.CheckStamp  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_CheckStamp_Variable( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_CheckInstance( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.CheckInstance  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_CheckInstance_AstType( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_CheckInstance_Source( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getSource()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_CheckInstance_Instruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getInstruction()  ;}private static boolean tom_is_fun_sym_TypedAction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t instanceof tom.engine.adt.tominstruction.types.instruction.TypedAction  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_TypedAction_AstInstruction( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getAstInstruction()  ;}private static  tom.engine.adt.tomterm.types.Pattern  tom_get_slot_TypedAction_PositivePattern( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getPositivePattern()  ;}private static  tom.engine.adt.tomterm.types.PatternList  tom_get_slot_TypedAction_NegativePatternList( tom.engine.adt.tominstruction.types.Instruction  t) {  return  t.getNegativePatternList()  ;}private static boolean tom_is_fun_sym_Type( tom.engine.adt.tomtype.types.TomType  t) {  return  t instanceof tom.engine.adt.tomtype.types.tomtype.Type  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TomType( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTomType()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Type_TlType( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTlType()  ;}private static boolean tom_is_fun_sym_ASTTomType( tom.engine.adt.tomtype.types.TomType  t) {  return  t instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType  ;}private static  String  tom_get_slot_ASTTomType_String( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_TLType( tom.engine.adt.tomtype.types.TomType  t) {  return  t instanceof tom.engine.adt.tomtype.types.tomtype.TLType  ;}private static  tom.engine.adt.tomsignature.types.TargetLanguage  tom_get_slot_TLType_Tl( tom.engine.adt.tomtype.types.TomType  t) {  return  t.getTl()  ;}private static boolean tom_is_fun_sym_TL( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t instanceof tom.engine.adt.tomsignature.types.targetlanguage.TL  ;}private static  String  tom_get_slot_TL_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getCode()  ;}private static  tom.engine.adt.tomsignature.types.Position  tom_get_slot_TL_Start( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getStart()  ;}private static  tom.engine.adt.tomsignature.types.Position  tom_get_slot_TL_End( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getEnd()  ;}private static boolean tom_is_fun_sym_ITL( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t instanceof tom.engine.adt.tomsignature.types.targetlanguage.ITL  ;}private static  String  tom_get_slot_ITL_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getCode()  ;}private static boolean tom_is_fun_sym_Comment( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t instanceof tom.engine.adt.tomsignature.types.targetlanguage.Comment  ;}private static  String  tom_get_slot_Comment_Code( tom.engine.adt.tomsignature.types.TargetLanguage  t) {  return  t.getCode()  ;}private static boolean tom_is_fun_sym_TextPosition( tom.engine.adt.tomsignature.types.Position  t) {  return  t instanceof tom.engine.adt.tomsignature.types.position.TextPosition  ;}private static  int  tom_get_slot_TextPosition_Line( tom.engine.adt.tomsignature.types.Position  t) {  return  t.getLine()  ;}private static  int  tom_get_slot_TextPosition_Column( tom.engine.adt.tomsignature.types.Position  t) {  return  t.getColumn()  ;}private static boolean tom_is_fun_sym_TypeTermDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.TypeTermDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_TypeTermDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomdeclaration.types.DeclarationList  tom_get_slot_TypeTermDecl_Declarations( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getDeclarations()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_TypeTermDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_CheckStampDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.CheckStampDecl  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_CheckStampDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_CheckStampDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_CheckStampDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_SetStampDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.SetStampDecl  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_SetStampDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_SetStampDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_SetStampDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_GetImplementationDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.GetImplementationDecl  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetImplementationDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetImplementationDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetImplementationDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_IsFsymDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.IsFsymDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsFsymDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsFsymDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_IsFsymDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_IsFsymDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_GetSlotDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.GetSlotDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlotDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlotDecl_SlotName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getSlotName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSlotDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetSlotDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetSlotDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_TermsEqualDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.TermsEqualDecl  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_TermsEqualDecl_TermArg1( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getTermArg1()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_TermsEqualDecl_TermArg2( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getTermArg2()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_TermsEqualDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_TermsEqualDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_GetHeadDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.GetHeadDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetHeadDecl_Opname( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetHeadDecl_Codomain( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetHeadDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetHeadDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetHeadDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_GetTailDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.GetTailDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetTailDecl_Opname( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetTailDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetTailDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetTailDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_IsEmptyDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.IsEmptyDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsEmptyDecl_Opname( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsEmptyDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_IsEmptyDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_IsEmptyDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeEmptyList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeEmptyList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeEmptyList_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeEmptyList_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeEmptyList_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeAddList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeAddList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeAddList_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddList_VarElt( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarElt()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddList_VarList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarList()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeAddList_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeAddList_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_GetElementDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.GetElementDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetElementDecl_Opname( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetElementDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetElementDecl_Index( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getIndex()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetElementDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetElementDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_GetSizeDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.GetSizeDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSizeDecl_Opname( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSizeDecl_Variable( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_GetSizeDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_GetSizeDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeEmptyArray( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeEmptyArray  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeEmptyArray_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeEmptyArray_VarSize( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarSize()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeEmptyArray_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeEmptyArray_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeAddArray( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeAddArray  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeAddArray_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddArray_VarElt( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarElt()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_MakeAddArray_VarList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getVarList()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeAddArray_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeAddArray_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_MakeDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MakeDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_MakeDecl_AstType( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_MakeDecl_Args( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getArgs()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MakeDecl_Instr( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstr()  ;}private static  tom.engine.adt.tomoption.types.Option  tom_get_slot_MakeDecl_OrgTrack( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getOrgTrack()  ;}private static boolean tom_is_fun_sym_FunctionDef( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.FunctionDef  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_FunctionDef_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_FunctionDef_ArgumentList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getArgumentList()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_FunctionDef_Codomain( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_FunctionDef_ThrowsType( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getThrowsType()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_FunctionDef_Instruction( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstruction()  ;}private static boolean tom_is_fun_sym_MethodDef( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.MethodDef  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_MethodDef_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_MethodDef_ArgumentList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getArgumentList()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_MethodDef_Codomain( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_MethodDef_ThrowsType( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getThrowsType()  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_MethodDef_Instruction( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getInstruction()  ;}private static boolean tom_is_fun_sym_Class( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.Class  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Class_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomForwardType  tom_get_slot_Class_ExtendsType( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getExtendsType()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Class_SuperTerm( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getSuperTerm()  ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_get_slot_Class_Declaration( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getDeclaration()  ;}private static boolean tom_is_fun_sym_SymbolDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.SymbolDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_SymbolDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_ListSymbolDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.ListSymbolDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_ListSymbolDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_ArraySymbolDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.ArraySymbolDecl  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_ArraySymbolDecl_AstName( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_EmptyDeclaration( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.EmptyDeclaration  ;}private static boolean tom_is_fun_sym_AbstractDecl( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t instanceof tom.engine.adt.tomdeclaration.types.declaration.AbstractDecl  ;}private static  tom.engine.adt.tomdeclaration.types.DeclarationList  tom_get_slot_AbstractDecl_DeclList( tom.engine.adt.tomdeclaration.types.Declaration  t) {  return  t.getDeclList()  ;}private static boolean tom_is_fun_sym_Name( tom.engine.adt.tomname.types.TomName  t) {  return  t instanceof tom.engine.adt.tomname.types.tomname.Name  ;}private static  String  tom_get_slot_Name_String( tom.engine.adt.tomname.types.TomName  t) {  return  t.getString()  ;}private static boolean tom_is_fun_sym_PositionName( tom.engine.adt.tomname.types.TomName  t) {  return  t instanceof tom.engine.adt.tomname.types.tomname.PositionName  ;}private static  tom.engine.adt.tomname.types.TomNumberList  tom_get_slot_PositionName_NumberList( tom.engine.adt.tomname.types.TomName  t) {  return  t.getNumberList()  ;}private static boolean tom_is_fun_sym_TomTermToExpression( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.TomTermToExpression  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_TomTermToExpression_AstTerm( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstTerm()  ;}private static boolean tom_is_fun_sym_Bottom( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.Bottom  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Bottom_TomType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getTomType()  ;}private static boolean tom_is_fun_sym_Negation( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.Negation  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_make_Negation( tom.engine.adt.tomexpression.types.Expression  t0) { return  tom.engine.adt.tomexpression.types.expression.Negation.make(t0); }private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Negation_Arg( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg()  ;}private static boolean tom_is_fun_sym_And( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.And  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_And_Arg1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg1()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_And_Arg2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg2()  ;}private static boolean tom_is_fun_sym_Or( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.Or  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Or_Arg1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg1()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Or_Arg2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg2()  ;}private static boolean tom_is_fun_sym_GreaterThan( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GreaterThan  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_GreaterThan_Arg1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg1()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_GreaterThan_Arg2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getArg2()  ;}private static boolean tom_is_fun_sym_TrueTL( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.TrueTL  ;}private static boolean tom_is_fun_sym_FalseTL( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.FalseTL  ;}private static boolean tom_is_fun_sym_EqualFunctionSymbol( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.EqualFunctionSymbol  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_EqualFunctionSymbol_AstType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualFunctionSymbol_Exp1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getExp1()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualFunctionSymbol_Exp2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getExp2()  ;}private static boolean tom_is_fun_sym_EqualTerm( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.EqualTerm  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_make_EqualTerm( tom.engine.adt.tomtype.types.TomType  t0,  tom.engine.adt.tomterm.types.TomTerm  t1,  tom.engine.adt.tomterm.types.TomTerm  t2) { return  tom.engine.adt.tomexpression.types.expression.EqualTerm.make(t0, t1, t2); }private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_EqualTerm_TomType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getTomType()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTerm_Kid1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid1()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_EqualTerm_Kid2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid2()  ;}private static boolean tom_is_fun_sym_Cast( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.Cast  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Cast_AstType( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_Cast_Source( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getSource()  ;}private static boolean tom_is_fun_sym_GetSlot( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetSlot  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetSlot_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSlot_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  String  tom_get_slot_GetSlot_SlotNameString( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getSlotNameString()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSlot_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_IsFsym( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.IsFsym  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_make_IsFsym( tom.engine.adt.tomname.types.TomName  t0,  tom.engine.adt.tomterm.types.TomTerm  t1) { return  tom.engine.adt.tomexpression.types.expression.IsFsym.make(t0, t1); }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsFsym_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsFsym_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetHead( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetHead  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetHead_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetHead_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetHead_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetTail( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetTail  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetTail_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetTail_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_IsEmptyList( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.IsEmptyList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsEmptyList_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsEmptyList_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_IsEmptyArray( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.IsEmptyArray  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_IsEmptyArray_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsEmptyArray_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_IsEmptyArray_Index( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getIndex()  ;}private static boolean tom_is_fun_sym_AddOne( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.AddOne  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_AddOne_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetSize( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetSize  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSize_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSize_Variable( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariable()  ;}private static boolean tom_is_fun_sym_GetElement( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetElement  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetElement_Opname( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getOpname()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_GetElement_Codomain( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getCodomain()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetElement_Kid1( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid1()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetElement_Kid2( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getKid2()  ;}private static boolean tom_is_fun_sym_GetSliceList( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetSliceList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSliceList_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceList_VariableBeginAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableBeginAST()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceList_VariableEndAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableEndAST()  ;}private static boolean tom_is_fun_sym_GetSliceArray( tom.engine.adt.tomexpression.types.Expression  t) {  return  t instanceof tom.engine.adt.tomexpression.types.expression.GetSliceArray  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_GetSliceArray_AstName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceArray_SubjectListName( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getSubjectListName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceArray_VariableBeginAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableBeginAST()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_GetSliceArray_VariableEndAST( tom.engine.adt.tomexpression.types.Expression  t) {  return  t.getVariableEndAST()  ;}private static boolean tom_is_fun_sym_RecordAppl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.RecordAppl  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_RecordAppl_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slot_RecordAppl_NameList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getNameList()  ;}private static  tom.engine.adt.tomslot.types.SlotList  tom_get_slot_RecordAppl_Slots( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getSlots()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_RecordAppl_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_Variable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.Variable  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_Variable( tom.engine.adt.tomoption.types.OptionList  t0,  tom.engine.adt.tomname.types.TomName  t1,  tom.engine.adt.tomtype.types.TomType  t2,  tom.engine.adt.tomconstraint.types.ConstraintList  t3) { return  tom.engine.adt.tomterm.types.tomterm.Variable.make(t0, t1, t2, t3); }private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_Variable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_Variable_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_Variable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_Variable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_VariableStar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_VariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_VariableStar_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_VariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_VariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_UnamedVariable( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariable_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariable_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariable_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_UnamedVariableStar( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar  ;}private static  tom.engine.adt.tomoption.types.OptionList  tom_get_slot_UnamedVariableStar_Option( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getOption()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_UnamedVariableStar_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomconstraint.types.ConstraintList  tom_get_slot_UnamedVariableStar_Constraints( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getConstraints()  ;}private static boolean tom_is_fun_sym_TargetLanguageToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.TargetLanguageToTomTerm  ;}private static  tom.engine.adt.tomsignature.types.TargetLanguage  tom_get_slot_TargetLanguageToTomTerm_Tl( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTl()  ;}private static boolean tom_is_fun_sym_DeclarationToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.DeclarationToTomTerm  ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_get_slot_DeclarationToTomTerm_AstDeclaration( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstDeclaration()  ;}private static boolean tom_is_fun_sym_ExpressionToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.ExpressionToTomTerm  ;}private static  tom.engine.adt.tomexpression.types.Expression  tom_get_slot_ExpressionToTomTerm_AstExpression( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstExpression()  ;}private static boolean tom_is_fun_sym_InstructionToTomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.InstructionToTomTerm  ;}private static  tom.engine.adt.tominstruction.types.Instruction  tom_get_slot_InstructionToTomTerm_AstInstruction( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstInstruction()  ;}private static boolean tom_is_fun_sym_Tom( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.Tom  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Tom_TomList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTomList()  ;}private static boolean tom_is_fun_sym_TomInclude( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.TomInclude  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_TomInclude_TomList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTomList()  ;}private static boolean tom_is_fun_sym_Composite( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.Composite  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_Composite_Args( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getArgs()  ;}private static boolean tom_is_fun_sym_Ref( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.Ref  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_Ref_TomTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTomTerm()  ;}private static boolean tom_is_fun_sym_FunctionCall( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.FunctionCall  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_FunctionCall_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomtype.types.TomType  tom_get_slot_FunctionCall_AstType( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstType()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_FunctionCall_Args( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getArgs()  ;}private static boolean tom_is_fun_sym_BuildConstant( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildConstant  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_make_BuildConstant( tom.engine.adt.tomname.types.TomName  t0) { return  tom.engine.adt.tomterm.types.tomterm.BuildConstant.make(t0); }private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildConstant_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_BuildTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildTerm  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildTerm_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_slot_BuildTerm_Args( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getArgs()  ;}private static  String  tom_get_slot_BuildTerm_ModuleName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getModuleName()  ;}private static boolean tom_is_fun_sym_BuildEmptyList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildEmptyList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildEmptyList_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static boolean tom_is_fun_sym_BuildConsList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildConsList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildConsList_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildConsList_HeadTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getHeadTerm()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildConsList_TailTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTailTerm()  ;}private static boolean tom_is_fun_sym_BuildAppendList( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildAppendList  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildAppendList_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildAppendList_HeadTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getHeadTerm()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildAppendList_TailTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTailTerm()  ;}private static boolean tom_is_fun_sym_BuildEmptyArray( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildEmptyArray  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildEmptyArray_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  int  tom_get_slot_BuildEmptyArray_Size( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getSize()  ;}private static boolean tom_is_fun_sym_BuildConsArray( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildConsArray  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildConsArray_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildConsArray_HeadTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getHeadTerm()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildConsArray_TailTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTailTerm()  ;}private static boolean tom_is_fun_sym_BuildAppendArray( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomterm.BuildAppendArray  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_BuildAppendArray_AstName( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getAstName()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildAppendArray_HeadTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getHeadTerm()  ;}private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_slot_BuildAppendArray_TailTerm( tom.engine.adt.tomterm.types.TomTerm  t) {  return  t.getTailTerm()  ;}private static boolean tom_is_fun_sym_DeclarationToOption( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.DeclarationToOption  ;}private static  tom.engine.adt.tomdeclaration.types.Declaration  tom_get_slot_DeclarationToOption_AstDeclaration( tom.engine.adt.tomoption.types.Option  t) {  return  t.getAstDeclaration()  ;}private static boolean tom_is_fun_sym_DefinedSymbol( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.DefinedSymbol  ;}private static boolean tom_is_fun_sym_OriginTracking( tom.engine.adt.tomoption.types.Option  t) {  return  t instanceof tom.engine.adt.tomoption.types.option.OriginTracking  ;}private static  tom.engine.adt.tomname.types.TomName  tom_get_slot_OriginTracking_AstName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getAstName()  ;}private static  int  tom_get_slot_OriginTracking_Line( tom.engine.adt.tomoption.types.Option  t) {  return  t.getLine()  ;}private static  String  tom_get_slot_OriginTracking_FileName( tom.engine.adt.tomoption.types.Option  t) {  return  t.getFileName()  ;}private static boolean tom_is_fun_sym_concTomName( tom.engine.adt.tomname.types.TomNameList  t) {  return  t instanceof tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName || t instanceof tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_empty_list_concTomName() { return  tom.engine.adt.tomname.types.tomnamelist.EmptyconcTomName.make() ; }private static  tom.engine.adt.tomname.types.TomNameList  tom_cons_list_concTomName( tom.engine.adt.tomname.types.TomName  e,  tom.engine.adt.tomname.types.TomNameList  l) { return  tom.engine.adt.tomname.types.tomnamelist.ConsconcTomName.make(e,l) ; }private static  tom.engine.adt.tomname.types.TomName  tom_get_head_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.getHeadconcTomName()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_get_tail_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.getTailconcTomName()  ;}private static boolean tom_is_empty_concTomName_TomNameList( tom.engine.adt.tomname.types.TomNameList  l) {  return  l.isEmptyconcTomName()  ;}private static  tom.engine.adt.tomname.types.TomNameList  tom_append_list_concTomName( tom.engine.adt.tomname.types.TomNameList  l1,  tom.engine.adt.tomname.types.TomNameList  l2) {    if(tom_is_empty_concTomName_TomNameList(l1)) {     return l2;    } else if(tom_is_empty_concTomName_TomNameList(l2)) {     return l1;    } else if(tom_is_empty_concTomName_TomNameList(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(l1))) {     return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(l1),l2);    } else {      return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(l1),tom_append_list_concTomName(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(l1),l2));    }   }  private static  tom.engine.adt.tomname.types.TomNameList  tom_get_slice_concTomName( tom.engine.adt.tomname.types.TomNameList  begin,  tom.engine.adt.tomname.types.TomNameList  end) {    if(tom_terms_equal_TomNameList(begin,end)) {      return ( tom.engine.adt.tomname.types.TomNameList )tom_empty_list_concTomName();    } else {      return ( tom.engine.adt.tomname.types.TomNameList )tom_cons_list_concTomName(( tom.engine.adt.tomname.types.TomName )tom_get_head_concTomName_TomNameList(begin),( tom.engine.adt.tomname.types.TomNameList )tom_get_slice_concTomName(( tom.engine.adt.tomname.types.TomNameList )tom_get_tail_concTomName_TomNameList(begin),end));    }   }  private static boolean tom_is_fun_sym_concTomTerm( tom.engine.adt.tomterm.types.TomList  t) {  return  t instanceof tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm || t instanceof tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_empty_list_concTomTerm() { return  tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ; }private static  tom.engine.adt.tomterm.types.TomList  tom_cons_list_concTomTerm( tom.engine.adt.tomterm.types.TomTerm  e,  tom.engine.adt.tomterm.types.TomList  l) { return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(e,l) ; }private static  tom.engine.adt.tomterm.types.TomTerm  tom_get_head_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.getHeadconcTomTerm()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_get_tail_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.getTailconcTomTerm()  ;}private static boolean tom_is_empty_concTomTerm_TomList( tom.engine.adt.tomterm.types.TomList  l) {  return  l.isEmptyconcTomTerm()  ;}private static  tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList  l1,  tom.engine.adt.tomterm.types.TomList  l2) {    if(tom_is_empty_concTomTerm_TomList(l1)) {     return l2;    } else if(tom_is_empty_concTomTerm_TomList(l2)) {     return l1;    } else if(tom_is_empty_concTomTerm_TomList(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(l1))) {     return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(l1),l2);    } else {      return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(l1),tom_append_list_concTomTerm(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(l1),l2));    }   }  private static  tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end) {    if(tom_terms_equal_TomList(begin,end)) {      return ( tom.engine.adt.tomterm.types.TomList )tom_empty_list_concTomTerm();    } else {      return ( tom.engine.adt.tomterm.types.TomList )tom_cons_list_concTomTerm(( tom.engine.adt.tomterm.types.TomTerm )tom_get_head_concTomTerm_TomList(begin),( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm(( tom.engine.adt.tomterm.types.TomList )tom_get_tail_concTomTerm_TomList(begin),end));    }   }   
// ------------------------------------------------------------

  protected TomTerm operatorsTogenerate(TomTerm subject)throws IOException {
    //System.out.println("Subject "+subject);
    //collectMake(subject);
    return subject;
  }

  /**
   * Generate the goal language
   * 
   * @param deep 
   * 		The distance from the right side (allows the computation of the column number)
   */
  protected void generate(int deep, TomTerm subject, String moduleName)throws IOException {
     if(subject instanceof  tom.engine.adt.tomterm.types.TomTerm ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match1_1=(( tom.engine.adt.tomterm.types.TomTerm )subject); if ( ( tom_is_fun_sym_Tom(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomList  tom_l=tom_get_slot_Tom_TomList(tom_match1_1); if ( true ) {


        generateList(deep,tom_l, moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_TomInclude(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomList  tom_l=tom_get_slot_TomInclude_TomList(tom_match1_1); if ( true ) {


        generateListInclude(deep,tom_l, moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_Ref(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match1_1_TomTerm=tom_get_slot_Ref_TomTerm(tom_match1_1); if ( ( tom_is_fun_sym_VariableStar(tom_match1_1_TomTerm) ||  ( tom_is_fun_sym_Variable(tom_match1_1_TomTerm) ||  false  )  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_match1_1_TomTerm; if ( true ) {


        buildRef(deep, tom_term, moduleName);
        return;
       } } } } } if ( ( tom_is_fun_sym_Ref(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_term=tom_get_slot_Ref_TomTerm(tom_match1_1); if ( true ) {


        generate(deep, tom_term, moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_BuildConstant(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match1_1_AstName=tom_get_slot_BuildConstant_AstName(tom_match1_1); if ( ( tom_is_fun_sym_Name(tom_match1_1_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match1_1_AstName); if ( true ) {


        output.write(tom_name);
        return;
       } } } } } if ( ( tom_is_fun_sym_BuildTerm(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match1_1_AstName=tom_get_slot_BuildTerm_AstName(tom_match1_1); if ( ( tom_is_fun_sym_Name(tom_match1_1_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match1_1_AstName); { tom.engine.adt.tomterm.types.TomList  tom_argList=tom_get_slot_BuildTerm_Args(tom_match1_1); { String  tom_myModuleName=tom_get_slot_BuildTerm_ModuleName(tom_match1_1); if ( true ) {buildTerm(deep,tom_name,tom_argList,tom_myModuleName)









;
        return;
       } } } } } } } if ( ( tom_is_fun_sym_BuildAppendArray(tom_match1_1) ||  ( tom_is_fun_sym_BuildConsArray(tom_match1_1) ||  ( tom_is_fun_sym_BuildAppendList(tom_match1_1) ||  ( tom_is_fun_sym_BuildConsList(tom_match1_1) ||  ( tom_is_fun_sym_BuildEmptyArray(tom_match1_1) ||  ( tom_is_fun_sym_BuildEmptyList(tom_match1_1) ||  false  )  )  )  )  )  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_l=tom_match1_1; if ( true ) {


        buildListOrArray(deep, tom_l, moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_FunctionCall(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match1_1_AstName=tom_get_slot_FunctionCall_AstName(tom_match1_1); if ( ( tom_is_fun_sym_Name(tom_match1_1_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match1_1_AstName); { tom.engine.adt.tomterm.types.TomList  tom_argList=tom_get_slot_FunctionCall_Args(tom_match1_1); if ( true ) {


        buildFunctionCall(deep,tom_name, tom_argList, moduleName);
        return;
       } } } } } } if ( ( tom_is_fun_sym_Composite(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomList  tom_argList=tom_get_slot_Composite_Args(tom_match1_1); if ( true ) {


        generateList(deep,tom_argList, moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_Variable(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match1_1_AstName=tom_get_slot_Variable_AstName(tom_match1_1); if ( ( tom_is_fun_sym_PositionName(tom_match1_1_AstName) ||  false  ) ) { { tom.engine.adt.tomname.types.TomNumberList  tom_l=tom_get_slot_PositionName_NumberList(tom_match1_1_AstName); if ( true ) {


          /*
           * sans type: re-definition lorsque %variable est utilise
           * avec type: probleme en cas de filtrage dynamique
           */
        output.write("tom" + numberListToIdentifier(tom_l));
        return;
       } } } } } if ( ( tom_is_fun_sym_Variable(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match1_1_AstName=tom_get_slot_Variable_AstName(tom_match1_1); if ( ( tom_is_fun_sym_Name(tom_match1_1_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match1_1_AstName); if ( true ) {


        output.write(tom_name);
        return;
       } } } } } if ( ( tom_is_fun_sym_VariableStar(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match1_1_AstName=tom_get_slot_VariableStar_AstName(tom_match1_1); if ( ( tom_is_fun_sym_PositionName(tom_match1_1_AstName) ||  false  ) ) { { tom.engine.adt.tomname.types.TomNumberList  tom_l=tom_get_slot_PositionName_NumberList(tom_match1_1_AstName); if ( true ) {


        output.write("tom" + numberListToIdentifier(tom_l));
        return;
       } } } } } if ( ( tom_is_fun_sym_VariableStar(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match1_1_AstName=tom_get_slot_VariableStar_AstName(tom_match1_1); if ( ( tom_is_fun_sym_Name(tom_match1_1_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match1_1_AstName); if ( true ) {


        output.write(tom_name);
        return;
       } } } } } if ( ( tom_is_fun_sym_TargetLanguageToTomTerm(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tom_t=tom_get_slot_TargetLanguageToTomTerm_Tl(tom_match1_1); if ( true ) {


        generateTargetLanguage(deep,tom_t, moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_ExpressionToTomTerm(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_t=tom_get_slot_ExpressionToTomTerm_AstExpression(tom_match1_1); if ( true ) {


        generateExpression(deep,tom_t, moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_InstructionToTomTerm(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_t=tom_get_slot_InstructionToTomTerm_AstInstruction(tom_match1_1); if ( true ) {


        generateInstruction(deep,tom_t, moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_DeclarationToTomTerm(tom_match1_1) ||  false  ) ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_t=tom_get_slot_DeclarationToTomTerm_AstDeclaration(tom_match1_1); if ( true ) {


        generateDeclaration(deep,tom_t, moduleName);
        return;
       } } } { tom.engine.adt.tomterm.types.TomTerm  tom_t=tom_match1_1; if ( true ) {


        System.out.println("Cannot generate code for: " + tom_t);
        throw new TomRuntimeException("Cannot generate code for: " + tom_t);
       } } } }

  }

  public void generateExpression(int deep, Expression subject, String moduleName) throws IOException {
     if(subject instanceof  tom.engine.adt.tomexpression.types.Expression ) { { tom.engine.adt.tomexpression.types.Expression  tom_match2_1=(( tom.engine.adt.tomexpression.types.Expression )subject); if ( ( tom_is_fun_sym_Negation(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_Negation_Arg(tom_match2_1); if ( true ) {

        buildExpNegation(deep, tom_exp, moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_And(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_exp1=tom_get_slot_And_Arg1(tom_match2_1); { tom.engine.adt.tomexpression.types.Expression  tom_exp2=tom_get_slot_And_Arg2(tom_match2_1); if ( true ) {


        buildExpAnd(deep, tom_exp1, tom_exp2, moduleName);
        return;
       } } } } if ( ( tom_is_fun_sym_Or(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_exp1=tom_get_slot_Or_Arg1(tom_match2_1); { tom.engine.adt.tomexpression.types.Expression  tom_exp2=tom_get_slot_Or_Arg2(tom_match2_1); if ( true ) {


        buildExpOr(deep, tom_exp1, tom_exp2, moduleName);
        return;
       } } } } if ( ( tom_is_fun_sym_GreaterThan(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_exp1=tom_get_slot_GreaterThan_Arg1(tom_match2_1); { tom.engine.adt.tomexpression.types.Expression  tom_exp2=tom_get_slot_GreaterThan_Arg2(tom_match2_1); if ( true ) {


        buildExpGreaterThan(deep, tom_exp1, tom_exp2, moduleName);
        return;
       } } } } if ( ( tom_is_fun_sym_Bottom(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tomType=tom_get_slot_Bottom_TomType(tom_match2_1); if ( true ) {


        buildExpBottom(deep,tom_tomType, moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_TrueTL(tom_match2_1) ||  false  ) ) { if ( true ) {


        buildExpTrue(deep);
        return;
       } } if ( ( tom_is_fun_sym_FalseTL(tom_match2_1) ||  false  ) ) { if ( true ) {


        buildExpFalse(deep);
        return;
       } } if ( ( tom_is_fun_sym_IsEmptyList(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_get_slot_IsEmptyList_Opname(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_expList=tom_get_slot_IsEmptyList_Variable(tom_match2_1); if ( true ) {


        buildExpIsEmptyList(deep, tom_opNameAST, getTermType(tom_expList), tom_expList, moduleName);
        return;
       } } } } if ( ( tom_is_fun_sym_IsEmptyArray(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_get_slot_IsEmptyArray_Opname(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_expArray=tom_get_slot_IsEmptyArray_Variable(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_expIndex=tom_get_slot_IsEmptyArray_Index(tom_match2_1); if ( true ) {


        buildExpIsEmptyArray(deep, tom_opNameAST, getTermType(tom_expArray), tom_expIndex, tom_expArray, moduleName);
        return;
       } } } } } if ( ( tom_is_fun_sym_EqualFunctionSymbol(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match2_1_Exp2=tom_get_slot_EqualFunctionSymbol_Exp2(tom_match2_1); { tom.engine.adt.tomtype.types.TomType  tom_type=tom_get_slot_EqualFunctionSymbol_AstType(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_exp=tom_get_slot_EqualFunctionSymbol_Exp1(tom_match2_1); if ( ( tom_is_fun_sym_RecordAppl(tom_match2_1_Exp2) ||  false  ) ) { { tom.engine.adt.tomname.types.TomNameList  tom_match2_1_Exp2_NameList=tom_get_slot_RecordAppl_NameList(tom_match2_1_Exp2); if ( ( tom_is_fun_sym_concTomName(tom_match2_1_Exp2_NameList) ||  false  ) ) { { tom.engine.adt.tomname.types.TomNameList  tom_match2_1_Exp2_NameList_list1=tom_match2_1_Exp2_NameList; { tom.engine.adt.tomname.types.TomNameList  tom_match2_1_Exp2_NameList_end1=tom_match2_1_Exp2_NameList_list1; { if (!(tom_is_empty_concTomName_TomNameList(tom_match2_1_Exp2_NameList_list1))) { { tom.engine.adt.tomname.types.TomName  tom_match2_1_Exp2_NameList_1=tom_get_head_concTomName_TomNameList(tom_match2_1_Exp2_NameList_list1);tom_match2_1_Exp2_NameList_list1=tom_get_tail_concTomName_TomNameList(tom_match2_1_Exp2_NameList_list1); if ( ( tom_is_fun_sym_Name(tom_match2_1_Exp2_NameList_1) ||  false  ) ) { { String  tom_opName=tom_get_slot_Name_String(tom_match2_1_Exp2_NameList_1); { tom.engine.adt.tomname.types.TomName  tom_nameAST=tom_match2_1_Exp2_NameList_1; if (tom_is_empty_concTomName_TomNameList(tom_match2_1_Exp2_NameList_list1)) { if ( true ) {


        if(getSymbolTable(moduleName).isBuiltinType(getTomType(tom_type))) {
          TomSymbol tomSymbol = getSymbolTable(moduleName).getSymbolFromName(tom_opName);
          if(isListOperator(tomSymbol) || isArrayOperator(tomSymbol) || hasIsFsymDecl(tomSymbol)) {
            generateExpression(deep,tom_make_IsFsym(tom_nameAST,tom_exp), moduleName);
          } else {
            generateExpression(deep,tom_make_EqualTerm(tom_type,tom_make_BuildConstant(tom_nameAST),tom_exp), moduleName);
          }
        } else {
          generateExpression(deep,tom_make_IsFsym(tom_nameAST,tom_exp), moduleName);
        }
        return;
       } } } } } } }tom_match2_1_Exp2_NameList_list1=tom_match2_1_Exp2_NameList_end1; } } } } } } } } } } if ( ( tom_is_fun_sym_EqualTerm(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_type=tom_get_slot_EqualTerm_TomType(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_exp1=tom_get_slot_EqualTerm_Kid1(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_exp2=tom_get_slot_EqualTerm_Kid2(tom_match2_1); if ( true ) {buildExpEqualTerm(deep,tom_type,tom_exp1,tom_exp2,moduleName)


;
        return;
       } } } } } if ( ( tom_is_fun_sym_IsFsym(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match2_1_AstName=tom_get_slot_IsFsym_AstName(tom_match2_1); if ( ( tom_is_fun_sym_Name(tom_match2_1_AstName) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match2_1_AstName); { tom.engine.adt.tomterm.types.TomTerm  tom_exp=tom_get_slot_IsFsym_Variable(tom_match2_1); if ( true ) {


        buildExpIsFsym(deep, tom_opname, tom_exp, moduleName);
        return;
       } } } } } } if ( ( tom_is_fun_sym_Cast(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match2_1_AstType=tom_get_slot_Cast_AstType(tom_match2_1); if ( ( tom_is_fun_sym_Type(tom_match2_1_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match2_1_AstType_TlType=tom_get_slot_Type_TlType(tom_match2_1_AstType); if ( ( tom_is_fun_sym_TLType(tom_match2_1_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match2_1_AstType_TlType; { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_Cast_Source(tom_match2_1); if ( true ) {


        buildExpCast(deep, tom_tlType, tom_exp, moduleName);
        return;
       } } } } } } } } if ( ( tom_is_fun_sym_GetSlot(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match2_1_AstName=tom_get_slot_GetSlot_AstName(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match2_1_Variable=tom_get_slot_GetSlot_Variable(tom_match2_1); if ( ( tom_is_fun_sym_Name(tom_match2_1_AstName) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match2_1_AstName); { String  tom_slotName=tom_get_slot_GetSlot_SlotNameString(tom_match2_1); if ( ( tom_is_fun_sym_ExpressionToTomTerm(tom_match2_1_Variable) ||  ( tom_is_fun_sym_Variable(tom_match2_1_Variable) ||  false  )  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_var=tom_match2_1_Variable; if ( true ) {buildExpGetSlot(deep,tom_opname,tom_slotName,tom_var,moduleName)


;
        return;
       } } } } } } } } } if ( ( tom_is_fun_sym_GetSlot(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match2_1_AstName=tom_get_slot_GetSlot_AstName(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match2_1_Variable=tom_get_slot_GetSlot_Variable(tom_match2_1); if ( ( tom_is_fun_sym_Name(tom_match2_1_AstName) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match2_1_AstName); { String  tom_slotName=tom_get_slot_GetSlot_SlotNameString(tom_match2_1); if ( ( tom_is_fun_sym_ExpressionToTomTerm(tom_match2_1_Variable) ||  false  ) ) { if ( ( tom_is_fun_sym_GetSlot(tom_get_slot_ExpressionToTomTerm_AstExpression(tom_match2_1_Variable)) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_var=tom_match2_1_Variable; if ( true ) {buildExpGetSlot(deep,tom_opname,tom_slotName,tom_var,moduleName)

;
        return;
       } } } } } } } } } } if ( ( tom_is_fun_sym_GetHead(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_get_slot_GetHead_Opname(tom_match2_1); { tom.engine.adt.tomtype.types.TomType  tom_codomain=tom_get_slot_GetHead_Codomain(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_exp=tom_get_slot_GetHead_Variable(tom_match2_1); if ( true ) {buildExpGetHead(deep,tom_opNameAST,getTermType(tom_exp),tom_codomain,tom_exp,moduleName)


;
        return;
       } } } } } if ( ( tom_is_fun_sym_GetTail(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_get_slot_GetTail_Opname(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_exp=tom_get_slot_GetTail_Variable(tom_match2_1); if ( true ) {


        buildExpGetTail(deep, tom_opNameAST, getTermType(tom_exp), tom_exp, moduleName);
        return;
       } } } } if ( ( tom_is_fun_sym_AddOne(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_exp=tom_get_slot_AddOne_Variable(tom_match2_1); if ( true ) {


        buildAddOne(deep, tom_exp, moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_GetSize(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_get_slot_GetSize_Opname(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_exp=tom_get_slot_GetSize_Variable(tom_match2_1); if ( true ) {


        buildExpGetSize(deep,tom_opNameAST,getTermType(tom_exp), tom_exp, moduleName);
        return;
       } } } } if ( ( tom_is_fun_sym_GetElement(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_get_slot_GetElement_Opname(tom_match2_1); { tom.engine.adt.tomtype.types.TomType  tom_codomain=tom_get_slot_GetElement_Codomain(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_varName=tom_get_slot_GetElement_Kid1(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_varIndex=tom_get_slot_GetElement_Kid2(tom_match2_1); if ( true ) {


        buildExpGetElement(deep,tom_opNameAST,getTermType(tom_varName),tom_codomain, tom_varName, tom_varIndex, moduleName);
        return;
       } } } } } } if ( ( tom_is_fun_sym_GetSliceList(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match2_1_AstName=tom_get_slot_GetSliceList_AstName(tom_match2_1); if ( ( tom_is_fun_sym_Name(tom_match2_1_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match2_1_AstName); { tom.engine.adt.tomterm.types.TomTerm  tom_varBegin=tom_get_slot_GetSliceList_VariableBeginAST(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_varEnd=tom_get_slot_GetSliceList_VariableEndAST(tom_match2_1); if ( true ) {


        buildExpGetSliceList(deep, tom_name, tom_varBegin, tom_varEnd, moduleName);
        return;
       } } } } } } } if ( ( tom_is_fun_sym_GetSliceArray(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match2_1_AstName=tom_get_slot_GetSliceArray_AstName(tom_match2_1); if ( ( tom_is_fun_sym_Name(tom_match2_1_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match2_1_AstName); { tom.engine.adt.tomterm.types.TomTerm  tom_varArray=tom_get_slot_GetSliceArray_SubjectListName(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_varBegin=tom_get_slot_GetSliceArray_VariableBeginAST(tom_match2_1); { tom.engine.adt.tomterm.types.TomTerm  tom_expEnd=tom_get_slot_GetSliceArray_VariableEndAST(tom_match2_1); if ( true ) {


        buildExpGetSliceArray(deep, tom_name, tom_varArray, tom_varBegin, tom_expEnd, moduleName);
        return;
       } } } } } } } } if ( ( tom_is_fun_sym_TomTermToExpression(tom_match2_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_t=tom_get_slot_TomTermToExpression_AstTerm(tom_match2_1); if ( true ) {


        generate(deep,tom_t, moduleName);
        return;
       } } } { tom.engine.adt.tomexpression.types.Expression  tom_t=tom_match2_1; if ( true ) {

        System.out.println("Cannot generate code for expression: " + tom_t);
        throw new TomRuntimeException("Cannot generate code for expression: " + tom_t);
       } } } }

  }

  public void generateInstruction(int deep, Instruction subject, String moduleName) throws IOException {
     if(subject instanceof  tom.engine.adt.tominstruction.types.Instruction ) { { tom.engine.adt.tominstruction.types.Instruction  tom_match3_1=(( tom.engine.adt.tominstruction.types.Instruction )subject); if ( ( tom_is_fun_sym_TargetLanguageToInstruction(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tom_t=tom_get_slot_TargetLanguageToInstruction_Tl(tom_match3_1); if ( true ) {generateTargetLanguage(deep,tom_t,moduleName)


;
        return;
       } } } if ( ( tom_is_fun_sym_TomTermToInstruction(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_t=tom_get_slot_TomTermToInstruction_Tom(tom_match3_1); if ( true ) {generate(deep,tom_t,moduleName)


;
        return;
       } } } if ( ( tom_is_fun_sym_Nop(tom_match3_1) ||  false  ) ) { if ( true ) {


        return;
       } } if ( ( tom_is_fun_sym_AssignMatchSubject(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match3_1_Kid1=tom_get_slot_AssignMatchSubject_Kid1(tom_match3_1); if ( ( tom_is_fun_sym_Variable(tom_match3_1_Kid1) ||  false  ) ) { { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_get_slot_Variable_Option(tom_match3_1_Kid1); { tom.engine.adt.tomterm.types.TomTerm  tom_var=tom_match3_1_Kid1; { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_AssignMatchSubject_Source(tom_match3_1); if ( true ) {buildAssignVar(deep,tom_var,tom_option,tom_exp,moduleName)


;
        return;
       } } } } } } } if ( ( tom_is_fun_sym_Assign(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match3_1_Variable=tom_get_slot_Assign_Variable(tom_match3_1); if ( ( tom_is_fun_sym_UnamedVariableStar(tom_match3_1_Variable) ||  ( tom_is_fun_sym_UnamedVariable(tom_match3_1_Variable) ||  false  )  ) ) { if ( true ) {


        return;
       } } } } if ( ( tom_is_fun_sym_Assign(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match3_1_Variable=tom_get_slot_Assign_Variable(tom_match3_1); {boolean tom_bool_match3_1_Variable= false ; { tom.engine.adt.tomoption.types.OptionList  tom_match3_1_Variable_Option= null ; if (tom_is_fun_sym_Variable(tom_match3_1_Variable)) {tom_bool_match3_1_Variable= true ;tom_match3_1_Variable_Option=tom_get_slot_Variable_Option(tom_match3_1_Variable); } else { if (tom_is_fun_sym_VariableStar(tom_match3_1_Variable)) {tom_bool_match3_1_Variable= true ;tom_match3_1_Variable_Option=tom_get_slot_VariableStar_Option(tom_match3_1_Variable); } } if (tom_bool_match3_1_Variable) { { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match3_1_Variable_Option; { tom.engine.adt.tomterm.types.TomTerm  tom_var=tom_match3_1_Variable; { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_Assign_Source(tom_match3_1); if ( true ) {buildAssignVar(deep,tom_var,tom_option,tom_exp,moduleName)


;
        return;
       } } } } } } } } } if ( ( tom_is_fun_sym_LetAssign(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match3_1_Variable=tom_get_slot_LetAssign_Variable(tom_match3_1); {boolean tom_bool_match3_1_Variable= false ; { tom.engine.adt.tomoption.types.OptionList  tom_match3_1_Variable_Option= null ; if (tom_is_fun_sym_Variable(tom_match3_1_Variable)) {tom_bool_match3_1_Variable= true ;tom_match3_1_Variable_Option=tom_get_slot_Variable_Option(tom_match3_1_Variable); } else { if (tom_is_fun_sym_VariableStar(tom_match3_1_Variable)) {tom_bool_match3_1_Variable= true ;tom_match3_1_Variable_Option=tom_get_slot_VariableStar_Option(tom_match3_1_Variable); } } if (tom_bool_match3_1_Variable) { { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_match3_1_Variable_Option; { tom.engine.adt.tomterm.types.TomTerm  tom_var=tom_match3_1_Variable; { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_LetAssign_Source(tom_match3_1); { tom.engine.adt.tominstruction.types.Instruction  tom_body=tom_get_slot_LetAssign_AstInstruction(tom_match3_1); if ( true ) {buildLetAssign(deep,tom_var,tom_option,tom_exp,tom_body,moduleName)


;
        return;
       } } } } } } } } } } {boolean tom_bool_match3_1= false ; { tom.engine.adt.tomterm.types.TomTerm  tom_match3_1_Variable= null ; { tom.engine.adt.tomexpression.types.Expression  tom_match3_1_Source= null ; { tom.engine.adt.tominstruction.types.Instruction  tom_match3_1_AstInstruction= null ; if (tom_is_fun_sym_Let(tom_match3_1)) {tom_bool_match3_1= true ;tom_match3_1_Variable=tom_get_slot_Let_Variable(tom_match3_1);tom_match3_1_Source=tom_get_slot_Let_Source(tom_match3_1);tom_match3_1_AstInstruction=tom_get_slot_Let_AstInstruction(tom_match3_1); } else { if (tom_is_fun_sym_LetRef(tom_match3_1)) {tom_bool_match3_1= true ;tom_match3_1_Variable=tom_get_slot_LetRef_Variable(tom_match3_1);tom_match3_1_Source=tom_get_slot_LetRef_Source(tom_match3_1);tom_match3_1_AstInstruction=tom_get_slot_LetRef_AstInstruction(tom_match3_1); } else { if (tom_is_fun_sym_LetAssign(tom_match3_1)) {tom_bool_match3_1= true ;tom_match3_1_Variable=tom_get_slot_LetAssign_Variable(tom_match3_1);tom_match3_1_Source=tom_get_slot_LetAssign_Source(tom_match3_1);tom_match3_1_AstInstruction=tom_get_slot_LetAssign_AstInstruction(tom_match3_1); } } } if (tom_bool_match3_1) { if ( ( tom_is_fun_sym_UnamedVariableStar(tom_match3_1_Variable) ||  ( tom_is_fun_sym_UnamedVariable(tom_match3_1_Variable) ||  false  )  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_body=tom_match3_1_AstInstruction; if ( true ) {generateInstruction(deep,tom_body,moduleName)


;
        return;
       } } } } } } } } if ( ( tom_is_fun_sym_Let(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match3_1_Variable=tom_get_slot_Let_Variable(tom_match3_1); {boolean tom_bool_match3_1_Variable= false ; { tom.engine.adt.tomoption.types.OptionList  tom_match3_1_Variable_Option= null ; { tom.engine.adt.tomtype.types.TomType  tom_match3_1_Variable_AstType= null ; if (tom_is_fun_sym_Variable(tom_match3_1_Variable)) {tom_bool_match3_1_Variable= true ;tom_match3_1_Variable_Option=tom_get_slot_Variable_Option(tom_match3_1_Variable);tom_match3_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match3_1_Variable); } else { if (tom_is_fun_sym_VariableStar(tom_match3_1_Variable)) {tom_bool_match3_1_Variable= true ;tom_match3_1_Variable_Option=tom_get_slot_VariableStar_Option(tom_match3_1_Variable);tom_match3_1_Variable_AstType=tom_get_slot_VariableStar_AstType(tom_match3_1_Variable); } } if (tom_bool_match3_1_Variable) { { tom.engine.adt.tomoption.types.OptionList  tom_list=tom_match3_1_Variable_Option; if ( ( tom_is_fun_sym_Type(tom_match3_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match3_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match3_1_Variable_AstType); if ( ( tom_is_fun_sym_TLType(tom_match3_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match3_1_Variable_AstType_TlType; { tom.engine.adt.tomterm.types.TomTerm  tom_var=tom_match3_1_Variable; { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_Let_Source(tom_match3_1); { tom.engine.adt.tominstruction.types.Instruction  tom_body=tom_get_slot_Let_AstInstruction(tom_match3_1); if ( true ) {buildLet(deep,tom_var,tom_list,tom_tlType,tom_exp,tom_body,moduleName)


;
        return;
       } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_LetRef(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match3_1_Variable=tom_get_slot_LetRef_Variable(tom_match3_1); {boolean tom_bool_match3_1_Variable= false ; { tom.engine.adt.tomoption.types.OptionList  tom_match3_1_Variable_Option= null ; { tom.engine.adt.tomtype.types.TomType  tom_match3_1_Variable_AstType= null ; if (tom_is_fun_sym_Variable(tom_match3_1_Variable)) {tom_bool_match3_1_Variable= true ;tom_match3_1_Variable_Option=tom_get_slot_Variable_Option(tom_match3_1_Variable);tom_match3_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match3_1_Variable); } else { if (tom_is_fun_sym_VariableStar(tom_match3_1_Variable)) {tom_bool_match3_1_Variable= true ;tom_match3_1_Variable_Option=tom_get_slot_VariableStar_Option(tom_match3_1_Variable);tom_match3_1_Variable_AstType=tom_get_slot_VariableStar_AstType(tom_match3_1_Variable); } } if (tom_bool_match3_1_Variable) { { tom.engine.adt.tomoption.types.OptionList  tom_list=tom_match3_1_Variable_Option; if ( ( tom_is_fun_sym_Type(tom_match3_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match3_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match3_1_Variable_AstType); if ( ( tom_is_fun_sym_TLType(tom_match3_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match3_1_Variable_AstType_TlType; { tom.engine.adt.tomterm.types.TomTerm  tom_var=tom_match3_1_Variable; { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_LetRef_Source(tom_match3_1); { tom.engine.adt.tominstruction.types.Instruction  tom_body=tom_get_slot_LetRef_AstInstruction(tom_match3_1); if ( true ) {buildLetRef(deep,tom_var,tom_list,tom_tlType,tom_exp,tom_body,moduleName)


;
        return;
       } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_AbstractBlock(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tom_instList=tom_get_slot_AbstractBlock_InstList(tom_match3_1); if ( true ) {


        //`generateInstructionList(deep, instList);
        buildInstructionSequence(deep,tom_instList,moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_UnamedBlock(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tom_instList=tom_get_slot_UnamedBlock_InstList(tom_match3_1); if ( true ) {buildUnamedBlock(deep,tom_instList,moduleName)


;
        return;
       } } } if ( ( tom_is_fun_sym_NamedBlock(tom_match3_1) ||  false  ) ) { { String  tom_blockName=tom_get_slot_NamedBlock_BlockName(tom_match3_1); { tom.engine.adt.tominstruction.types.InstructionList  tom_instList=tom_get_slot_NamedBlock_InstList(tom_match3_1); if ( true ) {buildNamedBlock(deep,tom_blockName,tom_instList,moduleName)


;
        return;
       } } } } if ( ( tom_is_fun_sym_If(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_If_Condition(tom_match3_1); { tom.engine.adt.tominstruction.types.Instruction  tom_succesList=tom_get_slot_If_SuccesInst(tom_match3_1); if ( ( tom_is_fun_sym_Nop(tom_get_slot_If_FailureInst(tom_match3_1)) ||  false  ) ) { if ( true ) {buildIf(deep,tom_exp,tom_succesList,moduleName)


;
        return;
       } } } } } if ( ( tom_is_fun_sym_If(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_If_Condition(tom_match3_1); if ( ( tom_is_fun_sym_Nop(tom_get_slot_If_SuccesInst(tom_match3_1)) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_failureList=tom_get_slot_If_FailureInst(tom_match3_1); if ( true ) {buildIf(deep,tom_make_Negation(tom_exp),tom_failureList,moduleName)


;
        return;
       } } } } } if ( ( tom_is_fun_sym_If(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_If_Condition(tom_match3_1); { tom.engine.adt.tominstruction.types.Instruction  tom_succesList=tom_get_slot_If_SuccesInst(tom_match3_1); { tom.engine.adt.tominstruction.types.Instruction  tom_failureList=tom_get_slot_If_FailureInst(tom_match3_1); if ( true ) {buildIfWithFailure(deep,tom_exp,tom_succesList,tom_failureList,moduleName)


;
        return;
       } } } } } if ( ( tom_is_fun_sym_DoWhile(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_succes=tom_get_slot_DoWhile_DoInst(tom_match3_1); { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_DoWhile_Condition(tom_match3_1); if ( true ) {buildDoWhile(deep,tom_succes,tom_exp,moduleName)


;
        return;
       } } } } if ( ( tom_is_fun_sym_WhileDo(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_WhileDo_Condition(tom_match3_1); { tom.engine.adt.tominstruction.types.Instruction  tom_succes=tom_get_slot_WhileDo_DoInst(tom_match3_1); if ( true ) {buildWhileDo(deep,tom_exp,tom_succes,moduleName)


;
        return;
       } } } } if ( ( tom_is_fun_sym_TypedAction(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_match3_1_AstInstruction=tom_get_slot_TypedAction_AstInstruction(tom_match3_1); if ( ( tom_is_fun_sym_AbstractBlock(tom_match3_1_AstInstruction) ||  false  ) ) { { tom.engine.adt.tominstruction.types.InstructionList  tom_instructionList=tom_get_slot_AbstractBlock_InstList(tom_match3_1_AstInstruction); if ( true ) {generateInstructionList(deep,tom_instructionList,moduleName)


;
        return;
       } } } } } if ( ( tom_is_fun_sym_TypedAction(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_inst=tom_get_slot_TypedAction_AstInstruction(tom_match3_1); if ( true ) {generateInstruction(deep,tom_inst,moduleName)


;
        return;
       } } } if ( ( tom_is_fun_sym_Return(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_exp=tom_get_slot_Return_Kid1(tom_match3_1); if ( true ) {buildReturn(deep,tom_exp,moduleName)


;
        return;
       } } } if ( ( tom_is_fun_sym_CompiledMatch(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_instruction=tom_get_slot_CompiledMatch_AutomataInst(tom_match3_1); if ( true ) {


        //TODO moduleName
        generateInstruction(deep,tom_instruction,moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_CompiledPattern(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tominstruction.types.Instruction  tom_instruction=tom_get_slot_CompiledPattern_AutomataInst(tom_match3_1); if ( true ) {generateInstruction(deep,tom_instruction,moduleName)


;
        return;
       } } } if ( ( tom_is_fun_sym_CheckStamp(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_variable=tom_get_slot_CheckStamp_Variable(tom_match3_1); if ( true ) {buildCheckStamp(deep,getTermType(tom_variable),tom_variable,moduleName)


;
        return;
       } } } if ( ( tom_is_fun_sym_CheckInstance(tom_match3_1) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match3_1_AstType=tom_get_slot_CheckInstance_AstType(tom_match3_1); if ( ( tom_is_fun_sym_Type(tom_match3_1_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match3_1_AstType_TomType=tom_get_slot_Type_TomType(tom_match3_1_AstType); { tom.engine.adt.tomtype.types.TomType  tom_match3_1_AstType_TlType=tom_get_slot_Type_TlType(tom_match3_1_AstType); if ( ( tom_is_fun_sym_ASTTomType(tom_match3_1_AstType_TomType) ||  false  ) ) { { String  tom_typeName=tom_get_slot_ASTTomType_String(tom_match3_1_AstType_TomType); if ( ( tom_is_fun_sym_TLType(tom_match3_1_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match3_1_AstType_TlType; { tom.engine.adt.tomexpression.types.Expression  tom_exp=tom_get_slot_CheckInstance_Source(tom_match3_1); { tom.engine.adt.tominstruction.types.Instruction  tom_instruction=tom_get_slot_CheckInstance_Instruction(tom_match3_1); if ( true ) {buildCheckInstance(deep,tom_typeName,tom_tlType,tom_exp,tom_instruction,moduleName)


;
        return;
       } } } } } } } } } } } } { tom.engine.adt.tominstruction.types.Instruction  tom_t=tom_match3_1; if ( true ) {


        System.out.println("Cannot generate code for instruction: " + tom_t);
        throw new TomRuntimeException("Cannot generate code for instruction: " + tom_t);
       } } } }

  }

  public void generateTargetLanguage(int deep, TargetLanguage subject, String moduleName) throws IOException {
     if(subject instanceof  tom.engine.adt.tomsignature.types.TargetLanguage ) { { tom.engine.adt.tomsignature.types.TargetLanguage  tom_match4_1=(( tom.engine.adt.tomsignature.types.TargetLanguage )subject); if ( ( tom_is_fun_sym_TL(tom_match4_1) ||  false  ) ) { { tom.engine.adt.tomsignature.types.Position  tom_match4_1_Start=tom_get_slot_TL_Start(tom_match4_1); { tom.engine.adt.tomsignature.types.Position  tom_match4_1_End=tom_get_slot_TL_End(tom_match4_1); { String  tom_t=tom_get_slot_TL_Code(tom_match4_1); if ( ( tom_is_fun_sym_TextPosition(tom_match4_1_Start) ||  false  ) ) { { int  tom_startLine=tom_get_slot_TextPosition_Line(tom_match4_1_Start); if ( ( tom_is_fun_sym_TextPosition(tom_match4_1_End) ||  false  ) ) { { int  tom_endLine=tom_get_slot_TextPosition_Line(tom_match4_1_End); if ( true ) {

        output.write(deep, tom_t, tom_startLine, tom_endLine- tom_startLine);
        return;
       } } } } } } } } } if ( ( tom_is_fun_sym_ITL(tom_match4_1) ||  false  ) ) { { String  tom_t=tom_get_slot_ITL_Code(tom_match4_1); if ( true ) {


        output.write(tom_t);
        return;
       } } } if ( ( tom_is_fun_sym_Comment(tom_match4_1) ||  false  ) ) { { String  tom_t=tom_get_slot_Comment_Code(tom_match4_1); if ( true ) {buildComment(deep,tom_t)


;
        return;
       } } } { tom.engine.adt.tomsignature.types.TargetLanguage  tom_t=tom_match4_1; if ( true ) {


        System.out.println("Cannot generate code for TL: " + tom_t);
        throw new TomRuntimeException("Cannot generate code for TL: " + tom_t);
       } } } }

  }

  public void generateOption(int deep, Option subject, String moduleName) throws IOException {
     if(subject instanceof  tom.engine.adt.tomoption.types.Option ) { { tom.engine.adt.tomoption.types.Option  tom_match5_1=(( tom.engine.adt.tomoption.types.Option )subject); if ( ( tom_is_fun_sym_DeclarationToOption(tom_match5_1) ||  false  ) ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_decl=tom_get_slot_DeclarationToOption_AstDeclaration(tom_match5_1); if ( true ) {generateDeclaration(deep,tom_decl,moduleName)

;
        return;
       } } } if ( ( tom_is_fun_sym_OriginTracking(tom_match5_1) ||  false  ) ) { if ( true ) {
 return;  } } if ( ( tom_is_fun_sym_DefinedSymbol(tom_match5_1) ||  false  ) ) { if ( true ) {
 return;  } } { tom.engine.adt.tomoption.types.Option  tom_t=tom_match5_1; if ( true ) {


        System.out.println("Cannot generate code for option: " + tom_t);
        throw new TomRuntimeException("Cannot generate code for option: " + tom_t);
       } } } }

  }

  public void generateDeclaration(int deep, Declaration subject, String moduleName) throws IOException {
     if(subject instanceof  tom.engine.adt.tomdeclaration.types.Declaration ) { { tom.engine.adt.tomdeclaration.types.Declaration  tom_match6_1=(( tom.engine.adt.tomdeclaration.types.Declaration )subject); if ( ( tom_is_fun_sym_EmptyDeclaration(tom_match6_1) ||  false  ) ) { if ( true ) {

        return;
       } } if ( ( tom_is_fun_sym_AbstractDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomdeclaration.types.DeclarationList  tom_declList=tom_get_slot_AbstractDecl_DeclList(tom_match6_1); if ( true ) {


        //`generateInstructionList(deep, instList);
        generateDeclarationList(deep,tom_declList,moduleName);
        return;
       } } } if ( ( tom_is_fun_sym_FunctionDef(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_FunctionDef_AstName(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_tomName=tom_get_slot_Name_String(tom_match6_1_AstName); { tom.engine.adt.tomterm.types.TomList  tom_argList=tom_get_slot_FunctionDef_ArgumentList(tom_match6_1); { tom.engine.adt.tomtype.types.TomType  tom_codomain=tom_get_slot_FunctionDef_Codomain(tom_match6_1); { tom.engine.adt.tomtype.types.TomType  tom_throwsType=tom_get_slot_FunctionDef_ThrowsType(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_instruction=tom_get_slot_FunctionDef_Instruction(tom_match6_1); if ( true ) {buildFunctionDef(deep,tom_tomName,tom_argList,tom_codomain,tom_throwsType,tom_instruction,moduleName)


;
        return;
       } } } } } } } } } if ( ( tom_is_fun_sym_MethodDef(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_MethodDef_AstName(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_tomName=tom_get_slot_Name_String(tom_match6_1_AstName); { tom.engine.adt.tomterm.types.TomList  tom_argList=tom_get_slot_MethodDef_ArgumentList(tom_match6_1); { tom.engine.adt.tomtype.types.TomType  tom_codomain=tom_get_slot_MethodDef_Codomain(tom_match6_1); { tom.engine.adt.tomtype.types.TomType  tom_throwsType=tom_get_slot_MethodDef_ThrowsType(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_instruction=tom_get_slot_MethodDef_Instruction(tom_match6_1); if ( true ) {buildMethodDef(deep,tom_tomName,tom_argList,tom_codomain,tom_throwsType,tom_instruction,moduleName)


;
        return;
       } } } } } } } } } if ( ( tom_is_fun_sym_Class(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_Class_AstName(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_tomName=tom_get_slot_Name_String(tom_match6_1_AstName); { tom.engine.adt.tomtype.types.TomForwardType  tom_extendsFwdType=tom_get_slot_Class_ExtendsType(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_superTerm=tom_get_slot_Class_SuperTerm(tom_match6_1); { tom.engine.adt.tomdeclaration.types.Declaration  tom_declaration=tom_get_slot_Class_Declaration(tom_match6_1); if ( true ) {buildClass(deep,tom_tomName,tom_extendsFwdType,tom_superTerm,tom_declaration,moduleName)


;
        return;
       } } } } } } } } if ( ( tom_is_fun_sym_SymbolDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_SymbolDecl_AstName(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_tomName=tom_get_slot_Name_String(tom_match6_1_AstName); if ( true ) {buildSymbolDecl(deep,tom_tomName,moduleName)


;
        return ;
       } } } } } if ( ( tom_is_fun_sym_ArraySymbolDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_ArraySymbolDecl_AstName(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_tomName=tom_get_slot_Name_String(tom_match6_1_AstName); if ( true ) {


        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tom_tomName) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tom_tomName)) {
          buildSymbolDecl(deep,tom_tomName,moduleName);
          genDeclArray(tom_tomName,moduleName);
        }
        return ;
       } } } } } if ( ( tom_is_fun_sym_ListSymbolDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_ListSymbolDecl_AstName(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_tomName=tom_get_slot_Name_String(tom_match6_1_AstName); if ( true ) {


        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tom_tomName) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tom_tomName)) {
          buildSymbolDecl(deep,tom_tomName,moduleName);
          genDeclList(tom_tomName,moduleName);
        }
        return ;
       } } } } } if ( ( tom_is_fun_sym_CheckStampDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_CheckStampDecl_Variable(tom_match6_1); if ( ( tom_is_fun_sym_Variable(tom_match6_1_Variable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Variable_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Variable); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Variable); if ( ( tom_is_fun_sym_Name(tom_match6_1_Variable_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match6_1_Variable_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TomType=tom_get_slot_Type_TomType(tom_match6_1_Variable_AstType); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match6_1_Variable_AstType); if ( ( tom_is_fun_sym_ASTTomType(tom_match6_1_Variable_AstType_TomType) ||  false  ) ) { { String  tom_type=tom_get_slot_ASTTomType_String(tom_match6_1_Variable_AstType_TomType); if ( ( tom_is_fun_sym_TLType(tom_match6_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match6_1_Variable_AstType_TlType; { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_CheckStampDecl_Instr(tom_match6_1); if ( true ) {





        if(getSymbolTable(moduleName).isUsedSymbolDestructor(tom_name)) {
          buildCheckStampDecl(deep,tom_type,tom_name,tom_tlType,tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_SetStampDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_SetStampDecl_Variable(tom_match6_1); if ( ( tom_is_fun_sym_Variable(tom_match6_1_Variable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Variable_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Variable); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Variable); if ( ( tom_is_fun_sym_Name(tom_match6_1_Variable_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match6_1_Variable_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TomType=tom_get_slot_Type_TomType(tom_match6_1_Variable_AstType); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match6_1_Variable_AstType); if ( ( tom_is_fun_sym_ASTTomType(tom_match6_1_Variable_AstType_TomType) ||  false  ) ) { { String  tom_type=tom_get_slot_ASTTomType_String(tom_match6_1_Variable_AstType_TomType); if ( ( tom_is_fun_sym_TLType(tom_match6_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match6_1_Variable_AstType_TlType; { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_SetStampDecl_Instr(tom_match6_1); if ( true ) {




        if(getSymbolTable(moduleName).isUsedSymbolDestructor(tom_name)) {
          buildSetStampDecl(deep,tom_type,tom_name,tom_tlType,tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_GetImplementationDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_GetImplementationDecl_Variable(tom_match6_1); if ( ( tom_is_fun_sym_Variable(tom_match6_1_Variable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Variable_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Variable); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Variable); if ( ( tom_is_fun_sym_Name(tom_match6_1_Variable_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match6_1_Variable_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TomType=tom_get_slot_Type_TomType(tom_match6_1_Variable_AstType); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match6_1_Variable_AstType); if ( ( tom_is_fun_sym_ASTTomType(tom_match6_1_Variable_AstType_TomType) ||  false  ) ) { { String  tom_type=tom_get_slot_ASTTomType_String(tom_match6_1_Variable_AstType_TomType); if ( ( tom_is_fun_sym_TLType(tom_match6_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match6_1_Variable_AstType_TlType; { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_GetImplementationDecl_Instr(tom_match6_1); if ( true ) {




        if(getSymbolTable(moduleName).isUsedSymbolDestructor(tom_name)) {
          buildGetImplementationDecl(deep,tom_type,tom_name,tom_tlType,tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_IsFsymDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_IsFsymDecl_AstName(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_IsFsymDecl_Variable(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_tomName=tom_get_slot_Name_String(tom_match6_1_AstName); if ( ( tom_is_fun_sym_Variable(tom_match6_1_Variable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Variable_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Variable); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Variable); if ( ( tom_is_fun_sym_Name(tom_match6_1_Variable_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match6_1_Variable_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match6_1_Variable_AstType); if ( ( tom_is_fun_sym_TLType(tom_match6_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match6_1_Variable_AstType_TlType; { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_IsFsymDecl_Instr(tom_match6_1); if ( true ) {



        if(getSymbolTable(moduleName).isUsedSymbolDestructor(tom_tomName)) {
          buildIsFsymDecl(deep,tom_tomName,tom_name,tom_tlType,tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_GetSlotDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_GetSlotDecl_AstName(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_GetSlotDecl_Variable(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_tomName=tom_get_slot_Name_String(tom_match6_1_AstName); { tom.engine.adt.tomname.types.TomName  tom_slotName=tom_get_slot_GetSlotDecl_SlotName(tom_match6_1); if ( ( tom_is_fun_sym_Variable(tom_match6_1_Variable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Variable_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Variable); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Variable); if ( ( tom_is_fun_sym_Name(tom_match6_1_Variable_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match6_1_Variable_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match6_1_Variable_AstType); if ( ( tom_is_fun_sym_TLType(tom_match6_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match6_1_Variable_AstType_TlType; { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_GetSlotDecl_Instr(tom_match6_1); if ( true ) {





        if(getSymbolTable(moduleName).isUsedSymbolDestructor(tom_tomName)) {
          buildGetSlotDecl(deep,tom_tomName,tom_name,tom_tlType,tom_instr,tom_slotName,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_TermsEqualDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_TermArg1=tom_get_slot_TermsEqualDecl_TermArg1(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_TermArg2=tom_get_slot_TermsEqualDecl_TermArg2(tom_match6_1); if ( ( tom_is_fun_sym_Variable(tom_match6_1_TermArg1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_TermArg1_AstName=tom_get_slot_Variable_AstName(tom_match6_1_TermArg1); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_TermArg1_AstType=tom_get_slot_Variable_AstType(tom_match6_1_TermArg1); if ( ( tom_is_fun_sym_Name(tom_match6_1_TermArg1_AstName) ||  false  ) ) { { String  tom_name1=tom_get_slot_Name_String(tom_match6_1_TermArg1_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_TermArg1_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_TermArg1_AstType_TomType=tom_get_slot_Type_TomType(tom_match6_1_TermArg1_AstType); if ( ( tom_is_fun_sym_ASTTomType(tom_match6_1_TermArg1_AstType_TomType) ||  false  ) ) { { String  tom_type1=tom_get_slot_ASTTomType_String(tom_match6_1_TermArg1_AstType_TomType); if ( ( tom_is_fun_sym_Variable(tom_match6_1_TermArg2) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_TermArg2_AstName=tom_get_slot_Variable_AstName(tom_match6_1_TermArg2); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_TermArg2_AstType=tom_get_slot_Variable_AstType(tom_match6_1_TermArg2); if ( ( tom_is_fun_sym_Name(tom_match6_1_TermArg2_AstName) ||  false  ) ) { { String  tom_name2=tom_get_slot_Name_String(tom_match6_1_TermArg2_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_TermArg2_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_TermArg2_AstType_TomType=tom_get_slot_Type_TomType(tom_match6_1_TermArg2_AstType); if ( ( tom_is_fun_sym_ASTTomType(tom_match6_1_TermArg2_AstType_TomType) ||  false  ) ) { { String  tom_type2=tom_get_slot_ASTTomType_String(tom_match6_1_TermArg2_AstType_TomType); { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_TermsEqualDecl_Instr(tom_match6_1); if ( true ) {




        if(getSymbolTable(moduleName).isUsedTypeDefinition(tom_type1)) {
          buildTermsEqualDecl(deep,tom_name1,tom_name2,tom_type1,tom_type2,tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_GetHeadDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Opname=tom_get_slot_GetHeadDecl_Opname(tom_match6_1); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Codomain=tom_get_slot_GetHeadDecl_Codomain(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_GetHeadDecl_Variable(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_Opname) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match6_1_Opname); { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_match6_1_Opname; if ( ( tom_is_fun_sym_Type(tom_match6_1_Codomain) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_codomain=tom_get_slot_Type_TlType(tom_match6_1_Codomain); if ( ( tom_is_fun_sym_Variable(tom_match6_1_Variable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Variable_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Variable); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Variable); if ( ( tom_is_fun_sym_Name(tom_match6_1_Variable_AstName) ||  false  ) ) { { String  tom_varName=tom_get_slot_Name_String(tom_match6_1_Variable_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TomType=tom_get_slot_Type_TomType(tom_match6_1_Variable_AstType); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match6_1_Variable_AstType); if ( ( tom_is_fun_sym_ASTTomType(tom_match6_1_Variable_AstType_TomType) ||  false  ) ) { { String  tom_suffix=tom_get_slot_ASTTomType_String(tom_match6_1_Variable_AstType_TomType); if ( ( tom_is_fun_sym_TLType(tom_match6_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_domain=tom_match6_1_Variable_AstType_TlType; { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_GetHeadDecl_Instr(tom_match6_1); if ( true ) {





        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tom_opname) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tom_opname)) {
          buildGetHeadDecl(deep,tom_opNameAST,tom_varName,tom_suffix,tom_domain,tom_codomain,tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_GetTailDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Opname=tom_get_slot_GetTailDecl_Opname(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_GetTailDecl_Variable(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_Opname) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match6_1_Opname); { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_match6_1_Opname; if ( ( tom_is_fun_sym_Variable(tom_match6_1_Variable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Variable_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Variable); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Variable); if ( ( tom_is_fun_sym_Name(tom_match6_1_Variable_AstName) ||  false  ) ) { { String  tom_varName=tom_get_slot_Name_String(tom_match6_1_Variable_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TomType=tom_get_slot_Type_TomType(tom_match6_1_Variable_AstType); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match6_1_Variable_AstType); if ( ( tom_is_fun_sym_ASTTomType(tom_match6_1_Variable_AstType_TomType) ||  false  ) ) { { String  tom_type=tom_get_slot_ASTTomType_String(tom_match6_1_Variable_AstType_TomType); if ( ( tom_is_fun_sym_TLType(tom_match6_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match6_1_Variable_AstType_TlType; { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_GetTailDecl_Instr(tom_match6_1); if ( true ) {




        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tom_opname) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tom_opname)) {
          buildGetTailDecl(deep,tom_opNameAST,tom_varName,tom_type,tom_tlType,tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_IsEmptyDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Opname=tom_get_slot_IsEmptyDecl_Opname(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_IsEmptyDecl_Variable(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_Opname) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match6_1_Opname); { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_match6_1_Opname; if ( ( tom_is_fun_sym_Variable(tom_match6_1_Variable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Variable_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Variable); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Variable); if ( ( tom_is_fun_sym_Name(tom_match6_1_Variable_AstName) ||  false  ) ) { { String  tom_varName=tom_get_slot_Name_String(tom_match6_1_Variable_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TomType=tom_get_slot_Type_TomType(tom_match6_1_Variable_AstType); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match6_1_Variable_AstType); if ( ( tom_is_fun_sym_ASTTomType(tom_match6_1_Variable_AstType_TomType) ||  false  ) ) { { String  tom_type=tom_get_slot_ASTTomType_String(tom_match6_1_Variable_AstType_TomType); if ( ( tom_is_fun_sym_TLType(tom_match6_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match6_1_Variable_AstType_TlType; { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_IsEmptyDecl_Instr(tom_match6_1); if ( true ) {




        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tom_opname) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tom_opname)) {
          buildIsEmptyDecl(deep,tom_opNameAST,tom_varName,tom_type,tom_tlType,tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_MakeEmptyList(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_MakeEmptyList_AstName(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match6_1_AstName); { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_MakeEmptyList_Instr(tom_match6_1); if ( true ) {


        TomType returnType = getSymbolCodomain(getSymbolFromName(tom_opname));
        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tom_opname) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tom_opname)) {
          genDeclMake("tom_empty_list_" + tom_opname,returnType,tom_empty_list_concTomTerm(),tom_instr,moduleName);
        }
        return;
       } } } } } } if ( ( tom_is_fun_sym_MakeAddList(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_MakeAddList_AstName(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_VarElt=tom_get_slot_MakeAddList_VarElt(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_VarList=tom_get_slot_MakeAddList_VarList(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match6_1_AstName); if ( ( tom_is_fun_sym_Variable(tom_match6_1_VarElt) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_VarElt_AstType=tom_get_slot_Variable_AstType(tom_match6_1_VarElt); if ( ( tom_is_fun_sym_Type(tom_match6_1_VarElt_AstType) ||  false  ) ) { if ( ( tom_is_fun_sym_TLType(tom_get_slot_Type_TlType(tom_match6_1_VarElt_AstType)) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_elt=tom_match6_1_VarElt; if ( ( tom_is_fun_sym_Variable(tom_match6_1_VarList) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_VarList_AstType=tom_get_slot_Variable_AstType(tom_match6_1_VarList); if ( ( tom_is_fun_sym_Type(tom_match6_1_VarList_AstType) ||  false  ) ) { if ( ( tom_is_fun_sym_TLType(tom_get_slot_Type_TlType(tom_match6_1_VarList_AstType)) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_fullListType=tom_match6_1_VarList_AstType; { tom.engine.adt.tomterm.types.TomTerm  tom_list=tom_match6_1_VarList; { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_MakeAddList_Instr(tom_match6_1); if ( true ) {





        TomType returnType = tom_fullListType;
        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tom_opname) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tom_opname)) {
          genDeclMake("tom_cons_list_" + tom_opname,returnType,tom_cons_list_concTomTerm(tom_elt,tom_cons_list_concTomTerm(tom_list,tom_empty_list_concTomTerm())),tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_GetElementDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Opname=tom_get_slot_GetElementDecl_Opname(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_GetElementDecl_Variable(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Index=tom_get_slot_GetElementDecl_Index(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_Opname) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match6_1_Opname); { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_match6_1_Opname; if ( ( tom_is_fun_sym_Variable(tom_match6_1_Variable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Variable_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Variable); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Variable); if ( ( tom_is_fun_sym_Name(tom_match6_1_Variable_AstName) ||  false  ) ) { { String  tom_name1=tom_get_slot_Name_String(tom_match6_1_Variable_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TomType=tom_get_slot_Type_TomType(tom_match6_1_Variable_AstType); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match6_1_Variable_AstType); if ( ( tom_is_fun_sym_ASTTomType(tom_match6_1_Variable_AstType_TomType) ||  false  ) ) { { String  tom_type1=tom_get_slot_ASTTomType_String(tom_match6_1_Variable_AstType_TomType); if ( ( tom_is_fun_sym_TLType(tom_match6_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType1=tom_match6_1_Variable_AstType_TlType; if ( ( tom_is_fun_sym_Variable(tom_match6_1_Index) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Index_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Index); if ( ( tom_is_fun_sym_Name(tom_match6_1_Index_AstName) ||  false  ) ) { { String  tom_name2=tom_get_slot_Name_String(tom_match6_1_Index_AstName); { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_GetElementDecl_Instr(tom_match6_1); if ( true ) {





        if(getSymbolTable(moduleName).isUsedSymbolDestructor(tom_opname)) {
          buildGetElementDecl(deep,tom_opNameAST,tom_name1,tom_name2,tom_type1,tom_tlType1,tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_GetSizeDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Opname=tom_get_slot_GetSizeDecl_Opname(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_Variable=tom_get_slot_GetSizeDecl_Variable(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_Opname) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match6_1_Opname); { tom.engine.adt.tomname.types.TomName  tom_opNameAST=tom_match6_1_Opname; if ( ( tom_is_fun_sym_Variable(tom_match6_1_Variable) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_Variable_AstName=tom_get_slot_Variable_AstName(tom_match6_1_Variable); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType=tom_get_slot_Variable_AstType(tom_match6_1_Variable); if ( ( tom_is_fun_sym_Name(tom_match6_1_Variable_AstName) ||  false  ) ) { { String  tom_name=tom_get_slot_Name_String(tom_match6_1_Variable_AstName); if ( ( tom_is_fun_sym_Type(tom_match6_1_Variable_AstType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TomType=tom_get_slot_Type_TomType(tom_match6_1_Variable_AstType); { tom.engine.adt.tomtype.types.TomType  tom_match6_1_Variable_AstType_TlType=tom_get_slot_Type_TlType(tom_match6_1_Variable_AstType); if ( ( tom_is_fun_sym_ASTTomType(tom_match6_1_Variable_AstType_TomType) ||  false  ) ) { { String  tom_type=tom_get_slot_ASTTomType_String(tom_match6_1_Variable_AstType_TomType); if ( ( tom_is_fun_sym_TLType(tom_match6_1_Variable_AstType_TlType) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_tlType=tom_match6_1_Variable_AstType_TlType; { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_GetSizeDecl_Instr(tom_match6_1); if ( true ) {





					if(getSymbolTable(moduleName).isUsedSymbolDestructor(tom_opname)) {
						buildGetSizeDecl(deep,tom_opNameAST,tom_name,tom_type,tom_tlType,tom_instr,moduleName);
					}
					return;
			 } } } } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_MakeEmptyArray(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_MakeEmptyArray_AstName(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_VarSize=tom_get_slot_MakeEmptyArray_VarSize(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match6_1_AstName); if ( ( tom_is_fun_sym_Variable(tom_match6_1_VarSize) ||  false  ) ) { { tom.engine.adt.tomoption.types.OptionList  tom_option=tom_get_slot_Variable_Option(tom_match6_1_VarSize); { tom.engine.adt.tomname.types.TomName  tom_name=tom_get_slot_Variable_AstName(tom_match6_1_VarSize); { tom.engine.adt.tomconstraint.types.ConstraintList  tom_constraints=tom_get_slot_Variable_Constraints(tom_match6_1_VarSize); { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_MakeEmptyArray_Instr(tom_match6_1); if ( true ) {




        TomType returnType = getSymbolCodomain(getSymbolFromName(tom_opname));
        TomTerm newVar = tom_make_Variable(tom_option,tom_name,getSymbolTable(moduleName).getIntType(),tom_constraints);
        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tom_opname)) {
          genDeclMake("tom_empty_array_" + tom_opname,returnType,tom_cons_list_concTomTerm(newVar,tom_empty_list_concTomTerm()),tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } if ( ( tom_is_fun_sym_MakeAddArray(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_MakeAddArray_AstName(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_VarElt=tom_get_slot_MakeAddArray_VarElt(tom_match6_1); { tom.engine.adt.tomterm.types.TomTerm  tom_match6_1_VarList=tom_get_slot_MakeAddArray_VarList(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match6_1_AstName); if ( ( tom_is_fun_sym_Variable(tom_match6_1_VarElt) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_VarElt_AstType=tom_get_slot_Variable_AstType(tom_match6_1_VarElt); if ( ( tom_is_fun_sym_Type(tom_match6_1_VarElt_AstType) ||  false  ) ) { if ( ( tom_is_fun_sym_TLType(tom_get_slot_Type_TlType(tom_match6_1_VarElt_AstType)) ||  false  ) ) { { tom.engine.adt.tomterm.types.TomTerm  tom_elt=tom_match6_1_VarElt; if ( ( tom_is_fun_sym_Variable(tom_match6_1_VarList) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_match6_1_VarList_AstType=tom_get_slot_Variable_AstType(tom_match6_1_VarList); if ( ( tom_is_fun_sym_Type(tom_match6_1_VarList_AstType) ||  false  ) ) { if ( ( tom_is_fun_sym_TLType(tom_get_slot_Type_TlType(tom_match6_1_VarList_AstType)) ||  false  ) ) { { tom.engine.adt.tomtype.types.TomType  tom_fullArrayType=tom_match6_1_VarList_AstType; { tom.engine.adt.tomterm.types.TomTerm  tom_list=tom_match6_1_VarList; { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_MakeAddArray_Instr(tom_match6_1); if ( true ) {





        TomType returnType = tom_fullArrayType;
        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tom_opname)) {
          genDeclMake("tom_cons_array_" + tom_opname,returnType,tom_cons_list_concTomTerm(tom_elt,tom_cons_list_concTomTerm(tom_list,tom_empty_list_concTomTerm())),tom_instr,moduleName);
        }
        return;
       } } } } } } } } } } } } } } } } } } } if ( ( tom_is_fun_sym_MakeDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomname.types.TomName  tom_match6_1_AstName=tom_get_slot_MakeDecl_AstName(tom_match6_1); if ( ( tom_is_fun_sym_Name(tom_match6_1_AstName) ||  false  ) ) { { String  tom_opname=tom_get_slot_Name_String(tom_match6_1_AstName); { tom.engine.adt.tomtype.types.TomType  tom_returnType=tom_get_slot_MakeDecl_AstType(tom_match6_1); { tom.engine.adt.tomterm.types.TomList  tom_argList=tom_get_slot_MakeDecl_Args(tom_match6_1); { tom.engine.adt.tominstruction.types.Instruction  tom_instr=tom_get_slot_MakeDecl_Instr(tom_match6_1); if ( true ) {


        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tom_opname)) {
          genDeclMake("tom_make_" + tom_opname,tom_returnType,tom_argList,tom_instr,moduleName);
        }
        return;
       } } } } } } } } if ( ( tom_is_fun_sym_TypeTermDecl(tom_match6_1) ||  false  ) ) { { tom.engine.adt.tomdeclaration.types.DeclarationList  tom_declList=tom_get_slot_TypeTermDecl_Declarations(tom_match6_1); if ( true ) {


        generateDeclarationList(deep, tom_declList, moduleName);
        return;
       } } } { tom.engine.adt.tomdeclaration.types.Declaration  tom_t=tom_match6_1; if ( true ) {


        System.out.println("Cannot generate code for declaration: " + tom_t);
        throw new TomRuntimeException("Cannot generate code for declaration: " + tom_t);
       } } } }

  }

  public void generateListInclude(int deep, TomList subject, String moduleName) throws IOException {
    output.setSingleLine();
    generateList(deep, subject, moduleName);
    output.unsetSingleLine();
  }

  public void generateList(int deep, TomList subject, String moduleName)
    throws IOException {
    while(!subject.isEmptyconcTomTerm()) {
      generate(deep, subject.getHeadconcTomTerm(), moduleName);
      subject = subject.getTailconcTomTerm();
    }
  }

  public void generateOptionList(int deep, OptionList subject, String moduleName)
    throws IOException {
    while(!subject.isEmptyconcOption()) {
      generateOption(deep,subject.getHeadconcOption(), moduleName);
      subject = subject.getTailconcOption();
    }
  }

  public void generateInstructionList(int deep, InstructionList subject, String moduleName)
    throws IOException {
    while(!subject.isEmptyconcInstruction()) {
      generateInstruction(deep,subject.getHeadconcInstruction(), moduleName);
      subject = subject.getTailconcInstruction();
    }
    if(prettyMode) {
      output.writeln();
    }
  }

  public void generateDeclarationList(int deep, DeclarationList subject, String moduleName)
    throws IOException {
    while(!subject.isEmptyconcDeclaration()) {
      generateDeclaration(deep,subject.getHeadconcDeclaration(), moduleName);
      subject = subject.getTailconcDeclaration();
    }
  }

  public void generatePairNameDeclList(int deep, PairNameDeclList pairNameDeclList, String moduleName)
    throws IOException {
    while ( !pairNameDeclList.isEmptyconcPairNameDecl() ) {
      generateDeclaration(deep, pairNameDeclList.getHeadconcPairNameDecl().getSlotDecl(), moduleName);
      pairNameDeclList = pairNameDeclList.getTailconcPairNameDecl();
    }
  }

    // ------------------------------------------------------------

  protected abstract void genDecl(String returnType,
                                  String declName,
                                  String suffix,
                                  String args[],
                                  TargetLanguage tlCode,
                                  String moduleName) throws IOException;

  protected abstract void genDeclInstr(String returnType,
                                       String declName,
                                       String suffix,
                                       String args[],
                                       Instruction instr,
                                       int deep,
                                       String moduleName) throws IOException;

  protected abstract void genDeclMake(String funName, TomType returnType,
                                      TomList argList, Instruction instr, String moduleName) throws IOException;

  protected abstract void genDeclList(String name, String moduleName) throws IOException;

  protected abstract void genDeclArray(String name, String moduleName) throws IOException;

  // ------------------------------------------------------------

  protected abstract void buildInstructionSequence(int deep, InstructionList instructionList, String moduleName) throws IOException;
  protected abstract void buildSemiColon() throws IOException;
  protected abstract void buildComment(int deep, String text) throws IOException;
  protected abstract void buildTerm(int deep, String name, TomList argList, String moduleName) throws IOException;
  protected abstract void buildRef(int deep, TomTerm term, String moduleName) throws IOException;
  protected abstract void buildListOrArray(int deep, TomTerm list, String moduleName) throws IOException;

  protected abstract void buildFunctionCall(int deep, String name, TomList argList, String moduleName)  throws IOException;
  protected abstract void buildFunctionDef(int deep, String tomName, TomList argList, TomType codomain, TomType throwsType, Instruction instruction, String moduleName) throws IOException;
  protected void buildMethodDef(int deep, String tomName, TomList argList, TomType codomain, TomType throwsType, Instruction instruction, String moduleName) throws IOException {
    throw new TomRuntimeException("Backend "+getClass()+" does not support Methods");
  }

  /*buildClass is not abstract since only Java backend supports class
    only backends that supports Class should overload buildClass
   */
  protected void buildClass(int deep, String tomName, TomForwardType extendsFwdType, TomTerm superTerm, Declaration declaration, String moduleName) throws IOException {
    throw new TomRuntimeException("Backend does not support Class");
  }

  protected abstract void buildExpNegation(int deep, Expression exp, String moduleName) throws IOException;

  protected abstract void buildExpAnd(int deep, Expression exp1, Expression exp2, String moduleName) throws IOException;
  protected abstract void buildExpOr(int deep, Expression exp1, Expression exp2, String moduleName) throws IOException;
  protected abstract void buildExpGreaterThan(int deep, Expression exp1, Expression exp2, String moduleName) throws IOException;
  protected abstract void buildExpBottom(int deep, TomType type, String moduleName) throws IOException;
  protected abstract void buildExpTrue(int deep) throws IOException;
  protected abstract void buildExpFalse(int deep) throws IOException;
  protected abstract void buildExpIsEmptyList(int deep, TomName opName, TomType type, TomTerm expList, String moduleName) throws IOException;
  protected abstract void buildExpIsEmptyArray(int deep, TomName opName, TomType type, TomTerm expIndex, TomTerm expArray, String moduleName) throws IOException;
  protected abstract void buildExpEqualTerm(int deep, TomType type, TomTerm exp1,TomTerm exp2, String moduleName) throws IOException;
  protected abstract void buildExpIsFsym(int deep, String opname, TomTerm var, String moduleName) throws IOException;
  protected abstract void buildExpCast(int deep, TomType type, Expression exp, String moduleName) throws IOException;
  protected abstract void buildExpGetSlot(int deep, String opname, String slotName, TomTerm exp, String moduleName) throws IOException;
  protected abstract void buildExpGetHead(int deep, TomName opName, TomType domain, TomType codomain, TomTerm var, String moduleName) throws IOException;
  protected abstract void buildExpGetTail(int deep, TomName opName, TomType type1, TomTerm var, String moduleName) throws IOException;
  protected abstract void buildExpGetSize(int deep, TomName opNameAST, TomType type1, TomTerm var, String moduleName) throws IOException;
  protected abstract void buildExpGetElement(int deep, TomName opNameAST, TomType domain, TomType codomain, TomTerm varName, TomTerm varIndex, String moduleName) throws IOException;
  protected abstract void buildExpGetSliceList(int deep, String name, TomTerm varBegin, TomTerm varEnd, String moduleName) throws IOException;
  protected abstract void buildExpGetSliceArray(int deep, String name, TomTerm varArray, TomTerm varBegin, TomTerm expEnd, String moduleName) throws IOException;
  protected abstract void buildAssignVar(int deep, TomTerm var, OptionList list, Expression exp, String moduleName) throws IOException ;
  protected abstract void buildLetAssign(int deep, TomTerm var, OptionList list, Expression exp, Instruction body, String moduleName) throws IOException ;
  protected abstract void buildLet(int deep, TomTerm var, OptionList list, TomType tlType, Expression exp, Instruction body, String moduleName) throws IOException ;
  protected abstract void buildLetRef(int deep, TomTerm var, OptionList list, TomType tlType, Expression exp, Instruction body, String moduleName) throws IOException ;
  protected abstract void buildNamedBlock(int deep, String blockName, InstructionList instList, String modulename) throws IOException ;
  protected abstract void buildUnamedBlock(int deep, InstructionList instList, String moduleName) throws IOException ;
  protected abstract void buildIf(int deep, Expression exp, Instruction succes, String moduleName) throws IOException ;
  protected abstract void buildIfWithFailure(int deep, Expression exp, Instruction succes, Instruction failure, String moduleName) throws IOException ;
  protected abstract void buildDoWhile(int deep, Instruction succes, Expression exp, String moduleName) throws IOException;
  protected abstract void buildWhileDo(int deep, Expression exp, Instruction succes, String moduleName) throws IOException;
  protected abstract void buildAddOne(int deep, TomTerm var, String moduleName) throws IOException;
  protected abstract void buildReturn(int deep, TomTerm exp, String moduleName) throws IOException ;
  protected abstract void buildCheckStamp(int deep, TomType type, TomTerm variable, String moduleName) throws IOException ;
  protected abstract void buildCheckInstance(int deep, String typeName,TomType type, Expression exp, Instruction instruction, String moduleName) throws IOException ;
  protected abstract void buildSymbolDecl(int deep, String tomName, String moduleName) throws IOException ;
  protected abstract void buildCheckStampDecl(int deep, String type, String name,
                                              TomType tlType, Instruction instr, String moduleName) throws IOException;
  protected abstract void buildSetStampDecl(int deep, String type, String name,
                                              TomType tlType, Instruction instr, String moduleName) throws IOException;
  protected abstract void buildGetImplementationDecl(int deep, String type, String name,
                                              TomType tlType, Instruction instr, String moduleName) throws IOException;

  protected abstract void buildIsFsymDecl(int deep, String tomName, String name1,
                                          TomType tlType, Instruction instr, String moduleName) throws IOException;
  protected abstract void buildGetSlotDecl(int deep, String tomName, String name1,
                                           TomType tlType, Instruction instr, TomName slotName, String moduleName) throws IOException;
  protected abstract void buildTermsEqualDecl(int deep, String name1, String name2,
                                              String type1, String type2, Instruction instr, String moduleName) throws IOException;
  protected abstract void buildGetHeadDecl(int deep, TomName opNameAST, String varName, String suffix, TomType domain, TomType codomain, Instruction instr, String moduleName) throws IOException;
  protected abstract void buildGetTailDecl(int deep, TomName opNameAST, String varName, String type, TomType tlType, Instruction instr, String moduleName) throws IOException;
  protected abstract void buildIsEmptyDecl(int deep, TomName opNameAST, String varName, String type,
                                           TomType tlType, Instruction instr, String moduleName) throws IOException;
  protected abstract void buildGetElementDecl(int deep, TomName opNameAST, String name1, String name2,
                                              String type1, TomType tlType1, Instruction instr, String moduleName) throws IOException;
  protected abstract void buildGetSizeDecl(int deep, TomName opNameAST, String name1, String type,
                                           TomType tlType, Instruction instr, String moduleName) throws IOException;

} // class TomAbstractGenerator

/* Generated by TOM (version 2.6): Do not edit this file *//*
 *
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2008, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.engine.backend;

import java.io.IOException;

import tom.engine.TomBase;
import tom.engine.exception.TomRuntimeException;

import tom.engine.adt.tomsignature.*;
import tom.engine.adt.tomconstraint.types.*;
import tom.engine.adt.tomdeclaration.types.*;
import tom.engine.adt.tomexpression.types.*;
import tom.engine.adt.tominstruction.types.*;
import tom.engine.adt.tomname.types.*;
import tom.engine.adt.tomoption.types.*;
import tom.engine.adt.tomsignature.types.*;
import tom.engine.adt.tomterm.types.*;
import tom.engine.adt.tomslot.types.*;
import tom.engine.adt.tomtype.types.*;

import tom.engine.tools.OutputCode;
import tom.engine.tools.SymbolTable;
import tom.platform.OptionManager;

import aterm.*;

public abstract class TomAbstractGenerator {

  protected OutputCode output;
  protected OptionManager optionManager;
  protected SymbolTable symbolTable;
  protected boolean prettyMode;

  public TomAbstractGenerator(OutputCode output, OptionManager optionManager,
                              SymbolTable symbolTable) {
    this.symbolTable = symbolTable;
    this.optionManager = optionManager;
    this.output = output;
    this.prettyMode = ((Boolean)optionManager.getOptionValue("pretty")).booleanValue();
  }

  protected SymbolTable getSymbolTable(String moduleName) {
    //TODO//
    //Using of the moduleName
    ////////
    return symbolTable;
  }

  protected TomSymbol getSymbolFromName(String tomName) {
    return TomBase.getSymbolFromName(tomName, symbolTable);
  }

  protected TomSymbol getSymbolFromType(TomType tomType) {
    return TomBase.getSymbolFromType(tomType, symbolTable);
  }

  protected TomType getTermType(TomTerm t) {
    return TomBase.getTermType(t, symbolTable);
  }

  protected TomType getUniversalType() {
    return symbolTable.getUniversalType();
  }
// ------------------------------------------------------------
  /* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file *//* Generated by TOM (version 2.6): Do not edit this file */  /* Generated by TOM (version 2.6): Do not edit this file */    public static   tom.engine.adt.tomterm.types.TomList  tom_append_list_concTomTerm( tom.engine.adt.tomterm.types.TomList l1,  tom.engine.adt.tomterm.types.TomList  l2) {     if( l1.isEmptyconcTomTerm() ) {       return l2;     } else if( l2.isEmptyconcTomTerm() ) {       return l1;     } else if(  l1.getTailconcTomTerm() .isEmptyconcTomTerm() ) {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( l1.getHeadconcTomTerm() ,l2) ;     } else {       return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( l1.getHeadconcTomTerm() ,tom_append_list_concTomTerm( l1.getTailconcTomTerm() ,l2)) ;     }   }   public static   tom.engine.adt.tomterm.types.TomList  tom_get_slice_concTomTerm( tom.engine.adt.tomterm.types.TomList  begin,  tom.engine.adt.tomterm.types.TomList  end, tom.engine.adt.tomterm.types.TomList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcTomTerm()  ||  (end== tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make( begin.getHeadconcTomTerm() ,( tom.engine.adt.tomterm.types.TomList )tom_get_slice_concTomTerm( begin.getTailconcTomTerm() ,end,tail)) ;   }    
// ------------------------------------------------------------

  protected TomTerm operatorsTogenerate(TomTerm subject)throws IOException {
    //System.out.println("Subject "+subject);
    //collectMake(subject);
    return subject;
  }

  /**
   * Generate the goal language
   * 
   * @param deep 
   * 		The distance from the right side (allows the computation of the column number)
   */
  protected void generate(int deep, TomTerm subject, String moduleName) throws IOException {
    {{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.Tom) ) {


        generateList(deep, (( tom.engine.adt.tomterm.types.TomTerm )subject).getTomList() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.TomInclude) ) {


        generateListInclude(deep, (( tom.engine.adt.tomterm.types.TomTerm )subject).getTomList() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.BuildConstant) ) { tom.engine.adt.tomname.types.TomName  tomMatch39NameNumber_freshVar_7= (( tom.engine.adt.tomterm.types.TomTerm )subject).getAstName() ;if ( (tomMatch39NameNumber_freshVar_7 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {


        output.write( tomMatch39NameNumber_freshVar_7.getString() );
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.BuildTerm) ) { tom.engine.adt.tomname.types.TomName  tomMatch39NameNumber_freshVar_12= (( tom.engine.adt.tomterm.types.TomTerm )subject).getAstName() ;if ( (tomMatch39NameNumber_freshVar_12 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {buildTerm(deep, tomMatch39NameNumber_freshVar_12.getString() , (( tom.engine.adt.tomterm.types.TomTerm )subject).getArgs() , (( tom.engine.adt.tomterm.types.TomTerm )subject).getModuleName() )


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {boolean tomMatch39NameNumber_freshVar_20= false ;if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.BuildEmptyList) ) {tomMatch39NameNumber_freshVar_20= true ;} else {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.BuildEmptyArray) ) {tomMatch39NameNumber_freshVar_20= true ;} else {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.BuildConsList) ) {tomMatch39NameNumber_freshVar_20= true ;} else {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.BuildAppendList) ) {tomMatch39NameNumber_freshVar_20= true ;} else {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.BuildConsArray) ) {tomMatch39NameNumber_freshVar_20= true ;} else {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.BuildAppendArray) ) {tomMatch39NameNumber_freshVar_20= true ;}}}}}}if ((tomMatch39NameNumber_freshVar_20 ==  true )) {


        buildListOrArray(deep, (( tom.engine.adt.tomterm.types.TomTerm )subject), moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.FunctionCall) ) { tom.engine.adt.tomname.types.TomName  tomMatch39NameNumber_freshVar_22= (( tom.engine.adt.tomterm.types.TomTerm )subject).getAstName() ;if ( (tomMatch39NameNumber_freshVar_22 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {


        buildFunctionCall(deep, tomMatch39NameNumber_freshVar_22.getString() ,  (( tom.engine.adt.tomterm.types.TomTerm )subject).getArgs() , moduleName);
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.Composite) ) {


        generateList(deep, (( tom.engine.adt.tomterm.types.TomTerm )subject).getArgs() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {boolean tomMatch39NameNumber_freshVar_32= false ;if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {tomMatch39NameNumber_freshVar_32= true ;} else {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {tomMatch39NameNumber_freshVar_32= true ;}}if ((tomMatch39NameNumber_freshVar_32 ==  true )) {


        output.write(deep,getVariableName((( tom.engine.adt.tomterm.types.TomTerm )subject)));
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.TargetLanguageToTomTerm) ) {


        generateTargetLanguage(deep, (( tom.engine.adt.tomterm.types.TomTerm )subject).getTl() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.ExpressionToTomTerm) ) {


        generateExpression(deep, (( tom.engine.adt.tomterm.types.TomTerm )subject).getAstExpression() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.InstructionToTomTerm) ) {


        generateInstruction(deep, (( tom.engine.adt.tomterm.types.TomTerm )subject).getAstInstruction() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )subject) instanceof tom.engine.adt.tomterm.types.tomterm.DeclarationToTomTerm) ) {


        generateDeclaration(deep, (( tom.engine.adt.tomterm.types.TomTerm )subject).getAstDeclaration() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomterm.types.TomTerm) ) {


        System.out.println("Cannot generate code for: " + (( tom.engine.adt.tomterm.types.TomTerm )subject));
        throw new TomRuntimeException("Cannot generate code for: " + (( tom.engine.adt.tomterm.types.TomTerm )subject));
      }}}

  }

  protected String getVariableName(TomTerm var) {
    {{if ( (var instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )var) instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch40NameNumber_freshVar_1= (( tom.engine.adt.tomterm.types.TomTerm )var).getAstName() ;if ( (tomMatch40NameNumber_freshVar_1 instanceof tom.engine.adt.tomname.types.tomname.PositionName) ) {

        return ("tom" + TomBase.tomNumberListToString( tomMatch40NameNumber_freshVar_1.getNumberList() ));
      }}}}{if ( (var instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )var) instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch40NameNumber_freshVar_6= (( tom.engine.adt.tomterm.types.TomTerm )var).getAstName() ;if ( (tomMatch40NameNumber_freshVar_6 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {


        return  tomMatch40NameNumber_freshVar_6.getString() ;
      }}}}{if ( (var instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )var) instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) { tom.engine.adt.tomname.types.TomName  tomMatch40NameNumber_freshVar_11= (( tom.engine.adt.tomterm.types.TomTerm )var).getAstName() ;if ( (tomMatch40NameNumber_freshVar_11 instanceof tom.engine.adt.tomname.types.tomname.PositionName) ) {


        return ("tom" + TomBase.tomNumberListToString( tomMatch40NameNumber_freshVar_11.getNumberList() ));
      }}}}{if ( (var instanceof tom.engine.adt.tomterm.types.TomTerm) ) {if ( ((( tom.engine.adt.tomterm.types.TomTerm )var) instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) { tom.engine.adt.tomname.types.TomName  tomMatch40NameNumber_freshVar_16= (( tom.engine.adt.tomterm.types.TomTerm )var).getAstName() ;if ( (tomMatch40NameNumber_freshVar_16 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {


        return  tomMatch40NameNumber_freshVar_16.getString() ;
      }}}}}

    return null;
  }
  public void generateExpression(int deep, Expression subject, String moduleName) throws IOException {
    {{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.Code) ) {

        output.write( (( tom.engine.adt.tomexpression.types.Expression )subject).getCode() );
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.Integer) ) {


        output.write( (( tom.engine.adt.tomexpression.types.Expression )subject).getvalue() );
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.Negation) ) {


        buildExpNegation(deep,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.Conditional) ) {


        buildExpConditional(deep,  (( tom.engine.adt.tomexpression.types.Expression )subject).getCond() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getThen() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getElse() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.And) ) {


        buildExpAnd(deep,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg1() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg2() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.Or) ) {


        buildExpOr(deep,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg1() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg2() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.GreaterThan) ) {


        buildExpGreaterThan(deep,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg1() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg2() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.GreaterOrEqualThan) ) {


        buildExpGreaterOrEqualThan(deep,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg1() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg2() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.LessThan) ) {


        buildExpLessThan(deep,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg1() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg2() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.LessOrEqualThan) ) {


        buildExpLessOrEqualThan(deep,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg1() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getArg2() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.Bottom) ) {



        buildExpBottom(deep, (( tom.engine.adt.tomexpression.types.Expression )subject).getTomType() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.TrueTL) ) {


        buildExpTrue(deep);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.FalseTL) ) {


        buildExpFalse(deep);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.IsEmptyList) ) { tom.engine.adt.tomname.types.TomName  tomMatch41NameNumber_freshVar_46= (( tom.engine.adt.tomexpression.types.Expression )subject).getOpname() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch41NameNumber_freshVar_47= (( tom.engine.adt.tomexpression.types.Expression )subject).getVariable() ;if ( (tomMatch41NameNumber_freshVar_46 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {buildExpIsEmptyList(deep, tomMatch41NameNumber_freshVar_46.getString() ,getTermType(tomMatch41NameNumber_freshVar_47),tomMatch41NameNumber_freshVar_47,moduleName)


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.IsEmptyArray) ) { tom.engine.adt.tomterm.types.TomTerm  tomMatch41NameNumber_freshVar_53= (( tom.engine.adt.tomexpression.types.Expression )subject).getVariable() ;


        buildExpIsEmptyArray(deep,  (( tom.engine.adt.tomexpression.types.Expression )subject).getOpname() , getTermType(tomMatch41NameNumber_freshVar_53),  (( tom.engine.adt.tomexpression.types.Expression )subject).getIndex() , tomMatch41NameNumber_freshVar_53, moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.EqualTerm) ) {buildExpEqualTerm(deep, (( tom.engine.adt.tomexpression.types.Expression )subject).getTomType() , (( tom.engine.adt.tomexpression.types.Expression )subject).getKid1() , (( tom.engine.adt.tomexpression.types.Expression )subject).getKid2() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.IsSort) ) { tom.engine.adt.tomtype.types.TomType  tomMatch41NameNumber_freshVar_62= (( tom.engine.adt.tomexpression.types.Expression )subject).getAstType() ;boolean tomMatch41NameNumber_freshVar_68= false ; tom.engine.adt.tomtype.types.TomType  tomMatch41NameNumber_freshVar_65= null ;if ( (tomMatch41NameNumber_freshVar_62 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {{tomMatch41NameNumber_freshVar_68= true ;tomMatch41NameNumber_freshVar_65= tomMatch41NameNumber_freshVar_62.getTomType() ;}} else {if ( (tomMatch41NameNumber_freshVar_62 instanceof tom.engine.adt.tomtype.types.tomtype.TypeWithSymbol) ) {{tomMatch41NameNumber_freshVar_68= true ;tomMatch41NameNumber_freshVar_65= tomMatch41NameNumber_freshVar_62.getTomType() ;}}}if ((tomMatch41NameNumber_freshVar_68 ==  true )) {if ( (tomMatch41NameNumber_freshVar_65 instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType) ) {buildExpIsSort(deep,TomBase.getTomType(tomMatch41NameNumber_freshVar_65), (( tom.engine.adt.tomexpression.types.Expression )subject).getVariable() ,moduleName)


;
        return;
      }}}}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.IsFsym) ) { tom.engine.adt.tomname.types.TomName  tomMatch41NameNumber_freshVar_70= (( tom.engine.adt.tomexpression.types.Expression )subject).getAstName() ;if ( (tomMatch41NameNumber_freshVar_70 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {


        buildExpIsFsym(deep,  tomMatch41NameNumber_freshVar_70.getString() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getVariable() , moduleName);
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.Cast) ) { tom.engine.adt.tomtype.types.TomType  tomMatch41NameNumber_freshVar_76= (( tom.engine.adt.tomexpression.types.Expression )subject).getAstType() ;boolean tomMatch41NameNumber_freshVar_82= false ; tom.engine.adt.tomtype.types.TomType  tomMatch41NameNumber_freshVar_79= null ;if ( (tomMatch41NameNumber_freshVar_76 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {{tomMatch41NameNumber_freshVar_82= true ;tomMatch41NameNumber_freshVar_79= tomMatch41NameNumber_freshVar_76.getTlType() ;}} else {if ( (tomMatch41NameNumber_freshVar_76 instanceof tom.engine.adt.tomtype.types.tomtype.TypeWithSymbol) ) {{tomMatch41NameNumber_freshVar_82= true ;tomMatch41NameNumber_freshVar_79= tomMatch41NameNumber_freshVar_76.getTlType() ;}}}if ((tomMatch41NameNumber_freshVar_82 ==  true )) {if ( (tomMatch41NameNumber_freshVar_79 instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {


        buildExpCast(deep, tomMatch41NameNumber_freshVar_79,  (( tom.engine.adt.tomexpression.types.Expression )subject).getSource() , moduleName);
        return;
      }}}}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.Cast) ) { tom.engine.adt.tomtype.types.TomType  tomMatch41NameNumber_freshVar_84= (( tom.engine.adt.tomexpression.types.Expression )subject).getAstType() ;if ( (tomMatch41NameNumber_freshVar_84 instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {


        buildExpCast(deep, tomMatch41NameNumber_freshVar_84,  (( tom.engine.adt.tomexpression.types.Expression )subject).getSource() , moduleName);
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.GetSlot) ) { tom.engine.adt.tomname.types.TomName  tomMatch41NameNumber_freshVar_90= (( tom.engine.adt.tomexpression.types.Expression )subject).getAstName() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch41NameNumber_freshVar_92= (( tom.engine.adt.tomexpression.types.Expression )subject).getVariable() ;if ( (tomMatch41NameNumber_freshVar_90 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {boolean tomMatch41NameNumber_freshVar_97= false ;if ( (tomMatch41NameNumber_freshVar_92 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {tomMatch41NameNumber_freshVar_97= true ;} else {if ( (tomMatch41NameNumber_freshVar_92 instanceof tom.engine.adt.tomterm.types.tomterm.BuildTerm) ) {tomMatch41NameNumber_freshVar_97= true ;} else {if ( (tomMatch41NameNumber_freshVar_92 instanceof tom.engine.adt.tomterm.types.tomterm.ExpressionToTomTerm) ) {tomMatch41NameNumber_freshVar_97= true ;}}}if ((tomMatch41NameNumber_freshVar_97 ==  true )) {buildExpGetSlot(deep, tomMatch41NameNumber_freshVar_90.getString() , (( tom.engine.adt.tomexpression.types.Expression )subject).getSlotNameString() ,tomMatch41NameNumber_freshVar_92,moduleName)


;
        return;
      }}}}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.GetSlot) ) { tom.engine.adt.tomname.types.TomName  tomMatch41NameNumber_freshVar_100= (( tom.engine.adt.tomexpression.types.Expression )subject).getAstName() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch41NameNumber_freshVar_102= (( tom.engine.adt.tomexpression.types.Expression )subject).getVariable() ;if ( (tomMatch41NameNumber_freshVar_100 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch41NameNumber_freshVar_102 instanceof tom.engine.adt.tomterm.types.tomterm.ExpressionToTomTerm) ) {if ( ( tomMatch41NameNumber_freshVar_102.getAstExpression()  instanceof tom.engine.adt.tomexpression.types.expression.GetSlot) ) {buildExpGetSlot(deep, tomMatch41NameNumber_freshVar_100.getString() , (( tom.engine.adt.tomexpression.types.Expression )subject).getSlotNameString() ,tomMatch41NameNumber_freshVar_102,moduleName)

;
        return;
      }}}}}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.GetHead) ) { tom.engine.adt.tomname.types.TomName  tomMatch41NameNumber_freshVar_110= (( tom.engine.adt.tomexpression.types.Expression )subject).getOpname() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch41NameNumber_freshVar_112= (( tom.engine.adt.tomexpression.types.Expression )subject).getVariable() ;if ( (tomMatch41NameNumber_freshVar_110 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {buildExpGetHead(deep, tomMatch41NameNumber_freshVar_110.getString() ,getTermType(tomMatch41NameNumber_freshVar_112), (( tom.engine.adt.tomexpression.types.Expression )subject).getCodomain() ,tomMatch41NameNumber_freshVar_112,moduleName)


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.GetTail) ) { tom.engine.adt.tomname.types.TomName  tomMatch41NameNumber_freshVar_117= (( tom.engine.adt.tomexpression.types.Expression )subject).getOpname() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch41NameNumber_freshVar_118= (( tom.engine.adt.tomexpression.types.Expression )subject).getVariable() ;if ( (tomMatch41NameNumber_freshVar_117 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {buildExpGetTail(deep, tomMatch41NameNumber_freshVar_117.getString() ,getTermType(tomMatch41NameNumber_freshVar_118),tomMatch41NameNumber_freshVar_118,moduleName)


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.AddOne) ) {


        buildAddOne(deep,  (( tom.engine.adt.tomexpression.types.Expression )subject).getVariable() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.GetSize) ) { tom.engine.adt.tomterm.types.TomTerm  tomMatch41NameNumber_freshVar_127= (( tom.engine.adt.tomexpression.types.Expression )subject).getVariable() ;


        buildExpGetSize(deep, (( tom.engine.adt.tomexpression.types.Expression )subject).getOpname() ,getTermType(tomMatch41NameNumber_freshVar_127), tomMatch41NameNumber_freshVar_127, moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.GetElement) ) { tom.engine.adt.tomterm.types.TomTerm  tomMatch41NameNumber_freshVar_132= (( tom.engine.adt.tomexpression.types.Expression )subject).getVariable() ;


        buildExpGetElement(deep, (( tom.engine.adt.tomexpression.types.Expression )subject).getOpname() ,getTermType(tomMatch41NameNumber_freshVar_132), (( tom.engine.adt.tomexpression.types.Expression )subject).getCodomain() , tomMatch41NameNumber_freshVar_132,  (( tom.engine.adt.tomexpression.types.Expression )subject).getIndex() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.GetSliceList) ) { tom.engine.adt.tomname.types.TomName  tomMatch41NameNumber_freshVar_136= (( tom.engine.adt.tomexpression.types.Expression )subject).getAstName() ;if ( (tomMatch41NameNumber_freshVar_136 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {


        buildExpGetSliceList(deep,  tomMatch41NameNumber_freshVar_136.getString() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getVariableBeginAST() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getVariableEndAST() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getTail() ,moduleName);
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.GetSliceArray) ) { tom.engine.adt.tomname.types.TomName  tomMatch41NameNumber_freshVar_144= (( tom.engine.adt.tomexpression.types.Expression )subject).getAstName() ;if ( (tomMatch41NameNumber_freshVar_144 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {


        buildExpGetSliceArray(deep,  tomMatch41NameNumber_freshVar_144.getString() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getSubjectListName() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getVariableBeginAST() ,  (( tom.engine.adt.tomexpression.types.Expression )subject).getVariableEndAST() , moduleName);
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.TomTermToExpression) ) {


        generate(deep, (( tom.engine.adt.tomexpression.types.Expression )subject).getAstTerm() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {if ( ((( tom.engine.adt.tomexpression.types.Expression )subject) instanceof tom.engine.adt.tomexpression.types.expression.TomInstructionToExpression) ) {


        generateInstruction(deep,  (( tom.engine.adt.tomexpression.types.Expression )subject).getInstruction() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomexpression.types.Expression) ) {


        System.out.println("Cannot generate code for expression: " + (( tom.engine.adt.tomexpression.types.Expression )subject));
        throw new TomRuntimeException("Cannot generate code for expression: " + (( tom.engine.adt.tomexpression.types.Expression )subject));
      }}}

  }

  public void generateInstruction(int deep, Instruction subject, String moduleName) throws IOException {
    {{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.TargetLanguageToInstruction) ) {generateTargetLanguage(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getTl() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.TomTermToInstruction) ) {generate(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getTom() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.ExpressionToInstruction) ) {generateExpression(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getExpr() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.Nop) ) {


        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.Assign) ) { tom.engine.adt.tomterm.types.TomTerm  tomMatch42NameNumber_freshVar_12= (( tom.engine.adt.tominstruction.types.Instruction )subject).getVariable() ;boolean tomMatch42NameNumber_freshVar_17= false ; tom.engine.adt.tomoption.types.OptionList  tomMatch42NameNumber_freshVar_15= null ;if ( (tomMatch42NameNumber_freshVar_12 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch42NameNumber_freshVar_17= true ;tomMatch42NameNumber_freshVar_15= tomMatch42NameNumber_freshVar_12.getOption() ;}} else {if ( (tomMatch42NameNumber_freshVar_12 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch42NameNumber_freshVar_17= true ;tomMatch42NameNumber_freshVar_15= tomMatch42NameNumber_freshVar_12.getOption() ;}}}if ((tomMatch42NameNumber_freshVar_17 ==  true )) {buildAssign(deep,tomMatch42NameNumber_freshVar_12,tomMatch42NameNumber_freshVar_15, (( tom.engine.adt.tominstruction.types.Instruction )subject).getSource() ,moduleName)


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.Assign) ) { tom.engine.adt.tomterm.types.TomTerm  tomMatch42NameNumber_freshVar_19= (( tom.engine.adt.tominstruction.types.Instruction )subject).getVariable() ;boolean tomMatch42NameNumber_freshVar_23= false ;if ( (tomMatch42NameNumber_freshVar_19 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable) ) {tomMatch42NameNumber_freshVar_23= true ;} else {if ( (tomMatch42NameNumber_freshVar_19 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar) ) {tomMatch42NameNumber_freshVar_23= true ;}}if ((tomMatch42NameNumber_freshVar_23 ==  true )) {


        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {boolean tomMatch42NameNumber_freshVar_31= false ; tom.engine.adt.tomexpression.types.Expression  tomMatch42NameNumber_freshVar_26= null ; tom.engine.adt.tominstruction.types.Instruction  tomMatch42NameNumber_freshVar_27= null ; tom.engine.adt.tomterm.types.TomTerm  tomMatch42NameNumber_freshVar_25= null ;if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.Let) ) {{tomMatch42NameNumber_freshVar_31= true ;tomMatch42NameNumber_freshVar_25= (( tom.engine.adt.tominstruction.types.Instruction )subject).getVariable() ;tomMatch42NameNumber_freshVar_26= (( tom.engine.adt.tominstruction.types.Instruction )subject).getSource() ;tomMatch42NameNumber_freshVar_27= (( tom.engine.adt.tominstruction.types.Instruction )subject).getAstInstruction() ;}} else {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.LetRef) ) {{tomMatch42NameNumber_freshVar_31= true ;tomMatch42NameNumber_freshVar_25= (( tom.engine.adt.tominstruction.types.Instruction )subject).getVariable() ;tomMatch42NameNumber_freshVar_26= (( tom.engine.adt.tominstruction.types.Instruction )subject).getSource() ;tomMatch42NameNumber_freshVar_27= (( tom.engine.adt.tominstruction.types.Instruction )subject).getAstInstruction() ;}}}if ((tomMatch42NameNumber_freshVar_31 ==  true )) {boolean tomMatch42NameNumber_freshVar_30= false ;if ( (tomMatch42NameNumber_freshVar_25 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariable) ) {tomMatch42NameNumber_freshVar_30= true ;} else {if ( (tomMatch42NameNumber_freshVar_25 instanceof tom.engine.adt.tomterm.types.tomterm.UnamedVariableStar) ) {tomMatch42NameNumber_freshVar_30= true ;}}if ((tomMatch42NameNumber_freshVar_30 ==  true )) {generateInstruction(deep,tomMatch42NameNumber_freshVar_27,moduleName)


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.Let) ) { tom.engine.adt.tomterm.types.TomTerm  tomMatch42NameNumber_freshVar_33= (( tom.engine.adt.tominstruction.types.Instruction )subject).getVariable() ;boolean tomMatch42NameNumber_freshVar_43= false ; tom.engine.adt.tomoption.types.OptionList  tomMatch42NameNumber_freshVar_37= null ; tom.engine.adt.tomtype.types.TomType  tomMatch42NameNumber_freshVar_38= null ;if ( (tomMatch42NameNumber_freshVar_33 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch42NameNumber_freshVar_43= true ;tomMatch42NameNumber_freshVar_37= tomMatch42NameNumber_freshVar_33.getOption() ;tomMatch42NameNumber_freshVar_38= tomMatch42NameNumber_freshVar_33.getAstType() ;}} else {if ( (tomMatch42NameNumber_freshVar_33 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch42NameNumber_freshVar_43= true ;tomMatch42NameNumber_freshVar_37= tomMatch42NameNumber_freshVar_33.getOption() ;tomMatch42NameNumber_freshVar_38= tomMatch42NameNumber_freshVar_33.getAstType() ;}}}if ((tomMatch42NameNumber_freshVar_43 ==  true )) {boolean tomMatch42NameNumber_freshVar_42= false ; tom.engine.adt.tomtype.types.TomType  tomMatch42NameNumber_freshVar_40= null ;if ( (tomMatch42NameNumber_freshVar_38 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {{tomMatch42NameNumber_freshVar_42= true ;tomMatch42NameNumber_freshVar_40= tomMatch42NameNumber_freshVar_38.getTlType() ;}} else {if ( (tomMatch42NameNumber_freshVar_38 instanceof tom.engine.adt.tomtype.types.tomtype.TypeWithSymbol) ) {{tomMatch42NameNumber_freshVar_42= true ;tomMatch42NameNumber_freshVar_40= tomMatch42NameNumber_freshVar_38.getTlType() ;}}}if ((tomMatch42NameNumber_freshVar_42 ==  true )) {buildLet(deep,tomMatch42NameNumber_freshVar_33,tomMatch42NameNumber_freshVar_37,tomMatch42NameNumber_freshVar_40, (( tom.engine.adt.tominstruction.types.Instruction )subject).getSource() , (( tom.engine.adt.tominstruction.types.Instruction )subject).getAstInstruction() ,moduleName)


;
        return;
      }}}}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.LetRef) ) { tom.engine.adt.tomterm.types.TomTerm  tomMatch42NameNumber_freshVar_45= (( tom.engine.adt.tominstruction.types.Instruction )subject).getVariable() ;boolean tomMatch42NameNumber_freshVar_55= false ; tom.engine.adt.tomtype.types.TomType  tomMatch42NameNumber_freshVar_50= null ; tom.engine.adt.tomoption.types.OptionList  tomMatch42NameNumber_freshVar_49= null ;if ( (tomMatch42NameNumber_freshVar_45 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {{tomMatch42NameNumber_freshVar_55= true ;tomMatch42NameNumber_freshVar_49= tomMatch42NameNumber_freshVar_45.getOption() ;tomMatch42NameNumber_freshVar_50= tomMatch42NameNumber_freshVar_45.getAstType() ;}} else {if ( (tomMatch42NameNumber_freshVar_45 instanceof tom.engine.adt.tomterm.types.tomterm.VariableStar) ) {{tomMatch42NameNumber_freshVar_55= true ;tomMatch42NameNumber_freshVar_49= tomMatch42NameNumber_freshVar_45.getOption() ;tomMatch42NameNumber_freshVar_50= tomMatch42NameNumber_freshVar_45.getAstType() ;}}}if ((tomMatch42NameNumber_freshVar_55 ==  true )) {boolean tomMatch42NameNumber_freshVar_54= false ; tom.engine.adt.tomtype.types.TomType  tomMatch42NameNumber_freshVar_52= null ;if ( (tomMatch42NameNumber_freshVar_50 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {{tomMatch42NameNumber_freshVar_54= true ;tomMatch42NameNumber_freshVar_52= tomMatch42NameNumber_freshVar_50.getTlType() ;}} else {if ( (tomMatch42NameNumber_freshVar_50 instanceof tom.engine.adt.tomtype.types.tomtype.TypeWithSymbol) ) {{tomMatch42NameNumber_freshVar_54= true ;tomMatch42NameNumber_freshVar_52= tomMatch42NameNumber_freshVar_50.getTlType() ;}}}if ((tomMatch42NameNumber_freshVar_54 ==  true )) {buildLetRef(deep,tomMatch42NameNumber_freshVar_45,tomMatch42NameNumber_freshVar_49,tomMatch42NameNumber_freshVar_52, (( tom.engine.adt.tominstruction.types.Instruction )subject).getSource() , (( tom.engine.adt.tominstruction.types.Instruction )subject).getAstInstruction() ,moduleName)


;
        return;
      }}}}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.AbstractBlock) ) {


        //`generateInstructionList(deep, instList);
        buildInstructionSequence(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getInstList() ,moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.UnamedBlock) ) {buildUnamedBlock(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getInstList() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.NamedBlock) ) {buildNamedBlock(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getBlockName() , (( tom.engine.adt.tominstruction.types.Instruction )subject).getInstList() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.If) ) {if ( ( (( tom.engine.adt.tominstruction.types.Instruction )subject).getFailureInst()  instanceof tom.engine.adt.tominstruction.types.instruction.Nop) ) {buildIf(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getCondition() , (( tom.engine.adt.tominstruction.types.Instruction )subject).getSuccesInst() ,moduleName)


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.If) ) {if ( ( (( tom.engine.adt.tominstruction.types.Instruction )subject).getSuccesInst()  instanceof tom.engine.adt.tominstruction.types.instruction.Nop) ) {buildIf(deep, tom.engine.adt.tomexpression.types.expression.Negation.make( (( tom.engine.adt.tominstruction.types.Instruction )subject).getCondition() ) , (( tom.engine.adt.tominstruction.types.Instruction )subject).getFailureInst() ,moduleName)


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.If) ) {buildIfWithFailure(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getCondition() , (( tom.engine.adt.tominstruction.types.Instruction )subject).getSuccesInst() , (( tom.engine.adt.tominstruction.types.Instruction )subject).getFailureInst() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.DoWhile) ) {buildDoWhile(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getDoInst() , (( tom.engine.adt.tominstruction.types.Instruction )subject).getCondition() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.WhileDo) ) {buildWhileDo(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getCondition() , (( tom.engine.adt.tominstruction.types.Instruction )subject).getDoInst() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.TypedAction) ) { tom.engine.adt.tominstruction.types.Instruction  tomMatch42NameNumber_freshVar_92= (( tom.engine.adt.tominstruction.types.Instruction )subject).getAstInstruction() ;if ( (tomMatch42NameNumber_freshVar_92 instanceof tom.engine.adt.tominstruction.types.instruction.AbstractBlock) ) {generateInstructionList(deep, tomMatch42NameNumber_freshVar_92.getInstList() ,moduleName)


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.TypedAction) ) {generateInstruction(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getAstInstruction() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.Return) ) {buildReturn(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getKid1() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.CompiledMatch) ) {


        //TODO moduleName
        generateInstruction(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getAutomataInst() ,moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {if ( ((( tom.engine.adt.tominstruction.types.Instruction )subject) instanceof tom.engine.adt.tominstruction.types.instruction.CompiledPattern) ) {generateInstruction(deep, (( tom.engine.adt.tominstruction.types.Instruction )subject).getAutomataInst() ,moduleName)


;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tominstruction.types.Instruction) ) {


        System.out.println("Cannot generate code for instruction: " + (( tom.engine.adt.tominstruction.types.Instruction )subject));
        throw new TomRuntimeException("Cannot generate code for instruction: " + (( tom.engine.adt.tominstruction.types.Instruction )subject));
      }}}

  }

  public void generateTargetLanguage(int deep, TargetLanguage subject, String moduleName) throws IOException {
    {{if ( (subject instanceof tom.engine.adt.tomsignature.types.TargetLanguage) ) {if ( ((( tom.engine.adt.tomsignature.types.TargetLanguage )subject) instanceof tom.engine.adt.tomsignature.types.targetlanguage.TL) ) { tom.engine.adt.tomsignature.types.TextPosition  tomMatch43NameNumber_freshVar_2= (( tom.engine.adt.tomsignature.types.TargetLanguage )subject).getStart() ; tom.engine.adt.tomsignature.types.TextPosition  tomMatch43NameNumber_freshVar_3= (( tom.engine.adt.tomsignature.types.TargetLanguage )subject).getEnd() ;if ( (tomMatch43NameNumber_freshVar_2 instanceof tom.engine.adt.tomsignature.types.textposition.TextPosition) ) { int  tomMatch43NameNumber_freshVar_5= tomMatch43NameNumber_freshVar_2.getLine() ;if ( (tomMatch43NameNumber_freshVar_3 instanceof tom.engine.adt.tomsignature.types.textposition.TextPosition) ) {

        output.write(deep,  (( tom.engine.adt.tomsignature.types.TargetLanguage )subject).getCode() , tomMatch43NameNumber_freshVar_5,  tomMatch43NameNumber_freshVar_3.getLine() - tomMatch43NameNumber_freshVar_5);
        return;
      }}}}}{if ( (subject instanceof tom.engine.adt.tomsignature.types.TargetLanguage) ) {if ( ((( tom.engine.adt.tomsignature.types.TargetLanguage )subject) instanceof tom.engine.adt.tomsignature.types.targetlanguage.ITL) ) {

        output.write( (( tom.engine.adt.tomsignature.types.TargetLanguage )subject).getCode() );
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomsignature.types.TargetLanguage) ) {if ( ((( tom.engine.adt.tomsignature.types.TargetLanguage )subject) instanceof tom.engine.adt.tomsignature.types.targetlanguage.Comment) ) {buildComment(deep, (( tom.engine.adt.tomsignature.types.TargetLanguage )subject).getCode() )

;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomsignature.types.TargetLanguage) ) {

        System.out.println("Cannot generate code for TL: " + (( tom.engine.adt.tomsignature.types.TargetLanguage )subject));
        throw new TomRuntimeException("Cannot generate code for TL: " + (( tom.engine.adt.tomsignature.types.TargetLanguage )subject));
      }}}

  }

  public void generateOption(int deep, Option subject, String moduleName) throws IOException {
    {{if ( (subject instanceof tom.engine.adt.tomoption.types.Option) ) {if ( ((( tom.engine.adt.tomoption.types.Option )subject) instanceof tom.engine.adt.tomoption.types.option.DeclarationToOption) ) {generateDeclaration(deep, (( tom.engine.adt.tomoption.types.Option )subject).getAstDeclaration() ,moduleName)

;
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomoption.types.Option) ) {if ( ((( tom.engine.adt.tomoption.types.Option )subject) instanceof tom.engine.adt.tomoption.types.option.OriginTracking) ) {
 return; }}}{if ( (subject instanceof tom.engine.adt.tomoption.types.Option) ) {if ( ((( tom.engine.adt.tomoption.types.Option )subject) instanceof tom.engine.adt.tomoption.types.option.DefinedSymbol) ) {
 return; }}}{if ( (subject instanceof tom.engine.adt.tomoption.types.Option) ) {


        System.out.println("Cannot generate code for option: " + (( tom.engine.adt.tomoption.types.Option )subject));
        throw new TomRuntimeException("Cannot generate code for option: " + (( tom.engine.adt.tomoption.types.Option )subject));
      }}}

  }

  public void generateDeclaration(int deep, Declaration subject, String moduleName) throws IOException {
    {{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.EmptyDeclaration) ) {

        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.AbstractDecl) ) {


        //`generateInstructionList(deep, instList);
        generateDeclarationList(deep, (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getDeclList() ,moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.FunctionDef) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_6= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ;if ( (tomMatch45NameNumber_freshVar_6 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {buildFunctionDef(deep, tomMatch45NameNumber_freshVar_6.getString() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getArgumentList() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getCodomain() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getThrowsType() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getInstruction() ,moduleName)


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.MethodDef) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_15= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ;if ( (tomMatch45NameNumber_freshVar_15 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {buildMethodDef(deep, tomMatch45NameNumber_freshVar_15.getString() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getArgumentList() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getCodomain() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getThrowsType() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getInstruction() ,moduleName)


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.Class) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_24= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ;if ( (tomMatch45NameNumber_freshVar_24 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {buildClass(deep, tomMatch45NameNumber_freshVar_24.getString() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getExtendsType() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getSuperTerm() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getDeclaration() ,moduleName)


;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.IntrospectorClass) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_32= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ;if ( (tomMatch45NameNumber_freshVar_32 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {buildIntrospectorClass(deep, tomMatch45NameNumber_freshVar_32.getString() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getDeclaration() ,moduleName)



;
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.SymbolDecl) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_38= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ;if ( (tomMatch45NameNumber_freshVar_38 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {buildSymbolDecl(deep, tomMatch45NameNumber_freshVar_38.getString() ,moduleName)


;
        return ;
      }}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.ArraySymbolDecl) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_43= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ;if ( (tomMatch45NameNumber_freshVar_43 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_45= tomMatch45NameNumber_freshVar_43.getString() ;


        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tomMatch45NameNumber_freshVar_45) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tomMatch45NameNumber_freshVar_45)) {
          buildSymbolDecl(deep,tomMatch45NameNumber_freshVar_45,moduleName);
          genDeclArray(tomMatch45NameNumber_freshVar_45,moduleName);
        }
        return ;
      }}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.ListSymbolDecl) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_48= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ;if ( (tomMatch45NameNumber_freshVar_48 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_50= tomMatch45NameNumber_freshVar_48.getString() ;


        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tomMatch45NameNumber_freshVar_50) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tomMatch45NameNumber_freshVar_50)) {
          buildSymbolDecl(deep,tomMatch45NameNumber_freshVar_50,moduleName);
          genDeclList(tomMatch45NameNumber_freshVar_50,moduleName);
        }
        return ;
      }}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.GetImplementationDecl) ) { tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_53= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVariable() ;if ( (tomMatch45NameNumber_freshVar_53 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_57= tomMatch45NameNumber_freshVar_53.getAstName() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_58= tomMatch45NameNumber_freshVar_53.getAstType() ;if ( (tomMatch45NameNumber_freshVar_57 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_60= tomMatch45NameNumber_freshVar_57.getString() ;if ( (tomMatch45NameNumber_freshVar_58 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_62= tomMatch45NameNumber_freshVar_58.getTomType() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_63= tomMatch45NameNumber_freshVar_58.getTlType() ;if ( (tomMatch45NameNumber_freshVar_62 instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType) ) {if ( (tomMatch45NameNumber_freshVar_63 instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {




        if(getSymbolTable(moduleName).isUsedSymbolDestructor(tomMatch45NameNumber_freshVar_60)) {
          buildGetImplementationDecl(deep, tomMatch45NameNumber_freshVar_62.getString() ,tomMatch45NameNumber_freshVar_60,tomMatch45NameNumber_freshVar_63, (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getInstr() ,moduleName);
        }
        return;
      }}}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.IsFsymDecl) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_69= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_70= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVariable() ;if ( (tomMatch45NameNumber_freshVar_69 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_74= tomMatch45NameNumber_freshVar_69.getString() ;if ( (tomMatch45NameNumber_freshVar_70 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_76= tomMatch45NameNumber_freshVar_70.getAstName() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_77= tomMatch45NameNumber_freshVar_70.getAstType() ;if ( (tomMatch45NameNumber_freshVar_76 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_77 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_81= tomMatch45NameNumber_freshVar_77.getTlType() ;if ( (tomMatch45NameNumber_freshVar_81 instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {



        if(getSymbolTable(moduleName).isUsedSymbolDestructor(tomMatch45NameNumber_freshVar_74)) {
          buildIsFsymDecl(deep,tomMatch45NameNumber_freshVar_74, tomMatch45NameNumber_freshVar_76.getString() ,tomMatch45NameNumber_freshVar_81, (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getExpr() ,moduleName);
        }
        return;
      }}}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.GetSlotDecl) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_85= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_87= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVariable() ;if ( (tomMatch45NameNumber_freshVar_85 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_90= tomMatch45NameNumber_freshVar_85.getString() ;if ( (tomMatch45NameNumber_freshVar_87 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_92= tomMatch45NameNumber_freshVar_87.getAstName() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_93= tomMatch45NameNumber_freshVar_87.getAstType() ;if ( (tomMatch45NameNumber_freshVar_92 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_93 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_97= tomMatch45NameNumber_freshVar_93.getTlType() ;if ( (tomMatch45NameNumber_freshVar_97 instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {





        if(getSymbolTable(moduleName).isUsedSymbolDestructor(tomMatch45NameNumber_freshVar_90)) {
          buildGetSlotDecl(deep,tomMatch45NameNumber_freshVar_90, tomMatch45NameNumber_freshVar_92.getString() ,tomMatch45NameNumber_freshVar_97, (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getExpr() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getSlotName() ,moduleName);
        }
        return;
      }}}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.EqualTermDecl) ) { tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_101= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getTermArg1() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_102= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getTermArg2() ;if ( (tomMatch45NameNumber_freshVar_101 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_106= tomMatch45NameNumber_freshVar_101.getAstName() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_107= tomMatch45NameNumber_freshVar_101.getAstType() ;if ( (tomMatch45NameNumber_freshVar_106 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_107 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_111= tomMatch45NameNumber_freshVar_107.getTomType() ;if ( (tomMatch45NameNumber_freshVar_111 instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType) ) { String  tomMatch45NameNumber_freshVar_114= tomMatch45NameNumber_freshVar_111.getString() ;if ( (tomMatch45NameNumber_freshVar_102 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_116= tomMatch45NameNumber_freshVar_102.getAstName() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_117= tomMatch45NameNumber_freshVar_102.getAstType() ;if ( (tomMatch45NameNumber_freshVar_116 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_117 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_121= tomMatch45NameNumber_freshVar_117.getTomType() ;if ( (tomMatch45NameNumber_freshVar_121 instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType) ) {




        if(getSymbolTable(moduleName).isUsedType(tomMatch45NameNumber_freshVar_114)) {
          buildEqualTermDecl(deep, tomMatch45NameNumber_freshVar_106.getString() , tomMatch45NameNumber_freshVar_116.getString() ,tomMatch45NameNumber_freshVar_114, tomMatch45NameNumber_freshVar_121.getString() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getExpr() ,moduleName);
        }
        return;
      }}}}}}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.IsSortDecl) ) { tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_127= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getTermArg() ;if ( (tomMatch45NameNumber_freshVar_127 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_131= tomMatch45NameNumber_freshVar_127.getAstName() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_132= tomMatch45NameNumber_freshVar_127.getAstType() ;if ( (tomMatch45NameNumber_freshVar_131 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_132 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_136= tomMatch45NameNumber_freshVar_132.getTomType() ;if ( (tomMatch45NameNumber_freshVar_136 instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType) ) { String  tomMatch45NameNumber_freshVar_139= tomMatch45NameNumber_freshVar_136.getString() ;


        if(getSymbolTable(moduleName).isUsedType(tomMatch45NameNumber_freshVar_139)) {
          buildIsSortDecl(deep, tomMatch45NameNumber_freshVar_131.getString() ,tomMatch45NameNumber_freshVar_139, (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getExpr() ,moduleName);
        }
        return;
      }}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.GetHeadDecl) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_142= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getOpname() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_143= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getCodomain() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_144= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVariable() ;if ( (tomMatch45NameNumber_freshVar_142 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_147= tomMatch45NameNumber_freshVar_142.getString() ;if ( (tomMatch45NameNumber_freshVar_143 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {if ( (tomMatch45NameNumber_freshVar_144 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_151= tomMatch45NameNumber_freshVar_144.getAstName() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_152= tomMatch45NameNumber_freshVar_144.getAstType() ;if ( (tomMatch45NameNumber_freshVar_151 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_152 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_156= tomMatch45NameNumber_freshVar_152.getTomType() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_157= tomMatch45NameNumber_freshVar_152.getTlType() ;if ( (tomMatch45NameNumber_freshVar_156 instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType) ) {if ( (tomMatch45NameNumber_freshVar_157 instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {





        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tomMatch45NameNumber_freshVar_147) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tomMatch45NameNumber_freshVar_147)) {
          buildGetHeadDecl(deep,tomMatch45NameNumber_freshVar_142, tomMatch45NameNumber_freshVar_151.getString() , tomMatch45NameNumber_freshVar_156.getString() ,tomMatch45NameNumber_freshVar_157, tomMatch45NameNumber_freshVar_143.getTlType() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getExpr() ,moduleName);
        }
        return;
      }}}}}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.GetTailDecl) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_163= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getOpname() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_164= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVariable() ;if ( (tomMatch45NameNumber_freshVar_163 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_167= tomMatch45NameNumber_freshVar_163.getString() ;if ( (tomMatch45NameNumber_freshVar_164 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_169= tomMatch45NameNumber_freshVar_164.getAstName() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_170= tomMatch45NameNumber_freshVar_164.getAstType() ;if ( (tomMatch45NameNumber_freshVar_169 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_170 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_174= tomMatch45NameNumber_freshVar_170.getTomType() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_175= tomMatch45NameNumber_freshVar_170.getTlType() ;if ( (tomMatch45NameNumber_freshVar_174 instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType) ) {if ( (tomMatch45NameNumber_freshVar_175 instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {




        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tomMatch45NameNumber_freshVar_167) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tomMatch45NameNumber_freshVar_167)) {
          buildGetTailDecl(deep,tomMatch45NameNumber_freshVar_163, tomMatch45NameNumber_freshVar_169.getString() , tomMatch45NameNumber_freshVar_174.getString() ,tomMatch45NameNumber_freshVar_175, (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getExpr() ,moduleName);
        }
        return;
      }}}}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.IsEmptyDecl) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_181= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getOpname() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_182= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVariable() ;if ( (tomMatch45NameNumber_freshVar_181 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_185= tomMatch45NameNumber_freshVar_181.getString() ;if ( (tomMatch45NameNumber_freshVar_182 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_187= tomMatch45NameNumber_freshVar_182.getAstName() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_188= tomMatch45NameNumber_freshVar_182.getAstType() ;if ( (tomMatch45NameNumber_freshVar_187 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_188 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_192= tomMatch45NameNumber_freshVar_188.getTomType() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_193= tomMatch45NameNumber_freshVar_188.getTlType() ;if ( (tomMatch45NameNumber_freshVar_192 instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType) ) {if ( (tomMatch45NameNumber_freshVar_193 instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {




        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tomMatch45NameNumber_freshVar_185) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tomMatch45NameNumber_freshVar_185)) {
          buildIsEmptyDecl(deep,tomMatch45NameNumber_freshVar_181, tomMatch45NameNumber_freshVar_187.getString() , tomMatch45NameNumber_freshVar_192.getString() ,tomMatch45NameNumber_freshVar_193, (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getExpr() ,moduleName);
        }
        return;
      }}}}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeEmptyList) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_199= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ;if ( (tomMatch45NameNumber_freshVar_199 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_203= tomMatch45NameNumber_freshVar_199.getString() ;


        TomType returnType = TomBase.getSymbolCodomain(getSymbolFromName(tomMatch45NameNumber_freshVar_203));
        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tomMatch45NameNumber_freshVar_203) 
        || getSymbolTable(moduleName).isUsedSymbolDestructor(tomMatch45NameNumber_freshVar_203)) {
          genDeclMake("tom_empty_list_",tomMatch45NameNumber_freshVar_203,returnType, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getInstr() ,moduleName);
        }
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeAddList) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_206= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_207= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVarElt() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_208= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVarList() ;if ( (tomMatch45NameNumber_freshVar_206 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_212= tomMatch45NameNumber_freshVar_206.getString() ;if ( (tomMatch45NameNumber_freshVar_207 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_214= tomMatch45NameNumber_freshVar_207.getAstType() ;if ( (tomMatch45NameNumber_freshVar_214 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {if ( ( tomMatch45NameNumber_freshVar_214.getTlType()  instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {if ( (tomMatch45NameNumber_freshVar_208 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_219= tomMatch45NameNumber_freshVar_208.getAstType() ;if ( (tomMatch45NameNumber_freshVar_219 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {if ( ( tomMatch45NameNumber_freshVar_219.getTlType()  instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {





        TomType returnType = tomMatch45NameNumber_freshVar_219;
        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tomMatch45NameNumber_freshVar_212) 
         ||getSymbolTable(moduleName).isUsedSymbolDestructor(tomMatch45NameNumber_freshVar_212)) {
          genDeclMake("tom_cons_list_",tomMatch45NameNumber_freshVar_212,returnType, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tomMatch45NameNumber_freshVar_207, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tomMatch45NameNumber_freshVar_208, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ) ) , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getInstr() ,moduleName);
        }
        return;
      }}}}}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.GetElementDecl) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_225= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getOpname() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_226= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVariable() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_227= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getIndex() ;if ( (tomMatch45NameNumber_freshVar_225 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_226 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_232= tomMatch45NameNumber_freshVar_226.getAstName() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_233= tomMatch45NameNumber_freshVar_226.getAstType() ;if ( (tomMatch45NameNumber_freshVar_232 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_233 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_237= tomMatch45NameNumber_freshVar_233.getTomType() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_238= tomMatch45NameNumber_freshVar_233.getTlType() ;if ( (tomMatch45NameNumber_freshVar_237 instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType) ) {if ( (tomMatch45NameNumber_freshVar_238 instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {if ( (tomMatch45NameNumber_freshVar_227 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_243= tomMatch45NameNumber_freshVar_227.getAstName() ;if ( (tomMatch45NameNumber_freshVar_243 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {





        if(getSymbolTable(moduleName).isUsedSymbolDestructor( tomMatch45NameNumber_freshVar_225.getString() )) {
          buildGetElementDecl(deep,tomMatch45NameNumber_freshVar_225, tomMatch45NameNumber_freshVar_232.getString() , tomMatch45NameNumber_freshVar_243.getString() , tomMatch45NameNumber_freshVar_237.getString() ,tomMatch45NameNumber_freshVar_238, (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getExpr() ,moduleName);
        }
        return;
      }}}}}}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.GetSizeDecl) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_248= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getOpname() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_249= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVariable() ;if ( (tomMatch45NameNumber_freshVar_248 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_249 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_254= tomMatch45NameNumber_freshVar_249.getAstName() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_255= tomMatch45NameNumber_freshVar_249.getAstType() ;if ( (tomMatch45NameNumber_freshVar_254 instanceof tom.engine.adt.tomname.types.tomname.Name) ) {if ( (tomMatch45NameNumber_freshVar_255 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_259= tomMatch45NameNumber_freshVar_255.getTomType() ; tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_260= tomMatch45NameNumber_freshVar_255.getTlType() ;if ( (tomMatch45NameNumber_freshVar_259 instanceof tom.engine.adt.tomtype.types.tomtype.ASTTomType) ) {if ( (tomMatch45NameNumber_freshVar_260 instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {





	  if(getSymbolTable(moduleName).isUsedSymbolDestructor( tomMatch45NameNumber_freshVar_248.getString() )) {
	    buildGetSizeDecl(deep,tomMatch45NameNumber_freshVar_248, tomMatch45NameNumber_freshVar_254.getString() , tomMatch45NameNumber_freshVar_259.getString() ,tomMatch45NameNumber_freshVar_260, (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getExpr() ,moduleName);
	  }
	  return;
	}}}}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeEmptyArray) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_266= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_267= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVarSize() ;if ( (tomMatch45NameNumber_freshVar_266 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_271= tomMatch45NameNumber_freshVar_266.getString() ;if ( (tomMatch45NameNumber_freshVar_267 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) {




        TomType returnType = TomBase.getSymbolCodomain(getSymbolFromName(tomMatch45NameNumber_freshVar_271));
        TomTerm newVar =  tom.engine.adt.tomterm.types.tomterm.Variable.make( tomMatch45NameNumber_freshVar_267.getOption() ,  tomMatch45NameNumber_freshVar_267.getAstName() , getSymbolTable(moduleName).getIntType(),  tomMatch45NameNumber_freshVar_267.getConstraints() ) ;
        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tomMatch45NameNumber_freshVar_271)) {
          genDeclMake("tom_empty_array_",tomMatch45NameNumber_freshVar_271,returnType, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(newVar, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ) , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getInstr() ,moduleName);
        }
        return;
      }}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeAddArray) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_278= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_279= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVarElt() ; tom.engine.adt.tomterm.types.TomTerm  tomMatch45NameNumber_freshVar_280= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getVarList() ;if ( (tomMatch45NameNumber_freshVar_278 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_284= tomMatch45NameNumber_freshVar_278.getString() ;if ( (tomMatch45NameNumber_freshVar_279 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_286= tomMatch45NameNumber_freshVar_279.getAstType() ;if ( (tomMatch45NameNumber_freshVar_286 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {if ( ( tomMatch45NameNumber_freshVar_286.getTlType()  instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {if ( (tomMatch45NameNumber_freshVar_280 instanceof tom.engine.adt.tomterm.types.tomterm.Variable) ) { tom.engine.adt.tomtype.types.TomType  tomMatch45NameNumber_freshVar_291= tomMatch45NameNumber_freshVar_280.getAstType() ;if ( (tomMatch45NameNumber_freshVar_291 instanceof tom.engine.adt.tomtype.types.tomtype.Type) ) {if ( ( tomMatch45NameNumber_freshVar_291.getTlType()  instanceof tom.engine.adt.tomtype.types.tomtype.TLType) ) {





        TomType returnType = tomMatch45NameNumber_freshVar_291;
        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tomMatch45NameNumber_freshVar_284)) {
          genDeclMake("tom_cons_array_",tomMatch45NameNumber_freshVar_284,returnType, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tomMatch45NameNumber_freshVar_279, tom.engine.adt.tomterm.types.tomlist.ConsconcTomTerm.make(tomMatch45NameNumber_freshVar_280, tom.engine.adt.tomterm.types.tomlist.EmptyconcTomTerm.make() ) ) , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getInstr() ,moduleName);
        }
        return;
      }}}}}}}}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.MakeDecl) ) { tom.engine.adt.tomname.types.TomName  tomMatch45NameNumber_freshVar_297= (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstName() ;if ( (tomMatch45NameNumber_freshVar_297 instanceof tom.engine.adt.tomname.types.tomname.Name) ) { String  tomMatch45NameNumber_freshVar_303= tomMatch45NameNumber_freshVar_297.getString() ;


        if(getSymbolTable(moduleName).isUsedSymbolConstructor(tomMatch45NameNumber_freshVar_303)) {
          genDeclMake("tom_make_",tomMatch45NameNumber_freshVar_303, (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getAstType() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getArgs() , (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getInstr() ,moduleName);
        }
        return;
      }}}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {if ( ((( tom.engine.adt.tomdeclaration.types.Declaration )subject) instanceof tom.engine.adt.tomdeclaration.types.declaration.TypeTermDecl) ) {


        generateDeclarationList(deep,  (( tom.engine.adt.tomdeclaration.types.Declaration )subject).getDeclarations() , moduleName);
        return;
      }}}{if ( (subject instanceof tom.engine.adt.tomdeclaration.types.Declaration) ) {


        System.out.println("Cannot generate code for declaration: " + (( tom.engine.adt.tomdeclaration.types.Declaration )subject));
        throw new TomRuntimeException("Cannot generate code for declaration: " + (( tom.engine.adt.tomdeclaration.types.Declaration )subject));
      }}}

  }

  public void generateListInclude(int deep, TomList subject, String moduleName) throws IOException {
    output.setSingleLine();
    generateList(deep, subject, moduleName);
    output.unsetSingleLine();
  }

  public void generateList(int deep, TomList subject, String moduleName)
    throws IOException {
    while(!subject.isEmptyconcTomTerm()) {
      generate(deep, subject.getHeadconcTomTerm(), moduleName);
      subject = subject.getTailconcTomTerm();
    }
  }

  public void generateOptionList(int deep, OptionList subject, String moduleName)
    throws IOException {
    while(!subject.isEmptyconcOption()) {
      generateOption(deep,subject.getHeadconcOption(), moduleName);
      subject = subject.getTailconcOption();
    }
  }

  public void generateInstructionList(int deep, InstructionList subject, String moduleName)
    throws IOException {
    while(!subject.isEmptyconcInstruction()) {
      generateInstruction(deep,subject.getHeadconcInstruction(), moduleName);
      subject = subject.getTailconcInstruction();
    }
    if(prettyMode) {
      output.writeln();
    }
  }

  public void generateDeclarationList(int deep, DeclarationList subject, String moduleName)
    throws IOException {
    while(!subject.isEmptyconcDeclaration()) {
      generateDeclaration(deep,subject.getHeadconcDeclaration(), moduleName);
      subject = subject.getTailconcDeclaration();
    }
  }

  public void generatePairNameDeclList(int deep, PairNameDeclList pairNameDeclList, String moduleName)
    throws IOException {
    while ( !pairNameDeclList.isEmptyconcPairNameDecl() ) {
      generateDeclaration(deep, pairNameDeclList.getHeadconcPairNameDecl().getSlotDecl(), moduleName);
      pairNameDeclList = pairNameDeclList.getTailconcPairNameDecl();
    }
  }

    // ------------------------------------------------------------

  protected abstract void genDecl(String returnType,
                                  String declName,
                                  String suffix,
                                  String args[],
                                  TargetLanguage tlCode,
                                  String moduleName) throws IOException;

  protected abstract void genDeclInstr(String returnType,
                                       String declName,
                                       String suffix,
                                       String args[],
                                       Instruction instr,
                                       int deep,
                                       String moduleName) throws IOException;

  protected abstract void genDeclMake(String prefix, String funName, TomType returnType,
                                      TomList argList, Instruction instr, String moduleName) throws IOException;

  protected abstract void genDeclList(String name, String moduleName) throws IOException;

  protected abstract void genDeclArray(String name, String moduleName) throws IOException;

  // ------------------------------------------------------------

  protected abstract void buildInstructionSequence(int deep, InstructionList instructionList, String moduleName) throws IOException;
  protected abstract void buildComment(int deep, String text) throws IOException;
  protected abstract void buildTerm(int deep, String name, TomList argList, String moduleName) throws IOException;
  protected abstract void buildListOrArray(int deep, TomTerm list, String moduleName) throws IOException;

  protected abstract void buildFunctionCall(int deep, String name, TomList argList, String moduleName)  throws IOException;
  protected abstract void buildFunctionDef(int deep, String tomName, TomList argList, TomType codomain, TomType throwsType, Instruction instruction, String moduleName) throws IOException;
  protected void buildMethodDef(int deep, String tomName, TomList argList, TomType codomain, TomType throwsType, Instruction instruction, String moduleName) throws IOException {
    throw new TomRuntimeException("Backend "+getClass()+" does not support Methods");
  }

  /*buildClass is not abstract since only Java backend supports class
    only backends that supports Class should overload buildClass
   */
  protected void buildClass(int deep, String tomName, TomType extendsType, TomTerm superTerm, Declaration declaration, String moduleName) throws IOException {
    throw new TomRuntimeException("Backend does not support Class");
  }

  /*buildIntrospectorClass is not abstract since only Java backend supports class
    only backends that supports Class should overload buildIntrospectorClass
   */
  protected void buildIntrospectorClass(int deep, String tomName, Declaration declaration, String moduleName) throws IOException {
    throw new TomRuntimeException("Backend does not support Class");
  }

  protected abstract void buildExpNegation(int deep, Expression exp, String moduleName) throws IOException;

  protected abstract void buildExpConditional(int deep, Expression cond,Expression exp1, Expression exp2, String moduleName) throws IOException;
  protected abstract void buildExpAnd(int deep, Expression exp1, Expression exp2, String moduleName) throws IOException;
  protected abstract void buildExpOr(int deep, Expression exp1, Expression exp2, String moduleName) throws IOException;
  protected abstract void buildExpGreaterThan(int deep, Expression exp1, Expression exp2, String moduleName) throws IOException;
  protected abstract void buildExpGreaterOrEqualThan(int deep, Expression exp1, Expression exp2, String moduleName) throws IOException;
  protected abstract void buildExpLessThan(int deep, Expression exp1, Expression exp2, String moduleName) throws IOException;
  protected abstract void buildExpLessOrEqualThan(int deep, Expression exp1, Expression exp2, String moduleName) throws IOException;
  protected abstract void buildExpBottom(int deep, TomType type, String moduleName) throws IOException;
  protected abstract void buildExpTrue(int deep) throws IOException;
  protected abstract void buildExpFalse(int deep) throws IOException;
  protected abstract void buildExpIsEmptyList(int deep, String opName, TomType type, TomTerm expList, String moduleName) throws IOException;
  protected abstract void buildExpIsEmptyArray(int deep, TomName opName, TomType type, TomTerm expIndex, TomTerm expArray, String moduleName) throws IOException;
  protected abstract void buildExpEqualTerm(int deep, TomType type, TomTerm exp1,TomTerm exp2, String moduleName) throws IOException;
  protected abstract void buildExpIsSort(int deep, String type, TomTerm exp, String moduleName) throws IOException;
  protected abstract void buildExpIsFsym(int deep, String opname, TomTerm var, String moduleName) throws IOException;
  protected abstract void buildExpCast(int deep, TomType type, Expression exp, String moduleName) throws IOException;
  protected abstract void buildExpGetSlot(int deep, String opname, String slotName, TomTerm exp, String moduleName) throws IOException;
  protected abstract void buildExpGetHead(int deep, String opName, TomType domain, TomType codomain, TomTerm var, String moduleName) throws IOException;
  protected abstract void buildExpGetTail(int deep, String opName, TomType type1, TomTerm var, String moduleName) throws IOException;
  protected abstract void buildExpGetSize(int deep, TomName opNameAST, TomType type1, TomTerm var, String moduleName) throws IOException;
  protected abstract void buildExpGetElement(int deep, TomName opNameAST, TomType domain, TomType codomain, TomTerm varName, TomTerm varIndex, String moduleName) throws IOException;
  protected abstract void buildExpGetSliceList(int deep, String name, TomTerm varBegin, TomTerm varEnd, TomTerm tailSlice, String moduleName) throws IOException;
  protected abstract void buildExpGetSliceArray(int deep, String name, TomTerm varArray, TomTerm varBegin, TomTerm expEnd, String moduleName) throws IOException;
  protected abstract void buildAssign(int deep, TomTerm var, OptionList list, Expression exp, String moduleName) throws IOException ;
  protected abstract void buildLet(int deep, TomTerm var, OptionList list, TomType tlType, Expression exp, Instruction body, String moduleName) throws IOException ;
  protected abstract void buildLetRef(int deep, TomTerm var, OptionList list, TomType tlType, Expression exp, Instruction body, String moduleName) throws IOException ;
  protected abstract void buildNamedBlock(int deep, String blockName, InstructionList instList, String modulename) throws IOException ;
  protected abstract void buildUnamedBlock(int deep, InstructionList instList, String moduleName) throws IOException ;
  protected abstract void buildIf(int deep, Expression exp, Instruction succes, String moduleName) throws IOException ;
  protected abstract void buildIfWithFailure(int deep, Expression exp, Instruction succes, Instruction failure, String moduleName) throws IOException ;
  protected abstract void buildDoWhile(int deep, Instruction succes, Expression exp, String moduleName) throws IOException;
  protected abstract void buildWhileDo(int deep, Expression exp, Instruction succes, String moduleName) throws IOException;
  protected abstract void buildAddOne(int deep, TomTerm var, String moduleName) throws IOException;
  protected abstract void buildReturn(int deep, TomTerm exp, String moduleName) throws IOException ;
  protected abstract void buildSymbolDecl(int deep, String tomName, String moduleName) throws IOException ;
  protected abstract void buildGetImplementationDecl(int deep, String type, String name,
      TomType tlType, Instruction instr, String moduleName) throws IOException;

  protected abstract void buildIsFsymDecl(int deep, String tomName, String name1,
      TomType tlType, Expression code, String moduleName) throws IOException;
  protected abstract void buildGetSlotDecl(int deep, String tomName, String name1,
      TomType tlType, Expression code, TomName slotName, String moduleName) throws IOException;
  protected abstract void buildEqualTermDecl(int deep, String name1, String name2, String type1, String type2, Expression code, String moduleName) throws IOException;
  protected abstract void buildIsSortDecl(int deep, String name1, 
      String type1, Expression expr, String moduleName) throws IOException;
  protected abstract void buildGetHeadDecl(int deep, TomName opNameAST, String varName, String suffix, TomType domain, TomType codomain, Expression code, String moduleName) throws IOException;
  protected abstract void buildGetTailDecl(int deep, TomName opNameAST, String varName, String type, TomType tlType, Expression code, String moduleName) throws IOException;
  protected abstract void buildIsEmptyDecl(int deep, TomName opNameAST, String varName, String type,
      TomType tlType, Expression code, String moduleName) throws IOException;
  protected abstract void buildGetElementDecl(int deep, TomName opNameAST, String name1, String name2, String type1, TomType tlType1, Expression code, String moduleName) throws IOException;
  protected abstract void buildGetSizeDecl(int deep, TomName opNameAST, String name1, String type, TomType tlType, Expression code, String moduleName) throws IOException;

} // class TomAbstractGenerator

%typelist String {
  implement           { String }
  get_fun_sym(t)      { t }
  cmp_fun_sym(s1,s2)  { (s1.equals(s2)) }
//  get_subterm(t, n)   { null }
  equals(t1,t2)       { (t1.equals(t2)) }
  get_head(s)         { s.charAt(0) }
  get_tail(s)         { s.substring(1) }
  is_empty(s)         { s.length() }
}

%typeterm Char {
  implement           { char }
  get_fun_sym(t)      { t }
  cmp_fun_sym(s1,s2)  { (s1.equals(s2)) }
  get_subterm(t, n)   { null }
  equals(t1,t2)       { (t1.equals(t2)) }
}


%oplist String concChar(Char*) {
  fsym             { null }
  is_fsym(t)       { (t!= null) && (t instanceof String) }
  make_empty()     { "" }
  make_insert(c,s) { (c+s) }
}

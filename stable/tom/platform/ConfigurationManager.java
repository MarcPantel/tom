/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 * 
 * TOM - To One Matching Compiler
 * 
 * Copyright (c) 2000-2008, INRIA
 * Nancy, France.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 * 
 * Pierre-Etienne Moreau  e-mail: Pierre-Etienne.Moreau@loria.fr
 *
 **/

package tom.platform;

import java.util.*;
import java.util.logging.*;

import aterm.*;
import aterm.pure.*;

import tom.engine.TomMessage;

import tom.library.adt.tnode.*;
import tom.library.adt.tnode.types.*;
import tom.library.xml.*;
import tom.platform.adt.platformoption.*;
import tom.platform.adt.platformoption.types.*;

/**
 * This class is a wrapper for the platform XML configuration files.
 * It extracts the plugins information and create an ordered list of
 * of instances. Extracts the Option Management information and based
 * on it create and initialize the corresponding OptionManager.
 * The instantiation of a Configuration is not sufficient since it need to
 * be initialized with an execution commandLine.
 *
 */
public class ConfigurationManager {
  
  /** Used to analyse xml configuration file*/
  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.library.adt.tnode.types.TNodeList  tom_append_list_concTNode( tom.library.adt.tnode.types.TNodeList l1,  tom.library.adt.tnode.types.TNodeList  l2) {     if( l1.isEmptyconcTNode() ) {       return l2;     } else if( l2.isEmptyconcTNode() ) {       return l1;     } else if(  l1.getTailconcTNode() .isEmptyconcTNode() ) {       return  tom.library.adt.tnode.types.tnodelist.ConsconcTNode.make( l1.getHeadconcTNode() ,l2) ;     } else {       return  tom.library.adt.tnode.types.tnodelist.ConsconcTNode.make( l1.getHeadconcTNode() ,tom_append_list_concTNode( l1.getTailconcTNode() ,l2)) ;     }   }   private static   tom.library.adt.tnode.types.TNodeList  tom_get_slice_concTNode( tom.library.adt.tnode.types.TNodeList  begin,  tom.library.adt.tnode.types.TNodeList  end, tom.library.adt.tnode.types.TNodeList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyconcTNode()  ||  (end== tom.library.adt.tnode.types.tnodelist.EmptyconcTNode.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.tnode.types.tnodelist.ConsconcTNode.make( begin.getHeadconcTNode() ,( tom.library.adt.tnode.types.TNodeList )tom_get_slice_concTNode( begin.getTailconcTNode() ,end,tail)) ;   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ 


  
  /** configuration file name */
  private String xmlConfigurationFileName;

  /** The plugins instance list*/
  private List pluginsList;

  /** The OptionManager */
  private OptionManager optionManager;
  
  private static Logger logger = Logger.getLogger("tom.platform.ConfigurationManager");
  /**
   * Basic Constructor
   * constructing a configurationManager that needs to be initialized
   */
  public ConfigurationManager(String xmlConfigurationFileName) {
    this.xmlConfigurationFileName = xmlConfigurationFileName;
    this.pluginsList = new ArrayList();
  }
  
  /**
   * initialize analyse the XML file and extract plugins and option management
   *
   * @return  an error code :
   * <ul>
   * <li>0 if no error was encountered</li>
   * <li>1 if something went wrong</li>
   * </ul>
   */
  public int initialize(String[] commandLine) {    
    XmlTools xtools = new XmlTools();
    TNode configurationNode = xtools.convertXMLToTNode(xmlConfigurationFileName);
    if(configurationNode == null) {
      getLogger().log(Level.SEVERE, PluginPlatformMessage.configFileNotXML.getMessage(), xmlConfigurationFileName);
      return 1;
    }
    if(createPlugins(configurationNode.getDocElem())==1) {
      return 1;
    }    
    if(createOptionManager(configurationNode.getDocElem()) == 1) {     
      if( ((Boolean)optionManager.getOptionValue("optimize2")).booleanValue()
          && !(optionManager.getInputToCompileList().size() == 1 && "-".equals((String)optionManager.getInputToCompileList().get(0))) ) {        
        logger.log(Level.WARNING, TomMessage.optimizerModifiesLineNumbers.getMessage());
      }
      return 1;
    }
    return optionManager.initialize(this, commandLine);
  }

  /** Accessor method */
  public List getPluginsList() {
    return pluginsList;
  }

  /** Accessor method */
  public OptionManager  getOptionManager() {
    return optionManager;
  }
  
  /** 
   * Initialize the plugins list based on information extracted
   * from the XML conf file converted in TNode
   *
   * @return  an error code :
   * <ul>
   * <li>0 if no error was encountered</li>
   * <li>1 if something went wrong</li>
   * </ul>
   */
  private int createPlugins(TNode configurationNode) {
    List pluginsClassList = extractClassPaths(configurationNode);
    // if empty list this means there is a problem somewhere
    if(pluginsClassList.isEmpty()) {
      getLogger().log(Level.SEVERE, PluginPlatformMessage.noPluginFound.getMessage(), xmlConfigurationFileName);
      pluginsList = null;
      return 1;
    }
    // creates an instance of each plugin
    Iterator classPathIt = pluginsClassList.iterator();
    while(classPathIt.hasNext()) {
      String pluginClass = (String)classPathIt.next();
      try { 
        Object pluginInstance = Class.forName(pluginClass).newInstance();
        if(pluginInstance instanceof Plugin) {
          pluginsList.add(pluginInstance);
        } else {
          getLogger().log(Level.SEVERE, PluginPlatformMessage.classNotAPlugin.getMessage(), pluginClass);
          pluginsList = null;
          return 1;
        }
      } catch(ClassNotFoundException cnfe) {
        getLogger().log(Level.WARNING, PluginPlatformMessage.classNotFound.getMessage(), pluginClass);
        return 1;
      } catch(Exception e) {
        // adds the error message. this is too cryptic otherwise
        e.printStackTrace();
        getLogger().log(Level.SEVERE, PluginPlatformMessage.instantiationError.getMessage(), pluginClass);
        pluginsList = null;
        return 1;
      }
    }
    return 0;
  }
  
  /**
   * Extracts the plugins' class name from the XML configuration file.
   * 
   * @param node the node containing the XML document
   * @return the List of plugins class path
   */
  private List extractClassPaths(TNode node) {
    List res = new ArrayList();
    {if ( (node instanceof tom.library.adt.tnode.types.TNode) ) {{  tom.library.adt.tnode.types.TNode  tomMatch572NameNumberfreshSubject_1=(( tom.library.adt.tnode.types.TNode )node);{  tom.library.adt.tnode.types.TNode  tomMatch572NameNumber_freshVar_3=tomMatch572NameNumberfreshSubject_1;if ( (tomMatch572NameNumber_freshVar_3 instanceof tom.library.adt.tnode.types.tnode.ElementNode) ) {{  String  tomMatch572NameNumber_freshVar_0= tomMatch572NameNumber_freshVar_3.getName() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_1= tomMatch572NameNumber_freshVar_3.getAttrList() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_2= tomMatch572NameNumber_freshVar_3.getChildList() ;{  String  tomMatch572NameNumber_freshVar_4=tomMatch572NameNumber_freshVar_0;if ( "platform".equals(tomMatch572NameNumber_freshVar_4) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_5=tomMatch572NameNumber_freshVar_1;if ( ((tomMatch572NameNumber_freshVar_5 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch572NameNumber_freshVar_5 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_7=tomMatch572NameNumber_freshVar_2;if ( ((tomMatch572NameNumber_freshVar_7 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch572NameNumber_freshVar_7 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_begin_9=tomMatch572NameNumber_freshVar_7;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_end_10=tomMatch572NameNumber_freshVar_7;do {{{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_8=tomMatch572NameNumber_end_10;if (!( tomMatch572NameNumber_freshVar_8.isEmptyconcTNode() )) {{  tom.library.adt.tnode.types.TNode  tomMatch572NameNumber_freshVar_16= tomMatch572NameNumber_freshVar_8.getHeadconcTNode() ;if ( (tomMatch572NameNumber_freshVar_16 instanceof tom.library.adt.tnode.types.tnode.ElementNode) ) {{  String  tomMatch572NameNumber_freshVar_13= tomMatch572NameNumber_freshVar_16.getName() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_14= tomMatch572NameNumber_freshVar_16.getAttrList() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_15= tomMatch572NameNumber_freshVar_16.getChildList() ;{  String  tomMatch572NameNumber_freshVar_17=tomMatch572NameNumber_freshVar_13;if ( "plugins".equals(tomMatch572NameNumber_freshVar_17) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_18=tomMatch572NameNumber_freshVar_14;if ( ((tomMatch572NameNumber_freshVar_18 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch572NameNumber_freshVar_18 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_20=tomMatch572NameNumber_freshVar_15;if ( ((tomMatch572NameNumber_freshVar_20 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch572NameNumber_freshVar_20 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_begin_22=tomMatch572NameNumber_freshVar_20;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_end_23=tomMatch572NameNumber_freshVar_20;do {{{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_21=tomMatch572NameNumber_end_23;if (!( tomMatch572NameNumber_freshVar_21.isEmptyconcTNode() )) {{  tom.library.adt.tnode.types.TNode  tomMatch572NameNumber_freshVar_29= tomMatch572NameNumber_freshVar_21.getHeadconcTNode() ;if ( (tomMatch572NameNumber_freshVar_29 instanceof tom.library.adt.tnode.types.tnode.ElementNode) ) {{  String  tomMatch572NameNumber_freshVar_26= tomMatch572NameNumber_freshVar_29.getName() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_27= tomMatch572NameNumber_freshVar_29.getAttrList() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_28= tomMatch572NameNumber_freshVar_29.getChildList() ;{  String  tomMatch572NameNumber_freshVar_30=tomMatch572NameNumber_freshVar_26;if ( "plugin".equals(tomMatch572NameNumber_freshVar_30) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_31=tomMatch572NameNumber_freshVar_27;if ( ((tomMatch572NameNumber_freshVar_31 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch572NameNumber_freshVar_31 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_begin_33=tomMatch572NameNumber_freshVar_31;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_end_34=tomMatch572NameNumber_freshVar_31;do {{{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_32=tomMatch572NameNumber_end_34;if (!( tomMatch572NameNumber_freshVar_32.isEmptyconcTNode() )) {{  tom.library.adt.tnode.types.TNode  tomMatch572NameNumber_freshVar_41= tomMatch572NameNumber_freshVar_32.getHeadconcTNode() ;if ( (tomMatch572NameNumber_freshVar_41 instanceof tom.library.adt.tnode.types.tnode.AttributeNode) ) {{  String  tomMatch572NameNumber_freshVar_38= tomMatch572NameNumber_freshVar_41.getName() ;{  String  tomMatch572NameNumber_freshVar_39= tomMatch572NameNumber_freshVar_41.getSpecified() ;{  String  tomMatch572NameNumber_freshVar_40= tomMatch572NameNumber_freshVar_41.getValue() ;{  String  tomMatch572NameNumber_freshVar_42=tomMatch572NameNumber_freshVar_38;if ( "class".equals(tomMatch572NameNumber_freshVar_42) ) {{  String  tom_cp=tomMatch572NameNumber_freshVar_40;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_35= tomMatch572NameNumber_freshVar_32.getTailconcTNode() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_37=tomMatch572NameNumber_freshVar_28;if ( ((tomMatch572NameNumber_freshVar_37 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch572NameNumber_freshVar_37 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {if ( tomMatch572NameNumber_freshVar_37.isEmptyconcTNode() ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_24= tomMatch572NameNumber_freshVar_21.getTailconcTNode() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch572NameNumber_freshVar_11= tomMatch572NameNumber_freshVar_8.getTailconcTNode() ;if ( true ) {

         res.add(tom_cp);
         getLogger().log(Level.FINER, PluginPlatformMessage.classPathRead.getMessage(), tom_cp);
       }}}}}}}}}}}}}}}}}if ( tomMatch572NameNumber_end_34.isEmptyconcTNode() ) {tomMatch572NameNumber_end_34=tomMatch572NameNumber_begin_33;} else {tomMatch572NameNumber_end_34= tomMatch572NameNumber_end_34.getTailconcTNode() ;}}} while(!( (tomMatch572NameNumber_end_34==tomMatch572NameNumber_begin_33) ));}}}}}}}}}}}}}if ( tomMatch572NameNumber_end_23.isEmptyconcTNode() ) {tomMatch572NameNumber_end_23=tomMatch572NameNumber_begin_22;} else {tomMatch572NameNumber_end_23= tomMatch572NameNumber_end_23.getTailconcTNode() ;}}} while(!( (tomMatch572NameNumber_end_23==tomMatch572NameNumber_begin_22) ));}}}}}}}}}}}}}}}if ( tomMatch572NameNumber_end_10.isEmptyconcTNode() ) {tomMatch572NameNumber_end_10=tomMatch572NameNumber_begin_9;} else {tomMatch572NameNumber_end_10= tomMatch572NameNumber_end_10.getTailconcTNode() ;}}} while(!( (tomMatch572NameNumber_end_10==tomMatch572NameNumber_begin_9) ));}}}}}}}}}}}}}}}}

    return res;
  }
 
   /**
   * Initialize the option manager based on information extracted
   * from the XML conf file converted in TNode
   * 
   * @param node the node containing the XML file
   * @return  an error code :
   * <ul>
   * <li>0 if no error was encountered</li>
   * <li>1 if something went wrong</li>
   * </ul>
   */
  private int createOptionManager(TNode node) {
    {if ( (node instanceof tom.library.adt.tnode.types.TNode) ) {{  tom.library.adt.tnode.types.TNode  tomMatch573NameNumberfreshSubject_1=(( tom.library.adt.tnode.types.TNode )node);{  tom.library.adt.tnode.types.TNode  tomMatch573NameNumber_freshVar_3=tomMatch573NameNumberfreshSubject_1;if ( (tomMatch573NameNumber_freshVar_3 instanceof tom.library.adt.tnode.types.tnode.ElementNode) ) {{  String  tomMatch573NameNumber_freshVar_0= tomMatch573NameNumber_freshVar_3.getName() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_1= tomMatch573NameNumber_freshVar_3.getAttrList() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_2= tomMatch573NameNumber_freshVar_3.getChildList() ;{  String  tomMatch573NameNumber_freshVar_4=tomMatch573NameNumber_freshVar_0;if ( "platform".equals(tomMatch573NameNumber_freshVar_4) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_5=tomMatch573NameNumber_freshVar_1;if ( ((tomMatch573NameNumber_freshVar_5 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch573NameNumber_freshVar_5 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_7=tomMatch573NameNumber_freshVar_2;if ( ((tomMatch573NameNumber_freshVar_7 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch573NameNumber_freshVar_7 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_begin_9=tomMatch573NameNumber_freshVar_7;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_end_10=tomMatch573NameNumber_freshVar_7;do {{{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_8=tomMatch573NameNumber_end_10;if (!( tomMatch573NameNumber_freshVar_8.isEmptyconcTNode() )) {{  tom.library.adt.tnode.types.TNode  tomMatch573NameNumber_freshVar_16= tomMatch573NameNumber_freshVar_8.getHeadconcTNode() ;if ( (tomMatch573NameNumber_freshVar_16 instanceof tom.library.adt.tnode.types.tnode.ElementNode) ) {{  String  tomMatch573NameNumber_freshVar_13= tomMatch573NameNumber_freshVar_16.getName() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_14= tomMatch573NameNumber_freshVar_16.getAttrList() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_15= tomMatch573NameNumber_freshVar_16.getChildList() ;{  String  tomMatch573NameNumber_freshVar_17=tomMatch573NameNumber_freshVar_13;if ( "optionmanager".equals(tomMatch573NameNumber_freshVar_17) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_18=tomMatch573NameNumber_freshVar_14;if ( ((tomMatch573NameNumber_freshVar_18 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch573NameNumber_freshVar_18 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_begin_20=tomMatch573NameNumber_freshVar_18;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_end_21=tomMatch573NameNumber_freshVar_18;do {{{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_19=tomMatch573NameNumber_end_21;if (!( tomMatch573NameNumber_freshVar_19.isEmptyconcTNode() )) {{  tom.library.adt.tnode.types.TNode  tomMatch573NameNumber_freshVar_33= tomMatch573NameNumber_freshVar_19.getHeadconcTNode() ;if ( (tomMatch573NameNumber_freshVar_33 instanceof tom.library.adt.tnode.types.tnode.AttributeNode) ) {{  String  tomMatch573NameNumber_freshVar_30= tomMatch573NameNumber_freshVar_33.getName() ;{  String  tomMatch573NameNumber_freshVar_31= tomMatch573NameNumber_freshVar_33.getSpecified() ;{  String  tomMatch573NameNumber_freshVar_32= tomMatch573NameNumber_freshVar_33.getValue() ;{  String  tomMatch573NameNumber_freshVar_34=tomMatch573NameNumber_freshVar_30;if ( "class".equals(tomMatch573NameNumber_freshVar_34) ) {{  String  tom_omclass=tomMatch573NameNumber_freshVar_32;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_22= tomMatch573NameNumber_freshVar_19.getTailconcTNode() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_24=tomMatch573NameNumber_freshVar_15;if ( ((tomMatch573NameNumber_freshVar_24 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch573NameNumber_freshVar_24 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_begin_26=tomMatch573NameNumber_freshVar_24;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_end_27=tomMatch573NameNumber_freshVar_24;do {{{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_25=tomMatch573NameNumber_end_27;if (!( tomMatch573NameNumber_freshVar_25.isEmptyconcTNode() )) {{  tom.library.adt.tnode.types.TNode  tomMatch573NameNumber_freshVar_38= tomMatch573NameNumber_freshVar_25.getHeadconcTNode() ;if ( (tomMatch573NameNumber_freshVar_38 instanceof tom.library.adt.tnode.types.tnode.ElementNode) ) {{  String  tomMatch573NameNumber_freshVar_35= tomMatch573NameNumber_freshVar_38.getName() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_36= tomMatch573NameNumber_freshVar_38.getAttrList() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_37= tomMatch573NameNumber_freshVar_38.getChildList() ;{  String  tomMatch573NameNumber_freshVar_39=tomMatch573NameNumber_freshVar_35;if ( "options".equals(tomMatch573NameNumber_freshVar_39) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_40=tomMatch573NameNumber_freshVar_36;if ( ((tomMatch573NameNumber_freshVar_40 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch573NameNumber_freshVar_40 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_42=tomMatch573NameNumber_freshVar_37;if ( ((tomMatch573NameNumber_freshVar_42 instanceof tom.library.adt.tnode.types.tnodelist.ConsconcTNode) || (tomMatch573NameNumber_freshVar_42 instanceof tom.library.adt.tnode.types.tnodelist.EmptyconcTNode)) ) {{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_28= tomMatch573NameNumber_freshVar_25.getTailconcTNode() ;{  tom.library.adt.tnode.types.TNodeList  tomMatch573NameNumber_freshVar_11= tomMatch573NameNumber_freshVar_8.getTailconcTNode() ;if ( true ) {

        try {
          Object omInstance = Class.forName(tom_omclass).newInstance();
          if(omInstance instanceof OptionManager) {
            optionManager = (OptionManager)omInstance;
          } else {
            getLogger().log(Level.SEVERE, PluginPlatformMessage.classNotOptionManager.getMessage(), tom_omclass);
            return 1;
          }
        } catch(ClassNotFoundException cnfe) {
          getLogger().log(Level.SEVERE, PluginPlatformMessage.classNotFound.getMessage(), tom_omclass);
          optionManager = null;
          return 1;
        } catch (Exception e) {
          e.printStackTrace();
          System.out.println(e.getMessage());
          getLogger().log(Level.SEVERE, PluginPlatformMessage.instantiationError.getMessage(), tom_omclass);
          optionManager = null;
          return 1;
        }

        TNode optionX =  tom.library.adt.tnode.types.tnode.ElementNode.make("string",  tom.library.adt.tnode.types.tnodelist.ConsconcTNode.make( tom.library.adt.tnode.types.tnode.AttributeNode.make("altName", "true", "X") , tom.library.adt.tnode.types.tnodelist.ConsconcTNode.make( tom.library.adt.tnode.types.tnode.AttributeNode.make("attrName", "true", "file") , tom.library.adt.tnode.types.tnodelist.ConsconcTNode.make( tom.library.adt.tnode.types.tnode.AttributeNode.make("description", "true", "Defines an alternate XML configuration file") , tom.library.adt.tnode.types.tnodelist.ConsconcTNode.make( tom.library.adt.tnode.types.tnode.AttributeNode.make("name", "true", "config") , tom.library.adt.tnode.types.tnodelist.ConsconcTNode.make( tom.library.adt.tnode.types.tnode.AttributeNode.make("value", "true", xmlConfigurationFileName) , tom.library.adt.tnode.types.tnodelist.EmptyconcTNode.make() ) ) ) ) ) ,  tom.library.adt.tnode.types.tnodelist.EmptyconcTNode.make() ) 


;
        TNode opt =  tom.library.adt.tnode.types.tnode.ElementNode.make("options",  tom.library.adt.tnode.types.tnodelist.EmptyconcTNode.make() ,  tom.library.adt.tnode.types.tnodelist.ConsconcTNode.make(optionX,tom_append_list_concTNode(tomMatch573NameNumber_freshVar_42, tom.library.adt.tnode.types.tnodelist.EmptyconcTNode.make() )) ) ;
        PlatformOptionList globalOptions = OptionParser.xmlNodeToOptionList(opt);
        optionManager.setGlobalOptionList(globalOptions);
        return 0;
      }}}}}}}}}}}}}}}}if ( tomMatch573NameNumber_end_27.isEmptyconcTNode() ) {tomMatch573NameNumber_end_27=tomMatch573NameNumber_begin_26;} else {tomMatch573NameNumber_end_27= tomMatch573NameNumber_end_27.getTailconcTNode() ;}}} while(!( (tomMatch573NameNumber_end_27==tomMatch573NameNumber_begin_26) ));}}}}}}}}}}}}}}}if ( tomMatch573NameNumber_end_21.isEmptyconcTNode() ) {tomMatch573NameNumber_end_21=tomMatch573NameNumber_begin_20;} else {tomMatch573NameNumber_end_21= tomMatch573NameNumber_end_21.getTailconcTNode() ;}}} while(!( (tomMatch573NameNumber_end_21==tomMatch573NameNumber_begin_20) ));}}}}}}}}}}}}}if ( tomMatch573NameNumber_end_10.isEmptyconcTNode() ) {tomMatch573NameNumber_end_10=tomMatch573NameNumber_begin_9;} else {tomMatch573NameNumber_end_10= tomMatch573NameNumber_end_10.getTailconcTNode() ;}}} while(!( (tomMatch573NameNumber_end_10==tomMatch573NameNumber_begin_9) ));}}}}}}}}}}}}}}}}

    return 1;
  }

  /** logger accessor in case of logging needs*/
  private Logger getLogger() {
    return Logger.getLogger(getClass().getName());
  }

}

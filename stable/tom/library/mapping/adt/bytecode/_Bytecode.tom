
   /*
   %include { mustrategy.tom }
   */

%op Strategy Is_LocalVariable() {
  make() { `When_LocalVariable(Identity()) }
}

%op Strategy _LocalVariable(arg0:Strategy, arg1:Strategy, arg2:Strategy, arg3:Strategy, arg4:Strategy, arg5:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlocalvariable._LocalVariable)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  get_slot(arg3, t) { t.getArgument(3) }
  get_slot(arg4, t) { t.getArgument(4) }
  get_slot(arg5, t) { t.getArgument(5) }
  make(arg0, arg1, arg2, arg3, arg4, arg5) { new tom.library.adt.bytecode.strategy.tlocalvariable._LocalVariable(arg0, arg1, arg2, arg3, arg4, arg5) }
}

%op Strategy Make_LocalVariable(_name:String, _typeDesc:String, _signature:Strategy, _start:Strategy, _end:Strategy, _index:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlocalvariable.Make_LocalVariable)}

  get_slot(_name, t) { _name }
  get_slot(_typeDesc, t) { _typeDesc }
  get_slot(_signature, t) { _signature }
  get_slot(_start, t) { _start }
  get_slot(_end, t) { _end }
  get_slot(_index, t) { _index }
  make( _name,  _typeDesc,  new_signature,  new_start,  new_end,  _index) { new tom.library.adt.bytecode.strategy.tlocalvariable.Make_LocalVariable( _name,  _typeDesc,  new_signature,  new_start,  new_end,  _index) }
}

%op Strategy When_LocalVariable(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlocalvariable.When_LocalVariable)}
  make(s) { new tom.library.adt.bytecode.strategy.tlocalvariable.When_LocalVariable(s) }
}

%op Strategy Is_MethodCode() {
  make() { `When_MethodCode(Identity()) }
}

%op Strategy _MethodCode(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodcode._MethodCode)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.tmethodcode._MethodCode(arg0, arg1, arg2) }
}

%op Strategy Make_MethodCode(_instructions:Strategy, _localVariables:Strategy, _tryCatchBlocks:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodcode.Make_MethodCode)}

  get_slot(_instructions, t) { _instructions }
  get_slot(_localVariables, t) { _localVariables }
  get_slot(_tryCatchBlocks, t) { _tryCatchBlocks }
  make( new_instructions,  new_localVariables,  new_tryCatchBlocks) { new tom.library.adt.bytecode.strategy.tmethodcode.Make_MethodCode( new_instructions,  new_localVariables,  new_tryCatchBlocks) }
}

%op Strategy When_MethodCode(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodcode.When_MethodCode)}
  make(s) { new tom.library.adt.bytecode.strategy.tmethodcode.When_MethodCode(s) }
}

%op Strategy Is_EmptyCode() {
  make() { `When_EmptyCode(Identity()) }
}

%op Strategy _EmptyCode() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodcode._EmptyCode)}

  make() { new tom.library.adt.bytecode.strategy.tmethodcode._EmptyCode() }
}

%op Strategy Make_EmptyCode() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodcode.Make_EmptyCode)}

  make() { new tom.library.adt.bytecode.strategy.tmethodcode.Make_EmptyCode() }
}

%op Strategy When_EmptyCode(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodcode.When_EmptyCode)}
  make(s) { new tom.library.adt.bytecode.strategy.tmethodcode.When_EmptyCode(s) }
}

%op Strategy Is_EmptyMethodList() {
  make() { `When_EmptyMethodList(Identity()) }
}

%op Strategy _EmptyMethodList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodlist._EmptyMethodList)}

  make() { new tom.library.adt.bytecode.strategy.tmethodlist._EmptyMethodList() }
}

%op Strategy Make_EmptyMethodList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodlist.Make_EmptyMethodList)}

  make() { new tom.library.adt.bytecode.strategy.tmethodlist.Make_EmptyMethodList() }
}

%op Strategy When_EmptyMethodList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodlist.When_EmptyMethodList)}
  make(s) { new tom.library.adt.bytecode.strategy.tmethodlist.When_EmptyMethodList(s) }
}

%op Strategy Is_ConsMethodList() {
  make() { `When_ConsMethodList(Identity()) }
}

%op Strategy _ConsMethodList(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodlist._ConsMethodList)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tmethodlist._ConsMethodList(arg0, arg1) }
}

%op Strategy Make_ConsMethodList(_HeadMethodList:Strategy, _TailMethodList:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodlist.Make_ConsMethodList)}

  get_slot(_HeadMethodList, t) { _HeadMethodList }
  get_slot(_TailMethodList, t) { _TailMethodList }
  make( new_HeadMethodList,  new_TailMethodList) { new tom.library.adt.bytecode.strategy.tmethodlist.Make_ConsMethodList( new_HeadMethodList,  new_TailMethodList) }
}

%op Strategy When_ConsMethodList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodlist.When_ConsMethodList)}
  make(s) { new tom.library.adt.bytecode.strategy.tmethodlist.When_ConsMethodList(s) }
}

%op Strategy Is_Signature() {
  make() { `When_Signature(Identity()) }
}

%op Strategy _Signature(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tsignature._Signature)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tsignature._Signature(arg0) }
}

%op Strategy Make_Signature(_sig:String) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tsignature.Make_Signature)}

  get_slot(_sig, t) { _sig }
  make( _sig) { new tom.library.adt.bytecode.strategy.tsignature.Make_Signature( _sig) }
}

%op Strategy When_Signature(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tsignature.When_Signature)}
  make(s) { new tom.library.adt.bytecode.strategy.tsignature.When_Signature(s) }
}

%op Strategy Is_EmptySignature() {
  make() { `When_EmptySignature(Identity()) }
}

%op Strategy _EmptySignature() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tsignature._EmptySignature)}

  make() { new tom.library.adt.bytecode.strategy.tsignature._EmptySignature() }
}

%op Strategy Make_EmptySignature() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tsignature.Make_EmptySignature)}

  make() { new tom.library.adt.bytecode.strategy.tsignature.Make_EmptySignature() }
}

%op Strategy When_EmptySignature(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tsignature.When_EmptySignature)}
  make(s) { new tom.library.adt.bytecode.strategy.tsignature.When_EmptySignature(s) }
}

%op Strategy Is_InnerClassInfo() {
  make() { `When_InnerClassInfo(Identity()) }
}

%op Strategy _InnerClassInfo(arg0:Strategy, arg1:Strategy, arg2:Strategy, arg3:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinnerclassinfo._InnerClassInfo)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  get_slot(arg3, t) { t.getArgument(3) }
  make(arg0, arg1, arg2, arg3) { new tom.library.adt.bytecode.strategy.tinnerclassinfo._InnerClassInfo(arg0, arg1, arg2, arg3) }
}

%op Strategy Make_InnerClassInfo(_name:String, _outerName:String, _innerName:String, _access:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinnerclassinfo.Make_InnerClassInfo)}

  get_slot(_name, t) { _name }
  get_slot(_outerName, t) { _outerName }
  get_slot(_innerName, t) { _innerName }
  get_slot(_access, t) { _access }
  make( _name,  _outerName,  _innerName,  new_access) { new tom.library.adt.bytecode.strategy.tinnerclassinfo.Make_InnerClassInfo( _name,  _outerName,  _innerName,  new_access) }
}

%op Strategy When_InnerClassInfo(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinnerclassinfo.When_InnerClassInfo)}
  make(s) { new tom.library.adt.bytecode.strategy.tinnerclassinfo.When_InnerClassInfo(s) }
}

%op Strategy Is_ABSTRACT() {
  make() { `When_ABSTRACT(Identity()) }
}

%op Strategy _ABSTRACT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._ABSTRACT)}

  make() { new tom.library.adt.bytecode.strategy.taccess._ABSTRACT() }
}

%op Strategy Make_ABSTRACT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_ABSTRACT)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_ABSTRACT() }
}

%op Strategy When_ABSTRACT(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_ABSTRACT)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_ABSTRACT(s) }
}

%op Strategy Is_ANNOTATION() {
  make() { `When_ANNOTATION(Identity()) }
}

%op Strategy _ANNOTATION() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._ANNOTATION)}

  make() { new tom.library.adt.bytecode.strategy.taccess._ANNOTATION() }
}

%op Strategy Make_ANNOTATION() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_ANNOTATION)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_ANNOTATION() }
}

%op Strategy When_ANNOTATION(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_ANNOTATION)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_ANNOTATION(s) }
}

%op Strategy Is_BRIDGE() {
  make() { `When_BRIDGE(Identity()) }
}

%op Strategy _BRIDGE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._BRIDGE)}

  make() { new tom.library.adt.bytecode.strategy.taccess._BRIDGE() }
}

%op Strategy Make_BRIDGE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_BRIDGE)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_BRIDGE() }
}

%op Strategy When_BRIDGE(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_BRIDGE)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_BRIDGE(s) }
}

%op Strategy Is_DEPRECATED() {
  make() { `When_DEPRECATED(Identity()) }
}

%op Strategy _DEPRECATED() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._DEPRECATED)}

  make() { new tom.library.adt.bytecode.strategy.taccess._DEPRECATED() }
}

%op Strategy Make_DEPRECATED() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_DEPRECATED)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_DEPRECATED() }
}

%op Strategy When_DEPRECATED(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_DEPRECATED)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_DEPRECATED(s) }
}

%op Strategy Is_ENUM() {
  make() { `When_ENUM(Identity()) }
}

%op Strategy _ENUM() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._ENUM)}

  make() { new tom.library.adt.bytecode.strategy.taccess._ENUM() }
}

%op Strategy Make_ENUM() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_ENUM)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_ENUM() }
}

%op Strategy When_ENUM(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_ENUM)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_ENUM(s) }
}

%op Strategy Is_FINAL() {
  make() { `When_FINAL(Identity()) }
}

%op Strategy _FINAL() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._FINAL)}

  make() { new tom.library.adt.bytecode.strategy.taccess._FINAL() }
}

%op Strategy Make_FINAL() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_FINAL)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_FINAL() }
}

%op Strategy When_FINAL(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_FINAL)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_FINAL(s) }
}

%op Strategy Is_INTERFACE() {
  make() { `When_INTERFACE(Identity()) }
}

%op Strategy _INTERFACE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._INTERFACE)}

  make() { new tom.library.adt.bytecode.strategy.taccess._INTERFACE() }
}

%op Strategy Make_INTERFACE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_INTERFACE)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_INTERFACE() }
}

%op Strategy When_INTERFACE(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_INTERFACE)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_INTERFACE(s) }
}

%op Strategy Is_NATIVE() {
  make() { `When_NATIVE(Identity()) }
}

%op Strategy _NATIVE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._NATIVE)}

  make() { new tom.library.adt.bytecode.strategy.taccess._NATIVE() }
}

%op Strategy Make_NATIVE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_NATIVE)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_NATIVE() }
}

%op Strategy When_NATIVE(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_NATIVE)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_NATIVE(s) }
}

%op Strategy Is_PRIVATE() {
  make() { `When_PRIVATE(Identity()) }
}

%op Strategy _PRIVATE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._PRIVATE)}

  make() { new tom.library.adt.bytecode.strategy.taccess._PRIVATE() }
}

%op Strategy Make_PRIVATE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_PRIVATE)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_PRIVATE() }
}

%op Strategy When_PRIVATE(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_PRIVATE)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_PRIVATE(s) }
}

%op Strategy Is_PROTECTED() {
  make() { `When_PROTECTED(Identity()) }
}

%op Strategy _PROTECTED() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._PROTECTED)}

  make() { new tom.library.adt.bytecode.strategy.taccess._PROTECTED() }
}

%op Strategy Make_PROTECTED() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_PROTECTED)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_PROTECTED() }
}

%op Strategy When_PROTECTED(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_PROTECTED)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_PROTECTED(s) }
}

%op Strategy Is_PUBLIC() {
  make() { `When_PUBLIC(Identity()) }
}

%op Strategy _PUBLIC() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._PUBLIC)}

  make() { new tom.library.adt.bytecode.strategy.taccess._PUBLIC() }
}

%op Strategy Make_PUBLIC() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_PUBLIC)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_PUBLIC() }
}

%op Strategy When_PUBLIC(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_PUBLIC)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_PUBLIC(s) }
}

%op Strategy Is_STATIC() {
  make() { `When_STATIC(Identity()) }
}

%op Strategy _STATIC() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._STATIC)}

  make() { new tom.library.adt.bytecode.strategy.taccess._STATIC() }
}

%op Strategy Make_STATIC() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_STATIC)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_STATIC() }
}

%op Strategy When_STATIC(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_STATIC)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_STATIC(s) }
}

%op Strategy Is_STRICT() {
  make() { `When_STRICT(Identity()) }
}

%op Strategy _STRICT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._STRICT)}

  make() { new tom.library.adt.bytecode.strategy.taccess._STRICT() }
}

%op Strategy Make_STRICT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_STRICT)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_STRICT() }
}

%op Strategy When_STRICT(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_STRICT)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_STRICT(s) }
}

%op Strategy Is_SUPER() {
  make() { `When_SUPER(Identity()) }
}

%op Strategy _SUPER() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._SUPER)}

  make() { new tom.library.adt.bytecode.strategy.taccess._SUPER() }
}

%op Strategy Make_SUPER() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_SUPER)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_SUPER() }
}

%op Strategy When_SUPER(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_SUPER)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_SUPER(s) }
}

%op Strategy Is_SYNCHRONIZED() {
  make() { `When_SYNCHRONIZED(Identity()) }
}

%op Strategy _SYNCHRONIZED() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._SYNCHRONIZED)}

  make() { new tom.library.adt.bytecode.strategy.taccess._SYNCHRONIZED() }
}

%op Strategy Make_SYNCHRONIZED() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_SYNCHRONIZED)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_SYNCHRONIZED() }
}

%op Strategy When_SYNCHRONIZED(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_SYNCHRONIZED)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_SYNCHRONIZED(s) }
}

%op Strategy Is_SYNTHETIC() {
  make() { `When_SYNTHETIC(Identity()) }
}

%op Strategy _SYNTHETIC() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._SYNTHETIC)}

  make() { new tom.library.adt.bytecode.strategy.taccess._SYNTHETIC() }
}

%op Strategy Make_SYNTHETIC() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_SYNTHETIC)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_SYNTHETIC() }
}

%op Strategy When_SYNTHETIC(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_SYNTHETIC)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_SYNTHETIC(s) }
}

%op Strategy Is_TRANSIENT() {
  make() { `When_TRANSIENT(Identity()) }
}

%op Strategy _TRANSIENT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._TRANSIENT)}

  make() { new tom.library.adt.bytecode.strategy.taccess._TRANSIENT() }
}

%op Strategy Make_TRANSIENT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_TRANSIENT)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_TRANSIENT() }
}

%op Strategy When_TRANSIENT(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_TRANSIENT)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_TRANSIENT(s) }
}

%op Strategy Is_VARARGS() {
  make() { `When_VARARGS(Identity()) }
}

%op Strategy _VARARGS() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._VARARGS)}

  make() { new tom.library.adt.bytecode.strategy.taccess._VARARGS() }
}

%op Strategy Make_VARARGS() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_VARARGS)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_VARARGS() }
}

%op Strategy When_VARARGS(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_VARARGS)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_VARARGS(s) }
}

%op Strategy Is_VOLATILE() {
  make() { `When_VOLATILE(Identity()) }
}

%op Strategy _VOLATILE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess._VOLATILE)}

  make() { new tom.library.adt.bytecode.strategy.taccess._VOLATILE() }
}

%op Strategy Make_VOLATILE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.Make_VOLATILE)}

  make() { new tom.library.adt.bytecode.strategy.taccess.Make_VOLATILE() }
}

%op Strategy When_VOLATILE(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccess.When_VOLATILE)}
  make(s) { new tom.library.adt.bytecode.strategy.taccess.When_VOLATILE(s) }
}

%op Strategy Is_ReturnDescriptor() {
  make() { `When_ReturnDescriptor(Identity()) }
}

%op Strategy _ReturnDescriptor(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.treturndescriptor._ReturnDescriptor)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.treturndescriptor._ReturnDescriptor(arg0) }
}

%op Strategy Make_ReturnDescriptor(_type:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.treturndescriptor.Make_ReturnDescriptor)}

  get_slot(_type, t) { _type }
  make( new_type) { new tom.library.adt.bytecode.strategy.treturndescriptor.Make_ReturnDescriptor( new_type) }
}

%op Strategy When_ReturnDescriptor(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.treturndescriptor.When_ReturnDescriptor)}
  make(s) { new tom.library.adt.bytecode.strategy.treturndescriptor.When_ReturnDescriptor(s) }
}

%op Strategy Is_Void() {
  make() { `When_Void(Identity()) }
}

%op Strategy _Void() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.treturndescriptor._Void)}

  make() { new tom.library.adt.bytecode.strategy.treturndescriptor._Void() }
}

%op Strategy Make_Void() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.treturndescriptor.Make_Void)}

  make() { new tom.library.adt.bytecode.strategy.treturndescriptor.Make_Void() }
}

%op Strategy When_Void(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.treturndescriptor.When_Void)}
  make(s) { new tom.library.adt.bytecode.strategy.treturndescriptor.When_Void(s) }
}

%op Strategy Is_EmptyStringList() {
  make() { `When_EmptyStringList(Identity()) }
}

%op Strategy _EmptyStringList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tstringlist._EmptyStringList)}

  make() { new tom.library.adt.bytecode.strategy.tstringlist._EmptyStringList() }
}

%op Strategy Make_EmptyStringList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tstringlist.Make_EmptyStringList)}

  make() { new tom.library.adt.bytecode.strategy.tstringlist.Make_EmptyStringList() }
}

%op Strategy When_EmptyStringList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tstringlist.When_EmptyStringList)}
  make(s) { new tom.library.adt.bytecode.strategy.tstringlist.When_EmptyStringList(s) }
}

%op Strategy Is_ConsStringList() {
  make() { `When_ConsStringList(Identity()) }
}

%op Strategy _ConsStringList(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tstringlist._ConsStringList)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tstringlist._ConsStringList(arg0, arg1) }
}

%op Strategy Make_ConsStringList(_HeadStringList:String, _TailStringList:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tstringlist.Make_ConsStringList)}

  get_slot(_HeadStringList, t) { _HeadStringList }
  get_slot(_TailStringList, t) { _TailStringList }
  make( _HeadStringList,  new_TailStringList) { new tom.library.adt.bytecode.strategy.tstringlist.Make_ConsStringList( _HeadStringList,  new_TailStringList) }
}

%op Strategy When_ConsStringList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tstringlist.When_ConsStringList)}
  make(s) { new tom.library.adt.bytecode.strategy.tstringlist.When_ConsStringList(s) }
}

%op Strategy Is_Method() {
  make() { `When_Method(Identity()) }
}

%op Strategy _Method(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethod._Method)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tmethod._Method(arg0, arg1) }
}

%op Strategy Make_Method(_info:Strategy, _code:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethod.Make_Method)}

  get_slot(_info, t) { _info }
  get_slot(_code, t) { _code }
  make( new_info,  new_code) { new tom.library.adt.bytecode.strategy.tmethod.Make_Method( new_info,  new_code) }
}

%op Strategy When_Method(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethod.When_Method)}
  make(s) { new tom.library.adt.bytecode.strategy.tmethod.When_Method(s) }
}

%op Strategy Is_EmptyLabelList() {
  make() { `When_EmptyLabelList(Identity()) }
}

%op Strategy _EmptyLabelList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlabellist._EmptyLabelList)}

  make() { new tom.library.adt.bytecode.strategy.tlabellist._EmptyLabelList() }
}

%op Strategy Make_EmptyLabelList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlabellist.Make_EmptyLabelList)}

  make() { new tom.library.adt.bytecode.strategy.tlabellist.Make_EmptyLabelList() }
}

%op Strategy When_EmptyLabelList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlabellist.When_EmptyLabelList)}
  make(s) { new tom.library.adt.bytecode.strategy.tlabellist.When_EmptyLabelList(s) }
}

%op Strategy Is_ConsLabelList() {
  make() { `When_ConsLabelList(Identity()) }
}

%op Strategy _ConsLabelList(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlabellist._ConsLabelList)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tlabellist._ConsLabelList(arg0, arg1) }
}

%op Strategy Make_ConsLabelList(_HeadLabelList:Strategy, _TailLabelList:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlabellist.Make_ConsLabelList)}

  get_slot(_HeadLabelList, t) { _HeadLabelList }
  get_slot(_TailLabelList, t) { _TailLabelList }
  make( new_HeadLabelList,  new_TailLabelList) { new tom.library.adt.bytecode.strategy.tlabellist.Make_ConsLabelList( new_HeadLabelList,  new_TailLabelList) }
}

%op Strategy When_ConsLabelList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlabellist.When_ConsLabelList)}
  make(s) { new tom.library.adt.bytecode.strategy.tlabellist.When_ConsLabelList(s) }
}

%op Strategy Is_Anchor() {
  make() { `When_Anchor(Identity()) }
}

%op Strategy _Anchor(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Anchor)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Anchor(arg0) }
}

%op Strategy Make_Anchor(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Anchor)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Anchor( new_label) }
}

%op Strategy When_Anchor(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Anchor)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Anchor(s) }
}

%op Strategy Is_Nop() {
  make() { `When_Nop(Identity()) }
}

%op Strategy _Nop() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Nop)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Nop() }
}

%op Strategy Make_Nop() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Nop)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Nop() }
}

%op Strategy When_Nop(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Nop)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Nop(s) }
}

%op Strategy Is_Aconst_null() {
  make() { `When_Aconst_null(Identity()) }
}

%op Strategy _Aconst_null() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Aconst_null)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Aconst_null() }
}

%op Strategy Make_Aconst_null() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Aconst_null)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Aconst_null() }
}

%op Strategy When_Aconst_null(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Aconst_null)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Aconst_null(s) }
}

%op Strategy Is_Iconst_m1() {
  make() { `When_Iconst_m1(Identity()) }
}

%op Strategy _Iconst_m1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iconst_m1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iconst_m1() }
}

%op Strategy Make_Iconst_m1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_m1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_m1() }
}

%op Strategy When_Iconst_m1(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_m1)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_m1(s) }
}

%op Strategy Is_Iconst_0() {
  make() { `When_Iconst_0(Identity()) }
}

%op Strategy _Iconst_0() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iconst_0)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iconst_0() }
}

%op Strategy Make_Iconst_0() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_0)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_0() }
}

%op Strategy When_Iconst_0(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_0)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_0(s) }
}

%op Strategy Is_Iconst_1() {
  make() { `When_Iconst_1(Identity()) }
}

%op Strategy _Iconst_1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iconst_1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iconst_1() }
}

%op Strategy Make_Iconst_1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_1() }
}

%op Strategy When_Iconst_1(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_1)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_1(s) }
}

%op Strategy Is_Iconst_2() {
  make() { `When_Iconst_2(Identity()) }
}

%op Strategy _Iconst_2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iconst_2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iconst_2() }
}

%op Strategy Make_Iconst_2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_2() }
}

%op Strategy When_Iconst_2(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_2)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_2(s) }
}

%op Strategy Is_Iconst_3() {
  make() { `When_Iconst_3(Identity()) }
}

%op Strategy _Iconst_3() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iconst_3)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iconst_3() }
}

%op Strategy Make_Iconst_3() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_3)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_3() }
}

%op Strategy When_Iconst_3(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_3)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_3(s) }
}

%op Strategy Is_Iconst_4() {
  make() { `When_Iconst_4(Identity()) }
}

%op Strategy _Iconst_4() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iconst_4)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iconst_4() }
}

%op Strategy Make_Iconst_4() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_4)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_4() }
}

%op Strategy When_Iconst_4(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_4)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_4(s) }
}

%op Strategy Is_Iconst_5() {
  make() { `When_Iconst_5(Identity()) }
}

%op Strategy _Iconst_5() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iconst_5)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iconst_5() }
}

%op Strategy Make_Iconst_5() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_5)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iconst_5() }
}

%op Strategy When_Iconst_5(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_5)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iconst_5(s) }
}

%op Strategy Is_Lconst_0() {
  make() { `When_Lconst_0(Identity()) }
}

%op Strategy _Lconst_0() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lconst_0)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lconst_0() }
}

%op Strategy Make_Lconst_0() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lconst_0)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lconst_0() }
}

%op Strategy When_Lconst_0(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lconst_0)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lconst_0(s) }
}

%op Strategy Is_Lconst_1() {
  make() { `When_Lconst_1(Identity()) }
}

%op Strategy _Lconst_1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lconst_1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lconst_1() }
}

%op Strategy Make_Lconst_1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lconst_1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lconst_1() }
}

%op Strategy When_Lconst_1(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lconst_1)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lconst_1(s) }
}

%op Strategy Is_Fconst_0() {
  make() { `When_Fconst_0(Identity()) }
}

%op Strategy _Fconst_0() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fconst_0)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Fconst_0() }
}

%op Strategy Make_Fconst_0() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fconst_0)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fconst_0() }
}

%op Strategy When_Fconst_0(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fconst_0)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fconst_0(s) }
}

%op Strategy Is_Fconst_1() {
  make() { `When_Fconst_1(Identity()) }
}

%op Strategy _Fconst_1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fconst_1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Fconst_1() }
}

%op Strategy Make_Fconst_1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fconst_1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fconst_1() }
}

%op Strategy When_Fconst_1(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fconst_1)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fconst_1(s) }
}

%op Strategy Is_Fconst_2() {
  make() { `When_Fconst_2(Identity()) }
}

%op Strategy _Fconst_2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fconst_2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Fconst_2() }
}

%op Strategy Make_Fconst_2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fconst_2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fconst_2() }
}

%op Strategy When_Fconst_2(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fconst_2)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fconst_2(s) }
}

%op Strategy Is_Dconst_0() {
  make() { `When_Dconst_0(Identity()) }
}

%op Strategy _Dconst_0() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dconst_0)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dconst_0() }
}

%op Strategy Make_Dconst_0() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dconst_0)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dconst_0() }
}

%op Strategy When_Dconst_0(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dconst_0)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dconst_0(s) }
}

%op Strategy Is_Dconst_1() {
  make() { `When_Dconst_1(Identity()) }
}

%op Strategy _Dconst_1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dconst_1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dconst_1() }
}

%op Strategy Make_Dconst_1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dconst_1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dconst_1() }
}

%op Strategy When_Dconst_1(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dconst_1)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dconst_1(s) }
}

%op Strategy Is_Bipush() {
  make() { `When_Bipush(Identity()) }
}

%op Strategy _Bipush(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Bipush)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Bipush(arg0) }
}

%op Strategy Make_Bipush(_operand:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Bipush)}

  get_slot(_operand, t) { _operand }
  make( _operand) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Bipush( _operand) }
}

%op Strategy When_Bipush(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Bipush)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Bipush(s) }
}

%op Strategy Is_Sipush() {
  make() { `When_Sipush(Identity()) }
}

%op Strategy _Sipush(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Sipush)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Sipush(arg0) }
}

%op Strategy Make_Sipush(_operand:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Sipush)}

  get_slot(_operand, t) { _operand }
  make( _operand) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Sipush( _operand) }
}

%op Strategy When_Sipush(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Sipush)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Sipush(s) }
}

%op Strategy Is_Ldc() {
  make() { `When_Ldc(Identity()) }
}

%op Strategy _Ldc(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ldc)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Ldc(arg0) }
}

%op Strategy Make_Ldc(_cst:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ldc)}

  get_slot(_cst, t) { _cst }
  make( new_cst) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ldc( new_cst) }
}

%op Strategy When_Ldc(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ldc)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ldc(s) }
}

%op Strategy Is_Iload() {
  make() { `When_Iload(Identity()) }
}

%op Strategy _Iload(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iload)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Iload(arg0) }
}

%op Strategy Make_Iload(_var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iload)}

  get_slot(_var, t) { _var }
  make( _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iload( _var) }
}

%op Strategy When_Iload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iload(s) }
}

%op Strategy Is_Lload() {
  make() { `When_Lload(Identity()) }
}

%op Strategy _Lload(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lload)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Lload(arg0) }
}

%op Strategy Make_Lload(_var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lload)}

  get_slot(_var, t) { _var }
  make( _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lload( _var) }
}

%op Strategy When_Lload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lload(s) }
}

%op Strategy Is_Fload() {
  make() { `When_Fload(Identity()) }
}

%op Strategy _Fload(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fload)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Fload(arg0) }
}

%op Strategy Make_Fload(_var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fload)}

  get_slot(_var, t) { _var }
  make( _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fload( _var) }
}

%op Strategy When_Fload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fload(s) }
}

%op Strategy Is_Dload() {
  make() { `When_Dload(Identity()) }
}

%op Strategy _Dload(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dload)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Dload(arg0) }
}

%op Strategy Make_Dload(_var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dload)}

  get_slot(_var, t) { _var }
  make( _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dload( _var) }
}

%op Strategy When_Dload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dload(s) }
}

%op Strategy Is_Aload() {
  make() { `When_Aload(Identity()) }
}

%op Strategy _Aload(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Aload)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Aload(arg0) }
}

%op Strategy Make_Aload(_var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Aload)}

  get_slot(_var, t) { _var }
  make( _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Aload( _var) }
}

%op Strategy When_Aload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Aload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Aload(s) }
}

%op Strategy Is_Iaload() {
  make() { `When_Iaload(Identity()) }
}

%op Strategy _Iaload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iaload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iaload() }
}

%op Strategy Make_Iaload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iaload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iaload() }
}

%op Strategy When_Iaload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iaload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iaload(s) }
}

%op Strategy Is_Laload() {
  make() { `When_Laload(Identity()) }
}

%op Strategy _Laload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Laload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Laload() }
}

%op Strategy Make_Laload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Laload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Laload() }
}

%op Strategy When_Laload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Laload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Laload(s) }
}

%op Strategy Is_Faload() {
  make() { `When_Faload(Identity()) }
}

%op Strategy _Faload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Faload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Faload() }
}

%op Strategy Make_Faload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Faload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Faload() }
}

%op Strategy When_Faload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Faload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Faload(s) }
}

%op Strategy Is_Daload() {
  make() { `When_Daload(Identity()) }
}

%op Strategy _Daload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Daload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Daload() }
}

%op Strategy Make_Daload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Daload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Daload() }
}

%op Strategy When_Daload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Daload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Daload(s) }
}

%op Strategy Is_Aaload() {
  make() { `When_Aaload(Identity()) }
}

%op Strategy _Aaload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Aaload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Aaload() }
}

%op Strategy Make_Aaload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Aaload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Aaload() }
}

%op Strategy When_Aaload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Aaload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Aaload(s) }
}

%op Strategy Is_Baload() {
  make() { `When_Baload(Identity()) }
}

%op Strategy _Baload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Baload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Baload() }
}

%op Strategy Make_Baload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Baload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Baload() }
}

%op Strategy When_Baload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Baload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Baload(s) }
}

%op Strategy Is_Caload() {
  make() { `When_Caload(Identity()) }
}

%op Strategy _Caload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Caload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Caload() }
}

%op Strategy Make_Caload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Caload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Caload() }
}

%op Strategy When_Caload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Caload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Caload(s) }
}

%op Strategy Is_Saload() {
  make() { `When_Saload(Identity()) }
}

%op Strategy _Saload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Saload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Saload() }
}

%op Strategy Make_Saload() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Saload)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Saload() }
}

%op Strategy When_Saload(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Saload)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Saload(s) }
}

%op Strategy Is_Istore() {
  make() { `When_Istore(Identity()) }
}

%op Strategy _Istore(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Istore)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Istore(arg0) }
}

%op Strategy Make_Istore(_var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Istore)}

  get_slot(_var, t) { _var }
  make( _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Istore( _var) }
}

%op Strategy When_Istore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Istore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Istore(s) }
}

%op Strategy Is_Lstore() {
  make() { `When_Lstore(Identity()) }
}

%op Strategy _Lstore(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lstore)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Lstore(arg0) }
}

%op Strategy Make_Lstore(_var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lstore)}

  get_slot(_var, t) { _var }
  make( _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lstore( _var) }
}

%op Strategy When_Lstore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lstore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lstore(s) }
}

%op Strategy Is_Fstore() {
  make() { `When_Fstore(Identity()) }
}

%op Strategy _Fstore(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fstore)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Fstore(arg0) }
}

%op Strategy Make_Fstore(_var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fstore)}

  get_slot(_var, t) { _var }
  make( _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fstore( _var) }
}

%op Strategy When_Fstore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fstore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fstore(s) }
}

%op Strategy Is_Dstore() {
  make() { `When_Dstore(Identity()) }
}

%op Strategy _Dstore(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dstore)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Dstore(arg0) }
}

%op Strategy Make_Dstore(_var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dstore)}

  get_slot(_var, t) { _var }
  make( _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dstore( _var) }
}

%op Strategy When_Dstore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dstore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dstore(s) }
}

%op Strategy Is_Astore() {
  make() { `When_Astore(Identity()) }
}

%op Strategy _Astore(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Astore)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Astore(arg0) }
}

%op Strategy Make_Astore(_var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Astore)}

  get_slot(_var, t) { _var }
  make( _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Astore( _var) }
}

%op Strategy When_Astore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Astore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Astore(s) }
}

%op Strategy Is_Iastore() {
  make() { `When_Iastore(Identity()) }
}

%op Strategy _Iastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iastore() }
}

%op Strategy Make_Iastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iastore() }
}

%op Strategy When_Iastore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iastore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iastore(s) }
}

%op Strategy Is_Lastore() {
  make() { `When_Lastore(Identity()) }
}

%op Strategy _Lastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lastore() }
}

%op Strategy Make_Lastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lastore() }
}

%op Strategy When_Lastore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lastore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lastore(s) }
}

%op Strategy Is_Fastore() {
  make() { `When_Fastore(Identity()) }
}

%op Strategy _Fastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Fastore() }
}

%op Strategy Make_Fastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fastore() }
}

%op Strategy When_Fastore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fastore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fastore(s) }
}

%op Strategy Is_Dastore() {
  make() { `When_Dastore(Identity()) }
}

%op Strategy _Dastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dastore() }
}

%op Strategy Make_Dastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dastore() }
}

%op Strategy When_Dastore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dastore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dastore(s) }
}

%op Strategy Is_Aastore() {
  make() { `When_Aastore(Identity()) }
}

%op Strategy _Aastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Aastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Aastore() }
}

%op Strategy Make_Aastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Aastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Aastore() }
}

%op Strategy When_Aastore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Aastore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Aastore(s) }
}

%op Strategy Is_Bastore() {
  make() { `When_Bastore(Identity()) }
}

%op Strategy _Bastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Bastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Bastore() }
}

%op Strategy Make_Bastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Bastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Bastore() }
}

%op Strategy When_Bastore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Bastore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Bastore(s) }
}

%op Strategy Is_Castore() {
  make() { `When_Castore(Identity()) }
}

%op Strategy _Castore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Castore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Castore() }
}

%op Strategy Make_Castore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Castore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Castore() }
}

%op Strategy When_Castore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Castore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Castore(s) }
}

%op Strategy Is_Sastore() {
  make() { `When_Sastore(Identity()) }
}

%op Strategy _Sastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Sastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Sastore() }
}

%op Strategy Make_Sastore() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Sastore)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Sastore() }
}

%op Strategy When_Sastore(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Sastore)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Sastore(s) }
}

%op Strategy Is_Pop() {
  make() { `When_Pop(Identity()) }
}

%op Strategy _Pop() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Pop)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Pop() }
}

%op Strategy Make_Pop() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Pop)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Pop() }
}

%op Strategy When_Pop(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Pop)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Pop(s) }
}

%op Strategy Is_Pop2() {
  make() { `When_Pop2(Identity()) }
}

%op Strategy _Pop2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Pop2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Pop2() }
}

%op Strategy Make_Pop2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Pop2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Pop2() }
}

%op Strategy When_Pop2(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Pop2)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Pop2(s) }
}

%op Strategy Is_Dup() {
  make() { `When_Dup(Identity()) }
}

%op Strategy _Dup() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dup)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dup() }
}

%op Strategy Make_Dup() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dup)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dup() }
}

%op Strategy When_Dup(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dup)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dup(s) }
}

%op Strategy Is_Dup_x1() {
  make() { `When_Dup_x1(Identity()) }
}

%op Strategy _Dup_x1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dup_x1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dup_x1() }
}

%op Strategy Make_Dup_x1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dup_x1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dup_x1() }
}

%op Strategy When_Dup_x1(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dup_x1)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dup_x1(s) }
}

%op Strategy Is_Dup_x2() {
  make() { `When_Dup_x2(Identity()) }
}

%op Strategy _Dup_x2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dup_x2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dup_x2() }
}

%op Strategy Make_Dup_x2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dup_x2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dup_x2() }
}

%op Strategy When_Dup_x2(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dup_x2)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dup_x2(s) }
}

%op Strategy Is_Dup2() {
  make() { `When_Dup2(Identity()) }
}

%op Strategy _Dup2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dup2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dup2() }
}

%op Strategy Make_Dup2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dup2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dup2() }
}

%op Strategy When_Dup2(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dup2)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dup2(s) }
}

%op Strategy Is_Dup2_x1() {
  make() { `When_Dup2_x1(Identity()) }
}

%op Strategy _Dup2_x1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dup2_x1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dup2_x1() }
}

%op Strategy Make_Dup2_x1() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dup2_x1)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dup2_x1() }
}

%op Strategy When_Dup2_x1(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dup2_x1)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dup2_x1(s) }
}

%op Strategy Is_Dup2_x2() {
  make() { `When_Dup2_x2(Identity()) }
}

%op Strategy _Dup2_x2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dup2_x2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dup2_x2() }
}

%op Strategy Make_Dup2_x2() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dup2_x2)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dup2_x2() }
}

%op Strategy When_Dup2_x2(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dup2_x2)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dup2_x2(s) }
}

%op Strategy Is_Swap() {
  make() { `When_Swap(Identity()) }
}

%op Strategy _Swap() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Swap)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Swap() }
}

%op Strategy Make_Swap() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Swap)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Swap() }
}

%op Strategy When_Swap(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Swap)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Swap(s) }
}

%op Strategy Is_Iadd() {
  make() { `When_Iadd(Identity()) }
}

%op Strategy _Iadd() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iadd)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iadd() }
}

%op Strategy Make_Iadd() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iadd)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iadd() }
}

%op Strategy When_Iadd(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iadd)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iadd(s) }
}

%op Strategy Is_Ladd() {
  make() { `When_Ladd(Identity()) }
}

%op Strategy _Ladd() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ladd)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Ladd() }
}

%op Strategy Make_Ladd() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ladd)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ladd() }
}

%op Strategy When_Ladd(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ladd)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ladd(s) }
}

%op Strategy Is_Fadd() {
  make() { `When_Fadd(Identity()) }
}

%op Strategy _Fadd() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fadd)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Fadd() }
}

%op Strategy Make_Fadd() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fadd)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fadd() }
}

%op Strategy When_Fadd(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fadd)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fadd(s) }
}

%op Strategy Is_Dadd() {
  make() { `When_Dadd(Identity()) }
}

%op Strategy _Dadd() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dadd)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dadd() }
}

%op Strategy Make_Dadd() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dadd)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dadd() }
}

%op Strategy When_Dadd(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dadd)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dadd(s) }
}

%op Strategy Is_Isub() {
  make() { `When_Isub(Identity()) }
}

%op Strategy _Isub() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Isub)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Isub() }
}

%op Strategy Make_Isub() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Isub)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Isub() }
}

%op Strategy When_Isub(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Isub)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Isub(s) }
}

%op Strategy Is_Lsub() {
  make() { `When_Lsub(Identity()) }
}

%op Strategy _Lsub() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lsub)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lsub() }
}

%op Strategy Make_Lsub() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lsub)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lsub() }
}

%op Strategy When_Lsub(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lsub)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lsub(s) }
}

%op Strategy Is_Fsub() {
  make() { `When_Fsub(Identity()) }
}

%op Strategy _Fsub() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fsub)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Fsub() }
}

%op Strategy Make_Fsub() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fsub)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fsub() }
}

%op Strategy When_Fsub(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fsub)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fsub(s) }
}

%op Strategy Is_Dsub() {
  make() { `When_Dsub(Identity()) }
}

%op Strategy _Dsub() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dsub)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dsub() }
}

%op Strategy Make_Dsub() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dsub)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dsub() }
}

%op Strategy When_Dsub(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dsub)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dsub(s) }
}

%op Strategy Is_Imul() {
  make() { `When_Imul(Identity()) }
}

%op Strategy _Imul() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Imul)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Imul() }
}

%op Strategy Make_Imul() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Imul)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Imul() }
}

%op Strategy When_Imul(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Imul)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Imul(s) }
}

%op Strategy Is_Lmul() {
  make() { `When_Lmul(Identity()) }
}

%op Strategy _Lmul() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lmul)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lmul() }
}

%op Strategy Make_Lmul() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lmul)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lmul() }
}

%op Strategy When_Lmul(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lmul)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lmul(s) }
}

%op Strategy Is_Fmul() {
  make() { `When_Fmul(Identity()) }
}

%op Strategy _Fmul() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fmul)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Fmul() }
}

%op Strategy Make_Fmul() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fmul)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fmul() }
}

%op Strategy When_Fmul(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fmul)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fmul(s) }
}

%op Strategy Is_Dmul() {
  make() { `When_Dmul(Identity()) }
}

%op Strategy _Dmul() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dmul)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dmul() }
}

%op Strategy Make_Dmul() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dmul)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dmul() }
}

%op Strategy When_Dmul(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dmul)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dmul(s) }
}

%op Strategy Is_Idiv() {
  make() { `When_Idiv(Identity()) }
}

%op Strategy _Idiv() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Idiv)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Idiv() }
}

%op Strategy Make_Idiv() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Idiv)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Idiv() }
}

%op Strategy When_Idiv(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Idiv)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Idiv(s) }
}

%op Strategy Is_Ldiv() {
  make() { `When_Ldiv(Identity()) }
}

%op Strategy _Ldiv() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ldiv)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Ldiv() }
}

%op Strategy Make_Ldiv() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ldiv)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ldiv() }
}

%op Strategy When_Ldiv(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ldiv)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ldiv(s) }
}

%op Strategy Is_Fdiv() {
  make() { `When_Fdiv(Identity()) }
}

%op Strategy _Fdiv() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fdiv)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Fdiv() }
}

%op Strategy Make_Fdiv() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fdiv)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fdiv() }
}

%op Strategy When_Fdiv(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fdiv)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fdiv(s) }
}

%op Strategy Is_Ddiv() {
  make() { `When_Ddiv(Identity()) }
}

%op Strategy _Ddiv() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ddiv)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Ddiv() }
}

%op Strategy Make_Ddiv() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ddiv)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ddiv() }
}

%op Strategy When_Ddiv(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ddiv)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ddiv(s) }
}

%op Strategy Is_Irem() {
  make() { `When_Irem(Identity()) }
}

%op Strategy _Irem() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Irem)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Irem() }
}

%op Strategy Make_Irem() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Irem)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Irem() }
}

%op Strategy When_Irem(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Irem)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Irem(s) }
}

%op Strategy Is_Lrem() {
  make() { `When_Lrem(Identity()) }
}

%op Strategy _Lrem() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lrem)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lrem() }
}

%op Strategy Make_Lrem() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lrem)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lrem() }
}

%op Strategy When_Lrem(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lrem)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lrem(s) }
}

%op Strategy Is_Frem() {
  make() { `When_Frem(Identity()) }
}

%op Strategy _Frem() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Frem)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Frem() }
}

%op Strategy Make_Frem() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Frem)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Frem() }
}

%op Strategy When_Frem(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Frem)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Frem(s) }
}

%op Strategy Is_Drem() {
  make() { `When_Drem(Identity()) }
}

%op Strategy _Drem() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Drem)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Drem() }
}

%op Strategy Make_Drem() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Drem)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Drem() }
}

%op Strategy When_Drem(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Drem)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Drem(s) }
}

%op Strategy Is_Ineg() {
  make() { `When_Ineg(Identity()) }
}

%op Strategy _Ineg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ineg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Ineg() }
}

%op Strategy Make_Ineg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ineg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ineg() }
}

%op Strategy When_Ineg(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ineg)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ineg(s) }
}

%op Strategy Is_Lneg() {
  make() { `When_Lneg(Identity()) }
}

%op Strategy _Lneg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lneg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lneg() }
}

%op Strategy Make_Lneg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lneg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lneg() }
}

%op Strategy When_Lneg(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lneg)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lneg(s) }
}

%op Strategy Is_Fneg() {
  make() { `When_Fneg(Identity()) }
}

%op Strategy _Fneg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fneg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Fneg() }
}

%op Strategy Make_Fneg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fneg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fneg() }
}

%op Strategy When_Fneg(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fneg)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fneg(s) }
}

%op Strategy Is_Dneg() {
  make() { `When_Dneg(Identity()) }
}

%op Strategy _Dneg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dneg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dneg() }
}

%op Strategy Make_Dneg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dneg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dneg() }
}

%op Strategy When_Dneg(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dneg)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dneg(s) }
}

%op Strategy Is_Ishl() {
  make() { `When_Ishl(Identity()) }
}

%op Strategy _Ishl() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ishl)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Ishl() }
}

%op Strategy Make_Ishl() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ishl)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ishl() }
}

%op Strategy When_Ishl(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ishl)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ishl(s) }
}

%op Strategy Is_Lshl() {
  make() { `When_Lshl(Identity()) }
}

%op Strategy _Lshl() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lshl)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lshl() }
}

%op Strategy Make_Lshl() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lshl)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lshl() }
}

%op Strategy When_Lshl(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lshl)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lshl(s) }
}

%op Strategy Is_Ishr() {
  make() { `When_Ishr(Identity()) }
}

%op Strategy _Ishr() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ishr)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Ishr() }
}

%op Strategy Make_Ishr() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ishr)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ishr() }
}

%op Strategy When_Ishr(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ishr)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ishr(s) }
}

%op Strategy Is_Lshr() {
  make() { `When_Lshr(Identity()) }
}

%op Strategy _Lshr() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lshr)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lshr() }
}

%op Strategy Make_Lshr() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lshr)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lshr() }
}

%op Strategy When_Lshr(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lshr)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lshr(s) }
}

%op Strategy Is_Iushr() {
  make() { `When_Iushr(Identity()) }
}

%op Strategy _Iushr() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iushr)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iushr() }
}

%op Strategy Make_Iushr() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iushr)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iushr() }
}

%op Strategy When_Iushr(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iushr)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iushr(s) }
}

%op Strategy Is_Lushr() {
  make() { `When_Lushr(Identity()) }
}

%op Strategy _Lushr() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lushr)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lushr() }
}

%op Strategy Make_Lushr() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lushr)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lushr() }
}

%op Strategy When_Lushr(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lushr)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lushr(s) }
}

%op Strategy Is_Iand() {
  make() { `When_Iand(Identity()) }
}

%op Strategy _Iand() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iand)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Iand() }
}

%op Strategy Make_Iand() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iand)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iand() }
}

%op Strategy When_Iand(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iand)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iand(s) }
}

%op Strategy Is_Land() {
  make() { `When_Land(Identity()) }
}

%op Strategy _Land() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Land)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Land() }
}

%op Strategy Make_Land() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Land)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Land() }
}

%op Strategy When_Land(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Land)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Land(s) }
}

%op Strategy Is_Ior() {
  make() { `When_Ior(Identity()) }
}

%op Strategy _Ior() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ior)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Ior() }
}

%op Strategy Make_Ior() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ior)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ior() }
}

%op Strategy When_Ior(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ior)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ior(s) }
}

%op Strategy Is_Lor() {
  make() { `When_Lor(Identity()) }
}

%op Strategy _Lor() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lor)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lor() }
}

%op Strategy Make_Lor() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lor)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lor() }
}

%op Strategy When_Lor(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lor)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lor(s) }
}

%op Strategy Is_Ixor() {
  make() { `When_Ixor(Identity()) }
}

%op Strategy _Ixor() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ixor)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Ixor() }
}

%op Strategy Make_Ixor() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ixor)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ixor() }
}

%op Strategy When_Ixor(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ixor)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ixor(s) }
}

%op Strategy Is_Lxor() {
  make() { `When_Lxor(Identity()) }
}

%op Strategy _Lxor() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lxor)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lxor() }
}

%op Strategy Make_Lxor() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lxor)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lxor() }
}

%op Strategy When_Lxor(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lxor)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lxor(s) }
}

%op Strategy Is_Iinc() {
  make() { `When_Iinc(Identity()) }
}

%op Strategy _Iinc(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iinc)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tinstruction._Iinc(arg0, arg1) }
}

%op Strategy Make_Iinc(_incr:int, _var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iinc)}

  get_slot(_incr, t) { _incr }
  get_slot(_var, t) { _var }
  make( _incr,  _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iinc( _incr,  _var) }
}

%op Strategy When_Iinc(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iinc)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iinc(s) }
}

%op Strategy Is_I2l() {
  make() { `When_I2l(Identity()) }
}

%op Strategy _I2l() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._I2l)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._I2l() }
}

%op Strategy Make_I2l() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_I2l)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_I2l() }
}

%op Strategy When_I2l(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_I2l)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_I2l(s) }
}

%op Strategy Is_I2f() {
  make() { `When_I2f(Identity()) }
}

%op Strategy _I2f() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._I2f)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._I2f() }
}

%op Strategy Make_I2f() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_I2f)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_I2f() }
}

%op Strategy When_I2f(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_I2f)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_I2f(s) }
}

%op Strategy Is_I2d() {
  make() { `When_I2d(Identity()) }
}

%op Strategy _I2d() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._I2d)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._I2d() }
}

%op Strategy Make_I2d() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_I2d)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_I2d() }
}

%op Strategy When_I2d(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_I2d)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_I2d(s) }
}

%op Strategy Is_L2i() {
  make() { `When_L2i(Identity()) }
}

%op Strategy _L2i() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._L2i)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._L2i() }
}

%op Strategy Make_L2i() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_L2i)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_L2i() }
}

%op Strategy When_L2i(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_L2i)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_L2i(s) }
}

%op Strategy Is_L2f() {
  make() { `When_L2f(Identity()) }
}

%op Strategy _L2f() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._L2f)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._L2f() }
}

%op Strategy Make_L2f() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_L2f)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_L2f() }
}

%op Strategy When_L2f(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_L2f)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_L2f(s) }
}

%op Strategy Is_L2d() {
  make() { `When_L2d(Identity()) }
}

%op Strategy _L2d() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._L2d)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._L2d() }
}

%op Strategy Make_L2d() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_L2d)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_L2d() }
}

%op Strategy When_L2d(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_L2d)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_L2d(s) }
}

%op Strategy Is_F2i() {
  make() { `When_F2i(Identity()) }
}

%op Strategy _F2i() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._F2i)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._F2i() }
}

%op Strategy Make_F2i() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_F2i)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_F2i() }
}

%op Strategy When_F2i(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_F2i)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_F2i(s) }
}

%op Strategy Is_F2l() {
  make() { `When_F2l(Identity()) }
}

%op Strategy _F2l() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._F2l)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._F2l() }
}

%op Strategy Make_F2l() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_F2l)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_F2l() }
}

%op Strategy When_F2l(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_F2l)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_F2l(s) }
}

%op Strategy Is_F2d() {
  make() { `When_F2d(Identity()) }
}

%op Strategy _F2d() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._F2d)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._F2d() }
}

%op Strategy Make_F2d() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_F2d)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_F2d() }
}

%op Strategy When_F2d(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_F2d)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_F2d(s) }
}

%op Strategy Is_D2i() {
  make() { `When_D2i(Identity()) }
}

%op Strategy _D2i() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._D2i)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._D2i() }
}

%op Strategy Make_D2i() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_D2i)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_D2i() }
}

%op Strategy When_D2i(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_D2i)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_D2i(s) }
}

%op Strategy Is_D2l() {
  make() { `When_D2l(Identity()) }
}

%op Strategy _D2l() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._D2l)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._D2l() }
}

%op Strategy Make_D2l() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_D2l)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_D2l() }
}

%op Strategy When_D2l(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_D2l)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_D2l(s) }
}

%op Strategy Is_D2f() {
  make() { `When_D2f(Identity()) }
}

%op Strategy _D2f() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._D2f)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._D2f() }
}

%op Strategy Make_D2f() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_D2f)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_D2f() }
}

%op Strategy When_D2f(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_D2f)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_D2f(s) }
}

%op Strategy Is_I2b() {
  make() { `When_I2b(Identity()) }
}

%op Strategy _I2b() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._I2b)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._I2b() }
}

%op Strategy Make_I2b() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_I2b)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_I2b() }
}

%op Strategy When_I2b(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_I2b)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_I2b(s) }
}

%op Strategy Is_I2c() {
  make() { `When_I2c(Identity()) }
}

%op Strategy _I2c() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._I2c)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._I2c() }
}

%op Strategy Make_I2c() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_I2c)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_I2c() }
}

%op Strategy When_I2c(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_I2c)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_I2c(s) }
}

%op Strategy Is_I2s() {
  make() { `When_I2s(Identity()) }
}

%op Strategy _I2s() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._I2s)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._I2s() }
}

%op Strategy Make_I2s() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_I2s)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_I2s() }
}

%op Strategy When_I2s(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_I2s)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_I2s(s) }
}

%op Strategy Is_Lcmp() {
  make() { `When_Lcmp(Identity()) }
}

%op Strategy _Lcmp() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lcmp)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lcmp() }
}

%op Strategy Make_Lcmp() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lcmp)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lcmp() }
}

%op Strategy When_Lcmp(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lcmp)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lcmp(s) }
}

%op Strategy Is_Fcmpl() {
  make() { `When_Fcmpl(Identity()) }
}

%op Strategy _Fcmpl() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fcmpl)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Fcmpl() }
}

%op Strategy Make_Fcmpl() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fcmpl)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fcmpl() }
}

%op Strategy When_Fcmpl(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fcmpl)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fcmpl(s) }
}

%op Strategy Is_Fcmpg() {
  make() { `When_Fcmpg(Identity()) }
}

%op Strategy _Fcmpg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Fcmpg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Fcmpg() }
}

%op Strategy Make_Fcmpg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Fcmpg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Fcmpg() }
}

%op Strategy When_Fcmpg(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Fcmpg)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Fcmpg(s) }
}

%op Strategy Is_Dcmpl() {
  make() { `When_Dcmpl(Identity()) }
}

%op Strategy _Dcmpl() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dcmpl)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dcmpl() }
}

%op Strategy Make_Dcmpl() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dcmpl)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dcmpl() }
}

%op Strategy When_Dcmpl(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dcmpl)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dcmpl(s) }
}

%op Strategy Is_Dcmpg() {
  make() { `When_Dcmpg(Identity()) }
}

%op Strategy _Dcmpg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dcmpg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dcmpg() }
}

%op Strategy Make_Dcmpg() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dcmpg)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dcmpg() }
}

%op Strategy When_Dcmpg(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dcmpg)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dcmpg(s) }
}

%op Strategy Is_Ifeq() {
  make() { `When_Ifeq(Identity()) }
}

%op Strategy _Ifeq(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ifeq)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Ifeq(arg0) }
}

%op Strategy Make_Ifeq(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ifeq)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ifeq( new_label) }
}

%op Strategy When_Ifeq(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ifeq)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ifeq(s) }
}

%op Strategy Is_Ifne() {
  make() { `When_Ifne(Identity()) }
}

%op Strategy _Ifne(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ifne)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Ifne(arg0) }
}

%op Strategy Make_Ifne(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ifne)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ifne( new_label) }
}

%op Strategy When_Ifne(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ifne)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ifne(s) }
}

%op Strategy Is_Iflt() {
  make() { `When_Iflt(Identity()) }
}

%op Strategy _Iflt(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Iflt)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Iflt(arg0) }
}

%op Strategy Make_Iflt(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Iflt)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Iflt( new_label) }
}

%op Strategy When_Iflt(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Iflt)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Iflt(s) }
}

%op Strategy Is_Ifge() {
  make() { `When_Ifge(Identity()) }
}

%op Strategy _Ifge(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ifge)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Ifge(arg0) }
}

%op Strategy Make_Ifge(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ifge)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ifge( new_label) }
}

%op Strategy When_Ifge(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ifge)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ifge(s) }
}

%op Strategy Is_Ifgt() {
  make() { `When_Ifgt(Identity()) }
}

%op Strategy _Ifgt(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ifgt)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Ifgt(arg0) }
}

%op Strategy Make_Ifgt(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ifgt)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ifgt( new_label) }
}

%op Strategy When_Ifgt(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ifgt)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ifgt(s) }
}

%op Strategy Is_Ifle() {
  make() { `When_Ifle(Identity()) }
}

%op Strategy _Ifle(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ifle)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Ifle(arg0) }
}

%op Strategy Make_Ifle(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ifle)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ifle( new_label) }
}

%op Strategy When_Ifle(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ifle)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ifle(s) }
}

%op Strategy Is_If_icmpeq() {
  make() { `When_If_icmpeq(Identity()) }
}

%op Strategy _If_icmpeq(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._If_icmpeq)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._If_icmpeq(arg0) }
}

%op Strategy Make_If_icmpeq(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmpeq)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmpeq( new_label) }
}

%op Strategy When_If_icmpeq(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_If_icmpeq)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_If_icmpeq(s) }
}

%op Strategy Is_If_icmpne() {
  make() { `When_If_icmpne(Identity()) }
}

%op Strategy _If_icmpne(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._If_icmpne)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._If_icmpne(arg0) }
}

%op Strategy Make_If_icmpne(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmpne)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmpne( new_label) }
}

%op Strategy When_If_icmpne(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_If_icmpne)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_If_icmpne(s) }
}

%op Strategy Is_If_icmplt() {
  make() { `When_If_icmplt(Identity()) }
}

%op Strategy _If_icmplt(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._If_icmplt)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._If_icmplt(arg0) }
}

%op Strategy Make_If_icmplt(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmplt)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmplt( new_label) }
}

%op Strategy When_If_icmplt(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_If_icmplt)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_If_icmplt(s) }
}

%op Strategy Is_If_icmpge() {
  make() { `When_If_icmpge(Identity()) }
}

%op Strategy _If_icmpge(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._If_icmpge)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._If_icmpge(arg0) }
}

%op Strategy Make_If_icmpge(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmpge)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmpge( new_label) }
}

%op Strategy When_If_icmpge(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_If_icmpge)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_If_icmpge(s) }
}

%op Strategy Is_If_icmpgt() {
  make() { `When_If_icmpgt(Identity()) }
}

%op Strategy _If_icmpgt(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._If_icmpgt)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._If_icmpgt(arg0) }
}

%op Strategy Make_If_icmpgt(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmpgt)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmpgt( new_label) }
}

%op Strategy When_If_icmpgt(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_If_icmpgt)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_If_icmpgt(s) }
}

%op Strategy Is_If_icmple() {
  make() { `When_If_icmple(Identity()) }
}

%op Strategy _If_icmple(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._If_icmple)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._If_icmple(arg0) }
}

%op Strategy Make_If_icmple(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmple)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_If_icmple( new_label) }
}

%op Strategy When_If_icmple(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_If_icmple)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_If_icmple(s) }
}

%op Strategy Is_If_acmpeq() {
  make() { `When_If_acmpeq(Identity()) }
}

%op Strategy _If_acmpeq(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._If_acmpeq)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._If_acmpeq(arg0) }
}

%op Strategy Make_If_acmpeq(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_If_acmpeq)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_If_acmpeq( new_label) }
}

%op Strategy When_If_acmpeq(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_If_acmpeq)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_If_acmpeq(s) }
}

%op Strategy Is_If_acmpne() {
  make() { `When_If_acmpne(Identity()) }
}

%op Strategy _If_acmpne(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._If_acmpne)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._If_acmpne(arg0) }
}

%op Strategy Make_If_acmpne(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_If_acmpne)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_If_acmpne( new_label) }
}

%op Strategy When_If_acmpne(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_If_acmpne)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_If_acmpne(s) }
}

%op Strategy Is_Goto() {
  make() { `When_Goto(Identity()) }
}

%op Strategy _Goto(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Goto)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Goto(arg0) }
}

%op Strategy Make_Goto(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Goto)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Goto( new_label) }
}

%op Strategy When_Goto(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Goto)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Goto(s) }
}

%op Strategy Is_Jsr() {
  make() { `When_Jsr(Identity()) }
}

%op Strategy _Jsr(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Jsr)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Jsr(arg0) }
}

%op Strategy Make_Jsr(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Jsr)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Jsr( new_label) }
}

%op Strategy When_Jsr(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Jsr)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Jsr(s) }
}

%op Strategy Is_Ret() {
  make() { `When_Ret(Identity()) }
}

%op Strategy _Ret(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ret)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Ret(arg0) }
}

%op Strategy Make_Ret(_var:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ret)}

  get_slot(_var, t) { _var }
  make( _var) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ret( _var) }
}

%op Strategy When_Ret(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ret)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ret(s) }
}

%op Strategy Is_Tableswitch() {
  make() { `When_Tableswitch(Identity()) }
}

%op Strategy _Tableswitch(arg0:Strategy, arg1:Strategy, arg2:Strategy, arg3:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Tableswitch)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  get_slot(arg3, t) { t.getArgument(3) }
  make(arg0, arg1, arg2, arg3) { new tom.library.adt.bytecode.strategy.tinstruction._Tableswitch(arg0, arg1, arg2, arg3) }
}

%op Strategy Make_Tableswitch(_min:int, _max:int, _dflt:Strategy, _labels:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Tableswitch)}

  get_slot(_min, t) { _min }
  get_slot(_max, t) { _max }
  get_slot(_dflt, t) { _dflt }
  get_slot(_labels, t) { _labels }
  make( _min,  _max,  new_dflt,  new_labels) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Tableswitch( _min,  _max,  new_dflt,  new_labels) }
}

%op Strategy When_Tableswitch(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Tableswitch)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Tableswitch(s) }
}

%op Strategy Is_Lookupswitch() {
  make() { `When_Lookupswitch(Identity()) }
}

%op Strategy _Lookupswitch(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lookupswitch)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.tinstruction._Lookupswitch(arg0, arg1, arg2) }
}

%op Strategy Make_Lookupswitch(_dflt:Strategy, _keys:Strategy, _labels:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lookupswitch)}

  get_slot(_dflt, t) { _dflt }
  get_slot(_keys, t) { _keys }
  get_slot(_labels, t) { _labels }
  make( new_dflt,  new_keys,  new_labels) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lookupswitch( new_dflt,  new_keys,  new_labels) }
}

%op Strategy When_Lookupswitch(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lookupswitch)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lookupswitch(s) }
}

%op Strategy Is_Ireturn() {
  make() { `When_Ireturn(Identity()) }
}

%op Strategy _Ireturn() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ireturn)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Ireturn() }
}

%op Strategy Make_Ireturn() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ireturn)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ireturn() }
}

%op Strategy When_Ireturn(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ireturn)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ireturn(s) }
}

%op Strategy Is_Lreturn() {
  make() { `When_Lreturn(Identity()) }
}

%op Strategy _Lreturn() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Lreturn)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Lreturn() }
}

%op Strategy Make_Lreturn() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Lreturn)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Lreturn() }
}

%op Strategy When_Lreturn(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Lreturn)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Lreturn(s) }
}

%op Strategy Is_Freturn() {
  make() { `When_Freturn(Identity()) }
}

%op Strategy _Freturn() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Freturn)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Freturn() }
}

%op Strategy Make_Freturn() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Freturn)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Freturn() }
}

%op Strategy When_Freturn(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Freturn)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Freturn(s) }
}

%op Strategy Is_Dreturn() {
  make() { `When_Dreturn(Identity()) }
}

%op Strategy _Dreturn() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Dreturn)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Dreturn() }
}

%op Strategy Make_Dreturn() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Dreturn)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Dreturn() }
}

%op Strategy When_Dreturn(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Dreturn)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Dreturn(s) }
}

%op Strategy Is_Areturn() {
  make() { `When_Areturn(Identity()) }
}

%op Strategy _Areturn() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Areturn)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Areturn() }
}

%op Strategy Make_Areturn() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Areturn)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Areturn() }
}

%op Strategy When_Areturn(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Areturn)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Areturn(s) }
}

%op Strategy Is_Return() {
  make() { `When_Return(Identity()) }
}

%op Strategy _Return() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Return)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Return() }
}

%op Strategy Make_Return() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Return)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Return() }
}

%op Strategy When_Return(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Return)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Return(s) }
}

%op Strategy Is_Getstatic() {
  make() { `When_Getstatic(Identity()) }
}

%op Strategy _Getstatic(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Getstatic)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.tinstruction._Getstatic(arg0, arg1, arg2) }
}

%op Strategy Make_Getstatic(_owner:String, _name:String, _fieldDesc:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Getstatic)}

  get_slot(_owner, t) { _owner }
  get_slot(_name, t) { _name }
  get_slot(_fieldDesc, t) { _fieldDesc }
  make( _owner,  _name,  new_fieldDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Getstatic( _owner,  _name,  new_fieldDesc) }
}

%op Strategy When_Getstatic(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Getstatic)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Getstatic(s) }
}

%op Strategy Is_Putstatic() {
  make() { `When_Putstatic(Identity()) }
}

%op Strategy _Putstatic(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Putstatic)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.tinstruction._Putstatic(arg0, arg1, arg2) }
}

%op Strategy Make_Putstatic(_owner:String, _name:String, _fieldDesc:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Putstatic)}

  get_slot(_owner, t) { _owner }
  get_slot(_name, t) { _name }
  get_slot(_fieldDesc, t) { _fieldDesc }
  make( _owner,  _name,  new_fieldDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Putstatic( _owner,  _name,  new_fieldDesc) }
}

%op Strategy When_Putstatic(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Putstatic)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Putstatic(s) }
}

%op Strategy Is_Getfield() {
  make() { `When_Getfield(Identity()) }
}

%op Strategy _Getfield(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Getfield)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.tinstruction._Getfield(arg0, arg1, arg2) }
}

%op Strategy Make_Getfield(_owner:String, _name:String, _fieldDesc:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Getfield)}

  get_slot(_owner, t) { _owner }
  get_slot(_name, t) { _name }
  get_slot(_fieldDesc, t) { _fieldDesc }
  make( _owner,  _name,  new_fieldDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Getfield( _owner,  _name,  new_fieldDesc) }
}

%op Strategy When_Getfield(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Getfield)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Getfield(s) }
}

%op Strategy Is_Putfield() {
  make() { `When_Putfield(Identity()) }
}

%op Strategy _Putfield(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Putfield)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.tinstruction._Putfield(arg0, arg1, arg2) }
}

%op Strategy Make_Putfield(_owner:String, _name:String, _fieldDesc:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Putfield)}

  get_slot(_owner, t) { _owner }
  get_slot(_name, t) { _name }
  get_slot(_fieldDesc, t) { _fieldDesc }
  make( _owner,  _name,  new_fieldDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Putfield( _owner,  _name,  new_fieldDesc) }
}

%op Strategy When_Putfield(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Putfield)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Putfield(s) }
}

%op Strategy Is_Invokevirtual() {
  make() { `When_Invokevirtual(Identity()) }
}

%op Strategy _Invokevirtual(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Invokevirtual)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.tinstruction._Invokevirtual(arg0, arg1, arg2) }
}

%op Strategy Make_Invokevirtual(_owner:String, _name:String, _methodDesc:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Invokevirtual)}

  get_slot(_owner, t) { _owner }
  get_slot(_name, t) { _name }
  get_slot(_methodDesc, t) { _methodDesc }
  make( _owner,  _name,  new_methodDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Invokevirtual( _owner,  _name,  new_methodDesc) }
}

%op Strategy When_Invokevirtual(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Invokevirtual)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Invokevirtual(s) }
}

%op Strategy Is_Invokespecial() {
  make() { `When_Invokespecial(Identity()) }
}

%op Strategy _Invokespecial(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Invokespecial)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.tinstruction._Invokespecial(arg0, arg1, arg2) }
}

%op Strategy Make_Invokespecial(_owner:String, _name:String, _methodDesc:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Invokespecial)}

  get_slot(_owner, t) { _owner }
  get_slot(_name, t) { _name }
  get_slot(_methodDesc, t) { _methodDesc }
  make( _owner,  _name,  new_methodDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Invokespecial( _owner,  _name,  new_methodDesc) }
}

%op Strategy When_Invokespecial(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Invokespecial)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Invokespecial(s) }
}

%op Strategy Is_Invokestatic() {
  make() { `When_Invokestatic(Identity()) }
}

%op Strategy _Invokestatic(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Invokestatic)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.tinstruction._Invokestatic(arg0, arg1, arg2) }
}

%op Strategy Make_Invokestatic(_owner:String, _name:String, _methodDesc:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Invokestatic)}

  get_slot(_owner, t) { _owner }
  get_slot(_name, t) { _name }
  get_slot(_methodDesc, t) { _methodDesc }
  make( _owner,  _name,  new_methodDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Invokestatic( _owner,  _name,  new_methodDesc) }
}

%op Strategy When_Invokestatic(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Invokestatic)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Invokestatic(s) }
}

%op Strategy Is_Invokeinterface() {
  make() { `When_Invokeinterface(Identity()) }
}

%op Strategy _Invokeinterface(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Invokeinterface)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.tinstruction._Invokeinterface(arg0, arg1, arg2) }
}

%op Strategy Make_Invokeinterface(_owner:String, _name:String, _methodDesc:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Invokeinterface)}

  get_slot(_owner, t) { _owner }
  get_slot(_name, t) { _name }
  get_slot(_methodDesc, t) { _methodDesc }
  make( _owner,  _name,  new_methodDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Invokeinterface( _owner,  _name,  new_methodDesc) }
}

%op Strategy When_Invokeinterface(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Invokeinterface)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Invokeinterface(s) }
}

%op Strategy Is_New() {
  make() { `When_New(Identity()) }
}

%op Strategy _New(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._New)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._New(arg0) }
}

%op Strategy Make_New(_typeDesc:String) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_New)}

  get_slot(_typeDesc, t) { _typeDesc }
  make( _typeDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_New( _typeDesc) }
}

%op Strategy When_New(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_New)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_New(s) }
}

%op Strategy Is_Newarray() {
  make() { `When_Newarray(Identity()) }
}

%op Strategy _Newarray(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Newarray)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Newarray(arg0) }
}

%op Strategy Make_Newarray(_operand:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Newarray)}

  get_slot(_operand, t) { _operand }
  make( _operand) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Newarray( _operand) }
}

%op Strategy When_Newarray(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Newarray)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Newarray(s) }
}

%op Strategy Is_Anewarray() {
  make() { `When_Anewarray(Identity()) }
}

%op Strategy _Anewarray(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Anewarray)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Anewarray(arg0) }
}

%op Strategy Make_Anewarray(_typeDesc:String) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Anewarray)}

  get_slot(_typeDesc, t) { _typeDesc }
  make( _typeDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Anewarray( _typeDesc) }
}

%op Strategy When_Anewarray(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Anewarray)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Anewarray(s) }
}

%op Strategy Is_Arraylength() {
  make() { `When_Arraylength(Identity()) }
}

%op Strategy _Arraylength() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Arraylength)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Arraylength() }
}

%op Strategy Make_Arraylength() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Arraylength)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Arraylength() }
}

%op Strategy When_Arraylength(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Arraylength)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Arraylength(s) }
}

%op Strategy Is_Athrow() {
  make() { `When_Athrow(Identity()) }
}

%op Strategy _Athrow() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Athrow)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Athrow() }
}

%op Strategy Make_Athrow() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Athrow)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Athrow() }
}

%op Strategy When_Athrow(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Athrow)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Athrow(s) }
}

%op Strategy Is_Checkcast() {
  make() { `When_Checkcast(Identity()) }
}

%op Strategy _Checkcast(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Checkcast)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Checkcast(arg0) }
}

%op Strategy Make_Checkcast(_typeDesc:String) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Checkcast)}

  get_slot(_typeDesc, t) { _typeDesc }
  make( _typeDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Checkcast( _typeDesc) }
}

%op Strategy When_Checkcast(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Checkcast)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Checkcast(s) }
}

%op Strategy Is_Instanceof() {
  make() { `When_Instanceof(Identity()) }
}

%op Strategy _Instanceof(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Instanceof)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Instanceof(arg0) }
}

%op Strategy Make_Instanceof(_typeDesc:String) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Instanceof)}

  get_slot(_typeDesc, t) { _typeDesc }
  make( _typeDesc) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Instanceof( _typeDesc) }
}

%op Strategy When_Instanceof(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Instanceof)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Instanceof(s) }
}

%op Strategy Is_Monitorenter() {
  make() { `When_Monitorenter(Identity()) }
}

%op Strategy _Monitorenter() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Monitorenter)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Monitorenter() }
}

%op Strategy Make_Monitorenter() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Monitorenter)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Monitorenter() }
}

%op Strategy When_Monitorenter(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Monitorenter)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Monitorenter(s) }
}

%op Strategy Is_Monitorexit() {
  make() { `When_Monitorexit(Identity()) }
}

%op Strategy _Monitorexit() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Monitorexit)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction._Monitorexit() }
}

%op Strategy Make_Monitorexit() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Monitorexit)}

  make() { new tom.library.adt.bytecode.strategy.tinstruction.Make_Monitorexit() }
}

%op Strategy When_Monitorexit(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Monitorexit)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Monitorexit(s) }
}

%op Strategy Is_Multianewarray() {
  make() { `When_Multianewarray(Identity()) }
}

%op Strategy _Multianewarray(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Multianewarray)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tinstruction._Multianewarray(arg0, arg1) }
}

%op Strategy Make_Multianewarray(_typeDesc:String, _dims:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Multianewarray)}

  get_slot(_typeDesc, t) { _typeDesc }
  get_slot(_dims, t) { _dims }
  make( _typeDesc,  _dims) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Multianewarray( _typeDesc,  _dims) }
}

%op Strategy When_Multianewarray(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Multianewarray)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Multianewarray(s) }
}

%op Strategy Is_Ifnull() {
  make() { `When_Ifnull(Identity()) }
}

%op Strategy _Ifnull(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ifnull)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Ifnull(arg0) }
}

%op Strategy Make_Ifnull(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ifnull)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ifnull( new_label) }
}

%op Strategy When_Ifnull(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ifnull)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ifnull(s) }
}

%op Strategy Is_Ifnonnull() {
  make() { `When_Ifnonnull(Identity()) }
}

%op Strategy _Ifnonnull(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction._Ifnonnull)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tinstruction._Ifnonnull(arg0) }
}

%op Strategy Make_Ifnonnull(_label:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.Make_Ifnonnull)}

  get_slot(_label, t) { _label }
  make( new_label) { new tom.library.adt.bytecode.strategy.tinstruction.Make_Ifnonnull( new_label) }
}

%op Strategy When_Ifnonnull(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstruction.When_Ifnonnull)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstruction.When_Ifnonnull(s) }
}

%op Strategy Is_Class() {
  make() { `When_Class(Identity()) }
}

%op Strategy _Class(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tclass._Class)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.tclass._Class(arg0, arg1, arg2) }
}

%op Strategy Make_Class(_info:Strategy, _fields:Strategy, _methods:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tclass.Make_Class)}

  get_slot(_info, t) { _info }
  get_slot(_fields, t) { _fields }
  get_slot(_methods, t) { _methods }
  make( new_info,  new_fields,  new_methods) { new tom.library.adt.bytecode.strategy.tclass.Make_Class( new_info,  new_fields,  new_methods) }
}

%op Strategy When_Class(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tclass.When_Class)}
  make(s) { new tom.library.adt.bytecode.strategy.tclass.When_Class(s) }
}

%op Strategy Is_EmptyInnerClassInfoList() {
  make() { `When_EmptyInnerClassInfoList(Identity()) }
}

%op Strategy _EmptyInnerClassInfoList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinnerclassinfolist._EmptyInnerClassInfoList)}

  make() { new tom.library.adt.bytecode.strategy.tinnerclassinfolist._EmptyInnerClassInfoList() }
}

%op Strategy Make_EmptyInnerClassInfoList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinnerclassinfolist.Make_EmptyInnerClassInfoList)}

  make() { new tom.library.adt.bytecode.strategy.tinnerclassinfolist.Make_EmptyInnerClassInfoList() }
}

%op Strategy When_EmptyInnerClassInfoList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinnerclassinfolist.When_EmptyInnerClassInfoList)}
  make(s) { new tom.library.adt.bytecode.strategy.tinnerclassinfolist.When_EmptyInnerClassInfoList(s) }
}

%op Strategy Is_ConsInnerClassInfoList() {
  make() { `When_ConsInnerClassInfoList(Identity()) }
}

%op Strategy _ConsInnerClassInfoList(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinnerclassinfolist._ConsInnerClassInfoList)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tinnerclassinfolist._ConsInnerClassInfoList(arg0, arg1) }
}

%op Strategy Make_ConsInnerClassInfoList(_HeadInnerClassInfoList:Strategy, _TailInnerClassInfoList:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinnerclassinfolist.Make_ConsInnerClassInfoList)}

  get_slot(_HeadInnerClassInfoList, t) { _HeadInnerClassInfoList }
  get_slot(_TailInnerClassInfoList, t) { _TailInnerClassInfoList }
  make( new_HeadInnerClassInfoList,  new_TailInnerClassInfoList) { new tom.library.adt.bytecode.strategy.tinnerclassinfolist.Make_ConsInnerClassInfoList( new_HeadInnerClassInfoList,  new_TailInnerClassInfoList) }
}

%op Strategy When_ConsInnerClassInfoList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinnerclassinfolist.When_ConsInnerClassInfoList)}
  make(s) { new tom.library.adt.bytecode.strategy.tinnerclassinfolist.When_ConsInnerClassInfoList(s) }
}

%op Strategy Is_StringValue() {
  make() { `When_StringValue(Identity()) }
}

%op Strategy _StringValue(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue._StringValue)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tvalue._StringValue(arg0) }
}

%op Strategy Make_StringValue(_s:String) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.Make_StringValue)}

  get_slot(_s, t) { _s }
  make( _s) { new tom.library.adt.bytecode.strategy.tvalue.Make_StringValue( _s) }
}

%op Strategy When_StringValue(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.When_StringValue)}
  make(s) { new tom.library.adt.bytecode.strategy.tvalue.When_StringValue(s) }
}

%op Strategy Is_IntValue() {
  make() { `When_IntValue(Identity()) }
}

%op Strategy _IntValue(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue._IntValue)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tvalue._IntValue(arg0) }
}

%op Strategy Make_IntValue(_i:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.Make_IntValue)}

  get_slot(_i, t) { _i }
  make( _i) { new tom.library.adt.bytecode.strategy.tvalue.Make_IntValue( _i) }
}

%op Strategy When_IntValue(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.When_IntValue)}
  make(s) { new tom.library.adt.bytecode.strategy.tvalue.When_IntValue(s) }
}

%op Strategy Is_LongValue() {
  make() { `When_LongValue(Identity()) }
}

%op Strategy _LongValue(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue._LongValue)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tvalue._LongValue(arg0) }
}

%op Strategy Make_LongValue(_l:long) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.Make_LongValue)}

  get_slot(_l, t) { _l }
  make( _l) { new tom.library.adt.bytecode.strategy.tvalue.Make_LongValue( _l) }
}

%op Strategy When_LongValue(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.When_LongValue)}
  make(s) { new tom.library.adt.bytecode.strategy.tvalue.When_LongValue(s) }
}

%op Strategy Is_FloatValue() {
  make() { `When_FloatValue(Identity()) }
}

%op Strategy _FloatValue(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue._FloatValue)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tvalue._FloatValue(arg0) }
}

%op Strategy Make_FloatValue(_f:float) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.Make_FloatValue)}

  get_slot(_f, t) { _f }
  make( _f) { new tom.library.adt.bytecode.strategy.tvalue.Make_FloatValue( _f) }
}

%op Strategy When_FloatValue(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.When_FloatValue)}
  make(s) { new tom.library.adt.bytecode.strategy.tvalue.When_FloatValue(s) }
}

%op Strategy Is_DoubleValue() {
  make() { `When_DoubleValue(Identity()) }
}

%op Strategy _DoubleValue(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue._DoubleValue)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tvalue._DoubleValue(arg0) }
}

%op Strategy Make_DoubleValue(_d:double) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.Make_DoubleValue)}

  get_slot(_d, t) { _d }
  make( _d) { new tom.library.adt.bytecode.strategy.tvalue.Make_DoubleValue( _d) }
}

%op Strategy When_DoubleValue(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.When_DoubleValue)}
  make(s) { new tom.library.adt.bytecode.strategy.tvalue.When_DoubleValue(s) }
}

%op Strategy Is_EmptyValue() {
  make() { `When_EmptyValue(Identity()) }
}

%op Strategy _EmptyValue() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue._EmptyValue)}

  make() { new tom.library.adt.bytecode.strategy.tvalue._EmptyValue() }
}

%op Strategy Make_EmptyValue() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.Make_EmptyValue)}

  make() { new tom.library.adt.bytecode.strategy.tvalue.Make_EmptyValue() }
}

%op Strategy When_EmptyValue(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tvalue.When_EmptyValue)}
  make(s) { new tom.library.adt.bytecode.strategy.tvalue.When_EmptyValue(s) }
}

%op Strategy Is_Field() {
  make() { `When_Field(Identity()) }
}

%op Strategy _Field(arg0:Strategy, arg1:Strategy, arg2:Strategy, arg3:Strategy, arg4:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfield._Field)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  get_slot(arg3, t) { t.getArgument(3) }
  get_slot(arg4, t) { t.getArgument(4) }
  make(arg0, arg1, arg2, arg3, arg4) { new tom.library.adt.bytecode.strategy.tfield._Field(arg0, arg1, arg2, arg3, arg4) }
}

%op Strategy Make_Field(_access:Strategy, _name:String, _desc:Strategy, _signature:Strategy, _value:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfield.Make_Field)}

  get_slot(_access, t) { _access }
  get_slot(_name, t) { _name }
  get_slot(_desc, t) { _desc }
  get_slot(_signature, t) { _signature }
  get_slot(_value, t) { _value }
  make( new_access,  _name,  new_desc,  new_signature,  new_value) { new tom.library.adt.bytecode.strategy.tfield.Make_Field( new_access,  _name,  new_desc,  new_signature,  new_value) }
}

%op Strategy When_Field(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfield.When_Field)}
  make(s) { new tom.library.adt.bytecode.strategy.tfield.When_Field(s) }
}

%op Strategy Is_EmptyTryCatchBlockList() {
  make() { `When_EmptyTryCatchBlockList(Identity()) }
}

%op Strategy _EmptyTryCatchBlockList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttrycatchblocklist._EmptyTryCatchBlockList)}

  make() { new tom.library.adt.bytecode.strategy.ttrycatchblocklist._EmptyTryCatchBlockList() }
}

%op Strategy Make_EmptyTryCatchBlockList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttrycatchblocklist.Make_EmptyTryCatchBlockList)}

  make() { new tom.library.adt.bytecode.strategy.ttrycatchblocklist.Make_EmptyTryCatchBlockList() }
}

%op Strategy When_EmptyTryCatchBlockList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttrycatchblocklist.When_EmptyTryCatchBlockList)}
  make(s) { new tom.library.adt.bytecode.strategy.ttrycatchblocklist.When_EmptyTryCatchBlockList(s) }
}

%op Strategy Is_ConsTryCatchBlockList() {
  make() { `When_ConsTryCatchBlockList(Identity()) }
}

%op Strategy _ConsTryCatchBlockList(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttrycatchblocklist._ConsTryCatchBlockList)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.ttrycatchblocklist._ConsTryCatchBlockList(arg0, arg1) }
}

%op Strategy Make_ConsTryCatchBlockList(_HeadTryCatchBlockList:Strategy, _TailTryCatchBlockList:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttrycatchblocklist.Make_ConsTryCatchBlockList)}

  get_slot(_HeadTryCatchBlockList, t) { _HeadTryCatchBlockList }
  get_slot(_TailTryCatchBlockList, t) { _TailTryCatchBlockList }
  make( new_HeadTryCatchBlockList,  new_TailTryCatchBlockList) { new tom.library.adt.bytecode.strategy.ttrycatchblocklist.Make_ConsTryCatchBlockList( new_HeadTryCatchBlockList,  new_TailTryCatchBlockList) }
}

%op Strategy When_ConsTryCatchBlockList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttrycatchblocklist.When_ConsTryCatchBlockList)}
  make(s) { new tom.library.adt.bytecode.strategy.ttrycatchblocklist.When_ConsTryCatchBlockList(s) }
}

%op Strategy Is_ARRAY() {
  make() { `When_ARRAY(Identity()) }
}

%op Strategy _ARRAY() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype._ARRAY)}

  make() { new tom.library.adt.bytecode.strategy.ttype._ARRAY() }
}

%op Strategy Make_ARRAY() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.Make_ARRAY)}

  make() { new tom.library.adt.bytecode.strategy.ttype.Make_ARRAY() }
}

%op Strategy When_ARRAY(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.When_ARRAY)}
  make(s) { new tom.library.adt.bytecode.strategy.ttype.When_ARRAY(s) }
}

%op Strategy Is_BOOLEAN() {
  make() { `When_BOOLEAN(Identity()) }
}

%op Strategy _BOOLEAN() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype._BOOLEAN)}

  make() { new tom.library.adt.bytecode.strategy.ttype._BOOLEAN() }
}

%op Strategy Make_BOOLEAN() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.Make_BOOLEAN)}

  make() { new tom.library.adt.bytecode.strategy.ttype.Make_BOOLEAN() }
}

%op Strategy When_BOOLEAN(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.When_BOOLEAN)}
  make(s) { new tom.library.adt.bytecode.strategy.ttype.When_BOOLEAN(s) }
}

%op Strategy Is_BYTE() {
  make() { `When_BYTE(Identity()) }
}

%op Strategy _BYTE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype._BYTE)}

  make() { new tom.library.adt.bytecode.strategy.ttype._BYTE() }
}

%op Strategy Make_BYTE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.Make_BYTE)}

  make() { new tom.library.adt.bytecode.strategy.ttype.Make_BYTE() }
}

%op Strategy When_BYTE(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.When_BYTE)}
  make(s) { new tom.library.adt.bytecode.strategy.ttype.When_BYTE(s) }
}

%op Strategy Is_CHAR() {
  make() { `When_CHAR(Identity()) }
}

%op Strategy _CHAR() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype._CHAR)}

  make() { new tom.library.adt.bytecode.strategy.ttype._CHAR() }
}

%op Strategy Make_CHAR() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.Make_CHAR)}

  make() { new tom.library.adt.bytecode.strategy.ttype.Make_CHAR() }
}

%op Strategy When_CHAR(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.When_CHAR)}
  make(s) { new tom.library.adt.bytecode.strategy.ttype.When_CHAR(s) }
}

%op Strategy Is_DOUBLE() {
  make() { `When_DOUBLE(Identity()) }
}

%op Strategy _DOUBLE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype._DOUBLE)}

  make() { new tom.library.adt.bytecode.strategy.ttype._DOUBLE() }
}

%op Strategy Make_DOUBLE() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.Make_DOUBLE)}

  make() { new tom.library.adt.bytecode.strategy.ttype.Make_DOUBLE() }
}

%op Strategy When_DOUBLE(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.When_DOUBLE)}
  make(s) { new tom.library.adt.bytecode.strategy.ttype.When_DOUBLE(s) }
}

%op Strategy Is_FLOAT() {
  make() { `When_FLOAT(Identity()) }
}

%op Strategy _FLOAT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype._FLOAT)}

  make() { new tom.library.adt.bytecode.strategy.ttype._FLOAT() }
}

%op Strategy Make_FLOAT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.Make_FLOAT)}

  make() { new tom.library.adt.bytecode.strategy.ttype.Make_FLOAT() }
}

%op Strategy When_FLOAT(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.When_FLOAT)}
  make(s) { new tom.library.adt.bytecode.strategy.ttype.When_FLOAT(s) }
}

%op Strategy Is_INT() {
  make() { `When_INT(Identity()) }
}

%op Strategy _INT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype._INT)}

  make() { new tom.library.adt.bytecode.strategy.ttype._INT() }
}

%op Strategy Make_INT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.Make_INT)}

  make() { new tom.library.adt.bytecode.strategy.ttype.Make_INT() }
}

%op Strategy When_INT(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.When_INT)}
  make(s) { new tom.library.adt.bytecode.strategy.ttype.When_INT(s) }
}

%op Strategy Is_LONG() {
  make() { `When_LONG(Identity()) }
}

%op Strategy _LONG() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype._LONG)}

  make() { new tom.library.adt.bytecode.strategy.ttype._LONG() }
}

%op Strategy Make_LONG() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.Make_LONG)}

  make() { new tom.library.adt.bytecode.strategy.ttype.Make_LONG() }
}

%op Strategy When_LONG(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.When_LONG)}
  make(s) { new tom.library.adt.bytecode.strategy.ttype.When_LONG(s) }
}

%op Strategy Is_OBJECT() {
  make() { `When_OBJECT(Identity()) }
}

%op Strategy _OBJECT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype._OBJECT)}

  make() { new tom.library.adt.bytecode.strategy.ttype._OBJECT() }
}

%op Strategy Make_OBJECT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.Make_OBJECT)}

  make() { new tom.library.adt.bytecode.strategy.ttype.Make_OBJECT() }
}

%op Strategy When_OBJECT(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.When_OBJECT)}
  make(s) { new tom.library.adt.bytecode.strategy.ttype.When_OBJECT(s) }
}

%op Strategy Is_SHORT() {
  make() { `When_SHORT(Identity()) }
}

%op Strategy _SHORT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype._SHORT)}

  make() { new tom.library.adt.bytecode.strategy.ttype._SHORT() }
}

%op Strategy Make_SHORT() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.Make_SHORT)}

  make() { new tom.library.adt.bytecode.strategy.ttype.Make_SHORT() }
}

%op Strategy When_SHORT(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.When_SHORT)}
  make(s) { new tom.library.adt.bytecode.strategy.ttype.When_SHORT(s) }
}

%op Strategy Is_VOID() {
  make() { `When_VOID(Identity()) }
}

%op Strategy _VOID() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype._VOID)}

  make() { new tom.library.adt.bytecode.strategy.ttype._VOID() }
}

%op Strategy Make_VOID() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.Make_VOID)}

  make() { new tom.library.adt.bytecode.strategy.ttype.Make_VOID() }
}

%op Strategy When_VOID(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttype.When_VOID)}
  make(s) { new tom.library.adt.bytecode.strategy.ttype.When_VOID(s) }
}

%op Strategy Is_ClassInfo() {
  make() { `When_ClassInfo(Identity()) }
}

%op Strategy _ClassInfo(arg0:Strategy, arg1:Strategy, arg2:Strategy, arg3:Strategy, arg4:Strategy, arg5:Strategy, arg6:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tclassinfo._ClassInfo)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  get_slot(arg3, t) { t.getArgument(3) }
  get_slot(arg4, t) { t.getArgument(4) }
  get_slot(arg5, t) { t.getArgument(5) }
  get_slot(arg6, t) { t.getArgument(6) }
  make(arg0, arg1, arg2, arg3, arg4, arg5, arg6) { new tom.library.adt.bytecode.strategy.tclassinfo._ClassInfo(arg0, arg1, arg2, arg3, arg4, arg5, arg6) }
}

%op Strategy Make_ClassInfo(_name:String, _signature:Strategy, _access:Strategy, _superName:String, _interfaces:Strategy, _innerClasses:Strategy, _outerClass:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tclassinfo.Make_ClassInfo)}

  get_slot(_name, t) { _name }
  get_slot(_signature, t) { _signature }
  get_slot(_access, t) { _access }
  get_slot(_superName, t) { _superName }
  get_slot(_interfaces, t) { _interfaces }
  get_slot(_innerClasses, t) { _innerClasses }
  get_slot(_outerClass, t) { _outerClass }
  make( _name,  new_signature,  new_access,  _superName,  new_interfaces,  new_innerClasses,  new_outerClass) { new tom.library.adt.bytecode.strategy.tclassinfo.Make_ClassInfo( _name,  new_signature,  new_access,  _superName,  new_interfaces,  new_innerClasses,  new_outerClass) }
}

%op Strategy When_ClassInfo(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tclassinfo.When_ClassInfo)}
  make(s) { new tom.library.adt.bytecode.strategy.tclassinfo.When_ClassInfo(s) }
}

%op Strategy Is_EmptyAccessList() {
  make() { `When_EmptyAccessList(Identity()) }
}

%op Strategy _EmptyAccessList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccesslist._EmptyAccessList)}

  make() { new tom.library.adt.bytecode.strategy.taccesslist._EmptyAccessList() }
}

%op Strategy Make_EmptyAccessList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccesslist.Make_EmptyAccessList)}

  make() { new tom.library.adt.bytecode.strategy.taccesslist.Make_EmptyAccessList() }
}

%op Strategy When_EmptyAccessList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccesslist.When_EmptyAccessList)}
  make(s) { new tom.library.adt.bytecode.strategy.taccesslist.When_EmptyAccessList(s) }
}

%op Strategy Is_ConsAccessList() {
  make() { `When_ConsAccessList(Identity()) }
}

%op Strategy _ConsAccessList(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccesslist._ConsAccessList)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.taccesslist._ConsAccessList(arg0, arg1) }
}

%op Strategy Make_ConsAccessList(_HeadAccessList:Strategy, _TailAccessList:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccesslist.Make_ConsAccessList)}

  get_slot(_HeadAccessList, t) { _HeadAccessList }
  get_slot(_TailAccessList, t) { _TailAccessList }
  make( new_HeadAccessList,  new_TailAccessList) { new tom.library.adt.bytecode.strategy.taccesslist.Make_ConsAccessList( new_HeadAccessList,  new_TailAccessList) }
}

%op Strategy When_ConsAccessList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.taccesslist.When_ConsAccessList)}
  make(s) { new tom.library.adt.bytecode.strategy.taccesslist.When_ConsAccessList(s) }
}

%op Strategy Is_MethodDescriptor() {
  make() { `When_MethodDescriptor(Identity()) }
}

%op Strategy _MethodDescriptor(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethoddescriptor._MethodDescriptor)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tmethoddescriptor._MethodDescriptor(arg0, arg1) }
}

%op Strategy Make_MethodDescriptor(_parameters:Strategy, _return:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethoddescriptor.Make_MethodDescriptor)}

  get_slot(_parameters, t) { _parameters }
  get_slot(_return, t) { _return }
  make( new_parameters,  new_return) { new tom.library.adt.bytecode.strategy.tmethoddescriptor.Make_MethodDescriptor( new_parameters,  new_return) }
}

%op Strategy When_MethodDescriptor(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethoddescriptor.When_MethodDescriptor)}
  make(s) { new tom.library.adt.bytecode.strategy.tmethoddescriptor.When_MethodDescriptor(s) }
}

%op Strategy Is_EmptyFieldList() {
  make() { `When_EmptyFieldList(Identity()) }
}

%op Strategy _EmptyFieldList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfieldlist._EmptyFieldList)}

  make() { new tom.library.adt.bytecode.strategy.tfieldlist._EmptyFieldList() }
}

%op Strategy Make_EmptyFieldList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfieldlist.Make_EmptyFieldList)}

  make() { new tom.library.adt.bytecode.strategy.tfieldlist.Make_EmptyFieldList() }
}

%op Strategy When_EmptyFieldList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfieldlist.When_EmptyFieldList)}
  make(s) { new tom.library.adt.bytecode.strategy.tfieldlist.When_EmptyFieldList(s) }
}

%op Strategy Is_ConsFieldList() {
  make() { `When_ConsFieldList(Identity()) }
}

%op Strategy _ConsFieldList(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfieldlist._ConsFieldList)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tfieldlist._ConsFieldList(arg0, arg1) }
}

%op Strategy Make_ConsFieldList(_HeadFieldList:Strategy, _TailFieldList:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfieldlist.Make_ConsFieldList)}

  get_slot(_HeadFieldList, t) { _HeadFieldList }
  get_slot(_TailFieldList, t) { _TailFieldList }
  make( new_HeadFieldList,  new_TailFieldList) { new tom.library.adt.bytecode.strategy.tfieldlist.Make_ConsFieldList( new_HeadFieldList,  new_TailFieldList) }
}

%op Strategy When_ConsFieldList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfieldlist.When_ConsFieldList)}
  make(s) { new tom.library.adt.bytecode.strategy.tfieldlist.When_ConsFieldList(s) }
}

%op Strategy Is_OuterClassInfo() {
  make() { `When_OuterClassInfo(Identity()) }
}

%op Strategy _OuterClassInfo(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.touterclassinfo._OuterClassInfo)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.touterclassinfo._OuterClassInfo(arg0, arg1, arg2) }
}

%op Strategy Make_OuterClassInfo(_owner:String, _name:String, _desc:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.touterclassinfo.Make_OuterClassInfo)}

  get_slot(_owner, t) { _owner }
  get_slot(_name, t) { _name }
  get_slot(_desc, t) { _desc }
  make( _owner,  _name,  new_desc) { new tom.library.adt.bytecode.strategy.touterclassinfo.Make_OuterClassInfo( _owner,  _name,  new_desc) }
}

%op Strategy When_OuterClassInfo(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.touterclassinfo.When_OuterClassInfo)}
  make(s) { new tom.library.adt.bytecode.strategy.touterclassinfo.When_OuterClassInfo(s) }
}

%op Strategy Is_EmptyOuterClassInfo() {
  make() { `When_EmptyOuterClassInfo(Identity()) }
}

%op Strategy _EmptyOuterClassInfo() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.touterclassinfo._EmptyOuterClassInfo)}

  make() { new tom.library.adt.bytecode.strategy.touterclassinfo._EmptyOuterClassInfo() }
}

%op Strategy Make_EmptyOuterClassInfo() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.touterclassinfo.Make_EmptyOuterClassInfo)}

  make() { new tom.library.adt.bytecode.strategy.touterclassinfo.Make_EmptyOuterClassInfo() }
}

%op Strategy When_EmptyOuterClassInfo(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.touterclassinfo.When_EmptyOuterClassInfo)}
  make(s) { new tom.library.adt.bytecode.strategy.touterclassinfo.When_EmptyOuterClassInfo(s) }
}

%op Strategy Is_ObjectType() {
  make() { `When_ObjectType(Identity()) }
}

%op Strategy _ObjectType(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor._ObjectType)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tfielddescriptor._ObjectType(arg0) }
}

%op Strategy Make_ObjectType(_className:String) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.Make_ObjectType)}

  get_slot(_className, t) { _className }
  make( _className) { new tom.library.adt.bytecode.strategy.tfielddescriptor.Make_ObjectType( _className) }
}

%op Strategy When_ObjectType(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.When_ObjectType)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptor.When_ObjectType(s) }
}

%op Strategy Is_ArrayType() {
  make() { `When_ArrayType(Identity()) }
}

%op Strategy _ArrayType(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor._ArrayType)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tfielddescriptor._ArrayType(arg0) }
}

%op Strategy Make_ArrayType(_arrayType:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.Make_ArrayType)}

  get_slot(_arrayType, t) { _arrayType }
  make( new_arrayType) { new tom.library.adt.bytecode.strategy.tfielddescriptor.Make_ArrayType( new_arrayType) }
}

%op Strategy When_ArrayType(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.When_ArrayType)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptor.When_ArrayType(s) }
}

%op Strategy Is_B() {
  make() { `When_B(Identity()) }
}

%op Strategy _B() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor._B)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor._B() }
}

%op Strategy Make_B() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.Make_B)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor.Make_B() }
}

%op Strategy When_B(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.When_B)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptor.When_B(s) }
}

%op Strategy Is_C() {
  make() { `When_C(Identity()) }
}

%op Strategy _C() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor._C)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor._C() }
}

%op Strategy Make_C() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.Make_C)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor.Make_C() }
}

%op Strategy When_C(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.When_C)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptor.When_C(s) }
}

%op Strategy Is_D() {
  make() { `When_D(Identity()) }
}

%op Strategy _D() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor._D)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor._D() }
}

%op Strategy Make_D() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.Make_D)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor.Make_D() }
}

%op Strategy When_D(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.When_D)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptor.When_D(s) }
}

%op Strategy Is_F() {
  make() { `When_F(Identity()) }
}

%op Strategy _F() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor._F)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor._F() }
}

%op Strategy Make_F() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.Make_F)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor.Make_F() }
}

%op Strategy When_F(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.When_F)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptor.When_F(s) }
}

%op Strategy Is_I() {
  make() { `When_I(Identity()) }
}

%op Strategy _I() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor._I)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor._I() }
}

%op Strategy Make_I() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.Make_I)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor.Make_I() }
}

%op Strategy When_I(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.When_I)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptor.When_I(s) }
}

%op Strategy Is_J() {
  make() { `When_J(Identity()) }
}

%op Strategy _J() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor._J)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor._J() }
}

%op Strategy Make_J() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.Make_J)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor.Make_J() }
}

%op Strategy When_J(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.When_J)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptor.When_J(s) }
}

%op Strategy Is_S() {
  make() { `When_S(Identity()) }
}

%op Strategy _S() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor._S)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor._S() }
}

%op Strategy Make_S() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.Make_S)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor.Make_S() }
}

%op Strategy When_S(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.When_S)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptor.When_S(s) }
}

%op Strategy Is_Z() {
  make() { `When_Z(Identity()) }
}

%op Strategy _Z() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor._Z)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor._Z() }
}

%op Strategy Make_Z() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.Make_Z)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptor.Make_Z() }
}

%op Strategy When_Z(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptor.When_Z)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptor.When_Z(s) }
}

%op Strategy Is_TryCatchBlock() {
  make() { `When_TryCatchBlock(Identity()) }
}

%op Strategy _TryCatchBlock(arg0:Strategy, arg1:Strategy, arg2:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttrycatchblock._TryCatchBlock)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  make(arg0, arg1, arg2) { new tom.library.adt.bytecode.strategy.ttrycatchblock._TryCatchBlock(arg0, arg1, arg2) }
}

%op Strategy Make_TryCatchBlock(_start:Strategy, _end:Strategy, _handler:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttrycatchblock.Make_TryCatchBlock)}

  get_slot(_start, t) { _start }
  get_slot(_end, t) { _end }
  get_slot(_handler, t) { _handler }
  make( new_start,  new_end,  new_handler) { new tom.library.adt.bytecode.strategy.ttrycatchblock.Make_TryCatchBlock( new_start,  new_end,  new_handler) }
}

%op Strategy When_TryCatchBlock(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.ttrycatchblock.When_TryCatchBlock)}
  make(s) { new tom.library.adt.bytecode.strategy.ttrycatchblock.When_TryCatchBlock(s) }
}

%op Strategy Is_EmptyintList() {
  make() { `When_EmptyintList(Identity()) }
}

%op Strategy _EmptyintList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tintlist._EmptyintList)}

  make() { new tom.library.adt.bytecode.strategy.tintlist._EmptyintList() }
}

%op Strategy Make_EmptyintList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tintlist.Make_EmptyintList)}

  make() { new tom.library.adt.bytecode.strategy.tintlist.Make_EmptyintList() }
}

%op Strategy When_EmptyintList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tintlist.When_EmptyintList)}
  make(s) { new tom.library.adt.bytecode.strategy.tintlist.When_EmptyintList(s) }
}

%op Strategy Is_ConsintList() {
  make() { `When_ConsintList(Identity()) }
}

%op Strategy _ConsintList(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tintlist._ConsintList)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tintlist._ConsintList(arg0, arg1) }
}

%op Strategy Make_ConsintList(_HeadintList:int, _TailintList:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tintlist.Make_ConsintList)}

  get_slot(_HeadintList, t) { _HeadintList }
  get_slot(_TailintList, t) { _TailintList }
  make( _HeadintList,  new_TailintList) { new tom.library.adt.bytecode.strategy.tintlist.Make_ConsintList( _HeadintList,  new_TailintList) }
}

%op Strategy When_ConsintList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tintlist.When_ConsintList)}
  make(s) { new tom.library.adt.bytecode.strategy.tintlist.When_ConsintList(s) }
}

%op Strategy Is_MethodInfo() {
  make() { `When_MethodInfo(Identity()) }
}

%op Strategy _MethodInfo(arg0:Strategy, arg1:Strategy, arg2:Strategy, arg3:Strategy, arg4:Strategy, arg5:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodinfo._MethodInfo)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  get_slot(arg2, t) { t.getArgument(2) }
  get_slot(arg3, t) { t.getArgument(3) }
  get_slot(arg4, t) { t.getArgument(4) }
  get_slot(arg5, t) { t.getArgument(5) }
  make(arg0, arg1, arg2, arg3, arg4, arg5) { new tom.library.adt.bytecode.strategy.tmethodinfo._MethodInfo(arg0, arg1, arg2, arg3, arg4, arg5) }
}

%op Strategy Make_MethodInfo(_owner:String, _access:Strategy, _name:String, _desc:Strategy, _signature:Strategy, _exceptions:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodinfo.Make_MethodInfo)}

  get_slot(_owner, t) { _owner }
  get_slot(_access, t) { _access }
  get_slot(_name, t) { _name }
  get_slot(_desc, t) { _desc }
  get_slot(_signature, t) { _signature }
  get_slot(_exceptions, t) { _exceptions }
  make( _owner,  new_access,  _name,  new_desc,  new_signature,  new_exceptions) { new tom.library.adt.bytecode.strategy.tmethodinfo.Make_MethodInfo( _owner,  new_access,  _name,  new_desc,  new_signature,  new_exceptions) }
}

%op Strategy When_MethodInfo(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tmethodinfo.When_MethodInfo)}
  make(s) { new tom.library.adt.bytecode.strategy.tmethodinfo.When_MethodInfo(s) }
}

%op Strategy Is_CatchHandler() {
  make() { `When_CatchHandler(Identity()) }
}

%op Strategy _CatchHandler(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.thandler._CatchHandler)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.thandler._CatchHandler(arg0, arg1) }
}

%op Strategy Make_CatchHandler(_handler:Strategy, _type:String) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.thandler.Make_CatchHandler)}

  get_slot(_handler, t) { _handler }
  get_slot(_type, t) { _type }
  make( new_handler,  _type) { new tom.library.adt.bytecode.strategy.thandler.Make_CatchHandler( new_handler,  _type) }
}

%op Strategy When_CatchHandler(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.thandler.When_CatchHandler)}
  make(s) { new tom.library.adt.bytecode.strategy.thandler.When_CatchHandler(s) }
}

%op Strategy Is_FinallyHandler() {
  make() { `When_FinallyHandler(Identity()) }
}

%op Strategy _FinallyHandler(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.thandler._FinallyHandler)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.thandler._FinallyHandler(arg0) }
}

%op Strategy Make_FinallyHandler(_handler:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.thandler.Make_FinallyHandler)}

  get_slot(_handler, t) { _handler }
  make( new_handler) { new tom.library.adt.bytecode.strategy.thandler.Make_FinallyHandler( new_handler) }
}

%op Strategy When_FinallyHandler(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.thandler.When_FinallyHandler)}
  make(s) { new tom.library.adt.bytecode.strategy.thandler.When_FinallyHandler(s) }
}

%op Strategy Is_EmptyInstructionList() {
  make() { `When_EmptyInstructionList(Identity()) }
}

%op Strategy _EmptyInstructionList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstructionlist._EmptyInstructionList)}

  make() { new tom.library.adt.bytecode.strategy.tinstructionlist._EmptyInstructionList() }
}

%op Strategy Make_EmptyInstructionList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstructionlist.Make_EmptyInstructionList)}

  make() { new tom.library.adt.bytecode.strategy.tinstructionlist.Make_EmptyInstructionList() }
}

%op Strategy When_EmptyInstructionList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstructionlist.When_EmptyInstructionList)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstructionlist.When_EmptyInstructionList(s) }
}

%op Strategy Is_ConsInstructionList() {
  make() { `When_ConsInstructionList(Identity()) }
}

%op Strategy _ConsInstructionList(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstructionlist._ConsInstructionList)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tinstructionlist._ConsInstructionList(arg0, arg1) }
}

%op Strategy Make_ConsInstructionList(_HeadInstructionList:Strategy, _TailInstructionList:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstructionlist.Make_ConsInstructionList)}

  get_slot(_HeadInstructionList, t) { _HeadInstructionList }
  get_slot(_TailInstructionList, t) { _TailInstructionList }
  make( new_HeadInstructionList,  new_TailInstructionList) { new tom.library.adt.bytecode.strategy.tinstructionlist.Make_ConsInstructionList( new_HeadInstructionList,  new_TailInstructionList) }
}

%op Strategy When_ConsInstructionList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tinstructionlist.When_ConsInstructionList)}
  make(s) { new tom.library.adt.bytecode.strategy.tinstructionlist.When_ConsInstructionList(s) }
}

%op Strategy Is_EmptyFieldDescriptorList() {
  make() { `When_EmptyFieldDescriptorList(Identity()) }
}

%op Strategy _EmptyFieldDescriptorList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptorlist._EmptyFieldDescriptorList)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptorlist._EmptyFieldDescriptorList() }
}

%op Strategy Make_EmptyFieldDescriptorList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptorlist.Make_EmptyFieldDescriptorList)}

  make() { new tom.library.adt.bytecode.strategy.tfielddescriptorlist.Make_EmptyFieldDescriptorList() }
}

%op Strategy When_EmptyFieldDescriptorList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptorlist.When_EmptyFieldDescriptorList)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptorlist.When_EmptyFieldDescriptorList(s) }
}

%op Strategy Is_ConsFieldDescriptorList() {
  make() { `When_ConsFieldDescriptorList(Identity()) }
}

%op Strategy _ConsFieldDescriptorList(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptorlist._ConsFieldDescriptorList)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tfielddescriptorlist._ConsFieldDescriptorList(arg0, arg1) }
}

%op Strategy Make_ConsFieldDescriptorList(_HeadFieldDescriptorList:Strategy, _TailFieldDescriptorList:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptorlist.Make_ConsFieldDescriptorList)}

  get_slot(_HeadFieldDescriptorList, t) { _HeadFieldDescriptorList }
  get_slot(_TailFieldDescriptorList, t) { _TailFieldDescriptorList }
  make( new_HeadFieldDescriptorList,  new_TailFieldDescriptorList) { new tom.library.adt.bytecode.strategy.tfielddescriptorlist.Make_ConsFieldDescriptorList( new_HeadFieldDescriptorList,  new_TailFieldDescriptorList) }
}

%op Strategy When_ConsFieldDescriptorList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tfielddescriptorlist.When_ConsFieldDescriptorList)}
  make(s) { new tom.library.adt.bytecode.strategy.tfielddescriptorlist.When_ConsFieldDescriptorList(s) }
}

%op Strategy Is_Label() {
  make() { `When_Label(Identity()) }
}

%op Strategy _Label(arg0:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlabel._Label)}

  get_slot(arg0, t) { t.getArgument(0) }
  make(arg0) { new tom.library.adt.bytecode.strategy.tlabel._Label(arg0) }
}

%op Strategy Make_Label(_id:int) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlabel.Make_Label)}

  get_slot(_id, t) { _id }
  make( _id) { new tom.library.adt.bytecode.strategy.tlabel.Make_Label( _id) }
}

%op Strategy When_Label(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlabel.When_Label)}
  make(s) { new tom.library.adt.bytecode.strategy.tlabel.When_Label(s) }
}

%op Strategy Is_EmptyLocalVariableList() {
  make() { `When_EmptyLocalVariableList(Identity()) }
}

%op Strategy _EmptyLocalVariableList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlocalvariablelist._EmptyLocalVariableList)}

  make() { new tom.library.adt.bytecode.strategy.tlocalvariablelist._EmptyLocalVariableList() }
}

%op Strategy Make_EmptyLocalVariableList() {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlocalvariablelist.Make_EmptyLocalVariableList)}

  make() { new tom.library.adt.bytecode.strategy.tlocalvariablelist.Make_EmptyLocalVariableList() }
}

%op Strategy When_EmptyLocalVariableList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlocalvariablelist.When_EmptyLocalVariableList)}
  make(s) { new tom.library.adt.bytecode.strategy.tlocalvariablelist.When_EmptyLocalVariableList(s) }
}

%op Strategy Is_ConsLocalVariableList() {
  make() { `When_ConsLocalVariableList(Identity()) }
}

%op Strategy _ConsLocalVariableList(arg0:Strategy, arg1:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlocalvariablelist._ConsLocalVariableList)}

  get_slot(arg0, t) { t.getArgument(0) }
  get_slot(arg1, t) { t.getArgument(1) }
  make(arg0, arg1) { new tom.library.adt.bytecode.strategy.tlocalvariablelist._ConsLocalVariableList(arg0, arg1) }
}

%op Strategy Make_ConsLocalVariableList(_HeadLocalVariableList:Strategy, _TailLocalVariableList:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlocalvariablelist.Make_ConsLocalVariableList)}

  get_slot(_HeadLocalVariableList, t) { _HeadLocalVariableList }
  get_slot(_TailLocalVariableList, t) { _TailLocalVariableList }
  make( new_HeadLocalVariableList,  new_TailLocalVariableList) { new tom.library.adt.bytecode.strategy.tlocalvariablelist.Make_ConsLocalVariableList( new_HeadLocalVariableList,  new_TailLocalVariableList) }
}

%op Strategy When_ConsLocalVariableList(s:Strategy) {
  is_fsym(t) { (t!=null) && t instanceof (tom.library.adt.bytecode.strategy.tlocalvariablelist.When_ConsLocalVariableList)}
  make(s) { new tom.library.adt.bytecode.strategy.tlocalvariablelist.When_ConsLocalVariableList(s) }
}

            %op Strategy _MethodList(sub:Strategy) {
            is_fsym(t) { false }
            make(sub)  { `mu(MuVar("x"),Choice(_ConsMethodList(sub,MuVar("x")),_EmptyMethodList())) }
            }
            
            %op Strategy _StringList(sub:Strategy) {
            is_fsym(t) { false }
            make(sub)  { `mu(MuVar("x"),Choice(_ConsStringList(sub,MuVar("x")),_EmptyStringList())) }
            }
            
            %op Strategy _LabelList(sub:Strategy) {
            is_fsym(t) { false }
            make(sub)  { `mu(MuVar("x"),Choice(_ConsLabelList(sub,MuVar("x")),_EmptyLabelList())) }
            }
            
            %op Strategy _InnerClassInfoList(sub:Strategy) {
            is_fsym(t) { false }
            make(sub)  { `mu(MuVar("x"),Choice(_ConsInnerClassInfoList(sub,MuVar("x")),_EmptyInnerClassInfoList())) }
            }
            
            %op Strategy _TryCatchBlockList(sub:Strategy) {
            is_fsym(t) { false }
            make(sub)  { `mu(MuVar("x"),Choice(_ConsTryCatchBlockList(sub,MuVar("x")),_EmptyTryCatchBlockList())) }
            }
            
            %op Strategy _AccessList(sub:Strategy) {
            is_fsym(t) { false }
            make(sub)  { `mu(MuVar("x"),Choice(_ConsAccessList(sub,MuVar("x")),_EmptyAccessList())) }
            }
            
            %op Strategy _FieldList(sub:Strategy) {
            is_fsym(t) { false }
            make(sub)  { `mu(MuVar("x"),Choice(_ConsFieldList(sub,MuVar("x")),_EmptyFieldList())) }
            }
            
            %op Strategy _intList(sub:Strategy) {
            is_fsym(t) { false }
            make(sub)  { `mu(MuVar("x"),Choice(_ConsintList(sub,MuVar("x")),_EmptyintList())) }
            }
            
            %op Strategy _InstructionList(sub:Strategy) {
            is_fsym(t) { false }
            make(sub)  { `mu(MuVar("x"),Choice(_ConsInstructionList(sub,MuVar("x")),_EmptyInstructionList())) }
            }
            
            %op Strategy _FieldDescriptorList(sub:Strategy) {
            is_fsym(t) { false }
            make(sub)  { `mu(MuVar("x"),Choice(_ConsFieldDescriptorList(sub,MuVar("x")),_EmptyFieldDescriptorList())) }
            }
            
            %op Strategy _LocalVariableList(sub:Strategy) {
            is_fsym(t) { false }
            make(sub)  { `mu(MuVar("x"),Choice(_ConsLocalVariableList(sub,MuVar("x")),_EmptyLocalVariableList())) }
            }
            
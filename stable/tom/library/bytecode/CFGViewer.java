/* Generated by TOM (version 2.5rc2): Do not edit this file *//*
 * Copyright (c) 2000-2007, INRIA
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met: 
 *	- Redistributions of source code must retain the above copyright
 *	notice, this list of conditions and the following disclaimer.  
 *	- Redistributions in binary form must reproduce the above copyright
 *	notice, this list of conditions and the following disclaimer in the
 *	documentation and/or other materials provided with the distribution.
 *	- Neither the name of the INRIA nor the names of its
 *	contributors may be used to endorse or promote products derived from
 *	this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package tom.library.bytecode;

import java.util.Map;
import java.util.HashMap;
import java.io.Writer;
import java.io.IOException;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;

import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassAdapter;

import tom.library.sl.*;

import tom.library.adt.bytecode.*;
import tom.library.adt.bytecode.types.*;

/**
 * A dot control flow graph exporter.
 * This class generates a control flow graph for each method of a class.
 */
public class CFGViewer {
  /* Generated by TOM (version 2.5rc2): Do not edit this file *//* Generated by TOM (version 2.5rc2): Do not edit this file *//* Generated by TOM (version 2.5rc2): Do not edit this file */ private static boolean tom_equal_term_String(String t1, String t2) { return  (t1.equals(t2)) ;}private static boolean tom_is_sort_String(String t) { return  t instanceof String ;}  /* Generated by TOM (version 2.5rc2): Do not edit this file */private static boolean tom_equal_term_int(int t1, int t2) { return  (t1==t2) ;}private static boolean tom_is_sort_int(int t) { return  true ;} /* Generated by TOM (version 2.5rc2): Do not edit this file */ /* Generated by TOM (version 2.5rc2): Do not edit this file */ /* Generated by TOM (version 2.5rc2): Do not edit this file */ private static boolean tom_equal_term_TLocalVariable(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TLocalVariable(Object t) { return  t instanceof tom.library.adt.bytecode.types.TLocalVariable ;}private static boolean tom_equal_term_TMethodList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TMethodList(Object t) { return  t instanceof tom.library.adt.bytecode.types.TMethodList ;}private static boolean tom_equal_term_TMethod(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TMethod(Object t) { return  t instanceof tom.library.adt.bytecode.types.TMethod ;}private static boolean tom_equal_term_TLabelList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TLabelList(Object t) { return  t instanceof tom.library.adt.bytecode.types.TLabelList ;}private static boolean tom_equal_term_TInstruction(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TInstruction(Object t) { return  t instanceof tom.library.adt.bytecode.types.TInstruction ;}private static boolean tom_equal_term_TValue(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TValue(Object t) { return  t instanceof tom.library.adt.bytecode.types.TValue ;}private static boolean tom_equal_term_TTryCatchBlockList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TTryCatchBlockList(Object t) { return  t instanceof tom.library.adt.bytecode.types.TTryCatchBlockList ;}private static boolean tom_equal_term_TMethodDescriptor(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TMethodDescriptor(Object t) { return  t instanceof tom.library.adt.bytecode.types.TMethodDescriptor ;}private static boolean tom_equal_term_TFieldDescriptor(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TFieldDescriptor(Object t) { return  t instanceof tom.library.adt.bytecode.types.TFieldDescriptor ;}private static boolean tom_equal_term_TTryCatchBlock(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TTryCatchBlock(Object t) { return  t instanceof tom.library.adt.bytecode.types.TTryCatchBlock ;}private static boolean tom_equal_term_TintList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TintList(Object t) { return  t instanceof tom.library.adt.bytecode.types.TintList ;}private static boolean tom_equal_term_THandler(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_THandler(Object t) { return  t instanceof tom.library.adt.bytecode.types.THandler ;}private static boolean tom_equal_term_TInstructionList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TInstructionList(Object t) { return  t instanceof tom.library.adt.bytecode.types.TInstructionList ;}private static boolean tom_equal_term_TLabel(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TLabel(Object t) { return  t instanceof tom.library.adt.bytecode.types.TLabel ;}private static boolean tom_equal_term_TLocalVariableList(Object t1, Object t2) { return  t1.equals(t2) ;}private static boolean tom_is_sort_TLocalVariableList(Object t) { return  t instanceof tom.library.adt.bytecode.types.TLocalVariableList ;}private static boolean tom_is_fun_sym_Anchor( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Anchor ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Anchor_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_Bipush( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Bipush ;}private static  int  tom_get_slot_Bipush_operand( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getoperand() ;}private static boolean tom_is_fun_sym_Sipush( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Sipush ;}private static  int  tom_get_slot_Sipush_operand( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getoperand() ;}private static boolean tom_is_fun_sym_Ldc( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Ldc ;}private static  tom.library.adt.bytecode.types.TValue  tom_get_slot_Ldc_cst( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getcst() ;}private static boolean tom_is_fun_sym_Iload( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Iload ;}private static  int  tom_get_slot_Iload_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Lload( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Lload ;}private static  int  tom_get_slot_Lload_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Fload( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Fload ;}private static  int  tom_get_slot_Fload_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Dload( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Dload ;}private static  int  tom_get_slot_Dload_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Aload( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Aload ;}private static  int  tom_get_slot_Aload_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Istore( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Istore ;}private static  int  tom_get_slot_Istore_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Lstore( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Lstore ;}private static  int  tom_get_slot_Lstore_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Fstore( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Fstore ;}private static  int  tom_get_slot_Fstore_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Dstore( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Dstore ;}private static  int  tom_get_slot_Dstore_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Astore( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Astore ;}private static  int  tom_get_slot_Astore_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Iinc( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Iinc ;}private static  int  tom_get_slot_Iinc_incr( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getincr() ;}private static  int  tom_get_slot_Iinc_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Ifeq( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Ifeq ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Ifeq_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_Ifne( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Ifne ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Ifne_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_Iflt( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Iflt ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Iflt_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_Ifge( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Ifge ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Ifge_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_Ifgt( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Ifgt ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Ifgt_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_Ifle( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Ifle ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Ifle_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_If_icmpeq( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpeq ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_If_icmpeq_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_If_icmpne( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpne ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_If_icmpne_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_If_icmplt( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.If_icmplt ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_If_icmplt_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_If_icmpge( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpge ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_If_icmpge_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_If_icmpgt( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpgt ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_If_icmpgt_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_If_icmple( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.If_icmple ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_If_icmple_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_If_acmpeq( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.If_acmpeq ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_If_acmpeq_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_If_acmpne( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.If_acmpne ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_If_acmpne_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_Goto( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Goto ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Goto_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_Jsr( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Jsr ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Jsr_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_Ret( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Ret ;}private static  int  tom_get_slot_Ret_var( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getvar() ;}private static boolean tom_is_fun_sym_Tableswitch( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Tableswitch ;}private static  int  tom_get_slot_Tableswitch_min( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getmin() ;}private static  int  tom_get_slot_Tableswitch_max( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getmax() ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Tableswitch_dflt( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getdflt() ;}private static  tom.library.adt.bytecode.types.TLabelList  tom_get_slot_Tableswitch_labels( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabels() ;}private static boolean tom_is_fun_sym_Lookupswitch( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Lookupswitch ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Lookupswitch_dflt( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getdflt() ;}private static  tom.library.adt.bytecode.types.TintList  tom_get_slot_Lookupswitch_keys( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getkeys() ;}private static  tom.library.adt.bytecode.types.TLabelList  tom_get_slot_Lookupswitch_labels( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabels() ;}private static boolean tom_is_fun_sym_Getstatic( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Getstatic ;}private static  String  tom_get_slot_Getstatic_owner( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getowner() ;}private static  String  tom_get_slot_Getstatic_name( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getname() ;}private static  tom.library.adt.bytecode.types.TFieldDescriptor  tom_get_slot_Getstatic_fieldDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getfieldDesc() ;}private static boolean tom_is_fun_sym_Putstatic( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Putstatic ;}private static  String  tom_get_slot_Putstatic_owner( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getowner() ;}private static  String  tom_get_slot_Putstatic_name( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getname() ;}private static  tom.library.adt.bytecode.types.TFieldDescriptor  tom_get_slot_Putstatic_fieldDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getfieldDesc() ;}private static boolean tom_is_fun_sym_Getfield( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Getfield ;}private static  String  tom_get_slot_Getfield_owner( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getowner() ;}private static  String  tom_get_slot_Getfield_name( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getname() ;}private static  tom.library.adt.bytecode.types.TFieldDescriptor  tom_get_slot_Getfield_fieldDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getfieldDesc() ;}private static boolean tom_is_fun_sym_Putfield( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Putfield ;}private static  String  tom_get_slot_Putfield_owner( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getowner() ;}private static  String  tom_get_slot_Putfield_name( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getname() ;}private static  tom.library.adt.bytecode.types.TFieldDescriptor  tom_get_slot_Putfield_fieldDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getfieldDesc() ;}private static boolean tom_is_fun_sym_Invokevirtual( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Invokevirtual ;}private static  String  tom_get_slot_Invokevirtual_owner( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getowner() ;}private static  String  tom_get_slot_Invokevirtual_name( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getname() ;}private static  tom.library.adt.bytecode.types.TMethodDescriptor  tom_get_slot_Invokevirtual_methodDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getmethodDesc() ;}private static boolean tom_is_fun_sym_Invokespecial( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Invokespecial ;}private static  String  tom_get_slot_Invokespecial_owner( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getowner() ;}private static  String  tom_get_slot_Invokespecial_name( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getname() ;}private static  tom.library.adt.bytecode.types.TMethodDescriptor  tom_get_slot_Invokespecial_methodDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getmethodDesc() ;}private static boolean tom_is_fun_sym_Invokestatic( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Invokestatic ;}private static  String  tom_get_slot_Invokestatic_owner( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getowner() ;}private static  String  tom_get_slot_Invokestatic_name( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getname() ;}private static  tom.library.adt.bytecode.types.TMethodDescriptor  tom_get_slot_Invokestatic_methodDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getmethodDesc() ;}private static boolean tom_is_fun_sym_Invokeinterface( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Invokeinterface ;}private static  String  tom_get_slot_Invokeinterface_owner( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getowner() ;}private static  String  tom_get_slot_Invokeinterface_name( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getname() ;}private static  tom.library.adt.bytecode.types.TMethodDescriptor  tom_get_slot_Invokeinterface_methodDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getmethodDesc() ;}private static boolean tom_is_fun_sym_New( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.New ;}private static  String  tom_get_slot_New_typeDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.gettypeDesc() ;}private static boolean tom_is_fun_sym_Newarray( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Newarray ;}private static  int  tom_get_slot_Newarray_operand( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getoperand() ;}private static boolean tom_is_fun_sym_Anewarray( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Anewarray ;}private static  String  tom_get_slot_Anewarray_typeDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.gettypeDesc() ;}private static boolean tom_is_fun_sym_Checkcast( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Checkcast ;}private static  String  tom_get_slot_Checkcast_typeDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.gettypeDesc() ;}private static boolean tom_is_fun_sym_Instanceof( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Instanceof ;}private static  String  tom_get_slot_Instanceof_typeDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.gettypeDesc() ;}private static boolean tom_is_fun_sym_Multianewarray( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Multianewarray ;}private static  String  tom_get_slot_Multianewarray_typeDesc( tom.library.adt.bytecode.types.TInstruction  t) { return  t.gettypeDesc() ;}private static  int  tom_get_slot_Multianewarray_dims( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getdims() ;}private static boolean tom_is_fun_sym_Ifnull( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Ifnull ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Ifnull_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_Ifnonnull( tom.library.adt.bytecode.types.TInstruction  t) { return  t instanceof tom.library.adt.bytecode.types.tinstruction.Ifnonnull ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_Ifnonnull_label( tom.library.adt.bytecode.types.TInstruction  t) { return  t.getlabel() ;}private static boolean tom_is_fun_sym_CatchHandler( tom.library.adt.bytecode.types.THandler  t) { return  t instanceof tom.library.adt.bytecode.types.thandler.CatchHandler ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_CatchHandler_handler( tom.library.adt.bytecode.types.THandler  t) { return  t.gethandler() ;}private static  String  tom_get_slot_CatchHandler_type( tom.library.adt.bytecode.types.THandler  t) { return  t.gettype() ;}private static boolean tom_is_fun_sym_FinallyHandler( tom.library.adt.bytecode.types.THandler  t) { return  t instanceof tom.library.adt.bytecode.types.thandler.FinallyHandler ;}private static  tom.library.adt.bytecode.types.TLabel  tom_get_slot_FinallyHandler_handler( tom.library.adt.bytecode.types.THandler  t) { return  t.gethandler() ;}private static boolean tom_is_fun_sym_ConsInstructionList( tom.library.adt.bytecode.types.TInstructionList  t) { return  t instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList ;}private static  tom.library.adt.bytecode.types.TInstruction  tom_get_slot_ConsInstructionList_HeadInstructionList( tom.library.adt.bytecode.types.TInstructionList  t) { return  t.getHeadInstructionList() ;}private static  tom.library.adt.bytecode.types.TInstructionList  tom_get_slot_ConsInstructionList_TailInstructionList( tom.library.adt.bytecode.types.TInstructionList  t) { return  t.getTailInstructionList() ;}private static boolean tom_is_fun_sym_MethodList( tom.library.adt.bytecode.types.TMethodList  t) { return  t instanceof tom.library.adt.bytecode.types.tmethodlist.ConsMethodList || t instanceof tom.library.adt.bytecode.types.tmethodlist.EmptyMethodList ;}private static  tom.library.adt.bytecode.types.TMethodList  tom_empty_list_MethodList() { return  tom.library.adt.bytecode.types.tmethodlist.EmptyMethodList.make() ; }private static  tom.library.adt.bytecode.types.TMethodList  tom_cons_list_MethodList( tom.library.adt.bytecode.types.TMethod  e,  tom.library.adt.bytecode.types.TMethodList  l) { return  tom.library.adt.bytecode.types.tmethodlist.ConsMethodList.make(e,l) ; }private static  tom.library.adt.bytecode.types.TMethod  tom_get_head_MethodList_TMethodList( tom.library.adt.bytecode.types.TMethodList  l) { return  l.getHeadMethodList() ;}private static  tom.library.adt.bytecode.types.TMethodList  tom_get_tail_MethodList_TMethodList( tom.library.adt.bytecode.types.TMethodList  l) { return  l.getTailMethodList() ;}private static boolean tom_is_empty_MethodList_TMethodList( tom.library.adt.bytecode.types.TMethodList  l) { return  l.isEmptyMethodList() ;}   private static   tom.library.adt.bytecode.types.TMethodList  tom_append_list_MethodList( tom.library.adt.bytecode.types.TMethodList l1,  tom.library.adt.bytecode.types.TMethodList  l2) {     if(tom_is_empty_MethodList_TMethodList(l1)) {       return l2;     } else if(tom_is_empty_MethodList_TMethodList(l2)) {       return l1;     } else if(tom_is_empty_MethodList_TMethodList(tom_get_tail_MethodList_TMethodList(l1))) {       return ( tom.library.adt.bytecode.types.TMethodList )tom_cons_list_MethodList(tom_get_head_MethodList_TMethodList(l1),l2);     } else {       return ( tom.library.adt.bytecode.types.TMethodList )tom_cons_list_MethodList(tom_get_head_MethodList_TMethodList(l1),tom_append_list_MethodList(tom_get_tail_MethodList_TMethodList(l1),l2));     }   }   private static   tom.library.adt.bytecode.types.TMethodList  tom_get_slice_MethodList( tom.library.adt.bytecode.types.TMethodList  begin,  tom.library.adt.bytecode.types.TMethodList  end, tom.library.adt.bytecode.types.TMethodList  tail) {     if(tom_equal_term_TMethodList(begin,end)) {       return tail;     } else {       return ( tom.library.adt.bytecode.types.TMethodList )tom_cons_list_MethodList(tom_get_head_MethodList_TMethodList(begin),( tom.library.adt.bytecode.types.TMethodList )tom_get_slice_MethodList(tom_get_tail_MethodList_TMethodList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_LabelList( tom.library.adt.bytecode.types.TLabelList  t) { return  t instanceof tom.library.adt.bytecode.types.tlabellist.ConsLabelList || t instanceof tom.library.adt.bytecode.types.tlabellist.EmptyLabelList ;}private static  tom.library.adt.bytecode.types.TLabelList  tom_empty_list_LabelList() { return  tom.library.adt.bytecode.types.tlabellist.EmptyLabelList.make() ; }private static  tom.library.adt.bytecode.types.TLabelList  tom_cons_list_LabelList( tom.library.adt.bytecode.types.TLabel  e,  tom.library.adt.bytecode.types.TLabelList  l) { return  tom.library.adt.bytecode.types.tlabellist.ConsLabelList.make(e,l) ; }private static  tom.library.adt.bytecode.types.TLabel  tom_get_head_LabelList_TLabelList( tom.library.adt.bytecode.types.TLabelList  l) { return  l.getHeadLabelList() ;}private static  tom.library.adt.bytecode.types.TLabelList  tom_get_tail_LabelList_TLabelList( tom.library.adt.bytecode.types.TLabelList  l) { return  l.getTailLabelList() ;}private static boolean tom_is_empty_LabelList_TLabelList( tom.library.adt.bytecode.types.TLabelList  l) { return  l.isEmptyLabelList() ;}   private static   tom.library.adt.bytecode.types.TLabelList  tom_append_list_LabelList( tom.library.adt.bytecode.types.TLabelList l1,  tom.library.adt.bytecode.types.TLabelList  l2) {     if(tom_is_empty_LabelList_TLabelList(l1)) {       return l2;     } else if(tom_is_empty_LabelList_TLabelList(l2)) {       return l1;     } else if(tom_is_empty_LabelList_TLabelList(tom_get_tail_LabelList_TLabelList(l1))) {       return ( tom.library.adt.bytecode.types.TLabelList )tom_cons_list_LabelList(tom_get_head_LabelList_TLabelList(l1),l2);     } else {       return ( tom.library.adt.bytecode.types.TLabelList )tom_cons_list_LabelList(tom_get_head_LabelList_TLabelList(l1),tom_append_list_LabelList(tom_get_tail_LabelList_TLabelList(l1),l2));     }   }   private static   tom.library.adt.bytecode.types.TLabelList  tom_get_slice_LabelList( tom.library.adt.bytecode.types.TLabelList  begin,  tom.library.adt.bytecode.types.TLabelList  end, tom.library.adt.bytecode.types.TLabelList  tail) {     if(tom_equal_term_TLabelList(begin,end)) {       return tail;     } else {       return ( tom.library.adt.bytecode.types.TLabelList )tom_cons_list_LabelList(tom_get_head_LabelList_TLabelList(begin),( tom.library.adt.bytecode.types.TLabelList )tom_get_slice_LabelList(tom_get_tail_LabelList_TLabelList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_TryCatchBlockList( tom.library.adt.bytecode.types.TTryCatchBlockList  t) { return  t instanceof tom.library.adt.bytecode.types.ttrycatchblocklist.ConsTryCatchBlockList || t instanceof tom.library.adt.bytecode.types.ttrycatchblocklist.EmptyTryCatchBlockList ;}private static  tom.library.adt.bytecode.types.TTryCatchBlockList  tom_empty_list_TryCatchBlockList() { return  tom.library.adt.bytecode.types.ttrycatchblocklist.EmptyTryCatchBlockList.make() ; }private static  tom.library.adt.bytecode.types.TTryCatchBlockList  tom_cons_list_TryCatchBlockList( tom.library.adt.bytecode.types.TTryCatchBlock  e,  tom.library.adt.bytecode.types.TTryCatchBlockList  l) { return  tom.library.adt.bytecode.types.ttrycatchblocklist.ConsTryCatchBlockList.make(e,l) ; }private static  tom.library.adt.bytecode.types.TTryCatchBlock  tom_get_head_TryCatchBlockList_TTryCatchBlockList( tom.library.adt.bytecode.types.TTryCatchBlockList  l) { return  l.getHeadTryCatchBlockList() ;}private static  tom.library.adt.bytecode.types.TTryCatchBlockList  tom_get_tail_TryCatchBlockList_TTryCatchBlockList( tom.library.adt.bytecode.types.TTryCatchBlockList  l) { return  l.getTailTryCatchBlockList() ;}private static boolean tom_is_empty_TryCatchBlockList_TTryCatchBlockList( tom.library.adt.bytecode.types.TTryCatchBlockList  l) { return  l.isEmptyTryCatchBlockList() ;}   private static   tom.library.adt.bytecode.types.TTryCatchBlockList  tom_append_list_TryCatchBlockList( tom.library.adt.bytecode.types.TTryCatchBlockList l1,  tom.library.adt.bytecode.types.TTryCatchBlockList  l2) {     if(tom_is_empty_TryCatchBlockList_TTryCatchBlockList(l1)) {       return l2;     } else if(tom_is_empty_TryCatchBlockList_TTryCatchBlockList(l2)) {       return l1;     } else if(tom_is_empty_TryCatchBlockList_TTryCatchBlockList(tom_get_tail_TryCatchBlockList_TTryCatchBlockList(l1))) {       return ( tom.library.adt.bytecode.types.TTryCatchBlockList )tom_cons_list_TryCatchBlockList(tom_get_head_TryCatchBlockList_TTryCatchBlockList(l1),l2);     } else {       return ( tom.library.adt.bytecode.types.TTryCatchBlockList )tom_cons_list_TryCatchBlockList(tom_get_head_TryCatchBlockList_TTryCatchBlockList(l1),tom_append_list_TryCatchBlockList(tom_get_tail_TryCatchBlockList_TTryCatchBlockList(l1),l2));     }   }   private static   tom.library.adt.bytecode.types.TTryCatchBlockList  tom_get_slice_TryCatchBlockList( tom.library.adt.bytecode.types.TTryCatchBlockList  begin,  tom.library.adt.bytecode.types.TTryCatchBlockList  end, tom.library.adt.bytecode.types.TTryCatchBlockList  tail) {     if(tom_equal_term_TTryCatchBlockList(begin,end)) {       return tail;     } else {       return ( tom.library.adt.bytecode.types.TTryCatchBlockList )tom_cons_list_TryCatchBlockList(tom_get_head_TryCatchBlockList_TTryCatchBlockList(begin),( tom.library.adt.bytecode.types.TTryCatchBlockList )tom_get_slice_TryCatchBlockList(tom_get_tail_TryCatchBlockList_TTryCatchBlockList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_intList( tom.library.adt.bytecode.types.TintList  t) { return  t instanceof tom.library.adt.bytecode.types.tintlist.ConsintList || t instanceof tom.library.adt.bytecode.types.tintlist.EmptyintList ;}private static  tom.library.adt.bytecode.types.TintList  tom_empty_list_intList() { return  tom.library.adt.bytecode.types.tintlist.EmptyintList.make() ; }private static  tom.library.adt.bytecode.types.TintList  tom_cons_list_intList( int  e,  tom.library.adt.bytecode.types.TintList  l) { return  tom.library.adt.bytecode.types.tintlist.ConsintList.make(e,l) ; }private static  int  tom_get_head_intList_TintList( tom.library.adt.bytecode.types.TintList  l) { return  l.getHeadintList() ;}private static  tom.library.adt.bytecode.types.TintList  tom_get_tail_intList_TintList( tom.library.adt.bytecode.types.TintList  l) { return  l.getTailintList() ;}private static boolean tom_is_empty_intList_TintList( tom.library.adt.bytecode.types.TintList  l) { return  l.isEmptyintList() ;}   private static   tom.library.adt.bytecode.types.TintList  tom_append_list_intList( tom.library.adt.bytecode.types.TintList l1,  tom.library.adt.bytecode.types.TintList  l2) {     if(tom_is_empty_intList_TintList(l1)) {       return l2;     } else if(tom_is_empty_intList_TintList(l2)) {       return l1;     } else if(tom_is_empty_intList_TintList(tom_get_tail_intList_TintList(l1))) {       return ( tom.library.adt.bytecode.types.TintList )tom_cons_list_intList(tom_get_head_intList_TintList(l1),l2);     } else {       return ( tom.library.adt.bytecode.types.TintList )tom_cons_list_intList(tom_get_head_intList_TintList(l1),tom_append_list_intList(tom_get_tail_intList_TintList(l1),l2));     }   }   private static   tom.library.adt.bytecode.types.TintList  tom_get_slice_intList( tom.library.adt.bytecode.types.TintList  begin,  tom.library.adt.bytecode.types.TintList  end, tom.library.adt.bytecode.types.TintList  tail) {     if(tom_equal_term_TintList(begin,end)) {       return tail;     } else {       return ( tom.library.adt.bytecode.types.TintList )tom_cons_list_intList(tom_get_head_intList_TintList(begin),( tom.library.adt.bytecode.types.TintList )tom_get_slice_intList(tom_get_tail_intList_TintList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_InstructionList( tom.library.adt.bytecode.types.TInstructionList  t) { return  t instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList || t instanceof tom.library.adt.bytecode.types.tinstructionlist.EmptyInstructionList ;}private static  tom.library.adt.bytecode.types.TInstructionList  tom_empty_list_InstructionList() { return  tom.library.adt.bytecode.types.tinstructionlist.EmptyInstructionList.make() ; }private static  tom.library.adt.bytecode.types.TInstructionList  tom_cons_list_InstructionList( tom.library.adt.bytecode.types.TInstruction  e,  tom.library.adt.bytecode.types.TInstructionList  l) { return  tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList.make(e,l) ; }private static  tom.library.adt.bytecode.types.TInstruction  tom_get_head_InstructionList_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  l) { return  l.getHeadInstructionList() ;}private static  tom.library.adt.bytecode.types.TInstructionList  tom_get_tail_InstructionList_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  l) { return  l.getTailInstructionList() ;}private static boolean tom_is_empty_InstructionList_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  l) { return  l.isEmptyInstructionList() ;}   private static   tom.library.adt.bytecode.types.TInstructionList  tom_append_list_InstructionList( tom.library.adt.bytecode.types.TInstructionList l1,  tom.library.adt.bytecode.types.TInstructionList  l2) {     if(tom_is_empty_InstructionList_TInstructionList(l1)) {       return l2;     } else if(tom_is_empty_InstructionList_TInstructionList(l2)) {       return l1;     } else if(tom_is_empty_InstructionList_TInstructionList(tom_get_tail_InstructionList_TInstructionList(l1))) {       return ( tom.library.adt.bytecode.types.TInstructionList )tom_cons_list_InstructionList(tom_get_head_InstructionList_TInstructionList(l1),l2);     } else {       return ( tom.library.adt.bytecode.types.TInstructionList )tom_cons_list_InstructionList(tom_get_head_InstructionList_TInstructionList(l1),tom_append_list_InstructionList(tom_get_tail_InstructionList_TInstructionList(l1),l2));     }   }   private static   tom.library.adt.bytecode.types.TInstructionList  tom_get_slice_InstructionList( tom.library.adt.bytecode.types.TInstructionList  begin,  tom.library.adt.bytecode.types.TInstructionList  end, tom.library.adt.bytecode.types.TInstructionList  tail) {     if(tom_equal_term_TInstructionList(begin,end)) {       return tail;     } else {       return ( tom.library.adt.bytecode.types.TInstructionList )tom_cons_list_InstructionList(tom_get_head_InstructionList_TInstructionList(begin),( tom.library.adt.bytecode.types.TInstructionList )tom_get_slice_InstructionList(tom_get_tail_InstructionList_TInstructionList(begin),end,tail));     }   }   private static boolean tom_is_fun_sym_LocalVariableList( tom.library.adt.bytecode.types.TLocalVariableList  t) { return  t instanceof tom.library.adt.bytecode.types.tlocalvariablelist.ConsLocalVariableList || t instanceof tom.library.adt.bytecode.types.tlocalvariablelist.EmptyLocalVariableList ;}private static  tom.library.adt.bytecode.types.TLocalVariableList  tom_empty_list_LocalVariableList() { return  tom.library.adt.bytecode.types.tlocalvariablelist.EmptyLocalVariableList.make() ; }private static  tom.library.adt.bytecode.types.TLocalVariableList  tom_cons_list_LocalVariableList( tom.library.adt.bytecode.types.TLocalVariable  e,  tom.library.adt.bytecode.types.TLocalVariableList  l) { return  tom.library.adt.bytecode.types.tlocalvariablelist.ConsLocalVariableList.make(e,l) ; }private static  tom.library.adt.bytecode.types.TLocalVariable  tom_get_head_LocalVariableList_TLocalVariableList( tom.library.adt.bytecode.types.TLocalVariableList  l) { return  l.getHeadLocalVariableList() ;}private static  tom.library.adt.bytecode.types.TLocalVariableList  tom_get_tail_LocalVariableList_TLocalVariableList( tom.library.adt.bytecode.types.TLocalVariableList  l) { return  l.getTailLocalVariableList() ;}private static boolean tom_is_empty_LocalVariableList_TLocalVariableList( tom.library.adt.bytecode.types.TLocalVariableList  l) { return  l.isEmptyLocalVariableList() ;}   private static   tom.library.adt.bytecode.types.TLocalVariableList  tom_append_list_LocalVariableList( tom.library.adt.bytecode.types.TLocalVariableList l1,  tom.library.adt.bytecode.types.TLocalVariableList  l2) {     if(tom_is_empty_LocalVariableList_TLocalVariableList(l1)) {       return l2;     } else if(tom_is_empty_LocalVariableList_TLocalVariableList(l2)) {       return l1;     } else if(tom_is_empty_LocalVariableList_TLocalVariableList(tom_get_tail_LocalVariableList_TLocalVariableList(l1))) {       return ( tom.library.adt.bytecode.types.TLocalVariableList )tom_cons_list_LocalVariableList(tom_get_head_LocalVariableList_TLocalVariableList(l1),l2);     } else {       return ( tom.library.adt.bytecode.types.TLocalVariableList )tom_cons_list_LocalVariableList(tom_get_head_LocalVariableList_TLocalVariableList(l1),tom_append_list_LocalVariableList(tom_get_tail_LocalVariableList_TLocalVariableList(l1),l2));     }   }   private static   tom.library.adt.bytecode.types.TLocalVariableList  tom_get_slice_LocalVariableList( tom.library.adt.bytecode.types.TLocalVariableList  begin,  tom.library.adt.bytecode.types.TLocalVariableList  end, tom.library.adt.bytecode.types.TLocalVariableList  tail) {     if(tom_equal_term_TLocalVariableList(begin,end)) {       return tail;     } else {       return ( tom.library.adt.bytecode.types.TLocalVariableList )tom_cons_list_LocalVariableList(tom_get_head_LocalVariableList_TLocalVariableList(begin),( tom.library.adt.bytecode.types.TLocalVariableList )tom_get_slice_LocalVariableList(tom_get_tail_LocalVariableList_TLocalVariableList(begin),end,tail));     }   }    /* Generated by TOM (version 2.5rc2): Do not edit this file *//* Generated by TOM (version 2.5rc2): Do not edit this file */private static boolean tom_equal_term_Strategy(Object t1, Object t2) { return t1.equals(t2);}private static boolean tom_is_sort_Strategy(Object t) { return  t instanceof tom.library.sl.Strategy ;}/* Generated by TOM (version 2.5rc2): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_mu( tom.library.sl.Strategy  var,  tom.library.sl.Strategy  v) { return  new tom.library.sl.Mu(var,v) ; }private static  tom.library.sl.Strategy  tom_make_MuVar( String  name) { return  new tom.library.sl.MuVar(name) ; }private static  tom.library.sl.Strategy  tom_make_Identity() { return  new tom.library.sl.Identity() ; }private static  tom.library.sl.Strategy  tom_make_All( tom.library.sl.Strategy  v) { return  new tom.library.sl.All(v) ; }private static boolean tom_is_fun_sym_Sequence( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.Sequence) ;}private static  tom.library.sl.Strategy  tom_empty_list_Sequence() { return  null ; }private static  tom.library.sl.Strategy  tom_cons_list_Sequence( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  (tail==null)?head:new tom.library.sl.Sequence(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_Sequence_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.THEN) ;}private static boolean tom_is_empty_Sequence_Strategy( tom.library.sl.Strategy  t) { return  t == null ;}   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_Sequence_Strategy(l1)) {       return l2;     } else if(tom_is_empty_Sequence_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_Sequence(l1)) {       if(tom_is_empty_Sequence_Strategy(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()))) {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_head_Sequence_Strategy(l1):l1),tom_append_list_Sequence(((tom_is_fun_sym_Sequence(l1))?tom_get_tail_Sequence_Strategy(l1):tom_empty_list_Sequence()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_head_Sequence_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((tom_is_fun_sym_Sequence(begin))?tom_get_tail_Sequence_Strategy(begin):tom_empty_list_Sequence()),end,tail));     }   }   private static boolean tom_is_fun_sym_Choice( tom.library.sl.Strategy  t) { return  (t instanceof tom.library.sl.Choice) ;}private static  tom.library.sl.Strategy  tom_empty_list_Choice() { return  null ; }private static  tom.library.sl.Strategy  tom_cons_list_Choice( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  (tail==null)?head:new tom.library.sl.Choice(head,tail) ; }private static  tom.library.sl.Strategy  tom_get_head_Choice_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Choice.FIRST) ;}private static  tom.library.sl.Strategy  tom_get_tail_Choice_Strategy( tom.library.sl.Strategy  t) { return  (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Choice.THEN) ;}private static boolean tom_is_empty_Choice_Strategy( tom.library.sl.Strategy  t) { return  t ==null ;}   private static   tom.library.sl.Strategy  tom_append_list_Choice( tom.library.sl.Strategy l1,  tom.library.sl.Strategy  l2) {     if(tom_is_empty_Choice_Strategy(l1)) {       return l2;     } else if(tom_is_empty_Choice_Strategy(l2)) {       return l1;     } else if(tom_is_fun_sym_Choice(l1)) {       if(tom_is_empty_Choice_Strategy(((tom_is_fun_sym_Choice(l1))?tom_get_tail_Choice_Strategy(l1):tom_empty_list_Choice()))) {         return ( tom.library.sl.Strategy )tom_cons_list_Choice(((tom_is_fun_sym_Choice(l1))?tom_get_head_Choice_Strategy(l1):l1),l2);       } else {         return ( tom.library.sl.Strategy )tom_cons_list_Choice(((tom_is_fun_sym_Choice(l1))?tom_get_head_Choice_Strategy(l1):l1),tom_append_list_Choice(((tom_is_fun_sym_Choice(l1))?tom_get_tail_Choice_Strategy(l1):tom_empty_list_Choice()),l2));       }     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Choice(l1, l2);     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Choice( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if(tom_equal_term_Strategy(begin,end)) {       return tail;     } else {       return ( tom.library.sl.Strategy )tom_cons_list_Choice(((tom_is_fun_sym_Choice(begin))?tom_get_head_Choice_Strategy(begin):begin),( tom.library.sl.Strategy )tom_get_slice_Choice(((tom_is_fun_sym_Choice(begin))?tom_get_tail_Choice_Strategy(begin):tom_empty_list_Choice()),end,tail));     }   }    /* Generated by TOM (version 2.5rc2): Do not edit this file */ /* Generated by TOM (version 2.5rc2): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_Try( tom.library.sl.Strategy  v) { return tom_cons_list_Choice(v,tom_cons_list_Choice(tom_make_Identity(),tom_empty_list_Choice())) ; }private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence()))) ; }   /* Generated by TOM (version 2.5rc2): Do not edit this file */private static boolean tom_equal_term_Map(Object l1, Object l2) { return  l1.equals(l2) ;}private static boolean tom_is_sort_Map(Object t) { return  t instanceof java.util.Map ;} private static class BuildLabelMap extends  tom.library.adt.bytecode.BytecodeBasicStrategy  {private  java.util.Map  m; public BuildLabelMap( java.util.Map  m) { super(tom_make_Identity());this.m=m;}public  java.util.Map  getm() { return m;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TInstructionList(tom__arg)) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch483NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);if (tom_is_fun_sym_ConsInstructionList(tomMatch483NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch483NameNumber_freshVar_0=tom_get_slot_ConsInstructionList_HeadInstructionList(tomMatch483NameNumberfreshSubject_1);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch483NameNumber_freshVar_1=tom_get_slot_ConsInstructionList_TailInstructionList(tomMatch483NameNumberfreshSubject_1);if (tom_is_fun_sym_Anchor(tomMatch483NameNumber_freshVar_0)) {{  tom.library.adt.bytecode.types.TLabel  tomMatch483NameNumber_freshVar_2=tom_get_slot_Anchor_label(tomMatch483NameNumber_freshVar_0);if ( true ) {       m.put(tomMatch483NameNumber_freshVar_2, getEnvironment().getPosition());     }}}}}}}}return super.visit_TInstructionList(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_BuildLabelMap( java.util.Map  t0) { return new BuildLabelMap(t0); }private static class OneCfg extends  tom.library.adt.bytecode.BytecodeBasicStrategy  {private  tom.library.sl.Strategy  s; private  java.util.Map  m; public OneCfg( tom.library.sl.Strategy  s,  java.util.Map  m) { super(tom_make_Identity());this.s=s;this.m=m;}public  tom.library.sl.Strategy  gets() { return s;}public  java.util.Map  getm() { return m;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 2; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);case 1: return gets();default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);case 1: s = ( tom.library.sl.Strategy )child; return this;default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TInstructionList(tom__arg)) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch485NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);if (tom_is_fun_sym_ConsInstructionList(tomMatch485NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch485NameNumber_freshVar_0=tom_get_slot_ConsInstructionList_HeadInstructionList(tomMatch485NameNumberfreshSubject_1);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch485NameNumber_freshVar_1=tom_get_slot_ConsInstructionList_TailInstructionList(tomMatch485NameNumberfreshSubject_1);if (tom_is_fun_sym_Goto(tomMatch485NameNumber_freshVar_0)) {{  tom.library.adt.bytecode.types.TLabel  tomMatch485NameNumber_freshVar_2=tom_get_slot_Goto_label(tomMatch485NameNumber_freshVar_0);if ( true ) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch485NameNumber_freshVar_2));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));       } else {                 getEnvironment().followPathLocal(current.sub(p));       }       return (TInstructionList) getEnvironment().getSubject();     }}}}}}if (tom_is_fun_sym_ConsInstructionList(tomMatch485NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch485NameNumber_freshVar_3=tom_get_slot_ConsInstructionList_HeadInstructionList(tomMatch485NameNumberfreshSubject_1);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch485NameNumber_freshVar_4=tom_get_slot_ConsInstructionList_TailInstructionList(tomMatch485NameNumberfreshSubject_1);{ boolean tomMatch485NameNumber_freshVar_6= false ;{  tom.library.adt.bytecode.types.TLabel  tomMatch485NameNumber_freshVar_5= null ;if (tom_is_fun_sym_Ifeq(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_Ifeq_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifne(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_Ifne_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Iflt(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_Iflt_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifge(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_Ifge_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifgt(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_Ifgt_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifle(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_Ifle_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmpeq(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_If_icmpeq_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmpne(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_If_icmpne_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmplt(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_If_icmplt_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmpge(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_If_icmpge_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmpgt(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_If_icmpgt_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmple(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_If_icmple_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_acmpeq(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_If_acmpeq_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_acmpne(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_If_acmpne_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Jsr(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_Jsr_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifnull(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_Ifnull_label(tomMatch485NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifnonnull(tomMatch485NameNumber_freshVar_3)) {{tomMatch485NameNumber_freshVar_6= true ;tomMatch485NameNumber_freshVar_5=tom_get_slot_Ifnonnull_label(tomMatch485NameNumber_freshVar_3);}}}}}}}}}}}}}}}}}}if ((tomMatch485NameNumber_freshVar_6 ==  true )) {if ( true ) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch485NameNumber_freshVar_5));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));         return (TInstructionList) getEnvironment().getSubject();       } else {                 getEnvironment().followPathLocal(current.sub(p));       }     }}}}}}}if (tom_is_fun_sym_ConsInstructionList(tomMatch485NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch485NameNumber_freshVar_7=tom_get_slot_ConsInstructionList_HeadInstructionList(tomMatch485NameNumberfreshSubject_1);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch485NameNumber_freshVar_8=tom_get_slot_ConsInstructionList_TailInstructionList(tomMatch485NameNumberfreshSubject_1);{ boolean tomMatch485NameNumber_freshVar_11= false ;{  tom.library.adt.bytecode.types.TLabelList  tomMatch485NameNumber_freshVar_10= null ;{  tom.library.adt.bytecode.types.TLabel  tomMatch485NameNumber_freshVar_9= null ;if (tom_is_fun_sym_Tableswitch(tomMatch485NameNumber_freshVar_7)) {{tomMatch485NameNumber_freshVar_11= true ;tomMatch485NameNumber_freshVar_9=tom_get_slot_Tableswitch_dflt(tomMatch485NameNumber_freshVar_7);tomMatch485NameNumber_freshVar_10=tom_get_slot_Tableswitch_labels(tomMatch485NameNumber_freshVar_7);}} else {if (tom_is_fun_sym_Lookupswitch(tomMatch485NameNumber_freshVar_7)) {{tomMatch485NameNumber_freshVar_11= true ;tomMatch485NameNumber_freshVar_9=tom_get_slot_Lookupswitch_dflt(tomMatch485NameNumber_freshVar_7);tomMatch485NameNumber_freshVar_10=tom_get_slot_Lookupswitch_labels(tomMatch485NameNumber_freshVar_7);}}}if ((tomMatch485NameNumber_freshVar_11 ==  true )) {if ( true ) {       TLabelList labelList = tomMatch485NameNumber_freshVar_10;       if (tom_is_sort_TLabelList(labelList)) {{  tom.library.adt.bytecode.types.TLabelList  tomMatch484NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TLabelList )labelList);if (tom_is_fun_sym_LabelList(tomMatch484NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TLabelList  tomMatch484NameNumber_freshVar_0=tomMatch484NameNumberfreshSubject_1;{  tom.library.adt.bytecode.types.TLabelList  tomMatch484NameNumber_begin_2=tomMatch484NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TLabelList  tomMatch484NameNumber_end_3=tomMatch484NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TLabelList  tomMatch484NameNumber_freshVar_1=tomMatch484NameNumber_end_3;if (!(tom_is_empty_LabelList_TLabelList(tomMatch484NameNumber_freshVar_1))) {{  tom.library.adt.bytecode.types.TLabelList  tomMatch484NameNumber_freshVar_4=tom_get_tail_LabelList_TLabelList(tomMatch484NameNumber_freshVar_1);if ( true ) {           tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tom_get_head_LabelList_TLabelList(tomMatch484NameNumber_freshVar_1)));           tom.library.sl.Position current = getEnvironment().getPosition();           getEnvironment().followPath(p.sub(current));           s.visit(getEnvironment());           if(getEnvironment().getStatus() == Environment.SUCCESS) {             getEnvironment().followPath(current.sub(p));             return (TInstructionList) getEnvironment().getSubject();           } else {                         getEnvironment().followPathLocal(current.sub(p));           }         }}}}if (tom_is_empty_LabelList_TLabelList(tomMatch484NameNumber_end_3)) {tomMatch484NameNumber_end_3=tomMatch484NameNumber_begin_2;} else {tomMatch484NameNumber_end_3=tom_get_tail_LabelList_TLabelList(tomMatch484NameNumber_end_3);}}} while(!(tom_equal_term_TLabelList(tomMatch484NameNumber_end_3, tomMatch484NameNumber_begin_2)));}}}}}}       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch485NameNumber_freshVar_9));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));         return (TInstructionList) getEnvironment().getSubject();       } else {                 getEnvironment().followPathLocal(current.sub(p));       }      }}}}}}}}if (tom_is_fun_sym_ConsInstructionList(tomMatch485NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch485NameNumber_freshVar_12=tom_get_slot_ConsInstructionList_HeadInstructionList(tomMatch485NameNumberfreshSubject_1);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch485NameNumber_freshVar_13=tom_get_slot_ConsInstructionList_TailInstructionList(tomMatch485NameNumberfreshSubject_1);{ boolean tomMatch485NameNumber_freshVar_15= false ;if (tom_is_fun_sym_InstructionList(tomMatch485NameNumber_freshVar_13)) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch485NameNumber_freshVar_14=tomMatch485NameNumber_freshVar_13;if (tom_is_empty_InstructionList_TInstructionList(tomMatch485NameNumber_freshVar_14)) {tomMatch485NameNumber_freshVar_15= true ;}}}if ((tomMatch485NameNumber_freshVar_15 ==  false )) {if ( true ) {       getEnvironment().down(2);       s.visit(getEnvironment());       getEnvironment().up();     }}}}}}}}return super.visit_TInstructionList(tom__arg); }}private static class AllCfg extends  tom.library.adt.bytecode.BytecodeBasicStrategy  {private  tom.library.sl.Strategy  s; private  java.util.Map  m; public AllCfg( tom.library.sl.Strategy  s,  java.util.Map  m) { super(tom_make_Identity());this.s=s;this.m=m;}public  tom.library.sl.Strategy  gets() { return s;}public  java.util.Map  getm() { return m;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 2; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);case 1: return gets();default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);case 1: s = ( tom.library.sl.Strategy )child; return this;default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TInstructionList(tom__arg)) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch487NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);if (tom_is_fun_sym_ConsInstructionList(tomMatch487NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch487NameNumber_freshVar_0=tom_get_slot_ConsInstructionList_HeadInstructionList(tomMatch487NameNumberfreshSubject_1);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch487NameNumber_freshVar_1=tom_get_slot_ConsInstructionList_TailInstructionList(tomMatch487NameNumberfreshSubject_1);if (tom_is_fun_sym_Goto(tomMatch487NameNumber_freshVar_0)) {{  tom.library.adt.bytecode.types.TLabel  tomMatch487NameNumber_freshVar_2=tom_get_slot_Goto_label(tomMatch487NameNumber_freshVar_0);if ( true ) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch487NameNumber_freshVar_2));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));       } else {                 getEnvironment().followPathLocal(current.sub(p));       }                return (TInstructionList) getEnvironment().getSubject();     }}}}}}if (tom_is_fun_sym_ConsInstructionList(tomMatch487NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch487NameNumber_freshVar_3=tom_get_slot_ConsInstructionList_HeadInstructionList(tomMatch487NameNumberfreshSubject_1);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch487NameNumber_freshVar_4=tom_get_slot_ConsInstructionList_TailInstructionList(tomMatch487NameNumberfreshSubject_1);{ boolean tomMatch487NameNumber_freshVar_6= false ;{  tom.library.adt.bytecode.types.TLabel  tomMatch487NameNumber_freshVar_5= null ;if (tom_is_fun_sym_Ifeq(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_Ifeq_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifne(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_Ifne_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Iflt(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_Iflt_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifge(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_Ifge_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifgt(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_Ifgt_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifle(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_Ifle_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmpeq(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_If_icmpeq_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmpne(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_If_icmpne_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmplt(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_If_icmplt_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmpge(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_If_icmpge_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmpgt(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_If_icmpgt_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_icmple(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_If_icmple_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_acmpeq(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_If_acmpeq_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_If_acmpne(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_If_acmpne_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Jsr(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_Jsr_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifnull(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_Ifnull_label(tomMatch487NameNumber_freshVar_3);}} else {if (tom_is_fun_sym_Ifnonnull(tomMatch487NameNumber_freshVar_3)) {{tomMatch487NameNumber_freshVar_6= true ;tomMatch487NameNumber_freshVar_5=tom_get_slot_Ifnonnull_label(tomMatch487NameNumber_freshVar_3);}}}}}}}}}}}}}}}}}}if ((tomMatch487NameNumber_freshVar_6 ==  true )) {if ( true ) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch487NameNumber_freshVar_5));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));       } else {                 getEnvironment().followPathLocal(current.sub(p));       }              }}}}}}}if (tom_is_fun_sym_ConsInstructionList(tomMatch487NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch487NameNumber_freshVar_7=tom_get_slot_ConsInstructionList_HeadInstructionList(tomMatch487NameNumberfreshSubject_1);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch487NameNumber_freshVar_8=tom_get_slot_ConsInstructionList_TailInstructionList(tomMatch487NameNumberfreshSubject_1);{ boolean tomMatch487NameNumber_freshVar_11= false ;{  tom.library.adt.bytecode.types.TLabelList  tomMatch487NameNumber_freshVar_10= null ;{  tom.library.adt.bytecode.types.TLabel  tomMatch487NameNumber_freshVar_9= null ;if (tom_is_fun_sym_Tableswitch(tomMatch487NameNumber_freshVar_7)) {{tomMatch487NameNumber_freshVar_11= true ;tomMatch487NameNumber_freshVar_9=tom_get_slot_Tableswitch_dflt(tomMatch487NameNumber_freshVar_7);tomMatch487NameNumber_freshVar_10=tom_get_slot_Tableswitch_labels(tomMatch487NameNumber_freshVar_7);}} else {if (tom_is_fun_sym_Lookupswitch(tomMatch487NameNumber_freshVar_7)) {{tomMatch487NameNumber_freshVar_11= true ;tomMatch487NameNumber_freshVar_9=tom_get_slot_Lookupswitch_dflt(tomMatch487NameNumber_freshVar_7);tomMatch487NameNumber_freshVar_10=tom_get_slot_Lookupswitch_labels(tomMatch487NameNumber_freshVar_7);}}}if ((tomMatch487NameNumber_freshVar_11 ==  true )) {if ( true ) {       TLabelList labelList = tomMatch487NameNumber_freshVar_10;       if (tom_is_sort_TLabelList(labelList)) {{  tom.library.adt.bytecode.types.TLabelList  tomMatch486NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TLabelList )labelList);if (tom_is_fun_sym_LabelList(tomMatch486NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TLabelList  tomMatch486NameNumber_freshVar_0=tomMatch486NameNumberfreshSubject_1;{  tom.library.adt.bytecode.types.TLabelList  tomMatch486NameNumber_begin_2=tomMatch486NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TLabelList  tomMatch486NameNumber_end_3=tomMatch486NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TLabelList  tomMatch486NameNumber_freshVar_1=tomMatch486NameNumber_end_3;if (!(tom_is_empty_LabelList_TLabelList(tomMatch486NameNumber_freshVar_1))) {{  tom.library.adt.bytecode.types.TLabelList  tomMatch486NameNumber_freshVar_4=tom_get_tail_LabelList_TLabelList(tomMatch486NameNumber_freshVar_1);if ( true ) {           tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tom_get_head_LabelList_TLabelList(tomMatch486NameNumber_freshVar_1)));           tom.library.sl.Position current = getEnvironment().getPosition();           getEnvironment().followPath(current.sub(p));           s.visit(getEnvironment());           if(getEnvironment().getStatus() == Environment.SUCCESS) {             getEnvironment().followPath(current.sub(p));           } else {                         getEnvironment().followPathLocal(current.sub(p));           }              }}}}if (tom_is_empty_LabelList_TLabelList(tomMatch486NameNumber_end_3)) {tomMatch486NameNumber_end_3=tomMatch486NameNumber_begin_2;} else {tomMatch486NameNumber_end_3=tom_get_tail_LabelList_TLabelList(tomMatch486NameNumber_end_3);}}} while(!(tom_equal_term_TLabelList(tomMatch486NameNumber_end_3, tomMatch486NameNumber_begin_2)));}}}}}}       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch487NameNumber_freshVar_9));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));       } else {                 getEnvironment().followPathLocal(current.sub(p));       }     }}}}}}}}if (tom_is_fun_sym_ConsInstructionList(tomMatch487NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch487NameNumber_freshVar_12=tom_get_slot_ConsInstructionList_HeadInstructionList(tomMatch487NameNumberfreshSubject_1);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch487NameNumber_freshVar_13=tom_get_slot_ConsInstructionList_TailInstructionList(tomMatch487NameNumberfreshSubject_1);{ boolean tomMatch487NameNumber_freshVar_15= false ;if (tom_is_fun_sym_InstructionList(tomMatch487NameNumber_freshVar_13)) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch487NameNumber_freshVar_14=tomMatch487NameNumber_freshVar_13;if (tom_is_empty_InstructionList_TInstructionList(tomMatch487NameNumber_freshVar_14)) {tomMatch487NameNumber_freshVar_15= true ;}}}if ((tomMatch487NameNumber_freshVar_15 ==  false )) {if ( true ) {       getEnvironment().down(2);       s.visit(getEnvironment());       getEnvironment().up();     }}}}}}}}return super.visit_TInstructionList(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_AllCfg( tom.library.sl.Strategy  t0,  java.util.Map  t1) { return new AllCfg(t0,t1); }private static class Mark extends  tom.library.adt.bytecode.BytecodeBasicStrategy  {private  java.util.Map  map; public Mark( java.util.Map  map) { super(tom_make_Identity());this.map=map;}public  java.util.Map  getmap() { return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TInstructionList(tom__arg)) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch488NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch488NameNumber_freshVar_0=tomMatch488NameNumberfreshSubject_1;{  tom.library.adt.bytecode.types.TInstructionList  tom_c=tomMatch488NameNumber_freshVar_0;if ( true ) {       Object o = map.get(tom_c);       int value = 1;       if(o != null)         value = ((Integer)o).intValue() + 1;       map.put(tom_c, new Integer(value));     }}}}}return super.visit_TInstructionList(tom__arg); }}private static class UnMark extends  tom.library.adt.bytecode.BytecodeBasicStrategy  {private  java.util.Map  map; public UnMark( java.util.Map  map) { super(tom_make_Identity());this.map=map;}public  java.util.Map  getmap() { return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TInstructionList(tom__arg)) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch489NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch489NameNumber_freshVar_0=tomMatch489NameNumberfreshSubject_1;{  tom.library.adt.bytecode.types.TInstructionList  tom_c=tomMatch489NameNumber_freshVar_0;if ( true ) {       Object o = map.get(tom_c);       if(o == null) {         throw new tom.library.sl.VisitFailure();       }       int value = ((Integer)o).intValue() - 1;       map.put(tom_c, new Integer(value));     }}}}}return super.visit_TInstructionList(tom__arg); }}private static class IsMarked extends  tom.library.adt.bytecode.BytecodeBasicStrategy  {private  java.util.Map  map; public IsMarked( java.util.Map  map) { super(tom_make_Identity());this.map=map;}public  java.util.Map  getmap() { return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TInstructionList(tom__arg)) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch490NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch490NameNumber_freshVar_0=tomMatch490NameNumberfreshSubject_1;if ( true ) {       Object o = map.get(tomMatch490NameNumber_freshVar_0);       if(o == null || ((Integer)o).intValue() <= 0)         throw new tom.library.sl.VisitFailure();     }}}}return super.visit_TInstructionList(tom__arg); }}  private static boolean tom_is_sort_Writer(Object t) { return 




 t instanceof java.io.Writer ;}


  /**
   * Returns the dot node id of the given TInstructionList.
   * @param ins the instruction.
   * @return the id.
   */
  private static String getDotId(TInstructionList ins) {
    return ("insid" + ins.hashCode()).replace('-', 'm');
  }

  /**
   * Returns the dot node id of the given TTryCatchBlock.
   * @param bl the try/catch block.
   * @return the id.
   */
  private static String getDotId(TTryCatchBlock bl) {
    return ("blockid" + bl.hashCode()).replace('-', 'm');
  }

  /**
   * Returns the dot node id of the given TLocalVariable.
   * @param the local variable.
   * @return the id.
   */
  private static String getDotId(TLocalVariable var) {
    return ("varid" + var.hashCode()).replace('-', 'm');
  }

  /**
   * Cleans the given string to prevent dot compilation problems.
   * (ex: replace the character '"' with the string "\"").
   * @param s the string to be cleaned.
   * @return the cleaned string.
   */
  private static String clean(String s) {
    return s.replaceAll("\\\"", "\\\\\\\"");
  }

  /**
   * Prints the current instruction node with a suitable label.
   * @param out the writer to be used for the dot output.
   */
  private static class PrintDotNode extends  tom.library.adt.bytecode.BytecodeBasicStrategy  {private java.io.Writer out; public PrintDotNode(java.io.Writer out) { super(tom_make_Identity());this.out=out;}public java.io.Writer getout() { return out;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TInstructionList(tom__arg)) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch491NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch491NameNumber_freshVar_0=tomMatch491NameNumberfreshSubject_1;if (tom_is_fun_sym_ConsInstructionList(tomMatch491NameNumber_freshVar_0)) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch491NameNumber_freshVar_1=tom_get_slot_ConsInstructionList_HeadInstructionList(tomMatch491NameNumber_freshVar_0);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch491NameNumber_freshVar_2=tom_get_slot_ConsInstructionList_TailInstructionList(tomMatch491NameNumber_freshVar_0);if ( true ) {


        String id = getDotId(tomMatch491NameNumber_freshVar_0);
        printDotInstruction(tomMatch491NameNumber_freshVar_1, id, out);
      }}}}}}}return super.visit_TInstructionList(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_PrintDotNode(java.io.Writer t0) { return new PrintDotNode(t0); }



  /**
   * Prints the given instruction with a suitable label and id.
   * @param ins the instruction to be printed.
   * @param id the id of the dot node.
   * @param out the writer to be used for the dot output.
   */
  private static void printDotInstruction(TInstruction ins, String id, Writer out) {
    try {
      if (tom_is_sort_TInstruction(ins)) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch493NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);{ boolean tomMatch493NameNumber_freshVar_1= false ;{  int  tomMatch493NameNumber_freshVar_0= 0 ;if (tom_is_fun_sym_Bipush(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_1= true ;tomMatch493NameNumber_freshVar_0=tom_get_slot_Bipush_operand(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Sipush(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_1= true ;tomMatch493NameNumber_freshVar_0=tom_get_slot_Sipush_operand(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Newarray(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_1= true ;tomMatch493NameNumber_freshVar_0=tom_get_slot_Newarray_operand(tomMatch493NameNumberfreshSubject_1);}}}}if ((tomMatch493NameNumber_freshVar_1 ==  true )) {if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.5rc2): Do not edit this file */+ins.symbolName()+"\\noperand : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+Integer.toString(tomMatch493NameNumber_freshVar_0)+"\"];\n              "

);
          return;
        }}}}if (tom_is_fun_sym_Multianewarray(tomMatch493NameNumberfreshSubject_1)) {{  String  tomMatch493NameNumber_freshVar_2=tom_get_slot_Multianewarray_typeDesc(tomMatch493NameNumberfreshSubject_1);{  int  tomMatch493NameNumber_freshVar_3=tom_get_slot_Multianewarray_dims(tomMatch493NameNumberfreshSubject_1);if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.5rc2): Do not edit this file */+ins.symbolName()+"\\ntypeDesc : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+tomMatch493NameNumber_freshVar_2+"\\ndims : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+Integer.toString(tomMatch493NameNumber_freshVar_3)+"\"];\n              "

);
          return;
        }}}}if (tom_is_fun_sym_Ldc(tomMatch493NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TValue  tomMatch493NameNumber_freshVar_4=tom_get_slot_Ldc_cst(tomMatch493NameNumberfreshSubject_1);if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.5rc2): Do not edit this file */+ins.symbolName()+"\\ncst : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+clean(tomMatch493NameNumber_freshVar_4.toString())+"\"];\n              "

);
          return;
        }}}{ boolean tomMatch493NameNumber_freshVar_6= false ;{  int  tomMatch493NameNumber_freshVar_5= 0 ;if (tom_is_fun_sym_Iload(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_6= true ;tomMatch493NameNumber_freshVar_5=tom_get_slot_Iload_var(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Lload(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_6= true ;tomMatch493NameNumber_freshVar_5=tom_get_slot_Lload_var(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Fload(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_6= true ;tomMatch493NameNumber_freshVar_5=tom_get_slot_Fload_var(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Dload(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_6= true ;tomMatch493NameNumber_freshVar_5=tom_get_slot_Dload_var(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Aload(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_6= true ;tomMatch493NameNumber_freshVar_5=tom_get_slot_Aload_var(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Istore(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_6= true ;tomMatch493NameNumber_freshVar_5=tom_get_slot_Istore_var(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Lstore(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_6= true ;tomMatch493NameNumber_freshVar_5=tom_get_slot_Lstore_var(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Fstore(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_6= true ;tomMatch493NameNumber_freshVar_5=tom_get_slot_Fstore_var(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Dstore(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_6= true ;tomMatch493NameNumber_freshVar_5=tom_get_slot_Dstore_var(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Astore(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_6= true ;tomMatch493NameNumber_freshVar_5=tom_get_slot_Astore_var(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Ret(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_6= true ;tomMatch493NameNumber_freshVar_5=tom_get_slot_Ret_var(tomMatch493NameNumberfreshSubject_1);}}}}}}}}}}}}if ((tomMatch493NameNumber_freshVar_6 ==  true )) {if ( true ) {




          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.5rc2): Do not edit this file */+ins.symbolName()+"\\nvar : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+Integer.toString(tomMatch493NameNumber_freshVar_5)+"\"];\n              "

);
          return;
        }}}}if (tom_is_fun_sym_Iinc(tomMatch493NameNumberfreshSubject_1)) {{  int  tomMatch493NameNumber_freshVar_7=tom_get_slot_Iinc_incr(tomMatch493NameNumberfreshSubject_1);{  int  tomMatch493NameNumber_freshVar_8=tom_get_slot_Iinc_var(tomMatch493NameNumberfreshSubject_1);if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.5rc2): Do not edit this file */+ins.symbolName()+"\\nincr : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+Integer.toString(tomMatch493NameNumber_freshVar_7)+"\\nvar : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+Integer.toString(tomMatch493NameNumber_freshVar_8)+"\"];\n              "

);
          return;
        }}}}if (tom_is_fun_sym_Tableswitch(tomMatch493NameNumberfreshSubject_1)) {{  int  tomMatch493NameNumber_freshVar_9=tom_get_slot_Tableswitch_min(tomMatch493NameNumberfreshSubject_1);{  int  tomMatch493NameNumber_freshVar_10=tom_get_slot_Tableswitch_max(tomMatch493NameNumberfreshSubject_1);if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.5rc2): Do not edit this file */+ins.symbolName()+"\\nmin : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+tomMatch493NameNumber_freshVar_9+"\\nmax : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+tomMatch493NameNumber_freshVar_10+"\"];\n              "

);
          return;
        }}}}if (tom_is_fun_sym_Lookupswitch(tomMatch493NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TintList  tomMatch493NameNumber_freshVar_11=tom_get_slot_Lookupswitch_keys(tomMatch493NameNumberfreshSubject_1);{  tom.library.adt.bytecode.types.TintList  tom_keys=tomMatch493NameNumber_freshVar_11;if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.5rc2): Do not edit this file */+ins.symbolName()+"\\nkeys : "
);
              TintList keys = tom_keys;
              if (tom_is_sort_TintList(tom_keys)) {{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TintList )tom_keys);if (tom_is_fun_sym_intList(tomMatch492NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_freshVar_0=tomMatch492NameNumberfreshSubject_1;{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_begin_2=tomMatch492NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_end_3=tomMatch492NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_freshVar_1=tomMatch492NameNumber_end_3;if (!(tom_is_empty_intList_TintList(tomMatch492NameNumber_freshVar_1))) {{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_freshVar_4=tom_get_tail_intList_TintList(tomMatch492NameNumber_freshVar_1);{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_begin_6=tomMatch492NameNumber_freshVar_4;{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_end_7=tomMatch492NameNumber_freshVar_4;do {{{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_freshVar_5=tomMatch492NameNumber_end_7;if (!(tom_is_empty_intList_TintList(tomMatch492NameNumber_freshVar_5))) {{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_freshVar_8=tom_get_tail_intList_TintList(tomMatch492NameNumber_freshVar_5);if (tom_is_empty_intList_TintList(tomMatch492NameNumber_freshVar_8)) {if ( true ) {

                  out.write(""/* Generated by TOM (version 2.5rc2): Do not edit this file */+Integer.toString(tom_get_head_intList_TintList(tomMatch492NameNumber_freshVar_1))+", ");
                }}}}}if (tom_is_empty_intList_TintList(tomMatch492NameNumber_end_7)) {tomMatch492NameNumber_end_7=tomMatch492NameNumber_begin_6;} else {tomMatch492NameNumber_end_7=tom_get_tail_intList_TintList(tomMatch492NameNumber_end_7);}}} while(!(tom_equal_term_TintList(tomMatch492NameNumber_end_7, tomMatch492NameNumber_begin_6)));}}}}}if (tom_is_empty_intList_TintList(tomMatch492NameNumber_end_3)) {tomMatch492NameNumber_end_3=tomMatch492NameNumber_begin_2;} else {tomMatch492NameNumber_end_3=tom_get_tail_intList_TintList(tomMatch492NameNumber_end_3);}}} while(!(tom_equal_term_TintList(tomMatch492NameNumber_end_3, tomMatch492NameNumber_begin_2)));}}}}if (tom_is_fun_sym_intList(tomMatch492NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_freshVar_9=tomMatch492NameNumberfreshSubject_1;{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_begin_11=tomMatch492NameNumber_freshVar_9;{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_end_12=tomMatch492NameNumber_freshVar_9;do {{{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_freshVar_10=tomMatch492NameNumber_end_12;if (!(tom_is_empty_intList_TintList(tomMatch492NameNumber_freshVar_10))) {{  tom.library.adt.bytecode.types.TintList  tomMatch492NameNumber_freshVar_13=tom_get_tail_intList_TintList(tomMatch492NameNumber_freshVar_10);if (tom_is_empty_intList_TintList(tomMatch492NameNumber_freshVar_13)) {if ( true ) {

                  out.write(Integer.toString(tom_get_head_intList_TintList(tomMatch492NameNumber_freshVar_10)));
                }}}}}if (tom_is_empty_intList_TintList(tomMatch492NameNumber_end_12)) {tomMatch492NameNumber_end_12=tomMatch492NameNumber_begin_11;} else {tomMatch492NameNumber_end_12=tom_get_tail_intList_TintList(tomMatch492NameNumber_end_12);}}} while(!(tom_equal_term_TintList(tomMatch492NameNumber_end_12, tomMatch492NameNumber_begin_11)));}}}}}}

              out.write("\"];");
              return;
        }}}}{ boolean tomMatch493NameNumber_freshVar_15= false ;{  tom.library.adt.bytecode.types.TFieldDescriptor  tomMatch493NameNumber_freshVar_14= null ;{  String  tomMatch493NameNumber_freshVar_13= "" ;{  String  tomMatch493NameNumber_freshVar_12= "" ;if (tom_is_fun_sym_Getstatic(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_15= true ;tomMatch493NameNumber_freshVar_12=tom_get_slot_Getstatic_owner(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_13=tom_get_slot_Getstatic_name(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_14=tom_get_slot_Getstatic_fieldDesc(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Putstatic(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_15= true ;tomMatch493NameNumber_freshVar_12=tom_get_slot_Putstatic_owner(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_13=tom_get_slot_Putstatic_name(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_14=tom_get_slot_Putstatic_fieldDesc(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Getfield(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_15= true ;tomMatch493NameNumber_freshVar_12=tom_get_slot_Getfield_owner(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_13=tom_get_slot_Getfield_name(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_14=tom_get_slot_Getfield_fieldDesc(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Putfield(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_15= true ;tomMatch493NameNumber_freshVar_12=tom_get_slot_Putfield_owner(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_13=tom_get_slot_Putfield_name(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_14=tom_get_slot_Putfield_fieldDesc(tomMatch493NameNumberfreshSubject_1);}}}}}if ((tomMatch493NameNumber_freshVar_15 ==  true )) {if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.5rc2): Do not edit this file */+ins.symbolName()+"\\nowner : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+tomMatch493NameNumber_freshVar_12+"\\nname : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+tomMatch493NameNumber_freshVar_13+"\\ndescriptor : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+ToolBox.buildDescriptor(tomMatch493NameNumber_freshVar_14)+"\"];\n              "

);
          return;
        }}}}}}{ boolean tomMatch493NameNumber_freshVar_19= false ;{  tom.library.adt.bytecode.types.TMethodDescriptor  tomMatch493NameNumber_freshVar_18= null ;{  String  tomMatch493NameNumber_freshVar_17= "" ;{  String  tomMatch493NameNumber_freshVar_16= "" ;if (tom_is_fun_sym_Invokevirtual(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_19= true ;tomMatch493NameNumber_freshVar_16=tom_get_slot_Invokevirtual_owner(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_17=tom_get_slot_Invokevirtual_name(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_18=tom_get_slot_Invokevirtual_methodDesc(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Invokespecial(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_19= true ;tomMatch493NameNumber_freshVar_16=tom_get_slot_Invokespecial_owner(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_17=tom_get_slot_Invokespecial_name(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_18=tom_get_slot_Invokespecial_methodDesc(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Invokestatic(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_19= true ;tomMatch493NameNumber_freshVar_16=tom_get_slot_Invokestatic_owner(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_17=tom_get_slot_Invokestatic_name(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_18=tom_get_slot_Invokestatic_methodDesc(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Invokeinterface(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_19= true ;tomMatch493NameNumber_freshVar_16=tom_get_slot_Invokeinterface_owner(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_17=tom_get_slot_Invokeinterface_name(tomMatch493NameNumberfreshSubject_1);tomMatch493NameNumber_freshVar_18=tom_get_slot_Invokeinterface_methodDesc(tomMatch493NameNumberfreshSubject_1);}}}}}if ((tomMatch493NameNumber_freshVar_19 ==  true )) {if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.5rc2): Do not edit this file */+ins.symbolName()+"\\nowner : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+tomMatch493NameNumber_freshVar_16+"\\nname : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+tomMatch493NameNumber_freshVar_17+"\\ndescriptor : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+ToolBox.buildDescriptor(tomMatch493NameNumber_freshVar_18)+"\"];\n              "

);
          return;
        }}}}}}{ boolean tomMatch493NameNumber_freshVar_21= false ;{  String  tomMatch493NameNumber_freshVar_20= "" ;if (tom_is_fun_sym_New(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_21= true ;tomMatch493NameNumber_freshVar_20=tom_get_slot_New_typeDesc(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Anewarray(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_21= true ;tomMatch493NameNumber_freshVar_20=tom_get_slot_Anewarray_typeDesc(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Checkcast(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_21= true ;tomMatch493NameNumber_freshVar_20=tom_get_slot_Checkcast_typeDesc(tomMatch493NameNumberfreshSubject_1);}} else {if (tom_is_fun_sym_Instanceof(tomMatch493NameNumberfreshSubject_1)) {{tomMatch493NameNumber_freshVar_21= true ;tomMatch493NameNumber_freshVar_20=tom_get_slot_Instanceof_typeDesc(tomMatch493NameNumberfreshSubject_1);}}}}}if ((tomMatch493NameNumber_freshVar_21 ==  true )) {if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.5rc2): Do not edit this file */+ins.symbolName()+"\\ndescriptor : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+tomMatch493NameNumber_freshVar_20+"\"];\n              "

);
          return;
        }}}}if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.5rc2): Do not edit this file */+ins.symbolName()+"\"];\n              "

);
        }}}

    } catch(IOException e) {
      e.printStackTrace();
    }
  }

  /**
   * Prints a link from the `parent' instruction to the current node instruction.
   * @param out the writer to be used for the dot output.
   */
  private static class PrintDotLink extends  tom.library.adt.bytecode.BytecodeBasicStrategy  {private java.io.Writer out; private  InsWrapper  parent; public PrintDotLink(java.io.Writer out,  InsWrapper  parent) { super(tom_make_Identity());this.out=out;this.parent=parent;}public java.io.Writer getout() { return out;}public  InsWrapper  getparent() { return parent;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TInstructionList(tom__arg)) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch494NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch494NameNumber_freshVar_0=tomMatch494NameNumberfreshSubject_1;if (tom_is_fun_sym_ConsInstructionList(tomMatch494NameNumber_freshVar_0)) {if ( true ) {


        try {
          out.write(""/* Generated by TOM (version 2.5rc2): Do not edit this file */+getDotId(parent.ins)+" -> "/* Generated by TOM (version 2.5rc2): Do not edit this file */+getDotId(tomMatch494NameNumber_freshVar_0)+";\n              "
);
        } catch(IOException e) {
          e.printStackTrace();
        }
      }}}}}return super.visit_TInstructionList(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_PrintDotLink(java.io.Writer t0,  InsWrapper  t1) { return new PrintDotLink(t0,t1); }



  /**
   * Prints all the try/catch/finally informations of the given block list.
   * @param list the try/catch/finally blocks to be printed.
   * @param labelMap the label map (see the BuildLabelMap strategy).
   * @param out the writer to be used for the dot output.
   * @param inst the global list of instructions.
   */
  private static void printTryCatchBlocks(TTryCatchBlockList list, Map labelMap, Writer out,TInstructionList inst) throws VisitFailure{
    if (tom_is_sort_TTryCatchBlockList(list)) {{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch496NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TTryCatchBlockList )list);if (tom_is_fun_sym_TryCatchBlockList(tomMatch496NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch496NameNumber_freshVar_0=tomMatch496NameNumberfreshSubject_1;{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch496NameNumber_begin_2=tomMatch496NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch496NameNumber_end_3=tomMatch496NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch496NameNumber_freshVar_1=tomMatch496NameNumber_end_3;if (!(tom_is_empty_TryCatchBlockList_TTryCatchBlockList(tomMatch496NameNumber_freshVar_1))) {{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch496NameNumber_freshVar_4=tom_get_tail_TryCatchBlockList_TTryCatchBlockList(tomMatch496NameNumber_freshVar_1);if ( true ) {

        try {
          TTryCatchBlock block = tom_get_head_TryCatchBlockList_TTryCatchBlockList(tomMatch496NameNumber_freshVar_1);
          THandler handler = block.gethandler();
          String id = getDotId(block);

          if (tom_is_sort_THandler(handler)) {{  tom.library.adt.bytecode.types.THandler  tomMatch495NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.THandler )handler);if (tom_is_fun_sym_CatchHandler(tomMatch495NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TLabel  tomMatch495NameNumber_freshVar_0=tom_get_slot_CatchHandler_handler(tomMatch495NameNumberfreshSubject_1);{  String  tomMatch495NameNumber_freshVar_1=tom_get_slot_CatchHandler_type(tomMatch495NameNumberfreshSubject_1);if ( true ) {

              Position labelPosition = (Position) labelMap.get(tomMatch495NameNumber_freshVar_0);
              TInstructionList labelInst = (TInstructionList) labelPosition.getSubterm().visit(inst);
              out.write("\n                  "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\"Catch\\ntype : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+tomMatch495NameNumber_freshVar_1+"\" shape=box];\n                  "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.5rc2): Do not edit this file */+getDotId(labelInst)+" [label=\"handler\" style=dotted];\n                  "


);
            }}}}if (tom_is_fun_sym_FinallyHandler(tomMatch495NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TLabel  tomMatch495NameNumber_freshVar_2=tom_get_slot_FinallyHandler_handler(tomMatch495NameNumberfreshSubject_1);if ( true ) {


              Position labelPosition = (Position) labelMap.get(tomMatch495NameNumber_freshVar_2);
              TInstructionList labelInst = (TInstructionList) labelPosition.getSubterm().visit(inst);
              out.write("\n                  "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\"Finally\" shape=box];\n                  "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.5rc2): Do not edit this file */+getDotId(labelInst)+" [label=\"handler\" style=dotted];\n                  "


);
            }}}}}


          Position startPosition = (Position) labelMap.get(block.getstart());
          TInstructionList startInst = (TInstructionList) startPosition.getSubterm().visit(inst);
          Position endPosition = (Position) labelMap.get(block.getend());
          TInstructionList lastInst = (TInstructionList) endPosition.getSubterm().visit(inst);
          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.5rc2): Do not edit this file */+getDotId(startInst)+" [label=\"start\" style=dotted];\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.5rc2): Do not edit this file */+getDotId(lastInst)+" [label=\"end\" style=dotted];\n              "


);
        } catch(IOException e) {
          e.printStackTrace();
        }
      }}}}if (tom_is_empty_TryCatchBlockList_TTryCatchBlockList(tomMatch496NameNumber_end_3)) {tomMatch496NameNumber_end_3=tomMatch496NameNumber_begin_2;} else {tomMatch496NameNumber_end_3=tom_get_tail_TryCatchBlockList_TTryCatchBlockList(tomMatch496NameNumber_end_3);}}} while(!(tom_equal_term_TTryCatchBlockList(tomMatch496NameNumber_end_3, tomMatch496NameNumber_begin_2)));}}}}}}

  }

  /**
   * Prints all the local variables informations.
   * @param list the local variables list to be printed.
   * @param labelMap the label map (see the BuildLabelMap strategy).
   * @param out the writer to be used for the dot output.
   * @param inst the global list of instructions.
   */
  private static void printLocalVariables(TLocalVariableList list, Map labelMap, Writer out, TInstructionList inst) throws VisitFailure {
    if (tom_is_sort_TLocalVariableList(list)) {{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch497NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TLocalVariableList )list);if (tom_is_fun_sym_LocalVariableList(tomMatch497NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch497NameNumber_freshVar_0=tomMatch497NameNumberfreshSubject_1;{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch497NameNumber_begin_2=tomMatch497NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch497NameNumber_end_3=tomMatch497NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch497NameNumber_freshVar_1=tomMatch497NameNumber_end_3;if (!(tom_is_empty_LocalVariableList_TLocalVariableList(tomMatch497NameNumber_freshVar_1))) {{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch497NameNumber_freshVar_4=tom_get_tail_LocalVariableList_TLocalVariableList(tomMatch497NameNumber_freshVar_1);if ( true ) {

        try {
          TLocalVariable var = tom_get_head_LocalVariableList_TLocalVariableList(tomMatch497NameNumber_freshVar_1);
          String id = getDotId(var);
          Position startPosition = (Position) labelMap.get(var.getstart());
          TInstructionList startInst = (TInstructionList) startPosition.getSubterm().visit(inst);
          Position endPosition = (Position) labelMap.get(var.getend());
          TInstructionList lastInst = (TInstructionList) endPosition.getSubterm().visit(inst);

          out.write("\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" [label=\"var : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+var.getname()+"\\ndescriptor : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+var.gettypeDesc()+"\\nindex : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+Integer.toString(var.getindex())+"\" shape=box];\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.5rc2): Do not edit this file */+getDotId(startInst)+" [label=\"start\" style=dotted];\n              "/* Generated by TOM (version 2.5rc2): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.5rc2): Do not edit this file */+getDotId(lastInst)+" [label=\"end\" style=dotted];\n              "



);
        } catch(IOException e) {
          e.printStackTrace();
        }
      }}}}if (tom_is_empty_LocalVariableList_TLocalVariableList(tomMatch497NameNumber_end_3)) {tomMatch497NameNumber_end_3=tomMatch497NameNumber_begin_2;} else {tomMatch497NameNumber_end_3=tom_get_tail_LocalVariableList_TLocalVariableList(tomMatch497NameNumber_end_3);}}} while(!(tom_equal_term_TLocalVariableList(tomMatch497NameNumber_end_3, tomMatch497NameNumber_begin_2)));}}}}}}

  }

  /**
   * Used to pass the stored instruction as a strategy parameter.
   */
  private static class InsWrapper { public TInstructionList ins; }
  private static boolean tom_is_sort_InsWrapper(Object t) { return 

 t instanceof InsWrapper ;}


  /**
   * Assign the current instruction node to the given InsWrapper.
   * @param ins the instruction wrapper.
   */
  private static class Assign extends  tom.library.adt.bytecode.BytecodeBasicStrategy  {private  InsWrapper  ins; public Assign( InsWrapper  ins) { super(tom_make_Identity());this.ins=ins;}public  InsWrapper  getins() { return ins;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];for (int i = 0; i < getChildCount(); i++) {stratChilds[i]=getChildAt(i);}return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {for (int i = 0; i < getChildCount(); i++) {setChildAt(i,children[i]);}return this;}public int getChildCount() { return 1; }public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg) throws tom.library.sl.VisitFailure {if (tom_is_sort_TInstructionList(tom__arg)) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch498NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch498NameNumber_freshVar_0=tomMatch498NameNumberfreshSubject_1;if ( true ) {

 ins.ins = tomMatch498NameNumber_freshVar_0; }}}}return super.visit_TInstructionList(tom__arg); }}private static  tom.library.sl.Strategy  tom_make_Assign( InsWrapper  t0) { return new Assign(t0); }



  /**
   * Generates a control flow graph for each method of the given class.
   * @param clazz the gom-term subject representing the class.
   */
  public static void classToDot(TClass clazz) throws VisitFailure {
    Writer w = new BufferedWriter(new OutputStreamWriter(System.out)); 
    TMethodList methods = clazz.getmethods();
    if (tom_is_sort_TMethodList(methods)) {{  tom.library.adt.bytecode.types.TMethodList  tomMatch499NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TMethodList )methods);if (tom_is_fun_sym_MethodList(tomMatch499NameNumberfreshSubject_1)) {{  tom.library.adt.bytecode.types.TMethodList  tomMatch499NameNumber_freshVar_0=tomMatch499NameNumberfreshSubject_1;{  tom.library.adt.bytecode.types.TMethodList  tomMatch499NameNumber_begin_2=tomMatch499NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TMethodList  tomMatch499NameNumber_end_3=tomMatch499NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TMethodList  tomMatch499NameNumber_freshVar_1=tomMatch499NameNumber_end_3;if (!(tom_is_empty_MethodList_TMethodList(tomMatch499NameNumber_freshVar_1))) {{  tom.library.adt.bytecode.types.TMethod  tom_x=tom_get_head_MethodList_TMethodList(tomMatch499NameNumber_freshVar_1);{  tom.library.adt.bytecode.types.TMethodList  tomMatch499NameNumber_freshVar_4=tom_get_tail_MethodList_TMethodList(tomMatch499NameNumber_freshVar_1);if ( true ) {

        try {
          TMethodInfo info = tom_x.getinfo();
          w.write("digraph "/* Generated by TOM (version 2.5rc2): Do not edit this file */+info.getname()+" {\n              "
);

          // Print a root node with the method name and descriptor. Add a link to the first instruction if any.
          w.write("method [label=\"method : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+info.getname()+"\\ndescriptor : "/* Generated by TOM (version 2.5rc2): Do not edit this file */+ToolBox.buildDescriptor(info.getdesc())+"\" shape=box];\n              "
);
          if(!tom_x.getcode().isEmptyCode()) {
            TInstructionList ins = tom_x.getcode().getinstructions();
            if(!ins.isEmptyInstructionList()) {
              w.write("method -> "/* Generated by TOM (version 2.5rc2): Do not edit this file */+getDotId(ins)+"\n                  "
);
            }

            // Compute the label map to allow us to retrieve an instruction from a label.
            HashMap labelMap = new HashMap();
            tom_make_TopDown(tom_make_BuildLabelMap(labelMap)).visit(ins);

            // Create a wrapper to pass a parent node to its children.
            InsWrapper insWrapper = new InsWrapper();

            // This strategy run through all node. For each of them, the node is printed.
            // Links between the current node and its children are printed by passing the parent to each of them.
            // AllCfg allows us to get all the children of the current node.
            Strategy toDot = tom_make_TopDown(tom_make_Try(tom_cons_list_Sequence(tom_make_PrintDotNode(w),tom_cons_list_Sequence(tom_cons_list_Sequence(tom_make_Assign(insWrapper),tom_cons_list_Sequence(tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap),tom_empty_list_Sequence())),tom_empty_list_Sequence()))))







;

            toDot.visit(ins);

            // Prints the try/catch/finally blocks.
            printTryCatchBlocks(tom_x.getcode().gettryCatchBlocks(), labelMap, w, ins);

            // Prints the local variables informations.
            printLocalVariables(tom_x.getcode().getlocalVariables(), labelMap, w, ins);
          }

          w.write("}\n");
          w.flush();
        } catch(IOException e) {
          e.printStackTrace();
        }
      }}}}}if (tom_is_empty_MethodList_TMethodList(tomMatch499NameNumber_end_3)) {tomMatch499NameNumber_end_3=tomMatch499NameNumber_begin_2;} else {tomMatch499NameNumber_end_3=tom_get_tail_MethodList_TMethodList(tomMatch499NameNumber_end_3);}}} while(!(tom_equal_term_TMethodList(tomMatch499NameNumber_end_3, tomMatch499NameNumber_begin_2)));}}}}}}

  }


  /**
   * Generates the dot control flow graphs for each method of the specified class.
   * Usage : java bytecode.CFGViewer <class name>
   * Ex: java bytecode.CFGViewer bytecode.Subject
   * @param args args[0] : the class name
   */
    public static void main(String[] args) {
      if(args.length <= 0) {
        System.out.println("Usage : java bytecode.CFGViewer <class name>\nEx: java bytecode.CFGViewer bytecode.Subject");
        return;
      }
      BytecodeReader cg = new BytecodeReader(args[0]);
      TClass c = cg.getTClass();
      try {
      classToDot(c);
      } catch (VisitFailure e) {
        System.out.println("Unexpected failure in strategies");
      }
    }
  }


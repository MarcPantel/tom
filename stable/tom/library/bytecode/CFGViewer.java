/* Generated by TOM (version 2.6alpha): Do not edit this file *//*
 * Copyright (c) 2000-2008, INRIA
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met: 
 *	- Redistributions of source code must retain the above copyright
 *	notice, this list of conditions and the following disclaimer.  
 *	- Redistributions in binary form must reproduce the above copyright
 *	notice, this list of conditions and the following disclaimer in the
 *	documentation and/or other materials provided with the distribution.
 *	- Neither the name of the INRIA nor the names of its
 *	contributors may be used to endorse or promote products derived from
 *	this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package tom.library.bytecode;

import java.util.Map;
import java.util.HashMap;
import java.io.Writer;
import java.io.IOException;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;

import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassAdapter;

import tom.library.sl.*;

import tom.library.adt.bytecode.*;
import tom.library.adt.bytecode.types.*;

/**
 * A dot control flow graph exporter.
 * This class generates a control flow graph for each method of a class.
 */
public class CFGViewer {
  /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */  /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */    private static   tom.library.adt.bytecode.types.TMethodList  tom_append_list_MethodList( tom.library.adt.bytecode.types.TMethodList l1,  tom.library.adt.bytecode.types.TMethodList  l2) {     if( l1.isEmptyMethodList() ) {       return l2;     } else if( l2.isEmptyMethodList() ) {       return l1;     } else if(  l1.getTailMethodList() .isEmptyMethodList() ) {       return  tom.library.adt.bytecode.types.tmethodlist.ConsMethodList.make( l1.getHeadMethodList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.tmethodlist.ConsMethodList.make( l1.getHeadMethodList() ,tom_append_list_MethodList( l1.getTailMethodList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.TMethodList  tom_get_slice_MethodList( tom.library.adt.bytecode.types.TMethodList  begin,  tom.library.adt.bytecode.types.TMethodList  end, tom.library.adt.bytecode.types.TMethodList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyMethodList()  ||  (end== tom.library.adt.bytecode.types.tmethodlist.EmptyMethodList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.tmethodlist.ConsMethodList.make( begin.getHeadMethodList() ,( tom.library.adt.bytecode.types.TMethodList )tom_get_slice_MethodList( begin.getTailMethodList() ,end,tail)) ;   }      private static   tom.library.adt.bytecode.types.TLabelList  tom_append_list_LabelList( tom.library.adt.bytecode.types.TLabelList l1,  tom.library.adt.bytecode.types.TLabelList  l2) {     if( l1.isEmptyLabelList() ) {       return l2;     } else if( l2.isEmptyLabelList() ) {       return l1;     } else if(  l1.getTailLabelList() .isEmptyLabelList() ) {       return  tom.library.adt.bytecode.types.tlabellist.ConsLabelList.make( l1.getHeadLabelList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.tlabellist.ConsLabelList.make( l1.getHeadLabelList() ,tom_append_list_LabelList( l1.getTailLabelList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.TLabelList  tom_get_slice_LabelList( tom.library.adt.bytecode.types.TLabelList  begin,  tom.library.adt.bytecode.types.TLabelList  end, tom.library.adt.bytecode.types.TLabelList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyLabelList()  ||  (end== tom.library.adt.bytecode.types.tlabellist.EmptyLabelList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.tlabellist.ConsLabelList.make( begin.getHeadLabelList() ,( tom.library.adt.bytecode.types.TLabelList )tom_get_slice_LabelList( begin.getTailLabelList() ,end,tail)) ;   }      private static   tom.library.adt.bytecode.types.TTryCatchBlockList  tom_append_list_TryCatchBlockList( tom.library.adt.bytecode.types.TTryCatchBlockList l1,  tom.library.adt.bytecode.types.TTryCatchBlockList  l2) {     if( l1.isEmptyTryCatchBlockList() ) {       return l2;     } else if( l2.isEmptyTryCatchBlockList() ) {       return l1;     } else if(  l1.getTailTryCatchBlockList() .isEmptyTryCatchBlockList() ) {       return  tom.library.adt.bytecode.types.ttrycatchblocklist.ConsTryCatchBlockList.make( l1.getHeadTryCatchBlockList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.ttrycatchblocklist.ConsTryCatchBlockList.make( l1.getHeadTryCatchBlockList() ,tom_append_list_TryCatchBlockList( l1.getTailTryCatchBlockList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.TTryCatchBlockList  tom_get_slice_TryCatchBlockList( tom.library.adt.bytecode.types.TTryCatchBlockList  begin,  tom.library.adt.bytecode.types.TTryCatchBlockList  end, tom.library.adt.bytecode.types.TTryCatchBlockList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyTryCatchBlockList()  ||  (end== tom.library.adt.bytecode.types.ttrycatchblocklist.EmptyTryCatchBlockList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.ttrycatchblocklist.ConsTryCatchBlockList.make( begin.getHeadTryCatchBlockList() ,( tom.library.adt.bytecode.types.TTryCatchBlockList )tom_get_slice_TryCatchBlockList( begin.getTailTryCatchBlockList() ,end,tail)) ;   }      private static   tom.library.adt.bytecode.types.TintList  tom_append_list_intList( tom.library.adt.bytecode.types.TintList l1,  tom.library.adt.bytecode.types.TintList  l2) {     if( l1.isEmptyintList() ) {       return l2;     } else if( l2.isEmptyintList() ) {       return l1;     } else if(  l1.getTailintList() .isEmptyintList() ) {       return  tom.library.adt.bytecode.types.tintlist.ConsintList.make( l1.getHeadintList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.tintlist.ConsintList.make( l1.getHeadintList() ,tom_append_list_intList( l1.getTailintList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.TintList  tom_get_slice_intList( tom.library.adt.bytecode.types.TintList  begin,  tom.library.adt.bytecode.types.TintList  end, tom.library.adt.bytecode.types.TintList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyintList()  ||  (end== tom.library.adt.bytecode.types.tintlist.EmptyintList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.tintlist.ConsintList.make( begin.getHeadintList() ,( tom.library.adt.bytecode.types.TintList )tom_get_slice_intList( begin.getTailintList() ,end,tail)) ;   }      private static   tom.library.adt.bytecode.types.TInstructionList  tom_append_list_InstructionList( tom.library.adt.bytecode.types.TInstructionList l1,  tom.library.adt.bytecode.types.TInstructionList  l2) {     if( l1.isEmptyInstructionList() ) {       return l2;     } else if( l2.isEmptyInstructionList() ) {       return l1;     } else if(  l1.getTailInstructionList() .isEmptyInstructionList() ) {       return  tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList.make( l1.getHeadInstructionList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList.make( l1.getHeadInstructionList() ,tom_append_list_InstructionList( l1.getTailInstructionList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.TInstructionList  tom_get_slice_InstructionList( tom.library.adt.bytecode.types.TInstructionList  begin,  tom.library.adt.bytecode.types.TInstructionList  end, tom.library.adt.bytecode.types.TInstructionList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyInstructionList()  ||  (end== tom.library.adt.bytecode.types.tinstructionlist.EmptyInstructionList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList.make( begin.getHeadInstructionList() ,( tom.library.adt.bytecode.types.TInstructionList )tom_get_slice_InstructionList( begin.getTailInstructionList() ,end,tail)) ;   }      private static   tom.library.adt.bytecode.types.TLocalVariableList  tom_append_list_LocalVariableList( tom.library.adt.bytecode.types.TLocalVariableList l1,  tom.library.adt.bytecode.types.TLocalVariableList  l2) {     if( l1.isEmptyLocalVariableList() ) {       return l2;     } else if( l2.isEmptyLocalVariableList() ) {       return l1;     } else if(  l1.getTailLocalVariableList() .isEmptyLocalVariableList() ) {       return  tom.library.adt.bytecode.types.tlocalvariablelist.ConsLocalVariableList.make( l1.getHeadLocalVariableList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.tlocalvariablelist.ConsLocalVariableList.make( l1.getHeadLocalVariableList() ,tom_append_list_LocalVariableList( l1.getTailLocalVariableList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.TLocalVariableList  tom_get_slice_LocalVariableList( tom.library.adt.bytecode.types.TLocalVariableList  begin,  tom.library.adt.bytecode.types.TLocalVariableList  end, tom.library.adt.bytecode.types.TLocalVariableList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyLocalVariableList()  ||  (end== tom.library.adt.bytecode.types.tlocalvariablelist.EmptyLocalVariableList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.tlocalvariablelist.ConsLocalVariableList.make( begin.getHeadLocalVariableList() ,( tom.library.adt.bytecode.types.TLocalVariableList )tom_get_slice_LocalVariableList( begin.getTailLocalVariableList() ,end,tail)) ;   }    /* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file *//* Generated by TOM (version 2.6alpha): Do not edit this file */   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Sequence) )) {       if(( ((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )) == null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1):new tom.library.sl.Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ):l1),tom_append_list_Sequence(((( (l1 instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Sequence(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end == null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin):new tom.library.sl.Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( (begin instanceof tom.library.sl.Sequence) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):( null )),end,tail)) );   }      private static   tom.library.sl.Strategy  tom_append_list_Choice( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( (l1 instanceof tom.library.sl.Choice) )) {       if(( ((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )) ==null )) {         return ( (l2==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),l2) );       } else {         return ( (tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)==null)?((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1):new tom.library.sl.Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ):l1),tom_append_list_Choice(((( (l1 instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ):( null )),l2)) );       }     } else {       return ( (l2==null)?l1:new tom.library.sl.Choice(l1,l2) );     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Choice( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end ==null ) ||  (end.equals(( null ))) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return ( (( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)==null)?((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin):new tom.library.sl.Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Choice(((( (begin instanceof tom.library.sl.Choice) ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):( null )),end,tail)) );   }    /* Generated by TOM (version 2.6alpha): Do not edit this file */ /* Generated by TOM (version 2.6alpha): Do not edit this file */private static  tom.library.sl.Strategy  tom_make_Try( tom.library.sl.Strategy  v) { return ( ( (( (( null )==null)?( new tom.library.sl.Identity() ):new tom.library.sl.Choice(( new tom.library.sl.Identity() ),( null )) )==null)?v:new tom.library.sl.Choice(v,( (( null )==null)?( new tom.library.sl.Identity() ):new tom.library.sl.Choice(( new tom.library.sl.Identity() ),( null )) )) ) );}private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ),( (( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )==null)?v:new tom.library.sl.Sequence(v,( (( null )==null)?( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ):new tom.library.sl.Sequence(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ),( null )) )) )) ) );}   /* Generated by TOM (version 2.6alpha): Do not edit this file */ private static class BuildLabelMap extends tom.library.sl.BasicStrategy {private  java.util.Map  m;public BuildLabelMap( java.util.Map  m) {super(( new tom.library.sl.Identity() ));this.m=m;}public  java.util.Map  getm() {return m;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch540NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch540NameNumber_freshVar_2=tomMatch540NameNumberfreshSubject_1;if ( (tomMatch540NameNumber_freshVar_2 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch540NameNumber_freshVar_0= tomMatch540NameNumber_freshVar_2.getHeadInstructionList() ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch540NameNumber_freshVar_1= tomMatch540NameNumber_freshVar_2.getTailInstructionList() ;{  tom.library.adt.bytecode.types.TInstruction  tomMatch540NameNumber_freshVar_4=tomMatch540NameNumber_freshVar_0;if ( (tomMatch540NameNumber_freshVar_4 instanceof tom.library.adt.bytecode.types.tinstruction.Anchor) ) {{  tom.library.adt.bytecode.types.TLabel  tomMatch540NameNumber_freshVar_3= tomMatch540NameNumber_freshVar_4.getlabel() ;if ( true ) {       m.put(tomMatch540NameNumber_freshVar_3, getEnvironment().getPosition());     }}}}}}}}}}}return _visit_TInstructionList(tom__arg,introspector); }public  tom.library.adt.bytecode.types.TInstructionList  _visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.library.adt.bytecode.types.TInstructionList )any.visit(environment,introspector));} else {return (( tom.library.adt.bytecode.types.TInstructionList )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.TInstructionList) ) {return visit_TInstructionList((( tom.library.adt.bytecode.types.TInstructionList )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_BuildLabelMap( java.util.Map  t0) { return new BuildLabelMap(t0);}private static class OneCfg extends tom.library.sl.BasicStrategy {private  tom.library.sl.Strategy  s;private  java.util.Map  m;public OneCfg( tom.library.sl.Strategy  s,  java.util.Map  m) {super(( new tom.library.sl.Identity() ));this.s=s;this.m=m;}public  tom.library.sl.Strategy  gets() {return s;}public  java.util.Map  getm() {return m;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);stratChilds[1] = gets();return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);s = ( tom.library.sl.Strategy ) children[1];return this;}public int getChildCount() {return 2;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);case 1: return gets();default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);case 1: s = ( tom.library.sl.Strategy )child; return this;default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumber_freshVar_2=tomMatch541NameNumberfreshSubject_1;if ( (tomMatch541NameNumber_freshVar_2 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch541NameNumber_freshVar_0= tomMatch541NameNumber_freshVar_2.getHeadInstructionList() ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumber_freshVar_1= tomMatch541NameNumber_freshVar_2.getTailInstructionList() ;{  tom.library.adt.bytecode.types.TInstruction  tomMatch541NameNumber_freshVar_4=tomMatch541NameNumber_freshVar_0;if ( (tomMatch541NameNumber_freshVar_4 instanceof tom.library.adt.bytecode.types.tinstruction.Goto) ) {{  tom.library.adt.bytecode.types.TLabel  tomMatch541NameNumber_freshVar_3= tomMatch541NameNumber_freshVar_4.getlabel() ;if ( true ) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch541NameNumber_freshVar_3));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));       } else {                 getEnvironment().followPathLocal(current.sub(p));       }       return (TInstructionList) getEnvironment().getSubject();     }}}}}}}}}}if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumber_freshVar_7=tomMatch541NameNumberfreshSubject_1;if ( (tomMatch541NameNumber_freshVar_7 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch541NameNumber_freshVar_5= tomMatch541NameNumber_freshVar_7.getHeadInstructionList() ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumber_freshVar_6= tomMatch541NameNumber_freshVar_7.getTailInstructionList() ;{  tom.library.adt.bytecode.types.TInstruction  tomMatch541NameNumber_freshVar_9=tomMatch541NameNumber_freshVar_5;{ boolean tomMatch541NameNumber_freshVar_10= false ;{  tom.library.adt.bytecode.types.TLabel  tomMatch541NameNumber_freshVar_8= null ;if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifeq) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifne) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Iflt) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifge) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifgt) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifle) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpeq) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpne) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmplt) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpge) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpgt) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmple) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_acmpeq) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_acmpne) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Jsr) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifnull) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch541NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifnonnull) ) {{tomMatch541NameNumber_freshVar_10= true ;tomMatch541NameNumber_freshVar_8= tomMatch541NameNumber_freshVar_9.getlabel() ;}}}}}}}}}}}}}}}}}}if ((tomMatch541NameNumber_freshVar_10 ==  true )) {if ( true ) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch541NameNumber_freshVar_8));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));         return (TInstructionList) getEnvironment().getSubject();       } else {                 getEnvironment().followPathLocal(current.sub(p));       }     }}}}}}}}}}}if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumber_freshVar_13=tomMatch541NameNumberfreshSubject_1;if ( (tomMatch541NameNumber_freshVar_13 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch541NameNumber_freshVar_11= tomMatch541NameNumber_freshVar_13.getHeadInstructionList() ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumber_freshVar_12= tomMatch541NameNumber_freshVar_13.getTailInstructionList() ;{  tom.library.adt.bytecode.types.TInstruction  tomMatch541NameNumber_freshVar_16=tomMatch541NameNumber_freshVar_11;{ boolean tomMatch541NameNumber_freshVar_17= false ;{  tom.library.adt.bytecode.types.TLabelList  tomMatch541NameNumber_freshVar_15= null ;{  tom.library.adt.bytecode.types.TLabel  tomMatch541NameNumber_freshVar_14= null ;if ( (tomMatch541NameNumber_freshVar_16 instanceof tom.library.adt.bytecode.types.tinstruction.Tableswitch) ) {{tomMatch541NameNumber_freshVar_17= true ;tomMatch541NameNumber_freshVar_14= tomMatch541NameNumber_freshVar_16.getdflt() ;tomMatch541NameNumber_freshVar_15= tomMatch541NameNumber_freshVar_16.getlabels() ;}} else {if ( (tomMatch541NameNumber_freshVar_16 instanceof tom.library.adt.bytecode.types.tinstruction.Lookupswitch) ) {{tomMatch541NameNumber_freshVar_17= true ;tomMatch541NameNumber_freshVar_14= tomMatch541NameNumber_freshVar_16.getdflt() ;tomMatch541NameNumber_freshVar_15= tomMatch541NameNumber_freshVar_16.getlabels() ;}}}if ((tomMatch541NameNumber_freshVar_17 ==  true )) {if ( true ) {       TLabelList labelList = tomMatch541NameNumber_freshVar_15;       {if ( (labelList instanceof tom.library.adt.bytecode.types.TLabelList) ) {{  tom.library.adt.bytecode.types.TLabelList  tomMatch542NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TLabelList )labelList);{  tom.library.adt.bytecode.types.TLabelList  tomMatch542NameNumber_freshVar_0=tomMatch542NameNumberfreshSubject_1;if ( ((tomMatch542NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.tlabellist.ConsLabelList) || (tomMatch542NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.tlabellist.EmptyLabelList)) ) {{  tom.library.adt.bytecode.types.TLabelList  tomMatch542NameNumber_begin_2=tomMatch542NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TLabelList  tomMatch542NameNumber_end_3=tomMatch542NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TLabelList  tomMatch542NameNumber_freshVar_1=tomMatch542NameNumber_end_3;if (!( tomMatch542NameNumber_freshVar_1.isEmptyLabelList() )) {{  tom.library.adt.bytecode.types.TLabel  tom_x= tomMatch542NameNumber_freshVar_1.getHeadLabelList() ;{  tom.library.adt.bytecode.types.TLabelList  tomMatch542NameNumber_freshVar_4= tomMatch542NameNumber_freshVar_1.getTailLabelList() ;if ( true ) {           tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tom_x));           tom.library.sl.Position current = getEnvironment().getPosition();           getEnvironment().followPath(p.sub(current));           s.visit(getEnvironment());           if(getEnvironment().getStatus() == Environment.SUCCESS) {             getEnvironment().followPath(current.sub(p));             return (TInstructionList) getEnvironment().getSubject();           } else {                         getEnvironment().followPathLocal(current.sub(p));           }         }}}}}if ( tomMatch542NameNumber_end_3.isEmptyLabelList() ) {tomMatch542NameNumber_end_3=tomMatch542NameNumber_begin_2;} else {tomMatch542NameNumber_end_3= tomMatch542NameNumber_end_3.getTailLabelList() ;}}} while(!( (tomMatch542NameNumber_end_3==tomMatch542NameNumber_begin_2) ));}}}}}}}       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch541NameNumber_freshVar_14));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));         return (TInstructionList) getEnvironment().getSubject();       } else {                 getEnvironment().followPathLocal(current.sub(p));       }      }}}}}}}}}}}}if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumber_freshVar_20=tomMatch541NameNumberfreshSubject_1;if ( (tomMatch541NameNumber_freshVar_20 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch541NameNumber_freshVar_18= tomMatch541NameNumber_freshVar_20.getHeadInstructionList() ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumber_freshVar_19= tomMatch541NameNumber_freshVar_20.getTailInstructionList() ;{ boolean tomMatch541NameNumber_freshVar_22= false ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch541NameNumber_freshVar_21=tomMatch541NameNumber_freshVar_19;if ( ((tomMatch541NameNumber_freshVar_21 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) || (tomMatch541NameNumber_freshVar_21 instanceof tom.library.adt.bytecode.types.tinstructionlist.EmptyInstructionList)) ) {if ( tomMatch541NameNumber_freshVar_21.isEmptyInstructionList() ) {tomMatch541NameNumber_freshVar_22= true ;}}}if ((tomMatch541NameNumber_freshVar_22 ==  false )) {if ( true ) {       getEnvironment().down(2);       s.visit(getEnvironment());       getEnvironment().up();     }}}}}}}}}}return _visit_TInstructionList(tom__arg,introspector); }public  tom.library.adt.bytecode.types.TInstructionList  _visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.library.adt.bytecode.types.TInstructionList )any.visit(environment,introspector));} else {return (( tom.library.adt.bytecode.types.TInstructionList )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.TInstructionList) ) {return visit_TInstructionList((( tom.library.adt.bytecode.types.TInstructionList )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static class AllCfg extends tom.library.sl.BasicStrategy {private  tom.library.sl.Strategy  s;private  java.util.Map  m;public AllCfg( tom.library.sl.Strategy  s,  java.util.Map  m) {super(( new tom.library.sl.Identity() ));this.s=s;this.m=m;}public  tom.library.sl.Strategy  gets() {return s;}public  java.util.Map  getm() {return m;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);stratChilds[1] = gets();return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);s = ( tom.library.sl.Strategy ) children[1];return this;}public int getChildCount() {return 2;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);case 1: return gets();default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);case 1: s = ( tom.library.sl.Strategy )child; return this;default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumber_freshVar_2=tomMatch543NameNumberfreshSubject_1;if ( (tomMatch543NameNumber_freshVar_2 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch543NameNumber_freshVar_0= tomMatch543NameNumber_freshVar_2.getHeadInstructionList() ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumber_freshVar_1= tomMatch543NameNumber_freshVar_2.getTailInstructionList() ;{  tom.library.adt.bytecode.types.TInstruction  tomMatch543NameNumber_freshVar_4=tomMatch543NameNumber_freshVar_0;if ( (tomMatch543NameNumber_freshVar_4 instanceof tom.library.adt.bytecode.types.tinstruction.Goto) ) {{  tom.library.adt.bytecode.types.TLabel  tomMatch543NameNumber_freshVar_3= tomMatch543NameNumber_freshVar_4.getlabel() ;if ( true ) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch543NameNumber_freshVar_3));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));       } else {                 getEnvironment().followPathLocal(current.sub(p));       }                return (TInstructionList) getEnvironment().getSubject();     }}}}}}}}}}if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumber_freshVar_7=tomMatch543NameNumberfreshSubject_1;if ( (tomMatch543NameNumber_freshVar_7 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch543NameNumber_freshVar_5= tomMatch543NameNumber_freshVar_7.getHeadInstructionList() ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumber_freshVar_6= tomMatch543NameNumber_freshVar_7.getTailInstructionList() ;{  tom.library.adt.bytecode.types.TInstruction  tomMatch543NameNumber_freshVar_9=tomMatch543NameNumber_freshVar_5;{ boolean tomMatch543NameNumber_freshVar_10= false ;{  tom.library.adt.bytecode.types.TLabel  tomMatch543NameNumber_freshVar_8= null ;if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifeq) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifne) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Iflt) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifge) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifgt) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifle) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpeq) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpne) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmplt) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpge) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmpgt) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_icmple) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_acmpeq) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.If_acmpne) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Jsr) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifnull) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}} else {if ( (tomMatch543NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ifnonnull) ) {{tomMatch543NameNumber_freshVar_10= true ;tomMatch543NameNumber_freshVar_8= tomMatch543NameNumber_freshVar_9.getlabel() ;}}}}}}}}}}}}}}}}}}if ((tomMatch543NameNumber_freshVar_10 ==  true )) {if ( true ) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch543NameNumber_freshVar_8));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));       } else {                 getEnvironment().followPathLocal(current.sub(p));       }              }}}}}}}}}}}if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumber_freshVar_13=tomMatch543NameNumberfreshSubject_1;if ( (tomMatch543NameNumber_freshVar_13 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch543NameNumber_freshVar_11= tomMatch543NameNumber_freshVar_13.getHeadInstructionList() ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumber_freshVar_12= tomMatch543NameNumber_freshVar_13.getTailInstructionList() ;{  tom.library.adt.bytecode.types.TInstruction  tomMatch543NameNumber_freshVar_16=tomMatch543NameNumber_freshVar_11;{ boolean tomMatch543NameNumber_freshVar_17= false ;{  tom.library.adt.bytecode.types.TLabelList  tomMatch543NameNumber_freshVar_15= null ;{  tom.library.adt.bytecode.types.TLabel  tomMatch543NameNumber_freshVar_14= null ;if ( (tomMatch543NameNumber_freshVar_16 instanceof tom.library.adt.bytecode.types.tinstruction.Tableswitch) ) {{tomMatch543NameNumber_freshVar_17= true ;tomMatch543NameNumber_freshVar_14= tomMatch543NameNumber_freshVar_16.getdflt() ;tomMatch543NameNumber_freshVar_15= tomMatch543NameNumber_freshVar_16.getlabels() ;}} else {if ( (tomMatch543NameNumber_freshVar_16 instanceof tom.library.adt.bytecode.types.tinstruction.Lookupswitch) ) {{tomMatch543NameNumber_freshVar_17= true ;tomMatch543NameNumber_freshVar_14= tomMatch543NameNumber_freshVar_16.getdflt() ;tomMatch543NameNumber_freshVar_15= tomMatch543NameNumber_freshVar_16.getlabels() ;}}}if ((tomMatch543NameNumber_freshVar_17 ==  true )) {if ( true ) {       TLabelList labelList = tomMatch543NameNumber_freshVar_15;       {if ( (labelList instanceof tom.library.adt.bytecode.types.TLabelList) ) {{  tom.library.adt.bytecode.types.TLabelList  tomMatch544NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TLabelList )labelList);{  tom.library.adt.bytecode.types.TLabelList  tomMatch544NameNumber_freshVar_0=tomMatch544NameNumberfreshSubject_1;if ( ((tomMatch544NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.tlabellist.ConsLabelList) || (tomMatch544NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.tlabellist.EmptyLabelList)) ) {{  tom.library.adt.bytecode.types.TLabelList  tomMatch544NameNumber_begin_2=tomMatch544NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TLabelList  tomMatch544NameNumber_end_3=tomMatch544NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TLabelList  tomMatch544NameNumber_freshVar_1=tomMatch544NameNumber_end_3;if (!( tomMatch544NameNumber_freshVar_1.isEmptyLabelList() )) {{  tom.library.adt.bytecode.types.TLabel  tom_x= tomMatch544NameNumber_freshVar_1.getHeadLabelList() ;{  tom.library.adt.bytecode.types.TLabelList  tomMatch544NameNumber_freshVar_4= tomMatch544NameNumber_freshVar_1.getTailLabelList() ;if ( true ) {           tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tom_x));           tom.library.sl.Position current = getEnvironment().getPosition();           getEnvironment().followPath(current.sub(p));           s.visit(getEnvironment());           if(getEnvironment().getStatus() == Environment.SUCCESS) {             getEnvironment().followPath(current.sub(p));           } else {                         getEnvironment().followPathLocal(current.sub(p));           }              }}}}}if ( tomMatch544NameNumber_end_3.isEmptyLabelList() ) {tomMatch544NameNumber_end_3=tomMatch544NameNumber_begin_2;} else {tomMatch544NameNumber_end_3= tomMatch544NameNumber_end_3.getTailLabelList() ;}}} while(!( (tomMatch544NameNumber_end_3==tomMatch544NameNumber_begin_2) ));}}}}}}}       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch543NameNumber_freshVar_14));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) {         getEnvironment().followPath(current.sub(p));       } else {                 getEnvironment().followPathLocal(current.sub(p));       }     }}}}}}}}}}}}if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumber_freshVar_20=tomMatch543NameNumberfreshSubject_1;if ( (tomMatch543NameNumber_freshVar_20 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch543NameNumber_freshVar_18= tomMatch543NameNumber_freshVar_20.getHeadInstructionList() ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumber_freshVar_19= tomMatch543NameNumber_freshVar_20.getTailInstructionList() ;{ boolean tomMatch543NameNumber_freshVar_22= false ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch543NameNumber_freshVar_21=tomMatch543NameNumber_freshVar_19;if ( ((tomMatch543NameNumber_freshVar_21 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) || (tomMatch543NameNumber_freshVar_21 instanceof tom.library.adt.bytecode.types.tinstructionlist.EmptyInstructionList)) ) {if ( tomMatch543NameNumber_freshVar_21.isEmptyInstructionList() ) {tomMatch543NameNumber_freshVar_22= true ;}}}if ((tomMatch543NameNumber_freshVar_22 ==  false )) {if ( true ) {       getEnvironment().down(2);       s.visit(getEnvironment());       getEnvironment().up();     }}}}}}}}}}return _visit_TInstructionList(tom__arg,introspector); }public  tom.library.adt.bytecode.types.TInstructionList  _visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.library.adt.bytecode.types.TInstructionList )any.visit(environment,introspector));} else {return (( tom.library.adt.bytecode.types.TInstructionList )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.TInstructionList) ) {return visit_TInstructionList((( tom.library.adt.bytecode.types.TInstructionList )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_AllCfg( tom.library.sl.Strategy  t0,  java.util.Map  t1) { return new AllCfg(t0,t1);}private static class Mark extends tom.library.sl.BasicStrategy {private  java.util.Map  map;public Mark( java.util.Map  map) {super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.Map  getmap() {return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch545NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tom_c=tomMatch545NameNumberfreshSubject_1;if ( true ) {       Object o = map.get(tom_c);       int value = 1;       if(o != null)         value = ((Integer)o).intValue() + 1;       map.put(tom_c, new Integer(value));     }}}}}return _visit_TInstructionList(tom__arg,introspector); }public  tom.library.adt.bytecode.types.TInstructionList  _visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.library.adt.bytecode.types.TInstructionList )any.visit(environment,introspector));} else {return (( tom.library.adt.bytecode.types.TInstructionList )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.TInstructionList) ) {return visit_TInstructionList((( tom.library.adt.bytecode.types.TInstructionList )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static class UnMark extends tom.library.sl.BasicStrategy {private  java.util.Map  map;public UnMark( java.util.Map  map) {super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.Map  getmap() {return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch546NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tom_c=tomMatch546NameNumberfreshSubject_1;if ( true ) {       Object o = map.get(tom_c);       if(o == null) {         throw new tom.library.sl.VisitFailure();       }       int value = ((Integer)o).intValue() - 1;       map.put(tom_c, new Integer(value));     }}}}}return _visit_TInstructionList(tom__arg,introspector); }public  tom.library.adt.bytecode.types.TInstructionList  _visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.library.adt.bytecode.types.TInstructionList )any.visit(environment,introspector));} else {return (( tom.library.adt.bytecode.types.TInstructionList )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.TInstructionList) ) {return visit_TInstructionList((( tom.library.adt.bytecode.types.TInstructionList )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static class IsMarked extends tom.library.sl.BasicStrategy {private  java.util.Map  map;public IsMarked( java.util.Map  map) {super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.Map  getmap() {return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch547NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);if ( true ) {       Object o = map.get(tomMatch547NameNumberfreshSubject_1);       if(o == null || ((Integer)o).intValue() <= 0)         throw new tom.library.sl.VisitFailure();     }}}}return _visit_TInstructionList(tom__arg,introspector); }public  tom.library.adt.bytecode.types.TInstructionList  _visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.library.adt.bytecode.types.TInstructionList )any.visit(environment,introspector));} else {return (( tom.library.adt.bytecode.types.TInstructionList )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.TInstructionList) ) {return visit_TInstructionList((( tom.library.adt.bytecode.types.TInstructionList )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}  







  /**
   * Returns the dot node id of the given TInstructionList.
   * @param ins the instruction.
   * @return the id.
   */
  private static String getDotId(TInstructionList ins) {
    return ("insid" + ins.hashCode()).replace('-', 'm');
  }

  /**
   * Returns the dot node id of the given TTryCatchBlock.
   * @param bl the try/catch block.
   * @return the id.
   */
  private static String getDotId(TTryCatchBlock bl) {
    return ("blockid" + bl.hashCode()).replace('-', 'm');
  }

  /**
   * Returns the dot node id of the given TLocalVariable.
   * @param the local variable.
   * @return the id.
   */
  private static String getDotId(TLocalVariable var) {
    return ("varid" + var.hashCode()).replace('-', 'm');
  }

  /**
   * Cleans the given string to prevent dot compilation problems.
   * (ex: replace the character '"' with the string "\"").
   * @param s the string to be cleaned.
   * @return the cleaned string.
   */
  private static String clean(String s) {
    return s.replaceAll("\\\"", "\\\\\\\"");
  }

  /**
   * Prints the current instruction node with a suitable label.
   * @param out the writer to be used for the dot output.
   */
  private static class PrintDotNode extends tom.library.sl.BasicStrategy {private java.io.Writer out;public PrintDotNode(java.io.Writer out) {super(( new tom.library.sl.Identity() ));this.out=out;}public java.io.Writer getout() {return out;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch548NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch548NameNumber_freshVar_2=tomMatch548NameNumberfreshSubject_1;if ( (tomMatch548NameNumber_freshVar_2 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch548NameNumber_freshVar_0= tomMatch548NameNumber_freshVar_2.getHeadInstructionList() ;{  tom.library.adt.bytecode.types.TInstructionList  tomMatch548NameNumber_freshVar_1= tomMatch548NameNumber_freshVar_2.getTailInstructionList() ;if ( true ) {


        String id = getDotId(tomMatch548NameNumberfreshSubject_1);
        printDotInstruction(tomMatch548NameNumber_freshVar_0, id, out);
      }}}}}}}}return _visit_TInstructionList(tom__arg,introspector); }public  tom.library.adt.bytecode.types.TInstructionList  _visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.library.adt.bytecode.types.TInstructionList )any.visit(environment,introspector));} else {return (( tom.library.adt.bytecode.types.TInstructionList )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.TInstructionList) ) {return visit_TInstructionList((( tom.library.adt.bytecode.types.TInstructionList )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_PrintDotNode(java.io.Writer t0) { return new PrintDotNode(t0);}



  /**
   * Prints the given instruction with a suitable label and id.
   * @param ins the instruction to be printed.
   * @param id the id of the dot node.
   * @param out the writer to be used for the dot output.
   */
  private static void printDotInstruction(TInstruction ins, String id, Writer out) {
    try {
      {if ( (ins instanceof tom.library.adt.bytecode.types.TInstruction) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumber_freshVar_1=tomMatch549NameNumberfreshSubject_1;{ boolean tomMatch549NameNumber_freshVar_2= false ;{  int  tomMatch549NameNumber_freshVar_0= 0 ;if ( (tomMatch549NameNumber_freshVar_1 instanceof tom.library.adt.bytecode.types.tinstruction.Bipush) ) {{tomMatch549NameNumber_freshVar_2= true ;tomMatch549NameNumber_freshVar_0= tomMatch549NameNumber_freshVar_1.getoperand() ;}} else {if ( (tomMatch549NameNumber_freshVar_1 instanceof tom.library.adt.bytecode.types.tinstruction.Sipush) ) {{tomMatch549NameNumber_freshVar_2= true ;tomMatch549NameNumber_freshVar_0= tomMatch549NameNumber_freshVar_1.getoperand() ;}} else {if ( (tomMatch549NameNumber_freshVar_1 instanceof tom.library.adt.bytecode.types.tinstruction.Newarray) ) {{tomMatch549NameNumber_freshVar_2= true ;tomMatch549NameNumber_freshVar_0= tomMatch549NameNumber_freshVar_1.getoperand() ;}}}}if ((tomMatch549NameNumber_freshVar_2 ==  true )) {if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+ins.symbolName()+"\\noperand : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+Integer.toString(tomMatch549NameNumber_freshVar_0)+"\"];\n              "

);
          return;
        }}}}}}}if ( (ins instanceof tom.library.adt.bytecode.types.TInstruction) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumber_freshVar_5=tomMatch549NameNumberfreshSubject_1;if ( (tomMatch549NameNumber_freshVar_5 instanceof tom.library.adt.bytecode.types.tinstruction.Multianewarray) ) {{  String  tomMatch549NameNumber_freshVar_3= tomMatch549NameNumber_freshVar_5.gettypeDesc() ;{  int  tomMatch549NameNumber_freshVar_4= tomMatch549NameNumber_freshVar_5.getdims() ;if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+ins.symbolName()+"\\ntypeDesc : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tomMatch549NameNumber_freshVar_3+"\\ndims : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+Integer.toString(tomMatch549NameNumber_freshVar_4)+"\"];\n              "

);
          return;
        }}}}}}}if ( (ins instanceof tom.library.adt.bytecode.types.TInstruction) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumber_freshVar_7=tomMatch549NameNumberfreshSubject_1;if ( (tomMatch549NameNumber_freshVar_7 instanceof tom.library.adt.bytecode.types.tinstruction.Ldc) ) {{  tom.library.adt.bytecode.types.TValue  tomMatch549NameNumber_freshVar_6= tomMatch549NameNumber_freshVar_7.getcst() ;if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+ins.symbolName()+"\\ncst : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+clean(tomMatch549NameNumber_freshVar_6.toString())+"\"];\n              "

);
          return;
        }}}}}}if ( (ins instanceof tom.library.adt.bytecode.types.TInstruction) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumber_freshVar_9=tomMatch549NameNumberfreshSubject_1;{ boolean tomMatch549NameNumber_freshVar_10= false ;{  int  tomMatch549NameNumber_freshVar_8= 0 ;if ( (tomMatch549NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Iload) ) {{tomMatch549NameNumber_freshVar_10= true ;tomMatch549NameNumber_freshVar_8= tomMatch549NameNumber_freshVar_9.getvar() ;}} else {if ( (tomMatch549NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Lload) ) {{tomMatch549NameNumber_freshVar_10= true ;tomMatch549NameNumber_freshVar_8= tomMatch549NameNumber_freshVar_9.getvar() ;}} else {if ( (tomMatch549NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Fload) ) {{tomMatch549NameNumber_freshVar_10= true ;tomMatch549NameNumber_freshVar_8= tomMatch549NameNumber_freshVar_9.getvar() ;}} else {if ( (tomMatch549NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Dload) ) {{tomMatch549NameNumber_freshVar_10= true ;tomMatch549NameNumber_freshVar_8= tomMatch549NameNumber_freshVar_9.getvar() ;}} else {if ( (tomMatch549NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Aload) ) {{tomMatch549NameNumber_freshVar_10= true ;tomMatch549NameNumber_freshVar_8= tomMatch549NameNumber_freshVar_9.getvar() ;}} else {if ( (tomMatch549NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Istore) ) {{tomMatch549NameNumber_freshVar_10= true ;tomMatch549NameNumber_freshVar_8= tomMatch549NameNumber_freshVar_9.getvar() ;}} else {if ( (tomMatch549NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Lstore) ) {{tomMatch549NameNumber_freshVar_10= true ;tomMatch549NameNumber_freshVar_8= tomMatch549NameNumber_freshVar_9.getvar() ;}} else {if ( (tomMatch549NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Fstore) ) {{tomMatch549NameNumber_freshVar_10= true ;tomMatch549NameNumber_freshVar_8= tomMatch549NameNumber_freshVar_9.getvar() ;}} else {if ( (tomMatch549NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Dstore) ) {{tomMatch549NameNumber_freshVar_10= true ;tomMatch549NameNumber_freshVar_8= tomMatch549NameNumber_freshVar_9.getvar() ;}} else {if ( (tomMatch549NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Astore) ) {{tomMatch549NameNumber_freshVar_10= true ;tomMatch549NameNumber_freshVar_8= tomMatch549NameNumber_freshVar_9.getvar() ;}} else {if ( (tomMatch549NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tinstruction.Ret) ) {{tomMatch549NameNumber_freshVar_10= true ;tomMatch549NameNumber_freshVar_8= tomMatch549NameNumber_freshVar_9.getvar() ;}}}}}}}}}}}}if ((tomMatch549NameNumber_freshVar_10 ==  true )) {if ( true ) {




          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+ins.symbolName()+"\\nvar : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+Integer.toString(tomMatch549NameNumber_freshVar_8)+"\"];\n              "

);
          return;
        }}}}}}}if ( (ins instanceof tom.library.adt.bytecode.types.TInstruction) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumber_freshVar_13=tomMatch549NameNumberfreshSubject_1;if ( (tomMatch549NameNumber_freshVar_13 instanceof tom.library.adt.bytecode.types.tinstruction.Iinc) ) {{  int  tomMatch549NameNumber_freshVar_11= tomMatch549NameNumber_freshVar_13.getincr() ;{  int  tomMatch549NameNumber_freshVar_12= tomMatch549NameNumber_freshVar_13.getvar() ;if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+ins.symbolName()+"\\nincr : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+Integer.toString(tomMatch549NameNumber_freshVar_11)+"\\nvar : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+Integer.toString(tomMatch549NameNumber_freshVar_12)+"\"];\n              "

);
          return;
        }}}}}}}if ( (ins instanceof tom.library.adt.bytecode.types.TInstruction) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumber_freshVar_16=tomMatch549NameNumberfreshSubject_1;if ( (tomMatch549NameNumber_freshVar_16 instanceof tom.library.adt.bytecode.types.tinstruction.Tableswitch) ) {{  int  tomMatch549NameNumber_freshVar_14= tomMatch549NameNumber_freshVar_16.getmin() ;{  int  tomMatch549NameNumber_freshVar_15= tomMatch549NameNumber_freshVar_16.getmax() ;if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+ins.symbolName()+"\\nmin : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tomMatch549NameNumber_freshVar_14+"\\nmax : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tomMatch549NameNumber_freshVar_15+"\"];\n              "

);
          return;
        }}}}}}}if ( (ins instanceof tom.library.adt.bytecode.types.TInstruction) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumber_freshVar_18=tomMatch549NameNumberfreshSubject_1;if ( (tomMatch549NameNumber_freshVar_18 instanceof tom.library.adt.bytecode.types.tinstruction.Lookupswitch) ) {{  tom.library.adt.bytecode.types.TintList  tomMatch549NameNumber_freshVar_17= tomMatch549NameNumber_freshVar_18.getkeys() ;{  tom.library.adt.bytecode.types.TintList  tom_keys=tomMatch549NameNumber_freshVar_17;if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+ins.symbolName()+"\\nkeys : "
);
              TintList keys = tom_keys;
              {if ( (tom_keys instanceof tom.library.adt.bytecode.types.TintList) ) {{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TintList )tom_keys);{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_freshVar_0=tomMatch550NameNumberfreshSubject_1;if ( ((tomMatch550NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.tintlist.ConsintList) || (tomMatch550NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.tintlist.EmptyintList)) ) {{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_begin_2=tomMatch550NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_end_3=tomMatch550NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_freshVar_1=tomMatch550NameNumber_end_3;if (!( tomMatch550NameNumber_freshVar_1.isEmptyintList() )) {{  int  tom_x= tomMatch550NameNumber_freshVar_1.getHeadintList() ;{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_freshVar_4= tomMatch550NameNumber_freshVar_1.getTailintList() ;{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_begin_6=tomMatch550NameNumber_freshVar_4;{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_end_7=tomMatch550NameNumber_freshVar_4;do {{{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_freshVar_5=tomMatch550NameNumber_end_7;if (!( tomMatch550NameNumber_freshVar_5.isEmptyintList() )) {{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_freshVar_8= tomMatch550NameNumber_freshVar_5.getTailintList() ;if ( tomMatch550NameNumber_freshVar_8.isEmptyintList() ) {if ( true ) {

                  out.write(""/* Generated by TOM (version 2.6alpha): Do not edit this file */+Integer.toString(tom_x)+", ");
                }}}}}if ( tomMatch550NameNumber_end_7.isEmptyintList() ) {tomMatch550NameNumber_end_7=tomMatch550NameNumber_begin_6;} else {tomMatch550NameNumber_end_7= tomMatch550NameNumber_end_7.getTailintList() ;}}} while(!( (tomMatch550NameNumber_end_7==tomMatch550NameNumber_begin_6) ));}}}}}}if ( tomMatch550NameNumber_end_3.isEmptyintList() ) {tomMatch550NameNumber_end_3=tomMatch550NameNumber_begin_2;} else {tomMatch550NameNumber_end_3= tomMatch550NameNumber_end_3.getTailintList() ;}}} while(!( (tomMatch550NameNumber_end_3==tomMatch550NameNumber_begin_2) ));}}}}}}if ( (tom_keys instanceof tom.library.adt.bytecode.types.TintList) ) {{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TintList )tom_keys);{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_freshVar_9=tomMatch550NameNumberfreshSubject_1;if ( ((tomMatch550NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tintlist.ConsintList) || (tomMatch550NameNumber_freshVar_9 instanceof tom.library.adt.bytecode.types.tintlist.EmptyintList)) ) {{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_begin_11=tomMatch550NameNumber_freshVar_9;{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_end_12=tomMatch550NameNumber_freshVar_9;do {{{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_freshVar_10=tomMatch550NameNumber_end_12;if (!( tomMatch550NameNumber_freshVar_10.isEmptyintList() )) {{  int  tom_x= tomMatch550NameNumber_freshVar_10.getHeadintList() ;{  tom.library.adt.bytecode.types.TintList  tomMatch550NameNumber_freshVar_13= tomMatch550NameNumber_freshVar_10.getTailintList() ;if ( tomMatch550NameNumber_freshVar_13.isEmptyintList() ) {if ( true ) {

                  out.write(Integer.toString(tom_x));
                }}}}}}if ( tomMatch550NameNumber_end_12.isEmptyintList() ) {tomMatch550NameNumber_end_12=tomMatch550NameNumber_begin_11;} else {tomMatch550NameNumber_end_12= tomMatch550NameNumber_end_12.getTailintList() ;}}} while(!( (tomMatch550NameNumber_end_12==tomMatch550NameNumber_begin_11) ));}}}}}}}

              out.write("\"];");
              return;
        }}}}}}}if ( (ins instanceof tom.library.adt.bytecode.types.TInstruction) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumber_freshVar_22=tomMatch549NameNumberfreshSubject_1;{ boolean tomMatch549NameNumber_freshVar_23= false ;{  tom.library.adt.bytecode.types.TFieldDescriptor  tomMatch549NameNumber_freshVar_21= null ;{  String  tomMatch549NameNumber_freshVar_20= "" ;{  String  tomMatch549NameNumber_freshVar_19= "" ;if ( (tomMatch549NameNumber_freshVar_22 instanceof tom.library.adt.bytecode.types.tinstruction.Getstatic) ) {{tomMatch549NameNumber_freshVar_23= true ;tomMatch549NameNumber_freshVar_19= tomMatch549NameNumber_freshVar_22.getowner() ;tomMatch549NameNumber_freshVar_20= tomMatch549NameNumber_freshVar_22.getname() ;tomMatch549NameNumber_freshVar_21= tomMatch549NameNumber_freshVar_22.getfieldDesc() ;}} else {if ( (tomMatch549NameNumber_freshVar_22 instanceof tom.library.adt.bytecode.types.tinstruction.Putstatic) ) {{tomMatch549NameNumber_freshVar_23= true ;tomMatch549NameNumber_freshVar_19= tomMatch549NameNumber_freshVar_22.getowner() ;tomMatch549NameNumber_freshVar_20= tomMatch549NameNumber_freshVar_22.getname() ;tomMatch549NameNumber_freshVar_21= tomMatch549NameNumber_freshVar_22.getfieldDesc() ;}} else {if ( (tomMatch549NameNumber_freshVar_22 instanceof tom.library.adt.bytecode.types.tinstruction.Getfield) ) {{tomMatch549NameNumber_freshVar_23= true ;tomMatch549NameNumber_freshVar_19= tomMatch549NameNumber_freshVar_22.getowner() ;tomMatch549NameNumber_freshVar_20= tomMatch549NameNumber_freshVar_22.getname() ;tomMatch549NameNumber_freshVar_21= tomMatch549NameNumber_freshVar_22.getfieldDesc() ;}} else {if ( (tomMatch549NameNumber_freshVar_22 instanceof tom.library.adt.bytecode.types.tinstruction.Putfield) ) {{tomMatch549NameNumber_freshVar_23= true ;tomMatch549NameNumber_freshVar_19= tomMatch549NameNumber_freshVar_22.getowner() ;tomMatch549NameNumber_freshVar_20= tomMatch549NameNumber_freshVar_22.getname() ;tomMatch549NameNumber_freshVar_21= tomMatch549NameNumber_freshVar_22.getfieldDesc() ;}}}}}if ((tomMatch549NameNumber_freshVar_23 ==  true )) {if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+ins.symbolName()+"\\nowner : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tomMatch549NameNumber_freshVar_19+"\\nname : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tomMatch549NameNumber_freshVar_20+"\\ndescriptor : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+ToolBox.buildDescriptor(tomMatch549NameNumber_freshVar_21)+"\"];\n              "

);
          return;
        }}}}}}}}}if ( (ins instanceof tom.library.adt.bytecode.types.TInstruction) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumber_freshVar_27=tomMatch549NameNumberfreshSubject_1;{ boolean tomMatch549NameNumber_freshVar_28= false ;{  tom.library.adt.bytecode.types.TMethodDescriptor  tomMatch549NameNumber_freshVar_26= null ;{  String  tomMatch549NameNumber_freshVar_25= "" ;{  String  tomMatch549NameNumber_freshVar_24= "" ;if ( (tomMatch549NameNumber_freshVar_27 instanceof tom.library.adt.bytecode.types.tinstruction.Invokevirtual) ) {{tomMatch549NameNumber_freshVar_28= true ;tomMatch549NameNumber_freshVar_24= tomMatch549NameNumber_freshVar_27.getowner() ;tomMatch549NameNumber_freshVar_25= tomMatch549NameNumber_freshVar_27.getname() ;tomMatch549NameNumber_freshVar_26= tomMatch549NameNumber_freshVar_27.getmethodDesc() ;}} else {if ( (tomMatch549NameNumber_freshVar_27 instanceof tom.library.adt.bytecode.types.tinstruction.Invokespecial) ) {{tomMatch549NameNumber_freshVar_28= true ;tomMatch549NameNumber_freshVar_24= tomMatch549NameNumber_freshVar_27.getowner() ;tomMatch549NameNumber_freshVar_25= tomMatch549NameNumber_freshVar_27.getname() ;tomMatch549NameNumber_freshVar_26= tomMatch549NameNumber_freshVar_27.getmethodDesc() ;}} else {if ( (tomMatch549NameNumber_freshVar_27 instanceof tom.library.adt.bytecode.types.tinstruction.Invokestatic) ) {{tomMatch549NameNumber_freshVar_28= true ;tomMatch549NameNumber_freshVar_24= tomMatch549NameNumber_freshVar_27.getowner() ;tomMatch549NameNumber_freshVar_25= tomMatch549NameNumber_freshVar_27.getname() ;tomMatch549NameNumber_freshVar_26= tomMatch549NameNumber_freshVar_27.getmethodDesc() ;}} else {if ( (tomMatch549NameNumber_freshVar_27 instanceof tom.library.adt.bytecode.types.tinstruction.Invokeinterface) ) {{tomMatch549NameNumber_freshVar_28= true ;tomMatch549NameNumber_freshVar_24= tomMatch549NameNumber_freshVar_27.getowner() ;tomMatch549NameNumber_freshVar_25= tomMatch549NameNumber_freshVar_27.getname() ;tomMatch549NameNumber_freshVar_26= tomMatch549NameNumber_freshVar_27.getmethodDesc() ;}}}}}if ((tomMatch549NameNumber_freshVar_28 ==  true )) {if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+ins.symbolName()+"\\nowner : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tomMatch549NameNumber_freshVar_24+"\\nname : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tomMatch549NameNumber_freshVar_25+"\\ndescriptor : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+ToolBox.buildDescriptor(tomMatch549NameNumber_freshVar_26)+"\"];\n              "

);
          return;
        }}}}}}}}}if ( (ins instanceof tom.library.adt.bytecode.types.TInstruction) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumber_freshVar_30=tomMatch549NameNumberfreshSubject_1;{ boolean tomMatch549NameNumber_freshVar_31= false ;{  String  tomMatch549NameNumber_freshVar_29= "" ;if ( (tomMatch549NameNumber_freshVar_30 instanceof tom.library.adt.bytecode.types.tinstruction.New) ) {{tomMatch549NameNumber_freshVar_31= true ;tomMatch549NameNumber_freshVar_29= tomMatch549NameNumber_freshVar_30.gettypeDesc() ;}} else {if ( (tomMatch549NameNumber_freshVar_30 instanceof tom.library.adt.bytecode.types.tinstruction.Anewarray) ) {{tomMatch549NameNumber_freshVar_31= true ;tomMatch549NameNumber_freshVar_29= tomMatch549NameNumber_freshVar_30.gettypeDesc() ;}} else {if ( (tomMatch549NameNumber_freshVar_30 instanceof tom.library.adt.bytecode.types.tinstruction.Checkcast) ) {{tomMatch549NameNumber_freshVar_31= true ;tomMatch549NameNumber_freshVar_29= tomMatch549NameNumber_freshVar_30.gettypeDesc() ;}} else {if ( (tomMatch549NameNumber_freshVar_30 instanceof tom.library.adt.bytecode.types.tinstruction.Instanceof) ) {{tomMatch549NameNumber_freshVar_31= true ;tomMatch549NameNumber_freshVar_29= tomMatch549NameNumber_freshVar_30.gettypeDesc() ;}}}}}if ((tomMatch549NameNumber_freshVar_31 ==  true )) {if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+ins.symbolName()+"\\ndescriptor : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tomMatch549NameNumber_freshVar_29+"\"];\n              "

);
          return;
        }}}}}}}if ( (ins instanceof tom.library.adt.bytecode.types.TInstruction) ) {{  tom.library.adt.bytecode.types.TInstruction  tomMatch549NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstruction )ins);if ( true ) {


          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\""/* Generated by TOM (version 2.6alpha): Do not edit this file */+ins.symbolName()+"\"];\n              "

);
        }}}}

    } catch(IOException e) {
      e.printStackTrace();
    }
  }

  /**
   * Prints a link from the `parent' instruction to the current node instruction.
   * @param out the writer to be used for the dot output.
   */
  private static class PrintDotLink extends tom.library.sl.BasicStrategy {private java.io.Writer out;private  InsWrapper  parent;public PrintDotLink(java.io.Writer out,  InsWrapper  parent) {super(( new tom.library.sl.Identity() ));this.out=out;this.parent=parent;}public java.io.Writer getout() {return out;}public  InsWrapper  getparent() {return parent;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch551NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);{  tom.library.adt.bytecode.types.TInstructionList  tomMatch551NameNumber_freshVar_0=tomMatch551NameNumberfreshSubject_1;if ( (tomMatch551NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.tinstructionlist.ConsInstructionList) ) {if ( true ) {


        try {
          out.write(""/* Generated by TOM (version 2.6alpha): Do not edit this file */+getDotId(parent.ins)+" -> "/* Generated by TOM (version 2.6alpha): Do not edit this file */+getDotId(tomMatch551NameNumberfreshSubject_1)+";\n              "
);
        } catch(IOException e) {
          e.printStackTrace();
        }
      }}}}}}return _visit_TInstructionList(tom__arg,introspector); }public  tom.library.adt.bytecode.types.TInstructionList  _visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.library.adt.bytecode.types.TInstructionList )any.visit(environment,introspector));} else {return (( tom.library.adt.bytecode.types.TInstructionList )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.TInstructionList) ) {return visit_TInstructionList((( tom.library.adt.bytecode.types.TInstructionList )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_PrintDotLink(java.io.Writer t0,  InsWrapper  t1) { return new PrintDotLink(t0,t1);}



  /**
   * Prints all the try/catch/finally informations of the given block list.
   * @param list the try/catch/finally blocks to be printed.
   * @param labelMap the label map (see the BuildLabelMap strategy).
   * @param out the writer to be used for the dot output.
   * @param inst the global list of instructions.
   */
  private static void printTryCatchBlocks(TTryCatchBlockList list, Map labelMap, Writer out,TInstructionList inst) throws VisitFailure{
    {if ( (list instanceof tom.library.adt.bytecode.types.TTryCatchBlockList) ) {{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch552NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TTryCatchBlockList )list);{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch552NameNumber_freshVar_0=tomMatch552NameNumberfreshSubject_1;if ( ((tomMatch552NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.ttrycatchblocklist.ConsTryCatchBlockList) || (tomMatch552NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.ttrycatchblocklist.EmptyTryCatchBlockList)) ) {{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch552NameNumber_begin_2=tomMatch552NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch552NameNumber_end_3=tomMatch552NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch552NameNumber_freshVar_1=tomMatch552NameNumber_end_3;if (!( tomMatch552NameNumber_freshVar_1.isEmptyTryCatchBlockList() )) {{  tom.library.adt.bytecode.types.TTryCatchBlock  tom_x= tomMatch552NameNumber_freshVar_1.getHeadTryCatchBlockList() ;{  tom.library.adt.bytecode.types.TTryCatchBlockList  tomMatch552NameNumber_freshVar_4= tomMatch552NameNumber_freshVar_1.getTailTryCatchBlockList() ;if ( true ) {

        try {
          TTryCatchBlock block = tom_x;
          THandler handler = block.gethandler();
          String id = getDotId(block);

          {if ( (handler instanceof tom.library.adt.bytecode.types.THandler) ) {{  tom.library.adt.bytecode.types.THandler  tomMatch553NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.THandler )handler);{  tom.library.adt.bytecode.types.THandler  tomMatch553NameNumber_freshVar_2=tomMatch553NameNumberfreshSubject_1;if ( (tomMatch553NameNumber_freshVar_2 instanceof tom.library.adt.bytecode.types.thandler.CatchHandler) ) {{  tom.library.adt.bytecode.types.TLabel  tomMatch553NameNumber_freshVar_0= tomMatch553NameNumber_freshVar_2.gethandler() ;{  String  tomMatch553NameNumber_freshVar_1= tomMatch553NameNumber_freshVar_2.gettype() ;if ( true ) {

              Position labelPosition = (Position) labelMap.get(tomMatch553NameNumber_freshVar_0);
              TInstructionList labelInst = (TInstructionList) labelPosition.getSubterm().visit(inst);
              out.write("\n                  "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\"Catch\\ntype : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+tomMatch553NameNumber_freshVar_1+"\" shape=box];\n                  "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.6alpha): Do not edit this file */+getDotId(labelInst)+" [label=\"handler\" style=dotted];\n                  "


);
            }}}}}}}if ( (handler instanceof tom.library.adt.bytecode.types.THandler) ) {{  tom.library.adt.bytecode.types.THandler  tomMatch553NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.THandler )handler);{  tom.library.adt.bytecode.types.THandler  tomMatch553NameNumber_freshVar_4=tomMatch553NameNumberfreshSubject_1;if ( (tomMatch553NameNumber_freshVar_4 instanceof tom.library.adt.bytecode.types.thandler.FinallyHandler) ) {{  tom.library.adt.bytecode.types.TLabel  tomMatch553NameNumber_freshVar_3= tomMatch553NameNumber_freshVar_4.gethandler() ;if ( true ) {


              Position labelPosition = (Position) labelMap.get(tomMatch553NameNumber_freshVar_3);
              TInstructionList labelInst = (TInstructionList) labelPosition.getSubterm().visit(inst);
              out.write("\n                  "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\"Finally\" shape=box];\n                  "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.6alpha): Do not edit this file */+getDotId(labelInst)+" [label=\"handler\" style=dotted];\n                  "


);
            }}}}}}}


          Position startPosition = (Position) labelMap.get(block.getstart());
          TInstructionList startInst = (TInstructionList) startPosition.getSubterm().visit(inst);
          Position endPosition = (Position) labelMap.get(block.getend());
          TInstructionList lastInst = (TInstructionList) endPosition.getSubterm().visit(inst);
          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.6alpha): Do not edit this file */+getDotId(startInst)+" [label=\"start\" style=dotted];\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.6alpha): Do not edit this file */+getDotId(lastInst)+" [label=\"end\" style=dotted];\n              "


);
        } catch(IOException e) {
          e.printStackTrace();
        }
      }}}}}if ( tomMatch552NameNumber_end_3.isEmptyTryCatchBlockList() ) {tomMatch552NameNumber_end_3=tomMatch552NameNumber_begin_2;} else {tomMatch552NameNumber_end_3= tomMatch552NameNumber_end_3.getTailTryCatchBlockList() ;}}} while(!( (tomMatch552NameNumber_end_3==tomMatch552NameNumber_begin_2) ));}}}}}}}

  }

  /**
   * Prints all the local variables informations.
   * @param list the local variables list to be printed.
   * @param labelMap the label map (see the BuildLabelMap strategy).
   * @param out the writer to be used for the dot output.
   * @param inst the global list of instructions.
   */
  private static void printLocalVariables(TLocalVariableList list, Map labelMap, Writer out, TInstructionList inst) throws VisitFailure {
    {if ( (list instanceof tom.library.adt.bytecode.types.TLocalVariableList) ) {{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch554NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TLocalVariableList )list);{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch554NameNumber_freshVar_0=tomMatch554NameNumberfreshSubject_1;if ( ((tomMatch554NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.tlocalvariablelist.ConsLocalVariableList) || (tomMatch554NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.tlocalvariablelist.EmptyLocalVariableList)) ) {{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch554NameNumber_begin_2=tomMatch554NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch554NameNumber_end_3=tomMatch554NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch554NameNumber_freshVar_1=tomMatch554NameNumber_end_3;if (!( tomMatch554NameNumber_freshVar_1.isEmptyLocalVariableList() )) {{  tom.library.adt.bytecode.types.TLocalVariable  tom_x= tomMatch554NameNumber_freshVar_1.getHeadLocalVariableList() ;{  tom.library.adt.bytecode.types.TLocalVariableList  tomMatch554NameNumber_freshVar_4= tomMatch554NameNumber_freshVar_1.getTailLocalVariableList() ;if ( true ) {

        try {
          TLocalVariable var = tom_x;
          String id = getDotId(var);
          Position startPosition = (Position) labelMap.get(var.getstart());
          TInstructionList startInst = (TInstructionList) startPosition.getSubterm().visit(inst);
          Position endPosition = (Position) labelMap.get(var.getend());
          TInstructionList lastInst = (TInstructionList) endPosition.getSubterm().visit(inst);

          out.write("\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" [label=\"var : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+var.getname()+"\\ndescriptor : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+var.gettypeDesc()+"\\nindex : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+Integer.toString(var.getindex())+"\" shape=box];\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.6alpha): Do not edit this file */+getDotId(startInst)+" [label=\"start\" style=dotted];\n              "/* Generated by TOM (version 2.6alpha): Do not edit this file */+id+" -> "/* Generated by TOM (version 2.6alpha): Do not edit this file */+getDotId(lastInst)+" [label=\"end\" style=dotted];\n              "



);
        } catch(IOException e) {
          e.printStackTrace();
        }
      }}}}}if ( tomMatch554NameNumber_end_3.isEmptyLocalVariableList() ) {tomMatch554NameNumber_end_3=tomMatch554NameNumber_begin_2;} else {tomMatch554NameNumber_end_3= tomMatch554NameNumber_end_3.getTailLocalVariableList() ;}}} while(!( (tomMatch554NameNumber_end_3==tomMatch554NameNumber_begin_2) ));}}}}}}}

  }

  /**
   * Used to pass the stored instruction as a strategy parameter.
   */
  private static class InsWrapper { public TInstructionList ins; }
  




  /**
   * Assign the current instruction node to the given InsWrapper.
   * @param ins the instruction wrapper.
   */
  private static class Assign extends tom.library.sl.BasicStrategy {private  InsWrapper  ins;public Assign( InsWrapper  ins) {super(( new tom.library.sl.Identity() ));this.ins=ins;}public  InsWrapper  getins() {return ins;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChilds = new tom.library.sl.Visitable[getChildCount()];stratChilds[0] = super.getChildAt(0);return stratChilds;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}public  tom.library.adt.bytecode.types.TInstructionList  visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{if ( (tom__arg instanceof tom.library.adt.bytecode.types.TInstructionList) ) {{  tom.library.adt.bytecode.types.TInstructionList  tomMatch555NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TInstructionList )tom__arg);if ( true ) {

 ins.ins = tomMatch555NameNumberfreshSubject_1; }}}}return _visit_TInstructionList(tom__arg,introspector); }public  tom.library.adt.bytecode.types.TInstructionList  _visit_TInstructionList( tom.library.adt.bytecode.types.TInstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!((environment ==  null ))) {return (( tom.library.adt.bytecode.types.TInstructionList )any.visit(environment,introspector));} else {return (( tom.library.adt.bytecode.types.TInstructionList )any.visitLight(arg,introspector));} }public Object visitLight(Object v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.TInstructionList) ) {return visit_TInstructionList((( tom.library.adt.bytecode.types.TInstructionList )v),introspector);}if (!((environment ==  null ))) {return any.visit(environment,introspector);} else {return any.visitLight(v,introspector);} }}private static  tom.library.sl.Strategy  tom_make_Assign( InsWrapper  t0) { return new Assign(t0);}



  /**
   * Generates a control flow graph for each method of the given class.
   * @param clazz the gom-term subject representing the class.
   */
  public static void classToDot(TClass clazz) throws VisitFailure {
    Writer w = new BufferedWriter(new OutputStreamWriter(System.out)); 
    TMethodList methods = clazz.getmethods();
    {if ( (methods instanceof tom.library.adt.bytecode.types.TMethodList) ) {{  tom.library.adt.bytecode.types.TMethodList  tomMatch556NameNumberfreshSubject_1=(( tom.library.adt.bytecode.types.TMethodList )methods);{  tom.library.adt.bytecode.types.TMethodList  tomMatch556NameNumber_freshVar_0=tomMatch556NameNumberfreshSubject_1;if ( ((tomMatch556NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.tmethodlist.ConsMethodList) || (tomMatch556NameNumber_freshVar_0 instanceof tom.library.adt.bytecode.types.tmethodlist.EmptyMethodList)) ) {{  tom.library.adt.bytecode.types.TMethodList  tomMatch556NameNumber_begin_2=tomMatch556NameNumber_freshVar_0;{  tom.library.adt.bytecode.types.TMethodList  tomMatch556NameNumber_end_3=tomMatch556NameNumber_freshVar_0;do {{{  tom.library.adt.bytecode.types.TMethodList  tomMatch556NameNumber_freshVar_1=tomMatch556NameNumber_end_3;if (!( tomMatch556NameNumber_freshVar_1.isEmptyMethodList() )) {{  tom.library.adt.bytecode.types.TMethod  tom_x= tomMatch556NameNumber_freshVar_1.getHeadMethodList() ;{  tom.library.adt.bytecode.types.TMethodList  tomMatch556NameNumber_freshVar_4= tomMatch556NameNumber_freshVar_1.getTailMethodList() ;if ( true ) {

        try {
          TMethodInfo info = tom_x.getinfo();
          w.write("digraph "/* Generated by TOM (version 2.6alpha): Do not edit this file */+info.getname()+" {\n              "
);

          // Print a root node with the method name and descriptor. Add a link to the first instruction if any.
          w.write("method [label=\"method : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+info.getname()+"\\ndescriptor : "/* Generated by TOM (version 2.6alpha): Do not edit this file */+ToolBox.buildDescriptor(info.getdesc())+"\" shape=box];\n              "
);
          if(!tom_x.getcode().isEmptyCode()) {
            TInstructionList ins = tom_x.getcode().getinstructions();
            if(!ins.isEmptyInstructionList()) {
              w.write("method -> "/* Generated by TOM (version 2.6alpha): Do not edit this file */+getDotId(ins)+"\n                  "
);
            }

            // Compute the label map to allow us to retrieve an instruction from a label.
            HashMap labelMap = new HashMap();
            tom_make_TopDown(tom_make_BuildLabelMap(labelMap)).visit(ins);

            // Create a wrapper to pass a parent node to its children.
            InsWrapper insWrapper = new InsWrapper();

            // This strategy run through all node. For each of them, the node is printed.
            // Links between the current node and its children are printed by passing the parent to each of them.
            // AllCfg allows us to get all the children of the current node.
            Strategy toDot = tom_make_TopDown(tom_make_Try(( (( (( null )==null)?( (( (( null )==null)?tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap):new tom.library.sl.Sequence(tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap),( null )) )==null)?tom_make_Assign(insWrapper):new tom.library.sl.Sequence(tom_make_Assign(insWrapper),( (( null )==null)?tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap):new tom.library.sl.Sequence(tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap),( null )) )) ):new tom.library.sl.Sequence(( (( (( null )==null)?tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap):new tom.library.sl.Sequence(tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap),( null )) )==null)?tom_make_Assign(insWrapper):new tom.library.sl.Sequence(tom_make_Assign(insWrapper),( (( null )==null)?tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap):new tom.library.sl.Sequence(tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap),( null )) )) ),( null )) )==null)?tom_make_PrintDotNode(w):new tom.library.sl.Sequence(tom_make_PrintDotNode(w),( (( null )==null)?( (( (( null )==null)?tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap):new tom.library.sl.Sequence(tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap),( null )) )==null)?tom_make_Assign(insWrapper):new tom.library.sl.Sequence(tom_make_Assign(insWrapper),( (( null )==null)?tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap):new tom.library.sl.Sequence(tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap),( null )) )) ):new tom.library.sl.Sequence(( (( (( null )==null)?tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap):new tom.library.sl.Sequence(tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap),( null )) )==null)?tom_make_Assign(insWrapper):new tom.library.sl.Sequence(tom_make_Assign(insWrapper),( (( null )==null)?tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap):new tom.library.sl.Sequence(tom_make_AllCfg(tom_make_PrintDotLink(w,insWrapper),labelMap),( null )) )) ),( null )) )) )))







;

            toDot.visit(ins);

            // Prints the try/catch/finally blocks.
            printTryCatchBlocks(tom_x.getcode().gettryCatchBlocks(), labelMap, w, ins);

            // Prints the local variables informations.
            printLocalVariables(tom_x.getcode().getlocalVariables(), labelMap, w, ins);
          }

          w.write("}\n");
          w.flush();
        } catch(IOException e) {
          e.printStackTrace();
        }
      }}}}}if ( tomMatch556NameNumber_end_3.isEmptyMethodList() ) {tomMatch556NameNumber_end_3=tomMatch556NameNumber_begin_2;} else {tomMatch556NameNumber_end_3= tomMatch556NameNumber_end_3.getTailMethodList() ;}}} while(!( (tomMatch556NameNumber_end_3==tomMatch556NameNumber_begin_2) ));}}}}}}}

  }


  /**
   * Generates the dot control flow graphs for each method of the specified class.
   * Usage : java bytecode.CFGViewer <class name>
   * Ex: java bytecode.CFGViewer bytecode.Subject
   * @param args args[0] : the class name
   */
    public static void main(String[] args) {
      if(args.length <= 0) {
        System.out.println("Usage : java bytecode.CFGViewer <class name>\nEx: java bytecode.CFGViewer bytecode.Subject");
        return;
      }
      BytecodeReader cg = new BytecodeReader(args[0]);
      TClass c = cg.getTClass();
      try {
      classToDot(c);
      } catch (VisitFailure e) {
        System.out.println("Unexpected failure in strategies");
      }
    }
  }


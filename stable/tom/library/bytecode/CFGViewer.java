




























package tom.library.bytecode;



import java.util.Map;
import java.util.HashMap;
import java.io.Writer;
import java.io.IOException;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;



import org.objectweb.asm.ClassReader;
import org.objectweb.asm.ClassAdapter;



import tom.library.sl.*;



import tom.library.adt.bytecode.*;
import tom.library.adt.bytecode.types.*;







public class CFGViewer {
  
     private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( l1 instanceof tom.library.sl.Sequence )) {       if(( ( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ) == null )) {         return  tom.library.sl.Sequence.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ),l2) ;       } else {         return  tom.library.sl.Sequence.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ),tom_append_list_Sequence(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ),l2)) ;       }     } else {       return  tom.library.sl.Sequence.make(l1,l2) ;     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end == null ) ||  (end.equals( null )) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.sl.Sequence.make(((( begin instanceof tom.library.sl.Sequence ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( begin instanceof tom.library.sl.Sequence ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ): null ),end,tail)) ;   }      private static   tom.library.sl.Strategy  tom_append_list_Choice( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( l1 instanceof tom.library.sl.Choice )) {       if(( ( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ) ==null )) {         return  tom.library.sl.Choice.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ),l2) ;       } else {         return  tom.library.sl.Choice.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ),tom_append_list_Choice(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ),l2)) ;       }     } else {       return  tom.library.sl.Choice.make(l1,l2) ;     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Choice( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end ==null ) ||  (end.equals( null )) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.sl.Choice.make(((( begin instanceof tom.library.sl.Choice ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Choice(((( begin instanceof tom.library.sl.Choice ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ): null ),end,tail)) ;   }      private static   tom.library.sl.Strategy  tom_append_list_SequenceId( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( l1 instanceof tom.library.sl.SequenceId )) {       if(( ( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ) == null )) {         return  tom.library.sl.SequenceId.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ),l2) ;       } else {         return  tom.library.sl.SequenceId.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ),tom_append_list_SequenceId(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ),l2)) ;       }     } else {       return  tom.library.sl.SequenceId.make(l1,l2) ;     }   }   private static   tom.library.sl.Strategy  tom_get_slice_SequenceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end == null ) ||  (end.equals( null )) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.sl.SequenceId.make(((( begin instanceof tom.library.sl.SequenceId ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_SequenceId(((( begin instanceof tom.library.sl.SequenceId ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.THEN) ): null ),end,tail)) ;   }      private static   tom.library.sl.Strategy  tom_append_list_ChoiceId( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( l1 instanceof tom.library.sl.ChoiceId )) {       if(( ( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.THEN) ) ==null )) {         return  tom.library.sl.ChoiceId.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ),l2) ;       } else {         return  tom.library.sl.ChoiceId.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ),tom_append_list_ChoiceId(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.THEN) ),l2)) ;       }     } else {       return  tom.library.sl.ChoiceId.make(l1,l2) ;     }   }   private static   tom.library.sl.Strategy  tom_get_slice_ChoiceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end ==null ) ||  (end.equals( null )) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.sl.ChoiceId.make(((( begin instanceof tom.library.sl.ChoiceId ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_ChoiceId(((( begin instanceof tom.library.sl.ChoiceId ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.THEN) ): null ),end,tail)) ;   }   private static  tom.library.sl.Strategy  tom_make_AUCtl( tom.library.sl.Strategy  s1,  tom.library.sl.Strategy  s2) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("x") ), tom.library.sl.Choice.make(s2, tom.library.sl.Choice.make( tom.library.sl.Sequence.make( tom.library.sl.Sequence.make(s1, tom.library.sl.Sequence.make(( new tom.library.sl.All(( new tom.library.sl.MuVar("x") )) ), null ) ) , tom.library.sl.Sequence.make(( new tom.library.sl.One(( new tom.library.sl.Identity() )) ), null ) ) , null ) ) ) ) );}private static  tom.library.sl.Strategy  tom_make_EUCtl( tom.library.sl.Strategy  s1,  tom.library.sl.Strategy  s2) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("x") ), tom.library.sl.Choice.make(s2, tom.library.sl.Choice.make( tom.library.sl.Sequence.make(s1, tom.library.sl.Sequence.make(( new tom.library.sl.One(( new tom.library.sl.MuVar("x") )) ), null ) ) , null ) ) ) ));}private static  tom.library.sl.Strategy  tom_make_Try( tom.library.sl.Strategy  s) { return (  tom.library.sl.Choice.make(s, tom.library.sl.Choice.make(( new tom.library.sl.Identity() ), null ) )  );}private static  tom.library.sl.Strategy  tom_make_Repeat( tom.library.sl.Strategy  s) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ), tom.library.sl.Choice.make( tom.library.sl.Sequence.make(s, tom.library.sl.Sequence.make(( new tom.library.sl.MuVar("_x") ), null ) ) , tom.library.sl.Choice.make(( new tom.library.sl.Identity() ), null ) ) ) ) );}private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ), tom.library.sl.Sequence.make(v, tom.library.sl.Sequence.make(( new tom.library.sl.All(( new tom.library.sl.MuVar("_x") )) ), null ) ) ) ) );}private static  tom.library.sl.Strategy  tom_make_OnceTopDown( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ), tom.library.sl.Choice.make(v, tom.library.sl.Choice.make(( new tom.library.sl.One(( new tom.library.sl.MuVar("_x") )) ), null ) ) ) ) );}private static  tom.library.sl.Strategy  tom_make_RepeatId( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ), tom.library.sl.SequenceId.make(v, tom.library.sl.SequenceId.make(( new tom.library.sl.MuVar("_x") ), null ) ) ) ) );}private static  tom.library.sl.Strategy  tom_make_OnceTopDownId( tom.library.sl.Strategy  v) { return ( ( new tom.library.sl.Mu(( new tom.library.sl.MuVar("_x") ), tom.library.sl.ChoiceId.make(v, tom.library.sl.ChoiceId.make(( new tom.library.sl.OneId(( new tom.library.sl.MuVar("_x") )) ), null ) ) ) ) );}   private static   tom.library.adt.bytecode.types.LabelNodeList  tom_append_list_LabelNodeList( tom.library.adt.bytecode.types.LabelNodeList l1,  tom.library.adt.bytecode.types.LabelNodeList  l2) {     if( l1.isEmptyLabelNodeList() ) {       return l2;     } else if( l2.isEmptyLabelNodeList() ) {       return l1;     } else if(  l1.getTailLabelNodeList() .isEmptyLabelNodeList() ) {       return  tom.library.adt.bytecode.types.labelnodelist.ConsLabelNodeList.make( l1.getHeadLabelNodeList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.labelnodelist.ConsLabelNodeList.make( l1.getHeadLabelNodeList() ,tom_append_list_LabelNodeList( l1.getTailLabelNodeList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.LabelNodeList  tom_get_slice_LabelNodeList( tom.library.adt.bytecode.types.LabelNodeList  begin,  tom.library.adt.bytecode.types.LabelNodeList  end, tom.library.adt.bytecode.types.LabelNodeList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyLabelNodeList()  ||  (end== tom.library.adt.bytecode.types.labelnodelist.EmptyLabelNodeList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.labelnodelist.ConsLabelNodeList.make( begin.getHeadLabelNodeList() ,( tom.library.adt.bytecode.types.LabelNodeList )tom_get_slice_LabelNodeList( begin.getTailLabelNodeList() ,end,tail)) ;   }      private static   tom.library.adt.bytecode.types.MethodList  tom_append_list_MethodList( tom.library.adt.bytecode.types.MethodList l1,  tom.library.adt.bytecode.types.MethodList  l2) {     if( l1.isEmptyMethodList() ) {       return l2;     } else if( l2.isEmptyMethodList() ) {       return l1;     } else if(  l1.getTailMethodList() .isEmptyMethodList() ) {       return  tom.library.adt.bytecode.types.methodlist.ConsMethodList.make( l1.getHeadMethodList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.methodlist.ConsMethodList.make( l1.getHeadMethodList() ,tom_append_list_MethodList( l1.getTailMethodList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.MethodList  tom_get_slice_MethodList( tom.library.adt.bytecode.types.MethodList  begin,  tom.library.adt.bytecode.types.MethodList  end, tom.library.adt.bytecode.types.MethodList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyMethodList()  ||  (end== tom.library.adt.bytecode.types.methodlist.EmptyMethodList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.methodlist.ConsMethodList.make( begin.getHeadMethodList() ,( tom.library.adt.bytecode.types.MethodList )tom_get_slice_MethodList( begin.getTailMethodList() ,end,tail)) ;   }      private static   tom.library.adt.bytecode.types.LocalVariableList  tom_append_list_LocalVariableList( tom.library.adt.bytecode.types.LocalVariableList l1,  tom.library.adt.bytecode.types.LocalVariableList  l2) {     if( l1.isEmptyLocalVariableList() ) {       return l2;     } else if( l2.isEmptyLocalVariableList() ) {       return l1;     } else if(  l1.getTailLocalVariableList() .isEmptyLocalVariableList() ) {       return  tom.library.adt.bytecode.types.localvariablelist.ConsLocalVariableList.make( l1.getHeadLocalVariableList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.localvariablelist.ConsLocalVariableList.make( l1.getHeadLocalVariableList() ,tom_append_list_LocalVariableList( l1.getTailLocalVariableList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.LocalVariableList  tom_get_slice_LocalVariableList( tom.library.adt.bytecode.types.LocalVariableList  begin,  tom.library.adt.bytecode.types.LocalVariableList  end, tom.library.adt.bytecode.types.LocalVariableList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyLocalVariableList()  ||  (end== tom.library.adt.bytecode.types.localvariablelist.EmptyLocalVariableList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.localvariablelist.ConsLocalVariableList.make( begin.getHeadLocalVariableList() ,( tom.library.adt.bytecode.types.LocalVariableList )tom_get_slice_LocalVariableList( begin.getTailLocalVariableList() ,end,tail)) ;   }      private static   tom.library.adt.bytecode.types.InstructionList  tom_append_list_InstructionList( tom.library.adt.bytecode.types.InstructionList l1,  tom.library.adt.bytecode.types.InstructionList  l2) {     if( l1.isEmptyInstructionList() ) {       return l2;     } else if( l2.isEmptyInstructionList() ) {       return l1;     } else if(  l1.getTailInstructionList() .isEmptyInstructionList() ) {       return  tom.library.adt.bytecode.types.instructionlist.ConsInstructionList.make( l1.getHeadInstructionList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.instructionlist.ConsInstructionList.make( l1.getHeadInstructionList() ,tom_append_list_InstructionList( l1.getTailInstructionList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.InstructionList  tom_get_slice_InstructionList( tom.library.adt.bytecode.types.InstructionList  begin,  tom.library.adt.bytecode.types.InstructionList  end, tom.library.adt.bytecode.types.InstructionList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyInstructionList()  ||  (end== tom.library.adt.bytecode.types.instructionlist.EmptyInstructionList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.instructionlist.ConsInstructionList.make( begin.getHeadInstructionList() ,( tom.library.adt.bytecode.types.InstructionList )tom_get_slice_InstructionList( begin.getTailInstructionList() ,end,tail)) ;   }      private static   tom.library.adt.bytecode.types.IntList  tom_append_list_IntList( tom.library.adt.bytecode.types.IntList l1,  tom.library.adt.bytecode.types.IntList  l2) {     if( l1.isEmptyIntList() ) {       return l2;     } else if( l2.isEmptyIntList() ) {       return l1;     } else if(  l1.getTailIntList() .isEmptyIntList() ) {       return  tom.library.adt.bytecode.types.intlist.ConsIntList.make( l1.getHeadIntList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.intlist.ConsIntList.make( l1.getHeadIntList() ,tom_append_list_IntList( l1.getTailIntList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.IntList  tom_get_slice_IntList( tom.library.adt.bytecode.types.IntList  begin,  tom.library.adt.bytecode.types.IntList  end, tom.library.adt.bytecode.types.IntList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyIntList()  ||  (end== tom.library.adt.bytecode.types.intlist.EmptyIntList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.intlist.ConsIntList.make( begin.getHeadIntList() ,( tom.library.adt.bytecode.types.IntList )tom_get_slice_IntList( begin.getTailIntList() ,end,tail)) ;   }      private static   tom.library.adt.bytecode.types.TryCatchBlockList  tom_append_list_TryCatchBlockList( tom.library.adt.bytecode.types.TryCatchBlockList l1,  tom.library.adt.bytecode.types.TryCatchBlockList  l2) {     if( l1.isEmptyTryCatchBlockList() ) {       return l2;     } else if( l2.isEmptyTryCatchBlockList() ) {       return l1;     } else if(  l1.getTailTryCatchBlockList() .isEmptyTryCatchBlockList() ) {       return  tom.library.adt.bytecode.types.trycatchblocklist.ConsTryCatchBlockList.make( l1.getHeadTryCatchBlockList() ,l2) ;     } else {       return  tom.library.adt.bytecode.types.trycatchblocklist.ConsTryCatchBlockList.make( l1.getHeadTryCatchBlockList() ,tom_append_list_TryCatchBlockList( l1.getTailTryCatchBlockList() ,l2)) ;     }   }   private static   tom.library.adt.bytecode.types.TryCatchBlockList  tom_get_slice_TryCatchBlockList( tom.library.adt.bytecode.types.TryCatchBlockList  begin,  tom.library.adt.bytecode.types.TryCatchBlockList  end, tom.library.adt.bytecode.types.TryCatchBlockList  tail) {     if( (begin==end) ) {       return tail;     } else if( (end==tail)  && ( end.isEmptyTryCatchBlockList()  ||  (end== tom.library.adt.bytecode.types.trycatchblocklist.EmptyTryCatchBlockList.make() ) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.adt.bytecode.types.trycatchblocklist.ConsTryCatchBlockList.make( begin.getHeadTryCatchBlockList() ,( tom.library.adt.bytecode.types.TryCatchBlockList )tom_get_slice_TryCatchBlockList( begin.getTailTryCatchBlockList() ,end,tail)) ;   }   public static class BuildLabelMap extends tom.library.sl.AbstractStrategyBasic {private  java.util.Map  m;public BuildLabelMap( java.util.Map  m) {super(( new tom.library.sl.Identity() ));this.m=m;}public  java.util.Map  getm() {return m;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.InstructionList) ) {return ((T)visit_InstructionList((( tom.library.adt.bytecode.types.InstructionList )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  _visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( tom.library.adt.bytecode.types.InstructionList )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{ /* unamed block */{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {if ( ((( tom.library.adt.bytecode.types.InstructionList )tom__arg) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) ) { tom.library.adt.bytecode.types.Instruction  tomMatch809_1= (( tom.library.adt.bytecode.types.InstructionList )tom__arg).getHeadInstructionList() ;if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch809_1) instanceof tom.library.adt.bytecode.types.instruction.Anchor) ) {       m.put( tomMatch809_1.getlabel() , getEnvironment().getPosition());     }}}}}return _visit_InstructionList(tom__arg,introspector);}}public static class OneCfg extends tom.library.sl.AbstractStrategyBasic {private  tom.library.sl.Strategy  s;private  java.util.Map  m;public OneCfg( tom.library.sl.Strategy  s,  java.util.Map  m) {super(( new tom.library.sl.Identity() ));this.s=s;this.m=m;}public  tom.library.sl.Strategy  gets() {return s;}public  java.util.Map  getm() {return m;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);stratChildren[1] = gets();return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);s = ( tom.library.sl.Strategy ) children[1];return this;}public int getChildCount() {return 2;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);case 1: return gets();default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);case 1: s = ( tom.library.sl.Strategy )child; return this;default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.InstructionList) ) {return ((T)visit_InstructionList((( tom.library.adt.bytecode.types.InstructionList )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  _visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( tom.library.adt.bytecode.types.InstructionList )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{ /* unamed block */{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {if ( ((( tom.library.adt.bytecode.types.InstructionList )tom__arg) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) ) { tom.library.adt.bytecode.types.Instruction  tomMatch810_1= (( tom.library.adt.bytecode.types.InstructionList )tom__arg).getHeadInstructionList() ;if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_1) instanceof tom.library.adt.bytecode.types.instruction.Goto) ) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get( tomMatch810_1.getlabel() ));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) { /* unamed block */         getEnvironment().followPath(current.sub(p));       } else { /* unamed block */                  getEnvironment().followPathLocal(current.sub(p));       }       return (InstructionList) getEnvironment().getSubject();     }}}}{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {if ( ((( tom.library.adt.bytecode.types.InstructionList )tom__arg) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) ) { tom.library.adt.bytecode.types.Instruction  tomMatch810_9= (( tom.library.adt.bytecode.types.InstructionList )tom__arg).getHeadInstructionList() ;boolean tomMatch810_32= false ; tom.library.adt.bytecode.types.Instruction  tomMatch810_20= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_16= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_31= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_25= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_18= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_30= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_15= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_24= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_22= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_17= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_21= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_28= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_26= null ; tom.library.adt.bytecode.types.LabelNode  tomMatch810_13= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_29= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_23= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_27= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_19= null ;if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.Ifeq) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_15=tomMatch810_9;tomMatch810_13= tomMatch810_15.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.Ifne) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_16=tomMatch810_9;tomMatch810_13= tomMatch810_16.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.Iflt) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_17=tomMatch810_9;tomMatch810_13= tomMatch810_17.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.Ifge) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_18=tomMatch810_9;tomMatch810_13= tomMatch810_18.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.Ifgt) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_19=tomMatch810_9;tomMatch810_13= tomMatch810_19.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.Ifle) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_20=tomMatch810_9;tomMatch810_13= tomMatch810_20.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmpeq) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_21=tomMatch810_9;tomMatch810_13= tomMatch810_21.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmpne) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_22=tomMatch810_9;tomMatch810_13= tomMatch810_22.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmplt) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_23=tomMatch810_9;tomMatch810_13= tomMatch810_23.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmpge) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_24=tomMatch810_9;tomMatch810_13= tomMatch810_24.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmpgt) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_25=tomMatch810_9;tomMatch810_13= tomMatch810_25.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmple) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_26=tomMatch810_9;tomMatch810_13= tomMatch810_26.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.If_acmpeq) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_27=tomMatch810_9;tomMatch810_13= tomMatch810_27.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.If_acmpne) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_28=tomMatch810_9;tomMatch810_13= tomMatch810_28.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.Jsr) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_29=tomMatch810_9;tomMatch810_13= tomMatch810_29.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.Ifnull) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_30=tomMatch810_9;tomMatch810_13= tomMatch810_30.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_9) instanceof tom.library.adt.bytecode.types.instruction.Ifnonnull) ) {{ /* unamed block */tomMatch810_32= true ;tomMatch810_31=tomMatch810_9;tomMatch810_13= tomMatch810_31.getlabel() ;}}}}}}}}}}}}}}}}}}if (tomMatch810_32) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch810_13));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) { /* unamed block */         getEnvironment().followPath(current.sub(p));         return (InstructionList) getEnvironment().getSubject();       } else { /* unamed block */                  getEnvironment().followPathLocal(current.sub(p));       }}}}}{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {if ( ((( tom.library.adt.bytecode.types.InstructionList )tom__arg) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) ) { tom.library.adt.bytecode.types.Instruction  tomMatch810_34= (( tom.library.adt.bytecode.types.InstructionList )tom__arg).getHeadInstructionList() ;boolean tomMatch810_43= false ; tom.library.adt.bytecode.types.Instruction  tomMatch810_41= null ; tom.library.adt.bytecode.types.LabelNode  tomMatch810_38= null ; tom.library.adt.bytecode.types.LabelNodeList  tomMatch810_39= null ; tom.library.adt.bytecode.types.Instruction  tomMatch810_42= null ;if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_34) instanceof tom.library.adt.bytecode.types.instruction.Tableswitch) ) {{ /* unamed block */tomMatch810_43= true ;tomMatch810_41=tomMatch810_34;tomMatch810_38= tomMatch810_41.getdflt() ;tomMatch810_39= tomMatch810_41.getlabels() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch810_34) instanceof tom.library.adt.bytecode.types.instruction.Lookupswitch) ) {{ /* unamed block */tomMatch810_43= true ;tomMatch810_42=tomMatch810_34;tomMatch810_38= tomMatch810_42.getdflt() ;tomMatch810_39= tomMatch810_42.getlabels() ;}}}if (tomMatch810_43) {       LabelNodeList labelList = tomMatch810_39;       { /* unamed block */{ /* unamed block */if ( (labelList instanceof tom.library.adt.bytecode.types.LabelNodeList) ) {if ( (((( tom.library.adt.bytecode.types.LabelNodeList )labelList) instanceof tom.library.adt.bytecode.types.labelnodelist.ConsLabelNodeList) || ((( tom.library.adt.bytecode.types.LabelNodeList )labelList) instanceof tom.library.adt.bytecode.types.labelnodelist.EmptyLabelNodeList)) ) { tom.library.adt.bytecode.types.LabelNodeList  tomMatch811_end_4=(( tom.library.adt.bytecode.types.LabelNodeList )labelList);do {{ /* unamed block */if (!( tomMatch811_end_4.isEmptyLabelNodeList() )) {           tom.library.sl.Position p = (tom.library.sl.Position) (m.get( tomMatch811_end_4.getHeadLabelNodeList() ));           tom.library.sl.Position current = getEnvironment().getPosition();           getEnvironment().followPath(p.sub(current));           s.visit(getEnvironment());           if(getEnvironment().getStatus() == Environment.SUCCESS) { /* unamed block */             getEnvironment().followPath(current.sub(p));             return (InstructionList) getEnvironment().getSubject();           } else { /* unamed block */                          getEnvironment().followPathLocal(current.sub(p));           }}if ( tomMatch811_end_4.isEmptyLabelNodeList() ) {tomMatch811_end_4=(( tom.library.adt.bytecode.types.LabelNodeList )labelList);} else {tomMatch811_end_4= tomMatch811_end_4.getTailLabelNodeList() ;}}} while(!( (tomMatch811_end_4==(( tom.library.adt.bytecode.types.LabelNodeList )labelList)) ));}}}}       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch810_38));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) { /* unamed block */         getEnvironment().followPath(current.sub(p));         return (InstructionList) getEnvironment().getSubject();       } else { /* unamed block */                  getEnvironment().followPathLocal(current.sub(p));       }}}}}{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {if ( ((( tom.library.adt.bytecode.types.InstructionList )tom__arg) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) ) { tom.library.adt.bytecode.types.InstructionList  tomMatch810_46= (( tom.library.adt.bytecode.types.InstructionList )tom__arg).getTailInstructionList() ;boolean tomMatch810_50= false ;if ( (((( tom.library.adt.bytecode.types.InstructionList )tomMatch810_46) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) || ((( tom.library.adt.bytecode.types.InstructionList )tomMatch810_46) instanceof tom.library.adt.bytecode.types.instructionlist.EmptyInstructionList)) ) {if ( tomMatch810_46.isEmptyInstructionList() ) {tomMatch810_50= true ;}}if (!(tomMatch810_50)) {       getEnvironment().down(2);       s.visit(getEnvironment());       getEnvironment().up();     }}}}}return _visit_InstructionList(tom__arg,introspector);}}public static class AllCfg extends tom.library.sl.AbstractStrategyBasic {private  tom.library.sl.Strategy  s;private  java.util.Map  m;public AllCfg( tom.library.sl.Strategy  s,  java.util.Map  m) {super(( new tom.library.sl.Identity() ));this.s=s;this.m=m;}public  tom.library.sl.Strategy  gets() {return s;}public  java.util.Map  getm() {return m;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);stratChildren[1] = gets();return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);s = ( tom.library.sl.Strategy ) children[1];return this;}public int getChildCount() {return 2;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);case 1: return gets();default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);case 1: s = ( tom.library.sl.Strategy )child; return this;default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.InstructionList) ) {return ((T)visit_InstructionList((( tom.library.adt.bytecode.types.InstructionList )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  _visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( tom.library.adt.bytecode.types.InstructionList )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{ /* unamed block */{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {if ( ((( tom.library.adt.bytecode.types.InstructionList )tom__arg) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) ) { tom.library.adt.bytecode.types.Instruction  tomMatch812_1= (( tom.library.adt.bytecode.types.InstructionList )tom__arg).getHeadInstructionList() ;if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_1) instanceof tom.library.adt.bytecode.types.instruction.Goto) ) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get( tomMatch812_1.getlabel() ));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) { /* unamed block */         getEnvironment().followPath(current.sub(p));       } else { /* unamed block */                  getEnvironment().followPathLocal(current.sub(p));       }                return (InstructionList) getEnvironment().getSubject();     }}}}{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {if ( ((( tom.library.adt.bytecode.types.InstructionList )tom__arg) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) ) { tom.library.adt.bytecode.types.Instruction  tomMatch812_9= (( tom.library.adt.bytecode.types.InstructionList )tom__arg).getHeadInstructionList() ;boolean tomMatch812_32= false ; tom.library.adt.bytecode.types.Instruction  tomMatch812_25= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_26= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_30= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_21= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_24= null ; tom.library.adt.bytecode.types.LabelNode  tomMatch812_13= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_19= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_29= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_20= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_27= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_28= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_16= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_15= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_23= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_31= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_22= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_18= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_17= null ;if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.Ifeq) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_15=tomMatch812_9;tomMatch812_13= tomMatch812_15.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.Ifne) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_16=tomMatch812_9;tomMatch812_13= tomMatch812_16.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.Iflt) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_17=tomMatch812_9;tomMatch812_13= tomMatch812_17.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.Ifge) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_18=tomMatch812_9;tomMatch812_13= tomMatch812_18.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.Ifgt) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_19=tomMatch812_9;tomMatch812_13= tomMatch812_19.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.Ifle) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_20=tomMatch812_9;tomMatch812_13= tomMatch812_20.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmpeq) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_21=tomMatch812_9;tomMatch812_13= tomMatch812_21.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmpne) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_22=tomMatch812_9;tomMatch812_13= tomMatch812_22.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmplt) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_23=tomMatch812_9;tomMatch812_13= tomMatch812_23.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmpge) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_24=tomMatch812_9;tomMatch812_13= tomMatch812_24.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmpgt) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_25=tomMatch812_9;tomMatch812_13= tomMatch812_25.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.If_icmple) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_26=tomMatch812_9;tomMatch812_13= tomMatch812_26.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.If_acmpeq) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_27=tomMatch812_9;tomMatch812_13= tomMatch812_27.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.If_acmpne) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_28=tomMatch812_9;tomMatch812_13= tomMatch812_28.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.Jsr) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_29=tomMatch812_9;tomMatch812_13= tomMatch812_29.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.Ifnull) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_30=tomMatch812_9;tomMatch812_13= tomMatch812_30.getlabel() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_9) instanceof tom.library.adt.bytecode.types.instruction.Ifnonnull) ) {{ /* unamed block */tomMatch812_32= true ;tomMatch812_31=tomMatch812_9;tomMatch812_13= tomMatch812_31.getlabel() ;}}}}}}}}}}}}}}}}}}if (tomMatch812_32) {       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch812_13));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) { /* unamed block */         getEnvironment().followPath(current.sub(p));       } else { /* unamed block */                  getEnvironment().followPathLocal(current.sub(p));       }}}}}{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {if ( ((( tom.library.adt.bytecode.types.InstructionList )tom__arg) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) ) { tom.library.adt.bytecode.types.Instruction  tomMatch812_34= (( tom.library.adt.bytecode.types.InstructionList )tom__arg).getHeadInstructionList() ;boolean tomMatch812_43= false ; tom.library.adt.bytecode.types.LabelNodeList  tomMatch812_39= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_41= null ; tom.library.adt.bytecode.types.Instruction  tomMatch812_42= null ; tom.library.adt.bytecode.types.LabelNode  tomMatch812_38= null ;if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_34) instanceof tom.library.adt.bytecode.types.instruction.Tableswitch) ) {{ /* unamed block */tomMatch812_43= true ;tomMatch812_41=tomMatch812_34;tomMatch812_38= tomMatch812_41.getdflt() ;tomMatch812_39= tomMatch812_41.getlabels() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )tomMatch812_34) instanceof tom.library.adt.bytecode.types.instruction.Lookupswitch) ) {{ /* unamed block */tomMatch812_43= true ;tomMatch812_42=tomMatch812_34;tomMatch812_38= tomMatch812_42.getdflt() ;tomMatch812_39= tomMatch812_42.getlabels() ;}}}if (tomMatch812_43) { tom.library.adt.bytecode.types.LabelNodeList  tom___labels=tomMatch812_39;       LabelNodeList labels = tom___labels;       { /* unamed block */{ /* unamed block */if ( (tom___labels instanceof tom.library.adt.bytecode.types.LabelNodeList) ) {if ( (((( tom.library.adt.bytecode.types.LabelNodeList )tom___labels) instanceof tom.library.adt.bytecode.types.labelnodelist.ConsLabelNodeList) || ((( tom.library.adt.bytecode.types.LabelNodeList )tom___labels) instanceof tom.library.adt.bytecode.types.labelnodelist.EmptyLabelNodeList)) ) { tom.library.adt.bytecode.types.LabelNodeList  tomMatch813_end_4=(( tom.library.adt.bytecode.types.LabelNodeList )tom___labels);do {{ /* unamed block */if (!( tomMatch813_end_4.isEmptyLabelNodeList() )) {           tom.library.sl.Position p = (tom.library.sl.Position) (m.get( tomMatch813_end_4.getHeadLabelNodeList() ));           tom.library.sl.Position current = getEnvironment().getPosition();           getEnvironment().followPath(current.sub(p));           s.visit(getEnvironment());           if(getEnvironment().getStatus() == Environment.SUCCESS) { /* unamed block */             getEnvironment().followPath(current.sub(p));           } else { /* unamed block */                          getEnvironment().followPathLocal(current.sub(p));           }}if ( tomMatch813_end_4.isEmptyLabelNodeList() ) {tomMatch813_end_4=(( tom.library.adt.bytecode.types.LabelNodeList )tom___labels);} else {tomMatch813_end_4= tomMatch813_end_4.getTailLabelNodeList() ;}}} while(!( (tomMatch813_end_4==(( tom.library.adt.bytecode.types.LabelNodeList )tom___labels)) ));}}}}       tom.library.sl.Position p = (tom.library.sl.Position) (m.get(tomMatch812_38));       tom.library.sl.Position current = getEnvironment().getPosition();       getEnvironment().followPath(p.sub(current));       s.visit(getEnvironment());       if(getEnvironment().getStatus() == Environment.SUCCESS) { /* unamed block */         getEnvironment().followPath(current.sub(p));       } else { /* unamed block */                  getEnvironment().followPathLocal(current.sub(p));       }}}}}{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {if ( ((( tom.library.adt.bytecode.types.InstructionList )tom__arg) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) ) { tom.library.adt.bytecode.types.InstructionList  tomMatch812_46= (( tom.library.adt.bytecode.types.InstructionList )tom__arg).getTailInstructionList() ;boolean tomMatch812_50= false ;if ( (((( tom.library.adt.bytecode.types.InstructionList )tomMatch812_46) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) || ((( tom.library.adt.bytecode.types.InstructionList )tomMatch812_46) instanceof tom.library.adt.bytecode.types.instructionlist.EmptyInstructionList)) ) {if ( tomMatch812_46.isEmptyInstructionList() ) {tomMatch812_50= true ;}}if (!(tomMatch812_50)) {       getEnvironment().down(2);       s.visit(getEnvironment());       getEnvironment().up();     }}}}}return _visit_InstructionList(tom__arg,introspector);}}public static class Mark extends tom.library.sl.AbstractStrategyBasic {private  java.util.Map  map;public Mark( java.util.Map  map) {super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.Map  getmap() {return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.InstructionList) ) {return ((T)visit_InstructionList((( tom.library.adt.bytecode.types.InstructionList )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  _visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( tom.library.adt.bytecode.types.InstructionList )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{ /* unamed block */{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) { tom.library.adt.bytecode.types.InstructionList  tom___c=(( tom.library.adt.bytecode.types.InstructionList )tom__arg);       Object o = map.get(tom___c);       int value = 1;       if(o != null)         value = ((Integer)o).intValue() + 1;       map.put(tom___c, Integer.valueOf(value));     }}}return _visit_InstructionList(tom__arg,introspector);}}public static class UnMark extends tom.library.sl.AbstractStrategyBasic {private  java.util.Map  map;public UnMark( java.util.Map  map) {super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.Map  getmap() {return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.InstructionList) ) {return ((T)visit_InstructionList((( tom.library.adt.bytecode.types.InstructionList )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  _visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( tom.library.adt.bytecode.types.InstructionList )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{ /* unamed block */{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) { tom.library.adt.bytecode.types.InstructionList  tom___c=(( tom.library.adt.bytecode.types.InstructionList )tom__arg);       Object o = map.get(tom___c);       if(o == null) { /* unamed block */         throw new tom.library.sl.VisitFailure();       }       int value = ((Integer)o).intValue() - 1;       map.put(tom___c, Integer.valueOf(value));     }}}return _visit_InstructionList(tom__arg,introspector);}}public static class IsMarked extends tom.library.sl.AbstractStrategyBasic {private  java.util.Map  map;public IsMarked( java.util.Map  map) {super(( new tom.library.sl.Identity() ));this.map=map;}public  java.util.Map  getmap() {return map;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.InstructionList) ) {return ((T)visit_InstructionList((( tom.library.adt.bytecode.types.InstructionList )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  _visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( tom.library.adt.bytecode.types.InstructionList )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{ /* unamed block */{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {       Object o = map.get((( tom.library.adt.bytecode.types.InstructionList )tom__arg));       if(o == null || ((Integer)o).intValue() <= 0)         throw new tom.library.sl.VisitFailure();     }}}return _visit_InstructionList(tom__arg,introspector);}}






  
  private static String getDotId(InstructionList ins) {
    return ("insid" + ins.hashCode()).replace('-', 'm');
  }

  
  private static String getDotId(TryCatchBlock bl) {
    return ("blockid" + bl.hashCode()).replace('-', 'm');
  }

  
  private static String getDotId(LocalVariable var) {
    return ("varid" + var.hashCode()).replace('-', 'm');
  }

  
  private static String clean(String s) {
    return s.replaceAll("\\\"", "\\\\\\\"");
  }

  
  public static class PrintDotNode extends tom.library.sl.AbstractStrategyBasic {private java.io.Writer out;public PrintDotNode(java.io.Writer out) {super(( new tom.library.sl.Identity() ));this.out=out;}public java.io.Writer getout() {return out;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.InstructionList) ) {return ((T)visit_InstructionList((( tom.library.adt.bytecode.types.InstructionList )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  _visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( tom.library.adt.bytecode.types.InstructionList )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{ /* unamed block */{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {if ( ((( tom.library.adt.bytecode.types.InstructionList )tom__arg) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) ) {


        String id = getDotId((( tom.library.adt.bytecode.types.InstructionList )tom__arg));
        printDotInstruction( (( tom.library.adt.bytecode.types.InstructionList )tom__arg).getHeadInstructionList() , id, out);
      }}}}return _visit_InstructionList(tom__arg,introspector);}}



  
  private static void printDotInstruction(Instruction ins, String id, Writer out) {
    try {
      { /* unamed block */{ /* unamed block */if ( (ins instanceof tom.library.adt.bytecode.types.Instruction) ) {boolean tomMatch818_6= false ; tom.library.adt.bytecode.types.Instruction  tomMatch818_3= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_4= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_5= null ; int  tomMatch818_1= 0 ;if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Bipush) ) {{ /* unamed block */tomMatch818_6= true ;tomMatch818_3=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_1= tomMatch818_3.getoperand() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Sipush) ) {{ /* unamed block */tomMatch818_6= true ;tomMatch818_4=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_1= tomMatch818_4.getoperand() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Newarray) ) {{ /* unamed block */tomMatch818_6= true ;tomMatch818_5=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_1= tomMatch818_5.getoperand() ;}}}}if (tomMatch818_6) {


          out.write("\n              "+id+" [label=\""+ins.symbolName()+"\\noperand : "+Integer.toString(tomMatch818_1)+"\"];\n              "

);
          return;
        }}}{ /* unamed block */if ( (ins instanceof tom.library.adt.bytecode.types.Instruction) ) {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Multianewarray) ) {


          out.write("\n              "+id+" [label=\""+ins.symbolName()+"\\ntypeDesc : "+ (( tom.library.adt.bytecode.types.Instruction )ins).gettypeDesc() +"\\ndims : "+Integer.toString( (( tom.library.adt.bytecode.types.Instruction )ins).getdims() )+"\"];\n              "

);
          return;
        }}}{ /* unamed block */if ( (ins instanceof tom.library.adt.bytecode.types.Instruction) ) {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Ldc) ) {


          out.write("\n              "+id+" [label=\""+ins.symbolName()+"\\ncst : "+clean( (( tom.library.adt.bytecode.types.Instruction )ins).getcst() .toString())+"\"];\n              "

);
          return;
        }}}{ /* unamed block */if ( (ins instanceof tom.library.adt.bytecode.types.Instruction) ) {boolean tomMatch818_30= false ; int  tomMatch818_17= 0 ; tom.library.adt.bytecode.types.Instruction  tomMatch818_19= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_20= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_24= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_22= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_23= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_27= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_28= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_26= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_21= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_29= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_25= null ;if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Iload) ) {{ /* unamed block */tomMatch818_30= true ;tomMatch818_19=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_17= tomMatch818_19.getvar() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Lload) ) {{ /* unamed block */tomMatch818_30= true ;tomMatch818_20=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_17= tomMatch818_20.getvar() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Fload) ) {{ /* unamed block */tomMatch818_30= true ;tomMatch818_21=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_17= tomMatch818_21.getvar() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Dload) ) {{ /* unamed block */tomMatch818_30= true ;tomMatch818_22=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_17= tomMatch818_22.getvar() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Aload) ) {{ /* unamed block */tomMatch818_30= true ;tomMatch818_23=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_17= tomMatch818_23.getvar() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Istore) ) {{ /* unamed block */tomMatch818_30= true ;tomMatch818_24=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_17= tomMatch818_24.getvar() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Lstore) ) {{ /* unamed block */tomMatch818_30= true ;tomMatch818_25=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_17= tomMatch818_25.getvar() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Fstore) ) {{ /* unamed block */tomMatch818_30= true ;tomMatch818_26=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_17= tomMatch818_26.getvar() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Dstore) ) {{ /* unamed block */tomMatch818_30= true ;tomMatch818_27=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_17= tomMatch818_27.getvar() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Astore) ) {{ /* unamed block */tomMatch818_30= true ;tomMatch818_28=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_17= tomMatch818_28.getvar() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Ret) ) {{ /* unamed block */tomMatch818_30= true ;tomMatch818_29=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_17= tomMatch818_29.getvar() ;}}}}}}}}}}}}if (tomMatch818_30) {




          out.write("\n              "+id+" [label=\""+ins.symbolName()+"\\nvar : "+Integer.toString(tomMatch818_17)+"\"];\n              "

);
          return;
        }}}{ /* unamed block */if ( (ins instanceof tom.library.adt.bytecode.types.Instruction) ) {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Iinc) ) {


          out.write("\n              "+id+" [label=\""+ins.symbolName()+"\\nincr : "+Integer.toString( (( tom.library.adt.bytecode.types.Instruction )ins).getincr() )+"\\nvar : "+Integer.toString( (( tom.library.adt.bytecode.types.Instruction )ins).getvar() )+"\"];\n              "

);
          return;
        }}}{ /* unamed block */if ( (ins instanceof tom.library.adt.bytecode.types.Instruction) ) {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Tableswitch) ) {


          out.write("\n              "+id+" [label=\""+ins.symbolName()+"\\nmin : "+ (( tom.library.adt.bytecode.types.Instruction )ins).getmin() +"\\nmax : "+ (( tom.library.adt.bytecode.types.Instruction )ins).getmax() +"\"];\n              "

);
          return;
        }}}{ /* unamed block */if ( (ins instanceof tom.library.adt.bytecode.types.Instruction) ) {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Lookupswitch) ) { tom.library.adt.bytecode.types.IntList  tom___keys= (( tom.library.adt.bytecode.types.Instruction )ins).getkeys() ;


          out.write("\n              "+id+" [label=\""+ins.symbolName()+"\\nkeys : "
);
              IntList keys = tom___keys;
              { /* unamed block */{ /* unamed block */if ( (tom___keys instanceof tom.library.adt.bytecode.types.IntList) ) {if ( (((( tom.library.adt.bytecode.types.IntList )tom___keys) instanceof tom.library.adt.bytecode.types.intlist.ConsIntList) || ((( tom.library.adt.bytecode.types.IntList )tom___keys) instanceof tom.library.adt.bytecode.types.intlist.EmptyIntList)) ) { tom.library.adt.bytecode.types.IntList  tomMatch819_end_4=(( tom.library.adt.bytecode.types.IntList )tom___keys);do {{ /* unamed block */if (!( tomMatch819_end_4.isEmptyIntList() )) { tom.library.adt.bytecode.types.IntList  tomMatch819_5= tomMatch819_end_4.getTailIntList() ; tom.library.adt.bytecode.types.IntList  tomMatch819_end_8=tomMatch819_5;do {{ /* unamed block */if (!( tomMatch819_end_8.isEmptyIntList() )) {if (  tomMatch819_end_8.getTailIntList() .isEmptyIntList() ) {

                  out.write(""+Integer.toString( tomMatch819_end_4.getHeadIntList() )+", ");
                }}if ( tomMatch819_end_8.isEmptyIntList() ) {tomMatch819_end_8=tomMatch819_5;} else {tomMatch819_end_8= tomMatch819_end_8.getTailIntList() ;}}} while(!( (tomMatch819_end_8==tomMatch819_5) ));}if ( tomMatch819_end_4.isEmptyIntList() ) {tomMatch819_end_4=(( tom.library.adt.bytecode.types.IntList )tom___keys);} else {tomMatch819_end_4= tomMatch819_end_4.getTailIntList() ;}}} while(!( (tomMatch819_end_4==(( tom.library.adt.bytecode.types.IntList )tom___keys)) ));}}}{ /* unamed block */if ( (tom___keys instanceof tom.library.adt.bytecode.types.IntList) ) {if ( (((( tom.library.adt.bytecode.types.IntList )tom___keys) instanceof tom.library.adt.bytecode.types.intlist.ConsIntList) || ((( tom.library.adt.bytecode.types.IntList )tom___keys) instanceof tom.library.adt.bytecode.types.intlist.EmptyIntList)) ) { tom.library.adt.bytecode.types.IntList  tomMatch819_end_14=(( tom.library.adt.bytecode.types.IntList )tom___keys);do {{ /* unamed block */if (!( tomMatch819_end_14.isEmptyIntList() )) {if (  tomMatch819_end_14.getTailIntList() .isEmptyIntList() ) {

                  out.write(Integer.toString( tomMatch819_end_14.getHeadIntList() ));
                }}if ( tomMatch819_end_14.isEmptyIntList() ) {tomMatch819_end_14=(( tom.library.adt.bytecode.types.IntList )tom___keys);} else {tomMatch819_end_14= tomMatch819_end_14.getTailIntList() ;}}} while(!( (tomMatch819_end_14==(( tom.library.adt.bytecode.types.IntList )tom___keys)) ));}}}}

              out.write("\"];");
              return;
        }}}{ /* unamed block */if ( (ins instanceof tom.library.adt.bytecode.types.Instruction) ) {boolean tomMatch818_54= false ; tom.library.adt.bytecode.types.Instruction  tomMatch818_53= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_50= null ; String  tomMatch818_46= "" ; tom.library.adt.bytecode.types.Instruction  tomMatch818_52= null ; String  tomMatch818_47= "" ; tom.library.adt.bytecode.types.FieldDescriptor  tomMatch818_48= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_51= null ;if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Getstatic) ) {{ /* unamed block */tomMatch818_54= true ;tomMatch818_50=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_46= tomMatch818_50.getowner() ;tomMatch818_47= tomMatch818_50.getname() ;tomMatch818_48= tomMatch818_50.getfieldDesc() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Putstatic) ) {{ /* unamed block */tomMatch818_54= true ;tomMatch818_51=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_46= tomMatch818_51.getowner() ;tomMatch818_47= tomMatch818_51.getname() ;tomMatch818_48= tomMatch818_51.getfieldDesc() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Getfield) ) {{ /* unamed block */tomMatch818_54= true ;tomMatch818_52=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_46= tomMatch818_52.getowner() ;tomMatch818_47= tomMatch818_52.getname() ;tomMatch818_48= tomMatch818_52.getfieldDesc() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Putfield) ) {{ /* unamed block */tomMatch818_54= true ;tomMatch818_53=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_46= tomMatch818_53.getowner() ;tomMatch818_47= tomMatch818_53.getname() ;tomMatch818_48= tomMatch818_53.getfieldDesc() ;}}}}}if (tomMatch818_54) {


          out.write("\n              "+id+" [label=\""+ins.symbolName()+"\\nowner : "+tomMatch818_46+"\\nname : "+tomMatch818_47+"\\ndescriptor : "+ToolBox.buildDescriptor(tomMatch818_48)+"\"];\n              "

);
          return;
        }}}{ /* unamed block */if ( (ins instanceof tom.library.adt.bytecode.types.Instruction) ) {boolean tomMatch818_64= false ; tom.library.adt.bytecode.types.Instruction  tomMatch818_60= null ; String  tomMatch818_57= "" ; tom.library.adt.bytecode.types.Instruction  tomMatch818_61= null ; tom.library.adt.bytecode.types.MethodDescriptor  tomMatch818_58= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_63= null ; String  tomMatch818_56= "" ; tom.library.adt.bytecode.types.Instruction  tomMatch818_62= null ;if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Invokevirtual) ) {{ /* unamed block */tomMatch818_64= true ;tomMatch818_60=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_56= tomMatch818_60.getowner() ;tomMatch818_57= tomMatch818_60.getname() ;tomMatch818_58= tomMatch818_60.getmethodDesc() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Invokespecial) ) {{ /* unamed block */tomMatch818_64= true ;tomMatch818_61=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_56= tomMatch818_61.getowner() ;tomMatch818_57= tomMatch818_61.getname() ;tomMatch818_58= tomMatch818_61.getmethodDesc() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Invokestatic) ) {{ /* unamed block */tomMatch818_64= true ;tomMatch818_62=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_56= tomMatch818_62.getowner() ;tomMatch818_57= tomMatch818_62.getname() ;tomMatch818_58= tomMatch818_62.getmethodDesc() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Invokeinterface) ) {{ /* unamed block */tomMatch818_64= true ;tomMatch818_63=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_56= tomMatch818_63.getowner() ;tomMatch818_57= tomMatch818_63.getname() ;tomMatch818_58= tomMatch818_63.getmethodDesc() ;}}}}}if (tomMatch818_64) {


          out.write("\n              "+id+" [label=\""+ins.symbolName()+"\\nowner : "+tomMatch818_56+"\\nname : "+tomMatch818_57+"\\ndescriptor : "+ToolBox.buildDescriptor(tomMatch818_58)+"\"];\n              "

);
          return;
        }}}{ /* unamed block */if ( (ins instanceof tom.library.adt.bytecode.types.Instruction) ) {boolean tomMatch818_72= false ; tom.library.adt.bytecode.types.Instruction  tomMatch818_68= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_69= null ; tom.library.adt.bytecode.types.Instruction  tomMatch818_71= null ; String  tomMatch818_66= "" ; tom.library.adt.bytecode.types.Instruction  tomMatch818_70= null ;if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.New) ) {{ /* unamed block */tomMatch818_72= true ;tomMatch818_68=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_66= tomMatch818_68.gettypeDesc() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Anewarray) ) {{ /* unamed block */tomMatch818_72= true ;tomMatch818_69=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_66= tomMatch818_69.gettypeDesc() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Checkcast) ) {{ /* unamed block */tomMatch818_72= true ;tomMatch818_70=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_66= tomMatch818_70.gettypeDesc() ;}} else {if ( ((( tom.library.adt.bytecode.types.Instruction )ins) instanceof tom.library.adt.bytecode.types.instruction.Instanceof) ) {{ /* unamed block */tomMatch818_72= true ;tomMatch818_71=(( tom.library.adt.bytecode.types.Instruction )ins);tomMatch818_66= tomMatch818_71.gettypeDesc() ;}}}}}if (tomMatch818_72) {


          out.write("\n              "+id+" [label=\""+ins.symbolName()+"\\ndescriptor : "+tomMatch818_66+"\"];\n              "

);
          return;
        }}}{ /* unamed block */if ( (ins instanceof tom.library.adt.bytecode.types.Instruction) ) {


          out.write("\n              "+id+" [label=\""+ins.symbolName()+"\"];\n              "

);
        }}}

    } catch(IOException e) {
      e.printStackTrace();
    }
  }

  
  public static class PrintDotLink extends tom.library.sl.AbstractStrategyBasic {private java.io.Writer out;private  InsWrapper  parent;public PrintDotLink(java.io.Writer out,  InsWrapper  parent) {super(( new tom.library.sl.Identity() ));this.out=out;this.parent=parent;}public java.io.Writer getout() {return out;}public  InsWrapper  getparent() {return parent;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.InstructionList) ) {return ((T)visit_InstructionList((( tom.library.adt.bytecode.types.InstructionList )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  _visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( tom.library.adt.bytecode.types.InstructionList )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{ /* unamed block */{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {if ( ((( tom.library.adt.bytecode.types.InstructionList )tom__arg) instanceof tom.library.adt.bytecode.types.instructionlist.ConsInstructionList) ) {


        try { /* unamed block */
          out.write(""+getDotId(parent.ins)+" -> "+getDotId((( tom.library.adt.bytecode.types.InstructionList )tom__arg))+";\n              "
);
        } catch(IOException e) { /* unamed block */
          e.printStackTrace();
        }}}}}return _visit_InstructionList(tom__arg,introspector);}}




  
  private static void printTryCatchBlocks(TryCatchBlockList list, Map labelMap, Writer out,InstructionList inst) throws VisitFailure{
    { /* unamed block */{ /* unamed block */if ( (list instanceof tom.library.adt.bytecode.types.TryCatchBlockList) ) {if ( (((( tom.library.adt.bytecode.types.TryCatchBlockList )list) instanceof tom.library.adt.bytecode.types.trycatchblocklist.ConsTryCatchBlockList) || ((( tom.library.adt.bytecode.types.TryCatchBlockList )list) instanceof tom.library.adt.bytecode.types.trycatchblocklist.EmptyTryCatchBlockList)) ) { tom.library.adt.bytecode.types.TryCatchBlockList  tomMatch821_end_4=(( tom.library.adt.bytecode.types.TryCatchBlockList )list);do {{ /* unamed block */if (!( tomMatch821_end_4.isEmptyTryCatchBlockList() )) {

        try { /* unamed block */
          TryCatchBlock block =  tomMatch821_end_4.getHeadTryCatchBlockList() ;
          Handler handler = block.gethandler();
          String id = getDotId(block);

          { /* unamed block */{ /* unamed block */if ( (handler instanceof tom.library.adt.bytecode.types.Handler) ) {if ( ((( tom.library.adt.bytecode.types.Handler )handler) instanceof tom.library.adt.bytecode.types.handler.CatchHandler) ) {

              Position labelPosition = (Position) labelMap.get( (( tom.library.adt.bytecode.types.Handler )handler).gethandler() );
              InstructionList labelInst = (InstructionList) labelPosition.getSubterm().visit(inst);
              out.write("\n                  "+id+" [label=\"Catch\\ntype : "+ (( tom.library.adt.bytecode.types.Handler )handler).gettype() +"\" shape=box];\n                  "+id+" -> "+getDotId(labelInst)+" [label=\"handler\" style=dotted];\n                  "


);
            }}}{ /* unamed block */if ( (handler instanceof tom.library.adt.bytecode.types.Handler) ) {if ( ((( tom.library.adt.bytecode.types.Handler )handler) instanceof tom.library.adt.bytecode.types.handler.FinallyHandler) ) {


              Position labelPosition = (Position) labelMap.get( (( tom.library.adt.bytecode.types.Handler )handler).gethandler() );
              InstructionList labelInst = (InstructionList) labelPosition.getSubterm().visit(inst);
              out.write("\n                  "+id+" [label=\"Finally\" shape=box];\n                  "+id+" -> "+getDotId(labelInst)+" [label=\"handler\" style=dotted];\n                  "


);
            }}}}


          Position startPosition = (Position) labelMap.get(block.getstart());
          InstructionList startInst = (InstructionList) startPosition.getSubterm().visit(inst);
          Position endPosition = (Position) labelMap.get(block.getend());
          InstructionList lastInst = (InstructionList) endPosition.getSubterm().visit(inst);
          out.write("\n              "+id+" -> "+getDotId(startInst)+" [label=\"start\" style=dotted];\n              "+id+" -> "+getDotId(lastInst)+" [label=\"end\" style=dotted];\n              "


);
        } catch(IOException e) { /* unamed block */
          e.printStackTrace();
        }}if ( tomMatch821_end_4.isEmptyTryCatchBlockList() ) {tomMatch821_end_4=(( tom.library.adt.bytecode.types.TryCatchBlockList )list);} else {tomMatch821_end_4= tomMatch821_end_4.getTailTryCatchBlockList() ;}}} while(!( (tomMatch821_end_4==(( tom.library.adt.bytecode.types.TryCatchBlockList )list)) ));}}}}


  }

  
  private static void printLocalVariables(LocalVariableList list, Map labelMap, Writer out, InstructionList inst) throws VisitFailure {
    { /* unamed block */{ /* unamed block */if ( (list instanceof tom.library.adt.bytecode.types.LocalVariableList) ) {if ( (((( tom.library.adt.bytecode.types.LocalVariableList )list) instanceof tom.library.adt.bytecode.types.localvariablelist.ConsLocalVariableList) || ((( tom.library.adt.bytecode.types.LocalVariableList )list) instanceof tom.library.adt.bytecode.types.localvariablelist.EmptyLocalVariableList)) ) { tom.library.adt.bytecode.types.LocalVariableList  tomMatch823_end_4=(( tom.library.adt.bytecode.types.LocalVariableList )list);do {{ /* unamed block */if (!( tomMatch823_end_4.isEmptyLocalVariableList() )) {

        try { /* unamed block */
          LocalVariable var =  tomMatch823_end_4.getHeadLocalVariableList() ;
          String id = getDotId(var);
          Position startPosition = (Position) labelMap.get(var.getstart());
          InstructionList startInst = (InstructionList) startPosition.getSubterm().visit(inst);
          Position endPosition = (Position) labelMap.get(var.getend());
          InstructionList lastInst = (InstructionList) endPosition.getSubterm().visit(inst);

          out.write("\n              "+id+" [label=\"var : "+var.getname()+"\\ndescriptor : "+var.gettypeDesc()+"\\nindex : "+Integer.toString(var.getindex())+"\" shape=box];\n              "+id+" -> "+getDotId(startInst)+" [label=\"start\" style=dotted];\n              "+id+" -> "+getDotId(lastInst)+" [label=\"end\" style=dotted];\n              "



);
        } catch(IOException e) { /* unamed block */
          e.printStackTrace();
        }}if ( tomMatch823_end_4.isEmptyLocalVariableList() ) {tomMatch823_end_4=(( tom.library.adt.bytecode.types.LocalVariableList )list);} else {tomMatch823_end_4= tomMatch823_end_4.getTailLocalVariableList() ;}}} while(!( (tomMatch823_end_4==(( tom.library.adt.bytecode.types.LocalVariableList )list)) ));}}}}


  }

  
  private static class InsWrapper { public InstructionList ins; }
  public static class Assign extends tom.library.sl.AbstractStrategyBasic {private  InsWrapper  ins;public Assign( InsWrapper  ins) {super(( new tom.library.sl.Identity() ));this.ins=ins;}public  InsWrapper  getins() {return ins;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if ( (v instanceof tom.library.adt.bytecode.types.InstructionList) ) {return ((T)visit_InstructionList((( tom.library.adt.bytecode.types.InstructionList )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  _visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( tom.library.adt.bytecode.types.InstructionList )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  tom.library.adt.bytecode.types.InstructionList  visit_InstructionList( tom.library.adt.bytecode.types.InstructionList  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{ /* unamed block */{ /* unamed block */if ( (tom__arg instanceof tom.library.adt.bytecode.types.InstructionList) ) {










 ins.ins = (( tom.library.adt.bytecode.types.InstructionList )tom__arg); }}}return _visit_InstructionList(tom__arg,introspector);}}



  
  public static void classToDot(ClassNode ast) throws VisitFailure {
    Writer w = new BufferedWriter(new OutputStreamWriter(System.out)); 
    MethodList methods = ast.getmethods();
    { /* unamed block */{ /* unamed block */if ( (methods instanceof tom.library.adt.bytecode.types.MethodList) ) {if ( (((( tom.library.adt.bytecode.types.MethodList )methods) instanceof tom.library.adt.bytecode.types.methodlist.ConsMethodList) || ((( tom.library.adt.bytecode.types.MethodList )methods) instanceof tom.library.adt.bytecode.types.methodlist.EmptyMethodList)) ) { tom.library.adt.bytecode.types.MethodList  tomMatch825_end_4=(( tom.library.adt.bytecode.types.MethodList )methods);do {{ /* unamed block */if (!( tomMatch825_end_4.isEmptyMethodList() )) { tom.library.adt.bytecode.types.Method  tom___x= tomMatch825_end_4.getHeadMethodList() ;

        try { /* unamed block */
          MethodInfo info = tom___x.getinfo();
          w.write("digraph "+info.getname()+" {\n              "
);

          
          w.write("method [label=\"method : "+info.getname()+"\\ndescriptor : "+ToolBox.buildDescriptor(info.getdesc())+"\" shape=box];\n              "
);
          if(!tom___x.getcode().isEmptyCode()) { /* unamed block */
            InstructionList ins = tom___x.getcode().getinstructions();
            if(!ins.isEmptyInstructionList()) { /* unamed block */
              w.write("method -> "+getDotId(ins)+"\n                  "
);
            }

            
            HashMap labelMap = new HashMap();
            tom_make_TopDown( new BuildLabelMap(labelMap) ).visit(ins);

            
            InsWrapper insWrapper = new InsWrapper();

            
            
            
            Strategy toDot = tom_make_TopDown(tom_make_Try( tom.library.sl.Sequence.make( new PrintDotNode(w) , tom.library.sl.Sequence.make( tom.library.sl.Sequence.make( new Assign(insWrapper) , tom.library.sl.Sequence.make( new AllCfg( new PrintDotLink(w,insWrapper) ,labelMap) , null ) ) , null ) ) ))







;

            toDot.visit(ins);

            
            printTryCatchBlocks(tom___x.getcode().gettryCatchBlocks(), labelMap, w, ins);

            
            printLocalVariables(tom___x.getcode().getlocalVariables(), labelMap, w, ins);
          }

          w.write("}\n");
          w.flush();
        } catch(IOException e) { /* unamed block */
          e.printStackTrace();
        }}if ( tomMatch825_end_4.isEmptyMethodList() ) {tomMatch825_end_4=(( tom.library.adt.bytecode.types.MethodList )methods);} else {tomMatch825_end_4= tomMatch825_end_4.getTailMethodList() ;}}} while(!( (tomMatch825_end_4==(( tom.library.adt.bytecode.types.MethodList )methods)) ));}}}}


  }

  
   public static void main(String[] args) {
     if(args.length <= 0) {
       System.out.println("Usage : java bytecode.CFGViewer <class name>\nEx: java bytecode.CFGViewer MyClass");
       return;
     }
     BytecodeReader cg = new BytecodeReader(args[0]);
     ClassNode c = cg.getAst();
     try {
       classToDot(c);
     } catch (VisitFailure e) {
       System.out.println("Unexpected failure in strategies");
     }
   }



}



<?xml version="1.0" encoding="UTF-8"?>
<project name="Tests for Tom" default="junit" basedir=".">
  <description>
    Build script for Tom unit tests
  </description>

  <property name="test.src"   location="."/>
  <property name="test.gen"   location="gen"/>
  <property name="test.build" location="build"/>

  <property name="optimize" value="off"/>

  <property environment="env"/>
  <property name="tom.home"        value="${env.TOM_HOME}"/>
  <property name="tom.common.path" value="${tom.home}/lib"/>
  <import   file="${tom.common.path}/tom-common.xml"/>

  <target name="init" depends="tom.init">
    <fail unless="tom.home" message="Property tom.home has to be defined"/>
  </target>

  <target name="prepare">
    <mkdir dir="${test.gen}"/>
    <mkdir dir="${test.build}"/>
  </target>

  <target name="build" depends="init,prepare">
    <gom config="${gomconfigfile}"
         srcdir="${test.src}/gom"
         package="gom.b.u.i.l.t.i.n"
         destdir="${test.gen}">
         <include name="Builtin.gom"/>
    </gom>
    <gom config="${gomconfigfile}"
         srcdir="${test.src}"
         package="gom"
         destdir="${test.gen}">
         <include name="gom/Ying.gom"/>
         <include name="gom/JavaHook.gom"/>
         <include name="gom/Bool.gom"/>
         <include name="gom/ML.gom"/>
         <include name="gom/Importing.gom"/>
         <include name="gom/List.gom"/>
    </gom>
    <tom.preset srcdir="${test.src}"
                destdir="${test.gen}">
      <include name="Testbuiltin.t"/>
      <include name="TestMatch.t"/>
      <include name="TestStrategy.t"/>
      <include name="TestList2.t"/>
      <include name="TestArray2.t"/>
      <exclude name="cfib1.t"/>
      <exclude name="loulou.t"/>
      <exclude name="Record.t"/>
      <exclude name="TestRecord.t"/>
      <exclude name="**/error/**"/>
    </tom.preset>
    <tom.preset srcdir="${test.src}"
                destdir="${test.gen}"
                options="--noStatic"> 
      <exclude name="cfib1.t"/>
      <exclude name="loulou.t"/>
      <exclude name="Record.t"/>
      <exclude name="TestRecord.t"/>
      <exclude name="**/error/**"/>
      <exclude name="Testbuiltin.t"/>
      <exclude name="TestMatch.t"/>
      <exclude name="TestStrategy.t"/>
      <exclude name="TestList2.t"/>
      <exclude name="TestArray2.t"/>
    </tom.preset>
    <tom.preset srcdir="${test.src}"
                destdir="${test.gen}"
                options="--lazyType">
      <include name="Record.t"/>
      <include name="TestRecord.t"/>
      <exclude name="**/error/**"/>
    </tom.preset>
    <javac.preset destdir="${test.build}">
      <src path="${test.src}"/>
      <src path="${test.gen}"/>
      <exclude name="**/error/**"/>
      <exclude name="gen/**"/>
    </javac.preset>
  	<copy todir="${test.build}">
      <fileset dir="${test.src}">
        <include name="*/*.xml"/>
        <include name="*/*.dtd"/>
      </fileset>
    </copy>
  </target>

  <target name="junit" description="Runs junit acceptance tests"
          depends="build">
    <tom.junit printsummary="yes"
               fork="true"
               dir="${test.build}"
               haltonfailure="false"
               failureproperty="tests.failed"
               showoutput="true">
      <classpath>
        <path refid="tom.classpath"/>
        <pathelement location="${test.build}"/>
      </classpath>
      <batchtest>
        <fileset dir="${test.gen}">
          <include name="**/Test*.java"/>
        </fileset>
        <fileset dir="${test.src}">
          <include name="**/Test*.java"/>
          <exclude name="gen/**/*"/>
        </fileset>
      </batchtest>
    </tom.junit>
    <fail if="tests.failed">
      ****************************************************
      ****************************************************
      One or more tests failed. Check the output...
      ****************************************************
      ****************************************************
    </fail>
  </target>

  <target name="clean">
    <delete dir="${test.gen}"/>
    <delete dir="${test.build}"/>
  </target>
</project>

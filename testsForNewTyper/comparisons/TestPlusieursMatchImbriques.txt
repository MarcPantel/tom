import testplusieursmatchimbriques.testplusieursmatchimbriques.*;
import testplusieursmatchimbriques.testplusieursmatchimbriques.types.*;


public class TestPlusieursMatchImbriques {
  %gom {
    module TestPlusieursMatchImbriques 
      imports int
      abstract syntax
      
      B = b1()
        | b2()
        | f(n:B)
        | g(n:B)
  }

  public static void main(String[] args) {
    int e1 = 5;
    B e2 = `f(b1());
    B e3 = `f(b2());
    B e4 = `g(b2());

    %match { //match1
      x << int e1 -> {
        System.out.println("match1 : x = " + `x);
        %match { //match2
          f(y) << e2 -> { System.out.println("match2 : x = " + `x + " and y = " + `y); }
        }
      
        %match { //match3
          f(y) << e3 && (x < 10) -> { System.out.println("match3 : x = " + `x + " and y = " + `y); }
        }

        int x = 10;
        %match { //match4
          // Le "x" ici est le "x" du match1 et pas du java
          10 << x -> { System.out.println("match4 : x = " + `x); }
          //(x >= 10) -> { System.out.println("match4 : x = " + `x); }
        }
      }

      f(y) << e2 && g(y) << e4 -> { System.out.println("match5 : y = " + `y); }
    }
  }

}

--------- Old typer -------------------
Tom(concCode(TargetLanguageToCode(TL("import testplusieursmatchimbriques.testplusieursmatchimbriques.*;\nimport testplusieursmatchimbriques.testplusieursmatchimbriques.types.*;\n\n\npublic class TestPlusieursMatchImbriques {\n  ",TextPosition(1,1),TextPosition(6,3))),TomInclude(concCode(TomInclude(concCode(DeclarationToCode(TypeTermDecl(Name("int"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),Name("t1"),Type("int",TLType(" int "))),BQVariable(concOption(OriginTracking(Name("t2"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),Name("t2"),Type("int",TLType(" int "))),Code(" {0}=={1} "),OriginTracking(Name("equals"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),31,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),Name("t"),Type("int",TLType(" int "))),Code(" true "),OriginTracking(Name("is_sort"),31,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom"))),OriginTracking(Name("int"),29,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom"))),TargetLanguageToCode(TL("\n",TextPosition(33,1),TextPosition(34,1))))),DeclarationToCode(TypeTermDecl(Name("B"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),8,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom")),Name("t1"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B "))),BQVariable(concOption(OriginTracking(Name("t2"),8,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom")),Name("t2"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B "))),Code(" ({0}=={1}) "),OriginTracking(Name("equals"),8,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),6,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom")),Name("t"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B "))),Code(" ({0} instanceof testplusieursmatchimbriques.testplusieursmatchimbriques.types.B) "),OriginTracking(Name("is_sort"),6,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom"))),OriginTracking(Name("B"),4,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom"))),DeclarationToCode(SymbolDecl(Name("b1"))),DeclarationToCode(SymbolDecl(Name("b2"))),DeclarationToCode(SymbolDecl(Name("f"))),DeclarationToCode(SymbolDecl(Name("g"))),TargetLanguageToCode(TL("\n\n",TextPosition(31,1),TextPosition(33,1))))),TargetLanguageToCode(TL("\n\n  public static void main(String[] args) {\n    int e1 = 5;\n    B e2 = ",TextPosition(15,4),TextPosition(19,12))),BQTermToCode(Composite(CompositeBQTerm(BuildTerm(Name("f"),concBQTerm(Composite(CompositeBQTerm(BuildTerm(Name("b1"),concBQTerm(),"default")))),"default")))),TargetLanguageToCode(TL(";\n    B e3 = ",TextPosition(19,20),TextPosition(20,12))),BQTermToCode(Composite(CompositeBQTerm(BuildTerm(Name("f"),concBQTerm(Composite(CompositeBQTerm(BuildTerm(Name("b2"),concBQTerm(),"default")))),"default")))),TargetLanguageToCode(TL(";\n    B e4 = ",TextPosition(20,20),TextPosition(21,12))),BQTermToCode(Composite(CompositeBQTerm(BuildTerm(Name("g"),concBQTerm(Composite(CompositeBQTerm(BuildTerm(Name("b2"),concBQTerm(),"default")))),"default")))),TargetLanguageToCode(TL(";\n\n    ",TextPosition(21,20),TextPosition(23,5))),InstructionToCode(
        Match(concConstraintInstruction(
            ConstraintInstruction(
              MatchConstraint(Variable(concOption(OriginTracking(Name("x"),24,"TestPlusieursMatchImbriques.t")),Name("x"),Type("int",TLType(" int ")),concConstraint()),BQVariable(concOption(OriginTracking(Name("e1"),24,"TestPlusieursMatchImbriques.t")),Name("e1"),Type("int",TLType(" int ")))),
              RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL("\n        System.out.println(\"match1 : x = \" + ",TextPosition(24,22),TextPosition(25,46)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),25,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("x"),Type("int",TLType(" int ")))),CodeToInstruction(TargetLanguageToCode(TL(");\n        ",TextPosition(25,49),TextPosition(26,9)))),Match(concConstraintInstruction(ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("f"),27,"TestPlusieursMatchImbriques.t")),concTomName(Name("f")),concSlot(PairSlotAppl(Name("n"),Variable(concOption(OriginTracking(Name("y"),27,"TestPlusieursMatchImbriques.t")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("e2"),27,"TestPlusieursMatchImbriques.t")),Name("e2"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(\"match2 : x = \" + ",TextPosition(27,25),TextPosition(27,64)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),27,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("x"),Type("int",TLType(" int ")))),CodeToInstruction(TargetLanguageToCode(TL("+ \" and y = \" + ",TextPosition(27,68),TextPosition(27,83)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("y"),27,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(27,86),TextPosition(27,88))))))),concOption(OriginTracking(Name("Pattern"),27,"TestPlusieursMatchImbriques.t"),OriginalText(Name(""))))),concOption(OriginTracking(Name("Match"),26,"TestPlusieursMatchImbriques.t"),ModuleName("default"))),Match(concConstraintInstruction(ConstraintInstruction(AndConstraint(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("f"),31,"TestPlusieursMatchImbriques.t")),concTomName(Name("f")),concSlot(PairSlotAppl(Name("n"),Variable(concOption(OriginTracking(Name("y"),31,"TestPlusieursMatchImbriques.t")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("e3"),31,"TestPlusieursMatchImbriques.t")),Name("e3"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),NumericConstraint(BQVariable(concOption(OriginTracking(Name("x"),31,"TestPlusieursMatchImbriques.t")),Name("x"),Type("int",TLType(" int "))),BuildConstant(Name("10")),NumLessThan())),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(\"match3 : x = \" + ",TextPosition(31,37),TextPosition(31,76)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),31,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("x"),Type("int",TLType(" int ")))),CodeToInstruction(TargetLanguageToCode(TL("+ \" and y = \" + ",TextPosition(31,80),TextPosition(31,95)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("y"),31,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(31,98),TextPosition(31,100))))))),concOption(OriginTracking(Name("Pattern"),31,"TestPlusieursMatchImbriques.t"),OriginalText(Name(""))))),concOption(OriginTracking(Name("Match"),30,"TestPlusieursMatchImbriques.t"),ModuleName("default"))),CodeToInstruction(TargetLanguageToCode(TL("\n\n        int x = 10;\n        ",TextPosition(32,9),TextPosition(35,9)))),Match(concConstraintInstruction(ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("10"),37,"TestPlusieursMatchImbriques.t"),Constant()),concTomName(Name("10")),concSlot(),concConstraint()),BQVariable(concOption(OriginTracking(Name("x"),37,"TestPlusieursMatchImbriques.t")),Name("x"),Type("int",TLType(" int ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(\"match4 : x = \" + ",TextPosition(37,22),TextPosition(37,61)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),37,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("x"),Type("int",TLType(" int ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(37,64),TextPosition(37,66))))))),concOption(OriginTracking(Name("Pattern"),37,"TestPlusieursMatchImbriques.t"),OriginalText(Name(""))))),concOption(OriginTracking(Name("Match"),35,"TestPlusieursMatchImbriques.t"),ModuleName("default"))),CodeToInstruction(TargetLanguageToCode(TL("\n      ",TextPosition(39,9),TextPosition(40,7))))))),
              concOption(OriginTracking(Name("Pattern"),24,"TestPlusieursMatchImbriques.t"),OriginalText(Name("e1")))),
            ConstraintInstruction(
              AndConstraint(
                MatchConstraint(RecordAppl(concOption(OriginTracking(Name("f"),42,"TestPlusieursMatchImbriques.t")),concTomName(Name("f")),concSlot(PairSlotAppl(Name("n"),Variable(concOption(OriginTracking(Name("y"),42,"TestPlusieursMatchImbriques.t")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("e2"),42,"TestPlusieursMatchImbriques.t")),Name("e2"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),
                MatchConstraint(RecordAppl(concOption(OriginTracking(Name("g"),42,"TestPlusieursMatchImbriques.t")),concTomName(Name("g")),concSlot(PairSlotAppl(Name("n"),Variable(concOption(OriginTracking(Name("y"),42,"TestPlusieursMatchImbriques.t")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("e4"),42,"TestPlusieursMatchImbriques.t")),Name("e4"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B "))))),
              RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(\"match5 : y = \" + ",TextPosition(42,35),TextPosition(42,74)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("y"),42,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(42,77),TextPosition(42,79))))))),
              concOption(OriginTracking(Name("Pattern"),42,"TestPlusieursMatchImbriques.t"),OriginTracking(Name("Pattern"),42,"TestPlusieursMatchImbriques.t"),OriginalText(Name(""))))),concOption(OriginTracking(Name("Match"),23,"TestPlusieursMatchImbriques.t"),ModuleName("default")))
                ),TargetLanguageToCode(TL("\n  }\n\n}\n",TextPosition(43,5),TextPosition(47,1)))))

--------- New typer -------------------
Tom(concCode(TargetLanguageToCode(TL("import testplusieursmatchimbriques.testplusieursmatchimbriques.*;\nimport testplusieursmatchimbriques.testplusieursmatchimbriques.types.*;\n\n\npublic class TestPlusieursMatchImbriques {\n  ",TextPosition(1,1),TextPosition(6,3))),TomInclude(concCode(TomInclude(concCode(DeclarationToCode(TypeTermDecl(Name("int"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),Name("t1"),Type("int",TLType(" int "))),BQVariable(concOption(OriginTracking(Name("t2"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),Name("t2"),Type("int",TLType(" int "))),Code(" {0}=={1} "),OriginTracking(Name("equals"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),31,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),Name("t"),Type("int",TLType(" int "))),Code(" true "),OriginTracking(Name("is_sort"),31,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom"))),OriginTracking(Name("int"),29,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom"))),TargetLanguageToCode(TL("\n",TextPosition(33,1),TextPosition(34,1))))),DeclarationToCode(TypeTermDecl(Name("B"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),8,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom")),Name("t1"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B "))),BQVariable(concOption(OriginTracking(Name("t2"),8,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom")),Name("t2"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B "))),Code(" ({0}=={1}) "),OriginTracking(Name("equals"),8,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),6,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom")),Name("t"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B "))),Code(" ({0} instanceof testplusieursmatchimbriques.testplusieursmatchimbriques.types.B) "),OriginTracking(Name("is_sort"),6,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom"))),OriginTracking(Name("B"),4,"/Users/claudia/Doctorat/tom/workspace/git-jtom/tmp/testplusieursmatchimbriques/testplusieursmatchimbriques/TestPlusieursMatchImbriques.tom"))),DeclarationToCode(SymbolDecl(Name("b1"))),DeclarationToCode(SymbolDecl(Name("b2"))),DeclarationToCode(SymbolDecl(Name("f"))),DeclarationToCode(SymbolDecl(Name("g"))),TargetLanguageToCode(TL("\n\n",TextPosition(31,1),TextPosition(33,1))))),TargetLanguageToCode(TL("\n\n  public static void main(String[] args) {\n    int e1 = 5;\n    B e2 = ",TextPosition(15,4),TextPosition(19,12))),BQTermToCode(Composite(CompositeBQTerm(BuildTerm(Name("f"),concBQTerm(Composite(CompositeBQTerm(BuildTerm(Name("b1"),concBQTerm(),"default")))),"default")))),TargetLanguageToCode(TL(";\n    B e3 = ",TextPosition(19,20),TextPosition(20,12))),BQTermToCode(Composite(CompositeBQTerm(BuildTerm(Name("f"),concBQTerm(Composite(CompositeBQTerm(BuildTerm(Name("b2"),concBQTerm(),"default")))),"default")))),TargetLanguageToCode(TL(";\n    B e4 = ",TextPosition(20,20),TextPosition(21,12))),BQTermToCode(Composite(CompositeBQTerm(BuildTerm(Name("g"),concBQTerm(Composite(CompositeBQTerm(BuildTerm(Name("b2"),concBQTerm(),"default")))),"default")))),TargetLanguageToCode(TL(";\n\n    ",TextPosition(21,20),TextPosition(23,5))),InstructionToCode(
        Match(concConstraintInstruction(
            ConstraintInstruction(
              MatchConstraint(Variable(concOption(OriginTracking(Name("x"),24,"TestPlusieursMatchImbriques.t")),Name("x"),Type("int",TLType(" int ")),concConstraint()),BQVariable(concOption(OriginTracking(Name("e1"),24,"TestPlusieursMatchImbriques.t")),Name("e1"),Type("int",TLType(" int ")))),
              RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL("\n        System.out.println(\"match1 : x = \" + ",TextPosition(24,22),TextPosition(25,46)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),25,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("x"),Type("int",TLType(" int ")))),CodeToInstruction(TargetLanguageToCode(TL(");\n        ",TextPosition(25,49),TextPosition(26,9)))),Match(concConstraintInstruction(ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("f"),27,"TestPlusieursMatchImbriques.t")),concTomName(Name("f")),concSlot(PairSlotAppl(Name("n"),Variable(concOption(OriginTracking(Name("y"),27,"TestPlusieursMatchImbriques.t")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("e2"),27,"TestPlusieursMatchImbriques.t")),Name("e2"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(\"match2 : x = \" + ",TextPosition(27,25),TextPosition(27,64)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),27,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("x"),Type("int",TLType(" int ")))),CodeToInstruction(TargetLanguageToCode(TL("+ \" and y = \" + ",TextPosition(27,68),TextPosition(27,83)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("y"),27,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(27,86),TextPosition(27,88))))))),concOption(OriginTracking(Name("Pattern"),27,"TestPlusieursMatchImbriques.t"),OriginalText(Name(""))))),concOption(OriginTracking(Name("Match"),26,"TestPlusieursMatchImbriques.t"),ModuleName("default"))),Match(concConstraintInstruction(ConstraintInstruction(AndConstraint(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("f"),31,"TestPlusieursMatchImbriques.t")),concTomName(Name("f")),concSlot(PairSlotAppl(Name("n"),Variable(concOption(OriginTracking(Name("y"),31,"TestPlusieursMatchImbriques.t")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("e3"),31,"TestPlusieursMatchImbriques.t")),Name("e3"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),NumericConstraint(BQVariable(concOption(OriginTracking(Name("x"),31,"TestPlusieursMatchImbriques.t")),Name("x"),Type("int",TLType(" int "))),BuildConstant(Name("10")),NumLessThan())),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(\"match3 : x = \" + ",TextPosition(31,37),TextPosition(31,76)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),31,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("x"),Type("int",TLType(" int ")))),CodeToInstruction(TargetLanguageToCode(TL("+ \" and y = \" + ",TextPosition(31,80),TextPosition(31,95)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("y"),31,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(31,98),TextPosition(31,100))))))),concOption(OriginTracking(Name("Pattern"),31,"TestPlusieursMatchImbriques.t"),OriginalText(Name(""))))),concOption(OriginTracking(Name("Match"),30,"TestPlusieursMatchImbriques.t"),ModuleName("default"))),CodeToInstruction(TargetLanguageToCode(TL("\n\n        int x = 10;\n        ",TextPosition(32,9),TextPosition(35,9)))),Match(concConstraintInstruction(ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("10"),37,"TestPlusieursMatchImbriques.t"),Constant()),concTomName(Name("10")),concSlot(),concConstraint()),BQVariable(concOption(OriginTracking(Name("x"),37,"TestPlusieursMatchImbriques.t")),Name("x"),Type("int",TLType(" int ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(\"match4 : x = \" + ",TextPosition(37,22),TextPosition(37,61)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),37,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("x"),Type("int",TLType(" int ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(37,64),TextPosition(37,66))))))),concOption(OriginTracking(Name("Pattern"),37,"TestPlusieursMatchImbriques.t"),OriginalText(Name(""))))),concOption(OriginTracking(Name("Match"),35,"TestPlusieursMatchImbriques.t"),ModuleName("default"))),CodeToInstruction(TargetLanguageToCode(TL("\n      ",TextPosition(39,9),TextPosition(40,7))))))),
              concOption(OriginTracking(Name("Pattern"),24,"TestPlusieursMatchImbriques.t"),OriginalText(Name("e1")))),
            ConstraintInstruction(
              AndConstraint(
                MatchConstraint(RecordAppl(concOption(OriginTracking(Name("f"),42,"TestPlusieursMatchImbriques.t")),concTomName(Name("f")),concSlot(PairSlotAppl(Name("n"),Variable(concOption(OriginTracking(Name("y"),42,"TestPlusieursMatchImbriques.t")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("e2"),42,"TestPlusieursMatchImbriques.t")),Name("e2"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),
                MatchConstraint(RecordAppl(concOption(OriginTracking(Name("g"),42,"TestPlusieursMatchImbriques.t")),concTomName(Name("g")),concSlot(PairSlotAppl(Name("n"),Variable(concOption(OriginTracking(Name("y"),42,"TestPlusieursMatchImbriques.t")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("e4"),42,"TestPlusieursMatchImbriques.t")),Name("e4"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B "))))),
              RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(\"match5 : y = \" + ",TextPosition(42,35),TextPosition(42,74)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("y"),42,"TestPlusieursMatchImbriques.t"),ModuleName("default")),Name("y"),Type("B",TLType(" testplusieursmatchimbriques.testplusieursmatchimbriques.types.B ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(42,77),TextPosition(42,79))))))),
              concOption(OriginTracking(Name("Pattern"),42,"TestPlusieursMatchImbriques.t"),OriginTracking(Name("Pattern"),42,"TestPlusieursMatchImbriques.t"),OriginalText(Name(""))))),concOption(OriginTracking(Name("Match"),23,"TestPlusieursMatchImbriques.t"),ModuleName("default")))
        ),TargetLanguageToCode(TL("\n  }\n\n}\n",TextPosition(43,5),TextPosition(47,1)))))

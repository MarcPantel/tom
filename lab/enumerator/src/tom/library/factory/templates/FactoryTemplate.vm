## This is the main factory template
## It contains all the static code for the to-be-generated Factory
## The dynamic contents is filled from the corresponding ParsedClass object
##
#set($getElem = ".get(BigInteger.valueOf(singletonSize))")
#set($getNextElem = ".get(BigInteger.valueOf(singletonSize++))")

/**
* This is auto generated class by the Apache velocity template engine
* The corresponding template is FactoryTemplate.vm xx
**/
//package $parsedClass.getPackageName();
package examples.factory;

import java.math.BigInteger;
import tom.library.enumerator.Combinators;
import tom.library.enumerator.Enumeration;
import tom.library.enumerator.F;
import tom.library.enumerator.Finite;
import tom.library.enumerator.LazyList;
import tom.library.enumerator.P1;
import $parsedClass.getCanonicalName();

public class $parsedClass.getFactoryClassName() {
    
    private static Enumeration<$parsedClass.getSimpleName()> finalEnum = null;
    
    public static final Enumeration<$parsedClass.getSimpleName()>  getEnumeration() {
        
        boolean singleton = false;
        int singletonSize = 0;
        
        #parse("./src/tom/library/factory/templates/ClassBody.vm")
        
        finalEnum = $parsedClass.getEnumerableType().getFinalEnum();
        return finalEnum;
        
    }

}
## This is the main factory template
## It contains all the static code for the to-be-generated Factory
## The dynamic contents is filled from the corresponding ParsedClass object

/**
* This is auto generated class by the Apache velocity template engine
* The corresponding template is FactoryTemplate.vm
**/
package examples.factory.tests;

import java.math.BigInteger;
import tom.library.enumerator.Combinators;
import tom.library.enumerator.Enumeration;
import tom.library.enumerator.F;
import $parsedClass.getCanonicalName();

public class $parsedClass.getFactoryClassName() {

    public static final Enumeration<$parsedClass.getSimpleName()>  getEnumeration() {
        
        Enumeration<$parsedClass.getSimpleName()> finalEnum = null;
        
#if ($parsedClass.hasNoArgsConstructor())
        Enumeration<$parsedClass.getSimpleName()> $parsedClass.getNoArgsConstructor().getEnumName() = Enumeration.singleton(new $parsedClass.getSimpleName()());
#end
        
#foreach($cons in $parsedClass.getConstructors())
        final $cons.getCurriedType(0) $cons.getVariableName() = new $cons.getCurriedType(0)() {
            $cons.getCurriedDefinition(0)
        };
        
#foreach($param in $cons.getParameters())
        $param.enumerate();
#end
        
        Enumeration<$parsedClass.getSimpleName()> $cons.getEnumName() = $cons.apply();
#end
        
        finalEnum = $parsedClass.getFinalEnum();
        
        return finalEnum;
        
    }

}
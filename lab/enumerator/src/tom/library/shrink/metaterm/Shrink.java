package tom.library.shrink.metaterm;

/*
 * Should be compiled with -gi option
 */
import aterm.*;
import aterm.pure.PureFactory;

import examples.adt.tree.types.*;

import tom.library.sl.Visitable;
import tom.library.sl.VisitableBuiltin;
//import tom.library.shrink.metaterm.types.*;
import tom.library.sl.*;

import java.util.*;

public class Shrink {
  private static boolean tom_equal_term_int(int t1, int t2) {return  t1==t2 ;}private static boolean tom_is_sort_int(int t) {return  true ;} private static boolean tom_equal_term_char(char t1, char t2) {return  t1==t2 ;}private static boolean tom_is_sort_char(char t) {return  true ;} private static boolean tom_equal_term_String(String t1, String t2) {return  t1.equals(t2) ;}private static boolean tom_is_sort_String(String t) {return  t instanceof String ;} private static boolean tom_equal_term_boolean(boolean t1, boolean t2) {return  t1==t2 ;}private static boolean tom_is_sort_boolean(boolean t) {return  true ;} private static boolean tom_equal_term_ATerm(Object t1, Object t2) {return  t1 == t2 ;}private static boolean tom_is_sort_ATerm(Object t) {return  t instanceof aterm.ATerm ;}private static boolean tom_equal_term_ATermList(Object l1, Object l2) {return  l1==l2 ;}private static boolean tom_is_sort_ATermList(Object t) {return  t instanceof aterm.ATermList ;}private static boolean tom_equal_term_AFun(Object t1, Object t2) {return  t1 == t2 ;}private static boolean tom_is_sort_AFun(Object t) {return  t instanceof aterm.AFun ;}private static boolean tom_is_fun_sym_ATermPlaceholder( aterm.ATerm  t) {return  t instanceof aterm.ATermPlaceholder ;}private static  aterm.ATerm  tom_make_ATermPlaceholder( aterm.ATerm  type) { return  aterm.pure.SingletonFactory.getInstance().makePlaceholder(type) ;}private static  aterm.ATerm  tom_get_slot_ATermPlaceholder_type( aterm.ATerm  t) {return  ((ATermPlaceholder)t).getPlaceholder() ;}private static boolean tom_is_fun_sym_ATermList( aterm.ATerm  t) {return  t instanceof aterm.ATermList ;}private static  aterm.ATerm  tom_empty_list_ATermList() { return  aterm.pure.SingletonFactory.getInstance().makeList() ;}private static  aterm.ATerm  tom_cons_list_ATermList( aterm.ATerm  e,  aterm.ATerm  l) { return  ((ATermList)l).insert(e) ;}private static  aterm.ATerm  tom_get_head_ATermList_ATerm( aterm.ATerm  t) {return  ((ATermList)t).getFirst() ;}private static  aterm.ATerm  tom_get_tail_ATermList_ATerm( aterm.ATerm  t) {return  ((ATermList)t).getNext() ;}private static boolean tom_is_empty_ATermList_ATerm( aterm.ATerm  t) {return  ((ATermList)t).isEmpty() ;}   private static   aterm.ATerm  tom_append_list_ATermList( aterm.ATerm  l1,  aterm.ATerm  l2) {     if( ((ATermList)l1).isEmpty() ) {       return l2;     } else if( ((ATermList)l2).isEmpty() ) {       return l1;     } else if( l1 instanceof aterm.ATermList ) {       if( ((ATermList) ((ATermList)l1).getNext() ).isEmpty() ) {         return  ((ATermList)l2).insert( ((ATermList)l1).getFirst() ) ;       } else {         return  ((ATermList)tom_append_list_ATermList( ((ATermList)l1).getNext() ,l2)).insert( ((ATermList)l1).getFirst() ) ;       }     } else {       return  ((ATermList)l2).insert(l1) ;     }   }   private static   aterm.ATerm  tom_get_slice_ATermList( aterm.ATerm  begin,  aterm.ATerm  end, aterm.ATerm  tail) {     if( begin == end ) {       return tail;     } else if( end == tail  && ( ((ATermList)end).isEmpty()  ||  end == tom_empty_list_ATermList() )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  ((ATermList)( aterm.ATerm )tom_get_slice_ATermList((( begin instanceof aterm.ATermList )? ((ATermList)begin).getNext() :tom_empty_list_ATermList()),end,tail)).insert((( begin instanceof aterm.ATermList )? ((ATermList)begin).getFirst() :begin)) ;   }   private static boolean tom_is_fun_sym_concATerm( aterm.ATermList  t) {return  t instanceof aterm.ATermList ;}private static  aterm.ATermList  tom_empty_list_concATerm() { return  aterm.pure.SingletonFactory.getInstance().makeList() ;}private static  aterm.ATermList  tom_cons_list_concATerm( aterm.ATerm  e,  aterm.ATermList  l) { return  l.insert(e) ;}private static  aterm.ATerm  tom_get_head_concATerm_ATermList( aterm.ATermList  t) {return  t.getFirst() ;}private static  aterm.ATermList  tom_get_tail_concATerm_ATermList( aterm.ATermList  t) {return  t.getNext() ;}private static boolean tom_is_empty_concATerm_ATermList( aterm.ATermList  t) {return  t.isEmpty() ;}   private static   aterm.ATermList  tom_append_list_concATerm( aterm.ATermList l1,  aterm.ATermList  l2) {     if( l1.isEmpty() ) {       return l2;     } else if( l2.isEmpty() ) {       return l1;     } else if(  l1.getNext() .isEmpty() ) {       return  l2.insert( l1.getFirst() ) ;     } else {       return  tom_append_list_concATerm( l1.getNext() ,l2).insert( l1.getFirst() ) ;     }   }   private static   aterm.ATermList  tom_get_slice_concATerm( aterm.ATermList  begin,  aterm.ATermList  end, aterm.ATermList  tail) {     if( begin==end ) {       return tail;     } else if( end==tail  && ( end.isEmpty()  ||  end==tom_empty_list_concATerm() )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  ( aterm.ATermList )tom_get_slice_concATerm( begin.getNext() ,end,tail).insert( begin.getFirst() ) ;   }   private static boolean tom_is_fun_sym_ATermInt( aterm.ATerm  t) {return  t instanceof aterm.ATermInt ;}private static  aterm.ATerm  tom_make_ATermInt( int  i) { return  aterm.pure.SingletonFactory.getInstance().makeInt(i) ;}private static  int  tom_get_slot_ATermInt_val( aterm.ATerm  t) {return  ((aterm.ATermInt)t).getInt() ;}private static boolean tom_is_fun_sym_AFun( aterm.AFun  t) {return  t instanceof aterm.AFun ;}private static  aterm.AFun  tom_make_AFun( String  f,  int  a,  boolean  q) { return  aterm.pure.SingletonFactory.getInstance().makeAFun(f,a,q) ;}private static  String  tom_get_slot_AFun_name( aterm.AFun  t) {return  t.getName() ;}private static  int  tom_get_slot_AFun_arity( aterm.AFun  t) {return  t.getArity() ;}private static  boolean  tom_get_slot_AFun_quoted( aterm.AFun  t) {return  t.isQuoted() ;}private static boolean tom_is_fun_sym_ATermAppl( aterm.ATerm  t) {return  t instanceof aterm.ATermAppl ;}private static  aterm.ATerm  tom_make_ATermAppl( aterm.AFun  f,  aterm.ATermList  args) { return  aterm.pure.SingletonFactory.getInstance().makeAppl(f,args) ;}private static  aterm.AFun  tom_get_slot_ATermAppl_fun( aterm.ATerm  t) {return  ((aterm.ATermAppl)t).getAFun() ;}private static  aterm.ATermList  tom_get_slot_ATermAppl_args( aterm.ATerm  t) {return  ((aterm.ATermAppl)t).getArguments() ;} private static boolean tom_equal_term_Strategy(Object t1, Object t2) {return  (t1.equals(t2)) ;}private static boolean tom_is_sort_Strategy(Object t) {return  (t instanceof tom.library.sl.Strategy) ;} private static boolean tom_equal_term_Position(Object t1, Object t2) {return  (t1.equals(t2)) ;}private static boolean tom_is_sort_Position(Object t) {return  (t instanceof tom.library.sl.Position) ;} private static boolean tom_is_fun_sym_mu( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_mu( tom.library.sl.Strategy  var,  tom.library.sl.Strategy  v) { return ( new tom.library.sl.Mu(var,v) );}private static boolean tom_is_fun_sym_Mu( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.Mu );}private static  tom.library.sl.Strategy  tom_make_Mu( tom.library.sl.Strategy  var,  tom.library.sl.Strategy  v) { return ( new tom.library.sl.Mu(var, v) );}private static  tom.library.sl.Strategy  tom_get_slot_Mu_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.MuVar)t.getChildAt(tom.library.sl.Mu.VAR) );}private static  tom.library.sl.Strategy  tom_get_slot_Mu_s2( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Mu.V) );}private static boolean tom_is_fun_sym_MuVar( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.MuVar );}private static  tom.library.sl.Strategy  tom_make_MuVar( String  name) { return ( new tom.library.sl.MuVar(name) );}private static  String  tom_get_slot_MuVar_var( tom.library.sl.Strategy  t) {return ( ((tom.library.sl.MuVar)t).getName() );}private static boolean tom_is_fun_sym_Omega( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.Omega );}private static  tom.library.sl.Strategy  tom_make_Omega( int  pos,  tom.library.sl.Strategy  v) { return ( new tom.library.sl.Omega(pos,v) );}private static  int  tom_get_slot_Omega_position( tom.library.sl.Strategy  t) {return ( ((tom.library.sl.Omega)t).getPos() );}private static  tom.library.sl.Strategy  tom_get_slot_Omega_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Omega.ARG) );}private static boolean tom_is_fun_sym_Identity( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.Identity );}private static  tom.library.sl.Strategy  tom_make_Identity() { return ( new tom.library.sl.Identity() );}private static boolean tom_is_fun_sym_One( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.One );}private static  tom.library.sl.Strategy  tom_make_One( tom.library.sl.Strategy  v) { return ( new tom.library.sl.One(v) );}private static  tom.library.sl.Strategy  tom_get_slot_One_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.One.ARG) );}private static boolean tom_is_fun_sym_All( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.All );}private static  tom.library.sl.Strategy  tom_make_All( tom.library.sl.Strategy  v) { return ( new tom.library.sl.All(v) );}private static  tom.library.sl.Strategy  tom_get_slot_All_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.All.ARG) );}private static boolean tom_is_fun_sym_IfThenElse( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.IfThenElse );}private static  tom.library.sl.Strategy  tom_make_IfThenElse( tom.library.sl.Strategy  condition,  tom.library.sl.Strategy  trueCase,  tom.library.sl.Strategy  falseCase) { return ( new tom.library.sl.IfThenElse(condition,trueCase,falseCase) );}private static  tom.library.sl.Strategy  tom_get_slot_IfThenElse_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.IfThenElse.CONDITION) );}private static  tom.library.sl.Strategy  tom_get_slot_IfThenElse_s2( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.IfThenElse.TRUE_CASE) );}private static  tom.library.sl.Strategy  tom_get_slot_IfThenElse_s3( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.IfThenElse.FALSE_CASE) );}private static boolean tom_is_fun_sym_Fail( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.Fail );}private static  tom.library.sl.Strategy  tom_make_Fail() { return ( new tom.library.sl.Fail() );}private static boolean tom_is_fun_sym_Not( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.Not );}private static  tom.library.sl.Strategy  tom_make_Not( tom.library.sl.Strategy  v) { return ( new tom.library.sl.Not(v) );}private static  tom.library.sl.Strategy  tom_get_slot_Not_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Not.ARG) );}private static boolean tom_is_fun_sym_Sequence( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.Sequence );}private static  tom.library.sl.Strategy  tom_empty_list_Sequence() { return  null ;}private static  tom.library.sl.Strategy  tom_cons_list_Sequence( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  tom.library.sl.Sequence.make(head,tail) ;}private static  tom.library.sl.Strategy  tom_get_head_Sequence_Strategy( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.FIRST) );}private static  tom.library.sl.Strategy  tom_get_tail_Sequence_Strategy( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Sequence.THEN) );}private static boolean tom_is_empty_Sequence_Strategy( tom.library.sl.Strategy  t) {return ( t == null );}   private static   tom.library.sl.Strategy  tom_append_list_Sequence( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( l1 instanceof tom.library.sl.Sequence )) {       if(( ( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ) == null )) {         return  tom.library.sl.Sequence.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ),l2) ;       } else {         return  tom.library.sl.Sequence.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.FIRST) ),tom_append_list_Sequence(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Sequence.THEN) ),l2)) ;       }     } else {       return  tom.library.sl.Sequence.make(l1,l2) ;     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Sequence( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end == null ) ||  (end.equals(tom_empty_list_Sequence())) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.sl.Sequence.make(((( begin instanceof tom.library.sl.Sequence ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Sequence(((( begin instanceof tom.library.sl.Sequence ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Sequence.THEN) ):tom_empty_list_Sequence()),end,tail)) ;   }   private static boolean tom_is_fun_sym_Choice( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.Choice );}private static  tom.library.sl.Strategy  tom_empty_list_Choice() { return  null ;}private static  tom.library.sl.Strategy  tom_cons_list_Choice( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  tom.library.sl.Choice.make(head,tail) ;}private static  tom.library.sl.Strategy  tom_get_head_Choice_Strategy( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Choice.FIRST) );}private static  tom.library.sl.Strategy  tom_get_tail_Choice_Strategy( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Choice.THEN) );}private static boolean tom_is_empty_Choice_Strategy( tom.library.sl.Strategy  t) {return ( t ==null );}   private static   tom.library.sl.Strategy  tom_append_list_Choice( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( l1 instanceof tom.library.sl.Choice )) {       if(( ( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ) ==null )) {         return  tom.library.sl.Choice.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ),l2) ;       } else {         return  tom.library.sl.Choice.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.FIRST) ),tom_append_list_Choice(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.Choice.THEN) ),l2)) ;       }     } else {       return  tom.library.sl.Choice.make(l1,l2) ;     }   }   private static   tom.library.sl.Strategy  tom_get_slice_Choice( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end ==null ) ||  (end.equals(tom_empty_list_Choice())) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.sl.Choice.make(((( begin instanceof tom.library.sl.Choice ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_Choice(((( begin instanceof tom.library.sl.Choice ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.Choice.THEN) ):tom_empty_list_Choice()),end,tail)) ;   }   private static boolean tom_is_fun_sym_ChoiceUndet( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.ChoiceUndet );}private static  tom.library.sl.Strategy  tom_empty_list_ChoiceUndet() { return  null ;}private static  tom.library.sl.Strategy  tom_cons_list_ChoiceUndet( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  tom.library.sl.ChoiceUndet.make(head,tail) ;}private static  tom.library.sl.Strategy  tom_get_head_ChoiceUndet_Strategy( tom.library.sl.Strategy  t) {return ( ((tom.library.sl.ChoiceUndet) t).getHead() );}private static  tom.library.sl.Strategy  tom_get_tail_ChoiceUndet_Strategy( tom.library.sl.Strategy  t) {return ( ((tom.library.sl.ChoiceUndet) t).getTail() );}private static boolean tom_is_empty_ChoiceUndet_Strategy( tom.library.sl.Strategy  t) {return ( t ==null );}   private static   tom.library.sl.Strategy  tom_append_list_ChoiceUndet( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( l1 instanceof tom.library.sl.ChoiceUndet )) {       if(( ( ((tom.library.sl.ChoiceUndet) l1).getTail() ) ==null )) {         return  tom.library.sl.ChoiceUndet.make(( ((tom.library.sl.ChoiceUndet) l1).getHead() ),l2) ;       } else {         return  tom.library.sl.ChoiceUndet.make(( ((tom.library.sl.ChoiceUndet) l1).getHead() ),tom_append_list_ChoiceUndet(( ((tom.library.sl.ChoiceUndet) l1).getTail() ),l2)) ;       }     } else {       return  tom.library.sl.ChoiceUndet.make(l1,l2) ;     }   }   private static   tom.library.sl.Strategy  tom_get_slice_ChoiceUndet( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end ==null ) ||  (end.equals(tom_empty_list_ChoiceUndet())) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.sl.ChoiceUndet.make(((( begin instanceof tom.library.sl.ChoiceUndet ))?( ((tom.library.sl.ChoiceUndet) begin).getHead() ):begin),( tom.library.sl.Strategy )tom_get_slice_ChoiceUndet(((( begin instanceof tom.library.sl.ChoiceUndet ))?( ((tom.library.sl.ChoiceUndet) begin).getTail() ):tom_empty_list_ChoiceUndet()),end,tail)) ;   }   private static boolean tom_is_fun_sym_SequenceId( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.SequenceId );}private static  tom.library.sl.Strategy  tom_empty_list_SequenceId() { return  null ;}private static  tom.library.sl.Strategy  tom_cons_list_SequenceId( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  tom.library.sl.SequenceId.make(head,tail) ;}private static  tom.library.sl.Strategy  tom_get_head_SequenceId_Strategy( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.SequenceId.FIRST) );}private static  tom.library.sl.Strategy  tom_get_tail_SequenceId_Strategy( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.SequenceId.THEN) );}private static boolean tom_is_empty_SequenceId_Strategy( tom.library.sl.Strategy  t) {return ( t == null );}   private static   tom.library.sl.Strategy  tom_append_list_SequenceId( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 == null )) {       return l2;     } else if(( l2 == null )) {       return l1;     } else if(( l1 instanceof tom.library.sl.SequenceId )) {       if(( ( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ) == null )) {         return  tom.library.sl.SequenceId.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ),l2) ;       } else {         return  tom.library.sl.SequenceId.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.FIRST) ),tom_append_list_SequenceId(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.SequenceId.THEN) ),l2)) ;       }     } else {       return  tom.library.sl.SequenceId.make(l1,l2) ;     }   }   private static   tom.library.sl.Strategy  tom_get_slice_SequenceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end == null ) ||  (end.equals(tom_empty_list_SequenceId())) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.sl.SequenceId.make(((( begin instanceof tom.library.sl.SequenceId ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_SequenceId(((( begin instanceof tom.library.sl.SequenceId ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.SequenceId.THEN) ):tom_empty_list_SequenceId()),end,tail)) ;   }   private static boolean tom_is_fun_sym_ChoiceId( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.ChoiceId );}private static  tom.library.sl.Strategy  tom_empty_list_ChoiceId() { return  null ;}private static  tom.library.sl.Strategy  tom_cons_list_ChoiceId( tom.library.sl.Strategy  head,  tom.library.sl.Strategy  tail) { return  tom.library.sl.ChoiceId.make(head,tail) ;}private static  tom.library.sl.Strategy  tom_get_head_ChoiceId_Strategy( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.ChoiceId.FIRST) );}private static  tom.library.sl.Strategy  tom_get_tail_ChoiceId_Strategy( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.ChoiceId.THEN) );}private static boolean tom_is_empty_ChoiceId_Strategy( tom.library.sl.Strategy  t) {return ( t ==null );}   private static   tom.library.sl.Strategy  tom_append_list_ChoiceId( tom.library.sl.Strategy  l1,  tom.library.sl.Strategy  l2) {     if(( l1 ==null )) {       return l2;     } else if(( l2 ==null )) {       return l1;     } else if(( l1 instanceof tom.library.sl.ChoiceId )) {       if(( ( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.THEN) ) ==null )) {         return  tom.library.sl.ChoiceId.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ),l2) ;       } else {         return  tom.library.sl.ChoiceId.make(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.FIRST) ),tom_append_list_ChoiceId(( (tom.library.sl.Strategy)l1.getChildAt(tom.library.sl.ChoiceId.THEN) ),l2)) ;       }     } else {       return  tom.library.sl.ChoiceId.make(l1,l2) ;     }   }   private static   tom.library.sl.Strategy  tom_get_slice_ChoiceId( tom.library.sl.Strategy  begin,  tom.library.sl.Strategy  end, tom.library.sl.Strategy  tail) {     if( (begin.equals(end)) ) {       return tail;     } else if( (end.equals(tail))  && (( end ==null ) ||  (end.equals(tom_empty_list_ChoiceId())) )) {       /* code to avoid a call to make, and thus to avoid looping during list-matching */       return begin;     }     return  tom.library.sl.ChoiceId.make(((( begin instanceof tom.library.sl.ChoiceId ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.FIRST) ):begin),( tom.library.sl.Strategy )tom_get_slice_ChoiceId(((( begin instanceof tom.library.sl.ChoiceId ))?( (tom.library.sl.Strategy)begin.getChildAt(tom.library.sl.ChoiceId.THEN) ):tom_empty_list_ChoiceId()),end,tail)) ;   }   private static boolean tom_is_fun_sym_OneId( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.OneId );}private static  tom.library.sl.Strategy  tom_make_OneId( tom.library.sl.Strategy  v) { return ( new tom.library.sl.OneId(v) );}private static  tom.library.sl.Strategy  tom_get_slot_OneId_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.OneId.ARG) );}private static boolean tom_is_fun_sym_Pselect( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.Pselect );}private static  tom.library.sl.Strategy  tom_make_Pselect( int  p,  int  q,  tom.library.sl.Strategy  first,  tom.library.sl.Strategy  then) { return ( new tom.library.sl.Pselect(p,q,first,then) );}private static  int  tom_get_slot_Pselect_p1( tom.library.sl.Strategy  t) {return ( ((tom.library.sl.Pselect)t).getP() );}private static  int  tom_get_slot_Pselect_p2( tom.library.sl.Strategy  t) {return ( ((tom.library.sl.Pselect)t).getQ() );}private static  tom.library.sl.Strategy  tom_get_slot_Pselect_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Pselect.FIRST) );}private static  tom.library.sl.Strategy  tom_get_slot_Pselect_s2( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Pselect.THEN) );}private static boolean tom_is_fun_sym_OmegaU( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.OmegaU );}private static  tom.library.sl.Strategy  tom_make_OmegaU( tom.library.sl.Strategy  v) { return ( new tom.library.sl.OmegaU(v) );}private static  tom.library.sl.Strategy  tom_get_slot_OmegaU_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.OmegaU.ARG) );}private static boolean tom_is_fun_sym_Up( tom.library.sl.Strategy  t) {return ( t instanceof tom.library.sl.Up );}private static  tom.library.sl.Strategy  tom_make_Up( tom.library.sl.Strategy  v) { return ( new tom.library.sl.Up(v) );}private static  tom.library.sl.Strategy  tom_get_slot_Up_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.Up.ARG) );} private static boolean tom_is_fun_sym_BuiltinRepeat( tom.library.sl.Strategy  t) {return ( (t instanceof tom.library.sl.BuiltinRepeat) );}private static  tom.library.sl.Strategy  tom_make_BuiltinRepeat( tom.library.sl.Strategy  v) { return ( new tom.library.sl.BuiltinRepeat(v) );}private static  tom.library.sl.Strategy  tom_get_slot_BuiltinRepeat_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.BuiltinRepeat.ARG) );}private static boolean tom_is_fun_sym_BuiltinRepeatId( tom.library.sl.Strategy  t) {return ( (t instanceof tom.library.sl.BuiltinRepeatId) );}private static  tom.library.sl.Strategy  tom_make_BuiltinRepeatId( tom.library.sl.Strategy  v) { return ( new tom.library.sl.BuiltinRepeatId(v) );}private static  tom.library.sl.Strategy  tom_get_slot_BuiltinRepeatId_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.BuiltinRepeatId.ARG) );}private static boolean tom_is_fun_sym_BuiltinTopDown( tom.library.sl.Strategy  t) {return ( (t instanceof tom.library.sl.BuiltinTopDown) );}private static  tom.library.sl.Strategy  tom_make_BuiltinTopDown( tom.library.sl.Strategy  v) { return ( new tom.library.sl.BuiltinTopDown(v) );}private static  tom.library.sl.Strategy  tom_get_slot_BuiltinTopDown_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.BuiltinTopDown.ARG) );}private static boolean tom_is_fun_sym_BuiltinBottomUp( tom.library.sl.Strategy  t) {return ( (t instanceof tom.library.sl.BuiltinBottomUp) );}private static  tom.library.sl.Strategy  tom_make_BuiltinBottomUp( tom.library.sl.Strategy  v) { return ( new tom.library.sl.BuiltinBottomUp(v) );}private static  tom.library.sl.Strategy  tom_get_slot_BuiltinBottomUp_s1( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.BuiltinBottomUp.ARG) );}  private static boolean tom_is_fun_sym_AllSeq( tom.library.sl.Strategy  t) {return ( (t instanceof tom.library.sl.AllSeq) );}private static  tom.library.sl.Strategy  tom_make_AllSeq( tom.library.sl.Strategy  s) { return ( new tom.library.sl.AllSeq(s) );}private static  tom.library.sl.Strategy  tom_get_slot_AllSeq_s( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.DeRef.ARG) );}private static boolean tom_is_fun_sym_DeRef( tom.library.sl.Strategy  t) {return ( (t instanceof tom.library.sl.DeRef) && ((tom.library.sl.DeRef)t).isRelative()==true && ((tom.library.sl.DeRef)t).isStrict()==false );}private static  tom.library.sl.Strategy  tom_make_DeRef( tom.library.sl.Strategy  s) { return ( tom.library.sl.DeRef.makeRelative(s) );}private static  tom.library.sl.Strategy  tom_get_slot_DeRef_s( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.DeRef.ARG) );}private static boolean tom_is_fun_sym_StrictDeRef( tom.library.sl.Strategy  t) {return ( (t instanceof tom.library.sl.DeRef) && ((tom.library.sl.DeRef)t).isRelative()==true && ((tom.library.sl.DeRef)t).isStrict()==true );}private static  tom.library.sl.Strategy  tom_make_StrictDeRef( tom.library.sl.Strategy  s) { return ( tom.library.sl.DeRef.makeRelativeStrict(s) );}private static  tom.library.sl.Strategy  tom_get_slot_StrictDeRef_s( tom.library.sl.Strategy  t) {return ( (tom.library.sl.Strategy)t.getChildAt(tom.library.sl.DeRef.ARG) );}private static boolean tom_is_fun_sym_AUCtl( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_AUCtl( tom.library.sl.Strategy  s1,  tom.library.sl.Strategy  s2) { return ( tom_make_mu(tom_make_MuVar("x"),tom_cons_list_Choice(s2,tom_cons_list_Choice(tom_cons_list_Sequence(tom_cons_list_Sequence(s1,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("x")),tom_empty_list_Sequence())),tom_cons_list_Sequence(tom_make_One(tom_make_Identity()),tom_empty_list_Sequence())),tom_empty_list_Choice()))) );}private static boolean tom_is_fun_sym_EUCtl( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_EUCtl( tom.library.sl.Strategy  s1,  tom.library.sl.Strategy  s2) { return ( tom_make_mu(tom_make_MuVar("x"),tom_cons_list_Choice(s2,tom_cons_list_Choice(tom_cons_list_Sequence(s1,tom_cons_list_Sequence(tom_make_One(tom_make_MuVar("x")),tom_empty_list_Sequence())),tom_empty_list_Choice()))));}private static boolean tom_is_fun_sym_TrueCtl( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_TrueCtl() { return tom_make_Identity() ;}private static boolean tom_is_fun_sym_FalseCtl( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_FalseCtl() { return tom_make_Fail() ;}private static boolean tom_is_fun_sym_AndCtl( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_AndCtl( tom.library.sl.Strategy  s1,  tom.library.sl.Strategy  s2) { return tom_cons_list_Sequence(s1,tom_cons_list_Sequence(s2,tom_empty_list_Sequence())) ;}private static boolean tom_is_fun_sym_OrCtl( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_OrCtl( tom.library.sl.Strategy  s1,  tom.library.sl.Strategy  s2) { return tom_cons_list_Choice(s1,tom_cons_list_Choice(s2,tom_empty_list_Choice()));}private static boolean tom_is_fun_sym_AFCtl( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_AFCtl( tom.library.sl.Strategy  s) { return tom_make_AUCtl(tom_make_Identity(),s) ;}private static boolean tom_is_fun_sym_AGCtl( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_AGCtl( tom.library.sl.Strategy  s) { return tom_make_TopDown(s) ;}private static boolean tom_is_fun_sym_EFCtl( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_EFCtl( tom.library.sl.Strategy  s) { return tom_make_EUCtl(tom_make_Identity(),s) ;}private static boolean tom_is_fun_sym_AXCtl( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_AXCtl( tom.library.sl.Strategy  s) { return ( tom_make_All(s) );}private static boolean tom_is_fun_sym_EXCtl( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_EXCtl( tom.library.sl.Strategy  s) { return (tom_make_One(s) );} private static boolean tom_is_fun_sym_Try( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_Try( tom.library.sl.Strategy  s) { return ( tom_cons_list_Choice(s,tom_cons_list_Choice(tom_make_Identity(),tom_empty_list_Choice())) );}private static boolean tom_is_fun_sym_Repeat( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_Repeat( tom.library.sl.Strategy  s) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Choice(tom_cons_list_Sequence(s,tom_cons_list_Sequence(tom_make_MuVar("_x"),tom_empty_list_Sequence())),tom_cons_list_Choice(tom_make_Identity(),tom_empty_list_Choice()))) );}private static boolean tom_is_fun_sym_TopDown( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_TopDown( tom.library.sl.Strategy  v) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence()))) );}private static boolean tom_is_fun_sym_TopDownCollect( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_TopDownCollect( tom.library.sl.Strategy  v) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_make_Try(tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_empty_list_Sequence())))) );}private static boolean tom_is_fun_sym_TopDownStopOnSuccess( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_TopDownStopOnSuccess( tom.library.sl.Strategy  v) { return  (tom_make_mu(tom_make_MuVar("x"),tom_cons_list_Choice(v,tom_cons_list_Choice(tom_make_All(tom_make_MuVar("x")),tom_empty_list_Choice())))) ;}private static boolean tom_is_fun_sym_TopDownIdStopOnSuccess( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_TopDownIdStopOnSuccess( tom.library.sl.Strategy  v) { return  (tom_make_mu(tom_make_MuVar("x"),tom_cons_list_ChoiceId(v,tom_cons_list_ChoiceId(tom_make_All(tom_make_MuVar("x")),tom_empty_list_ChoiceId())))) ;}private static boolean tom_is_fun_sym_BottomUp( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_BottomUp( tom.library.sl.Strategy  v) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_cons_list_Sequence(v,tom_empty_list_Sequence()))) );}private static boolean tom_is_fun_sym_OnceBottomUp( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_OnceBottomUp( tom.library.sl.Strategy  v) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Choice(tom_make_One(tom_make_MuVar("_x")),tom_cons_list_Choice(v,tom_empty_list_Choice()))) );}private static boolean tom_is_fun_sym_OnceTopDown( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_OnceTopDown( tom.library.sl.Strategy  v) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Choice(v,tom_cons_list_Choice(tom_make_One(tom_make_MuVar("_x")),tom_empty_list_Choice()))) );}private static boolean tom_is_fun_sym_Innermost( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_Innermost( tom.library.sl.Strategy  v) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_cons_list_Sequence(tom_make_Try(tom_cons_list_Sequence(v,tom_cons_list_Sequence(tom_make_MuVar("_x"),tom_empty_list_Sequence()))),tom_empty_list_Sequence()))) );}private static boolean tom_is_fun_sym_Outermost( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_Outermost( tom.library.sl.Strategy  v) { return ( tom_make_Repeat(tom_make_OnceTopDown(v)) );}private static boolean tom_is_fun_sym_RepeatId( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_RepeatId( tom.library.sl.Strategy  v) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_SequenceId(v,tom_cons_list_SequenceId(tom_make_MuVar("_x"),tom_empty_list_SequenceId()))) );}private static boolean tom_is_fun_sym_OnceBottomUpId( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_OnceBottomUpId( tom.library.sl.Strategy  v) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_ChoiceId(tom_make_OneId(tom_make_MuVar("_x")),tom_cons_list_ChoiceId(v,tom_empty_list_ChoiceId()))) );}private static boolean tom_is_fun_sym_OnceTopDownId( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_OnceTopDownId( tom.library.sl.Strategy  v) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_ChoiceId(v,tom_cons_list_ChoiceId(tom_make_OneId(tom_make_MuVar("_x")),tom_empty_list_ChoiceId()))) );}private static boolean tom_is_fun_sym_InnermostId( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_InnermostId( tom.library.sl.Strategy  v) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(tom_make_All(tom_make_MuVar("_x")),tom_cons_list_Sequence(tom_cons_list_SequenceId(v,tom_cons_list_SequenceId(tom_make_MuVar("_x"),tom_empty_list_SequenceId())),tom_empty_list_Sequence()))) );}private static boolean tom_is_fun_sym_InnermostIdSeq( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_InnermostIdSeq( tom.library.sl.Strategy  v) { return ( tom_make_mu(tom_make_MuVar("_x"),tom_cons_list_Sequence(tom_make_AllSeq(tom_make_MuVar("_x")),tom_cons_list_Sequence(tom_cons_list_SequenceId(v,tom_cons_list_SequenceId(tom_make_MuVar("_x"),tom_empty_list_SequenceId())),tom_empty_list_Sequence()))) );}private static boolean tom_is_fun_sym_OutermostId( tom.library.sl.Strategy  t) {return  false ;}private static  tom.library.sl.Strategy  tom_make_OutermostId( tom.library.sl.Strategy  v) { return ( tom_make_RepeatId(tom_make_OnceTopDownId(v)) );}   private static boolean tom_equal_term_Collection(Object l1, Object l2) {return  l1.equals(l2) ;}private static boolean tom_is_sort_Collection(Object t) {return  t instanceof java.util.Collection ;} public static class LocalIntrospector implements tom.library.sl.Introspector {@SuppressWarnings("unchecked")public Object setChildAt(Object o, int i, Object child) {
            Object[] newChildren = getChildren(o);
            newChildren[i] = child;
            return setChildren(o, newChildren);
          }@SuppressWarnings("unchecked")public Object getChildAt(Object o, int i) {return getChildren(o)[i];}@SuppressWarnings("unchecked")public Object setChildren(Object o, Object[] children) {if (tom_is_sort_Collection(o)) {}if (tom_is_sort_ATerm(o)) {if (tom_is_fun_sym_ATermInt((( aterm.ATerm )o))) {return tom_make_ATermInt((java.lang.Integer)children[0]);}if (tom_is_fun_sym_ATermPlaceholder((( aterm.ATerm )o))) {return tom_make_ATermPlaceholder((( aterm.ATerm )children[0]));}if (tom_is_fun_sym_ATermList((( aterm.ATerm )o))) {if (children.length==0) {return tom_empty_list_ATermList();} else {int i=children.length; aterm.ATerm  res=tom_empty_list_ATermList();while (i > 0) {i=i - 1;res=tom_cons_list_ATermList((ATerm)children[i],res);}return res;}}if (tom_is_fun_sym_ATermAppl((( aterm.ATerm )o))) {return tom_make_ATermAppl((( aterm.AFun )children[0]),(( aterm.ATermList )children[1]));}}if (tom_is_sort_Strategy(o)) {if (tom_is_fun_sym_OnceBottomUp((( tom.library.sl.Strategy )o))) {return tom_make_OnceBottomUp((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_OmegaU((( tom.library.sl.Strategy )o))) {return tom_make_OmegaU((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_Identity((( tom.library.sl.Strategy )o))) {return tom_make_Identity();}if (tom_is_fun_sym_OneId((( tom.library.sl.Strategy )o))) {return tom_make_OneId((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_Not((( tom.library.sl.Strategy )o))) {return tom_make_Not((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_ChoiceUndet((( tom.library.sl.Strategy )o))) {if (children.length==0) {return tom_empty_list_ChoiceUndet();} else {int i=children.length; tom.library.sl.Strategy  res=tom_empty_list_ChoiceUndet();while (i > 0) {i=i - 1;res=tom_cons_list_ChoiceUndet((Strategy)children[i],res);}return res;}}if (tom_is_fun_sym_RepeatId((( tom.library.sl.Strategy )o))) {return tom_make_RepeatId((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_OnceTopDown((( tom.library.sl.Strategy )o))) {return tom_make_OnceTopDown((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_mu((( tom.library.sl.Strategy )o))) {return tom_make_mu((( tom.library.sl.Strategy )children[0]),(( tom.library.sl.Strategy )children[1]));}if (tom_is_fun_sym_BuiltinRepeatId((( tom.library.sl.Strategy )o))) {return tom_make_BuiltinRepeatId((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_AXCtl((( tom.library.sl.Strategy )o))) {return tom_make_AXCtl((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_BuiltinRepeat((( tom.library.sl.Strategy )o))) {return tom_make_BuiltinRepeat((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_OnceTopDownId((( tom.library.sl.Strategy )o))) {return tom_make_OnceTopDownId((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_One((( tom.library.sl.Strategy )o))) {return tom_make_One((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_Choice((( tom.library.sl.Strategy )o))) {if (children.length==0) {return tom_empty_list_Choice();} else {int i=children.length; tom.library.sl.Strategy  res=tom_empty_list_Choice();while (i > 0) {i=i - 1;res=tom_cons_list_Choice((Strategy)children[i],res);}return res;}}if (tom_is_fun_sym_InnermostId((( tom.library.sl.Strategy )o))) {return tom_make_InnermostId((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_TrueCtl((( tom.library.sl.Strategy )o))) {return tom_make_TrueCtl();}if (tom_is_fun_sym_EXCtl((( tom.library.sl.Strategy )o))) {return tom_make_EXCtl((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_StrictDeRef((( tom.library.sl.Strategy )o))) {return tom_make_StrictDeRef((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_TopDownStopOnSuccess((( tom.library.sl.Strategy )o))) {return tom_make_TopDownStopOnSuccess((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_ChoiceId((( tom.library.sl.Strategy )o))) {if (children.length==0) {return tom_empty_list_ChoiceId();} else {int i=children.length; tom.library.sl.Strategy  res=tom_empty_list_ChoiceId();while (i > 0) {i=i - 1;res=tom_cons_list_ChoiceId((Strategy)children[i],res);}return res;}}if (tom_is_fun_sym_Mu((( tom.library.sl.Strategy )o))) {return tom_make_Mu((( tom.library.sl.Strategy )children[0]),(( tom.library.sl.Strategy )children[1]));}if (tom_is_fun_sym_OutermostId((( tom.library.sl.Strategy )o))) {return tom_make_OutermostId((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_OrCtl((( tom.library.sl.Strategy )o))) {return tom_make_OrCtl((( tom.library.sl.Strategy )children[0]),(( tom.library.sl.Strategy )children[1]));}if (tom_is_fun_sym_Innermost((( tom.library.sl.Strategy )o))) {return tom_make_Innermost((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_BuiltinBottomUp((( tom.library.sl.Strategy )o))) {return tom_make_BuiltinBottomUp((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_TopDown((( tom.library.sl.Strategy )o))) {return tom_make_TopDown((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_EFCtl((( tom.library.sl.Strategy )o))) {return tom_make_EFCtl((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_TopDownCollect((( tom.library.sl.Strategy )o))) {return tom_make_TopDownCollect((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_Pselect((( tom.library.sl.Strategy )o))) {return tom_make_Pselect((java.lang.Integer)children[0],(java.lang.Integer)children[1],(( tom.library.sl.Strategy )children[2]),(( tom.library.sl.Strategy )children[3]));}if (tom_is_fun_sym_BuiltinTopDown((( tom.library.sl.Strategy )o))) {return tom_make_BuiltinTopDown((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_IfThenElse((( tom.library.sl.Strategy )o))) {return tom_make_IfThenElse((( tom.library.sl.Strategy )children[0]),(( tom.library.sl.Strategy )children[1]),(( tom.library.sl.Strategy )children[2]));}if (tom_is_fun_sym_TopDownIdStopOnSuccess((( tom.library.sl.Strategy )o))) {return tom_make_TopDownIdStopOnSuccess((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_AGCtl((( tom.library.sl.Strategy )o))) {return tom_make_AGCtl((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_Omega((( tom.library.sl.Strategy )o))) {return tom_make_Omega((java.lang.Integer)children[0],(( tom.library.sl.Strategy )children[1]));}if (tom_is_fun_sym_ReplaceSubtermByConstant((( tom.library.sl.Strategy )o))) {return tom_make_ReplaceSubtermByConstant((( aterm.ATerm )children[0]),(( java.util.Collection )children[1]),(( java.util.Collection )children[2]));}if (tom_is_fun_sym_Fail((( tom.library.sl.Strategy )o))) {return tom_make_Fail();}if (tom_is_fun_sym_BottomUp((( tom.library.sl.Strategy )o))) {return tom_make_BottomUp((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_Repeat((( tom.library.sl.Strategy )o))) {return tom_make_Repeat((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_AFCtl((( tom.library.sl.Strategy )o))) {return tom_make_AFCtl((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_FalseCtl((( tom.library.sl.Strategy )o))) {return tom_make_FalseCtl();}if (tom_is_fun_sym_Sequence((( tom.library.sl.Strategy )o))) {if (children.length==0) {return tom_empty_list_Sequence();} else {int i=children.length; tom.library.sl.Strategy  res=tom_empty_list_Sequence();while (i > 0) {i=i - 1;res=tom_cons_list_Sequence((Strategy)children[i],res);}return res;}}if (tom_is_fun_sym_MuVar((( tom.library.sl.Strategy )o))) {return tom_make_MuVar((String)children[0]);}if (tom_is_fun_sym_Outermost((( tom.library.sl.Strategy )o))) {return tom_make_Outermost((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_DeRef((( tom.library.sl.Strategy )o))) {return tom_make_DeRef((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_CollectSubterm((( tom.library.sl.Strategy )o))) {return tom_make_CollectSubterm((( aterm.ATerm )children[0]),(( java.util.Collection )children[1]));}if (tom_is_fun_sym_AUCtl((( tom.library.sl.Strategy )o))) {return tom_make_AUCtl((( tom.library.sl.Strategy )children[0]),(( tom.library.sl.Strategy )children[1]));}if (tom_is_fun_sym_SequenceId((( tom.library.sl.Strategy )o))) {if (children.length==0) {return tom_empty_list_SequenceId();} else {int i=children.length; tom.library.sl.Strategy  res=tom_empty_list_SequenceId();while (i > 0) {i=i - 1;res=tom_cons_list_SequenceId((Strategy)children[i],res);}return res;}}if (tom_is_fun_sym_AllSeq((( tom.library.sl.Strategy )o))) {return tom_make_AllSeq((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_CollectConstant((( tom.library.sl.Strategy )o))) {return tom_make_CollectConstant((( aterm.ATerm )children[0]),(( java.util.Collection )children[1]));}if (tom_is_fun_sym_EUCtl((( tom.library.sl.Strategy )o))) {return tom_make_EUCtl((( tom.library.sl.Strategy )children[0]),(( tom.library.sl.Strategy )children[1]));}if (tom_is_fun_sym_OnceBottomUpId((( tom.library.sl.Strategy )o))) {return tom_make_OnceBottomUpId((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_All((( tom.library.sl.Strategy )o))) {return tom_make_All((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_AndCtl((( tom.library.sl.Strategy )o))) {return tom_make_AndCtl((( tom.library.sl.Strategy )children[0]),(( tom.library.sl.Strategy )children[1]));}if (tom_is_fun_sym_Up((( tom.library.sl.Strategy )o))) {return tom_make_Up((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_Try((( tom.library.sl.Strategy )o))) {return tom_make_Try((( tom.library.sl.Strategy )children[0]));}if (tom_is_fun_sym_InnermostIdSeq((( tom.library.sl.Strategy )o))) {return tom_make_InnermostIdSeq((( tom.library.sl.Strategy )children[0]));}}if (tom_is_sort_Position(o)) {}if (tom_is_sort_AFun(o)) {if (tom_is_fun_sym_AFun((( aterm.AFun )o))) {return tom_make_AFun((String)children[0],(java.lang.Integer)children[1],(java.lang.Boolean)children[2]);}}if (tom_is_sort_ATermList(o)) {if (tom_is_fun_sym_concATerm((( aterm.ATermList )o))) {if (children.length==0) {return tom_empty_list_concATerm();} else {int i=children.length; aterm.ATermList  res=tom_empty_list_concATerm();while (i > 0) {i=i - 1;res=tom_cons_list_concATerm((ATerm)children[i],res);}return res;}}}return o;}@SuppressWarnings("unchecked")public Object[] getChildren(Object o) {if (tom_is_sort_Collection(o)) {}if (tom_is_sort_ATerm(o)) {if (tom_is_fun_sym_ATermInt((( aterm.ATerm )o))) {return new Object[]{tom_get_slot_ATermInt_val((( aterm.ATerm )o))};}if (tom_is_fun_sym_ATermPlaceholder((( aterm.ATerm )o))) {return new Object[]{tom_get_slot_ATermPlaceholder_type((( aterm.ATerm )o))};}if (tom_is_fun_sym_ATermList((( aterm.ATerm )o))) {if (tom_is_empty_ATermList_ATerm((( aterm.ATerm )o))) {return new Object[]{};} else {int i=0;int size=getChildCount(o); aterm.ATerm  vv=(( aterm.ATerm )o);Object[] children=new Object[size];vv=vv;while (i < size) {children[i]=tom_get_head_ATermList_ATerm(vv);vv=tom_get_tail_ATermList_ATerm(vv);i=i + 1;}return children;}}if (tom_is_fun_sym_ATermAppl((( aterm.ATerm )o))) {return new Object[]{tom_get_slot_ATermAppl_fun((( aterm.ATerm )o)),tom_get_slot_ATermAppl_args((( aterm.ATerm )o))};}}if (tom_is_sort_Strategy(o)) {if (tom_is_fun_sym_OnceBottomUp((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_OmegaU((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_OmegaU_s1((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_Identity((( tom.library.sl.Strategy )o))) {return new Object[]{};}if (tom_is_fun_sym_OneId((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_OneId_s1((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_Not((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_Not_s1((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_ChoiceUndet((( tom.library.sl.Strategy )o))) {if (tom_is_empty_ChoiceUndet_Strategy((( tom.library.sl.Strategy )o))) {return new Object[]{};} else {int i=0;int size=getChildCount(o); tom.library.sl.Strategy  vv=(( tom.library.sl.Strategy )o);Object[] children=new Object[size];vv=vv;while (i < size) {children[i]=tom_get_head_ChoiceUndet_Strategy(vv);vv=tom_get_tail_ChoiceUndet_Strategy(vv);i=i + 1;}return children;}}if (tom_is_fun_sym_RepeatId((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_OnceTopDown((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_mu((( tom.library.sl.Strategy )o))) {return new Object[]{null,null};}if (tom_is_fun_sym_BuiltinRepeatId((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_BuiltinRepeatId_s1((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_AXCtl((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_BuiltinRepeat((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_BuiltinRepeat_s1((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_OnceTopDownId((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_One((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_One_s1((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_Choice((( tom.library.sl.Strategy )o))) {if (tom_is_empty_Choice_Strategy((( tom.library.sl.Strategy )o))) {return new Object[]{};} else {int i=0;int size=getChildCount(o); tom.library.sl.Strategy  vv=(( tom.library.sl.Strategy )o);Object[] children=new Object[size];vv=vv;while (i < size) {children[i]=tom_get_head_Choice_Strategy(vv);vv=tom_get_tail_Choice_Strategy(vv);i=i + 1;}return children;}}if (tom_is_fun_sym_InnermostId((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_TrueCtl((( tom.library.sl.Strategy )o))) {return new Object[]{};}if (tom_is_fun_sym_EXCtl((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_StrictDeRef((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_StrictDeRef_s((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_TopDownStopOnSuccess((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_ChoiceId((( tom.library.sl.Strategy )o))) {if (tom_is_empty_ChoiceId_Strategy((( tom.library.sl.Strategy )o))) {return new Object[]{};} else {int i=0;int size=getChildCount(o); tom.library.sl.Strategy  vv=(( tom.library.sl.Strategy )o);Object[] children=new Object[size];vv=vv;while (i < size) {children[i]=tom_get_head_ChoiceId_Strategy(vv);vv=tom_get_tail_ChoiceId_Strategy(vv);i=i + 1;}return children;}}if (tom_is_fun_sym_Mu((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_Mu_s1((( tom.library.sl.Strategy )o)),tom_get_slot_Mu_s2((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_OutermostId((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_OrCtl((( tom.library.sl.Strategy )o))) {return new Object[]{null,null};}if (tom_is_fun_sym_Innermost((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_BuiltinBottomUp((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_BuiltinBottomUp_s1((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_TopDown((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_EFCtl((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_TopDownCollect((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_Pselect((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_Pselect_p1((( tom.library.sl.Strategy )o)),tom_get_slot_Pselect_p2((( tom.library.sl.Strategy )o)),tom_get_slot_Pselect_s1((( tom.library.sl.Strategy )o)),tom_get_slot_Pselect_s2((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_BuiltinTopDown((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_BuiltinTopDown_s1((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_IfThenElse((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_IfThenElse_s1((( tom.library.sl.Strategy )o)),tom_get_slot_IfThenElse_s2((( tom.library.sl.Strategy )o)),tom_get_slot_IfThenElse_s3((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_TopDownIdStopOnSuccess((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_AGCtl((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_Omega((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_Omega_position((( tom.library.sl.Strategy )o)),tom_get_slot_Omega_s1((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_ReplaceSubtermByConstant((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_ReplaceSubtermByConstant_t((( tom.library.sl.Strategy )o)),tom_get_slot_ReplaceSubtermByConstant_constants((( tom.library.sl.Strategy )o)),tom_get_slot_ReplaceSubtermByConstant_c((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_Fail((( tom.library.sl.Strategy )o))) {return new Object[]{};}if (tom_is_fun_sym_BottomUp((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_Repeat((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_AFCtl((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_FalseCtl((( tom.library.sl.Strategy )o))) {return new Object[]{};}if (tom_is_fun_sym_Sequence((( tom.library.sl.Strategy )o))) {if (tom_is_empty_Sequence_Strategy((( tom.library.sl.Strategy )o))) {return new Object[]{};} else {int i=0;int size=getChildCount(o); tom.library.sl.Strategy  vv=(( tom.library.sl.Strategy )o);Object[] children=new Object[size];vv=vv;while (i < size) {children[i]=tom_get_head_Sequence_Strategy(vv);vv=tom_get_tail_Sequence_Strategy(vv);i=i + 1;}return children;}}if (tom_is_fun_sym_MuVar((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_MuVar_var((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_Outermost((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_DeRef((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_DeRef_s((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_CollectSubterm((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_CollectSubterm_t((( tom.library.sl.Strategy )o)),tom_get_slot_CollectSubterm_c((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_AUCtl((( tom.library.sl.Strategy )o))) {return new Object[]{null,null};}if (tom_is_fun_sym_SequenceId((( tom.library.sl.Strategy )o))) {if (tom_is_empty_SequenceId_Strategy((( tom.library.sl.Strategy )o))) {return new Object[]{};} else {int i=0;int size=getChildCount(o); tom.library.sl.Strategy  vv=(( tom.library.sl.Strategy )o);Object[] children=new Object[size];vv=vv;while (i < size) {children[i]=tom_get_head_SequenceId_Strategy(vv);vv=tom_get_tail_SequenceId_Strategy(vv);i=i + 1;}return children;}}if (tom_is_fun_sym_AllSeq((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_AllSeq_s((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_CollectConstant((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_CollectConstant_t((( tom.library.sl.Strategy )o)),tom_get_slot_CollectConstant_c((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_EUCtl((( tom.library.sl.Strategy )o))) {return new Object[]{null,null};}if (tom_is_fun_sym_OnceBottomUpId((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_All((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_All_s1((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_AndCtl((( tom.library.sl.Strategy )o))) {return new Object[]{null,null};}if (tom_is_fun_sym_Up((( tom.library.sl.Strategy )o))) {return new Object[]{tom_get_slot_Up_s1((( tom.library.sl.Strategy )o))};}if (tom_is_fun_sym_Try((( tom.library.sl.Strategy )o))) {return new Object[]{null};}if (tom_is_fun_sym_InnermostIdSeq((( tom.library.sl.Strategy )o))) {return new Object[]{null};}}if (tom_is_sort_Position(o)) {}if (tom_is_sort_AFun(o)) {if (tom_is_fun_sym_AFun((( aterm.AFun )o))) {return new Object[]{tom_get_slot_AFun_name((( aterm.AFun )o)),tom_get_slot_AFun_arity((( aterm.AFun )o)),tom_get_slot_AFun_quoted((( aterm.AFun )o))};}}if (tom_is_sort_ATermList(o)) {if (tom_is_fun_sym_concATerm((( aterm.ATermList )o))) {if (tom_is_empty_concATerm_ATermList((( aterm.ATermList )o))) {return new Object[]{};} else {int i=0;int size=getChildCount(o); aterm.ATermList  vv=(( aterm.ATermList )o);Object[] children=new Object[size];vv=vv;while (i < size) {children[i]=tom_get_head_concATerm_ATermList(vv);vv=tom_get_tail_concATerm_ATermList(vv);i=i + 1;}return children;}}}return null;}@SuppressWarnings("unchecked")public int getChildCount(Object o) {if (o==null) {return 0;}if (tom_is_sort_Collection(o)) {}if (tom_is_sort_ATerm(o)) {if (tom_is_fun_sym_ATermInt((( aterm.ATerm )o))) {return 1;}if (tom_is_fun_sym_ATermPlaceholder((( aterm.ATerm )o))) {return 1;}if (tom_is_fun_sym_ATermList((( aterm.ATerm )o))) {if (tom_is_empty_ATermList_ATerm((( aterm.ATerm )o))) {return 0;} else {return 1 + getChildCount(tom_get_tail_ATermList_ATerm((( aterm.ATerm )o)));}}if (tom_is_fun_sym_ATermAppl((( aterm.ATerm )o))) {return 2;}}if (tom_is_sort_Strategy(o)) {if (tom_is_fun_sym_OnceBottomUp((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_OmegaU((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_Identity((( tom.library.sl.Strategy )o))) {return 0;}if (tom_is_fun_sym_OneId((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_Not((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_ChoiceUndet((( tom.library.sl.Strategy )o))) {if (tom_is_empty_ChoiceUndet_Strategy((( tom.library.sl.Strategy )o))) {return 0;} else {return 1 + getChildCount(tom_get_tail_ChoiceUndet_Strategy((( tom.library.sl.Strategy )o)));}}if (tom_is_fun_sym_RepeatId((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_OnceTopDown((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_mu((( tom.library.sl.Strategy )o))) {return 2;}if (tom_is_fun_sym_BuiltinRepeatId((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_AXCtl((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_BuiltinRepeat((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_OnceTopDownId((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_One((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_Choice((( tom.library.sl.Strategy )o))) {if (tom_is_empty_Choice_Strategy((( tom.library.sl.Strategy )o))) {return 0;} else {return 1 + getChildCount(tom_get_tail_Choice_Strategy((( tom.library.sl.Strategy )o)));}}if (tom_is_fun_sym_InnermostId((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_TrueCtl((( tom.library.sl.Strategy )o))) {return 0;}if (tom_is_fun_sym_EXCtl((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_StrictDeRef((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_TopDownStopOnSuccess((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_ChoiceId((( tom.library.sl.Strategy )o))) {if (tom_is_empty_ChoiceId_Strategy((( tom.library.sl.Strategy )o))) {return 0;} else {return 1 + getChildCount(tom_get_tail_ChoiceId_Strategy((( tom.library.sl.Strategy )o)));}}if (tom_is_fun_sym_Mu((( tom.library.sl.Strategy )o))) {return 2;}if (tom_is_fun_sym_OutermostId((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_OrCtl((( tom.library.sl.Strategy )o))) {return 2;}if (tom_is_fun_sym_Innermost((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_BuiltinBottomUp((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_TopDown((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_EFCtl((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_TopDownCollect((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_Pselect((( tom.library.sl.Strategy )o))) {return 4;}if (tom_is_fun_sym_BuiltinTopDown((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_IfThenElse((( tom.library.sl.Strategy )o))) {return 3;}if (tom_is_fun_sym_TopDownIdStopOnSuccess((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_AGCtl((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_Omega((( tom.library.sl.Strategy )o))) {return 2;}if (tom_is_fun_sym_ReplaceSubtermByConstant((( tom.library.sl.Strategy )o))) {return 3;}if (tom_is_fun_sym_Fail((( tom.library.sl.Strategy )o))) {return 0;}if (tom_is_fun_sym_BottomUp((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_Repeat((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_AFCtl((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_FalseCtl((( tom.library.sl.Strategy )o))) {return 0;}if (tom_is_fun_sym_Sequence((( tom.library.sl.Strategy )o))) {if (tom_is_empty_Sequence_Strategy((( tom.library.sl.Strategy )o))) {return 0;} else {return 1 + getChildCount(tom_get_tail_Sequence_Strategy((( tom.library.sl.Strategy )o)));}}if (tom_is_fun_sym_MuVar((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_Outermost((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_DeRef((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_CollectSubterm((( tom.library.sl.Strategy )o))) {return 2;}if (tom_is_fun_sym_AUCtl((( tom.library.sl.Strategy )o))) {return 2;}if (tom_is_fun_sym_SequenceId((( tom.library.sl.Strategy )o))) {if (tom_is_empty_SequenceId_Strategy((( tom.library.sl.Strategy )o))) {return 0;} else {return 1 + getChildCount(tom_get_tail_SequenceId_Strategy((( tom.library.sl.Strategy )o)));}}if (tom_is_fun_sym_AllSeq((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_CollectConstant((( tom.library.sl.Strategy )o))) {return 2;}if (tom_is_fun_sym_EUCtl((( tom.library.sl.Strategy )o))) {return 2;}if (tom_is_fun_sym_OnceBottomUpId((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_All((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_AndCtl((( tom.library.sl.Strategy )o))) {return 2;}if (tom_is_fun_sym_Up((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_Try((( tom.library.sl.Strategy )o))) {return 1;}if (tom_is_fun_sym_InnermostIdSeq((( tom.library.sl.Strategy )o))) {return 1;}}if (tom_is_sort_Position(o)) {}if (tom_is_sort_AFun(o)) {if (tom_is_fun_sym_AFun((( aterm.AFun )o))) {return 3;}}if (tom_is_sort_ATermList(o)) {if (tom_is_fun_sym_concATerm((( aterm.ATermList )o))) {if (tom_is_empty_concATerm_ATermList((( aterm.ATermList )o))) {return 0;} else {return 1 + getChildCount(tom_get_tail_concATerm_ATermList((( aterm.ATermList )o)));}}}return 0;}}public static class CollectSubterm extends tom.library.sl.AbstractStrategyBasic {private  aterm.ATerm  t;private  java.util.Collection  c;public CollectSubterm( aterm.ATerm  t,  java.util.Collection  c) {super(tom_make_Identity());this.t=t;this.c=c;}public  aterm.ATerm  gett() {return t;}public  java.util.Collection  getc() {return c;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (tom_is_sort_ATerm(v)) {return ((T)visit_ATerm((( aterm.ATerm )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  aterm.ATerm  _visit_ATerm( aterm.ATerm  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( aterm.ATerm )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  aterm.ATerm  visit_ATerm( aterm.ATerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{if (tom_is_sort_ATerm(tom__arg)) {if (tom_is_sort_ATerm((( aterm.ATerm )tom__arg))) {if (tom_is_fun_sym_ATermAppl((( aterm.ATerm )(( aterm.ATerm )tom__arg)))) { aterm.ATerm  tom_at=(( aterm.ATerm )tom__arg);







 
        if(tom_at!= t) {
          c.add(tom_at); 
        }
      }}}}}return _visit_ATerm(tom__arg,introspector);}}private static  tom.library.sl.Strategy  tom_make_CollectSubterm( aterm.ATerm  t0,  java.util.Collection  t1) { return new CollectSubterm(t0,t1);}private static boolean tom_is_fun_sym_CollectSubterm( tom.library.sl.Strategy  t) {return (t instanceof CollectSubterm);}private static  aterm.ATerm  tom_get_slot_CollectSubterm_t( tom.library.sl.Strategy  t) {return ((CollectSubterm)t).gett();}private static  java.util.Collection  tom_get_slot_CollectSubterm_c( tom.library.sl.Strategy  t) {return ((CollectSubterm)t).getc();}public static class CollectConstant extends tom.library.sl.AbstractStrategyBasic {private  aterm.ATerm  t;private  java.util.Collection  c;public CollectConstant( aterm.ATerm  t,  java.util.Collection  c) {super(tom_make_Identity());this.t=t;this.c=c;}public  aterm.ATerm  gett() {return t;}public  java.util.Collection  getc() {return c;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (tom_is_sort_ATerm(v)) {return ((T)visit_ATerm((( aterm.ATerm )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  aterm.ATerm  _visit_ATerm( aterm.ATerm  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( aterm.ATerm )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  aterm.ATerm  visit_ATerm( aterm.ATerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{if (tom_is_sort_ATerm(tom__arg)) {if (tom_is_sort_ATerm((( aterm.ATerm )tom__arg))) {if (tom_is_fun_sym_ATermAppl((( aterm.ATerm )(( aterm.ATerm )tom__arg)))) { aterm.ATermList  tomMatch2_1=tom_get_slot_ATermAppl_args((( aterm.ATerm )tom__arg));if (tom_is_fun_sym_concATerm((( aterm.ATermList )tomMatch2_1))) {if (tom_is_empty_concATerm_ATermList(tomMatch2_1)) {





 c.add((( aterm.ATerm )tom__arg)); }}}}}}{if (tom_is_sort_ATerm(tom__arg)) {if (tom_is_sort_ATerm((( aterm.ATerm )tom__arg))) {if (tom_is_fun_sym_ATermInt((( aterm.ATerm )(( aterm.ATerm )tom__arg)))) {
 c.add((( aterm.ATerm )tom__arg)); }}}}}return _visit_ATerm(tom__arg,introspector);}}private static  tom.library.sl.Strategy  tom_make_CollectConstant( aterm.ATerm  t0,  java.util.Collection  t1) { return new CollectConstant(t0,t1);}private static boolean tom_is_fun_sym_CollectConstant( tom.library.sl.Strategy  t) {return (t instanceof CollectConstant);}private static  aterm.ATerm  tom_get_slot_CollectConstant_t( tom.library.sl.Strategy  t) {return ((CollectConstant)t).gett();}private static  java.util.Collection  tom_get_slot_CollectConstant_c( tom.library.sl.Strategy  t) {return ((CollectConstant)t).getc();}public static class ReplaceSubtermByConstant extends tom.library.sl.AbstractStrategyBasic {private  aterm.ATerm  t;private  java.util.Collection  constants;private  java.util.Collection  c;public ReplaceSubtermByConstant( aterm.ATerm  t,  java.util.Collection  constants,  java.util.Collection  c) {super(tom_make_Identity());this.t=t;this.constants=constants;this.c=c;}public  aterm.ATerm  gett() {return t;}public  java.util.Collection  getconstants() {return constants;}public  java.util.Collection  getc() {return c;}public tom.library.sl.Visitable[] getChildren() {tom.library.sl.Visitable[] stratChildren = new tom.library.sl.Visitable[getChildCount()];stratChildren[0] = super.getChildAt(0);return stratChildren;}public tom.library.sl.Visitable setChildren(tom.library.sl.Visitable[] children) {super.setChildAt(0, children[0]);return this;}public int getChildCount() {return 1;}public tom.library.sl.Visitable getChildAt(int index) {switch (index) {case 0: return super.getChildAt(0);default: throw new IndexOutOfBoundsException();}}public tom.library.sl.Visitable setChildAt(int index, tom.library.sl.Visitable child) {switch (index) {case 0: return super.setChildAt(0, child);default: throw new IndexOutOfBoundsException();}}@SuppressWarnings("unchecked")public <T> T visitLight(T v, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (tom_is_sort_ATerm(v)) {return ((T)visit_ATerm((( aterm.ATerm )v),introspector));}if (!(( null  == environment))) {return ((T)any.visit(environment,introspector));} else {return any.visitLight(v,introspector);}}@SuppressWarnings("unchecked")public  aterm.ATerm  _visit_ATerm( aterm.ATerm  arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {if (!(( null  == environment))) {return (( aterm.ATerm )any.visit(environment,introspector));} else {return any.visitLight(arg,introspector);}}@SuppressWarnings("unchecked")public  aterm.ATerm  visit_ATerm( aterm.ATerm  tom__arg, tom.library.sl.Introspector introspector) throws tom.library.sl.VisitFailure {{{if (tom_is_sort_ATerm(tom__arg)) {boolean tomMatch3_4= false ; aterm.ATerm  tomMatch3_3= null ; aterm.ATerm  tomMatch3_2= null ;if (tom_is_sort_ATerm((( aterm.ATerm )tom__arg))) {if (tom_is_fun_sym_ATermAppl((( aterm.ATerm )(( aterm.ATerm )tom__arg)))) {{tomMatch3_4= true ;tomMatch3_2=(( aterm.ATerm )tom__arg);}} else {if (tom_is_sort_ATerm((( aterm.ATerm )tom__arg))) {if (tom_is_fun_sym_ATermInt((( aterm.ATerm )(( aterm.ATerm )tom__arg)))) {{tomMatch3_4= true ;tomMatch3_3=(( aterm.ATerm )tom__arg);}}}}}if (tomMatch3_4) {





 
        if((( aterm.ATerm )tom__arg)!= t) {
          Position pos = getEnvironment().getPosition();
          System.out.println("pos = " + pos);
          for(Object o:constants) {
            ATerm cst = (ATerm)o;
            ATerm res = pos.getReplace(cst).visit(t, new LocalIntrospector());
            try {
              Tree tr = Tree.fromTerm(res);
              c.add(tr);
              //System.out.println("add tree = " + tr);
            } catch(Exception e) {

            }

          }
        }
      }}}}return _visit_ATerm(tom__arg,introspector);}}private static  tom.library.sl.Strategy  tom_make_ReplaceSubtermByConstant( aterm.ATerm  t0,  java.util.Collection  t1,  java.util.Collection  t2) { return new ReplaceSubtermByConstant(t0,t1,t2);}private static boolean tom_is_fun_sym_ReplaceSubtermByConstant( tom.library.sl.Strategy  t) {return (t instanceof ReplaceSubtermByConstant);}private static  aterm.ATerm  tom_get_slot_ReplaceSubtermByConstant_t( tom.library.sl.Strategy  t) {return ((ReplaceSubtermByConstant)t).gett();}private static  java.util.Collection  tom_get_slot_ReplaceSubtermByConstant_constants( tom.library.sl.Strategy  t) {return ((ReplaceSubtermByConstant)t).getconstants();}private static  java.util.Collection  tom_get_slot_ReplaceSubtermByConstant_c( tom.library.sl.Strategy  t) {return ((ReplaceSubtermByConstant)t).getc();}



  public static void main(String[] Args) {

    Tree t = Tree.fromString("tree(val(3),empty(),tree(val(5),empty(),empty()))");

    ATerm at = t.toATerm();
    System.out.println("at = " + at);

    Collection<ATerm> bagPhase1 = new HashSet<ATerm>();
    Collection<ATerm> bagPhase2 = new HashSet<ATerm>();
    Collection<ATerm> constants = new HashSet<ATerm>();
    Introspector introspector = new LocalIntrospector();
    try {
      tom_make_TopDown(tom_make_CollectConstant(at,constants)).visit(at, introspector);
      tom_make_TopDown(tom_make_CollectSubterm(at,bagPhase1)).visit(at, introspector);
      bagPhase1.add(at);
      for(ATerm tt: bagPhase1) {
        tom_make_TopDown(tom_make_ReplaceSubtermByConstant(tt,constants,bagPhase2)).visit(tt, introspector);
      }
      bagPhase2.addAll(bagPhase1);
    } catch (VisitFailure e) {
      e.printStackTrace();
    }

    System.out.println("constants = " + constants);
    System.out.println("bag1       = " + bagPhase1);
    System.out.println("bag2       = " + bagPhase2);


  }

  }

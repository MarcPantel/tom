module examples.shop.Boutique
imports int
abstract syntax

LineItem = lineItem(item:Item, quantity:int)

Item = item(id:int, price:int)

Inventory = items(LineItem*)

ShoppingCart = lines(LineItem*)

Carts = carts(ShoppingCart*)
Shop = shop(inventory:Inventory, carts:Carts)


// items:make_insert(e,l) {
//   %match(LineItem e) {
//     _ -> { return `items(); }
//   }
// }


shop:make(i,cs) {
  examples.shop.boutique.types.Inventory inv = examples.shop.boutique.types.Shop.fix(i,cs);
  return realMake(inv,cs);
}


sort Shop:block() {

  public static Inventory fix(Inventory i, Carts cs) {
//     %match(i,cs) {
//       !items(I1*, item(id,_),I2*), 
//         carts(C1*, items(I1*, item(id,q),I2*), C2*) -> { return `fix(items(I1*, item(id,q),I2*),cs); }
//     }
//     return i;

    return `items();
  }

}

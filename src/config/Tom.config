PlatformConfig(
concPlugin(
    Plugin("Starter", "tom.engine.starter.StarterPlugin"),
    Plugin("Parser", "tom.engine.parser.TomParserPlugin"),
    Plugin("Code transformer", "tom.engine.transformer.TransformerPlugin"),
    Plugin("Syntax checker", "tom.engine.checker.SyntaxCheckerApPlugin"),
    Plugin("Desugarer", "tom.engine.desugarer.DesugarerPlugin"),
    Plugin("Typer", "tom.engine.typer.TyperPlugin"),
    Plugin("Type checker", "tom.engine.checker.TypeCheckerPlugin"),
    Plugin("Expander", "tom.engine.expander.ExpanderPlugin"),
    Plugin("Compiler", "tom.engine.compiler.Compiler"),
    Plugin("Optimizer", "tom.engine.optimizer.OptimizerPlugin"),
    Plugin("Backend", "tom.engine.backend.BackendPlugin")
),
OptionManager("tom.engine.TomOptionManager",
  concPlatformOption(
    PluginOption("help",          "h",  "Print this help", BooleanValue(False()), ""),
    PluginOption("version",       "V",  "Print version", BooleanValue(False()), ""),
    PluginOption("verbose",       "v",  "Set verbose mode on", BooleanValue(False()), ""),
    PluginOption("intermediate",  "i",  "Generate intermediate files", BooleanValue(False()), ""),
    PluginOption("noDeclaration", "D",  "Do not generate code for declarations", BooleanValue(False()), ""),
    PluginOption("wall",          "W",  "Print warning", BooleanValue(False()), ""),
    PluginOption("pretty",        "p",  "Generate readable code", BooleanValue(False()), ""),
    PluginOption("noStatic",      "",   "Generate non static functions", BooleanValue(False()), ""),
    PluginOption("protected",     "",   "Generate protected functions", BooleanValue(False()), ""),
    PluginOption("eclipse",       "",   "Sets Eclipse mode", BooleanValue(False()), ""),
    PluginOption("import",        "I",  "Path for %include", StringValue(""), "path"),
    PluginOption("output",        "o",  "Set output file name", StringValue(""), "file"),
    PluginOption("destdir",       "d",  "Specify where to place generated files", StringValue("."), "dir"),
    PluginOption("encoding",      "e",  "Specify the character encoding", StringValue("UTF-8"), "charset"),
    PluginOption("multithread",   "mt", "Sets the multithread mode", BooleanValue(False()), "")
    ))
)

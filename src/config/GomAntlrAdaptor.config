PlatformConfig(
concPlugin(
    Plugin("Starter", "tom.gom.starter.Starter"),
    Plugin("GomParser", "tom.gom.parser.GomParserPlugin"),
    Plugin("Expander", "tom.gom.expander.ExpanderPlugin"),
    Plugin("TypeExpander", "tom.gom.expander.TypeExpanderPlugin"),
    Plugin("GraphExpander", "tom.gom.expander.GraphExpanderPlugin"),
    Plugin("AntlrAdaptor", "tom.gom.antlradapter.AdapterPlugin")
),
OptionManager("tom.gom.GomOptionManager",
  concPlatformOption(
    PluginOption("help", "h", "Print this help", 
      BooleanValue(False()), ""),
    PluginOption("version", "V", "Print version",
      BooleanValue(False()), ""),
    PluginOption("verbose", "v", "Display compilation information",
      BooleanValue(False()), ""),
    PluginOption("termpointer", "tp", "Extend the signature for term pointers",
      BooleanValue(False()), ""),
    PluginOption("fresh", "f", "Extend the signature to deal with terms with binders",
      BooleanValue(False()), ""),
    PluginOption("termgraph", "tg", "Extend the signature for term-graphs",
      BooleanValue(False()), ""),
    PluginOption("debug", "vv", "Display debugging info",
      BooleanValue(False()), ""),
    PluginOption("verbosedebug", "vvv", "Display even more debugging info",
      BooleanValue(False()), ""),
    PluginOption("intermediate", "i", "Generate intermediate files",
      BooleanValue(False()), ""),
    PluginOption("nosharing", "ns", "Generate code whithout sharing",
      BooleanValue(False()), ""),
    PluginOption("wall", "W", "Print warning",
      BooleanValue(False()), ""),
    PluginOption("package", "p", "Path for include",
	StringValue("Specify package name (optional)"), ""),
    PluginOption("import", "I", "Path for include",
	StringValue(""), "path"),
    PluginOption("intermediateName", "iname", "Specify the prefix of intermediate files",
	StringValue(""), "file"),
    PluginOption("destdir", "d", "Specify where to place generated files",
	StringValue("."), "dir")
    ))
)

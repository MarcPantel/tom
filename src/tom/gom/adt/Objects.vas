module Objects
imports str

public
sorts GomClass ClassName GomClassList ClassNameList SlotField SlotFieldList

abstract syntax

VisitableFwdClass(className:ClassName,fwd:GomClass) -> GomClass

AbstractTypeClass(className:ClassName,factoryName:ClassName,visitor:ClassName,sortList:ClassNameList) -> GomClass
SortClass(className:ClassName,factoryName:ClassName,abstractType:ClassName,visitor:ClassName,operators:ClassNameList,slots:SlotFieldList) -> GomClass
OperatorClass(className:ClassName,factoryName:ClassName,abstractType:ClassName,sortName:ClassName,visitor:ClassName,slots:SlotFieldList) -> GomClass

// pass the full operator classes, so we get the factory and sort for each operator
FactoryClass(className:ClassName,importedFactories:ClassNameList,sortClasses:GomClassList,operatorClasses:GomClassList)  -> GomClass
VisitorClass(className:ClassName,sortClasses:GomClassList,operatorClasses:GomClassList) -> GomClass
FwdClass(className:ClassName,visitor:ClassName,abstractType:ClassName,sortClasses:GomClassList,operatorClasses:GomClassList) -> GomClass
VoidFwdClass(className:ClassName,visitor:ClassName,abstractType:ClassName,sortClasses:GomClassList,operatorClasses:GomClassList) -> GomClass
TomMapping(className:ClassName,sortClasses:GomClassList,operatorClasses:GomClassList) -> GomClass

ClassName(pkg:String,name:String)  -> ClassName
concClassName(ClassName*)          -> ClassNameList

SlotField(name:String,domain:ClassName) -> SlotField
concSlotField(SlotField*) -> SlotFieldList

concGomClass(GomClass*)            -> GomClassList

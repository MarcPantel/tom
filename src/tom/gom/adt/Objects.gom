module Objects
imports String Code Gom boolean

abstract syntax

GomClass = AbstractTypeClass(ClassName:ClassName,
                             Mapping:ClassName,
                             SortList:ClassNameList,
                             Hooks:HookList)
         | SortClass(ClassName:ClassName,
                     AbstractType:ClassName,
                     Mapping:ClassName,
                     Operators:ClassNameList,
                     VariadicOperators:ClassNameList,
                     SlotFields:SlotFieldList,
                     Hooks:HookList)
         | OperatorClass(ClassName:ClassName,
                         AbstractType:ClassName,
                         ExtendsType:ClassName,
                         Mapping:ClassName,
                         SortName:ClassName,
                         SlotFields:SlotFieldList,
                         Hooks:HookList,
                         Comments:String)
         | VariadicOperatorClass(ClassName:ClassName,
                                 AbstractType:ClassName,
                                 Mapping:ClassName,
                                 SortName:ClassName,
                                 Empty:GomClass,
                                 Cons:GomClass,
                                 Hooks:HookList,
                                 Comments:String)
         | TomMapping(ClassName:ClassName,SortClasses:GomClassList,OperatorClasses:GomClassList)

GomClassList = ConcGomClass(GomClass*)

ClassName = ClassName(Pkg:String,Name:String)
ClassNameList = ConcClassName(ClassName*)

SlotField = SlotField(Name:String,Domain:ClassName)
SlotFieldList = ConcSlotField(SlotField*)

Hook = MakeHook(HookArguments:SlotFieldList,Code:Code,HasTomCode:boolean)
     | MakeBeforeHook(HookArguments:SlotFieldList,Code:Code,HasTomCode:boolean)
     | BlockHook(Code:Code,HasTomCode:boolean)
     | InterfaceHook(Code:Code)
     | ImportHook(Code:Code)
     | MappingHook(Code:Code)
HookList = ConcHook(Hook*)

sort HookList:block() {
  public boolean containsTomCode() {
    boolean containsTomCode = false;
    %match(this) {
      ConcHook(_*,(MakeHook|MakeBeforeHook|BlockHook)[HasTomCode=HasTomCode],_*) && true() << HasTomCode -> {
        containsTomCode = true;
      }
    }
    return containsTomCode;
  }
}

module Objects
imports String

abstract syntax

GomClass = VisitableFwdClass(className:ClassName,fwd:GomClass)
         | AbstractTypeClass(className:ClassName,visitor:ClassName,sortList:ClassNameList)
         | SortClass(className:ClassName,abstractType:ClassName,visitor:ClassName,forward:ClassName,operators:ClassNameList,slots:SlotFieldList)
         | OperatorClass(className:ClassName,
                         abstractType:ClassName,
                         extendsType:ClassName,
                         mapping:ClassName,
                         sortName:ClassName,
                         visitor:ClassName,
                         slots:SlotFieldList,
                         hooks:HookList)
         | VariadicOperatorClass(className:ClassName,
                                 abstractType:ClassName,
                                 sortName:ClassName,
                                 empty:GomClass,cons:GomClass)
         | VisitorClass(className:ClassName,sortClasses:GomClassList,operatorClasses:GomClassList)
         | FwdClass(className:ClassName,visitor:ClassName,importedVisitors:ClassNameList,abstractType:ClassName,importedAbstractTypes:ClassNameList,sortClasses:GomClassList,operatorClasses:GomClassList)
         | TomMapping(className:ClassName,basicStrategy:ClassName,sortClasses:GomClassList,operatorClasses:GomClassList)

GomClassList = concGomClass(GomClass*)

ClassName = ClassName(pkg:String,name:String)
ClassNameList = concClassName(ClassName*)

SlotField = SlotField(name:String,domain:ClassName)
SlotFieldList = concSlotField(SlotField*)

Hook = MakeHook(hookArguments:SlotFieldList,code:String)
     | MakeBeforeHook(hookArguments:SlotFieldList,code:String)
HookList = concHook(Hook*)


module Gom
imports String
abstract syntax

GomModule = GomModule(moduleName:GomModuleName, sectionList:SectionList)
GomModuleList = concGomModule(GomModule*)           
Section = Imports(importList:ImportList)
        | Public(grammarList:GrammarList)
SectionList = concSection(Section*)               
ImportedModule = Import(moduleName:GomModuleName)
ImportList = concImportedModule(ImportedModule*) 
Grammar = Grammar(productionList:ProductionList)
        | Sorts(typeList:GomTypeList)
GrammarList = concGrammar(Grammar*)               
Production = Production(name:String, domain:FieldList, codomain:GomType)
           | Hook(nameType:IdKind,name:String, hookType:Hookkind, args:ArgList, code:String)
ProductionList = concProduction(Production*)         
Hookkind = KindMakeHook()
         | KindMakeinsertHook()
         | KindBlockHook()
         | KindInterfaceHook()
         | KindImportHook()
IdKind = KindModule()
       | KindSort()
       | KindOperator()
Arg = Arg(name:String)
ArgList = concArg(Arg*)
Field = StarredField(fieldType:GomType)
      | NamedField(name:String,fieldType:GomType)
FieldList = concField(Field*)                   
GomModuleName = GomModuleName(name:String)
GomType = GomType(name:String)
GomTypeList = concGomType(GomType*)               

ModuleDecl = ModuleDecl(moduleName:GomModuleName,pkg:String,hooks:HookDeclList)              
ModuleDeclList = concModuleDecl(ModuleDecl*)                                  
SortDecl = SortDecl(name:String,moduleDecl:ModuleDecl,hooks:HookDeclList)                  
         | BuiltinSortDecl(name:String)                                 
SortDeclList = concSortDecl(SortDecl*)                                      
OperatorDecl = OperatorDecl(name:String,sort:SortDecl,prod:TypedProduction,hooks:HookDeclList) 
OperatorDeclList = concOperator(OperatorDecl*)                                  
TypedProduction = Slots(slots:SlotList)                                        
                | Variadic(sort:SortDecl)                                      
Slot = Slot(name:String,sort:SortDecl)                              
SlotList = concSlot(Slot*)                                              
Sort = Sort(decl:SortDecl,operators:OperatorDeclList)               
SortList = concSort(Sort*)                                              
HookDecl = MakeHookDecl(slotargs:SlotList,code:String)
         | BlockHookDecl(code:String)
         | InterfaceHookDecl(code:String)
         | ImportHookDecl(code:String)

HookDeclList = concHookDecl(HookDecl*)                                      

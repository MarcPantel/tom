======
README
======

This directory is a kind of "laboratory" for the future version of Tom, and
particularly for the parser. It is not considered as "stable code" and can be
completely modified.

-------
Content
-------
 +--- fusion
 +--- backquote
 +--- newtom
 +--- proto
 +--- inputTests

fusion :
This is a former version of a parser based on the official Tom grammar + few
constructs. A "Minijava" language is integrated.

backquote :
This is an experiment for a new backquote parser. It is very different from the
former one : it has its own language which almost match with the java
expressions.
It has not yet been completely tested. It is integrated in "newtom" but we keep
it here because it is a simple way to test the parser on backquote construct
only.

newtom :
It will replace src/tom/engine/parser when finished. It contains a light version
of Tom parser (without backquote : NewTomLanguage.g) and a work version with
backquote include. It has not been decided how will be the final version.

inputTests :
Few tests for fusion, backquote, newtom and proto

proto :
It is a small prototype for the "glue" between HostLanguage, TomLanguage and
BackQuoteLanguage. It contains three mini languages which represent them, and
uses island-grammars. It is based on the official island grammar example (Simple
+ Javadoc). From 'HostLanguage', 'TomLanguage' and 'BackQuoteLanguage' can be
called (with %match and `( ). And from TomLanguage, HostLanguage is called in
%match body.

PROBLEM :
Although Tom and BackQuote seem to be called, the tree building doesn't work.
For instance, in a very small example, we obtain this tree :

(Program (HostBlock (StatementConstruct (Return myvar))) (HostBlock
(StatementConstruct (Return myvarvar))) (BackQuoteBlock `(x*)) (TomBlock
%match<code of the %match...>))

instead of :

(Program (HostBlock (StatementConstruct (Return myvar))) (HostBlock
(StatementConstruct (Return myvarvar))) (BackQuoteBlock (BQVariableStar "x"))
(TomBlock (MatchConstruct <rest of the match tree>)))


-----
Usage
-----

To use this code, go to the tom directory :

cd $YOUR_TOM_WORKSPACE/src/tom/

For backquote test :
ant -f backquote.build.xml
cd build
java backquote/MainNewBackQuote ../islander/inputTests/backquoteTest (uncomment the
test you want tu execute)

For "light" newtom test :
ant -f newtom.build.xml
cd build
java newtom/MainNewTom ../islander/inputTests/[0-9]+test.minitom

For newtom test :
ant -f tom.build.xml
cd build
java newtom/MainTomLanguage ../islander/inputTests/tomTest (uncomment the
test you want tu execute)

For proto test :
ant -f proto.build.xml
cd build
java Main ../islander/inputTests/protoTest 

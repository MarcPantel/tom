TODO
-------
- %include :
  - (JC) à tester, normalement OK, semble passer

- inclusion et appel de %gom
  - (JC) gom sans option semble OK, continuer les tests
  - (JC) gom avec options pose problème -> corrigé, continuer à tester
  - (JC) theories dans gom semblent poser problème

- parsing de %strategy
  - (JC) à tester, semble passer sur plusieurs exemples/tests

- labels dans miniTom.g
  - (FP) semble fonctionne, continuer à tester

- patterns dans %match
  - - (JC) p << T x  semble fonctionner, continuer à tester les patterns

- gérer les $nom_variable dans les mappings
  - directement dans le parser ?
  - plus simple de le faire lors de la transformation des cst : appliquer
  String tom.engine.tools.ASTFactory.abstractCode(String code, String... vars);
  à tous les contenus des nœuds Cst_IsFsym, Cst_GetHead, Cst_IsEmpty,
  Cst_Get_syze, Cst_GetTail, Cst_GetSlot, Cst_GetElement, Cst_Make, Cst_IsSort,
  Cst_Equals, etc. (liste à compléter si besoin)

- meta-quote %[..]%

- ajouter des optionList dans les constructions (pour les numéros de ligne, les
  noms de fichiers, etc.)
  - (JC) il y a une méthode Java « CommonTree extractOptions(CommonToken) »
    dans miniTomParser qui extrait les options et ajoute un nœud à l'arbre.
    Pour commencer, ce n'est pas mal, mais il faudra peut-être un peu la
    modifier/décliner

- changer le parser backquote pour délimiter _explicitement_ les parties
  backquote et code hôte ("parenthésage" et un "unquote") :
e.g. : `f(x $+ 42$)`  <- solution qui semble l'une des plus intéressantes

Mais on peut aussi imaginer des syntaxes telles que :
  `f(x ${+ 42})`  <- très intéressante aussi
ou `(f(x ${+ 42}))
ou `f(x '+ 42')`
  - parenthésage de backquote en place dans la branche newbackquote, il faut modifier les exemples pour pouvoir le tester pleinement

- clarifier le nommage des sort et constructeurs : CstTerm ne correspond pas
  aux TomTerm mais aux BQTerm en plus de CstBQTerm, CstPattern correspond aux
  TomTerm


==========================================================

Remaining examples and tests to pass (please remove the appropriate line once
tested):
- tests:
  
  test/
  test/backquote
  test/error
  test/gom
  test/numeric
  test/regress
  test/rule
  test/sl
  test/TestLabel.t

- examples:

  examples/acmatching
  examples/addressbook
  examples/analysis
  examples/antipattern
  examples/appletxml
  examples/bdd
  examples/boulderdash
  examples/bpel
  examples/builtin
  examples/bytecode
  examples/caml
  examples/cell
  examples/cps
  examples/csharp
  examples/csmaca
  examples/debugger
  examples/deepmatch
  examples/dist
  examples/dom
  examples/expression
  examples/freshgom
  examples/gasel
  examples/generics
  examples/gom
  examples/gomoku
  examples/gterm
  examples/integerc
  examples/labyrinth
  examples/lambdacalculi
  examples/lazyml
  examples/lib
  examples/list
  examples/lsystems
  examples/master
  examples/matching
  examples/meta
  examples/mgs
  examples/miniml
  examples/modeltrans
  examples/multigraph
  examples/nspk
  examples/old
  examples/p3p
  examples/parser
  examples/peano
  examples/poly
  examples/polygraphes
  examples/prodrule
  examples/propp
  examples/python
  examples/quine
  examples/rbtree
  examples/report
  examples/servlet
  examples/set
  examples/strategy
  examples/strategycompiler
  examples/strings
  examples/structure
  examples/subtypeinference
  examples/subtyping
  examples/tactics
  examples/termgraph
  examples/TestMatch.t
  examples/tomjastadd
  examples/transformation
  examples/tutorial
  examples/typeinference
  examples/who
  examples/why
  examples/xml
  examples/xquery


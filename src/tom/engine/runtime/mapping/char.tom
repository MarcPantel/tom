%typeterm char {
  implement           { char }
  get_fun_sym(t)      { t }
  cmp_fun_sym(s1,s2)  { (s1==s2) }
  get_subterm(t, n)   { null }
  equals(t1,t2)       { (t1==t2) }
}

%typeterm Char {
  implement           { Character }
  get_fun_sym(t)      { t }
  cmp_fun_sym(s1,s2)  { (s1.equals(s2)) }
  get_subterm(t, n)   { null }
  equals(t1,t2)       { (t1.equals(t2)) }
}

%op Char Char(c:char) {
  fsym {}
  is_fsym(t) { (t!= null) && (t instanceof Character) }
  get_slot(c,t) { t.charValue() }
  make(c) { new Character(c) }

}

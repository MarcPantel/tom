module TomConstraint
imports TomSignature
abstract syntax
Constraint = Ensure(Variable:TomTerm)
           | Equal(Variable:TomTerm)
           | AssignTo(Variable:TomTerm)
           | AssignPositionTo(Variable:TomTerm)
 	   | TrueConstraint()
	   | FalseConstraint()		   
	   | Neg(c:Constraint)
	   | AndConstraint(cla:AConstraintList)
	   | OrConstraint(clo:OConstraintList)
	   | EqualConstraint(pattern:TomTerm, genTerm:TomTerm)
	   | NEqualConstraint(pattern:TomTerm, genTerm:TomTerm)
	   | Exists(var:TomTerm,cons:Constraint)
	   | ForAll(var:TomTerm,cons:Constraint)
	   | AntiMatchConstraint(Pattern:TomTerm, Subject:TomTerm, ActionOnIf : int)
	   | AndAntiConstraint(Constraint*)

/** normalization hooks
 *
 * AndAntiConstraint(X*,AndAntiConstraint(),Y*) -> AndAntiConstraint(X*,Y*)
 * AndAntiConstraint(X*,AndAntiConstraint(x))) -> AndAntiConstraint(X*,x)
 *
 */ 
  /*
AndAntiConstraint:make_insert(el, list) {
	%match(el) {
		AndAntiConstraint() -> {
			return list;
		}
		AndAntiConstraint(x) -> {
			return realMake(`x,list);
		}
	}
}
*/

ConstraintList = concConstraint(Constraint*)
AConstraintList = concAnd(Constraint*)
OConstraintList = concOr(Constraint*)

module TomConstraint
imports TomTerm
abstract syntax
Constraint = Ensure(Variable:TomTerm)
           | Equal(Variable:TomTerm)
           | AssignTo(Variable:TomTerm)
 		   | TrueConstraint()
		   | FalseConstraint()		   
		   | Neg(c:Constraint)
		   | AndConstraint(cla:ConstraintList)
		   | OrConstraint(clo:ConstraintList)
		   | MatchConstraint(pattern:TomTerm, genTerm:TomTerm)
//		   | NMatchConstraint(pattern:TomTerm, genTerm:TomTerm)
//		   | Exists(var:TomTerm,cons:Constraint)
//		   | ForAll(var:TomTerm,cons:Constraint)
		   | AntiMatchConstraint(Pattern:TomTerm, Subject:TomTerm, ActionOnIf : int)
		   | AndAntiConstraint(Constraint*)
		   | EqualSublist(startList:int,endList:int,var:TomTerm,list:TomTerm)

ConstraintList = concConstraint(Constraint*)
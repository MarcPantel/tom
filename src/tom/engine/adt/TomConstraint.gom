module TomConstraint
imports TomTerm
abstract syntax

Constraint = 
		  /**
		   * <code>AssignTo</code> specifies that we want to instanciate Variable with the term on which this constraint is attached
		   *
		   * @param Variable the variable to constrain
		   */
       	   | AssignTo(Variable:TomTerm)
		   | AssignPositionTo(Variable:TomTerm)
 		   | TrueConstraint()
		   | FalseConstraint()		   
		   | Negate(c:Constraint)
		   | AndConstraint(Constraint*)
		   | OrConstraint(Constraint*)
		  /**
		   * <code>OrConstraintDisjunction</code> used for the disjunction of symbols
		   *
		   * @param Constraint the list of AndConstraints that are linked by Or
		   */		   
  		   | OrConstraintDisjunction(Constraint*)
		   | MatchConstraint(pattern:TomTerm, subject:TomTerm)
		   | AntiMatchConstraint(Constraint:Constraint)
		   | NumericConstraint(Left:TomTerm, Right:TomTerm, Type:NumericConstraintType)
  		   | EmptyListConstraint(Opname:TomName,Variable:TomTerm)
  		   | EmptyArrayConstraint(Opname:TomName,Variable:TomTerm,Index:TomTerm)
  		   /**
  		   * Used in the parser to mark that we started an And or an Or
  		   */
  		   | AndMarker(Constraint:Constraint)
  		   | OrMarker(Constraint:Constraint)

NumericConstraintType = NumLessThan() 
					| NumLessOrEqualThan()
					| NumGreaterThan()
					| NumGreaterOrEqualThan()
					| NumDifferent()
					| NumEqual()

ConstraintList = concConstraint(Constraint*)
AndConstraint:AU() { `TrueConstraint() }
OrConstraint:AU() { `FalseConstraint() }
OrConstraintDisjunction:AU() { }






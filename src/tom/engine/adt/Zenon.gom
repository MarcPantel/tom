module Zenon
imports String int
abstract syntax
ZSymbol = zsymbol(Name:String)
  
ZTerm = zvar(Varname:String)
      | zappl(Zsymb:ZSymbol,Termlist:ZTermList)
      | zst(Abst:ZTerm,Index:int)
      | zsl(Abst:ZTerm,Name:String)

ZTermList = concZTerm(ZTerm *)

ZType = ztype(Tname:String)

ZExpr = ztrue()
      | zfalse()
      | zisfsym(T:ZTerm,Symbol:ZSymbol)
      | zeq(Lt:ZTerm,Rt:ZTerm)
      | zforall(Var:ZTerm,Aztype:ZType,Expr:ZExpr)
      | zexists(Var:ZTerm,Aztype:ZType,Expr:ZExpr)
      | zand(Lte:ZExpr,Rte:ZExpr)
      | zor(Lte:ZExpr,Rte:ZExpr)
      | znot(Nex:ZExpr)
      | zequiv(Lte:ZExpr,Rte:ZExpr)
  
ZAxiom = zaxiom(Name:String,Ax:ZExpr)

ZAxiomList = zby(ZAxiom *)          

ZSpec = zthm(Thm:ZExpr,By:ZAxiomList)   

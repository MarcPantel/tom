module Zenon
imports String int
abstract syntax
ZSymbol = zsymbol(name:String)
  
ZTerm = zvar(varname:String)
      | zappl(zsymb:ZSymbol,termlist:ZTermList)
      | zst(abst:ZTerm,index:int)
      | zsl(abst:ZTerm,name:String)

ZTermList = concZTerm(ZTerm *)

ZType = ztype(tname:String)

ZExpr = ztrue()
      | zfalse()
      | zisfsym(t:ZTerm,symbol:ZSymbol)
      | zeq(lt:ZTerm,rt:ZTerm)
      | zforall(var:ZTerm,aztype:ZType,expr:ZExpr)
      | zexists(var:ZTerm,aztype:ZType,expr:ZExpr)
      | zand(lte:ZExpr,rte:ZExpr)
      | zor(lte:ZExpr,rte:ZExpr)
      | znot(nex:ZExpr)
      | zequiv(lte:ZExpr,rte:ZExpr)
  
ZAxiom = zaxiom(name:String,ax:ZExpr)

ZAxiomList = zby(ZAxiom *)          

ZSpec = zthm(thm:ZExpr,by:ZAxiomList)   

module TomDeclaration
imports TomSignature 
abstract syntax
Declaration = TypeTermDecl(astName:TomName,declarations:DeclarationList,orgTrack:Option)
            | CheckStampDecl(variable:TomTerm,instr:Instruction,orgTrack:Option)
            | SetStampDecl(variable:TomTerm,instr:Instruction,orgTrack:Option)
            | GetImplementationDecl(variable:TomTerm,instr:Instruction,orgTrack:Option)
            | IsFsymDecl(astName:TomName,variable:TomTerm,instr:Instruction,orgTrack:Option)
            | GetSlotDecl(astName:TomName,slotName:TomName,variable:TomTerm,instr:Instruction,orgTrack:Option)
            | TermsEqualDecl(termArg1:TomTerm,termArg2:TomTerm,instr:Instruction,orgTrack:Option)
            | GetHeadDecl(opname:TomName, codomain:TomType,variable:TomTerm,instr:Instruction,orgTrack:Option)
            | GetTailDecl(opname:TomName, variable:TomTerm,instr:Instruction,orgTrack:Option)
            | IsEmptyDecl(opname:TomName, variable:TomTerm,instr:Instruction,orgTrack:Option)
            | MakeEmptyList(astName:TomName,instr:Instruction,orgTrack:Option)
            | MakeAddList(astName:TomName,varElt:TomTerm,varList:TomTerm,instr:Instruction,orgTrack:Option)
            | GetElementDecl(opname:TomName, variable:TomTerm,index:TomTerm,instr:Instruction,orgTrack:Option)
            | GetSizeDecl(opname:TomName, variable:TomTerm,instr:Instruction,orgTrack:Option)
            | MakeEmptyArray(astName:TomName,varSize:TomTerm,instr:Instruction,orgTrack:Option)
            | MakeAddArray(astName:TomName,varElt:TomTerm,varList:TomTerm,instr:Instruction,orgTrack:Option)
            | MakeDecl(astName:TomName,astType:TomType,args:TomList,instr:Instruction,orgTrack:Option)

            | Strategy(sName:TomName,extendsTerm:TomTerm,visitList:TomVisitList,orgTrack:Option)
            | RuleSet(ruleList:TomRuleList,option:OptionList)
            | FunctionDef(astName:TomName,argumentList:TomList,codomain:TomType,throwsType:TomType,instruction:Instruction)
            | MethodDef(astName:TomName,argumentList:TomList,codomain:TomType,throwsType:TomType,instruction:Instruction)
/*
super is the parameter given to the function super. For instance: super(`Identity());
*/
            | Class(astName:TomName,extendsType:TomForwardType,superTerm:TomTerm,declaration:Declaration)
            | SymbolDecl(astName:TomName)
            | ListSymbolDecl(astName:TomName)
            | ArraySymbolDecl(astName:TomName)
            | EmptyDeclaration()
            | AbstractDecl(declList:DeclarationList)

DeclarationList = concDeclaration(Declaration*)

module CST
imports String int 
abstract syntax

// Program ===================================================================
CstProgram = Cst_Program(blocks:CstBlockList)

CstBlockList = ConcCstBlock(CstBlock*)

CstBlock = HOSTBLOCK(optionList:CstOptionList, content:String)
         | Cst_MatchConstruct(optionList:CstOptionList, subjectList:CstBQTermList , constraintActionList:CstConstraintActionList)
         | Cst_OpConstruct(optionList:CstOptionList, codomain:CstType, ctorName:CstName, argumentList:CstSlotList, operatorList:CstOperatorList)
         | Cst_OpArrayConstruct(optionList:CstOptionList, codomain:CstType, ctorName:CstName, domain:CstType, operatorList:CstOperatorList)
         | Cst_OpListConstruct(optionList:CstOptionList, codomain:CstType, ctorName:CstName, domain:CstType, operatorList:CstOperatorList)
         | Cst_TypetermConstruct(optionList:CstOptionList, typeName:CstType, extendsTypeName:CstType, operatorList:CstOperatorList)
         | Cst_MetaQuoteConstruct(optionList:CstOptionList, content:String)
         | Cst_IncludeFile(optionList:CstOptionList, filename:String)
         | Cst_IncludeConstruct(blocks:CstBlockList)
         | Cst_GomConstruct(optionList:CstOptionList, blocks:CstBlockList)
         | Cst_BQTermToBlock(bqterm:CstBQTerm)
         | Cst_ReturnBQTerm(bqterm:CstBQTerm)
         | Cst_StrategyConstruct(optionList:CstOptionList, stratName:CstName, stratArgs:CstSlotList, extendsTerm:CstBQTerm, visitList:CstVisitList)
         | Cst_AbstractBlock(blocks:CstBlockList)
         | Cst_UnamedBlock(blocks:CstBlockList)

CstConstraintAction = Cst_ConstraintAction(constraint:CstConstraint , action:CstBlockList, optionList:CstOptionList)

CstConstraintActionList = ConcCstConstraintAction(CstConstraintAction*)

CstConstraint  = Cst_MatchTermConstraint(pattern:CstPattern, subject:CstBQTerm, type:CstType)
               | Cst_MatchArgumentConstraint(pattern:CstPattern)
               | Cst_AndConstraint(CstConstraint*)
               | Cst_OrConstraint(CstConstraint*)
               | Cst_NumLessThan         (lefthand:CstTerm, righthand:CstTerm)
               | Cst_NumLessOrEqualTo    (lefthand:CstTerm, righthand:CstTerm)
               | Cst_NumGreaterThan      (lefthand:CstTerm, righthand:CstTerm)
               | Cst_NumGreaterOrEqualTo (lefthand:CstTerm, righthand:CstTerm)
               | Cst_NumEqualTo          (lefthand:CstTerm, righthand:CstTerm)
               | Cst_NumDifferent        (lefthand:CstTerm, righthand:CstTerm)
              
CstConstraintList = ConcCstConstraint(CstConstraint*)

// CstTerm in CST context is "equivalent" to BQTerm in AST context
// (it's much simpler because very close to syntax)
CstTerm = Cst_TermVariable(name:String)
        | Cst_TermVariableStar(name:String)
        | Cst_TermAppl(name:String, termList:CstTermList)

CstTermList = ConcCstTerm(CstTerm*)

CstType = Cst_Type(type:String)
        | Cst_TypeUnknown()

// CstPattern in CST context is "equivalent" to TomTerm in AST context
CstPattern = Cst_Anti(pattern:CstPattern)
           | Cst_AnnotatedPattern(pattern:CstPattern,annotation:String)
           | Cst_Variable(name:String) 
           | Cst_VariableStar(name:String)
           | Cst_Constant(symbol:CstSymbol)
           | Cst_ConstantStar(symbol:CstSymbol)
           | Cst_UnamedVariable()
           | Cst_UnamedVariableStar()
           | Cst_Appl(headSymbolList:CstSymbolList, patternList:CstPatternList)
           | Cst_RecordAppl(headSymbolList:CstSymbolList, pairPatternList:CstPairPatternList)

CstSymbolList = ConcCstSymbol(CstSymbol*)
CstSymbol = Cst_Symbol(name:String, theory:CstTheory)
          | Cst_SymbolInt(value:String)
          | Cst_SymbolLong(value:String)
          | Cst_SymbolChar(value:String)
          | Cst_SymbolDouble(value:String)
          | Cst_SymbolString(value:String)

CstTheory = Cst_TheoryAU()
          | Cst_TheoryAC()
          | Cst_TheoryDEFAULT()

CstPatternList = ConcCstPattern(CstPattern*)
CstPairPatternList = ConcCstPairPattern(CstPairPattern*)

CstPairPattern = Cst_PairPattern(slotName:String, pattern:CstPattern)

// CsOp*Construct ============================================================
CstOperatorList = ConcCstOperator(CstOperator*)

CstOperator = Cst_IsFsym(argName:CstName, block:CstBlockList)
            | Cst_GetHead(argName:CstName, block:CstBlockList)
            | Cst_IsEmpty(argName:CstName, block:CstBlockList)
            | Cst_MakeEmptyArray(argName:CstName, block:CstBlockList)
            | Cst_GetSize(argName:CstName, block:CstBlockList)
            | Cst_GetTail(argName:CstName, block:CstBlockList)
            | Cst_GetDefault(argName:CstName, block:CstBlockList)
            | Cst_GetSlot(argName1:CstName, argName2:CstName, block:CstBlockList)
            | Cst_MakeInsert(argName1:CstName, argName2:CstName, block:CstBlockList)
            | Cst_GetElement(argName1:CstName, argName2:CstName, block:CstBlockList)
            | Cst_MakeAppend(argName1:CstName, argName2:CstName, block:CstBlockList)
            | Cst_Make(nameList:CstNameList, block:CstBlockList)
            | Cst_MakeEmptyList(block:CstBlockList)
            | Cst_Implement(block:CstBlockList)
            | Cst_IsSort(argName:CstName, block:CstBlockList)
            | Cst_Equals(argName1:CstName, argName2:CstName, block:CstBlockList)

CstSlotList = ConcCstSlot(CstSlot*)

CstSlot = Cst_Slot(slotName:CstName, slotTypeName:CstType)

// BQTerms ===================================================================
CstBQTerm = Cst_BQAppl(optionList:CstOptionList, name:String, bqTermList:CstBQTermList)
          | Cst_BQRecordAppl(optionList:CstOptionList, name:String, slotList:CstPairSlotBQTermList)
          | Cst_BQVar(optionList:CstOptionList, name:String,type:CstType)
          | Cst_BQVarStar(optionList:CstOptionList, name:String,type:CstType)
          | Cst_BQDefault(optionList:CstOptionList)
          | Cst_BQComposite(optionList:CstOptionList, list:CstBQTermList)
          | Cst_ITL(optionList:CstOptionList, code:String)
          | Cst_BQConstant(optionList:CstOptionList, name:String)

CstPairSlotBQTerm  = Cst_PairSlotBQTerm(optionList:CstOptionList, slotName:CstName, term:CstBQTerm)

CstBQTermList = ConcCstBQTerm(CstBQTerm*)
CstPairSlotBQTermList = ConcCstPairSlotBQTerm(CstPairSlotBQTerm*)

// Names
CstName = Cst_Name(name:String)

CstNameList = ConcCstName(CstName*)

// Options ==
CstOptionList = ConcCstOption(CstOption*)
CstOption = 
          | Cst_Label(name:String)
          | Cst_OriginTracking(fileName:String, startLine:int, startColumn:int, endLine:int, endColumn:int)

// Strategy
CstVisit = Cst_VisitTerm(type:CstType,constraintActionList:CstConstraintActionList,optionList:CstOptionList)
CstVisitList = ConcCstVisit(CstVisit*)

module TomSignature
imports TomName TomType TomConstraint TomInstruction TomExpression TomDeclaration TomOption TomTerm TomSlot int String
abstract syntax
TargetLanguage = TL(code:String,start:Position,end:Position)
               | ITL(code:String)
               | Comment(code:String)
               | noTL()
Position = TextPosition(line:int,column:int)
TomRule = RewriteRule(lhs:TomTerm,rhs:TomTerm,condList:InstructionList,option:OptionList)
TomVisit = VisitTerm(vNode:TomType,astPatternInstructionList:PatternInstructionList,option:OptionList)
TomSymbol = emptySymbol()
          | Symbol(astName:TomName, typesToType:TomType, pairNameDeclList:PairNameDeclList, option:OptionList)
TomSymbolTable = Table(entryList:TomEntryList)
TomEntry = Entry(strName:String,astSymbol:TomSymbol)
TomStructureTable = StructTable(structList:TomList)
TomRuleList = concTomRule(TomRule*)
TomVisitList = concTomVisit(TomVisit*)
TomEntryList = concTomEntry(TomEntry*)
TomSymbolList = concTomSymbol(TomSymbol*)
TomNameList = concTomName(TomName*)

KeyEntry = UsedSymbolConstructor(symbol:TomSymbol)
         | UsedSymbolDestructor(symbol:TomSymbol)
         | UsedTypeDefinition(typedef:TomTypeDefinition)

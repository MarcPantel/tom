module TomTerm
imports TomSignature

public

sorts TomTerm

abstract syntax

[
  modulentry(Name("TomTerm"),
	[Name("TomSignature")],
	[Type("TomTerm"),Type("TomList")],
  [
  constructor(TomTerm,Appl,Appl(<option(OptionList)>,<nameList(NameList)>,<args(TomList)>,<constraints(ConstraintList)>)) -> TomTerm
  constructor(TomTerm,XMLAppl,XMLAppl(<option(OptionList)>,<nameList(NameList)>,<attrList(TomList)>,<childList(TomList)>,<constraints(ConstraintList)>)) -> TomTerm
  constructor(TomTerm,Variable,Variable(<option(OptionList)>,<astName(TomName)>,<astType(TomType)>,<constraints(ConstraintList)>)) -> TomTerm
  constructor(TomTerm,VariableStar,VariableStar(<option(OptionList)>,<astName(TomName)>,<astType(TomType)>,<constraints(ConstraintList)>)) -> TomTerm
  constructor(TomTerm,Placeholder,Placeholder(<option(OptionList)>,<constraints(ConstraintList)>)) -> TomTerm
  constructor(TomTerm,UnamedVariable,UnamedVariable(<option(OptionList)>,<astType(TomType)>,<constraints(ConstraintList)>)) -> TomTerm
  constructor(TomTerm,UnamedVariableStar,UnamedVariableStar(<option(OptionList)>,<astType(TomType)>,<constraints(ConstraintList)>)) -> TomTerm
  
  constructor(TomTerm,emptyTerm, emptyTerm) -> TomTerm
  constructor(TomTerm,TargetLanguageToTomTerm,TargetLanguageToTomTerm(<tl(TargetLanguage)>)) -> TomTerm
  constructor(TomTerm,TomTypeToTomTerm,TomTypeToTomTerm(<astType(TomType)>)) -> TomTerm
  constructor(TomTerm,TomNameToTomTerm,TomNameToTomTerm(<astName(TomName)>)) -> TomTerm
  constructor(TomTerm,TomSymbolToTomTerm,TomSymbolToTomTerm(<astSymbol(TomSymbol)>)) -> TomTerm
  constructor(TomTerm,DeclarationToTomTerm,DeclarationToTomTerm(<astDeclaration(Declaration)>)) -> TomTerm
  constructor(TomTerm,OptionToTomTerm,OptionToTomTerm(<option(OptionList)>)) -> TomTerm
  constructor(TomTerm,ExpressionToTomTerm,ExpressionToTomTerm(<astExpression(Expression)>)) -> TomTerm
  constructor(TomTerm,InstructionToTomTerm,InstructionToTomTerm(<astInstruction(Instruction)>)) -> TomTerm
  constructor(TomTerm,Tom,Tom(<tomList(TomList)>)) -> TomTerm
  constructor(TomTerm,BackQuoteAppl,BackQuoteAppl(<option(OptionList)>,<astName(TomName)>,<args(TomList)>)) -> TomTerm
  constructor(TomTerm,DoubleBackQuote,DoubleBackQuote(<args(TomList)>)) -> TomTerm
  constructor(TomTerm,Composite,Composite(<args(TomList)>)) -> TomTerm
  constructor(TomTerm,RecordAppl,RecordAppl(<option(OptionList)>,<nameList(NameList)>,<args(TomList)>,<constraints(ConstraintList)>)) -> TomTerm
  constructor(TomTerm,PairSlotAppl,PairSlotAppl(<slotName(TomName)>,<appl(TomTerm)>)) -> TomTerm
  constructor(TomTerm,SubjectList,SubjectList(<tomList(TomList)>)) -> TomTerm
  constructor(TomTerm,Term,Term(<tomTerm(TomTerm)>)) -> TomTerm
  constructor(TomTerm,TLVar,TLVar(<strName(str)>,<astType(TomType)>)) -> TomTerm
  constructor(TomTerm,Ref,Ref(<tomTerm(TomTerm)>)) -> TomTerm
  
  constructor(TomTerm,BuildReducedTerm,BuildReducedTerm(<kid1(TomTerm)>)) -> TomTerm
  constructor(TomTerm,FunctionCall,FunctionCall(<astName(TomName)>,<args(TomList)>)) -> TomTerm
  constructor(TomTerm,BuildVariable,BuildVariable(<astName(TomName)>,<args(TomList)>)) -> TomTerm
  constructor(TomTerm,BuildTerm,BuildTerm(<astName(TomName)>,<args(TomList)>)) -> TomTerm
  
  constructor(TomTerm,BuildEmptyList,BuildEmptyList(<astName(TomName)>)) -> TomTerm
  constructor(TomTerm,BuildConsList,BuildConsList(<astName(TomName)>,<headTerm(TomTerm)>,<tailTerm(TomTerm)>)) -> TomTerm
  constructor(TomTerm,BuildAppendList,BuildAppendList(<astName(TomName)>,<headTerm(TomTerm)>,<tailTerm(TomTerm)>)) -> TomTerm
  constructor(TomTerm,BuildEmptyArray,BuildEmptyArray(<astName(TomName)>,<size(int)>)) -> TomTerm
  constructor(TomTerm,BuildConsArray,BuildConsArray(<astName(TomName)>,<headTerm(TomTerm)>,<tailTerm(TomTerm)>)) -> TomTerm
  constructor(TomTerm,BuildAppendArray,BuildAppendArray(<astName(TomName)>,<headTerm(TomTerm)>,<tailTerm(TomTerm)>)) -> TomTerm
  
  constructor(TomTerm,TomInclude,TomInclude(<tomList(TomList)>)) -> TomTerm
  constructor(TomTerm,Automata,Automata(<option(OptionList)>,<patternList(TomList)>,<numberList(TomNumberList)>,<inst(Instruction)>)) -> TomTerm

  PatternInstruction(pattern:Pattern, action:Instruction, option:OptionList) -> PatternInstruction
  Pattern(tomList:TomList) -> Pattern
  concPatternInstruction(PatternInstruction*) -> PatternInstructionList
  concPattern(Pattern*) -> PatternList
	concTomTerm(TomTerm*) -> TomList

This document should be read in reverse order (from bottom to top).

since version 2.2:
  - new organization
    * tom
    *  |--- engine
    *  |      |--- adt               (datatype definitions)
    *  |      |--- backend
    *  |      |--- checker
    *  |      |--- compiler
    *  |      |--- exception
    *  |      |--- optimizer
    *  |      |--- parser
    *  |      |--- starter
    *  |      |--- tools
    *  |      |--- verifier
    *  |      |--- xml
    *  |--- library
    *  |--- platform


version 2.2:
  - this version is not 100% compatible with version 2.1.
    see User Guide, section migration, for details.
  - %typelist and %typearray have been removed: use %typeterm instead
  - access functions (get_head, get_tail, etc.) have to be defined in %oplist
    and %oparray
  - fixed a completeness bug in array version of list-matching
  - a new optimizer has been developped (-O2): this improves pattern matching
    efficiency
  - backquote notation can be used in make(...) { ... }

version 2.1:
  - introduced %vas syntax
  - new parser based on ANTLR
  - new internal architecture based on plugins
  - new library for defining traversal strategies
  - fixed two major bugs, related to completeness, in list-matching
  - several bug fixed
  - new library organization
    * tom
    *  |--- library
    *  |        |--- adt               (datatype definitions)
    *  |        |--- mapping           (predefined mapping)
    *  |               |--- adt        (generated mapping)
    *  |        |--- plugin            (platform tools)
    *  |        |--- set               (to handle sets)
    *  |        |--- strategy
    *  |               |--- concurrent (to support parallel strategy)
    *  |        |--- traversal         (generic traversal)
    *  |        |--- xml               (xml tools)
    *  |
    *  |--- platform                   (the Tom Plugin Platform, known as Tom server)
    *           |--- adt

version 2.0:
  - support for Caml
  - introduced several predefined mappings
  - added an optimizer which performs inlining and improves the
    efficiency of the generated code
  - support for builtin char and builtin string (seen as list of
    char)
  - a better XML support (backquote notation, anonymous nodes)
  - re-designed kernel compiler (with better algorithms)
  - re-designed list-matching
  - annoted variables and non-linear variable are compiled into constraints
  - syntactic patterns are no longer abstracted, but compiled in list-matching
  - several bugs fixed (improved the sortAttributeList method, major
    bug in the Type Expander)
  - removed %typeint, %typedouble and %typestring (use predefined mapping instead)

version 1.5:
  - ported jtom to new version of apigen
  - new TomChecker and simpler regression test infrastructure
  - added disjunction of HeadSymbol
  - XML syntax corresponds to implicit notation
  - implicit and explicit XML lists are allowed
  - unamed lists are allowed
  - sort attribute names by alphabetic order
  - new XML parser
  - fix undetected error
  - optimization in matching: do not assign UnamedVariable when
    they are not annotated
  - fix a bug in linearization of annoted variables
  - allow UnamedVariable and UnamedVariableStar in list-matching
  - allow annoted variables in list-matching

version 1.4:
  - fix the ^M problem under windows
  - user defined labels a are allowed in patterns
  - complex paths allowed in %include contructs

version 1.3:
  - %typein and %typedouble added
  - runtime/strategies added to stable
  - builtin strings supported in back-quoted terms
  - start debugger development
  - allow is_fsym for list and array operators

version 1.2:
  - beginning of documentation: Tom user manual
  - improved debugging facilities
  - traversal facilities added in jtom.runtime
  - disjunction of patterns supported
  - integer in backQuotedTerm supported
  - matching and equality conditions supported in rewrite rules
  - several bugs fixed

version 1.1:
  - new debuging facilities:
    Tom source and the generated code are now synchronized
  - backquote support for typelist and typearray
    make_add renamed into make_insert (for oplist)
    make_add renamed into make_append (for oparray)
  - non-linear patterns supported
  - builtin-integers supported
  - tutorial

version 1.0:
  - new stable version based on ApiGen
  - efficiency bottleneck found
  - import option added: path extension for includes
  - noDeclaration flags added: do not generate declarations

version 0.7:
  - bootstrap with ApiGen (6 types)

version 0.6:
  - use a cache to improve the generator
  - backquote mechanism introduced

version 0.5:
  - front-end improved by adding a type checker.

/*
* generated by Xtext
*/
package tom.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import tom.services.TomDslGrammarAccess;

public class TomDslParser extends AbstractContentAssistParser {
	
	@Inject
	private TomDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected tom.ui.contentassist.antlr.internal.InternalTomDslParser createParser() {
		tom.ui.contentassist.antlr.internal.InternalTomDslParser result = new tom.ui.contentassist.antlr.internal.InternalTomDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTomFileAccess().getAlternatives(), "rule__TomFile__Alternatives");
					put(grammarAccess.getArrayOperationAccess().getAlternatives(), "rule__ArrayOperation__Alternatives");
					put(grammarAccess.getIncludeAccess().getPathAlternatives_2_0(), "rule__Include__PathAlternatives_2_0");
					put(grammarAccess.getOperationArrayAccess().getAlternatives_8(), "rule__OperationArray__Alternatives_8");
					put(grammarAccess.getIncludeAccess().getGroup(), "rule__Include__Group__0");
					put(grammarAccess.getOperationAccess().getGroup(), "rule__Operation__Group__0");
					put(grammarAccess.getOperationAccess().getGroup_4(), "rule__Operation__Group_4__0");
					put(grammarAccess.getOperationAccess().getGroup_4_1(), "rule__Operation__Group_4_1__0");
					put(grammarAccess.getOperationAccess().getGroup_10(), "rule__Operation__Group_10__0");
					put(grammarAccess.getOperationArrayAccess().getGroup(), "rule__OperationArray__Group__0");
					put(grammarAccess.getOperationArrayAccess().getGroup_8_0(), "rule__OperationArray__Group_8_0__0");
					put(grammarAccess.getOperationArrayAccess().getGroup_8_1(), "rule__OperationArray__Group_8_1__0");
					put(grammarAccess.getOperationArrayAccess().getGroup_8_2(), "rule__OperationArray__Group_8_2__0");
					put(grammarAccess.getOperationArrayAccess().getGroup_8_3(), "rule__OperationArray__Group_8_3__0");
					put(grammarAccess.getOperationArrayAccess().getGroup_8_4(), "rule__OperationArray__Group_8_4__0");
					put(grammarAccess.getParIDAccess().getGroup(), "rule__ParID__Group__0");
					put(grammarAccess.getParIDListAccess().getGroup(), "rule__ParIDList__Group__0");
					put(grammarAccess.getParIDListAccess().getGroup_1(), "rule__ParIDList__Group_1__0");
					put(grammarAccess.getParIDListAccess().getGroup_1_1(), "rule__ParIDList__Group_1_1__0");
					put(grammarAccess.getARGAccess().getGroup(), "rule__ARG__Group__0");
					put(grammarAccess.getARGAccess().getGroup_1(), "rule__ARG__Group_1__0");
					put(grammarAccess.getTypeTermAccess().getGroup(), "rule__TypeTerm__Group__0");
					put(grammarAccess.getTomFileAccess().getOpsAssignment_0(), "rule__TomFile__OpsAssignment_0");
					put(grammarAccess.getTomFileAccess().getTermsAssignment_1(), "rule__TomFile__TermsAssignment_1");
					put(grammarAccess.getTomFileAccess().getIncAssignment_2(), "rule__TomFile__IncAssignment_2");
					put(grammarAccess.getTomFileAccess().getLocalsAssignment_3(), "rule__TomFile__LocalsAssignment_3");
					put(grammarAccess.getIncludeAccess().getPathAssignment_2(), "rule__Include__PathAssignment_2");
					put(grammarAccess.getOperationAccess().getTermAssignment_1(), "rule__Operation__TermAssignment_1");
					put(grammarAccess.getOperationAccess().getNameAssignment_2(), "rule__Operation__NameAssignment_2");
					put(grammarAccess.getOperationAccess().getArgAssignment_4_0(), "rule__Operation__ArgAssignment_4_0");
					put(grammarAccess.getOperationAccess().getArgAssignment_4_1_1(), "rule__Operation__ArgAssignment_4_1_1");
					put(grammarAccess.getOperationAccess().getFsymAssignment_9(), "rule__Operation__FsymAssignment_9");
					put(grammarAccess.getOperationAccess().getSlotAssignment_10_2(), "rule__Operation__SlotAssignment_10_2");
					put(grammarAccess.getOperationAccess().getMakeAssignment_13(), "rule__Operation__MakeAssignment_13");
					put(grammarAccess.getOperationArrayAccess().getTermAssignment_1(), "rule__OperationArray__TermAssignment_1");
					put(grammarAccess.getOperationArrayAccess().getNameAssignment_2(), "rule__OperationArray__NameAssignment_2");
					put(grammarAccess.getOperationArrayAccess().getFsymAssignment_8_0_2(), "rule__OperationArray__FsymAssignment_8_0_2");
					put(grammarAccess.getOperationArrayAccess().getSizeAssignment_8_1_2(), "rule__OperationArray__SizeAssignment_8_1_2");
					put(grammarAccess.getOperationArrayAccess().getElementAssignment_8_2_2(), "rule__OperationArray__ElementAssignment_8_2_2");
					put(grammarAccess.getOperationArrayAccess().getEmptyAssignment_8_3_2(), "rule__OperationArray__EmptyAssignment_8_3_2");
					put(grammarAccess.getOperationArrayAccess().getAppendAssignment_8_4_2(), "rule__OperationArray__AppendAssignment_8_4_2");
					put(grammarAccess.getJavaBodyAccess().getBodyAssignment(), "rule__JavaBody__BodyAssignment");
					put(grammarAccess.getARGAccess().getNameAssignment_0(), "rule__ARG__NameAssignment_0");
					put(grammarAccess.getARGAccess().getTypeAssignment_1_1(), "rule__ARG__TypeAssignment_1_1");
					put(grammarAccess.getTypeTermAccess().getNameAssignment_1(), "rule__TypeTerm__NameAssignment_1");
					put(grammarAccess.getTypeTermAccess().getImplementAssignment_4(), "rule__TypeTerm__ImplementAssignment_4");
					put(grammarAccess.getTypeTermAccess().getSortAssignment_7(), "rule__TypeTerm__SortAssignment_7");
					put(grammarAccess.getTypeTermAccess().getEqualsAssignment_14(), "rule__TypeTerm__EqualsAssignment_14");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			tom.ui.contentassist.antlr.internal.InternalTomDslParser typedParser = (tom.ui.contentassist.antlr.internal.InternalTomDslParser) parser;
			typedParser.entryRuleTomFile();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TomDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TomDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}

/*
 * generated by Xtext
 */
package tom.ui;

import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.validation.CompositeEValidator;

import com.google.inject.name.Names;

/**
 * Use this class to register components to be used within the IDE.
 */
public class TomDslUiModule extends tom.ui.AbstractTomDslUiModule {
	public TomDslUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}
	
//	public Class<? extends IHighlightingConfiguration> bindIHighlightingConfiguration() {
//
//		return MatlabHighlightingConfiguration.class;
//	}
//
//	public Class<? extends ISemanticHighlightingCalculator> bindISemanticHighlightingCalculator() {
//		return MatlabHighlightingCalculator.class;
//	}


	public void configureHighlightingLexer(com.google.inject.Binder binder) {
		binder.bind(boolean.class).annotatedWith(Names.named(CompositeEValidator.USE_EOBJECT_VALIDATOR)).toInstance(false);
		binder.bind(org.eclipse.xtext.parser.antlr.Lexer.class).annotatedWith(com.google.inject.name.Names.named(org.eclipse.xtext.ui.LexerUIBindings.HIGHLIGHTING)).to(tom.lexer.CustomTomMappingLexer.class);
	}

	// contributed by org.eclipse.xtext.generator.parser.antlr.XtextAntlrUiGeneratorFragment
	public void configureContentAssistLexerProvider(com.google.inject.Binder binder) {
		binder.bind(tom.lexer.CustomTomMappingLexer.class).toProvider(org.eclipse.xtext.parser.antlr.LexerProvider.create(tom.lexer.CustomTomMappingLexer.class));
	}

}

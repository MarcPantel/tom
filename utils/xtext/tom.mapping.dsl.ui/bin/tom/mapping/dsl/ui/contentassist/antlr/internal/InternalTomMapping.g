/*
* generated by Xtext
*/
grammar InternalTomMapping;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package tom.mapping.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package tom.mapping.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import tom.mapping.dsl.services.TomMappingGrammarAccess;

}

@parser::members {
 
 	private TomMappingGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TomMappingGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMapping
entryRuleMapping 
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMappingAccess().getGroup()); }
(rule__Mapping__Group__0)
{ after(grammarAccess.getMappingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperator
entryRuleOperator 
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
(rule__Operator__Alternatives)
{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment()); }
(rule__Import__ImportURIAssignment)
{ after(grammarAccess.getImportAccess().getImportURIAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminal
entryRuleTerminal 
:
{ before(grammarAccess.getTerminalRule()); }
	 ruleTerminal
{ after(grammarAccess.getTerminalRule()); } 
	 EOF 
;

// Rule Terminal
ruleTerminal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalAccess().getGroup()); }
(rule__Terminal__Group__0)
{ after(grammarAccess.getTerminalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAliasOperator
entryRuleAliasOperator 
:
{ before(grammarAccess.getAliasOperatorRule()); }
	 ruleAliasOperator
{ after(grammarAccess.getAliasOperatorRule()); } 
	 EOF 
;

// Rule AliasOperator
ruleAliasOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAliasOperatorAccess().getGroup()); }
(rule__AliasOperator__Group__0)
{ after(grammarAccess.getAliasOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAliasNode
entryRuleAliasNode 
:
{ before(grammarAccess.getAliasNodeRule()); }
	 ruleAliasNode
{ after(grammarAccess.getAliasNodeRule()); } 
	 EOF 
;

// Rule AliasNode
ruleAliasNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAliasNodeAccess().getAlternatives()); }
(rule__AliasNode__Alternatives)
{ after(grammarAccess.getAliasNodeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureNode
entryRuleFeatureNode 
:
{ before(grammarAccess.getFeatureNodeRule()); }
	 ruleFeatureNode
{ after(grammarAccess.getFeatureNodeRule()); } 
	 EOF 
;

// Rule FeatureNode
ruleFeatureNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureNodeAccess().getFeatureAssignment()); }
(rule__FeatureNode__FeatureAssignment)
{ after(grammarAccess.getFeatureNodeAccess().getFeatureAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperatorNode
entryRuleOperatorNode 
:
{ before(grammarAccess.getOperatorNodeRule()); }
	 ruleOperatorNode
{ after(grammarAccess.getOperatorNodeRule()); } 
	 EOF 
;

// Rule OperatorNode
ruleOperatorNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperatorNodeAccess().getGroup()); }
(rule__OperatorNode__Group__0)
{ after(grammarAccess.getOperatorNodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassOperator
entryRuleClassOperator 
:
{ before(grammarAccess.getClassOperatorRule()); }
	 ruleClassOperator
{ after(grammarAccess.getClassOperatorRule()); } 
	 EOF 
;

// Rule ClassOperator
ruleClassOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassOperatorAccess().getGroup()); }
(rule__ClassOperator__Group__0)
{ after(grammarAccess.getClassOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassOperatorWithExceptions
entryRuleClassOperatorWithExceptions 
:
{ before(grammarAccess.getClassOperatorWithExceptionsRule()); }
	 ruleClassOperatorWithExceptions
{ after(grammarAccess.getClassOperatorWithExceptionsRule()); } 
	 EOF 
;

// Rule ClassOperatorWithExceptions
ruleClassOperatorWithExceptions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getGroup()); }
(rule__ClassOperatorWithExceptions__Group__0)
{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUserOperator
entryRuleUserOperator 
:
{ before(grammarAccess.getUserOperatorRule()); }
	 ruleUserOperator
{ after(grammarAccess.getUserOperatorRule()); } 
	 EOF 
;

// Rule UserOperator
ruleUserOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUserOperatorAccess().getGroup()); }
(rule__UserOperator__Group__0)
{ after(grammarAccess.getUserOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAccessor
entryRuleAccessor 
:
{ before(grammarAccess.getAccessorRule()); }
	 ruleAccessor
{ after(grammarAccess.getAccessorRule()); } 
	 EOF 
;

// Rule Accessor
ruleAccessor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAccessorAccess().getGroup()); }
(rule__Accessor__Group__0)
{ after(grammarAccess.getAccessorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureException
entryRuleFeatureException 
:
{ before(grammarAccess.getFeatureExceptionRule()); }
	 ruleFeatureException
{ after(grammarAccess.getFeatureExceptionRule()); } 
	 EOF 
;

// Rule FeatureException
ruleFeatureException
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureExceptionAccess().getGroup()); }
(rule__FeatureException__Group__0)
{ after(grammarAccess.getFeatureExceptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureParameter
entryRuleFeatureParameter 
:
{ before(grammarAccess.getFeatureParameterRule()); }
	 ruleFeatureParameter
{ after(grammarAccess.getFeatureParameterRule()); } 
	 EOF 
;

// Rule FeatureParameter
ruleFeatureParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureParameterAccess().getAlternatives()); }
(rule__FeatureParameter__Alternatives)
{ after(grammarAccess.getFeatureParameterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSettedFeatureParameter
entryRuleSettedFeatureParameter 
:
{ before(grammarAccess.getSettedFeatureParameterRule()); }
	 ruleSettedFeatureParameter
{ after(grammarAccess.getSettedFeatureParameterRule()); } 
	 EOF 
;

// Rule SettedFeatureParameter
ruleSettedFeatureParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSettedFeatureParameterAccess().getGroup()); }
(rule__SettedFeatureParameter__Group__0)
{ after(grammarAccess.getSettedFeatureParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSettedValue
entryRuleSettedValue 
:
{ before(grammarAccess.getSettedValueRule()); }
	 ruleSettedValue
{ after(grammarAccess.getSettedValueRule()); } 
	 EOF 
;

// Rule SettedValue
ruleSettedValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSettedValueAccess().getAlternatives()); }
(rule__SettedValue__Alternatives)
{ after(grammarAccess.getSettedValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJavaCodeValue
entryRuleJavaCodeValue 
:
{ before(grammarAccess.getJavaCodeValueRule()); }
	 ruleJavaCodeValue
{ after(grammarAccess.getJavaCodeValueRule()); } 
	 EOF 
;

// Rule JavaCodeValue
ruleJavaCodeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJavaCodeValueAccess().getJavaAssignment()); }
(rule__JavaCodeValue__JavaAssignment)
{ after(grammarAccess.getJavaCodeValueAccess().getJavaAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralValue
entryRuleLiteralValue 
:
{ before(grammarAccess.getLiteralValueRule()); }
	 ruleLiteralValue
{ after(grammarAccess.getLiteralValueRule()); } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralAssignment()); }
(rule__LiteralValue__LiteralAssignment)
{ after(grammarAccess.getLiteralValueAccess().getLiteralAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Mapping__Alternatives_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getGroup_5_2_0()); }
(rule__Mapping__Group_5_2_0__0)
{ after(grammarAccess.getMappingAccess().getGroup_5_2_0()); }
)

    |(
{ before(grammarAccess.getMappingAccess().getGroup_5_2_1()); }
(rule__Mapping__Group_5_2_1__0)
{ after(grammarAccess.getMappingAccess().getGroup_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getGroup_6_0()); }
(rule__Mapping__Group_6_0__0)
{ after(grammarAccess.getMappingAccess().getGroup_6_0()); }
)

    |(
{ before(grammarAccess.getMappingAccess().getModulesAssignment_6_1()); }
(rule__Mapping__ModulesAssignment_6_1)
{ after(grammarAccess.getMappingAccess().getModulesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAccess().getClassOperatorParserRuleCall_0()); }
	ruleClassOperator
{ after(grammarAccess.getOperatorAccess().getClassOperatorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getClassOperatorWithExceptionsParserRuleCall_1()); }
	ruleClassOperatorWithExceptions
{ after(grammarAccess.getOperatorAccess().getClassOperatorWithExceptionsParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getUserOperatorParserRuleCall_2()); }
	ruleUserOperator
{ after(grammarAccess.getOperatorAccess().getUserOperatorParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getOperatorAccess().getAliasOperatorParserRuleCall_3()); }
	ruleAliasOperator
{ after(grammarAccess.getOperatorAccess().getAliasOperatorParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AliasNode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasNodeAccess().getFeatureNodeParserRuleCall_0()); }
	ruleFeatureNode
{ after(grammarAccess.getAliasNodeAccess().getFeatureNodeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAliasNodeAccess().getOperatorNodeParserRuleCall_1()); }
	ruleOperatorNode
{ after(grammarAccess.getAliasNodeAccess().getOperatorNodeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureParameter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureParameterAccess().getFeatureAssignment_0()); }
(rule__FeatureParameter__FeatureAssignment_0)
{ after(grammarAccess.getFeatureParameterAccess().getFeatureAssignment_0()); }
)

    |(
{ before(grammarAccess.getFeatureParameterAccess().getFeatureExceptionParserRuleCall_1()); }
	ruleFeatureException
{ after(grammarAccess.getFeatureParameterAccess().getFeatureExceptionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFeatureParameterAccess().getSettedFeatureParameterParserRuleCall_2()); }
	ruleSettedFeatureParameter
{ after(grammarAccess.getFeatureParameterAccess().getSettedFeatureParameterParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SettedValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettedValueAccess().getJavaCodeValueParserRuleCall_0()); }
	ruleJavaCodeValue
{ after(grammarAccess.getSettedValueAccess().getJavaCodeValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSettedValueAccess().getLiteralValueParserRuleCall_1()); }
	ruleLiteralValue
{ after(grammarAccess.getSettedValueAccess().getLiteralValueParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Mapping__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__0__Impl
	rule__Mapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getTomMappingKeyword_0()); }

	'TomMapping' 

{ after(grammarAccess.getMappingAccess().getTomMappingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__1__Impl
	rule__Mapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getNameAssignment_1()); }
(rule__Mapping__NameAssignment_1)
{ after(grammarAccess.getMappingAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__2__Impl
	rule__Mapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getMappingAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__3__Impl
	rule__Mapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getGroup_3()); }
(rule__Mapping__Group_3__0)?
{ after(grammarAccess.getMappingAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__4__Impl
	rule__Mapping__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getGroup_4()); }
(rule__Mapping__Group_4__0)*
{ after(grammarAccess.getMappingAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__5__Impl
	rule__Mapping__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getGroup_5()); }
(rule__Mapping__Group_5__0)?
{ after(grammarAccess.getMappingAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getAlternatives_6()); }
(rule__Mapping__Alternatives_6)*
{ after(grammarAccess.getMappingAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Mapping__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_3__0__Impl
	rule__Mapping__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getPrefixKeyword_3_0()); }

	'prefix' 

{ after(grammarAccess.getMappingAccess().getPrefixKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_3__1__Impl
	rule__Mapping__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getPrefixAssignment_3_1()); }
(rule__Mapping__PrefixAssignment_3_1)
{ after(grammarAccess.getMappingAccess().getPrefixAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getSemicolonKeyword_3_2()); }

	';' 

{ after(grammarAccess.getMappingAccess().getSemicolonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Mapping__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_4__0__Impl
	rule__Mapping__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getImportKeyword_4_0()); }

	'import' 

{ after(grammarAccess.getMappingAccess().getImportKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_4__1__Impl
	rule__Mapping__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getImportsAssignment_4_1()); }
(rule__Mapping__ImportsAssignment_4_1)
{ after(grammarAccess.getMappingAccess().getImportsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getSemicolonKeyword_4_2()); }

	';' 

{ after(grammarAccess.getMappingAccess().getSemicolonKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Mapping__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5__0__Impl
	rule__Mapping__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getTerminalsKeyword_5_0()); }

	'terminals' 

{ after(grammarAccess.getMappingAccess().getTerminalsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5__1__Impl
	rule__Mapping__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_5_1()); }

	'{' 

{ after(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5__2__Impl
	rule__Mapping__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getAlternatives_5_2()); }
(rule__Mapping__Alternatives_5_2)
{ after(grammarAccess.getMappingAccess().getAlternatives_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_5_3()); }

	'}' 

{ after(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Mapping__Group_5_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0__0__Impl
	rule__Mapping__Group_5_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getGroup_5_2_0_0()); }
(rule__Mapping__Group_5_2_0_0__0)?
{ after(grammarAccess.getMappingAccess().getGroup_5_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getGroup_5_2_0_1()); }
(rule__Mapping__Group_5_2_0_1__0)?
{ after(grammarAccess.getMappingAccess().getGroup_5_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mapping__Group_5_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_0__0__Impl
	rule__Mapping__Group_5_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getDefineKeyword_5_2_0_0_0()); }

	'define' 

{ after(grammarAccess.getMappingAccess().getDefineKeyword_5_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_0__1__Impl
	rule__Mapping__Group_5_2_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_5_2_0_0_1()); }

	'{' 

{ after(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_5_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_0__2__Impl
	rule__Mapping__Group_5_2_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getTerminalsAssignment_5_2_0_0_2()); }
(rule__Mapping__TerminalsAssignment_5_2_0_0_2)
{ after(grammarAccess.getMappingAccess().getTerminalsAssignment_5_2_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_0__3__Impl
	rule__Mapping__Group_5_2_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getGroup_5_2_0_0_3()); }
(rule__Mapping__Group_5_2_0_0_3__0)*
{ after(grammarAccess.getMappingAccess().getGroup_5_2_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_5_2_0_0_4()); }

	'}' 

{ after(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_5_2_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Mapping__Group_5_2_0_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_0_3__0__Impl
	rule__Mapping__Group_5_2_0_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getCommaKeyword_5_2_0_0_3_0()); }

	',' 

{ after(grammarAccess.getMappingAccess().getCommaKeyword_5_2_0_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_0_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getTerminalsAssignment_5_2_0_0_3_1()); }
(rule__Mapping__TerminalsAssignment_5_2_0_0_3_1)
{ after(grammarAccess.getMappingAccess().getTerminalsAssignment_5_2_0_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mapping__Group_5_2_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_1__0__Impl
	rule__Mapping__Group_5_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getUseKeyword_5_2_0_1_0()); }

	'use' 

{ after(grammarAccess.getMappingAccess().getUseKeyword_5_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_1__1__Impl
	rule__Mapping__Group_5_2_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_5_2_0_1_1()); }

	'{' 

{ after(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_5_2_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_1__2__Impl
	rule__Mapping__Group_5_2_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getExternalTerminalsAssignment_5_2_0_1_2()); }
(rule__Mapping__ExternalTerminalsAssignment_5_2_0_1_2)
{ after(grammarAccess.getMappingAccess().getExternalTerminalsAssignment_5_2_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_0_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_1__3__Impl
	rule__Mapping__Group_5_2_0_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getGroup_5_2_0_1_3()); }
(rule__Mapping__Group_5_2_0_1_3__0)*
{ after(grammarAccess.getMappingAccess().getGroup_5_2_0_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_0_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_5_2_0_1_4()); }

	'}' 

{ after(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_5_2_0_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Mapping__Group_5_2_0_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_1_3__0__Impl
	rule__Mapping__Group_5_2_0_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getCommaKeyword_5_2_0_1_3_0()); }

	',' 

{ after(grammarAccess.getMappingAccess().getCommaKeyword_5_2_0_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_0_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_0_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_0_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getExternalTerminalsAssignment_5_2_0_1_3_1()); }
(rule__Mapping__ExternalTerminalsAssignment_5_2_0_1_3_1)
{ after(grammarAccess.getMappingAccess().getExternalTerminalsAssignment_5_2_0_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mapping__Group_5_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_1__0__Impl
	rule__Mapping__Group_5_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getTerminalsAssignment_5_2_1_0()); }
(rule__Mapping__TerminalsAssignment_5_2_1_0)
{ after(grammarAccess.getMappingAccess().getTerminalsAssignment_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getGroup_5_2_1_1()); }
(rule__Mapping__Group_5_2_1_1__0)*
{ after(grammarAccess.getMappingAccess().getGroup_5_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mapping__Group_5_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_1_1__0__Impl
	rule__Mapping__Group_5_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getCommaKeyword_5_2_1_1_0()); }

	',' 

{ after(grammarAccess.getMappingAccess().getCommaKeyword_5_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_5_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_5_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_5_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getTerminalsAssignment_5_2_1_1_1()); }
(rule__Mapping__TerminalsAssignment_5_2_1_1_1)
{ after(grammarAccess.getMappingAccess().getTerminalsAssignment_5_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mapping__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_6_0__0__Impl
	rule__Mapping__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getOperatorsKeyword_6_0_0()); }

	'operators' 

{ after(grammarAccess.getMappingAccess().getOperatorsKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_6_0__1__Impl
	rule__Mapping__Group_6_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_6_0_1()); }

	'{' 

{ after(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_6_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_6_0__2__Impl
	rule__Mapping__Group_6_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_6_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getOperatorsAssignment_6_0_2()); }
(rule__Mapping__OperatorsAssignment_6_0_2)
{ after(grammarAccess.getMappingAccess().getOperatorsAssignment_6_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_6_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_6_0__3__Impl
	rule__Mapping__Group_6_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_6_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getGroup_6_0_3()); }
(rule__Mapping__Group_6_0_3__0)*
{ after(grammarAccess.getMappingAccess().getGroup_6_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_6_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_6_0__4__Impl
	rule__Mapping__Group_6_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_6_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getSemicolonKeyword_6_0_4()); }

	';' 

{ after(grammarAccess.getMappingAccess().getSemicolonKeyword_6_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_6_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_6_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_6_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_6_0_5()); }

	'}' 

{ after(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_6_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Mapping__Group_6_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_6_0_3__0__Impl
	rule__Mapping__Group_6_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_6_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getSemicolonKeyword_6_0_3_0()); }

	';' 

{ after(grammarAccess.getMappingAccess().getSemicolonKeyword_6_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group_6_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group_6_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group_6_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getOperatorsAssignment_6_0_3_1()); }
(rule__Mapping__OperatorsAssignment_6_0_3_1)
{ after(grammarAccess.getMappingAccess().getOperatorsAssignment_6_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleKeyword_0()); }

	'module' 

{ after(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAssignment_1()); }
(rule__Module__NameAssignment_1)
{ after(grammarAccess.getModuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_3()); }
(rule__Module__Group_3__0)?
{ after(grammarAccess.getModuleAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Module__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_3__0__Impl
	rule__Module__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getOperatorsKeyword_3_0()); }

	'operators' 

{ after(grammarAccess.getModuleAccess().getOperatorsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_3__1__Impl
	rule__Module__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_3_1()); }

	'{' 

{ after(grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_3__2__Impl
	rule__Module__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getOperatorsAssignment_3_2()); }
(rule__Module__OperatorsAssignment_3_2)
{ after(grammarAccess.getModuleAccess().getOperatorsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_3__3__Impl
	rule__Module__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_3_3()); }
(rule__Module__Group_3_3__0)*
{ after(grammarAccess.getModuleAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_3__4__Impl
	rule__Module__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getSemicolonKeyword_3_4()); }

	';' 

{ after(grammarAccess.getModuleAccess().getSemicolonKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_3_5()); }

	'}' 

{ after(grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Module__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_3_3__0__Impl
	rule__Module__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getSemicolonKeyword_3_3_0()); }

	';' 

{ after(grammarAccess.getModuleAccess().getSemicolonKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getOperatorsAssignment_3_3_1()); }
(rule__Module__OperatorsAssignment_3_3_1)
{ after(grammarAccess.getModuleAccess().getOperatorsAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Terminal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Terminal__Group__0__Impl
	rule__Terminal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalAccess().getNameAssignment_0()); }
(rule__Terminal__NameAssignment_0)
{ after(grammarAccess.getTerminalAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Terminal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Terminal__Group__1__Impl
	rule__Terminal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTerminalAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Terminal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Terminal__Group__2__Impl
	rule__Terminal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalAccess().getClassAssignment_2()); }
(rule__Terminal__ClassAssignment_2)
{ after(grammarAccess.getTerminalAccess().getClassAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Terminal__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Terminal__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalAccess().getManyAssignment_3()); }
(rule__Terminal__ManyAssignment_3)?
{ after(grammarAccess.getTerminalAccess().getManyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AliasOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperator__Group__0__Impl
	rule__AliasOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getAliasKeyword_0()); }

	'alias' 

{ after(grammarAccess.getAliasOperatorAccess().getAliasKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperator__Group__1__Impl
	rule__AliasOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getNameAssignment_1()); }
(rule__AliasOperator__NameAssignment_1)
{ after(grammarAccess.getAliasOperatorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperator__Group__2__Impl
	rule__AliasOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getColonColonKeyword_2()); }

	'::' 

{ after(grammarAccess.getAliasOperatorAccess().getColonColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperator__Group__3__Impl
	rule__AliasOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getOpAssignment_3()); }
(rule__AliasOperator__OpAssignment_3)
{ after(grammarAccess.getAliasOperatorAccess().getOpAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperator__Group__4__Impl
	rule__AliasOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getAliasOperatorAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperator__Group__5__Impl
	rule__AliasOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getNodesAssignment_5()); }
(rule__AliasOperator__NodesAssignment_5)
{ after(grammarAccess.getAliasOperatorAccess().getNodesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperator__Group__6__Impl
	rule__AliasOperator__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getGroup_6()); }
(rule__AliasOperator__Group_6__0)*
{ after(grammarAccess.getAliasOperatorAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperator__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperator__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getAliasOperatorAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__AliasOperator__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperator__Group_6__0__Impl
	rule__AliasOperator__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getAliasOperatorAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AliasOperator__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AliasOperator__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getNodesAssignment_6_1()); }
(rule__AliasOperator__NodesAssignment_6_1)
{ after(grammarAccess.getAliasOperatorAccess().getNodesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperatorNode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorNode__Group__0__Impl
	rule__OperatorNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorNode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorNodeAccess().getOpAssignment_0()); }
(rule__OperatorNode__OpAssignment_0)
{ after(grammarAccess.getOperatorNodeAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorNode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorNode__Group__1__Impl
	rule__OperatorNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorNode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorNodeAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOperatorNodeAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorNode__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorNode__Group__2__Impl
	rule__OperatorNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorNode__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorNodeAccess().getNodesAssignment_2()); }
(rule__OperatorNode__NodesAssignment_2)
{ after(grammarAccess.getOperatorNodeAccess().getNodesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorNode__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorNode__Group__3__Impl
	rule__OperatorNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorNode__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorNodeAccess().getGroup_3()); }
(rule__OperatorNode__Group_3__0)*
{ after(grammarAccess.getOperatorNodeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorNode__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorNode__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorNode__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorNodeAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getOperatorNodeAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__OperatorNode__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorNode__Group_3__0__Impl
	rule__OperatorNode__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorNode__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorNodeAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getOperatorNodeAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperatorNode__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperatorNode__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorNode__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorNodeAccess().getNodesAssignment_3_1()); }
(rule__OperatorNode__NodesAssignment_3_1)
{ after(grammarAccess.getOperatorNodeAccess().getNodesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperator__Group__0__Impl
	rule__ClassOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorAccess().getOpKeyword_0()); }

	'op' 

{ after(grammarAccess.getClassOperatorAccess().getOpKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperator__Group__1__Impl
	rule__ClassOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorAccess().getNameAssignment_1()); }
(rule__ClassOperator__NameAssignment_1)
{ after(grammarAccess.getClassOperatorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperator__Group__2__Impl
	rule__ClassOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorAccess().getColonColonKeyword_2()); }

	'::' 

{ after(grammarAccess.getClassOperatorAccess().getColonColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorAccess().getClassAssignment_3()); }
(rule__ClassOperator__ClassAssignment_3)
{ after(grammarAccess.getClassOperatorAccess().getClassAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassOperatorWithExceptions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperatorWithExceptions__Group__0__Impl
	rule__ClassOperatorWithExceptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getOpKeyword_0()); }

	'op' 

{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getOpKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOperatorWithExceptions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperatorWithExceptions__Group__1__Impl
	rule__ClassOperatorWithExceptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getNameAssignment_1()); }
(rule__ClassOperatorWithExceptions__NameAssignment_1)
{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOperatorWithExceptions__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperatorWithExceptions__Group__2__Impl
	rule__ClassOperatorWithExceptions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getColonColonKeyword_2()); }

	'::' 

{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getColonColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOperatorWithExceptions__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperatorWithExceptions__Group__3__Impl
	rule__ClassOperatorWithExceptions__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getClassAssignment_3()); }
(rule__ClassOperatorWithExceptions__ClassAssignment_3)
{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getClassAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOperatorWithExceptions__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperatorWithExceptions__Group__4__Impl
	rule__ClassOperatorWithExceptions__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOperatorWithExceptions__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperatorWithExceptions__Group__5__Impl
	rule__ClassOperatorWithExceptions__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getParametersAssignment_5()); }
(rule__ClassOperatorWithExceptions__ParametersAssignment_5)
{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getParametersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOperatorWithExceptions__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperatorWithExceptions__Group__6__Impl
	rule__ClassOperatorWithExceptions__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getGroup_6()); }
(rule__ClassOperatorWithExceptions__Group_6__0)*
{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOperatorWithExceptions__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperatorWithExceptions__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ClassOperatorWithExceptions__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperatorWithExceptions__Group_6__0__Impl
	rule__ClassOperatorWithExceptions__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassOperatorWithExceptions__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassOperatorWithExceptions__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getParametersAssignment_6_1()); }
(rule__ClassOperatorWithExceptions__ParametersAssignment_6_1)
{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getParametersAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UserOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__0__Impl
	rule__UserOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getOpKeyword_0()); }

	'op' 

{ after(grammarAccess.getUserOperatorAccess().getOpKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__1__Impl
	rule__UserOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getNameAssignment_1()); }
(rule__UserOperator__NameAssignment_1)
{ after(grammarAccess.getUserOperatorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__2__Impl
	rule__UserOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getUserOperatorAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__3__Impl
	rule__UserOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getParametersAssignment_3()); }
(rule__UserOperator__ParametersAssignment_3)
{ after(grammarAccess.getUserOperatorAccess().getParametersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__4__Impl
	rule__UserOperator__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getGroup_4()); }
(rule__UserOperator__Group_4__0)*
{ after(grammarAccess.getUserOperatorAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__5__Impl
	rule__UserOperator__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getUserOperatorAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__6__Impl
	rule__UserOperator__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getColonColonKeyword_6()); }

	'::' 

{ after(grammarAccess.getUserOperatorAccess().getColonColonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__7__Impl
	rule__UserOperator__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getTypeAssignment_7()); }
(rule__UserOperator__TypeAssignment_7)
{ after(grammarAccess.getUserOperatorAccess().getTypeAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__8__Impl
	rule__UserOperator__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getLeftCurlyBracketKeyword_8()); }

	'{' 

{ after(grammarAccess.getUserOperatorAccess().getLeftCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__9__Impl
	rule__UserOperator__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getAccessorsAssignment_9()); }
(rule__UserOperator__AccessorsAssignment_9)
{ after(grammarAccess.getUserOperatorAccess().getAccessorsAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__10__Impl
	rule__UserOperator__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getGroup_10()); }
(rule__UserOperator__Group_10__0)*
{ after(grammarAccess.getUserOperatorAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__11__Impl
	rule__UserOperator__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getSemicolonKeyword_11()); }

	';' 

{ after(grammarAccess.getUserOperatorAccess().getSemicolonKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__12__Impl
	rule__UserOperator__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getMakeKeyword_12()); }

	'make' 

{ after(grammarAccess.getUserOperatorAccess().getMakeKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__13__Impl
	rule__UserOperator__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getEqualsSignKeyword_13()); }

	'=' 

{ after(grammarAccess.getUserOperatorAccess().getEqualsSignKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__14__Impl
	rule__UserOperator__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getMakeAssignment_14()); }
(rule__UserOperator__MakeAssignment_14)
{ after(grammarAccess.getUserOperatorAccess().getMakeAssignment_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__15__Impl
	rule__UserOperator__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getSemicolonKeyword_15()); }

	';' 

{ after(grammarAccess.getUserOperatorAccess().getSemicolonKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__16__Impl
	rule__UserOperator__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getIs_fsymKeyword_16()); }

	'is_fsym' 

{ after(grammarAccess.getUserOperatorAccess().getIs_fsymKeyword_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__17
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__17__Impl
	rule__UserOperator__Group__18
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__17__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getEqualsSignKeyword_17()); }

	'=' 

{ after(grammarAccess.getUserOperatorAccess().getEqualsSignKeyword_17()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__18
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__18__Impl
	rule__UserOperator__Group__19
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__18__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getTestAssignment_18()); }
(rule__UserOperator__TestAssignment_18)
{ after(grammarAccess.getUserOperatorAccess().getTestAssignment_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__19
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__19__Impl
	rule__UserOperator__Group__20
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__19__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getSemicolonKeyword_19()); }

	';' 

{ after(grammarAccess.getUserOperatorAccess().getSemicolonKeyword_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group__20
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group__20__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group__20__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getRightCurlyBracketKeyword_20()); }

	'}' 

{ after(grammarAccess.getUserOperatorAccess().getRightCurlyBracketKeyword_20()); }
)

;
finally {
	restoreStackSize(stackSize);
}












































rule__UserOperator__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group_4__0__Impl
	rule__UserOperator__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getUserOperatorAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getParametersAssignment_4_1()); }
(rule__UserOperator__ParametersAssignment_4_1)
{ after(grammarAccess.getUserOperatorAccess().getParametersAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UserOperator__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group_10__0__Impl
	rule__UserOperator__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getSemicolonKeyword_10_0()); }

	';' 

{ after(grammarAccess.getUserOperatorAccess().getSemicolonKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UserOperator__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UserOperator__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getAccessorsAssignment_10_1()); }
(rule__UserOperator__AccessorsAssignment_10_1)
{ after(grammarAccess.getUserOperatorAccess().getAccessorsAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
(rule__Parameter__TypeAssignment_0)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
(rule__Parameter__NameAssignment_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Accessor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Accessor__Group__0__Impl
	rule__Accessor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Accessor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorAccess().getSlotKeyword_0()); }

	'slot' 

{ after(grammarAccess.getAccessorAccess().getSlotKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Accessor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Accessor__Group__1__Impl
	rule__Accessor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Accessor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorAccess().getSlotAssignment_1()); }
(rule__Accessor__SlotAssignment_1)
{ after(grammarAccess.getAccessorAccess().getSlotAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Accessor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Accessor__Group__2__Impl
	rule__Accessor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Accessor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getAccessorAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Accessor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Accessor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Accessor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorAccess().getJavaAssignment_3()); }
(rule__Accessor__JavaAssignment_3)
{ after(grammarAccess.getAccessorAccess().getJavaAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FeatureException__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureException__Group__0__Impl
	rule__FeatureException__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureException__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureExceptionAccess().getIgnoreKeyword_0()); }

	'ignore' 

{ after(grammarAccess.getFeatureExceptionAccess().getIgnoreKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureException__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureException__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureException__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureExceptionAccess().getFeatureAssignment_1()); }
(rule__FeatureException__FeatureAssignment_1)
{ after(grammarAccess.getFeatureExceptionAccess().getFeatureAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SettedFeatureParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettedFeatureParameter__Group__0__Impl
	rule__SettedFeatureParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SettedFeatureParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettedFeatureParameterAccess().getFeatureAssignment_0()); }
(rule__SettedFeatureParameter__FeatureAssignment_0)
{ after(grammarAccess.getSettedFeatureParameterAccess().getFeatureAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SettedFeatureParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettedFeatureParameter__Group__1__Impl
	rule__SettedFeatureParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SettedFeatureParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettedFeatureParameterAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getSettedFeatureParameterAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SettedFeatureParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SettedFeatureParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SettedFeatureParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettedFeatureParameterAccess().getValueAssignment_2()); }
(rule__SettedFeatureParameter__ValueAssignment_2)
{ after(grammarAccess.getSettedFeatureParameterAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Mapping__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMappingAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__PrefixAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getPrefixSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getMappingAccess().getPrefixSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__ImportsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getImportsImportParserRuleCall_4_1_0()); }
	ruleImport{ after(grammarAccess.getMappingAccess().getImportsImportParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__TerminalsAssignment_5_2_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_0_0_2_0()); }
	ruleTerminal{ after(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__TerminalsAssignment_5_2_0_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_0_0_3_1_0()); }
	ruleTerminal{ after(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_0_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__ExternalTerminalsAssignment_5_2_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getExternalTerminalsTerminalCrossReference_5_2_0_1_2_0()); }
(
{ before(grammarAccess.getMappingAccess().getExternalTerminalsTerminalIDTerminalRuleCall_5_2_0_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMappingAccess().getExternalTerminalsTerminalIDTerminalRuleCall_5_2_0_1_2_0_1()); }
)
{ after(grammarAccess.getMappingAccess().getExternalTerminalsTerminalCrossReference_5_2_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__ExternalTerminalsAssignment_5_2_0_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getExternalTerminalsTerminalCrossReference_5_2_0_1_3_1_0()); }
(
{ before(grammarAccess.getMappingAccess().getExternalTerminalsTerminalIDTerminalRuleCall_5_2_0_1_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMappingAccess().getExternalTerminalsTerminalIDTerminalRuleCall_5_2_0_1_3_1_0_1()); }
)
{ after(grammarAccess.getMappingAccess().getExternalTerminalsTerminalCrossReference_5_2_0_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__TerminalsAssignment_5_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_1_0_0()); }
	ruleTerminal{ after(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__TerminalsAssignment_5_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_1_1_1_0()); }
	ruleTerminal{ after(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__OperatorsAssignment_6_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getOperatorsOperatorParserRuleCall_6_0_2_0()); }
	ruleOperator{ after(grammarAccess.getMappingAccess().getOperatorsOperatorParserRuleCall_6_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__OperatorsAssignment_6_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getOperatorsOperatorParserRuleCall_6_0_3_1_0()); }
	ruleOperator{ after(grammarAccess.getMappingAccess().getOperatorsOperatorParserRuleCall_6_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__ModulesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getModulesModuleParserRuleCall_6_1_0()); }
	ruleModule{ after(grammarAccess.getMappingAccess().getModulesModuleParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__OperatorsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getOperatorsOperatorParserRuleCall_3_2_0()); }
	ruleOperator{ after(grammarAccess.getModuleAccess().getOperatorsOperatorParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__OperatorsAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getOperatorsOperatorParserRuleCall_3_3_1_0()); }
	ruleOperator{ after(grammarAccess.getModuleAccess().getOperatorsOperatorParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTerminalAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal__ClassAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalAccess().getClassEClassCrossReference_2_0()); }
(
{ before(grammarAccess.getTerminalAccess().getClassEClassFQNParserRuleCall_2_0_1()); }
	ruleFQN{ after(grammarAccess.getTerminalAccess().getClassEClassFQNParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTerminalAccess().getClassEClassCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Terminal__ManyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalAccess().getManyLeftSquareBracketRightSquareBracketKeyword_3_0()); }
(
{ before(grammarAccess.getTerminalAccess().getManyLeftSquareBracketRightSquareBracketKeyword_3_0()); }

	'[]' 

{ after(grammarAccess.getTerminalAccess().getManyLeftSquareBracketRightSquareBracketKeyword_3_0()); }
)

{ after(grammarAccess.getTerminalAccess().getManyLeftSquareBracketRightSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAliasOperatorAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__OpAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getOpOperatorCrossReference_3_0()); }
(
{ before(grammarAccess.getAliasOperatorAccess().getOpOperatorIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getAliasOperatorAccess().getOpOperatorIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getAliasOperatorAccess().getOpOperatorCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__NodesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getNodesAliasNodeParserRuleCall_5_0()); }
	ruleAliasNode{ after(grammarAccess.getAliasOperatorAccess().getNodesAliasNodeParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AliasOperator__NodesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasOperatorAccess().getNodesAliasNodeParserRuleCall_6_1_0()); }
	ruleAliasNode{ after(grammarAccess.getAliasOperatorAccess().getNodesAliasNodeParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureNode__FeatureAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureNodeAccess().getFeatureIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getFeatureNodeAccess().getFeatureIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorNode__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorNodeAccess().getOpOperatorCrossReference_0_0()); }
(
{ before(grammarAccess.getOperatorNodeAccess().getOpOperatorIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getOperatorNodeAccess().getOpOperatorIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getOperatorNodeAccess().getOpOperatorCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorNode__NodesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorNodeAccess().getNodesAliasNodeParserRuleCall_2_0()); }
	ruleAliasNode{ after(grammarAccess.getOperatorNodeAccess().getNodesAliasNodeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperatorNode__NodesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorNodeAccess().getNodesAliasNodeParserRuleCall_3_1_0()); }
	ruleAliasNode{ after(grammarAccess.getOperatorNodeAccess().getNodesAliasNodeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperator__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClassOperatorAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperator__ClassAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorAccess().getClassEClassCrossReference_3_0()); }
(
{ before(grammarAccess.getClassOperatorAccess().getClassEClassFQNParserRuleCall_3_0_1()); }
	ruleFQN{ after(grammarAccess.getClassOperatorAccess().getClassEClassFQNParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getClassOperatorAccess().getClassEClassCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__ClassAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getClassEClassCrossReference_3_0()); }
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getClassEClassFQNParserRuleCall_3_0_1()); }
	ruleFQN{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getClassEClassFQNParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getClassEClassCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__ParametersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getParametersFeatureParameterParserRuleCall_5_0()); }
	ruleFeatureParameter{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getParametersFeatureParameterParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassOperatorWithExceptions__ParametersAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassOperatorWithExceptionsAccess().getParametersFeatureParameterParserRuleCall_6_1_0()); }
	ruleFeatureParameter{ after(grammarAccess.getClassOperatorWithExceptionsAccess().getParametersFeatureParameterParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getUserOperatorAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__ParametersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getParametersParameterParserRuleCall_3_0()); }
	ruleParameter{ after(grammarAccess.getUserOperatorAccess().getParametersParameterParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__ParametersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getParametersParameterParserRuleCall_4_1_0()); }
	ruleParameter{ after(grammarAccess.getUserOperatorAccess().getParametersParameterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__TypeAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getTypeTerminalCrossReference_7_0()); }
(
{ before(grammarAccess.getUserOperatorAccess().getTypeTerminalIDTerminalRuleCall_7_0_1()); }
	RULE_ID{ after(grammarAccess.getUserOperatorAccess().getTypeTerminalIDTerminalRuleCall_7_0_1()); }
)
{ after(grammarAccess.getUserOperatorAccess().getTypeTerminalCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__AccessorsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getAccessorsAccessorParserRuleCall_9_0()); }
	ruleAccessor{ after(grammarAccess.getUserOperatorAccess().getAccessorsAccessorParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__AccessorsAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getAccessorsAccessorParserRuleCall_10_1_0()); }
	ruleAccessor{ after(grammarAccess.getUserOperatorAccess().getAccessorsAccessorParserRuleCall_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__MakeAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getMakeSTRINGTerminalRuleCall_14_0()); }
	RULE_STRING{ after(grammarAccess.getUserOperatorAccess().getMakeSTRINGTerminalRuleCall_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UserOperator__TestAssignment_18
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUserOperatorAccess().getTestSTRINGTerminalRuleCall_18_0()); }
	RULE_STRING{ after(grammarAccess.getUserOperatorAccess().getTestSTRINGTerminalRuleCall_18_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeTerminalCrossReference_0_0()); }
(
{ before(grammarAccess.getParameterAccess().getTypeTerminalIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getTypeTerminalIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getParameterAccess().getTypeTerminalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Accessor__SlotAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorAccess().getSlotParameterCrossReference_1_0()); }
(
{ before(grammarAccess.getAccessorAccess().getSlotParameterIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAccessorAccess().getSlotParameterIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAccessorAccess().getSlotParameterCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Accessor__JavaAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAccessorAccess().getJavaSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getAccessorAccess().getJavaSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureException__FeatureAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureExceptionAccess().getFeatureEStructuralFeatureCrossReference_1_0()); }
(
{ before(grammarAccess.getFeatureExceptionAccess().getFeatureEStructuralFeatureIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFeatureExceptionAccess().getFeatureEStructuralFeatureIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getFeatureExceptionAccess().getFeatureEStructuralFeatureCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureParameter__FeatureAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureParameterAccess().getFeatureEStructuralFeatureCrossReference_0_0()); }
(
{ before(grammarAccess.getFeatureParameterAccess().getFeatureEStructuralFeatureIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFeatureParameterAccess().getFeatureEStructuralFeatureIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFeatureParameterAccess().getFeatureEStructuralFeatureCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SettedFeatureParameter__FeatureAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettedFeatureParameterAccess().getFeatureEStructuralFeatureCrossReference_0_0()); }
(
{ before(grammarAccess.getSettedFeatureParameterAccess().getFeatureEStructuralFeatureIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSettedFeatureParameterAccess().getFeatureEStructuralFeatureIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSettedFeatureParameterAccess().getFeatureEStructuralFeatureCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SettedFeatureParameter__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettedFeatureParameterAccess().getValueSettedValueParserRuleCall_2_0()); }
	ruleSettedValue{ after(grammarAccess.getSettedFeatureParameterAccess().getValueSettedValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaCodeValue__JavaAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaCodeValueAccess().getJavaSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getJavaCodeValueAccess().getJavaSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralValue__LiteralAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralEEnumLiteralCrossReference_0()); }
(
{ before(grammarAccess.getLiteralValueAccess().getLiteralEEnumLiteralFQNParserRuleCall_0_1()); }
	ruleFQN{ after(grammarAccess.getLiteralValueAccess().getLiteralEEnumLiteralFQNParserRuleCall_0_1()); }
)
{ after(grammarAccess.getLiteralValueAccess().getLiteralEEnumLiteralCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



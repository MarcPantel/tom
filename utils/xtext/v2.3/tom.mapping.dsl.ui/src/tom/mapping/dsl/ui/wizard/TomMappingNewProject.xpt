«IMPORT tom::mapping::dsl::ui::wizard»
«EXTENSION  tom::mapping::dsl::ui::wizard::Tools»

«DEFINE main FOR TomMappingProjectInfo»
«EXPAND model FOR this»
«EXPAND generator FOR this»
«EXPAND manifest FOR this»
«EXPAND tomFile FOR this»
«EXPAND project FOR this»
«ENDDEFINE»

«DEFINE model FOR TomMappingProjectInfo»
«FILE "src/mappings/Model.tmap"-»
TomMapping MyMapping;

import "NetOfPetri.ecore";
«ENDFILE»

«FILE "src/NetOfPetri.ecore"-»

«ENDFILE»

«ENDDEFINE»

«DEFINE manifest FOR TomMappingProjectInfo»
«FILE "META-INF/MANIFEST.MF"-»Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: «projectName»
Bundle-Vendor: Loria
Bundle-Version: 1.0.0
Bundle-SymbolicName: «projectName»; singleton:=true
Bundle-ActivationPolicy: lazy
Require-Bundle: com.ibm.icu,
 org.eclipse.xtext,
 org.eclipse.xtext.generator,
 org.eclipse.xtend,
 org.eclipse.xtend.typesystem.emf,
 org.eclipse.xpand,
 de.itemis.xtext.antlr;resolution:=optional,
 org.eclipse.emf.mwe2.launch;resolution:=optional,
 org.eclipse.jface.text;bundle-version="3.6.0",
 org.eclipse.jdt.core;bundle-version="3.6.0",
 tom.mapping.model;bundle-version="1.0.0",
 org.eclipse.xtext.ecore;bundle-version="1.0.0",
 org.eclipse.core.runtime;bundle-version="3.6.0"
Import-Package: org.apache.log4j,
 org.apache.commons.logging,
 tom.mapping.dsl.generator
Bundle-RequiredExecutionEnvironment: J2SE-1.5
«ENDFILE»
«ENDDEFINE»

«DEFINE generator FOR TomMappingProjectInfo»
«FILE "src/"+path(projectName)+"/generator/MappingGenerator.java"»
package «projectName».generator;

import tom.mapping.dsl.generator.TomMappingGenerator;

public class MappingGenerator {
	private final static String MODEL_PATH = "src/mappings/";
	private final static String TOM_PATH = "src-tom/";
	private final static String JAVA_PACKAGE = "internal/";
	private final static String JAVA_PATH = "src-gen/«path(projectName)»/";
	private final static String ENCODING = "UTF-8";

	public static void main(String[] args) {
		MappingGenerator.generate();
	}
	
	public static void generate() {
		TomMappingGenerator.generate(MODEL_PATH, JAVA_PATH, JAVA_PACKAGE,
				TOM_PATH, ENCODING);
	}
}
«ENDFILE»
«ENDDEFINE»

«DEFINE project FOR TomMappingProjectInfo»
«FILE ".project"-»<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
	<name>«projectName»</name>
	<comment></comment>
	<projects>
	</projects>
	<buildSpec>
		<buildCommand>
			<name>fr.loria.eclipse.tom.GomBuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>fr.loria.eclipse.tom.TomBuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>fr.loria.eclipse.tom.TomBuildAnalyser</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.pde.ManifestBuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.pde.SchemaBuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.xtext.ui.shared.xtextBuilder</name>
			<arguments>
			</arguments>
		</buildCommand>
	</buildSpec>
	<natures>
		<nature>org.eclipse.jdt.core.javanature</nature>
		<nature>org.eclipse.pde.PluginNature</nature>
		<nature>org.eclipse.xtext.ui.shared.xtextNature</nature>
	</natures>
</projectDescription>«ENDFILE»
«ENDDEFINE»

«DEFINE tomFile FOR TomMappingProjectInfo»
«FILE "src/"+path(projectName)+"/tom/sources/Example.t"»
package «projectName».tom;

public class Example {

}
«ENDFILE»
«ENDDEFINE»
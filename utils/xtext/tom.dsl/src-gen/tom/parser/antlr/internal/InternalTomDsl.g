/*
* generated by Xtext
*/
grammar InternalTomDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package tom.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package tom.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import tom.services.TomDslGrammarAccess;

}

@parser::members {

 	private TomDslGrammarAccess grammarAccess;
 	
    public InternalTomDslParser(TokenStream input, TomDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "TomFile";	
   	}
   	
   	@Override
   	protected TomDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTomFile
entryRuleTomFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTomFileRule()); }
	 iv_ruleTomFile=ruleTomFile 
	 { $current=$iv_ruleTomFile.current; } 
	 EOF 
;

// Rule TomFile
ruleTomFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTomFileAccess().getOpsArrayOperationParserRuleCall_0_0()); 
	    }
		lv_ops_0_0=ruleArrayOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTomFileRule());
	        }
       		add(
       			$current, 
       			"ops",
        		lv_ops_0_0, 
        		"ArrayOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTomFileAccess().getTermsTypeTermParserRuleCall_1_0()); 
	    }
		lv_terms_1_0=ruleTypeTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTomFileRule());
	        }
       		add(
       			$current, 
       			"terms",
        		lv_terms_1_0, 
        		"TypeTerm");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTomFileAccess().getIncIncludeParserRuleCall_2_0()); 
	    }
		lv_inc_2_0=ruleInclude		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTomFileRule());
	        }
       		add(
       			$current, 
       			"inc",
        		lv_inc_2_0, 
        		"Include");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTomFileAccess().getLocalsLocalParserRuleCall_3_0()); 
	    }
		lv_locals_3_0=ruleLocal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTomFileRule());
	        }
       		set(
       			$current, 
       			"locals",
        		lv_locals_3_0, 
        		"Local");
	        afterParserOrEnumRuleCall();
	    }

)
))*
;





// Entry rule entryRuleArrayOperation
entryRuleArrayOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayOperationRule()); }
	 iv_ruleArrayOperation=ruleArrayOperation 
	 { $current=$iv_ruleArrayOperation.current; } 
	 EOF 
;

// Rule ArrayOperation
ruleArrayOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getArrayOperationAccess().getOperationParserRuleCall_0()); 
    }
    this_Operation_0=ruleOperation
    { 
        $current = $this_Operation_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getArrayOperationAccess().getOperationArrayParserRuleCall_1()); 
    }
    this_OperationArray_1=ruleOperationArray
    { 
        $current = $this_OperationArray_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInclude
entryRuleInclude returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIncludeRule()); }
	 iv_ruleInclude=ruleInclude 
	 { $current=$iv_ruleInclude.current; } 
	 EOF 
;

// Rule Include
ruleInclude returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIncludeAccess().getIncludeKeyword_0());
    }
this_FIRST_LEVEL_LBRACKET_1=RULE_FIRST_LEVEL_LBRACKET
    { 
    newLeafNode(this_FIRST_LEVEL_LBRACKET_1, grammarAccess.getIncludeAccess().getFIRST_LEVEL_LBRACKETTerminalRuleCall_1()); 
    }
(
(
(
		lv_path_2_1=RULE_ID
		{
			newLeafNode(lv_path_2_1, grammarAccess.getIncludeAccess().getPathIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"path",
        		lv_path_2_1, 
        		"ID");
	    }

    |		lv_path_2_2=	'/' 
    {
        newLeafNode(lv_path_2_2, grammarAccess.getIncludeAccess().getPathSolidusKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeRule());
	        }
       		addWithLastConsumed($current, "path", lv_path_2_2, null);
	    }

    |		lv_path_2_3=	'.' 
    {
        newLeafNode(lv_path_2_3, grammarAccess.getIncludeAccess().getPathFullStopKeyword_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeRule());
	        }
       		addWithLastConsumed($current, "path", lv_path_2_3, null);
	    }

)

)
)+this_FIRST_LEVEL_RBRACKET_3=RULE_FIRST_LEVEL_RBRACKET
    { 
    newLeafNode(this_FIRST_LEVEL_RBRACKET_3, grammarAccess.getIncludeAccess().getFIRST_LEVEL_RBRACKETTerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleLocal
entryRuleLocal returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalRule()); } 
	 iv_ruleLocal=ruleLocal 
	 { $current=$iv_ruleLocal.current.getText(); }  
	 EOF 
;

// Rule Local
ruleLocal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_JAVAMETHOD_0=RULE_JAVAMETHOD    {
		$current.merge(this_JAVAMETHOD_0);
    }

    { 
    newLeafNode(this_JAVAMETHOD_0, grammarAccess.getLocalAccess().getJAVAMETHODTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	 iv_ruleOperation=ruleOperation 
	 { $current=$iv_ruleOperation.current; } 
	 EOF 
;

// Rule Operation
ruleOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%op' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOperationAccess().getOpKeyword_0());
    }
(
(
		lv_term_1_0=RULE_ID
		{
			newLeafNode(lv_term_1_0, grammarAccess.getOperationAccess().getTermIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"term",
        		lv_term_1_0, 
        		"ID");
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOperationAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getArgARGParserRuleCall_4_0_0()); 
	    }
		lv_arg_4_0=ruleARG		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"arg",
        		lv_arg_4_0, 
        		"ARG");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOperationAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getArgARGParserRuleCall_4_1_1_0()); 
	    }
		lv_arg_6_0=ruleARG		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"arg",
        		lv_arg_6_0, 
        		"ARG");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOperationAccess().getRightParenthesisKeyword_5());
    }
this_FIRST_LEVEL_LBRACKET_8=RULE_FIRST_LEVEL_LBRACKET
    { 
    newLeafNode(this_FIRST_LEVEL_LBRACKET_8, grammarAccess.getOperationAccess().getFIRST_LEVEL_LBRACKETTerminalRuleCall_6()); 
    }
	otherlv_9='is_fsym' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOperationAccess().getIs_fsymKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getOperationAccess().getParIDParserRuleCall_8()); 
    }
ruleParID
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getFsymJavaBodyParserRuleCall_9_0()); 
	    }
		lv_fsym_11_0=ruleJavaBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"fsym",
        		lv_fsym_11_0, 
        		"JavaBody");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12='get_slot' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getOperationAccess().getGet_slotKeyword_10_0());
    }

    { 
        newCompositeNode(grammarAccess.getOperationAccess().getParIDListParserRuleCall_10_1()); 
    }
ruleParIDList
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getSlotJavaBodyParserRuleCall_10_2_0()); 
	    }
		lv_slot_14_0=ruleJavaBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		add(
       			$current, 
       			"slot",
        		lv_slot_14_0, 
        		"JavaBody");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='make' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getOperationAccess().getMakeKeyword_11());
    }

    { 
        newCompositeNode(grammarAccess.getOperationAccess().getParIDListParserRuleCall_12()); 
    }
ruleParIDList
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationAccess().getMakeJavaBodyParserRuleCall_13_0()); 
	    }
		lv_make_17_0=ruleJavaBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationRule());
	        }
       		set(
       			$current, 
       			"make",
        		lv_make_17_0, 
        		"JavaBody");
	        afterParserOrEnumRuleCall();
	    }

)
)this_FIRST_LEVEL_RBRACKET_18=RULE_FIRST_LEVEL_RBRACKET
    { 
    newLeafNode(this_FIRST_LEVEL_RBRACKET_18, grammarAccess.getOperationAccess().getFIRST_LEVEL_RBRACKETTerminalRuleCall_14()); 
    }
)
;





// Entry rule entryRuleOperationArray
entryRuleOperationArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationArrayRule()); }
	 iv_ruleOperationArray=ruleOperationArray 
	 { $current=$iv_ruleOperationArray.current; } 
	 EOF 
;

// Rule OperationArray
ruleOperationArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%oparray' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOperationArrayAccess().getOparrayKeyword_0());
    }
(
(
		lv_term_1_0=RULE_ID
		{
			newLeafNode(lv_term_1_0, grammarAccess.getOperationArrayAccess().getTermIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationArrayRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"term",
        		lv_term_1_0, 
        		"ID");
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getOperationArrayAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationArrayRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOperationArrayAccess().getLeftParenthesisKeyword_3());
    }
this_ID_4=RULE_ID
    { 
    newLeafNode(this_ID_4, grammarAccess.getOperationArrayAccess().getIDTerminalRuleCall_4()); 
    }
	otherlv_5='*' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOperationArrayAccess().getAsteriskKeyword_5());
    }
	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOperationArrayAccess().getRightParenthesisKeyword_6());
    }
this_FIRST_LEVEL_LBRACKET_7=RULE_FIRST_LEVEL_LBRACKET
    { 
    newLeafNode(this_FIRST_LEVEL_LBRACKET_7, grammarAccess.getOperationArrayAccess().getFIRST_LEVEL_LBRACKETTerminalRuleCall_7()); 
    }
((	otherlv_8='is_fsym' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getOperationArrayAccess().getIs_fsymKeyword_8_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getOperationArrayAccess().getParIDParserRuleCall_8_0_1()); 
    }
ruleParID
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationArrayAccess().getFsymJavaBodyParserRuleCall_8_0_2_0()); 
	    }
		lv_fsym_10_0=ruleJavaBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationArrayRule());
	        }
       		set(
       			$current, 
       			"fsym",
        		lv_fsym_10_0, 
        		"JavaBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_11='get_size' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getOperationArrayAccess().getGet_sizeKeyword_8_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getOperationArrayAccess().getParIDParserRuleCall_8_1_1()); 
    }
ruleParID
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationArrayAccess().getSizeJavaBodyParserRuleCall_8_1_2_0()); 
	    }
		lv_size_13_0=ruleJavaBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationArrayRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_13_0, 
        		"JavaBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_14='get_element' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getOperationArrayAccess().getGet_elementKeyword_8_2_0());
    }

    { 
        newCompositeNode(grammarAccess.getOperationArrayAccess().getParIDListParserRuleCall_8_2_1()); 
    }
ruleParIDList
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationArrayAccess().getElementJavaBodyParserRuleCall_8_2_2_0()); 
	    }
		lv_element_16_0=ruleJavaBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationArrayRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_16_0, 
        		"JavaBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_17='make_empty' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getOperationArrayAccess().getMake_emptyKeyword_8_3_0());
    }

    { 
        newCompositeNode(grammarAccess.getOperationArrayAccess().getParIDParserRuleCall_8_3_1()); 
    }
ruleParID
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationArrayAccess().getEmptyJavaBodyParserRuleCall_8_3_2_0()); 
	    }
		lv_empty_19_0=ruleJavaBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationArrayRule());
	        }
       		set(
       			$current, 
       			"empty",
        		lv_empty_19_0, 
        		"JavaBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_20='make_append' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getOperationArrayAccess().getMake_appendKeyword_8_4_0());
    }

    { 
        newCompositeNode(grammarAccess.getOperationArrayAccess().getParIDListParserRuleCall_8_4_1()); 
    }
ruleParIDList
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationArrayAccess().getAppendJavaBodyParserRuleCall_8_4_2_0()); 
	    }
		lv_append_22_0=ruleJavaBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationArrayRule());
	        }
       		set(
       			$current, 
       			"append",
        		lv_append_22_0, 
        		"JavaBody");
	        afterParserOrEnumRuleCall();
	    }

)
)))+this_FIRST_LEVEL_RBRACKET_23=RULE_FIRST_LEVEL_RBRACKET
    { 
    newLeafNode(this_FIRST_LEVEL_RBRACKET_23, grammarAccess.getOperationArrayAccess().getFIRST_LEVEL_RBRACKETTerminalRuleCall_9()); 
    }
)
;





// Entry rule entryRuleJavaBody
entryRuleJavaBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJavaBodyRule()); }
	 iv_ruleJavaBody=ruleJavaBody 
	 { $current=$iv_ruleJavaBody.current; } 
	 EOF 
;

// Rule JavaBody
ruleJavaBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_body_0_0=RULE_BRCKTSTMT
		{
			newLeafNode(lv_body_0_0, grammarAccess.getJavaBodyAccess().getBodyBRCKTSTMTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJavaBodyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"body",
        		lv_body_0_0, 
        		"BRCKTSTMT");
	    }

)
)
;





// Entry rule entryRuleParID
entryRuleParID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getParIDRule()); } 
	 iv_ruleParID=ruleParID 
	 { $current=$iv_ruleParID.current.getText(); }  
	 EOF 
;

// Rule ParID
ruleParID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='(' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParIDAccess().getLeftParenthesisKeyword_0()); 
    }
(    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getParIDAccess().getIDTerminalRuleCall_1()); 
    }
)?
	kw=')' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParIDAccess().getRightParenthesisKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleParIDList
entryRuleParIDList returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getParIDListRule()); } 
	 iv_ruleParIDList=ruleParIDList 
	 { $current=$iv_ruleParIDList.current.getText(); }  
	 EOF 
;

// Rule ParIDList
ruleParIDList returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='(' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParIDListAccess().getLeftParenthesisKeyword_0()); 
    }
(    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getParIDListAccess().getIDTerminalRuleCall_1_0()); 
    }
(
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParIDListAccess().getCommaKeyword_1_1_0()); 
    }
    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    newLeafNode(this_ID_3, grammarAccess.getParIDListAccess().getIDTerminalRuleCall_1_1_1()); 
    }
)*)?
	kw=')' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParIDListAccess().getRightParenthesisKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleARG
entryRuleARG returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getARGRule()); }
	 iv_ruleARG=ruleARG 
	 { $current=$iv_ruleARG.current; } 
	 EOF 
;

// Rule ARG
ruleARG returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getARGAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARGRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getARGAccess().getColonKeyword_1_0());
    }
(
(
		lv_type_2_0=RULE_ID
		{
			newLeafNode(lv_type_2_0, grammarAccess.getARGAccess().getTypeIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getARGRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"ID");
	    }

)
))?)
;





// Entry rule entryRuleTypeTerm
entryRuleTypeTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeTermRule()); }
	 iv_ruleTypeTerm=ruleTypeTerm 
	 { $current=$iv_ruleTypeTerm.current; } 
	 EOF 
;

// Rule TypeTerm
ruleTypeTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='%typeterm' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeTermAccess().getTypetermKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTypeTermAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)this_FIRST_LEVEL_LBRACKET_2=RULE_FIRST_LEVEL_LBRACKET
    { 
    newLeafNode(this_FIRST_LEVEL_LBRACKET_2, grammarAccess.getTypeTermAccess().getFIRST_LEVEL_LBRACKETTerminalRuleCall_2()); 
    }
	otherlv_3='implement' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTypeTermAccess().getImplementKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeTermAccess().getImplementJavaBodyParserRuleCall_4_0()); 
	    }
		lv_implement_4_0=ruleJavaBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeTermRule());
	        }
       		set(
       			$current, 
       			"implement",
        		lv_implement_4_0, 
        		"JavaBody");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='is_sort' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTypeTermAccess().getIs_sortKeyword_5());
    }

    { 
        newCompositeNode(grammarAccess.getTypeTermAccess().getParIDParserRuleCall_6()); 
    }
ruleParID
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeTermAccess().getSortJavaBodyParserRuleCall_7_0()); 
	    }
		lv_sort_7_0=ruleJavaBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeTermRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_7_0, 
        		"JavaBody");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='equals' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTypeTermAccess().getEqualsKeyword_8());
    }
	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTypeTermAccess().getLeftParenthesisKeyword_9());
    }
this_ID_10=RULE_ID
    { 
    newLeafNode(this_ID_10, grammarAccess.getTypeTermAccess().getIDTerminalRuleCall_10()); 
    }
	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTypeTermAccess().getCommaKeyword_11());
    }
this_ID_12=RULE_ID
    { 
    newLeafNode(this_ID_12, grammarAccess.getTypeTermAccess().getIDTerminalRuleCall_12()); 
    }
	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTypeTermAccess().getRightParenthesisKeyword_13());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeTermAccess().getEqualsJavaBodyParserRuleCall_14_0()); 
	    }
		lv_equals_14_0=ruleJavaBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeTermRule());
	        }
       		set(
       			$current, 
       			"equals",
        		lv_equals_14_0, 
        		"JavaBody");
	        afterParserOrEnumRuleCall();
	    }

)
)this_FIRST_LEVEL_RBRACKET_15=RULE_FIRST_LEVEL_RBRACKET
    { 
    newLeafNode(this_FIRST_LEVEL_RBRACKET_15, grammarAccess.getTypeTermAccess().getFIRST_LEVEL_RBRACKETTerminalRuleCall_15()); 
    }
)
;





RULE_FIRST_LEVEL_LBRACKET : '{';

RULE_FIRST_LEVEL_RBRACKET : '}';

RULE_BRCKTSTMT : '{' ( options {greedy=false;} : . )*'}';

RULE_JAVAMETHOD : 'private' ( options {greedy=false;} : . )*'(' ( options {greedy=false;} : . )*')' ( options {greedy=false;} : . )*'{' ( options {greedy=false;} : . )*'}';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



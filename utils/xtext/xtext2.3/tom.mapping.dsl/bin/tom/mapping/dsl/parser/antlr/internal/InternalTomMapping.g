/*
* generated by Xtext
*/
grammar InternalTomMapping;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package tom.mapping.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package tom.mapping.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import tom.mapping.dsl.services.TomMappingGrammarAccess;

}

@parser::members {

 	private TomMappingGrammarAccess grammarAccess;
 	
    public InternalTomMappingParser(TokenStream input, TomMappingGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Mapping";	
   	}
   	
   	@Override
   	protected TomMappingGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleMapping
entryRuleMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMappingRule()); }
	 iv_ruleMapping=ruleMapping 
	 { $current=$iv_ruleMapping.current; } 
	 EOF 
;

// Rule Mapping
ruleMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TomMapping' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMappingAccess().getTomMappingKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMappingAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMappingAccess().getSemicolonKeyword_2());
    }
(	otherlv_3='prefix' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMappingAccess().getPrefixKeyword_3_0());
    }
(
(
		lv_prefix_4_0=RULE_STRING
		{
			newLeafNode(lv_prefix_4_0, grammarAccess.getMappingAccess().getPrefixSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"prefix",
        		lv_prefix_4_0, 
        		"STRING");
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMappingAccess().getSemicolonKeyword_3_2());
    }
)?(	otherlv_6='import' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMappingAccess().getImportKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getImportsImportParserRuleCall_4_1_0()); 
	    }
		lv_imports_7_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_7_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMappingAccess().getSemicolonKeyword_4_2());
    }
)*(	otherlv_9='terminals' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMappingAccess().getTerminalsKeyword_5_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_5_1());
    }
(((	otherlv_11='define' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMappingAccess().getDefineKeyword_5_2_0_0_0());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_5_2_0_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_0_0_2_0()); 
	    }
		lv_terminals_13_0=ruleTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"terminals",
        		lv_terminals_13_0, 
        		"Terminal");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMappingAccess().getCommaKeyword_5_2_0_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_0_0_3_1_0()); 
	    }
		lv_terminals_15_0=ruleTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"terminals",
        		lv_terminals_15_0, 
        		"Terminal");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_5_2_0_0_4());
    }
)?(	otherlv_17='use' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getMappingAccess().getUseKeyword_5_2_0_1_0());
    }
	otherlv_18='{' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_5_2_0_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRule());
	        }
        }
	otherlv_19=RULE_ID
	{
		newLeafNode(otherlv_19, grammarAccess.getMappingAccess().getExternalTerminalsTerminalCrossReference_5_2_0_1_2_0()); 
	}

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getMappingAccess().getCommaKeyword_5_2_0_1_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMappingRule());
	        }
        }
	otherlv_21=RULE_ID
	{
		newLeafNode(otherlv_21, grammarAccess.getMappingAccess().getExternalTerminalsTerminalCrossReference_5_2_0_1_3_1_0()); 
	}

)
))*	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_5_2_0_1_4());
    }
)?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_1_0_0()); 
	    }
		lv_terminals_23_0=ruleTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"terminals",
        		lv_terminals_23_0, 
        		"Terminal");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_24=',' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getMappingAccess().getCommaKeyword_5_2_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getTerminalsTerminalParserRuleCall_5_2_1_1_1_0()); 
	    }
		lv_terminals_25_0=ruleTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"terminals",
        		lv_terminals_25_0, 
        		"Terminal");
	        afterParserOrEnumRuleCall();
	    }

)
))*))	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_5_3());
    }
)?((	otherlv_27='operators' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getMappingAccess().getOperatorsKeyword_6_0_0());
    }
	otherlv_28='{' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_6_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getOperatorsOperatorParserRuleCall_6_0_2_0()); 
	    }
		lv_operators_29_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"operators",
        		lv_operators_29_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_30=';' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getMappingAccess().getSemicolonKeyword_6_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getOperatorsOperatorParserRuleCall_6_0_3_1_0()); 
	    }
		lv_operators_31_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"operators",
        		lv_operators_31_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_32=';' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getMappingAccess().getSemicolonKeyword_6_0_4());
    }
	otherlv_33='}' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_6_0_5());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMappingAccess().getModulesModuleParserRuleCall_6_1_0()); 
	    }
		lv_modules_34_0=ruleModule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMappingRule());
	        }
       		add(
       			$current, 
       			"modules",
        		lv_modules_34_0, 
        		"Module");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	 iv_ruleModule=ruleModule 
	 { $current=$iv_ruleModule.current; } 
	 EOF 
;

// Rule Module
ruleModule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModuleAccess().getModuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='operators' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getOperatorsKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleAccess().getOperatorsOperatorParserRuleCall_3_2_0()); 
	    }
		lv_operators_5_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleRule());
	        }
       		add(
       			$current, 
       			"operators",
        		lv_operators_5_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModuleAccess().getSemicolonKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleAccess().getOperatorsOperatorParserRuleCall_3_3_1_0()); 
	    }
		lv_operators_7_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleRule());
	        }
       		add(
       			$current, 
       			"operators",
        		lv_operators_7_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getModuleAccess().getSemicolonKeyword_3_4());
    }
	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_3_5());
    }
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleOperator
entryRuleOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorRule()); }
	 iv_ruleOperator=ruleOperator 
	 { $current=$iv_ruleOperator.current; } 
	 EOF 
;

// Rule Operator
ruleOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getClassOperatorParserRuleCall_0()); 
    }
    this_ClassOperator_0=ruleClassOperator
    { 
        $current = $this_ClassOperator_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getClassOperatorWithExceptionsParserRuleCall_1()); 
    }
    this_ClassOperatorWithExceptions_1=ruleClassOperatorWithExceptions
    { 
        $current = $this_ClassOperatorWithExceptions_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getUserOperatorParserRuleCall_2()); 
    }
    this_UserOperator_2=ruleUserOperator
    { 
        $current = $this_UserOperator_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getAliasOperatorParserRuleCall_3()); 
    }
    this_AliasOperator_3=ruleAliasOperator
    { 
        $current = $this_AliasOperator_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_importURI_0_0=RULE_STRING
		{
			newLeafNode(lv_importURI_0_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleTerminal
entryRuleTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTerminalRule()); }
	 iv_ruleTerminal=ruleTerminal 
	 { $current=$iv_ruleTerminal.current; } 
	 EOF 
;

// Rule Terminal
ruleTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTerminalAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTerminalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTerminalAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTerminalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTerminalAccess().getClassEClassCrossReference_2_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_many_3_0=	'[]' 
    {
        newLeafNode(lv_many_3_0, grammarAccess.getTerminalAccess().getManyLeftSquareBracketRightSquareBracketKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTerminalRule());
	        }
       		setWithLastConsumed($current, "many", true, "[]");
	    }

)
)?)
;





// Entry rule entryRuleAliasOperator
entryRuleAliasOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAliasOperatorRule()); }
	 iv_ruleAliasOperator=ruleAliasOperator 
	 { $current=$iv_ruleAliasOperator.current; } 
	 EOF 
;

// Rule AliasOperator
ruleAliasOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='alias' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAliasOperatorAccess().getAliasKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAliasOperatorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAliasOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='::' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAliasOperatorAccess().getColonColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAliasOperatorRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getAliasOperatorAccess().getOpOperatorCrossReference_3_0()); 
	}

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAliasOperatorAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAliasOperatorAccess().getNodesAliasNodeParserRuleCall_5_0()); 
	    }
		lv_nodes_5_0=ruleAliasNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasOperatorRule());
	        }
       		add(
       			$current, 
       			"nodes",
        		lv_nodes_5_0, 
        		"AliasNode");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAliasOperatorAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAliasOperatorAccess().getNodesAliasNodeParserRuleCall_6_1_0()); 
	    }
		lv_nodes_7_0=ruleAliasNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasOperatorRule());
	        }
       		add(
       			$current, 
       			"nodes",
        		lv_nodes_7_0, 
        		"AliasNode");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAliasOperatorAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleAliasNode
entryRuleAliasNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAliasNodeRule()); }
	 iv_ruleAliasNode=ruleAliasNode 
	 { $current=$iv_ruleAliasNode.current; } 
	 EOF 
;

// Rule AliasNode
ruleAliasNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAliasNodeAccess().getFeatureNodeParserRuleCall_0()); 
    }
    this_FeatureNode_0=ruleFeatureNode
    { 
        $current = $this_FeatureNode_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAliasNodeAccess().getOperatorNodeParserRuleCall_1()); 
    }
    this_OperatorNode_1=ruleOperatorNode
    { 
        $current = $this_OperatorNode_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFeatureNode
entryRuleFeatureNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureNodeRule()); }
	 iv_ruleFeatureNode=ruleFeatureNode 
	 { $current=$iv_ruleFeatureNode.current; } 
	 EOF 
;

// Rule FeatureNode
ruleFeatureNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_feature_0_0=RULE_ID
		{
			newLeafNode(lv_feature_0_0, grammarAccess.getFeatureNodeAccess().getFeatureIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureNodeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature",
        		lv_feature_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleOperatorNode
entryRuleOperatorNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorNodeRule()); }
	 iv_ruleOperatorNode=ruleOperatorNode 
	 { $current=$iv_ruleOperatorNode.current; } 
	 EOF 
;

// Rule OperatorNode
ruleOperatorNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatorNodeRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getOperatorNodeAccess().getOpOperatorCrossReference_0_0()); 
	}

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperatorNodeAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperatorNodeAccess().getNodesAliasNodeParserRuleCall_2_0()); 
	    }
		lv_nodes_2_0=ruleAliasNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperatorNodeRule());
	        }
       		add(
       			$current, 
       			"nodes",
        		lv_nodes_2_0, 
        		"AliasNode");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOperatorNodeAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperatorNodeAccess().getNodesAliasNodeParserRuleCall_3_1_0()); 
	    }
		lv_nodes_4_0=ruleAliasNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperatorNodeRule());
	        }
       		add(
       			$current, 
       			"nodes",
        		lv_nodes_4_0, 
        		"AliasNode");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOperatorNodeAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleClassOperator
entryRuleClassOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassOperatorRule()); }
	 iv_ruleClassOperator=ruleClassOperator 
	 { $current=$iv_ruleClassOperator.current; } 
	 EOF 
;

// Rule ClassOperator
ruleClassOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='op' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassOperatorAccess().getOpKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClassOperatorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='::' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClassOperatorAccess().getColonColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassOperatorRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClassOperatorAccess().getClassEClassCrossReference_3_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClassOperatorWithExceptions
entryRuleClassOperatorWithExceptions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassOperatorWithExceptionsRule()); }
	 iv_ruleClassOperatorWithExceptions=ruleClassOperatorWithExceptions 
	 { $current=$iv_ruleClassOperatorWithExceptions.current; } 
	 EOF 
;

// Rule ClassOperatorWithExceptions
ruleClassOperatorWithExceptions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='op' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassOperatorWithExceptionsAccess().getOpKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClassOperatorWithExceptionsAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassOperatorWithExceptionsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='::' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClassOperatorWithExceptionsAccess().getColonColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassOperatorWithExceptionsRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getClassOperatorWithExceptionsAccess().getClassEClassCrossReference_3_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClassOperatorWithExceptionsAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassOperatorWithExceptionsAccess().getParametersFeatureParameterParserRuleCall_5_0()); 
	    }
		lv_parameters_5_0=ruleFeatureParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassOperatorWithExceptionsRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"FeatureParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getClassOperatorWithExceptionsAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassOperatorWithExceptionsAccess().getParametersFeatureParameterParserRuleCall_6_1_0()); 
	    }
		lv_parameters_7_0=ruleFeatureParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassOperatorWithExceptionsRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_7_0, 
        		"FeatureParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getClassOperatorWithExceptionsAccess().getRightParenthesisKeyword_7());
    }
)
;





// Entry rule entryRuleUserOperator
entryRuleUserOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserOperatorRule()); }
	 iv_ruleUserOperator=ruleUserOperator 
	 { $current=$iv_ruleUserOperator.current; } 
	 EOF 
;

// Rule UserOperator
ruleUserOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='op' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUserOperatorAccess().getOpKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getUserOperatorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUserOperatorAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserOperatorAccess().getParametersParameterParserRuleCall_3_0()); 
	    }
		lv_parameters_3_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserOperatorRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUserOperatorAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserOperatorAccess().getParametersParameterParserRuleCall_4_1_0()); 
	    }
		lv_parameters_5_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserOperatorRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUserOperatorAccess().getRightParenthesisKeyword_5());
    }
	otherlv_7='::' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUserOperatorAccess().getColonColonKeyword_6());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserOperatorRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getUserOperatorAccess().getTypeTerminalCrossReference_7_0()); 
	}

)
)	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getUserOperatorAccess().getLeftCurlyBracketKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserOperatorAccess().getAccessorsAccessorParserRuleCall_9_0()); 
	    }
		lv_accessors_10_0=ruleAccessor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserOperatorRule());
	        }
       		add(
       			$current, 
       			"accessors",
        		lv_accessors_10_0, 
        		"Accessor");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getUserOperatorAccess().getSemicolonKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserOperatorAccess().getAccessorsAccessorParserRuleCall_10_1_0()); 
	    }
		lv_accessors_12_0=ruleAccessor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserOperatorRule());
	        }
       		add(
       			$current, 
       			"accessors",
        		lv_accessors_12_0, 
        		"Accessor");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getUserOperatorAccess().getSemicolonKeyword_11());
    }
	otherlv_14='make' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getUserOperatorAccess().getMakeKeyword_12());
    }
	otherlv_15='=' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getUserOperatorAccess().getEqualsSignKeyword_13());
    }
(
(
		lv_make_16_0=RULE_STRING
		{
			newLeafNode(lv_make_16_0, grammarAccess.getUserOperatorAccess().getMakeSTRINGTerminalRuleCall_14_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"make",
        		lv_make_16_0, 
        		"STRING");
	    }

)
)	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getUserOperatorAccess().getSemicolonKeyword_15());
    }
	otherlv_18='is_fsym' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getUserOperatorAccess().getIs_fsymKeyword_16());
    }
	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getUserOperatorAccess().getEqualsSignKeyword_17());
    }
(
(
		lv_test_20_0=RULE_STRING
		{
			newLeafNode(lv_test_20_0, grammarAccess.getUserOperatorAccess().getTestSTRINGTerminalRuleCall_18_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserOperatorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"test",
        		lv_test_20_0, 
        		"STRING");
	    }

)
)	otherlv_21=';' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getUserOperatorAccess().getSemicolonKeyword_19());
    }
	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getUserOperatorAccess().getRightCurlyBracketKeyword_20());
    }
)
;





// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getParameterAccess().getTypeTerminalCrossReference_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAccessor
entryRuleAccessor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAccessorRule()); }
	 iv_ruleAccessor=ruleAccessor 
	 { $current=$iv_ruleAccessor.current; } 
	 EOF 
;

// Rule Accessor
ruleAccessor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='slot' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAccessorAccess().getSlotKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAccessorRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getAccessorAccess().getSlotParameterCrossReference_1_0()); 
	}

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAccessorAccess().getEqualsSignKeyword_2());
    }
(
(
		lv_java_3_0=RULE_STRING
		{
			newLeafNode(lv_java_3_0, grammarAccess.getAccessorAccess().getJavaSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAccessorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"java",
        		lv_java_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleFeatureException
entryRuleFeatureException returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureExceptionRule()); }
	 iv_ruleFeatureException=ruleFeatureException 
	 { $current=$iv_ruleFeatureException.current; } 
	 EOF 
;

// Rule FeatureException
ruleFeatureException returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ignore' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFeatureExceptionAccess().getIgnoreKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureExceptionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getFeatureExceptionAccess().getFeatureEStructuralFeatureCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleFeatureParameter
entryRuleFeatureParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureParameterRule()); }
	 iv_ruleFeatureParameter=ruleFeatureParameter 
	 { $current=$iv_ruleFeatureParameter.current; } 
	 EOF 
;

// Rule FeatureParameter
ruleFeatureParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureParameterRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getFeatureParameterAccess().getFeatureEStructuralFeatureCrossReference_0_0()); 
	}

)
)
    |
    { 
        newCompositeNode(grammarAccess.getFeatureParameterAccess().getFeatureExceptionParserRuleCall_1()); 
    }
    this_FeatureException_1=ruleFeatureException
    { 
        $current = $this_FeatureException_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFeatureParameterAccess().getSettedFeatureParameterParserRuleCall_2()); 
    }
    this_SettedFeatureParameter_2=ruleSettedFeatureParameter
    { 
        $current = $this_SettedFeatureParameter_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSettedFeatureParameter
entryRuleSettedFeatureParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSettedFeatureParameterRule()); }
	 iv_ruleSettedFeatureParameter=ruleSettedFeatureParameter 
	 { $current=$iv_ruleSettedFeatureParameter.current; } 
	 EOF 
;

// Rule SettedFeatureParameter
ruleSettedFeatureParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSettedFeatureParameterRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getSettedFeatureParameterAccess().getFeatureEStructuralFeatureCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSettedFeatureParameterAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSettedFeatureParameterAccess().getValueSettedValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleSettedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSettedFeatureParameterRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"SettedValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSettedValue
entryRuleSettedValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSettedValueRule()); }
	 iv_ruleSettedValue=ruleSettedValue 
	 { $current=$iv_ruleSettedValue.current; } 
	 EOF 
;

// Rule SettedValue
ruleSettedValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSettedValueAccess().getJavaCodeValueParserRuleCall_0()); 
    }
    this_JavaCodeValue_0=ruleJavaCodeValue
    { 
        $current = $this_JavaCodeValue_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSettedValueAccess().getLiteralValueParserRuleCall_1()); 
    }
    this_LiteralValue_1=ruleLiteralValue
    { 
        $current = $this_LiteralValue_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleJavaCodeValue
entryRuleJavaCodeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJavaCodeValueRule()); }
	 iv_ruleJavaCodeValue=ruleJavaCodeValue 
	 { $current=$iv_ruleJavaCodeValue.current; } 
	 EOF 
;

// Rule JavaCodeValue
ruleJavaCodeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_java_0_0=RULE_STRING
		{
			newLeafNode(lv_java_0_0, grammarAccess.getJavaCodeValueAccess().getJavaSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJavaCodeValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"java",
        		lv_java_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleLiteralValue
entryRuleLiteralValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralValueRule()); }
	 iv_ruleLiteralValue=ruleLiteralValue 
	 { $current=$iv_ruleLiteralValue.current; } 
	 EOF 
;

// Rule LiteralValue
ruleLiteralValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLiteralValueAccess().getLiteralEEnumLiteralCrossReference_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;









// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFQNRule()); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



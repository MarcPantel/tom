term modulo { }

prop modulo { 
  r0 : []  G -> forall x, A(x) => B
  r1 : [x] A(x) -> C(x) /\ D(x)
  r2 : []  B -> E \/ F
}

prop fold { }


rootR(
  <r:(H => (forall x, (C(x) /\ D(x)) => E \/ F)) => (H => G)> implyR(
    <x:H => (forall x, A(x) => E \/ F)> <a:H => (forall x, (C(x) /\ D(x)) => B)> implyR(
      <y:H><b:forall x, (C(x) /\ D(x)) => B> implyL(
        <z:forall x, A(x) => E \/ F> ax(z,b),
        <c:H> ax(y,c),x),a),r)))
  

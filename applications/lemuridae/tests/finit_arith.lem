termrule appl(t,nil()) -> t.
termrule appl(one(),cons(t,l)) -> t.
termrule appl(S(n),cons(t,l)) -> appl(n,l).
termrule appl(succ(t),l) -> succ(appl(t,l)).
termrule appl(pred(t),l) -> pred(appl(t,l)).
termrule appl(t1+t2,l) -> appl(t1,l) + appl(t2,l).
termrule appl(t1*t2,l) -> appl(t1,l) * appl(t2,l).

termrule pred(0) -> 0.
termrule pred(succ(x)) -> x.
termrule 0 + y -> y.
termrule 0 * y -> 0.
termrule succ(x) + y -> succ(x+y).
termrule succ(x) * y -> x * y + y.

rule in(l,fNull(t)) -> Null(appl(t,l)).
rule in(l,fEq(t1,t2)) -> eq( appl(t1,l), appl(t2,l) ).
rule in(l,fN(t)) -> N(appl(t,l)).
rule eq(x,y) -> \AA.(  in(cons(x,nil()),A) => in(cons(y,nil()),A) ).
rule N(n) -> \AA.( in(cons(0,nil()),A) => ( \Ay.(in(cons(y,nil()),A) =>  in(cons(succ(y),nil()),A)) => in(cons(n,nil()),A) )).
hered.
rule Null(0) -> \T.
rule Null(succ(x)) -> \B.
rule in(l,inter(A,B)) -> in(l,A) /\ in(l,B).
rule in(l,union(A,B)) -> in(l,A) \/ in(l,B).
rule in(l,supset(A,B)) -> in(l,A) => in(l,B).
rule in(l,emptyset()) -> \B.
rule in(l,P(a)) -> \En.(in(cons(n,l),A)).
rule in(l,C(a)) -> \An.(in(cons(n,l),A)).


rule Pair(0) -> \T.
rule Pair(succ(n)) -> Impair(n).
rule Impair(succ(n)) -> Pair(n).

rule in(l,fPair(t)) -> Pair(appl(t,l)).
rule in(l,fImpair(t)) -> Impair(appl(t,l)).



proof pair2n : \Ax.(\Ay.eq(x+y,y+x)) => \An.(N(n) => Pair(succ(succ(0))*n)).
reduce.
auto.
focus h2. rule. fPair(one()+one()).
auto. reduce.
axiom.
rule.
auto. reduce.
focus h2. elim. succ(y0).
focus h2. elim. y0.
focus h2. rule. fImpair(one()).
auto. reduce.
axiom.
auto. reduce.
auto.
auto. reduce.
auto.

proof eqrefl: \Ax.eq(x,x).
auto.

proof eqsym: \Ax.(\Ay.( eq(x,y) => eq(y,x) )).
elim.elim.elim.
focus h1. rule. fEq(one(),S(x0)).
focus h1. rule. 
reduce.
axiom.
rule. reduce.
theorem eqrefl.
focus h2. elim. x0. axiom.

proof eqtrans:  \Ax.(\Ay.(\Az.( eq(x,y) => (eq(y,z) => eq(x,z)) ))).
auto.
focus h2. rule. A0.
focus h4. rule. A0.
axiom.
axiom.
axiom.


proof succisafun: \Ax.(\Ay.( eq(x,y) => eq(succ(x),succ(y)) )).
elim. elim. elim.
focus h1. rule. fEq(S(succ(x0)),succ(one())).
focus h1. rule. reduce.
axiom.
rule. reduce.
theorem eqrefl.
focus h2. elim. succ(x0). axiom.


proof nplus0:   \An.(N(n) => eq(n+0,n)).
elim. elim.
focus h1. rule. fEq(one()+S(0),one()).
next.
focus h1. rule. reduce.
axiom.
next.
rule.
focus h1. rule. rule. reduce.
theorem succisafun.
focus h3. elim. (y0+0). focus h3. elim. (y0).
focus h3. elim.
axiom.
axiom.
rule. reduce.
theorem eqrefl.
focus h2. elim. 0. axiom.


proof plusassoc:   \Ax.(\Ay.(\Az.(N(x) => eq( x+(y+z) , (x+y)+z )))).
elim. elim. elim. elim.
focus h1. rule. fEq( one()+(S(y0)+S(z0)) , one()+S(y0)+S(z0) ).
next.
focus h1. rule. reduce. axiom.
rule. reduce. 
theorem eqrefl.
focus h2. elim. y0+z0. axiom.
rule.
focus h1. rule. rule. reduce.
theorem succisafun.
focus h3. elim. y1+(y0+z0). focus h3. elim. (y1+y0)+z0. focus h3. elim. 
axiom. axiom.


proof plusnSm:  \An.(\Am.( N(n) => eq(succ(n+m),n+succ(m)))).
elim. elim.elim.
focus h1. rule. fEq(succ(one()+S(m0)),one()+succ(S(m0))).
next.
focus h1. rule. reduce. axiom.
rule. reduce.
theorem eqrefl.
focus h2. elim. succ(m0). axiom.
rule.
focus h1. rule. rule. reduce.
theorem succisafun.
focus h3. elim. succ(y0+m0). focus h3. elim. y0+succ(m0). focus h3. elim. 
axiom. axiom.


proof pluscommut:  \An.(\Am.(N(n)=>(N(m)=>eq(n+m,m+n)))).
elim.elim.elim.elim.
focus h1. rule. fEq(one()+S(m0),S(m0)+one()).
next.
focus h1. rule. reduce. axiom.
rule. reduce.
theorem nplus0.
focus h3. elim. m0.
focus h3. elim.
theorem eqsym.
focus h4. elim. m0+0.
focus h4. elim. m0.
focus h4. elim.
axiom.
axiom.
axiom.
rule.
focus h1. rule. rule. reduce.
theorem plusnSm.
focus h4. elim. m0.
focus h4. elim. y0.
focus h4. elim.
theorem succisafun.
focus h5. elim. y0+m0. focus h5. elim. m0+y0. focus h5. elim. 
next. axiom.
next. axiom.
theorem eqtrans.
focus h6. elim. succ(y0+m0).
focus h6. elim. succ(m0+y0).
focus h6. elim. m0+succ(y0). 
focus h6. elim.
focus h6. elim.
axiom.
axiom.
axiom.

proof multn0:  \An.(N(n) => eq(0,n*0)).
elim.elim.
focus h1. rule. fEq(S(0),one()*S(0)).
next.
focus h1. rule. reduce. axiom.
rule. reduce.
theorem eqrefl.
focus h2. elim. 0. axiom.
rule.
focus h1. rule. rule. reduce.
focus h1. rule. fEq(S(0),one()+S(0)).
focus h1. rule. reduce.
axiom.
rule. reduce.
theorem eqrefl.
focus h3. elim. 0. axiom.



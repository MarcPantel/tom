termrule s(n) + m -> s(n+m).
termrule 0 + n -> n.
termrule s(n) * m -> n*m +m.
termrule 0 * n -> 0.

rule N(n) -> \AP.( appl(P,0) => ( \Am.(appl(P,m) => appl(P,s(m))) => appl(P,n) ) ).
hered.

rule appl(pair(),0) -> \T.
rule appl(pair(),s(n)) -> appl(impair(),n).
rule appl(impair(),s(n)) -> appl(pair(),n).

rule appl(pair2(),n) -> appl(pair(),2*n).

rule appl(P,x+y) -> appl(P,y+x).

rule N(s(n)) -> \T.
rule N(0) -> \T.

proof doublepair: N(n) |- appl(pair2(),n).
focus h1. rule. pair2().
axiom.
auto.
reduce.
focus c2. rule.
rule.
reduce. 
rule.
axiom.
rule.
reduce.
rule.


proof pair36: |- appl(pair(),36).


cut N(18).
theorem doublepair.
focus h2. rule.
reduce. axiom.
focus c2.
rule 14.

display pair36.



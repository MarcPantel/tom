termrule s(n) + m -> s(n+m).
termrule 0 + n -> n.
termrule s(n) * m -> n*m +m.
termrule 0 * n -> 0.

rule N(n) -> \AP.( appl(P,0) => ( \Am.(appl(P,m) => appl(P,s(m))) => appl(P,n) ) ).
hered.

rule N(s(n)) -> \T.
rule N(0) -> \T.
rule eq(x,y) -> \AP. ((appl(P,x) => appl(P,y)) /\ (appl(P,y) => appl(P,x))).


proof eqrefl: |- \Ax.(eq(x,x)).
elim
rule 8
axiom
axiom

proof eqsym: |- \Ax.(\Ay.(eq(x,y) => eq(y,x)) /\ (eq(y,x) => eq(x,y))).
elim
elim
elim
elim
rule 8
focus h2
rule 9
P0.
axiom
next
focus h2
rule 9
P0.
axiom
elim
elim
rule 8
focus h2
rule 9
P0.
axiom
axiom
axiom
next 
axiom
focus h2
rule 9
P0.
axiom
axiom

proof eqtrans: |- \Ax.(\Ay.(\Az.( eq(x,y) => (eq(y,z) => eq(x,z)) ))).
elim
elim
elim
elim
elim
rule 8
focus h2
rule 9
P0.
axiom
focus h2
rule 9
P0.
focus h5
rule 9
P0.
axiom
focus h3
rule 9
P0.
axiom
axiom
axiom
axiom

rule appl(res(),n) -> eq(n+0,n).
rule eq(s(x),s(y)) -> eq(x,y).

proof nplus0: |- \An.( N(n) => appl(res(),n) ).
elim
elim
focus h1
rule 1
res().
axiom
rule 10
reduce
theorem eqrefl
focus h2
elim
0.
axiom
rule 2
focus h1
rule 11
rule 10
reduce
rule 12
axiom




rule N(n,m) -> \AP.( appl(P,0,m) => ( \Aq.(appl(P,q,m) => appl(P,s(q),m)) => appl(P,n,m) ) ).
hered2.

rule appl(snplusm(),n,m) -> eq(s(n)+m,n+s(m)).
proof lem2: |- \An.(\Am.(N(n,m) => appl(snplusm(),n,m))).
elim
elim
elim
focus h1
rule 15
snplusm().
axiom
rule 18
reduce
theorem eqrefl
focus h2
elim
s(m0).
axiom
rule 16
focus h1
rule 19
rule 18
reduce
rule 12
axiom













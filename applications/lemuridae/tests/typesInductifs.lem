proprule in(l,inter(A,B)) -> in(l,A) /\ in(l,B).
proprule in(l,union(A,B)) -> in(l,A) \/ in(l,B).
proprule in(l,supset(A,B)) -> in(l,A) => in(l,B).
proprule in(l,emptyset()) -> False.
proprule in(l,P(p)) -> exists n, in(cons(n,l),p).
proprule in(l,C(p)) -> forall n, in(cons(n,l),p).

termrule appl(t,nil()) -> t.
termrule appl(one(),cons(t,l)) -> t.
termrule appl(S(n),cons(t,l)) -> appl(n,l).
termrule appl(succ(t),l) -> succ(appl(t,l)).
termrule appl(pred(t),l) -> pred(appl(t,l)).
termrule appl(t1+t2,l) -> appl(t1,l) + appl(t2,l).
termrule appl(t1*t2,l) -> appl(t1,l) * appl(t2,l).

termrule pred(0) -> 0.
termrule pred(succ(x)) -> x.
termrule 0 + y -> y.
termrule 0 * y -> 0.
termrule succ(x) + y -> succ(x+y).
termrule succ(x) * y -> x * y + y.

rule eq(x,y) -> forall P, in(cons(x,nil()),P) => in(cons(y,nil()),P).
proprule in(l,fEq(t1,t2)) -> eq( appl(t1,l), appl(t2,l) ).

inductive Nat = z() | succ(m:Nat).
hered_nat.
proprule in(l,fNat(t)) -> Nat(appl(t,l)).

proprule Null(0) -> True.
proprule Null(succ(x)) -> False.
proprule in(l,fNull(t)) -> Null(appl(t,l)).

proof eqrefl: forall x,eq(x,x).
auto.

proof succ_injective: forall x y, eq(x,y) => eq(succ(x),succ(y)).
intros.
focus h1. rule. fEq(S(succ(x0)),succ(one())).
reduce.
axiom.
reduce.
theorem eqrefl.
focus h2. intro. succ(x0). axiom.

proof null_is_zero: forall x, Nat(x) => (Null(x) <=> eq(x,0).
intros.
cut eq(0,x0).
focus h3. rule. fNull(one()).
autoreduce.
autoreduce.
focus h2. rule. fEq(one(),S(x0)).
reduce. axiom.
reduce.
auto.
/* partie dure */

proof natcase: forall n, Nat(n) => (Null(n) \/ (exists m, Nat(m) /\ eq(n,succ(m)))).
intros.
focus h1. rule. inter(fNat(one()),union(fNull(one()),P(inter(fNat(one()),fEq(S(one()),succ(one())))))).
autoreduce.
next.
autoreduce.
rule. reduce.
focus h2. remove.
focus c2. remove.
focus c2. remove.
intros.
focus c2. intro. succ(n0).
intros.
theorem succ_injective.
focus h4. intro. m0.
focus h4. intro. succ(n0).
intros.
focus c2. rule.
focus h4. rule. p0.
focus h3. rule. n0.
axiom.
axiom.
axiom.
axiom.
focus h2.
focus c2. intro. 0.
intros.
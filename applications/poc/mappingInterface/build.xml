<?xml version="1.0" encoding="UTF-8"?>

<project default="test" basedir=".">

    <property name="javacSource" value="1.5"/>
    <property name="javacTarget" value="1.5"/>
    <property name="javacDebug" value="on"/>
    <property name="optimize" value="off"/>
    <property name="optimize2" value="off"/>
    <property name="genIntrospector" value="on"/>
    <property name="pretty" value="on"/>

    <property environment="env"/>
    <property name="tom.home" location="../../../src/dist"/>
    <property name="mi.dir" location="."/>
    <property name="mi.src" location="${mi.dir}/src"/>
    <property name="mi.gen" location="${mi.dir}/gen"/>
    <property name="mi.build" location="${mi.dir}/build"/>

    <import file="${tom.home}/lib/tom-common.xml"/>

    <target name="init" depends="tom.init">
        <mkdir dir="${mi.build}"/>
        <mkdir dir="${mi.gen}"/>
    </target>

    <target name="generate" depends="init">
      <gom.preset srcdir="${mi.src}" destdir="${mi.gen}" withCongruenceStrategies="true">
        <include name="**/*.gom"/>
      </gom.preset>
      <tom.preset srcdir="${mi.src}" destdir="${mi.gen}" import="${mi.src};${mi.gen}">
        <include name="**/*.t"/>
      </tom.preset>
    </target>

    <target name="build" depends="generate">
      <javac.preset destdir="${mi.build}">
        <src path="${mi.gen}"/>
        <src path="${mi.src}"/>
        <include name="**/*.java"/>
      </javac.preset>
    </target>

    <target name="clean">
      <delete dir="${mi.gen}"/>
      <delete dir="${mi.build}"/>
    </target>

    <target name="test" depends="build"
      description="Runs junit acceptance tests">
      <junit haltonfailure="false" showoutput="true">
        <classpath>
          <path refid="tom.classpath"/>
          <!--<fileset dir="${mi.dir}/lib">-->
            <!--<include name="*.jar"/>-->
            <!--</fileset>-->
          <pathelement location="${mi.build}"/>
        </classpath>
        <test name="base.Main"/>
        <test name="mi1.MainGom"/>
        <test name="mi1.MainHand"/>
      </junit>
    </target>

  </project>

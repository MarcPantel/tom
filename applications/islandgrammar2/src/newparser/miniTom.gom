module newparser.miniTom
imports String
abstract syntax

gt_Program = CsProgram(blocks:gt_BlockList)

gt_BlockList = CsBlockList(gt_Block*)

gt_Block = HOSTBLOCK(hContent:String)
         | MATCH(gt_PatternActionList*)

gt_PatternActionList = PATTERNACTION(patternList:gt_PatternList, action:gt_BlockList)




/*
ProgramUnit = HostBlock(hContent:String)
            | Match(mArgs:MatchArgList, pActs:PatternActionList)
            | Typeterm(implProgram:Program, isSort:Sort, equals:EqualCheck)

MatchArgList = MatchArgList(MatchArg*)

MatchArg = WithType(aType:String, aTerm:String)
        | NoType(aTerm:String)

PatternActionList = PatternActionList(PatternAction*)

PatternAction = PatterAction(aPattern:gt_Pattern, anAction:Program)
*/

// Match ============================================================
//gt_MatchConstruct = CsMatchConstruct(matchArguments:gt_MatchArguments,patterActionList:gt_PatternActionList)

//TODO change gt_PatternActionList

// PatternAction
gt_PatternAction = CsPatternAction(patternList:gt_PatternList, action:gt_BlockList)
  gt_PatternList = CsPatternList(gt_Pattern*)

// ConstraintAction
gt_ConstraintAction = CsConstraintAction(constraint:gt_Constraint, action:gt_BlockList)

// Constraints
gt_Constraint = CsMatchConstraint(object:gt_Pattern, subject:gt_Term)
              | CsAndConstraint(constraint1:gt_Constraint, constraint2:gt_Constraint)
              | CsOrConstraint(constraint1:gt_Constraint, constraint2:gt_Constraint)
              | CsNumLessThan(lefthand:gt_Term, righthand:gt_Term)
              | CsNumLessOrEqualTo(lefthand:gt_Term, righthand:gt_Term)
              | CsNumGreaterThan(lefthand:gt_Term, righthand:gt_Term)
              | CsNumGreaterOrEqualTo(lefthand:gt_Term, righthand:gt_Term)
              | CsNumEqualTo(lefthand:gt_Term, righthand:gt_Term)
              | CsNumDifferent(lefthand:gt_Term, rightand:gt_Term)
              
              

// ConstraintSubject
gt_Term = CsVariableName(name : String)
        | CsVariableNameStar(name : String)
        | CsTerm(name : String, termList : gt_TermList)

gt_TermList = CsTermList(gt_Term*)



// Pattern ===========================================================
gt_Pattern = CsPattern(annotations:gt_AnnotationList, pattern:gt_PlainPattern)
  gt_AnnotationList = CsAnnotationList(String*)

gt_PlainPattern = CsVariable(name : String) 
                | CsVariableStar(name : String)
                | CsAntiVariable(name : String)
                | CsAntiVariableStar(name : String)
                | CsConstant(value : String)
                | CsAntiConstant(value : String)
                | CsConstantStar(value : String)
                | CsAntiConstantStar(value : String)
                | CsUnamedVariable()
                | CsUnamedVariableStar()
                | CsSymbolList(headSymbols : gt_HeadSymbolList, tailSymbols : gt_TailSymbolList)
                | CsAntiSymbolList(headSymbols : gt_HeadSymbolList, tailSymbols : gt_TailSymbolList)


gt_HeadSymbolList = CsHeadSymbolList(gt_HeadSymbol*)
  gt_HeadSymbol = CsHeadSymbol(name : String, theory : gt_TheoryType)
                | CsConstantHeadSymbol(value : String, theory : gt_TheoryType)

    gt_TheoryType = CsTheoryAU()
                  | CsTheoryCS()
                  | CsTheoryDEFAULT()

gt_TailSymbolList = CsExplicitTermList(gt_Pattern*)
                  | CsImplicitPairList(gt_PairPattern*)

gt_PairPattern = CsPairPattern(slotName:String, pattern:gt_Pattern)

// // Test one rule 
// // Expected resuts:
// //    a --> b()
// //    b --> Bottom(b())
// //    f(a) --> Bottom(f(a()))
// let S=signature {a:0, b:0,  f:1, g:2} in
// let r1 = { a() -> b() } in 
// r1 <+ fail

// // Expected resuts:
// //    a --> b()
// //    b --> b()
// //    f(a) --> f(a())
// let S=signature {a:0, b:0,  f:1, g:2} in
// let r1 = { a() -> b() } in 
// r1 <+ identity



// // Test SEQUENCE
// // Expected resuts:
// //    a -->  c()
// //    b --> Bottom(Bottom(b()))
// //    c --> Bottom(Bottom(c()))
// //    f(a) --> Bottom(Bottom(f(a())))
// let S=signature {a:0, b:0, c:0, f:1, g:2} in
// let r1 = { a() -> b() } in 
// let r2 = { b() -> c() } in 
// (r1 ; r2)

let S=signature {a:0, b:0, c:0, f:1, g:2} in
let r1 = { a() -> b() } in 
let r2 = { b() -> c() } in 
let r3 = { c() -> a() } in 
r1 ; (r2 ; r3)





// // Test CHOICE
// let S=signature {a:0, b:0, c:0, f:1, g:2} in
// let r1 = { a() -> b() } in 
// let r2 = { b() -> c() } in 
// let r3 = { c() -> a() } in 
// (r1 ; r2; r3) <+ identity

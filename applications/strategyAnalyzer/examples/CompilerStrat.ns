abstract syntax
Code = Match(TermList) 
     | Assign(Name,Exp) 
     | If(Exp,Code,Code) 
     | WhileDo(Exp,Code)
     | Nop() 

Exp = Or(Exp,Exp)
    | And(Exp,Exp)
    | IsFsym(Name,Term)
    | EqualTerm(Term,Term)
    | TrueTL()
    | FalseTL()

TermList = ConsTerm(Term,TermList) | NilTerm()
Term = VarTerm(Name) | ApplTerm(Name,TermList)
Nat = Z() | S(Nat)
Name = Name(Nat)

strategies

normexp() = [ 
  Or(x,TrueTL()) -> TrueTL(),
  Or(TrueTL(),x) -> TrueTL(),
  Or(x,FalseTL()) -> x,
  Or(FalseTL(),x) -> x,
  And(x,TrueTL()) -> x,
  And(TrueTL(),x) -> x,
  And(x,FalseTL()) -> FalseTL(),
  And(FalseTL(),x) -> FalseTL(),
  EqualTerm(x,x) -> TrueTL(),
  And(IsFsym(n,x),IsFsym(n,x)) -> IsFsym(n,x)
  ]

normexp2() = [ And(IsFsym(n1,x),IsFsym(n2,x)) -> FalseTL() ]

topdown(s) = mu x.(s ; all(x))
//topdownstoponsucces(s) = mu x.(s <+ all(x))

innermost(s) = mu x.(all(x) ; ((s ; x) <+ Identity))

mainStrat() = innermost(normexp() <+ normexp2())
 


abstract syntax

CodeList = NilCode()
         | ConsCode(Code,CodeList)

Code = Match(TermList) 
     | CMatch(TermList) 
     | Assign(Name,Exp) 
     | If(Exp,Code,Code) 
     | WhileDo(Exp,Code)
     | Nop() 

Exp = Or(Exp,Exp)
    | And(Exp,Exp)
    | IsFsym(Name,Term)
    | EqualTerm(Term,Term)
    | TrueTL()
    | FalseTL()

TermList = ConsTerm(Term,TermList) | NilTerm()
Term = VarTerm(Name) | ApplTerm(Name,TermList) | RenamedTerm(Term,Term)
Nat = Z() | S(Nat)
Name = Name(Nat)

strategies
compile() = [ Match(l) -> CMatch(l) ]
rename() = [ VarTerm(Name(n)) -> RenamedTerm(VarTerm(Name(S(n))), VarTerm(Name(n))) ]

try(s) = s <+ Identity
topdown(s) = mu x.(s ; all(x))
topdownstoponsucces(s) = mu x.(s <+ all(x))

s1() = topdown(try(compile()))
s2() = topdownstoponsucces(rename())
mainStrat() = s1() ; s2()



//let R1 = { f(x) -> x } in 
//let R2 = { b() -> c() } in 
//R1;(R1<+R2);R1

//let r1 = { a() -> b() } in mu x .((r1;x) <+ identity)
//let r1 = { a() -> b() } in 
//let r2 = { b() -> c() } in 
//mu x .(((r1<+r2);x) <+ identity)


// let S=signature {a:0, b:0, f:1, g:2} in
// let r1 = { a() -> b() } in one(r1)

// repeat(obu(r1))
  let S=signature {a:0, b:0, f:1} in
  let r1 = { f(x,x) -> f(b()) } in 
  let obu = mu y.(one(y)<+r1) in
  mu x .((obu;x) <+ identity)

// repeat(otd(r1))
//let S=signature {a:0, b:0, f:1, g:2, h1:2, h2:2, h3:2, h4:4, h5:5, h6:6, h7:7, h8:8, h9:9} in
//let r1 = { f(a()) -> f(b()) } in 
//let otd = mu y.(r1<+one(y)) in
//mu x .((otd;x) <+ identity)


// let S=signature {a:0, b:0, c:0, f:1, g:2} in
// let R1 = { f(x) -> x } in 
// let R2 = { b() -> c() } in 
// (R1<+R2)

// td(try(r1))
//let S=signature {a:0, b:0, f:1, g:2} in
//leet r1 = { a() -> f(b()) } in 
//let td = mu y.((r1<+identity);all(y)) in
//let bu = mu y.(all(y);(r1<+identity)) in
//bu
//td

// innermost(r1)
//  let S=signature {a:0, b:0, f:1, g:2} in
//  let r1 = { a() -> g(b(),b()) } in 
//  let innermost = mu x.(all(x);((r1;x)<+identity)) in
// let td = mu y.((innermost<+identity);all(y)) in
//   innermost
// td

// innermost(r1)
// let S=signature {a:0, b:0, f:1, g:2} in
// let r1 = { f(b()) -> a() } in 
// let innermost = mu x.(all(x);((r1;x)<+identity)) in
// let td = mu y.(r1;all(y)) in
//  innermost
// td

// repeat(r1)
//let S=signature {a:0, b:0, f:1, g:2} in
//let r1 = { a() -> f(b()) } in 
//let repeat = mu y.(r1;y)<+identity in
//repeat


// (r1))
//let S=signature {a:0, b:0, f:1, g:2} in
// let r1 = { a()->b(), f(a())->a(), g(a(),a()) -> b() } in 
//let r1 = { a()->b(), f(f(X))->X, g(a(),a()) -> b() } in 
//let r1 = { a()->b(), f(X)->X, g(a(),a()) -> b() } in 
//r1

//Germain
// let S=signature {a:0, b:0, c:0,f:1} in
// let S=signature {a:0, b:0, c:0,f:2} in
// let r1 = { a() -> c() } in
// let r2 = { b() -> c() } in
//r1
// one(r1)
// all(r1)
// let r2 = { b() -> c() } in
// r1 <+ r2
// mu y.(r1;r2;y)


// let S=signature {a:0, b:0, c:0, f:2, g:1} in
// let r1 = { a() -> c() } in
// let r2 = { f(x,g(y)) -> x } in
// r1 <+ r2
// r2


// Example for rules that shouldn't be added
// let S=signature {a:0, b:0,f:1,g:2} in
// let r1 = { g(f(a()),x) -> f(b()) } in
// r1

//let R1 = { f(x) -> x } in 
//let R2 = { b() -> c() } in 
//R1;(R1<+R2);R1

//let r1 = { a() -> b() } in mu x .((r1;x) <+ identity)
//let r1 = { a() -> b() } in 
//let r2 = { b() -> c() } in 
//mu x .(((r1<+r2);x) <+ identity)


// let S=signature {a:0, b:0, f:1, g:2} in
// let r1 = { a() -> b() } in one(r1)

// repeat(obu(r1))
let S=signature {a:0, b:0, f:1, g:2} in
let r1 = { a() -> f(b()) } in 
let obu = mu y.(one(y)<+r1) in
mu x .((obu;x) <+ identity)

// let S=signature {a:0, b:0, c:0, f:1, g:2} in
// let R1 = { f(x) -> x } in 
// let R2 = { b() -> c() } in 
// (R1<+R2)

// td(try(r1))
//let S=signature {a:0, b:0, f:1, g:2} in
//let r1 = { a() -> f(b()) } in 
//let td = mu y.((r1<+identity);all(y)) in
//td

// innermost(r1)
//let S=signature {a:0, b:0, f:1, g:2} in
//let r1 = { a() -> b() } in 
//let innermost = mu x.(all(x);((r1;x)<+identity))
//in innermost

// repeat(r1)
//let S=signature {a:0, b:0, f:1, g:2} in
//let r1 = { a() -> f(b()) } in 
//let repeat = mu y.(r1;y)<+identity in
//repeat

<?xml version="1.0" encoding="UTF-8"?>
<project name="rho" default="build" basedir=".">
  <description>
    The rho interpreter
  </description>

  <property name="javacSource"  value="1.4"/>
  <property name="javacTarget"  value="1.4"/>
  <property name="nowarnings"   value="false"/>
  <property name="optimize"     value="off"/>
  <property name="optimize2"    value="off"/>
  <property name="verbose"      value="off"/>
  <property name="pretty"       value="off"/>
  <property name="visitable"    value="on"/>
  <property name="stamp"        value="off"/>

  <property environment="env"/>
  <property name="tom.home"     value="${env.TOM_HOME}"/>

  <property name="rho.dir"      location="."/>
  <property name="rho.gen"      location="gen"/>
  <property name="rho.build"    location="build"/>

  <property name="tomconfigfile"  location="${tom.home}/Tom.xml"/>
  <property name="vasconfigfile"  location="${tom.home}/Vas.xml"/>

  <target name="init">
    <fail unless="env.TOM_HOME"
          message="TOM_HOME has to be defined in your environment, 
          to find the Tom classes"/>
    <mkdir dir="${rho.build}"/>
    <mkdir dir="${rho.gen}"/>
    <!-- Define classpath for building stable and source  -->
    <path id="tom.classpath">
      <fileset dir="${tom.home}/lib">
        <include name="*.jar"/>
      </fileset>
    </path>
    
    <!-- tasks for building -->
    <taskdef name="tom"
             classname="tom.engine.tools.ant.TomTask"
             classpathref="tom.classpath"/>
    <taskdef name="vas"
             classname="vas.ant.VasTask" 
             classpathref="tom.classpath"/>
    <taskdef name="tomantlr" 
             classname="org.apache.tools.ant.taskdefs.optional.ANTLR">
      <classpath refid="tom.classpath"/>
    </taskdef>

    <macrodef name="tomcompile">
      <attribute name="package"/>
      <sequential>
        <tom config="${tomconfigfile}"
             srcdir="${rho.dir}" 
             destdir="${rho.gen}"         
             nowarn="${nowarnings}"
             optimize="${optimize}"
             optimize2="${optimize2}"
             verbose="${verbose}"
             pretty="${pretty}"
             options="-I ${tom.home}/share/jtom">
          <include name="@{package}/**/*.t"/>
          <exclude name="@{package}/**/*.g.t"/>
        </tom>
      </sequential>
    </macrodef>
    <macrodef name="vascompile">
      <attribute name="package"/>
      <sequential>
        <vas config="${vasconfigfile}"
	     srcdir="${rho.dir}"
             package="@{package}" 
             destdir="${rho.gen}">
          <include name="@{package}/**/*.vas"/>
        </vas>
      </sequential>
    </macrodef>
    <macrodef name="javacompile">
      <attribute name="package"/>
      <sequential>
        <javac destdir="${rho.build}"
          target="${javacTarget}"
          source="${javacSource}"
          nowarn="${nowarnings}">
          <src path="${rho.dir}"/>
          <src path="${rho.gen}"/>
          <classpath refid="tom.classpath"/>
          <include name="@{package}/**/*.java"/>
        </javac>
      </sequential>
    </macrodef>
  </target>

  <target name="build" depends="init">
    <vascompile package="xrho"/>
    <tomcompile package="xrho"/>
    <tom config="${tomconfigfile}"
	    srcdir="${rho.dir}" 
	    nowarn="${nowarnings}"
	    optimize="${optimize}"
	    optimize2="${optimize2}"
	    verbose="${verbose}"
	    pretty="${pretty}"
	    outputfile="${rho.gen}/xrho/RhoParser.g"
	    options="-I ${rho.gen}/xrho -I ${tom.home}/share/jtom">
	    <include name="xrho/*.g.t"/>
    </tom>
    <tomantlr target="${rho.gen}/xrho/RhoParser.g"
              outputdirectory="${rho.gen}/xrho">
      <classpath refid="tom.classpath"/>
    </tomantlr>
    <javacompile package="xrho"/>
  </target>

  <target name="clean" description="make clean">
    <delete dir="${rho.gen}"/>
    <delete dir="${rho.build}"/>
  </target>
</project>

%include { string.tom }
%include { int.tom }
%include { double.tom }
%typeterm ATerm{
  implement { aterm.ATerm}
  get_fun_sym(t) {((t instanceof ATermAppl)?((ATermAppl)t).getAFun():null)}
  cmp_fun_sym(s1,s2) { s1==s2}
  get_subterm(t,n) {(((ATermAppl)t).getArgument(n))}
  equals(t1,t2) {t1.equals(t2)}
}

%typelist ATermList{
  implement { aterm.ATermList}
  get_fun_sym(t) {((t instanceof ATermList)?getTermFactory().getPureFactory().makeAFun("conc",1,false):null)}
  cmp_fun_sym(s1,s2) { s1==s2}
  equals(t1,t2) {t1.equals(t2)}
  get_head(l) {l.getFirst()}
  get_tail(l) {l.getNext()}
  is_empty(l) {l.isEmpty()}
}


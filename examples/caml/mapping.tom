
%typelist list {
    implement { List }
    get_fun_sym(t) { "conc" }
    cmp_fun_sym(t1,t2) { t1 = t2 }
    get_head(l)   { List.hd l }
    get_tail(l)   { List.tl l }
    is_empty(l)   { l = [] }
    equals(l1,l2) { l1=l2 }
  }

%typeterm entier{
    implement { int }
    get_fun_sym(t) { 0 }
    cmp_fun_sym (t1,t2) {t1 = t2}
    get_subterm(t,n) { false }
    equals(l1,l2) { l1=l2 }
}

%oplist list conc( entier* ) {
  fsym { "conc" }
  make_empty()  { [] }
  make_insert(e,l) { e::l }
}

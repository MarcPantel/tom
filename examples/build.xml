<?xml version="1.0" encoding="UTF-8"?>
<project name="Ant for Tom-examples" default="examples" basedir=".">
  <description>
    This script prepare a bundle of Tom examples
  </description>

  <!-- set local properties for this build -->
  <property file="../local.properties"/>

  <property environment="env"/>
  <property name="tom.home"        value="${env.TOM_HOME}"/>
  <property name="tom.common.path" value="${tom.home}/lib"/>
  <import file="${tom.common.path}/tom-common.xml"/>
  
  <!-- some used directory location -->
  <property name="examples.dir"   location="."/>
  <property name="examples.dist"  location="dist"/>

  <property name="examples.lib"   value="lib"/>

  <!-- where the examples a build: javac destDir -->
  <property name="examples.gen"   location="gen"/>
  <property name="examples.build" location="build"/>

  <!-- Examples to build and distribute -->
  <property name="cril"           value="cril"/>
  <property name="gasel"          value="gasel"/>

  <property name="lsystems"        value="lsystems"/>
  <property name="nspk"           value="nspk"/>
  <property name="p3p"            value="p3p"/>
  <property name="parsingtests"   value="parsingtests"/>
  <property name="peano"          value="peano"/>
  <property name="pnspk"          value="pnspk"/>
  <property name="poly"           value="poly"/>
  <property name="pqueens"        value="pqueens"/>
  <property name="prodrule"       value="prodrule"/>
  <property name="propp"          value="propp"/>
  <property name="rbtree"         value="rbtree"/>
  <property name="xquery"         value="xquery"/>

  <target name="init" depends="tom.init">
    <!-- to have something correct, check tom.home is defined to something meaningful
    <fail unless="TOM_HOME"
          message="TOM_HOME has to be defined in your environment, 
          to find the Tom classes"/>-->
    <mkdir dir="${examples.build}"/>
    <mkdir dir="${examples.gen}"/>
    <path id="tom.examples.classpath">
      <fileset dir="${examples.dir}/${examples.lib}">
        <include name="*.jar"/>
      </fileset>
      <pathelement path="${tom.classpath}"/>
    </path>

    <macrodef name="tomcompile">
      <attribute name="example"/>
      <sequential>
        <tom.preset srcdir="${examples.dir}"
                    destdir="${examples.gen}">          
          <include name="@{example}/**/*.t"/>
          <exclude name="@{example}/**/*.g.t"/>
        </tom.preset>
      </sequential>
    </macrodef>
    <macrodef name="adtcompile">
      <attribute name="example"/>
      <attribute name="factory"/>
      <sequential>
        <adt srcdir="${examples.dir}"
             name="@{factory}" 
             package="@{example}" 
             visitable="${visitable}"
             destdir="${examples.gen}">
          <include name="@{example}/**/*.adt"/>
        </adt>
      </sequential>
    </macrodef>
    <macrodef name="vascompile">
      <attribute name="example"/>
      <sequential>
        <vas config="${vasconfigfile}"
             srcdir="${examples.dir}"
             package="@{example}" 
             destdir="${examples.gen}">
          <include name="@{example}/**/*.vas"/>
        </vas>
      </sequential>
    </macrodef>
    <macrodef name="gomcompile">
      <attribute name="example"/>
      <sequential>
        <gom config="${gomconfigfile}"
             srcdir="${examples.dir}"
             package="@{example}" 
             destdir="${examples.gen}">
          <include name="@{example}/**/*.gom"/>
        </gom>
      </sequential>
    </macrodef>
    <macrodef name="javacompile">
      <attribute name="example"/>
      <sequential>
        <javac.preset destdir="${examples.build}">
          <src path="${examples.dir}"/>
          <src path="${examples.gen}"/>
          <classpath refid="tom.examples.classpath"/>
          <include name="@{example}/**/*.java"/>
        </javac.preset>
      </sequential>
    </macrodef>
  </target>

  <target name="prepare.examples">
    <mkdir dir="${examples.dist}"/>
  </target>
  
  <!-- target debug to help finding properties problems -->
  <target name="debug"> 
    <echoproperties/>
  </target>
  
  <target name="clean.examples" description="Cleans examples directory">
    <delete dir="${examples.gen}"/>
    <delete dir="${examples.build}"/>
  </target>

  <target name="build" depends="init">
    <fail unless="example">
      Please define the "example" to build
    </fail>
    <subant target="build">
      <filelist dir=".">
        <file name="${example}/build.xml"/>
      </filelist>
    </subant>
  </target>

  <target name="cril" depends="init">
    <!-- build tom -->
    <tomcompile example="${cril}"/>
    <!-- builds the parser using javacc -->
    <mkdir dir="${example.gen}/cril/jtom/ddd/data/ddd"/>
    <javacc target="${examples.dir}/cril/jtom/ddd/data/ddd/parser.jj"
            outputdirectory="${example.gen}/cril/jtom/ddd/data/ddd"
            javacchome="${javaccdir}" />
    <mkdir dir="${example.gen}/cril/jtom/ddd/data/dbm"/>
    <javacc target="${examples.dir}/cril/jtom/ddd/data/dbm/parser.jj"
            outputdirectory="${example.gen}/cril/jtom/ddd/data/dbm"
            javacchome="${javaccdir}" />
    <!-- build java source -->
    <javacompile example="${cril}"/>
    <!-- copy resources -->
    <copy todir="${examples.build}/${cril}">
      <fileset dir="${examples.dir}/${cril}">
        <include name="*.xml"/>
      </fileset>
    </copy>
  </target>

  <target name="gasel" depends="init">
    <gomcompile example="${gasel}"/>
    <tomcompile example="${gasel}"/>
    <javacompile example="${gasel}"/>
  </target>

  <target name="lsystems" depends="init">
    <tomcompile example="${lsystems}"/>
    <javacompile example="${lsystems}"/>
  </target>
  
  <target name="nspk" depends="init">
    <subant target="build">
      <filelist dir=".">
        <file name="nspk/build.xml"/>
      </filelist>
    </subant>
  </target>
  
  <target name="p3p" depends="init">
    <subant target="build">
      <filelist dir=".">
        <file name="p3p/build.xml"/>
      </filelist>
    </subant>
  </target>

  <target name="peano" depends="init">
    <gomcompile example="${peano}"/>
    <tomcompile example="${peano}"/>
    <javacompile example="${peano}"/>
  </target>

  <target name="pnspk" depends="init">
    <adtcompile example="${pnspk}"
                factory="term"/>
    <tomcompile example="${pnspk}"/>
    <javacompile example="${pnspk}"/>
  </target>
  
  <target name="poly" depends="init"> 
    <subant target="build">
      <filelist dir=".">
        <file name="poly/build.xml"/>
      </filelist>
    </subant>
  </target>

  <target name="pqueens" depends="init">
    <tomcompile example="${pqueens}"/>
    <javacompile example="${pqueens}"/>
  </target>

  <target name="prodrule" depends="init">
    <tomcompile example="${prodrule}"/>
    <javacompile example="${prodrule}"/>
  </target>

  <target name="propp" depends="init">
    <!--<adtcompile example="${propp}"
      factory="seq"/>-->
    <gomcompile example="${propp}"/>
    <!-- build parser -->
    <tom.preset outputfile="${examples.gen}/${propp}/SeqParser.g"
                options="-I ${examples.gen}/${propp}"
                srcdir="${examples.dir}"> 
      <include name="${propp}/**/SeqParser.g.t"/>
    </tom.preset>
    <mkdir dir="${examples.gen}/${propp}"/>
    <tomantlr target="${examples.gen}/${propp}/SeqParser.g"
              outputdirectory="${examples.gen}/${propp}">
      <classpath refid="tom.classpath"/>
    </tomantlr>
    <tomcompile example="${propp}"/>
    <javacompile example="${propp}"/>
    <!-- copy resources -->
    <copy todir="${examples.build}/${propp}">
      <fileset dir="${examples.dir}/${propp}">
        <include name="examples"/>
        <include name="*.sty"/>
      </fileset>
    </copy>
  </target>
	
  <target name="parsingtests" depends="init">
    <!--<adtcompile example="${propp}"
      factory="seq"/>-->
      <!-- parsername="" -->
    <gomcompile example="${parsingtests}"/>
    <!-- build parser -->
    <tom.preset outputfile="${examples.gen}/${parsingtests}/SeqWalker.g"
                options="-I ${examples.gen}/${parsingtests}"
                srcdir="${examples.dir}"> 
      <include name="${parsingtests}/**/SeqWalker.g.t"/>
    </tom.preset>
    <mkdir dir="${examples.gen}/${parsingtests}"/>
    <tomantlr target="${parsingtests}/SeqParser.g"
              outputdirectory="${examples.gen}/${parsingtests}">
 		<classpath refid="tom.classpath"/>
    </tomantlr>
    <pom srcfile="${examples.gen}/${parsingtests}/SeqParserTokenTypes.txt"
      destdir="${parsingtests}"
      package="${parsingtests}">
    </pom>
    <tomantlr target="${examples.gen}/${parsingtests}/SeqWalker.g"
              outputdirectory="${examples.gen}/${parsingtests}">
    	<classpath refid="tom.classpath"/>	    	
    </tomantlr>
    <tomcompile example="${parsingtests}"/>
    <javacompile example="${parsingtests}"/>
    <!-- copy resources -->
    <copy todir="${examples.build}/${parsingtests}">
      <fileset dir="${examples.dir}/${parsingtests}">
        <include name="ex_current"/>
      </fileset>
    </copy>
  </target>

  <target name="rbtree" depends="init">
    <subant target="build">
      <filelist dir=".">
        <file name="rbtree/build.xml"/>
      </filelist>
    </subant>
  </target>

  <target name="xquery" depends="init">
    <tomcompile example="${xquery}"/>
    <javacompile example="${xquery}"/>
    <!-- copy resources -->
    <copy todir="${examples.build}/${xquery}">
      <fileset dir="${examples.dir}/${xquery}">
        <include name="*.xquery"/>
        <include name="*.html"/>
      </fileset>
    </copy>
  </target>

  <target name="examples" 
          description="Builds the examples (at least some)"
          depends="nspk, p3p, peano, pnspk, poly, pqueens, prodrule, propp, rbtree">
  </target>

  <target name="build.all">
    <subant target="build">
      <fileset dir="." includes="*/build.xml"/>
    </subant>
  </target>
  <target name="dist.all">
    <fail unless="version">
      ****************************************************
      ****************************************************
      You have to define the "version" property in order 
			to build the examples distribution
			> ./build.sh -Dversion="xxx"
      ****************************************************
      ****************************************************
    </fail>
    <property name="distrib.zip"
      value="${examples.dist}/tom-examples-${version}.zip"/>
    <zip destfile="${distrib.zip}" update="yes">
      <zipfileset dir="${examples.dir}" prefix="examples" filemode="644">
        <include name="README"/>
        <include name="build.xml"/>
        <include name="*/build.xml"/>
        <include name="${examples.lib}/*.jar"/>
      </zipfileset>
    </zip>
    <subant target="dist">
      <fileset dir="." includes="*/build.xml"/>
      <property name="distrib.zip"
        value="${distrib.zip}"/>
    </subant>
  </target>

  <target name="dist.examples" 
          description="Prepare a distribution of examples" 
          depends="prepare.examples">
    <fail unless="version">
      ****************************************************
      ****************************************************
      You have to define the "version" property in order 
			to build the examples distribution
			> ./build.sh -Dversion="xxx"
      ****************************************************
      ****************************************************
    </fail>

    <tar tarfile="${examples.dist}/tom-examples-${version}.tar.gz" 
         compression="gzip">
      <tarfileset dir="${examples.dir}" prefix="examples" mode="755">
        <include name="build.sh"/>
      </tarfileset>
      <tarfileset dir="${examples.dir}" prefix="examples" mode="644">
        <include name="README"/>
        <include name="build.xml"/>
        <include name="${examples.lib}/*.jar"/>
        
        <include name="${nspk}/*.t"/>
        
        <include name="${nspk}/*.java"/>
        <include name="${nspk}/*.gom"/>

        <include name="${p3p}/*.t"/>
        <include name="${p3p}/*.xml"/>

        <include name="${peano}/*.java"/>
        <include name="${peano}/*.gom"/>
        <include name="${peano}/*.t"/>

        <include name="${pnspk}/*.t"/>
        <include name="${pnspk}/*.adt"/>

        <include name="${poly}/*.t"/>
        <include name="${poly}/Poly.signature"/>
        <include name="${poly}/*.gom"/>

        <include name="${pqueens}/*.t"/>
        <include name="${pqueens}/*.java"/>
        <include name="${pqueens}/*.tom"/>

        <include name="${prodrule}/*.java"/>
        <include name="${prodrule}/*.t"/>

        <include name="${propp}/*.t"/>
        <include name="${propp}/*.gom"/>
        <include name="${propp}/*.sty"/>
        <include name="${propp}/examples"/>

        <include name="${rbtree}/*.t"/>
        <include name="${rbtree}/*.gom"/>
        
        <include name="${lib}/*.jar"/>

        <not>
          <present targetdir="${examples.dir}">
            <mapper type="glob" 
                    from="**/*.java" 
                    to="**/*.t"/>
          </present>
        </not>
      </tarfileset>
    </tar>
  </target>

  <target name="clean.dist" description="Mr proper" depends="clean">
    <delete dir="${examples.dist}"/>
  </target>

  <target name="clean" 
          description="Cleans everything in the project" 
          depends="clean.examples">
  </target> 

  <target name="initjunit">
    <taskdef name="tomjunit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
      <classpath refid="tom.classpath"/>
    </taskdef>
  </target>

  <target name="junit" description="Runs junit acceptance tests" depends="examples, initjunit">
    <tomjunit printsummary="yes"
              fork="true"
              haltonfailure="false"
              failureproperty="tests.failed"
              showoutput="true">
      <classpath>
        <path refid="tom.classpath"/>
	<fileset dir="${examples.dir}/${examples.lib}">
		<include name="*.jar"/>
	</fileset>
        <pathelement location="${examples.build}"/>
      </classpath>
      <batchtest>
        <fileset dir="${examples.gen}">
          <include name="**/Test*.java"/>
        </fileset>
        <fileset dir="${examples.dir}">
          <include name="**/Test*.java"/>
          <exclude name="gen/**/*"/>
        </fileset>
      </batchtest>
    </tomjunit>
    <fail if="tests.failed">
      ****************************************************
      ****************************************************
      One or more tests failed. Check the output...
      ****************************************************
      ****************************************************
    </fail>
  </target>

  <target name="memorytest">
    <antcall target="clean"/>
    <antcall target="junit"/>
    <antcall target="clean"/>
    <antcall target="junit"/>
    <antcall target="clean"/>
    <antcall target="junit"/>
    <antcall target="clean"/>
    <antcall target="junit"/>
    <antcall target="clean"/>
    <antcall target="junit"/>
  </target>
  
</project>

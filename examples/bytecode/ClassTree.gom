module ClassTree
imports int long float double String
abstract syntax

TintList = intList(int*)
TStringList = StringList(String*)

TSignature = Signature(sig:String)
           | EmptySignature()
Signature:make(sig) {
  if(sig == null)
    return `EmptySignature();
}

TClass = Class(info:TClassInfo, fields:TFieldList, methods:TMethodList)
TClassInfo = ClassInfo(name:String, signature:TSignature, access:TAccessList, superName:String, interfaces:TStringList, innerClasses:TInnerClassInfoList, outerClass:TOuterClassInfo)

TInnerClassInfo = InnerClassInfo(name:String, outerName:String, innerName:String, access:TAccessList)
TInnerClassInfoList = InnerClassInfoList(TInnerClassInfo*)
TOuterClassInfo = OuterClassInfo(owner:String, name:String, desc:TMethodDescriptor)
                | EmptyOuterClassInfo()

TLocalVariable = LocalVariable(name:String, typeDesc:String, signature:TSignature, start:TLabel, end:TLabel, index:int)
TLocalVariableList = LocalVariableList(TLocalVariable*)

THandler = CatchHandler(handler:TLabel, type:String)
         | FinallyHandler(handler:TLabel)
CatchHandler:make(handler, type) {
  if(type == null)
    return `FinallyHandler(handler);
}

TTryCatchBlock = TryCatchBlock(start:TLabel, end:TLabel, handler:THandler)
TTryCatchBlockList = TryCatchBlockList(TTryCatchBlock*)

TField = Field(access:TAccessList, name:String, desc:TFieldDescriptor, signature:TSignature, value:TValue)
TFieldList = FieldList(TField*)
Field:make(access, name, desc, signature, value) {
  if(value == null)
    return `Field(access, name, desc, signature, EmptyValue());
}

TMethod = Method(info:TMethodInfo, code:TMethodCode)
TMethodList = MethodList(TMethod*)
TMethodInfo = MethodInfo(owner:String, access:TAccessList, name:String, desc:TMethodDescriptor, signature:TSignature, exceptions:TStringList)
TMethodCode = MethodCode(instructions:TInstructionList, localVariables:TLocalVariableList, tryCatchBlocks:TTryCatchBlockList)
            | EmptyCode()
MethodCode:make(instructions, localVariables, tryCatchBlocks) {
  if(instructions == null && localVariables == null && tryCatchBlocks == null)
    return `EmptyCode();
}

TFieldDescriptor = ObjectType(className:String)
                 | ArrayType(arrayType:TFieldDescriptor)
                 | B()
                 | C()
                 | D()
                 | F()
                 | I()
                 | J()
                 | S()
                 | Z()
TFieldDescriptorList = FieldDescriptorList(TFieldDescriptor*)
TMethodDescriptor = MethodDescriptor(parameters:TFieldDescriptorList, return:TReturnDescriptor)
TReturnDescriptor = ReturnDescriptor(type:TFieldDescriptor)
                  | Void()

TLabel = Label(id:int)
TLabelList = LabelList(TLabel*)

TValue = StringValue(s:String)
       | IntValue(i:int)
       | LongValue(l:long)
       | FloatValue(f:float)
       | DoubleValue(d:double)
       | EmptyValue()

TAccessList = AccessList(TAccess*)
TAccess = ABSTRACT()
        | ANNOTATION()
        | BRIDGE()
        | DEPRECATED()
        | ENUM()
        | FINAL()
        | INTERFACE()
        | NATIVE()
        | PRIVATE()
        | PROTECTED()
        | PUBLIC()
        | STATIC()
        | STRICT()
        | SUPER()
        | SYNCHRONIZED()
        | SYNTHETIC()
        | TRANSIENT()
        | VARARGS()
        | VOLATILE()

TType = ARRAY()
      | BOOLEAN()
      | BYTE()
      | CHAR()
      | DOUBLE()
      | FLOAT()
      | INT()
      | LONG()
      | OBJECT()
      | SHORT()
      | VOID()

TInstructionList = InstructionList(TInstruction*)
TInstruction = LabeledInstruction(label:TLabel, TInstruction:TInstruction)
             | Nop()
             | Aconst_null()
             | Iconst_m1()
             | Iconst_0()
             | Iconst_1()
             | Iconst_2()
             | Iconst_3()
             | Iconst_4()
             | Iconst_5()
             | Lconst_0()
             | Lconst_1()
             | Fconst_0()
             | Fconst_1()
             | Fconst_2()
             | Dconst_0()
             | Dconst_1()
             | Bipush(operand:int)
             | Sipush(operand:int)
             | Ldc(cst:TValue)
             | Ldc_w(cst:TValue)
             | Ldc2_w(cst:TValue)
             | Iload(var:int)
             | Lload(var:int)
             | Fload(var:int)
             | Dload(var:int)
             | Aload(var:int)
             | Iload_0()
             | Iload_1()
             | Iload_2()
             | Iload_3()
             | Lload_0()
             | Lload_1()
             | Lload_2()
             | Lload_3()
             | Fload_0()
             | Fload_1()
             | Fload_2()
             | Fload_3()
             | Dload_0()
             | Dload_1()
             | Dload_2()
             | Dload_3()
             | Aload_0()
             | Aload_1()
             | Aload_2()
             | Aload_3()
             | Iaload()
             | Laload()
             | Faload()
             | Daload()
             | Aaload()
             | Baload()
             | Caload()
             | Saload()
             | Istore(var:int)
             | Lstore(var:int)
             | Fstore(var:int)
             | Dstore(var:int)
             | Astore(var:int)
             | Istore_0()
             | Istore_1()
             | Istore_2()
             | Istore_3()
             | Lstore_0()
             | Lstore_1()
             | Lstore_2()
             | Lstore_3()
             | Fstore_0()
             | Fstore_1()
             | Fstore_2()
             | Fstore_3()
             | Dstore_0()
             | Dstore_1()
             | Dstore_2()
             | Dstore_3()
             | Astore_0()
             | Astore_1()
             | Astore_2()
             | Astore_3()
             | Iastore()
             | Lastore()
             | Fastore()
             | Dastore()
             | Aastore()
             | Bastore()
             | Castore()
             | Sastore()
             | Pop()
             | Pop2()
             | Dup()
             | Dup_x1()
             | Dup_x2()
             | Dup2()
             | Dup2_x1()
             | Dup2_x2()
             | Swap()
             | Iadd()
             | Ladd()
             | Fadd()
             | Dadd()
             | Isub()
             | Lsub()
             | Fsub()
             | Dsub()
             | Imul()
             | Lmul()
             | Fmul()
             | Dmul()
             | Idiv()
             | Ldiv()
             | Fdiv()
             | Ddiv()
             | Irem()
             | Lrem()
             | Frem()
             | Drem()
             | Ineg()
             | Lneg()
             | Fneg()
             | Dneg()
             | Ishl()
             | Lshl()
             | Ishr()
             | Lshr()
             | Iushr()
             | Lushr()
             | Iand()
             | Land()
             | Ior()
             | Lor()
             | Ixor()
             | Lxor()
             | Iinc(incr:int, var:int)
             | I2l()
             | I2f()
             | I2d()
             | L2i()
             | L2f()
             | L2d()
             | F2i()
             | F2l()
             | F2d()
             | D2i()
             | D2l()
             | D2f()
             | I2b()
             | I2c()
             | I2s()
             | Lcmp()
             | Fcmpl()
             | Fcmpg()
             | Dcmpl()
             | Dcmpg()
             | Ifeq(label:TLabel)
             | Ifne(label:TLabel)
             | Iflt(label:TLabel)
             | Ifge(label:TLabel)
             | Ifgt(label:TLabel)
             | Ifle(label:TLabel)
             | If_icmpeq(label:TLabel)
             | If_icmpne(label:TLabel)
             | If_icmplt(label:TLabel)
             | If_icmpge(label:TLabel)
             | If_icmpgt(label:TLabel)
             | If_icmple(label:TLabel)
             | If_acmpeq(label:TLabel)
             | If_acmpne(label:TLabel)
             | Goto(label:TLabel)
             | Jsr(label:TLabel)
             | Ret(var:int)
             | Tableswitch(min:int, max:int, dflt:TLabel, labels:TLabelList)
             | Lookupswitch(dflt:TLabel, keys:TintList, labels:TLabelList)
             | Ireturn()
             | Lreturn()
             | Freturn()
             | Dreturn()
             | Areturn()
             | Return()
             | Getstatic(owner:String, name:String, fieldDesc:TFieldDescriptor)
             | Putstatic(owner:String, name:String, fieldDesc:TFieldDescriptor)
             | Getfield(owner:String, name:String, fieldDesc:TFieldDescriptor)
             | Putfield(owner:String, name:String, fieldDesc:TFieldDescriptor)
             | Invokevirtual(owner:String, name:String, methodDesc:TMethodDescriptor)
             | Invokespecial(owner:String, name:String, methodDesc:TMethodDescriptor)
             | Invokestatic(owner:String, name:String, methodDesc:TMethodDescriptor)
             | Invokeinterface(owner:String, name:String, methodDesc:TMethodDescriptor)
             | New(typeDesc:String)
             | Newarray(operand:int)
             | Anewarray(typeDesc:String)
             | Arraylength()
             | Athrow()
             | Checkcast(typeDesc:String)
             | Instanceof(typeDesc:String)
             | Monitorenter()
             | Monitorexit()
             | Multianewarray(typeDesc:String, dims:int)
             | Ifnull(label:TLabel)
             | Ifnonnull(label:TLabel)
//             | Goto_w(label:TLabel)
//             | Jsr_w(label:TLabel)
//             | Wide()
//             | Breakpoint()
//             | Impdep1()
//             | Impdep2()
//             | Xxxunusedxxx1()


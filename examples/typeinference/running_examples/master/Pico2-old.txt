
Code after type inference = 
Tom(concCode(TargetLanguageToCode(TL("/*\n * Copyright (c) 2004-2010, INPL, INRIA\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *  - Redistributions of source code must retain the above copyright\n *  notice, this list of conditions and the following disclaimer.\n *  - Redistributions in binary form must reproduce the above copyright\n *  notice, this list of conditions and the following disclaimer in the\n *  documentation and/or other materials provided with the distribution.\n *  - Neither the name of the INRIA nor the names of its\n *  contributors may be used to endorse or promote products derived from\n *  this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage master;\nimport master.pico2.term.types.*;\nimport tom.library.sl.VisitFailure;\nimport java.util.*;\n\nclass Pico2 {\n\t",TextPosition(1,1),TextPosition(35,9))),TomInclude(concCode(TomInclude(concCode(
DeclarationToCode(TypeTermDecl(Name("Strategy"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),33,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Strategy.tom")),Name("t1"),Type("Strategy",TLType(" tom.library.sl.Strategy "))),BQVariable(concOption(OriginTracking(Name("t2"),33,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Strategy.tom")),Name("t2"),Type("Strategy",TLType(" tom.library.sl.Strategy "))),Code(" ({0}.equals({1})) "),OriginTracking(Name("equals"),33,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Strategy.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Strategy.tom")),Name("t"),Type("Strategy",TLType(" tom.library.sl.Strategy "))),Code(" ({0} instanceof tom.library.sl.Strategy) "),OriginTracking(Name("is_sort"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Strategy.tom"))),OriginTracking(Name("Strategy"),30,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Strategy.tom"))),TargetLanguageToCode(TL("\n",TextPosition(34,1),TextPosition(35,1))))),TomInclude(concCode(
DeclarationToCode(TypeTermDecl(Name("Position"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),33,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Position.tom")),Name("t1"),Type("Position",TLType(" tom.library.sl.Position "))),BQVariable(concOption(OriginTracking(Name("t2"),33,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Position.tom")),Name("t2"),Type("Position",TLType(" tom.library.sl.Position "))),Code(" ({0}.equals({1})) "),OriginTracking(Name("equals"),33,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Position.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Position.tom")),Name("t"),Type("Position",TLType(" tom.library.sl.Position "))),Code(" ({0} instanceof tom.library.sl.Position) "),OriginTracking(Name("is_sort"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Position.tom"))),OriginTracking(Name("Position"),30,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/Position.tom"))),TargetLanguageToCode(TL("\n",TextPosition(34,1),TextPosition(35,1))))),TomInclude(concCode(TomInclude(concCode(
DeclarationToCode(TypeTermDecl(Name("int"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),Name("t1"),Type("int",TLType(" int "))),BQVariable(concOption(OriginTracking(Name("t2"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),Name("t2"),Type("int",TLType(" int "))),Code(" {0}=={1} "),OriginTracking(Name("equals"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),31,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom")),Name("t"),Type("int",TLType(" int "))),Code(" true "),OriginTracking(Name("is_sort"),31,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom"))),OriginTracking(Name("int"),29,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/int.tom"))),TargetLanguageToCode(TL("\n",TextPosition(33,1),TextPosition(34,1))))),TomInclude(concCode(TomInclude(concCode(
DeclarationToCode(TypeTermDecl(Name("char"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),35,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/char.tom")),Name("t1"),Type("char",TLType(" char "))),BQVariable(concOption(OriginTracking(Name("t2"),35,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/char.tom")),Name("t2"),Type("char",TLType(" char "))),Code(" {0}=={1} "),OriginTracking(Name("equals"),35,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/char.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),34,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/char.tom")),Name("t"),Type("char",TLType(" char "))),Code(" true "),OriginTracking(Name("is_sort"),34,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/char.tom"))),OriginTracking(Name("char"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/char.tom"))),TargetLanguageToCode(TL("\n",TextPosition(36,1),TextPosition(37,1))))),
DeclarationToCode(TypeTermDecl(Name("String"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),36,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/string.tom")),Name("t1"),Type("String",TLType(" String "))),BQVariable(concOption(OriginTracking(Name("t2"),36,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/string.tom")),Name("t2"),Type("String",TLType(" String "))),Code(" {0}.equals({1}) "),OriginTracking(Name("equals"),36,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/string.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),35,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/string.tom")),Name("t"),Type("String",TLType(" String "))),Code(" {0} instanceof String "),OriginTracking(Name("is_sort"),35,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/string.tom"))),OriginTracking(Name("String"),33,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/string.tom"))),
DeclarationToCode(ListSymbolDecl(Name("concString"))),TargetLanguageToCode(TL("\n",TextPosition(46,1),TextPosition(47,1))))),
DeclarationToCode(SymbolDecl(Name("mu"))),
DeclarationToCode(SymbolDecl(Name("Mu"))),
DeclarationToCode(SymbolDecl(Name("MuVar"))),
DeclarationToCode(SymbolDecl(Name("Omega"))),
DeclarationToCode(SymbolDecl(Name("Identity"))),
DeclarationToCode(SymbolDecl(Name("One"))),
DeclarationToCode(SymbolDecl(Name("All"))),
DeclarationToCode(SymbolDecl(Name("IfThenElse"))),
DeclarationToCode(SymbolDecl(Name("Fail"))),
DeclarationToCode(SymbolDecl(Name("Not"))),
DeclarationToCode(ListSymbolDecl(Name("Sequence"))),
DeclarationToCode(ListSymbolDecl(Name("Choice"))),
DeclarationToCode(ListSymbolDecl(Name("ChoiceUndet"))),
DeclarationToCode(ListSymbolDecl(Name("SequenceId"))),
DeclarationToCode(ListSymbolDecl(Name("ChoiceId"))),
DeclarationToCode(SymbolDecl(Name("OneId"))),
DeclarationToCode(SymbolDecl(Name("Pselect"))),
DeclarationToCode(SymbolDecl(Name("OmegaU"))),
DeclarationToCode(SymbolDecl(Name("Up"))),TargetLanguageToCode(TL("\n",TextPosition(173,1),TextPosition(174,1))))),TomInclude(concCode(
DeclarationToCode(SymbolDecl(Name("BuiltinRepeat"))),
DeclarationToCode(SymbolDecl(Name("BuiltinRepeatId"))),
DeclarationToCode(SymbolDecl(Name("BuiltinTopDown"))),
DeclarationToCode(SymbolDecl(Name("BuiltinBottomUp"))),TargetLanguageToCode(TL("\n\n",TextPosition(57,1),TextPosition(59,1))))),TomInclude(concCode(
DeclarationToCode(SymbolDecl(Name("AllSeq"))),
DeclarationToCode(SymbolDecl(Name("DeRef"))),
DeclarationToCode(SymbolDecl(Name("StrictDeRef"))),
DeclarationToCode(SymbolDecl(Name("AUCtl"))),
DeclarationToCode(SymbolDecl(Name("EUCtl"))),
DeclarationToCode(SymbolDecl(Name("TrueCtl"))),
DeclarationToCode(SymbolDecl(Name("FalseCtl"))),
DeclarationToCode(SymbolDecl(Name("AndCtl"))),
DeclarationToCode(SymbolDecl(Name("OrCtl"))),
DeclarationToCode(SymbolDecl(Name("AFCtl"))),
DeclarationToCode(SymbolDecl(Name("AGCtl"))),
DeclarationToCode(SymbolDecl(Name("EFCtl"))),
DeclarationToCode(SymbolDecl(Name("AXCtl"))),
DeclarationToCode(SymbolDecl(Name("EXCtl"))),TargetLanguageToCode(TL("\n",TextPosition(98,1),TextPosition(99,1))))),TomInclude(concCode(
DeclarationToCode(SymbolDecl(Name("Try"))),
DeclarationToCode(SymbolDecl(Name("Repeat"))),
DeclarationToCode(SymbolDecl(Name("TopDown"))),
DeclarationToCode(SymbolDecl(Name("TopDownCollect"))),
DeclarationToCode(SymbolDecl(Name("TopDownStopOnSuccess"))),
DeclarationToCode(SymbolDecl(Name("TopDownIdStopOnSuccess"))),
DeclarationToCode(SymbolDecl(Name("BottomUp"))),
DeclarationToCode(SymbolDecl(Name("OnceBottomUp"))),
DeclarationToCode(SymbolDecl(Name("OnceTopDown"))),
DeclarationToCode(SymbolDecl(Name("Innermost"))),
DeclarationToCode(SymbolDecl(Name("Outermost"))),
DeclarationToCode(SymbolDecl(Name("RepeatId"))),
DeclarationToCode(SymbolDecl(Name("OnceBottomUpId"))),
DeclarationToCode(SymbolDecl(Name("OnceTopDownId"))),
DeclarationToCode(SymbolDecl(Name("InnermostId"))),
DeclarationToCode(SymbolDecl(Name("InnermostIdSeq"))),
DeclarationToCode(SymbolDecl(Name("OutermostId"))),TargetLanguageToCode(TL("\n",TextPosition(122,1),TextPosition(123,1))))),TargetLanguageToCode(TL("\n\n",TextPosition(40,29),TextPosition(42,1))))),TomInclude(concCode(
DeclarationToCode(TypeTermDecl(Name("HashMap"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("l1"),35,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/util/types/HashMap.tom")),Name("l1"),Type("HashMap",TLType(" java.util.HashMap "))),BQVariable(concOption(OriginTracking(Name("l2"),35,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/util/types/HashMap.tom")),Name("l2"),Type("HashMap",TLType(" java.util.HashMap "))),Code(" {0}.equals({1}) "),OriginTracking(Name("equals"),35,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/util/types/HashMap.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),34,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/util/types/HashMap.tom")),Name("t"),Type("HashMap",TLType(" java.util.HashMap "))),Code(" {0} instanceof java.util.HashMap "),OriginTracking(Name("is_sort"),34,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/util/types/HashMap.tom"))),OriginTracking(Name("HashMap"),32,"/Users/claudia/Doctorat/tom/workspace/git-jtom/src/dist/share/tom/java/util/types/HashMap.tom"))),TargetLanguageToCode(TL("\n",TextPosition(36,1),TextPosition(37,1))))),TomInclude(concCode(
DeclarationToCode(TypeTermDecl(Name("Bool"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),10,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom")),Name("t1"),Type("Bool",TLType(" master.pico2.term.types.Bool "))),BQVariable(concOption(OriginTracking(Name("t2"),10,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom")),Name("t2"),Type("Bool",TLType(" master.pico2.term.types.Bool "))),Code(" ({0}=={1}) "),OriginTracking(Name("equals"),10,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),8,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom")),Name("t"),Type("Bool",TLType(" master.pico2.term.types.Bool "))),Code(" ({0} instanceof master.pico2.term.types.Bool) "),OriginTracking(Name("is_sort"),8,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom"))),OriginTracking(Name("Bool"),6,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom"))),
DeclarationToCode(TypeTermDecl(Name("Expr"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),18,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom")),Name("t1"),Type("Expr",TLType(" master.pico2.term.types.Expr "))),BQVariable(concOption(OriginTracking(Name("t2"),18,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom")),Name("t2"),Type("Expr",TLType(" master.pico2.term.types.Expr "))),Code(" ({0}=={1}) "),OriginTracking(Name("equals"),18,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),16,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom")),Name("t"),Type("Expr",TLType(" master.pico2.term.types.Expr "))),Code(" ({0} instanceof master.pico2.term.types.Expr) "),OriginTracking(Name("is_sort"),16,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom"))),OriginTracking(Name("Expr"),14,"/Users/claudia/Doctorat/tom/workspace/git-jtom/examples/master/master/pico2/term/Term.tom"))),
DeclarationToCode(SymbolDecl(Name("True"))),
DeclarationToCode(SymbolDecl(Name("False"))),
DeclarationToCode(SymbolDecl(Name("Neg"))),
DeclarationToCode(SymbolDecl(Name("Or"))),
DeclarationToCode(SymbolDecl(Name("And"))),
DeclarationToCode(SymbolDecl(Name("Eq"))),
DeclarationToCode(SymbolDecl(Name("Var"))),
DeclarationToCode(SymbolDecl(Name("Cst"))),
DeclarationToCode(SymbolDecl(Name("Let"))),
DeclarationToCode(SymbolDecl(Name("EmptySeq"))),
DeclarationToCode(SymbolDecl(Name("ConsSeq"))),
DeclarationToCode(SymbolDecl(Name("If"))),
DeclarationToCode(SymbolDecl(Name("Print"))),
DeclarationToCode(SymbolDecl(Name("Plus"))),
DeclarationToCode(ListSymbolDecl(Name("Seq"))),TargetLanguageToCode(TL("\n",TextPosition(119,1),TextPosition(120,1))))),TargetLanguageToCode(TL("\n\n\tpublic Expr opti(Expr expr) {\n\t\t",TextPosition(58,4),TextPosition(61,17))),InstructionToCode(Match(concConstraintInstruction(ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("If"),62,"Pico2.t")),concTomName(Name("If")),concSlot(PairSlotAppl(Name("cond"),RecordAppl(concOption(OriginTracking(Name("Neg"),62,"Pico2.t")),concTomName(Name("Neg")),concSlot(PairSlotAppl(Name("b"),Variable(concOption(OriginTracking(Name("b"),62,"Pico2.t")),Name("b"),Type("Bool",TLType(" master.pico2.term.types.Bool ")),concConstraint()))),concConstraint())),PairSlotAppl(Name("e1"),Variable(concOption(OriginTracking(Name("i1"),62,"Pico2.t")),Name("i1"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint())),PairSlotAppl(Name("e2"),Variable(concOption(OriginTracking(Name("i2"),62,"Pico2.t")),Name("i2"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("expr"),61,"Pico2.t")),Name("expr"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" return ",TextPosition(62,45),TextPosition(62,54)))),BQTermToInstruction(
Composite(CompositeBQTerm(FunctionCall(Name("opti"),EmptyType(),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("If"),concBQTerm(
Composite(CompositeBQTerm(BQVariable(concOption(OriginTracking(Name("b"),62,"Pico2.t"),ModuleName("default")),Name("b"),Type("Bool",TLType(" master.pico2.term.types.Bool "))))),
Composite(CompositeBQTerm(BQVariable(concOption(OriginTracking(Name("i2"),62,"Pico2.t"),ModuleName("default")),Name("i2"),Type("Expr",TLType(" master.pico2.term.types.Expr "))))),
Composite(CompositeBQTerm(BQVariable(concOption(OriginTracking(Name("i1"),62,"Pico2.t"),ModuleName("default")),Name("i1"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))))),"default")))))))),CodeToInstruction(TargetLanguageToCode(TL("; ",TextPosition(62,72),TextPosition(62,74))))))),concOption(OriginalText(Name("")))),ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("Seq"),63,"Pico2.t")),concTomName(Name("Seq")),concSlot(PairSlotAppl(EmptyName(),VariableStar(concOption(OriginTracking(Name("X"),63,"Pico2.t")),Name("X"),TypeWithSymbol("Expr",TLType(" master.pico2.term.types.Expr "),Name("Seq")),concConstraint())),PairSlotAppl(EmptyName(),RecordAppl(concOption(OriginTracking(Name("Seq"),63,"Pico2.t")),concTomName(Name("Seq")),concSlot(),concConstraint())),PairSlotAppl(EmptyName(),VariableStar(concOption(OriginTracking(Name("Y"),63,"Pico2.t")),Name("Y"),TypeWithSymbol("Expr",TLType(" master.pico2.term.types.Expr "),Name("Seq")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("expr"),61,"Pico2.t")),Name("expr"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL("\n\t\t\t\tif(",TextPosition(63,45),TextPosition(64,36)))),BQTermToInstruction(BQVariableStar(concOption(OriginTracking(Name("X"),64,"Pico2.t")),Name("X"),TypeWithSymbol("Expr",TLType(" master.pico2.term.types.Expr "),Name("Seq")))),CodeToInstruction(TargetLanguageToCode(TL(".isEmptySeq() && ",TextPosition(64,39),TextPosition(64,56)))),BQTermToInstruction(BQVariableStar(concOption(OriginTracking(Name("Y"),64,"Pico2.t")),Name("Y"),TypeWithSymbol("Expr",TLType(" master.pico2.term.types.Expr "),Name("Seq")))),CodeToInstruction(TargetLanguageToCode(TL(".isEmptySeq()) {\n\t\t\t\t\treturn ",TextPosition(64,59),TextPosition(65,48)))),BQTermToInstruction(
Composite(CompositeBQTerm(BuildEmptyList(Name("Seq"))))),CodeToInstruction(TargetLanguageToCode(TL(";\n\t\t\t\t} else {\n\t\t\t\t\treturn ",TextPosition(65,54),TextPosition(67,48)))),BQTermToInstruction(
Composite(CompositeBQTerm(FunctionCall(Name("opti"),EmptyType(),concBQTerm(
Composite(CompositeBQTerm(BuildAppendList(Name("Seq"),
Composite(CompositeBQTerm(BQVariableStar(concOption(OriginTracking(Name("X"),67,"Pico2.t")),Name("X"),TypeWithSymbol("Expr",TLType(" master.pico2.term.types.Expr "),Name("Seq"))))),BuildAppendList(Name("Seq"),
Composite(CompositeBQTerm(BQVariableStar(concOption(OriginTracking(Name("Y"),67,"Pico2.t")),Name("Y"),TypeWithSymbol("Expr",TLType(" master.pico2.term.types.Expr "),Name("Seq"))))),BuildEmptyList(Name("Seq"))))))))))),CodeToInstruction(TargetLanguageToCode(TL("; \n\t\t\t\t}\n\t\t\t",TextPosition(67,65),TextPosition(69,25))))))),concOption(OriginalText(Name("")))),ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("Seq"),71,"Pico2.t")),concTomName(Name("Seq")),concSlot(PairSlotAppl(EmptyName(),Variable(concOption(OriginTracking(Name("head"),71,"Pico2.t")),Name("head"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint())),PairSlotAppl(EmptyName(),VariableStar(concOption(OriginTracking(Name("tail"),71,"Pico2.t")),Name("tail"),TypeWithSymbol("Expr",TLType(" master.pico2.term.types.Expr "),Name("Seq")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("expr"),61,"Pico2.t")),Name("expr"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" return ",TextPosition(71,44),TextPosition(71,53)))),BQTermToInstruction(
Composite(CompositeBQTerm(BuildConsList(Name("Seq"),
Composite(CompositeBQTerm(FunctionCall(Name("opti"),EmptyType(),concBQTerm(
Composite(CompositeBQTerm(BQVariable(concOption(OriginTracking(Name("head"),71,"Pico2.t"),ModuleName("default")),Name("head"),Type("Expr",TLType(" master.pico2.term.types.Expr "))))))))),BuildConsList(Name("Seq"),
Composite(CompositeBQTerm(FunctionCall(Name("opti"),EmptyType(),concBQTerm(
Composite(CompositeBQTerm(BQVariableStar(concOption(OriginTracking(Name("tail"),71,"Pico2.t")),Name("tail"),TypeWithSymbol("Expr",TLType(" master.pico2.term.types.Expr "),Name("Seq"))))))))),BuildEmptyList(Name("Seq"))))))),CodeToInstruction(TargetLanguageToCode(TL("; ",TextPosition(71,81),TextPosition(71,83))))))),concOption(OriginalText(Name("")))),ConstraintInstruction(MatchConstraint(Variable(concOption(OriginTracking(Name("x"),72,"Pico2.t")),Name("x"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint()),BQVariable(concOption(OriginTracking(Name("expr"),61,"Pico2.t")),Name("expr"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" return ",TextPosition(72,30),TextPosition(72,39)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),72,"Pico2.t"),ModuleName("default")),Name("x"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),CodeToInstruction(TargetLanguageToCode(TL("; ",TextPosition(72,42),TextPosition(72,43))))))),concOption(OriginalText(Name(""))))),concOption(OriginTracking(Name("Match"),61,"Pico2.t"),ModuleName("default")))),TargetLanguageToCode(TL("\n\t\tthrow new RuntimeException(\"strange term: \" + expr);\n\t}\n\t\t\n  //-------------------------------------------------------\n\n  public void run() {\n\n    System.out.println(\"running...\");\n    Expr p1 = ",TextPosition(73,17),TextPosition(82,15))),BQTermToCode(
Composite(CompositeBQTerm(BuildTerm(Name("Print"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("Let"),concBQTerm(
Composite(CompositeTL(ITL("\"a\""))),
Composite(CompositeBQTerm(BuildTerm(Name("Cst"),concBQTerm(
Composite(CompositeTL(ITL("1")))),"default"))),
Composite(CompositeBQTerm(BuildTerm(Name("Var"),concBQTerm(
Composite(CompositeTL(ITL("\"a\"")))),"default")))),"default")))),"default")))),TargetLanguageToCode(TL(";\n    Expr p2 = ",TextPosition(82,48),TextPosition(83,15))),BQTermToCode(
Composite(CompositeBQTerm(BuildTerm(Name("Print"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("Let"),concBQTerm(
Composite(CompositeTL(ITL("\"b\""))),
Composite(CompositeBQTerm(BuildTerm(Name("Plus"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("Var"),concBQTerm(
Composite(CompositeTL(ITL("\"a\"")))),"default"))),
Composite(CompositeBQTerm(BuildTerm(Name("Cst"),concBQTerm(
Composite(CompositeTL(ITL("2")))),"default")))),"default"))),
Composite(CompositeBQTerm(BuildTerm(Name("Var"),concBQTerm(
Composite(CompositeTL(ITL("\"b\"")))),"default")))),"default")))),"default")))),TargetLanguageToCode(TL(";\n\t\tExpr p4 = ",TextPosition(83,63),TextPosition(84,27))),BQTermToCode(
Composite(CompositeBQTerm(BuildTerm(Name("Let"),concBQTerm(
Composite(CompositeTL(ITL("\"i\""))),
Composite(CompositeBQTerm(BuildTerm(Name("Cst"),concBQTerm(
Composite(CompositeTL(ITL("0")))),"default"))),
Composite(CompositeBQTerm(BuildTerm(Name("If"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("Neg"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("Eq"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("Var"),concBQTerm(
Composite(CompositeTL(ITL("\"i\"")))),"default"))),
Composite(CompositeBQTerm(BuildTerm(Name("Cst"),concBQTerm(
Composite(CompositeTL(ITL("10")))),"default")))),"default")))),"default"))),
Composite(CompositeBQTerm(BuildConsList(Name("Seq"),
Composite(CompositeBQTerm(BuildTerm(Name("Print"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("Var"),concBQTerm(
Composite(CompositeTL(ITL("\"i\"")))),"default")))),"default"))),BuildConsList(Name("Seq"),
Composite(CompositeBQTerm(BuildTerm(Name("Let"),concBQTerm(
Composite(CompositeTL(ITL("\"i\""))),
Composite(CompositeBQTerm(BuildTerm(Name("Plus"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("Var"),concBQTerm(
Composite(CompositeTL(ITL("\"i\"")))),"default"))),
Composite(CompositeBQTerm(BuildTerm(Name("Cst"),concBQTerm(
Composite(CompositeTL(ITL("1")))),"default")))),"default"))),
Composite(CompositeBQTerm(BuildTerm(Name("Var"),concBQTerm(
Composite(CompositeTL(ITL("\"i\"")))),"default")))),"default"))),BuildEmptyList(Name("Seq")))))),
Composite(CompositeBQTerm(BuildEmptyList(Name("Seq"))))),"default")))),"default")))),TargetLanguageToCode(TL(";\n\n\t\tSystem.out.println(\"p1 = \" + p1);\n\t\tprintCst(p1);\n\t\tSystem.out.println(\"p4 = \" + p4);\n\t\tprintCst(p4);\n\n\t\tSystem.out.println(\"Optimize...\");\n\t\tSystem.out.println(\"p1 = \" + p1);\n\t\toptimize(p1);\n\t\tSystem.out.println(\"p2 = \" + p2);\n\t\toptimize(p2);\n\t\tSystem.out.println(\"p4 = \" + p4);\n\t\toptimize(p4);\n\t\t\n\t\tSystem.out.println(\"Propagate...\");\n\t\tSystem.out.println(\"p1 = \" + p1);\n\t\tHashMap env = new HashMap();\n\t\tpropagate(env,p1);\n  }\n  \n  public final static void main(String[] args) {\n    Pico2 test = new Pico2();\n    test.run();\n  }\n\n\tpublic void printCst(Expr expr) {\n\t\ttry {\n\t\t\t",TextPosition(86,155),TextPosition(114,25))),BQTermToCode(
Composite(CompositeBQTerm(BuildTerm(Name("TopDown"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("Try"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("stratPrintCst"),concBQTerm(),"default")))),"default")))),"default")))),TargetLanguageToCode(TL(".visitLight(expr);\n\t\t\t",TextPosition(114,55),TextPosition(115,25))),BQTermToCode(
Composite(CompositeBQTerm(BuildTerm(Name("TopDown"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("Try"),concBQTerm(
Composite(CompositeBQTerm(BuildConsList(Name("Sequence"),
Composite(CompositeBQTerm(BuildTerm(Name("FindCst"),concBQTerm(),"default"))),BuildConsList(Name("Sequence"),
Composite(CompositeBQTerm(BuildTerm(Name("PrintTree"),concBQTerm(),"default"))),BuildEmptyList(Name("Sequence"))))))),"default")))),"default")))),TargetLanguageToCode(TL(".visitLight(expr);\n\t\t} catch (VisitFailure e) {\n\t\t\tSystem.out.println(\"strategy failed\");\n\t\t}\n\t}\n\n\tpublic void optimize(Expr expr) {\n\t\ttry {\n\t\t\t//\140Sequence(TopDown(Try(stratRenameVar())),PrintTree()).visitLight(expr);\n\t\t\t//\140Repeat(Sequence(OnceBottomUp(stratRenameVar()),PrintTree())).visitLight(expr);\n\t\t\t//\140Repeat(Sequence(OnceBottomUp(Sequence(Not(RenamedVar()),stratRenameVar())),PrintTree())).visitLight(expr);\n\t\t\t//\140Sequence(Innermost(Sequence(Not(RenamedVar()),stratRenameVar())),PrintTree()).visitLight(expr);\n\n\t\t\t",TextPosition(115,71),TextPosition(128,25))),BQTermToCode(
Composite(CompositeBQTerm(BuildConsList(Name("Sequence"),
Composite(CompositeBQTerm(BuildTerm(Name("Innermost"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("OptIf"),concBQTerm(),"default")))),"default"))),BuildConsList(Name("Sequence"),
Composite(CompositeBQTerm(BuildTerm(Name("PrintTree"),concBQTerm(),"default"))),BuildEmptyList(Name("Sequence"))))))),TargetLanguageToCode(TL(".visitLight(expr);\n\t\t} catch (VisitFailure e) {\n\t\t\tSystem.out.println(\"strategy failed\");\n\t\t}\n\t}\n\n  ",TextPosition(128,66),TextPosition(134,3))),
DeclarationToCode(AbstractDecl(concDeclaration(Strategy(Name("stratPrintCst"),BuildTerm(Name("Fail"),concBQTerm(),"default"),concTomVisit(VisitTerm(Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraintInstruction(ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("Cst"),136,"Pico2.t")),concTomName(Name("Cst")),concSlot(PairSlotAppl(Name("val"),Variable(concOption(OriginTracking(Name("x"),136,"Pico2.t")),Name("x"),Type("int",TLType(" int ")),concConstraint()))),concConstraint()),BQVariable(concOption(),Name("tom__arg"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(\"cst: \" + ",TextPosition(136,35),TextPosition(136,66)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),136,"Pico2.t"),ModuleName("default")),Name("x"),Type("int",TLType(" int ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(136,69),TextPosition(136,71))))))),concOption(OriginalText(Name(""))))),concOption(OriginTracking(Name("Expr"),135,"Pico2.t")))),OriginTracking(Name("Strategy"),134,"Pico2.t")),SymbolDecl(Name("stratPrintCst"))))),
DeclarationToCode(AbstractDecl(concDeclaration(Strategy(Name("FindCst"),BuildTerm(Name("Fail"),concBQTerm(),"default"),concTomVisit(VisitTerm(Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraintInstruction(ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("Cst"),142,"Pico2.t")),concTomName(Name("Cst")),concSlot(PairSlotAppl(Name("val"),Variable(concOption(OriginTracking(Name("_"),142,"Pico2.t")),Name("_f_r_e_s_h_v_a_r_1"),Type("int",TLType(" int ")),concConstraint()))),concConstraint(AliasTo(Variable(concOption(OriginTracking(Name("c"),142,"Pico2.t")),Name("c"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint())))),BQVariable(concOption(),Name("tom__arg"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" return ",TextPosition(142,37),TextPosition(142,46)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("c"),142,"Pico2.t"),ModuleName("default")),Name("c"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),CodeToInstruction(TargetLanguageToCode(TL("; ",TextPosition(142,49),TextPosition(142,50))))))),concOption(OriginalText(Name(""))))),concOption(OriginTracking(Name("Expr"),141,"Pico2.t")))),OriginTracking(Name("Strategy"),140,"Pico2.t")),SymbolDecl(Name("FindCst"))))),
DeclarationToCode(AbstractDecl(concDeclaration(Strategy(Name("PrintTree"),BuildTerm(Name("Identity"),concBQTerm(),"default"),concTomVisit(VisitTerm(Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraintInstruction(ConstraintInstruction(MatchConstraint(Variable(concOption(OriginTracking(Name("x"),148,"Pico2.t")),Name("x"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint()),BQVariable(concOption(),Name("tom__arg"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(",TextPosition(148,30),TextPosition(148,51)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),148,"Pico2.t"),ModuleName("default")),Name("x"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(148,54),TextPosition(148,56))))))),concOption(OriginalText(Name(""))))),concOption(OriginTracking(Name("Expr"),147,"Pico2.t")))),OriginTracking(Name("Strategy"),146,"Pico2.t")),SymbolDecl(Name("PrintTree"))))),
DeclarationToCode(AbstractDecl(concDeclaration(Strategy(Name("stratRenameVar"),BuildTerm(Name("Fail"),concBQTerm(),"default"),concTomVisit(VisitTerm(Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraintInstruction(ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("Var"),154,"Pico2.t")),concTomName(Name("Var")),concSlot(PairSlotAppl(Name("name"),Variable(concOption(OriginTracking(Name("name"),154,"Pico2.t")),Name("name"),Type("String",TLType(" String ")),concConstraint()))),concConstraint()),BQVariable(concOption(),Name("tom__arg"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" return ",TextPosition(154,38),TextPosition(154,47)))),BQTermToInstruction(
Composite(CompositeBQTerm(BuildTerm(Name("Var"),concBQTerm(
Composite(CompositeTL(ITL("\"_\"")),CompositeTL(ITL("+")),CompositeBQTerm(BQVariable(concOption(OriginTracking(Name("name"),154,"Pico2.t"),ModuleName("default")),Name("name"),Type("String",TLType(" String ")))))),"default")))),CodeToInstruction(TargetLanguageToCode(TL("; ",TextPosition(154,61),TextPosition(154,63))))))),concOption(OriginalText(Name(""))))),concOption(OriginTracking(Name("Expr"),153,"Pico2.t")))),OriginTracking(Name("Strategy"),152,"Pico2.t")),SymbolDecl(Name("stratRenameVar"))))),
DeclarationToCode(AbstractDecl(concDeclaration(Strategy(Name("RenamedVar"),BuildTerm(Name("Fail"),concBQTerm(),"default"),concTomVisit(VisitTerm(Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraintInstruction(ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("Var"),160,"Pico2.t")),concTomName(Name("Var")),concSlot(PairSlotAppl(Name("name"),RecordAppl(concOption(OriginTracking(Name(""),160,"Pico2.t")),concTomName(Name("concString")),concSlot(PairSlotAppl(EmptyName(),RecordAppl(concOption(OriginTracking(Name("\'_\'"),160,"Pico2.t"),Constant()),concTomName(Name("\'_\'")),concSlot(),concConstraint())),PairSlotAppl(EmptyName(),VariableStar(concOption(OriginTracking(Name("_"),160,"Pico2.t")),Name("_f_r_e_s_h_v_a_r_2"),TypeWithSymbol("String",TLType(" String "),Name("concString")),concConstraint()))),concConstraint()))),concConstraint(AliasTo(Variable(concOption(OriginTracking(Name("v"),160,"Pico2.t")),Name("v"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint())))),BQVariable(concOption(),Name("tom__arg"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" return ",TextPosition(160,44),TextPosition(160,53)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("v"),160,"Pico2.t"),ModuleName("default")),Name("v"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),CodeToInstruction(TargetLanguageToCode(TL("; ",TextPosition(160,56),TextPosition(160,57))))))),concOption(OriginalText(Name(""))))),concOption(OriginTracking(Name("Expr"),159,"Pico2.t")))),OriginTracking(Name("Strategy"),158,"Pico2.t")),SymbolDecl(Name("RenamedVar"))))),
DeclarationToCode(AbstractDecl(concDeclaration(Strategy(Name("OptIf"),BuildTerm(Name("Fail"),concBQTerm(),"default"),concTomVisit(VisitTerm(Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraintInstruction(ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("If"),166,"Pico2.t")),concTomName(Name("If")),concSlot(PairSlotAppl(Name("cond"),RecordAppl(concOption(OriginTracking(Name("Neg"),166,"Pico2.t")),concTomName(Name("Neg")),concSlot(PairSlotAppl(Name("b"),Variable(concOption(OriginTracking(Name("b"),166,"Pico2.t")),Name("b"),Type("Bool",TLType(" master.pico2.term.types.Bool ")),concConstraint()))),concConstraint())),PairSlotAppl(Name("e1"),Variable(concOption(OriginTracking(Name("i1"),166,"Pico2.t")),Name("i1"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint())),PairSlotAppl(Name("e2"),Variable(concOption(OriginTracking(Name("i2"),166,"Pico2.t")),Name("i2"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint()))),concConstraint()),BQVariable(concOption(),Name("tom__arg"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" return ",TextPosition(166,45),TextPosition(166,54)))),BQTermToInstruction(
Composite(CompositeBQTerm(BuildTerm(Name("If"),concBQTerm(
Composite(CompositeBQTerm(BQVariable(concOption(OriginTracking(Name("b"),166,"Pico2.t"),ModuleName("default")),Name("b"),Type("Bool",TLType(" master.pico2.term.types.Bool "))))),
Composite(CompositeBQTerm(BQVariable(concOption(OriginTracking(Name("i2"),166,"Pico2.t"),ModuleName("default")),Name("i2"),Type("Expr",TLType(" master.pico2.term.types.Expr "))))),
Composite(CompositeBQTerm(BQVariable(concOption(OriginTracking(Name("i1"),166,"Pico2.t"),ModuleName("default")),Name("i1"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))))),"default")))),CodeToInstruction(TargetLanguageToCode(TL("; ",TextPosition(166,66),TextPosition(166,68))))))),concOption(OriginalText(Name(""))))),concOption(OriginTracking(Name("Expr"),165,"Pico2.t")))),OriginTracking(Name("Strategy"),164,"Pico2.t")),SymbolDecl(Name("OptIf"))))),TargetLanguageToCode(TL("\n\n\tpublic Expr propagate(HashMap env, Expr expr) {\n\t\ttry {\n\t\t\treturn (Expr) ",TextPosition(168,9),TextPosition(172,39))),BQTermToCode(
Composite(CompositeBQTerm(BuildTerm(Name("TopDown"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("Try"),concBQTerm(
Composite(CompositeBQTerm(BuildTerm(Name("PropagateCst"),concBQTerm(
Composite(CompositeBQTerm(BQVariable(concOption(OriginTracking(Name("env"),172,"Pico2.t"),ModuleName("default")),Name("env"),Type("unknown type",EmptyType()))))),"default")))),"default")))),"default")))),TargetLanguageToCode(TL(".visitLight(expr);\n\t\t} catch (VisitFailure e) {\n\t\t\tSystem.out.println(\"strategy failed\");\n\t\t}\n\t\treturn expr;\n\t}\n\n/*\n\tprivate boolean noAssign(String n, Expr expr) {\n\t\t%match(Expr I) {\n\t\t\tSeq(_*,Assign(name,_),_*) -> {\n\t\t\t\tif(name==n) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n*/\n\n\t",TextPosition(172,71),TextPosition(192,9))),
DeclarationToCode(AbstractDecl(concDeclaration(Strategy(Name("PropagateCst"),BuildTerm(Name("Fail"),concBQTerm(),"default"),concTomVisit(VisitTerm(Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraintInstruction(ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("Let"),194,"Pico2.t")),concTomName(Name("Let")),concSlot(PairSlotAppl(Name("name"),Variable(concOption(OriginTracking(Name("n"),194,"Pico2.t")),Name("n"),Type("String",TLType(" String ")),concConstraint())),PairSlotAppl(Name("e"),Variable(concOption(OriginTracking(Name("e"),194,"Pico2.t")),Name("e"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint())),PairSlotAppl(Name("body"),Variable(concOption(OriginTracking(Name("_"),194,"Pico2.t")),Name("_f_r_e_s_h_v_a_r_3"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint()))),concConstraint(AliasTo(Variable(concOption(OriginTracking(Name("l"),194,"Pico2.t")),Name("l"),Type("Expr",TLType(" master.pico2.term.types.Expr ")),concConstraint())))),BQVariable(concOption(),Name("tom__arg"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" \n\t\t\t\tExpr newE = (Expr) this.visitLight(",TextPosition(194,41),TextPosition(195,68)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("e"),195,"Pico2.t"),ModuleName("default")),Name("e"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),CodeToInstruction(TargetLanguageToCode(TL(");\n\t\t\t\tm.put(",TextPosition(195,71),TextPosition(196,39)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("n"),196,"Pico2.t"),ModuleName("default")),Name("n"),Type("String",TLType(" String ")))),CodeToInstruction(TargetLanguageToCode(TL(",newE);\n\t\t\t\treturn ",TextPosition(196,42),TextPosition(197,40)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("l"),197,"Pico2.t"),ModuleName("default")),Name("l"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),CodeToInstruction(TargetLanguageToCode(TL(";\n\t\t\t",TextPosition(197,43),TextPosition(198,25))))))),concOption(OriginalText(Name("")))),ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("Var"),200,"Pico2.t")),concTomName(Name("Var")),concSlot(PairSlotAppl(Name("name"),Variable(concOption(OriginTracking(Name("n"),200,"Pico2.t")),Name("n"),Type("String",TLType(" String ")),concConstraint()))),concConstraint()),BQVariable(concOption(),Name("tom__arg"),Type("Expr",TLType(" master.pico2.term.types.Expr ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL("\n\t\t\t\tif(m.containsKey(",TextPosition(200,35),TextPosition(201,50)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("n"),201,"Pico2.t"),ModuleName("default")),Name("n"),Type("String",TLType(" String ")))),CodeToInstruction(TargetLanguageToCode(TL(")) {\n\t\t\t\t\treturn (Expr) m.get(",TextPosition(201,53),TextPosition(202,61)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("n"),202,"Pico2.t"),ModuleName("default")),Name("n"),Type("String",TLType(" String ")))),CodeToInstruction(TargetLanguageToCode(TL(");\n\t\t\t\t}\n\t\t\t",TextPosition(202,64),TextPosition(204,25))))))),concOption(OriginalText(Name(""))))),concOption(OriginTracking(Name("Expr"),193,"Pico2.t")))),OriginTracking(Name("Strategy"),192,"Pico2.t")),SymbolDecl(Name("PropagateCst"))))),TargetLanguageToCode(TL("\n}\n",TextPosition(206,9),TextPosition(208,1)))))

import test5.test5.types.*;
public class Test5 {
  %gom {
    module Test5
      abstract syntax
      B = b()
        | f(B*)
  }

  public static void main(String[] args) {
    B tt = `f(f(b()));
    %match{
      !b() << tt -> { System.out.println(`tt); }
      f(x) << tt -> { System.out.println(`x); }
    }
  }
}


------------------------------------------------
=> SORTIE NEWTYPER:
Tom(concCode(TargetLanguageToCode(TL("import test5.test5.types.*;\npublic class Test5 {\n  ",TextPosition(1,1),TextPosition(3,3))),TomInclude(concCode(DeclarationToCode(TypeTermDecl(Name("B"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),6,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom")),Name("t1"),Type("B",TLType(" test5.test5.types.B "))),BQVariable(concOption(OriginTracking(Name("t2"),6,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom")),Name("t2"),Type("B",TLType(" test5.test5.types.B "))),Code(" ({0}=={1}) "),OriginTracking(Name("equals"),6,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),4,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom")),Name("t"),Type("B",TLType(" test5.test5.types.B "))),Code(" ({0} instanceof test5.test5.types.B) "),OriginTracking(Name("is_sort"),4,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom"))),OriginTracking(Name("B"),2,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom"))),DeclarationToCode(SymbolDecl(Name("b"))),DeclarationToCode(SymbolDecl(Name("Emptyf"))),DeclarationToCode(SymbolDecl(Name("Consf"))),DeclarationToCode(ListSymbolDecl(Name("f"))),TargetLanguageToCode(TL("\n",TextPosition(34,1),TextPosition(35,1))))),TargetLanguageToCode(TL("\n\n  public static void main(String[] args) {\n    B tt = ",TextPosition(8,4),TextPosition(11,12))),BQTermToCode(Composite(CompositeBQTerm(BuildConsList(Name("f"),Composite(CompositeBQTerm(BuildConsList(Name("f"),Composite(CompositeBQTerm(BuildTerm(Name("b"),concBQTerm(),"default"))),BuildEmptyList(Name("f"))))),BuildEmptyList(Name("f")))))),TargetLanguageToCode(TL(";\n    ",TextPosition(11,22),TextPosition(12,5))),InstructionToCode(Match(concConstraintInstruction(ConstraintInstruction(MatchConstraint(AntiTerm(RecordAppl(concOption(OriginTracking(Name("b"),13,"Test5.t")),concTomName(Name("b")),concSlot(),concConstraint())),BQVariable(concOption(OriginTracking(Name("tt"),13,"Test5.t")),Name("tt"),Type("B",TLType(" test5.test5.types.B ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(",TextPosition(13,21),TextPosition(13,42)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("tt"),13,"Test5.t"),ModuleName("default")),Name("tt"),Type("B",TLType(" test5.test5.types.B ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(13,46),TextPosition(13,48))))))),concOption(OriginTracking(Name("Pattern"),13,"Test5.t"),OriginalText(Name("")))),ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("f"),14,"Test5.t")),concTomName(Name("f")),concSlot(PairSlotAppl(EmptyName(),Variable(concOption(OriginTracking(Name("x"),14,"Test5.t")),Name("x"),Type("B",TLType(" test5.test5.types.B ")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("tt"),14,"Test5.t")),Name("tt"),Type("B",TLType(" test5.test5.types.B ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(",TextPosition(14,21),TextPosition(14,42)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),14,"Test5.t"),ModuleName("default")),Name("x"),Type("B",TLType(" test5.test5.types.B ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(14,45),TextPosition(14,47))))))),concOption(OriginTracking(Name("Pattern"),14,"Test5.t"),OriginalText(Name(""))))),concOption(OriginTracking(Name("Match"),12,"Test5.t"),ModuleName("default")))),TargetLanguageToCode(TL("\n  }\n}\n",TextPosition(15,5),TextPosition(18,1)))))

------------------------------------------------
=> SORTIE OLDTYPER:
Tom(concCode(TargetLanguageToCode(TL("import test5.test5.types.*;\npublic class Test5 {\n  ",TextPosition(1,1),TextPosition(3,3))),TomInclude(concCode(DeclarationToCode(TypeTermDecl(Name("B"),concDeclaration(EqualTermDecl(BQVariable(concOption(OriginTracking(Name("t1"),6,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom")),Name("t1"),Type("B",TLType(" test5.test5.types.B "))),BQVariable(concOption(OriginTracking(Name("t2"),6,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom")),Name("t2"),Type("B",TLType(" test5.test5.types.B "))),Code(" ({0}=={1}) "),OriginTracking(Name("equals"),6,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom")),IsSortDecl(BQVariable(concOption(OriginTracking(Name("t"),4,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom")),Name("t"),Type("B",TLType(" test5.test5.types.B "))),Code(" ({0} instanceof test5.test5.types.B) "),OriginTracking(Name("is_sort"),4,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom"))),OriginTracking(Name("B"),2,"/Users/claudia/Doctorat/tom/workspace/git-jtom/testsForNewTyper/test5/test5/Test5.tom"))),DeclarationToCode(SymbolDecl(Name("b"))),DeclarationToCode(SymbolDecl(Name("Emptyf"))),DeclarationToCode(SymbolDecl(Name("Consf"))),DeclarationToCode(ListSymbolDecl(Name("f"))),TargetLanguageToCode(TL("\n",TextPosition(34,1),TextPosition(35,1))))),TargetLanguageToCode(TL("\n\n  public static void main(String[] args) {\n    B tt = ",TextPosition(8,4),TextPosition(11,12))),BQTermToCode(Composite(CompositeBQTerm(BuildConsList(Name("f"),Composite(CompositeBQTerm(BuildConsList(Name("f"),Composite(CompositeBQTerm(BuildTerm(Name("b"),concBQTerm(),"default"))),BuildEmptyList(Name("f"))))),BuildEmptyList(Name("f")))))),TargetLanguageToCode(TL(";\n    ",TextPosition(11,22),TextPosition(12,5))),InstructionToCode(Match(concConstraintInstruction(ConstraintInstruction(MatchConstraint(AntiTerm(RecordAppl(concOption(OriginTracking(Name("b"),13,"Test5.t")),concTomName(Name("b")),concSlot(),concConstraint())),BQVariable(concOption(OriginTracking(Name("tt"),13,"Test5.t")),Name("tt"),Type("B",TLType(" test5.test5.types.B ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(",TextPosition(13,21),TextPosition(13,42)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("tt"),13,"Test5.t"),ModuleName("default")),Name("tt"),Type("unknown type",EmptyTargetLanguageType()))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(13,46),TextPosition(13,48))))))),concOption(OriginTracking(Name("Pattern"),13,"Test5.t"),OriginalText(Name("")))),ConstraintInstruction(MatchConstraint(RecordAppl(concOption(OriginTracking(Name("f"),14,"Test5.t")),concTomName(Name("f")),concSlot(PairSlotAppl(EmptyName(),Variable(concOption(OriginTracking(Name("x"),14,"Test5.t")),Name("x"),Type("B",TLType(" test5.test5.types.B ")),concConstraint()))),concConstraint()),BQVariable(concOption(OriginTracking(Name("tt"),14,"Test5.t")),Name("tt"),Type("B",TLType(" test5.test5.types.B ")))),RawAction(AbstractBlock(concInstruction(CodeToInstruction(TargetLanguageToCode(TL(" System.out.println(",TextPosition(14,21),TextPosition(14,42)))),BQTermToInstruction(BQVariable(concOption(OriginTracking(Name("x"),14,"Test5.t"),ModuleName("default")),Name("x"),Type("B",TLType(" test5.test5.types.B ")))),CodeToInstruction(TargetLanguageToCode(TL("); ",TextPosition(14,45),TextPosition(14,47))))))),concOption(OriginTracking(Name("Pattern"),14,"Test5.t"),OriginalText(Name(""))))),concOption(OriginTracking(Name("Match"),12,"Test5.t"),ModuleName("default")))),TargetLanguageToCode(TL("\n  }\n}\n",TextPosition(15,5),TextPosition(18,1)))))

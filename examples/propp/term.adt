[
constructor(RuleR,negd,negd),
constructor(RuleR,disjd,disjd),
constructor(RuleR,impd,impd),
constructor(RuleR,negg,negg),
constructor(RuleR,conjg,conjg),
constructor(RuleR,disjg,disjg),
constructor(RuleR,conjd,conjd),
constructor(RuleR,impg,impg),
constructor(RuleR,axiom,axiom),
constructor(RuleR,rulename,rulename(<name(str)>)),

constructor(Pred,EmptyP,EmptyP),
constructor(Pred,A,A),
constructor(Pred,B,B),
constructor(Pred,C,C),
constructor(Pred,D,D),
constructor(Pred,P,P),
constructor(Pred,Q,Q),
constructor(Pred,E,E),
constructor(Pred,pred,pred(<name(str)>)),

constructor(Pred,equiv,equiv(<left(Pred)>,<right(Pred)>)),
constructor(Pred,impl,impl(<left(Pred)>,<right(Pred)>)),
constructor(Pred,vee,vee(<left(Pred)>,<right(Pred)>)),
constructor(Pred,wedge,wedge(<left(Pred)>,<right(Pred)>)),
constructor(Pred,neg,neg(<p(Pred)>)),

constructor(Trace,rappl,rappl(<rule(RuleR)>,<subject(Sequent)>,<prod(ListSequent)>)),
constructor(Proof,hyp,hyp(<seq(Sequent)>)),
constructor(Proof,rule,rule(<rule(RuleR)>,<goal(Sequent)>,<lemm(ListProof)>)),
list(ListProof,Proof),

constructor(Sequent,PROOF,PROOF),
constructor(Sequent,END,END),
constructor(Sequent,seq,seq(<left(ListPred)>,<right(ListPred)>)),
list(ListPred,Pred),
list(ListSequent,Sequent)
]

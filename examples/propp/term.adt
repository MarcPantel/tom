[
constructor(Sequent,negd,negd(<pre(Sequent)>,<post(Sequent)>)),
constructor(Sequent,disjd,disjd(<pre(Sequent)>,<post(Sequent)>)),
constructor(Sequent,impd,impd(<pre(Sequent)>,<post(Sequent)>)),
constructor(Sequent,negg,negg(<pre(Sequent)>,<post(Sequent)>)),
constructor(Sequent,conjg,conjg(<pre(Sequent)>,<post(Sequent)>)),
constructor(Sequent,disjg,disjg(<pre(Sequent)>,<post1(Sequent)>,<post2(Sequent)>)),
constructor(Sequent,conjd,conjd(<pre(Sequent)>,<post1(Sequent)>,<post2(Sequent)>)),
constructor(Sequent,impg,impg(<pre(Sequent)>,<post1(Sequent)>,<post2(Sequent)>)),
constructor(Sequent,axiom,axiom(<pre(Sequent)>)),

constructor(Sequent,pair,pair(<rule(Sequent)>,<sequent(Sequent)>)),
constructor(Sequent,mbox,mbox(<rule(Sequent)>)),

constructor(Pred,EmptyP,EmptyP),
constructor(Pred,A,A),
constructor(Pred,B,B),
constructor(Pred,C,C),
constructor(Pred,D,D),
constructor(Pred,P,P),
constructor(Pred,Q,Q),
constructor(Pred,E,E),
constructor(Pred,pred,pred(<name(str)>)),

constructor(Pred,equiv,equiv(<left(Pred)>,<right(Pred)>)),
constructor(Pred,impl,impl(<left(Pred)>,<right(Pred)>)),
constructor(Pred,vee,vee(<left(Pred)>,<right(Pred)>)),
constructor(Pred,wedge,wedge(<left(Pred)>,<right(Pred)>)),
constructor(Pred,neg,neg(<p(Pred)>)),

constructor(Sequent,PROOF,PROOF),
constructor(Sequent,END,END),
constructor(Sequent,seq,seq(<left(ListPred)>,<right(ListPred)>)),
list(ListPred,Pred),
list(ListSequent,Sequent)
]

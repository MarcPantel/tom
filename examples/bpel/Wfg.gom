module Wfg
imports String int
abstract syntax

Wfg = WfgNode(Wfg*)
    | Activity(name:String,inputcond:Condition,outputcond:Condition)
    | ConcWfg(Wfg*)
    | labWfg(label:String,wfg:Wfg)
    | refWfg(label:String)
    | posWfg(int*)
    | expWfg(wfg:Wfg)
    | Empty()

Condition = and(c1:Condition,c2:Condition) 
          | or(c1:Condition,c2:Condition)
          | xor(c1:Condition,c2:Condition)
          | cond(wfg:Wfg)
          | noCond()


expWfg:make(wfg) {
  bpel.wfg.types.Wfg wfgWithPos = bpel.Tool.expand(wfg);
  //to avoid unaccessible real_make statement
  if(! wfgWithPos.equals(wfg)){
    return wfgWithPos;
  }
  if(wfgWithPos.equals(wfg)){
    return wfg;
  }
}

WfgNode:make_insert(node,wfg) {
  %match(Wfg node){
    ConcWfg(_*,e,_*) -> {
      System.out.println("ici e = " + `e);
      wfg = `WfgNode(wfg*,e);
    }
    ConcWfg(_*) -> {
      return wfg;
    }
  }
}

posWfg:interface{
  tom.library.strategy.mutraveler.MuReference
}

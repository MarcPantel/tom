
%op Strategy AllRelativeRefSensitive(v:Visitable,s:Strategy) {
  is_fsym(t) { (t instanceof AllRelativeRefSensitive) }
  make(v,s) { new AllRelativeRefSensitive(v,s) }
}

%op Strategy OneRelativeRefSensitive(v:Visitable,s:Strategy) {
  is_fsym(t) { (t instanceof OneRelativeRefSensitive) }
  make(v,s) { new OneRelativeRefSensitive(v,s) }
}

%op Strategy OneRefSensitive(v:Visitable,s:Strategy) {
  is_fsym(t) { (t instanceof OneRefSensitive) }
  make(v,s) { new OneRefSensitive(v,s) }
}


%op Strategy TopDownRef(v:Visitable,s1:Strategy) {
  make(v,s1) { `mu(MuVar("_x"),Sequence(s1,AllRelativeRefSensitive(v,MuVar("_x")))) }
}


%op Strategy AU(v:Visitable,s1:Strategy, s2:Strategy) {
  make(v,s1,s2) { `mu(MuVar("x"),Choice(s2,Sequence(Sequence(s1,AllRelativeRefSensitive(v,MuVar("x"))),OneRef(v,Identity()))))}
}

%op Strategy EU(v:Visitable,s1:Strategy, s2:Strategy) {
  make(v,s1,s2) { `mu(MuVar("x"),Choice(s2,Sequence(Sequence(s1,OneRef(MuVar("x"))),OneRef(v,Identity()))))}
}

%op Strategy TrueCtl(){
  make() {`Identity() }
}


%op Strategy FalseCtl(){
  make() {`Fail() }
}

%op Strategy AndCtl(s1:Strategy, s2:Strategy) {
  make(s1,s2) {`Sequence(s1,s2) }
}

%op Strategy OrCtl(s1:Strategy, s2:Strategy) {
  make(s1,s2) {`Choice(s1,s2)}
}

%op Strategy AF(v:Visitable,s:Strategy) {
  make(v,s) {`AU(v,Identity(),s) }
}

%op Strategy EF(v:Visitable,s:Strategy) {
  make(v,s) {`EU(v,Identity(),s) }
}

%op Strategy AX(v:Visitable,s:Strategy) {
  make(v,s) { `AllRelativeRefSensitive(v,s) }
}

%op Strategy EX(v:Visitable,s:Strategy) {
  make(v,s) {`OneRef(v,s) }
}


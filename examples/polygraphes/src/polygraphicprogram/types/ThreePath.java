/* Generated by TOM (version 20071002 (src)): Do not edit this file */

package polygraphicprogram.types;        

//import polygraphicprogram.types.threepath.*;
//import polygraphicprogram.*;

public abstract class ThreePath extends polygraphicprogram.PolygraphicProgramAbstractType {

public OnePath oneSource(){

if (tom_is_sort_ThreePath(this)) {
{  polygraphicprogram.types.ThreePath  tomMatch82NameNumberfreshSubject_1=(( polygraphicprogram.types.ThreePath )this);
if (tom_is_fun_sym_ThreeId(tomMatch82NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.TwoPath  tomMatch82NameNumber_freshVar_0=tom_get_slot_ThreeId_twoPath(tomMatch82NameNumberfreshSubject_1);
if ( true ) {
return 
tomMatch82NameNumber_freshVar_0.source(); 

}
}
} else {
if (tom_is_fun_sym_ThreeCell(tomMatch82NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.TwoPath  tomMatch82NameNumber_freshVar_1=tom_get_slot_ThreeCell_Source(tomMatch82NameNumberfreshSubject_1);
if ( true ) {
return 
tomMatch82NameNumber_freshVar_1.source(); 

}
}
} else {
if (tom_is_fun_sym_ThreeC0(tomMatch82NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch82NameNumber_freshVar_2=tomMatch82NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC0_ThreePath(tomMatch82NameNumber_freshVar_2) || tom_equal_term_ThreePath(tomMatch82NameNumber_freshVar_2, tom_empty_list_ThreeC0()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch82NameNumber_freshVar_3=((tom_is_fun_sym_ThreeC0(tomMatch82NameNumber_freshVar_2))?(tom_get_tail_ThreeC0_ThreePath(tomMatch82NameNumber_freshVar_2)):(tom_empty_list_ThreeC0()));
if ( true ) {
return 
tom_cons_list_OneC0(((tom_is_fun_sym_ThreeC0(tomMatch82NameNumber_freshVar_2))?(tom_get_head_ThreeC0_ThreePath(tomMatch82NameNumber_freshVar_2)):(tomMatch82NameNumber_freshVar_2)).oneSource(),tom_append_list_OneC0(tomMatch82NameNumber_freshVar_3.oneSource(),tom_empty_list_OneC0())); 

}
}
}
}
}
if (tom_is_fun_sym_ThreeC1(tomMatch82NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch82NameNumber_freshVar_6=tomMatch82NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC1_ThreePath(tomMatch82NameNumber_freshVar_6) || tom_equal_term_ThreePath(tomMatch82NameNumber_freshVar_6, tom_empty_list_ThreeC1()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch82NameNumber_freshVar_7=((tom_is_fun_sym_ThreeC1(tomMatch82NameNumber_freshVar_6))?(tom_get_tail_ThreeC1_ThreePath(tomMatch82NameNumber_freshVar_6)):(tom_empty_list_ThreeC1()));
if ( true ) {
return 
((tom_is_fun_sym_ThreeC1(tomMatch82NameNumber_freshVar_6))?(tom_get_head_ThreeC1_ThreePath(tomMatch82NameNumber_freshVar_6)):(tomMatch82NameNumber_freshVar_6)).oneSource(); 

}
}
}
}
}
if (tom_is_fun_sym_ThreeC2(tomMatch82NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch82NameNumber_freshVar_10=tomMatch82NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC2_ThreePath(tomMatch82NameNumber_freshVar_10) || tom_equal_term_ThreePath(tomMatch82NameNumber_freshVar_10, tom_empty_list_ThreeC2()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch82NameNumber_freshVar_11=((tom_is_fun_sym_ThreeC2(tomMatch82NameNumber_freshVar_10))?(tom_get_tail_ThreeC2_ThreePath(tomMatch82NameNumber_freshVar_10)):(tom_empty_list_ThreeC2()));
if ( true ) {
return 
((tom_is_fun_sym_ThreeC2(tomMatch82NameNumber_freshVar_10))?(tom_get_head_ThreeC2_ThreePath(tomMatch82NameNumber_freshVar_10)):(tomMatch82NameNumber_freshVar_10)).oneSource(); 

}
}
}
}
}

}
}
}
}

//return `OneId();
throw new tom.engine.exception.TomRuntimeException("strange term: "+this);
}

public OnePath oneTarget(){

if (tom_is_sort_ThreePath(this)) {
{  polygraphicprogram.types.ThreePath  tomMatch83NameNumberfreshSubject_1=(( polygraphicprogram.types.ThreePath )this);
if (tom_is_fun_sym_ThreeId(tomMatch83NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.TwoPath  tomMatch83NameNumber_freshVar_0=tom_get_slot_ThreeId_twoPath(tomMatch83NameNumberfreshSubject_1);
if ( true ) {
return 
tomMatch83NameNumber_freshVar_0.target(); 

}
}
} else {
if (tom_is_fun_sym_ThreeCell(tomMatch83NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.TwoPath  tomMatch83NameNumber_freshVar_1=tom_get_slot_ThreeCell_Target(tomMatch83NameNumberfreshSubject_1);
if ( true ) {
return 
tomMatch83NameNumber_freshVar_1.target(); 

}
}
} else {
if (tom_is_fun_sym_ThreeC0(tomMatch83NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch83NameNumber_freshVar_2=tomMatch83NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC0_ThreePath(tomMatch83NameNumber_freshVar_2) || tom_equal_term_ThreePath(tomMatch83NameNumber_freshVar_2, tom_empty_list_ThreeC0()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch83NameNumber_freshVar_3=((tom_is_fun_sym_ThreeC0(tomMatch83NameNumber_freshVar_2))?(tom_get_tail_ThreeC0_ThreePath(tomMatch83NameNumber_freshVar_2)):(tom_empty_list_ThreeC0()));
if ( true ) {
return 
tom_cons_list_OneC0(((tom_is_fun_sym_ThreeC0(tomMatch83NameNumber_freshVar_2))?(tom_get_head_ThreeC0_ThreePath(tomMatch83NameNumber_freshVar_2)):(tomMatch83NameNumber_freshVar_2)).oneTarget(),tom_append_list_OneC0(tomMatch83NameNumber_freshVar_3.oneTarget(),tom_empty_list_OneC0())); 

}
}
}
}
}
if (tom_is_fun_sym_ThreeC1(tomMatch83NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch83NameNumber_freshVar_6=tomMatch83NameNumberfreshSubject_1;
{  polygraphicprogram.types.ThreePath  tomMatch83NameNumber_begin_8=tomMatch83NameNumber_freshVar_6;
{  polygraphicprogram.types.ThreePath  tomMatch83NameNumber_end_9=tomMatch83NameNumber_freshVar_6;
do {
{
{  polygraphicprogram.types.ThreePath  tomMatch83NameNumber_freshVar_7=tomMatch83NameNumber_end_9;
if (!( ( tom_is_empty_ThreeC1_ThreePath(tomMatch83NameNumber_freshVar_7) || tom_equal_term_ThreePath(tomMatch83NameNumber_freshVar_7, tom_empty_list_ThreeC1()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch83NameNumber_freshVar_10=((tom_is_fun_sym_ThreeC1(tomMatch83NameNumber_freshVar_7))?(tom_get_tail_ThreeC1_ThreePath(tomMatch83NameNumber_freshVar_7)):(tom_empty_list_ThreeC1()));
if ( ( tom_is_empty_ThreeC1_ThreePath(tomMatch83NameNumber_freshVar_10) || tom_equal_term_ThreePath(tomMatch83NameNumber_freshVar_10, tom_empty_list_ThreeC1()) ) ) {
if ( true ) {
return 
((tom_is_fun_sym_ThreeC1(tomMatch83NameNumber_freshVar_7))?(tom_get_head_ThreeC1_ThreePath(tomMatch83NameNumber_freshVar_7)):(tomMatch83NameNumber_freshVar_7)).oneTarget(); 

}
}
}
}
}
if ( ( tom_is_empty_ThreeC1_ThreePath(tomMatch83NameNumber_end_9) || tom_equal_term_ThreePath(tomMatch83NameNumber_end_9, tom_empty_list_ThreeC1()) ) ) {
tomMatch83NameNumber_end_9=tomMatch83NameNumber_begin_8;
} else {
tomMatch83NameNumber_end_9=((tom_is_fun_sym_ThreeC1(tomMatch83NameNumber_end_9))?(tom_get_tail_ThreeC1_ThreePath(tomMatch83NameNumber_end_9)):(tom_empty_list_ThreeC1()));
}

}
} while(!(tom_equal_term_ThreePath(tomMatch83NameNumber_end_9, tomMatch83NameNumber_begin_8)));
}
}
}
}
if (tom_is_fun_sym_ThreeC2(tomMatch83NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch83NameNumber_freshVar_12=tomMatch83NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC2_ThreePath(tomMatch83NameNumber_freshVar_12) || tom_equal_term_ThreePath(tomMatch83NameNumber_freshVar_12, tom_empty_list_ThreeC2()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch83NameNumber_freshVar_13=((tom_is_fun_sym_ThreeC2(tomMatch83NameNumber_freshVar_12))?(tom_get_tail_ThreeC2_ThreePath(tomMatch83NameNumber_freshVar_12)):(tom_empty_list_ThreeC2()));
if ( true ) {
return 
((tom_is_fun_sym_ThreeC2(tomMatch83NameNumber_freshVar_12))?(tom_get_head_ThreeC2_ThreePath(tomMatch83NameNumber_freshVar_12)):(tomMatch83NameNumber_freshVar_12)).oneTarget(); 

}
}
}
}
}

}
}
}
}

//return `OneId();
throw new tom.engine.exception.TomRuntimeException("strange term: "+this);
}

public TwoPath source(){

if (tom_is_sort_ThreePath(this)) {
{  polygraphicprogram.types.ThreePath  tomMatch84NameNumberfreshSubject_1=(( polygraphicprogram.types.ThreePath )this);
if (tom_is_fun_sym_ThreeId(tomMatch84NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.TwoPath  tomMatch84NameNumber_freshVar_0=tom_get_slot_ThreeId_twoPath(tomMatch84NameNumberfreshSubject_1);
if ( true ) {
return 
tomMatch84NameNumber_freshVar_0; 

}
}
} else {
if (tom_is_fun_sym_ThreeCell(tomMatch84NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.TwoPath  tomMatch84NameNumber_freshVar_1=tom_get_slot_ThreeCell_Source(tomMatch84NameNumberfreshSubject_1);
if ( true ) {
return 
tomMatch84NameNumber_freshVar_1; 

}
}
} else {
if (tom_is_fun_sym_ThreeC0(tomMatch84NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch84NameNumber_freshVar_2=tomMatch84NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC0_ThreePath(tomMatch84NameNumber_freshVar_2) || tom_equal_term_ThreePath(tomMatch84NameNumber_freshVar_2, tom_empty_list_ThreeC0()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch84NameNumber_freshVar_3=((tom_is_fun_sym_ThreeC0(tomMatch84NameNumber_freshVar_2))?(tom_get_tail_ThreeC0_ThreePath(tomMatch84NameNumber_freshVar_2)):(tom_empty_list_ThreeC0()));
if ( true ) {
return 
tom_cons_list_TwoC0(((tom_is_fun_sym_ThreeC0(tomMatch84NameNumber_freshVar_2))?(tom_get_head_ThreeC0_ThreePath(tomMatch84NameNumber_freshVar_2)):(tomMatch84NameNumber_freshVar_2)).source(),tom_append_list_TwoC0(tomMatch84NameNumber_freshVar_3.source(),tom_empty_list_TwoC0())); 

}
}
}
}
}
if (tom_is_fun_sym_ThreeC1(tomMatch84NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch84NameNumber_freshVar_6=tomMatch84NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC1_ThreePath(tomMatch84NameNumber_freshVar_6) || tom_equal_term_ThreePath(tomMatch84NameNumber_freshVar_6, tom_empty_list_ThreeC1()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch84NameNumber_freshVar_7=((tom_is_fun_sym_ThreeC1(tomMatch84NameNumber_freshVar_6))?(tom_get_tail_ThreeC1_ThreePath(tomMatch84NameNumber_freshVar_6)):(tom_empty_list_ThreeC1()));
if ( true ) {
return 
tom_cons_list_TwoC1(((tom_is_fun_sym_ThreeC1(tomMatch84NameNumber_freshVar_6))?(tom_get_head_ThreeC1_ThreePath(tomMatch84NameNumber_freshVar_6)):(tomMatch84NameNumber_freshVar_6)).source(),tom_append_list_TwoC1(tomMatch84NameNumber_freshVar_7.source(),tom_empty_list_TwoC1())); 

}
}
}
}
}
if (tom_is_fun_sym_ThreeC2(tomMatch84NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch84NameNumber_freshVar_10=tomMatch84NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC2_ThreePath(tomMatch84NameNumber_freshVar_10) || tom_equal_term_ThreePath(tomMatch84NameNumber_freshVar_10, tom_empty_list_ThreeC2()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch84NameNumber_freshVar_11=((tom_is_fun_sym_ThreeC2(tomMatch84NameNumber_freshVar_10))?(tom_get_tail_ThreeC2_ThreePath(tomMatch84NameNumber_freshVar_10)):(tom_empty_list_ThreeC2()));
if ( true ) {
return 
((tom_is_fun_sym_ThreeC2(tomMatch84NameNumber_freshVar_10))?(tom_get_head_ThreeC2_ThreePath(tomMatch84NameNumber_freshVar_10)):(tomMatch84NameNumber_freshVar_10)).source(); 

}
}
}
}
}

}
}
}
}

//return `TwoId(OneId());
throw new tom.engine.exception.TomRuntimeException("strange term: "+this);
}

public TwoPath target(){

if (tom_is_sort_ThreePath(this)) {
{  polygraphicprogram.types.ThreePath  tomMatch85NameNumberfreshSubject_1=(( polygraphicprogram.types.ThreePath )this);
if (tom_is_fun_sym_ThreeId(tomMatch85NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.TwoPath  tomMatch85NameNumber_freshVar_0=tom_get_slot_ThreeId_twoPath(tomMatch85NameNumberfreshSubject_1);
if ( true ) {
return 
tomMatch85NameNumber_freshVar_0; 

}
}
} else {
if (tom_is_fun_sym_ThreeCell(tomMatch85NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.TwoPath  tomMatch85NameNumber_freshVar_1=tom_get_slot_ThreeCell_Target(tomMatch85NameNumberfreshSubject_1);
if ( true ) {
return 
tomMatch85NameNumber_freshVar_1; 

}
}
} else {
if (tom_is_fun_sym_ThreeC0(tomMatch85NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch85NameNumber_freshVar_2=tomMatch85NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC0_ThreePath(tomMatch85NameNumber_freshVar_2) || tom_equal_term_ThreePath(tomMatch85NameNumber_freshVar_2, tom_empty_list_ThreeC0()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch85NameNumber_freshVar_3=((tom_is_fun_sym_ThreeC0(tomMatch85NameNumber_freshVar_2))?(tom_get_tail_ThreeC0_ThreePath(tomMatch85NameNumber_freshVar_2)):(tom_empty_list_ThreeC0()));
if ( true ) {
return 
tom_cons_list_TwoC0(((tom_is_fun_sym_ThreeC0(tomMatch85NameNumber_freshVar_2))?(tom_get_head_ThreeC0_ThreePath(tomMatch85NameNumber_freshVar_2)):(tomMatch85NameNumber_freshVar_2)).target(),tom_append_list_TwoC0(tomMatch85NameNumber_freshVar_3.target(),tom_empty_list_TwoC0())); 

}
}
}
}
}
if (tom_is_fun_sym_ThreeC1(tomMatch85NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch85NameNumber_freshVar_6=tomMatch85NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC1_ThreePath(tomMatch85NameNumber_freshVar_6) || tom_equal_term_ThreePath(tomMatch85NameNumber_freshVar_6, tom_empty_list_ThreeC1()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch85NameNumber_freshVar_7=((tom_is_fun_sym_ThreeC1(tomMatch85NameNumber_freshVar_6))?(tom_get_tail_ThreeC1_ThreePath(tomMatch85NameNumber_freshVar_6)):(tom_empty_list_ThreeC1()));
if ( true ) {
return 
tom_cons_list_TwoC1(((tom_is_fun_sym_ThreeC1(tomMatch85NameNumber_freshVar_6))?(tom_get_head_ThreeC1_ThreePath(tomMatch85NameNumber_freshVar_6)):(tomMatch85NameNumber_freshVar_6)).target(),tom_append_list_TwoC1(tomMatch85NameNumber_freshVar_7.target(),tom_empty_list_TwoC1())); 

}
}
}
}
}
if (tom_is_fun_sym_ThreeC2(tomMatch85NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch85NameNumber_freshVar_10=tomMatch85NameNumberfreshSubject_1;
{  polygraphicprogram.types.ThreePath  tomMatch85NameNumber_begin_12=tomMatch85NameNumber_freshVar_10;
{  polygraphicprogram.types.ThreePath  tomMatch85NameNumber_end_13=tomMatch85NameNumber_freshVar_10;
do {
{
{  polygraphicprogram.types.ThreePath  tomMatch85NameNumber_freshVar_11=tomMatch85NameNumber_end_13;
if (!( ( tom_is_empty_ThreeC2_ThreePath(tomMatch85NameNumber_freshVar_11) || tom_equal_term_ThreePath(tomMatch85NameNumber_freshVar_11, tom_empty_list_ThreeC2()) ) )) {
{  polygraphicprogram.types.ThreePath  tomMatch85NameNumber_freshVar_14=((tom_is_fun_sym_ThreeC2(tomMatch85NameNumber_freshVar_11))?(tom_get_tail_ThreeC2_ThreePath(tomMatch85NameNumber_freshVar_11)):(tom_empty_list_ThreeC2()));
if ( ( tom_is_empty_ThreeC2_ThreePath(tomMatch85NameNumber_freshVar_14) || tom_equal_term_ThreePath(tomMatch85NameNumber_freshVar_14, tom_empty_list_ThreeC2()) ) ) {
if ( true ) {
return 
((tom_is_fun_sym_ThreeC2(tomMatch85NameNumber_freshVar_11))?(tom_get_head_ThreeC2_ThreePath(tomMatch85NameNumber_freshVar_11)):(tomMatch85NameNumber_freshVar_11)).target(); 

}
}
}
}
}
if ( ( tom_is_empty_ThreeC2_ThreePath(tomMatch85NameNumber_end_13) || tom_equal_term_ThreePath(tomMatch85NameNumber_end_13, tom_empty_list_ThreeC2()) ) ) {
tomMatch85NameNumber_end_13=tomMatch85NameNumber_begin_12;
} else {
tomMatch85NameNumber_end_13=((tom_is_fun_sym_ThreeC2(tomMatch85NameNumber_end_13))?(tom_get_tail_ThreeC2_ThreePath(tomMatch85NameNumber_end_13)):(tom_empty_list_ThreeC2()));
}

}
} while(!(tom_equal_term_ThreePath(tomMatch85NameNumber_end_13, tomMatch85NameNumber_begin_12)));
}
}
}
}

}
}
}
}

//return `TwoId(OneId());
throw new tom.engine.exception.TomRuntimeException("strange term: "+this);
}

public boolean defined(){

if (tom_is_sort_ThreePath(this)) {
{  polygraphicprogram.types.ThreePath  tomMatch86NameNumberfreshSubject_1=(( polygraphicprogram.types.ThreePath )this);
if (tom_is_fun_sym_ThreeCell(tomMatch86NameNumberfreshSubject_1)) {
if ( true ) {
return true; 
}
} else {
if (tom_is_fun_sym_ThreeC0(tomMatch86NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch86NameNumber_freshVar_0=tomMatch86NameNumberfreshSubject_1;
if ( true ) {
return true; 
}
}
}
if (tom_is_fun_sym_ThreeC1(tomMatch86NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch86NameNumber_freshVar_2=tomMatch86NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC1_ThreePath(tomMatch86NameNumber_freshVar_2) || tom_equal_term_ThreePath(tomMatch86NameNumber_freshVar_2, tom_empty_list_ThreeC1()) ) )) {
if (tom_is_fun_sym_ThreeCell(((tom_is_fun_sym_ThreeC1(tomMatch86NameNumber_freshVar_2))?(tom_get_head_ThreeC1_ThreePath(tomMatch86NameNumber_freshVar_2)):(tomMatch86NameNumber_freshVar_2)))) {
{  polygraphicprogram.types.TwoPath  tomMatch86NameNumber_freshVar_7=tom_get_slot_ThreeCell_Source(((tom_is_fun_sym_ThreeC1(tomMatch86NameNumber_freshVar_2))?(tom_get_head_ThreeC1_ThreePath(tomMatch86NameNumber_freshVar_2)):(tomMatch86NameNumber_freshVar_2)));
{  polygraphicprogram.types.ThreePath  tomMatch86NameNumber_freshVar_3=((tom_is_fun_sym_ThreeC1(tomMatch86NameNumber_freshVar_2))?(tom_get_tail_ThreeC1_ThreePath(tomMatch86NameNumber_freshVar_2)):(tom_empty_list_ThreeC1()));
if (!( ( tom_is_empty_ThreeC1_ThreePath(tomMatch86NameNumber_freshVar_3) || tom_equal_term_ThreePath(tomMatch86NameNumber_freshVar_3, tom_empty_list_ThreeC1()) ) )) {
if (tom_is_fun_sym_ThreeCell(((tom_is_fun_sym_ThreeC1(tomMatch86NameNumber_freshVar_3))?(tom_get_head_ThreeC1_ThreePath(tomMatch86NameNumber_freshVar_3)):(tomMatch86NameNumber_freshVar_3)))) {
{  polygraphicprogram.types.TwoPath  tomMatch86NameNumber_freshVar_8=tom_get_slot_ThreeCell_Source(((tom_is_fun_sym_ThreeC1(tomMatch86NameNumber_freshVar_3))?(tom_get_head_ThreeC1_ThreePath(tomMatch86NameNumber_freshVar_3)):(tomMatch86NameNumber_freshVar_3)));
{  polygraphicprogram.types.ThreePath  tomMatch86NameNumber_freshVar_4=((tom_is_fun_sym_ThreeC1(tomMatch86NameNumber_freshVar_3))?(tom_get_tail_ThreeC1_ThreePath(tomMatch86NameNumber_freshVar_3)):(tom_empty_list_ThreeC1()));
if ( true ) {
return 
tomMatch86NameNumber_freshVar_7.target()==
tomMatch86NameNumber_freshVar_8.source()&&
tomMatch86NameNumber_freshVar_4.defined();

}
}
}
}
}
}
}
}
}
}
}
if (tom_is_fun_sym_ThreeC2(tomMatch86NameNumberfreshSubject_1)) {
{  polygraphicprogram.types.ThreePath  tomMatch86NameNumber_freshVar_10=tomMatch86NameNumberfreshSubject_1;
if (!( ( tom_is_empty_ThreeC2_ThreePath(tomMatch86NameNumber_freshVar_10) || tom_equal_term_ThreePath(tomMatch86NameNumber_freshVar_10, tom_empty_list_ThreeC2()) ) )) {
if (tom_is_fun_sym_ThreeCell(((tom_is_fun_sym_ThreeC2(tomMatch86NameNumber_freshVar_10))?(tom_get_head_ThreeC2_ThreePath(tomMatch86NameNumber_freshVar_10)):(tomMatch86NameNumber_freshVar_10)))) {
{  polygraphicprogram.types.TwoPath  tomMatch86NameNumber_freshVar_15=tom_get_slot_ThreeCell_Target(((tom_is_fun_sym_ThreeC2(tomMatch86NameNumber_freshVar_10))?(tom_get_head_ThreeC2_ThreePath(tomMatch86NameNumber_freshVar_10)):(tomMatch86NameNumber_freshVar_10)));
{  polygraphicprogram.types.ThreePath  tomMatch86NameNumber_freshVar_11=((tom_is_fun_sym_ThreeC2(tomMatch86NameNumber_freshVar_10))?(tom_get_tail_ThreeC2_ThreePath(tomMatch86NameNumber_freshVar_10)):(tom_empty_list_ThreeC2()));
if (!( ( tom_is_empty_ThreeC2_ThreePath(tomMatch86NameNumber_freshVar_11) || tom_equal_term_ThreePath(tomMatch86NameNumber_freshVar_11, tom_empty_list_ThreeC2()) ) )) {
if (tom_is_fun_sym_ThreeCell(((tom_is_fun_sym_ThreeC2(tomMatch86NameNumber_freshVar_11))?(tom_get_head_ThreeC2_ThreePath(tomMatch86NameNumber_freshVar_11)):(tomMatch86NameNumber_freshVar_11)))) {
{  polygraphicprogram.types.TwoPath  tomMatch86NameNumber_freshVar_16=tom_get_slot_ThreeCell_Source(((tom_is_fun_sym_ThreeC2(tomMatch86NameNumber_freshVar_11))?(tom_get_head_ThreeC2_ThreePath(tomMatch86NameNumber_freshVar_11)):(tomMatch86NameNumber_freshVar_11)));
{  polygraphicprogram.types.ThreePath  tomMatch86NameNumber_freshVar_12=((tom_is_fun_sym_ThreeC2(tomMatch86NameNumber_freshVar_11))?(tom_get_tail_ThreeC2_ThreePath(tomMatch86NameNumber_freshVar_11)):(tom_empty_list_ThreeC2()));
if ( true ) {
return 
tomMatch86NameNumber_freshVar_15==
tomMatch86NameNumber_freshVar_16&&
tomMatch86NameNumber_freshVar_12.defined();

}
}
}
}
}
}
}
}
}
}
}

}
}
}

return false;
}

@Override
public polygraphicprogram.PolygraphicProgramAbstractType accept(polygraphicprogram.PolygraphicProgramVisitor v) throws tom.library.sl.VisitFailure {
return v.visit_ThreePath(this);
}

public boolean isThreeId() {
return false;
}


public boolean isThreeCell() {
return false;
}


public boolean isConsThreeC0() {
return false;
}


public boolean isEmptyThreeC0() {
return false;
}


public boolean isConsThreeC1() {
return false;
}


public boolean isEmptyThreeC1() {
return false;
}


public boolean isConsThreeC2() {
return false;
}


public boolean isEmptyThreeC2() {
return false;
}


public polygraphicprogram.types.ThreePath getTailThreeC0() {
throw new UnsupportedOperationException("This ThreePath has no TailThreeC0");
}

public ThreePath setTailThreeC0(polygraphicprogram.types.ThreePath _arg) {
throw new UnsupportedOperationException("This ThreePath has no TailThreeC0");
}


public polygraphicprogram.types.ThreePath getHeadThreeC1() {
throw new UnsupportedOperationException("This ThreePath has no HeadThreeC1");
}

public ThreePath setHeadThreeC1(polygraphicprogram.types.ThreePath _arg) {
throw new UnsupportedOperationException("This ThreePath has no HeadThreeC1");
}


public polygraphicprogram.types.ThreePath getHeadThreeC2() {
throw new UnsupportedOperationException("This ThreePath has no HeadThreeC2");
}

public ThreePath setHeadThreeC2(polygraphicprogram.types.ThreePath _arg) {
throw new UnsupportedOperationException("This ThreePath has no HeadThreeC2");
}


public polygraphicprogram.types.CellType getType() {
throw new UnsupportedOperationException("This ThreePath has no Type");
}

public ThreePath setType(polygraphicprogram.types.CellType _arg) {
throw new UnsupportedOperationException("This ThreePath has no Type");
}


public polygraphicprogram.types.TwoPath getSource() {
throw new UnsupportedOperationException("This ThreePath has no Source");
}

public ThreePath setSource(polygraphicprogram.types.TwoPath _arg) {
throw new UnsupportedOperationException("This ThreePath has no Source");
}


public polygraphicprogram.types.ThreePath getHeadThreeC0() {
throw new UnsupportedOperationException("This ThreePath has no HeadThreeC0");
}

public ThreePath setHeadThreeC0(polygraphicprogram.types.ThreePath _arg) {
throw new UnsupportedOperationException("This ThreePath has no HeadThreeC0");
}


public polygraphicprogram.types.ThreePath getTailThreeC1() {
throw new UnsupportedOperationException("This ThreePath has no TailThreeC1");
}

public ThreePath setTailThreeC1(polygraphicprogram.types.ThreePath _arg) {
throw new UnsupportedOperationException("This ThreePath has no TailThreeC1");
}


public polygraphicprogram.types.TwoPath gettwoPath() {
throw new UnsupportedOperationException("This ThreePath has no twoPath");
}

public ThreePath settwoPath(polygraphicprogram.types.TwoPath _arg) {
throw new UnsupportedOperationException("This ThreePath has no twoPath");
}


public String getName() {
throw new UnsupportedOperationException("This ThreePath has no Name");
}

public ThreePath setName(String _arg) {
throw new UnsupportedOperationException("This ThreePath has no Name");
}


public polygraphicprogram.types.ThreePath getTailThreeC2() {
throw new UnsupportedOperationException("This ThreePath has no TailThreeC2");
}

public ThreePath setTailThreeC2(polygraphicprogram.types.ThreePath _arg) {
throw new UnsupportedOperationException("This ThreePath has no TailThreeC2");
}


public polygraphicprogram.types.TwoPath getTarget() {
throw new UnsupportedOperationException("This ThreePath has no Target");
}

public ThreePath setTarget(polygraphicprogram.types.TwoPath _arg) {
throw new UnsupportedOperationException("This ThreePath has no Target");
}


public static polygraphicprogram.types.ThreePath fromTerm(aterm.ATerm trm) {
polygraphicprogram.types.ThreePath tmp;

tmp = polygraphicprogram.types.threepath.ThreeId.fromTerm(trm);
if (tmp != null) {
return tmp;
}

tmp = polygraphicprogram.types.threepath.ThreeCell.fromTerm(trm);
if (tmp != null) {
return tmp;
}

tmp = polygraphicprogram.types.threepath.ConsThreeC0.fromTerm(trm);
if (tmp != null) {
return tmp;
}

tmp = polygraphicprogram.types.threepath.EmptyThreeC0.fromTerm(trm);
if (tmp != null) {
return tmp;
}

tmp = polygraphicprogram.types.threepath.ConsThreeC1.fromTerm(trm);
if (tmp != null) {
return tmp;
}

tmp = polygraphicprogram.types.threepath.EmptyThreeC1.fromTerm(trm);
if (tmp != null) {
return tmp;
}

tmp = polygraphicprogram.types.threepath.ConsThreeC2.fromTerm(trm);
if (tmp != null) {
return tmp;
}

tmp = polygraphicprogram.types.threepath.EmptyThreeC2.fromTerm(trm);
if (tmp != null) {
return tmp;
}

tmp = polygraphicprogram.types.threepath.ThreeC0.fromTerm(trm);
if (tmp != null) {
return tmp;
}

tmp = polygraphicprogram.types.threepath.ThreeC1.fromTerm(trm);
if (tmp != null) {
return tmp;
}

tmp = polygraphicprogram.types.threepath.ThreeC2.fromTerm(trm);
if (tmp != null) {
return tmp;
}

throw new IllegalArgumentException("This is not a ThreePath " + trm);
}

public static polygraphicprogram.types.ThreePath fromString(String s) {
return fromTerm(atermFactory.parse(s));
}

public static polygraphicprogram.types.ThreePath fromStream(java.io.InputStream stream) throws java.io.IOException {
return fromTerm(atermFactory.readFromFile(stream));
}


public int length() {
throw new IllegalArgumentException(
"This "+this.getClass().getName()+" is not a list");
}

public polygraphicprogram.types.ThreePath reverse() {
throw new IllegalArgumentException(
"This "+this.getClass().getName()+" is not a list");
}

/**
* Collection
*/
/*
public boolean add(Object o) {
throw new UnsupportedOperationException("This object "+this.getClass().getName()+" is not mutable");
}

public boolean addAll(java.util.Collection c) {
throw new UnsupportedOperationException("This object "+this.getClass().getName()+" is not mutable");
}

public void clear() {
throw new UnsupportedOperationException("This object "+this.getClass().getName()+" is not mutable");
}

public boolean containsAll(java.util.Collection c) {
throw new IllegalArgumentException(
"This "+this.getClass().getName()+" is not a list");
}

public boolean contains(Object o) {
throw new IllegalArgumentException(
"This "+this.getClass().getName()+" is not a list");
}

public boolean equals(Object o) { return this == o; }

public int hashCode() { return hashCode(); }

public boolean isEmpty() { return false; }

public java.util.Iterator iterator() {
throw new IllegalArgumentException(
"This "+this.getClass().getName()+" is not a list");
}

public boolean remove(Object o) {
throw new UnsupportedOperationException("This object "+this.getClass().getName()+" is not mutable");
}

public boolean removeAll(java.util.Collection c) {
throw new UnsupportedOperationException("This object "+this.getClass().getName()+" is not mutable");
}

public boolean retainAll(java.util.Collection c) {
throw new UnsupportedOperationException("This object "+this.getClass().getName()+" is not mutable");
}

public int size() { return length(); }

public Object[] toArray() {
throw new IllegalArgumentException(
"This "+this.getClass().getName()+" is not a list");
}

public Object[] toArray(Object[] a) {
throw new UnsupportedOperationException("Not yet implemented");
}
*/

/* Generated by TOM (version 20071002 (src)): Do not edit this file */
/* Generated by TOM (version 20071002 (src)): Do not edit this file */
private static boolean tom_equal_term_char(char t1, char t2) { return (t1==t2) 
;
}
private static boolean tom_is_sort_char(char t) { return  true ;
}
private static boolean tom_equal_term_String(String t1, String t2) { return (t1.equals(t2)) 
;
}
private static boolean tom_is_sort_String(String t) { return  t instanceof String ;
}
private static boolean tom_equal_term_ThreePath(Object t1, Object t2) { return t1.equals(t2) 
;
}
private static boolean tom_is_sort_ThreePath(Object t) { return  t instanceof polygraphicprogram.types.ThreePath ;
}
private static boolean tom_equal_term_CellType(Object t1, Object t2) { return t1.equals(t2) 
;
}
private static boolean tom_is_sort_CellType(Object t) { return  t instanceof polygraphicprogram.types.CellType ;
}
private static boolean tom_equal_term_TwoPath(Object t1, Object t2) { return t1.equals(t2) 
;
}
private static boolean tom_is_sort_TwoPath(Object t) { return  t instanceof polygraphicprogram.types.TwoPath ;
}
private static boolean tom_equal_term_OnePath(Object t1, Object t2) { return t1.equals(t2) 
;
}
private static boolean tom_is_sort_OnePath(Object t) { return  t instanceof polygraphicprogram.types.OnePath ;
}
private static boolean tom_is_fun_sym_ThreeId( polygraphicprogram.types.ThreePath  t) { return  (t instanceof polygraphicprogram.types.threepath.ThreeId) ;
}
private static  polygraphicprogram.types.TwoPath  tom_get_slot_ThreeId_twoPath( polygraphicprogram.types.ThreePath  t) { return  t.gettwoPath() ;
}
private static boolean tom_is_fun_sym_ThreeCell( polygraphicprogram.types.ThreePath  t) { return  (t instanceof polygraphicprogram.types.threepath.ThreeCell) ;
}
private static  String  tom_get_slot_ThreeCell_Name( polygraphicprogram.types.ThreePath  t) { return  t.getName() ;
}
private static  polygraphicprogram.types.TwoPath  tom_get_slot_ThreeCell_Source( polygraphicprogram.types.ThreePath  t) { return  t.getSource() ;
}
private static  polygraphicprogram.types.TwoPath  tom_get_slot_ThreeCell_Target( polygraphicprogram.types.ThreePath  t) { return  t.getTarget() ;
}
private static  polygraphicprogram.types.CellType  tom_get_slot_ThreeCell_Type( polygraphicprogram.types.ThreePath  t) { return  t.getType() ;
}
private static boolean tom_is_fun_sym_ThreeC0( polygraphicprogram.types.ThreePath  t) { return  ((t instanceof polygraphicprogram.types.threepath.ConsThreeC0) || (t instanceof polygraphicprogram.types.threepath.EmptyThreeC0)) ;
}
private static  polygraphicprogram.types.ThreePath  tom_empty_list_ThreeC0() { return polygraphicprogram.types.threepath.EmptyThreeC0.make() 

; }private static  polygraphicprogram.types.ThreePath  tom_cons_list_ThreeC0( polygraphicprogram.types.ThreePath  e,  polygraphicprogram.types.ThreePath  l) { return  polygraphicprogram.types.threepath.ConsThreeC0.make(e,l) ; }private static  polygraphicprogram.types.ThreePath  tom_get_head_ThreeC0_ThreePath( polygraphicprogram.types.ThreePath  l) { return  l.getHeadThreeC0() ;
}
private static  polygraphicprogram.types.ThreePath  tom_get_tail_ThreeC0_ThreePath( polygraphicprogram.types.ThreePath  l) { return  l.getTailThreeC0() ;
}
private static boolean tom_is_empty_ThreeC0_ThreePath( polygraphicprogram.types.ThreePath  l) { return  l.isEmptyThreeC0() ;
}

  private static   polygraphicprogram.types.ThreePath  tom_append_list_ThreeC0( polygraphicprogram.types.ThreePath l1,  polygraphicprogram.types.ThreePath  l2) {
    if( l1.isEmptyThreeC0() ) {
      return l2;
    } else if( l2.isEmptyThreeC0() ) {
      return l1;
    } else if( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC0) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC0)) ) {
      if( (( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC0) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC0)) )? l1.getTailThreeC0() :tom_empty_list_ThreeC0()).isEmptyThreeC0() ) {
        return  polygraphicprogram.types.threepath.ConsThreeC0.make((( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC0) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC0)) )? l1.getHeadThreeC0() :l1),l2) ;
      } else {
        return  polygraphicprogram.types.threepath.ConsThreeC0.make((( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC0) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC0)) )? l1.getHeadThreeC0() :l1),tom_append_list_ThreeC0((( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC0) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC0)) )? l1.getTailThreeC0() :tom_empty_list_ThreeC0()),l2)) ;
      }
    } else {
      return  polygraphicprogram.types.threepath.ConsThreeC0.make(l1,l2) ;
    }
  }
  private static   polygraphicprogram.types.ThreePath  tom_get_slice_ThreeC0( polygraphicprogram.types.ThreePath  begin,  polygraphicprogram.types.ThreePath  end, polygraphicprogram.types.ThreePath  tail) {
    if(tom_equal_term_ThreePath(begin,end)) {
      return tail;
    } else {
      return  polygraphicprogram.types.threepath.ConsThreeC0.make((( ((begin instanceof polygraphicprogram.types.threepath.ConsThreeC0) || (begin instanceof polygraphicprogram.types.threepath.EmptyThreeC0)) )? begin.getHeadThreeC0() :begin),( polygraphicprogram.types.ThreePath )tom_get_slice_ThreeC0((( ((begin instanceof polygraphicprogram.types.threepath.ConsThreeC0) || (begin instanceof polygraphicprogram.types.threepath.EmptyThreeC0)) )? begin.getTailThreeC0() :tom_empty_list_ThreeC0()),end,tail)) ;
    }
  }
  private static boolean tom_is_fun_sym_ThreeC1( polygraphicprogram.types.ThreePath  t) { return  ((t instanceof polygraphicprogram.types.threepath.ConsThreeC1) || (t instanceof polygraphicprogram.types.threepath.EmptyThreeC1)) ;
}
private static  polygraphicprogram.types.ThreePath  tom_empty_list_ThreeC1() { return polygraphicprogram.types.threepath.EmptyThreeC1.make() 

; }private static  polygraphicprogram.types.ThreePath  tom_cons_list_ThreeC1( polygraphicprogram.types.ThreePath  e,  polygraphicprogram.types.ThreePath  l) { return  polygraphicprogram.types.threepath.ConsThreeC1.make(e,l) ; }private static  polygraphicprogram.types.ThreePath  tom_get_head_ThreeC1_ThreePath( polygraphicprogram.types.ThreePath  l) { return  l.getHeadThreeC1() ;
}
private static  polygraphicprogram.types.ThreePath  tom_get_tail_ThreeC1_ThreePath( polygraphicprogram.types.ThreePath  l) { return  l.getTailThreeC1() ;
}
private static boolean tom_is_empty_ThreeC1_ThreePath( polygraphicprogram.types.ThreePath  l) { return  l.isEmptyThreeC1() ;
}

  private static   polygraphicprogram.types.ThreePath  tom_append_list_ThreeC1( polygraphicprogram.types.ThreePath l1,  polygraphicprogram.types.ThreePath  l2) {
    if( l1.isEmptyThreeC1() ) {
      return l2;
    } else if( l2.isEmptyThreeC1() ) {
      return l1;
    } else if( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC1) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC1)) ) {
      if( (( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC1) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC1)) )? l1.getTailThreeC1() :tom_empty_list_ThreeC1()).isEmptyThreeC1() ) {
        return  polygraphicprogram.types.threepath.ConsThreeC1.make((( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC1) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC1)) )? l1.getHeadThreeC1() :l1),l2) ;
      } else {
        return  polygraphicprogram.types.threepath.ConsThreeC1.make((( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC1) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC1)) )? l1.getHeadThreeC1() :l1),tom_append_list_ThreeC1((( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC1) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC1)) )? l1.getTailThreeC1() :tom_empty_list_ThreeC1()),l2)) ;
      }
    } else {
      return  polygraphicprogram.types.threepath.ConsThreeC1.make(l1,l2) ;
    }
  }
  private static   polygraphicprogram.types.ThreePath  tom_get_slice_ThreeC1( polygraphicprogram.types.ThreePath  begin,  polygraphicprogram.types.ThreePath  end, polygraphicprogram.types.ThreePath  tail) {
    if(tom_equal_term_ThreePath(begin,end)) {
      return tail;
    } else {
      return  polygraphicprogram.types.threepath.ConsThreeC1.make((( ((begin instanceof polygraphicprogram.types.threepath.ConsThreeC1) || (begin instanceof polygraphicprogram.types.threepath.EmptyThreeC1)) )? begin.getHeadThreeC1() :begin),( polygraphicprogram.types.ThreePath )tom_get_slice_ThreeC1((( ((begin instanceof polygraphicprogram.types.threepath.ConsThreeC1) || (begin instanceof polygraphicprogram.types.threepath.EmptyThreeC1)) )? begin.getTailThreeC1() :tom_empty_list_ThreeC1()),end,tail)) ;
    }
  }
  private static boolean tom_is_fun_sym_ThreeC2( polygraphicprogram.types.ThreePath  t) { return  ((t instanceof polygraphicprogram.types.threepath.ConsThreeC2) || (t instanceof polygraphicprogram.types.threepath.EmptyThreeC2)) ;
}
private static  polygraphicprogram.types.ThreePath  tom_empty_list_ThreeC2() { return polygraphicprogram.types.threepath.EmptyThreeC2.make() 

; }private static  polygraphicprogram.types.ThreePath  tom_cons_list_ThreeC2( polygraphicprogram.types.ThreePath  e,  polygraphicprogram.types.ThreePath  l) { return  polygraphicprogram.types.threepath.ConsThreeC2.make(e,l) ; }private static  polygraphicprogram.types.ThreePath  tom_get_head_ThreeC2_ThreePath( polygraphicprogram.types.ThreePath  l) { return  l.getHeadThreeC2() ;
}
private static  polygraphicprogram.types.ThreePath  tom_get_tail_ThreeC2_ThreePath( polygraphicprogram.types.ThreePath  l) { return  l.getTailThreeC2() ;
}
private static boolean tom_is_empty_ThreeC2_ThreePath( polygraphicprogram.types.ThreePath  l) { return  l.isEmptyThreeC2() ;
}

  private static   polygraphicprogram.types.ThreePath  tom_append_list_ThreeC2( polygraphicprogram.types.ThreePath l1,  polygraphicprogram.types.ThreePath  l2) {
    if( l1.isEmptyThreeC2() ) {
      return l2;
    } else if( l2.isEmptyThreeC2() ) {
      return l1;
    } else if( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC2) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC2)) ) {
      if( (( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC2) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC2)) )? l1.getTailThreeC2() :tom_empty_list_ThreeC2()).isEmptyThreeC2() ) {
        return  polygraphicprogram.types.threepath.ConsThreeC2.make((( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC2) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC2)) )? l1.getHeadThreeC2() :l1),l2) ;
      } else {
        return  polygraphicprogram.types.threepath.ConsThreeC2.make((( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC2) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC2)) )? l1.getHeadThreeC2() :l1),tom_append_list_ThreeC2((( ((l1 instanceof polygraphicprogram.types.threepath.ConsThreeC2) || (l1 instanceof polygraphicprogram.types.threepath.EmptyThreeC2)) )? l1.getTailThreeC2() :tom_empty_list_ThreeC2()),l2)) ;
      }
    } else {
      return  polygraphicprogram.types.threepath.ConsThreeC2.make(l1,l2) ;
    }
  }
  private static   polygraphicprogram.types.ThreePath  tom_get_slice_ThreeC2( polygraphicprogram.types.ThreePath  begin,  polygraphicprogram.types.ThreePath  end, polygraphicprogram.types.ThreePath  tail) {
    if(tom_equal_term_ThreePath(begin,end)) {
      return tail;
    } else {
      return  polygraphicprogram.types.threepath.ConsThreeC2.make((( ((begin instanceof polygraphicprogram.types.threepath.ConsThreeC2) || (begin instanceof polygraphicprogram.types.threepath.EmptyThreeC2)) )? begin.getHeadThreeC2() :begin),( polygraphicprogram.types.ThreePath )tom_get_slice_ThreeC2((( ((begin instanceof polygraphicprogram.types.threepath.ConsThreeC2) || (begin instanceof polygraphicprogram.types.threepath.EmptyThreeC2)) )? begin.getTailThreeC2() :tom_empty_list_ThreeC2()),end,tail)) ;
    }
  }
  private static boolean tom_is_fun_sym_TwoC0( polygraphicprogram.types.TwoPath  t) { return  ((t instanceof polygraphicprogram.types.twopath.ConsTwoC0) || (t instanceof polygraphicprogram.types.twopath.EmptyTwoC0)) ;
}
private static  polygraphicprogram.types.TwoPath  tom_empty_list_TwoC0() { return polygraphicprogram.types.twopath.EmptyTwoC0.make() 

; }private static  polygraphicprogram.types.TwoPath  tom_cons_list_TwoC0( polygraphicprogram.types.TwoPath  e,  polygraphicprogram.types.TwoPath  l) { return  polygraphicprogram.types.twopath.ConsTwoC0.make(e,l) ; }private static  polygraphicprogram.types.TwoPath  tom_get_head_TwoC0_TwoPath( polygraphicprogram.types.TwoPath  l) { return  l.getHeadTwoC0() ;
}
private static  polygraphicprogram.types.TwoPath  tom_get_tail_TwoC0_TwoPath( polygraphicprogram.types.TwoPath  l) { return  l.getTailTwoC0() ;
}
private static boolean tom_is_empty_TwoC0_TwoPath( polygraphicprogram.types.TwoPath  l) { return  l.isEmptyTwoC0() ;
}

  private static   polygraphicprogram.types.TwoPath  tom_append_list_TwoC0( polygraphicprogram.types.TwoPath l1,  polygraphicprogram.types.TwoPath  l2) {
    if( l1.isEmptyTwoC0() ) {
      return l2;
    } else if( l2.isEmptyTwoC0() ) {
      return l1;
    } else if( ((l1 instanceof polygraphicprogram.types.twopath.ConsTwoC0) || (l1 instanceof polygraphicprogram.types.twopath.EmptyTwoC0)) ) {
      if( (( ((l1 instanceof polygraphicprogram.types.twopath.ConsTwoC0) || (l1 instanceof polygraphicprogram.types.twopath.EmptyTwoC0)) )? l1.getTailTwoC0() :tom_empty_list_TwoC0()).isEmptyTwoC0() ) {
        return  polygraphicprogram.types.twopath.ConsTwoC0.make((( ((l1 instanceof polygraphicprogram.types.twopath.ConsTwoC0) || (l1 instanceof polygraphicprogram.types.twopath.EmptyTwoC0)) )? l1.getHeadTwoC0() :l1),l2) ;
      } else {
        return  polygraphicprogram.types.twopath.ConsTwoC0.make((( ((l1 instanceof polygraphicprogram.types.twopath.ConsTwoC0) || (l1 instanceof polygraphicprogram.types.twopath.EmptyTwoC0)) )? l1.getHeadTwoC0() :l1),tom_append_list_TwoC0((( ((l1 instanceof polygraphicprogram.types.twopath.ConsTwoC0) || (l1 instanceof polygraphicprogram.types.twopath.EmptyTwoC0)) )? l1.getTailTwoC0() :tom_empty_list_TwoC0()),l2)) ;
      }
    } else {
      return  polygraphicprogram.types.twopath.ConsTwoC0.make(l1,l2) ;
    }
  }
  private static   polygraphicprogram.types.TwoPath  tom_get_slice_TwoC0( polygraphicprogram.types.TwoPath  begin,  polygraphicprogram.types.TwoPath  end, polygraphicprogram.types.TwoPath  tail) {
    if(tom_equal_term_TwoPath(begin,end)) {
      return tail;
    } else {
      return  polygraphicprogram.types.twopath.ConsTwoC0.make((( ((begin instanceof polygraphicprogram.types.twopath.ConsTwoC0) || (begin instanceof polygraphicprogram.types.twopath.EmptyTwoC0)) )? begin.getHeadTwoC0() :begin),( polygraphicprogram.types.TwoPath )tom_get_slice_TwoC0((( ((begin instanceof polygraphicprogram.types.twopath.ConsTwoC0) || (begin instanceof polygraphicprogram.types.twopath.EmptyTwoC0)) )? begin.getTailTwoC0() :tom_empty_list_TwoC0()),end,tail)) ;
    }
  }
  private static boolean tom_is_fun_sym_TwoC1( polygraphicprogram.types.TwoPath  t) { return  ((t instanceof polygraphicprogram.types.twopath.ConsTwoC1) || (t instanceof polygraphicprogram.types.twopath.EmptyTwoC1)) ;
}
private static  polygraphicprogram.types.TwoPath  tom_empty_list_TwoC1() { return polygraphicprogram.types.twopath.EmptyTwoC1.make() 

; }private static  polygraphicprogram.types.TwoPath  tom_cons_list_TwoC1( polygraphicprogram.types.TwoPath  e,  polygraphicprogram.types.TwoPath  l) { return  polygraphicprogram.types.twopath.ConsTwoC1.make(e,l) ; }private static  polygraphicprogram.types.TwoPath  tom_get_head_TwoC1_TwoPath( polygraphicprogram.types.TwoPath  l) { return  l.getHeadTwoC1() ;
}
private static  polygraphicprogram.types.TwoPath  tom_get_tail_TwoC1_TwoPath( polygraphicprogram.types.TwoPath  l) { return  l.getTailTwoC1() ;
}
private static boolean tom_is_empty_TwoC1_TwoPath( polygraphicprogram.types.TwoPath  l) { return  l.isEmptyTwoC1() ;
}

  private static   polygraphicprogram.types.TwoPath  tom_append_list_TwoC1( polygraphicprogram.types.TwoPath l1,  polygraphicprogram.types.TwoPath  l2) {
    if( l1.isEmptyTwoC1() ) {
      return l2;
    } else if( l2.isEmptyTwoC1() ) {
      return l1;
    } else if( ((l1 instanceof polygraphicprogram.types.twopath.ConsTwoC1) || (l1 instanceof polygraphicprogram.types.twopath.EmptyTwoC1)) ) {
      if( (( ((l1 instanceof polygraphicprogram.types.twopath.ConsTwoC1) || (l1 instanceof polygraphicprogram.types.twopath.EmptyTwoC1)) )? l1.getTailTwoC1() :tom_empty_list_TwoC1()).isEmptyTwoC1() ) {
        return  polygraphicprogram.types.twopath.ConsTwoC1.make((( ((l1 instanceof polygraphicprogram.types.twopath.ConsTwoC1) || (l1 instanceof polygraphicprogram.types.twopath.EmptyTwoC1)) )? l1.getHeadTwoC1() :l1),l2) ;
      } else {
        return  polygraphicprogram.types.twopath.ConsTwoC1.make((( ((l1 instanceof polygraphicprogram.types.twopath.ConsTwoC1) || (l1 instanceof polygraphicprogram.types.twopath.EmptyTwoC1)) )? l1.getHeadTwoC1() :l1),tom_append_list_TwoC1((( ((l1 instanceof polygraphicprogram.types.twopath.ConsTwoC1) || (l1 instanceof polygraphicprogram.types.twopath.EmptyTwoC1)) )? l1.getTailTwoC1() :tom_empty_list_TwoC1()),l2)) ;
      }
    } else {
      return  polygraphicprogram.types.twopath.ConsTwoC1.make(l1,l2) ;
    }
  }
  private static   polygraphicprogram.types.TwoPath  tom_get_slice_TwoC1( polygraphicprogram.types.TwoPath  begin,  polygraphicprogram.types.TwoPath  end, polygraphicprogram.types.TwoPath  tail) {
    if(tom_equal_term_TwoPath(begin,end)) {
      return tail;
    } else {
      return  polygraphicprogram.types.twopath.ConsTwoC1.make((( ((begin instanceof polygraphicprogram.types.twopath.ConsTwoC1) || (begin instanceof polygraphicprogram.types.twopath.EmptyTwoC1)) )? begin.getHeadTwoC1() :begin),( polygraphicprogram.types.TwoPath )tom_get_slice_TwoC1((( ((begin instanceof polygraphicprogram.types.twopath.ConsTwoC1) || (begin instanceof polygraphicprogram.types.twopath.EmptyTwoC1)) )? begin.getTailTwoC1() :tom_empty_list_TwoC1()),end,tail)) ;
    }
  }
  private static boolean tom_is_fun_sym_OneC0( polygraphicprogram.types.OnePath  t) { return  ((t instanceof polygraphicprogram.types.onepath.ConsOneC0) || (t instanceof polygraphicprogram.types.onepath.EmptyOneC0)) ;
}
private static  polygraphicprogram.types.OnePath  tom_empty_list_OneC0() { return polygraphicprogram.types.onepath.EmptyOneC0.make() 

; }private static  polygraphicprogram.types.OnePath  tom_cons_list_OneC0( polygraphicprogram.types.OnePath  e,  polygraphicprogram.types.OnePath  l) { return  polygraphicprogram.types.onepath.ConsOneC0.make(e,l) ; }private static  polygraphicprogram.types.OnePath  tom_get_head_OneC0_OnePath( polygraphicprogram.types.OnePath  l) { return  l.getHeadOneC0() ;
}
private static  polygraphicprogram.types.OnePath  tom_get_tail_OneC0_OnePath( polygraphicprogram.types.OnePath  l) { return  l.getTailOneC0() ;
}
private static boolean tom_is_empty_OneC0_OnePath( polygraphicprogram.types.OnePath  l) { return  l.isEmptyOneC0() ;
}

  private static   polygraphicprogram.types.OnePath  tom_append_list_OneC0( polygraphicprogram.types.OnePath l1,  polygraphicprogram.types.OnePath  l2) {
    if( l1.isEmptyOneC0() ) {
      return l2;
    } else if( l2.isEmptyOneC0() ) {
      return l1;
    } else if( ((l1 instanceof polygraphicprogram.types.onepath.ConsOneC0) || (l1 instanceof polygraphicprogram.types.onepath.EmptyOneC0)) ) {
      if( (( ((l1 instanceof polygraphicprogram.types.onepath.ConsOneC0) || (l1 instanceof polygraphicprogram.types.onepath.EmptyOneC0)) )? l1.getTailOneC0() :tom_empty_list_OneC0()).isEmptyOneC0() ) {
        return  polygraphicprogram.types.onepath.ConsOneC0.make((( ((l1 instanceof polygraphicprogram.types.onepath.ConsOneC0) || (l1 instanceof polygraphicprogram.types.onepath.EmptyOneC0)) )? l1.getHeadOneC0() :l1),l2) ;
      } else {
        return  polygraphicprogram.types.onepath.ConsOneC0.make((( ((l1 instanceof polygraphicprogram.types.onepath.ConsOneC0) || (l1 instanceof polygraphicprogram.types.onepath.EmptyOneC0)) )? l1.getHeadOneC0() :l1),tom_append_list_OneC0((( ((l1 instanceof polygraphicprogram.types.onepath.ConsOneC0) || (l1 instanceof polygraphicprogram.types.onepath.EmptyOneC0)) )? l1.getTailOneC0() :tom_empty_list_OneC0()),l2)) ;
      }
    } else {
      return  polygraphicprogram.types.onepath.ConsOneC0.make(l1,l2) ;
    }
  }
  private static   polygraphicprogram.types.OnePath  tom_get_slice_OneC0( polygraphicprogram.types.OnePath  begin,  polygraphicprogram.types.OnePath  end, polygraphicprogram.types.OnePath  tail) {
    if(tom_equal_term_OnePath(begin,end)) {
      return tail;
    } else {
      return  polygraphicprogram.types.onepath.ConsOneC0.make((( ((begin instanceof polygraphicprogram.types.onepath.ConsOneC0) || (begin instanceof polygraphicprogram.types.onepath.EmptyOneC0)) )? begin.getHeadOneC0() :begin),( polygraphicprogram.types.OnePath )tom_get_slice_OneC0((( ((begin instanceof polygraphicprogram.types.onepath.ConsOneC0) || (begin instanceof polygraphicprogram.types.onepath.EmptyOneC0)) )? begin.getTailOneC0() :tom_empty_list_OneC0()),end,tail)) ;
    }
  }
  

}

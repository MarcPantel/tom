module Term
  imports 
  public
    sorts Term TermList Constraint ConstraintList
      
  abstract syntax
    Variable(name:String) -> Term
    Appl(name:String, args:TermList) -> Term
    Anti(pattern:Term) -> Term
    concTerm( Term* ) -> TermList

    True -> Constraint
    False -> Constraint
    Neg(c:Constraint) -> Constraint
    Match(pattern:Term, subject:Term) -> Constraint
    And(cl:ConstraintList) -> Constraint
    concConstraint( Constraint* ) -> ConstraintList


module Term
  imports 
  public
    sorts Term TermList Constraint ConstraintList
      
  abstract syntax
    Variable(name:String) -> Term
    Appl(name:String, args:TermList) -> Term
    ApplCons(name:String, args:TermList, cons:ConstraintList)			-> Term    
    Anti(pattern:Term) -> Term
    TermDiff(term1:Term, term2:Term) -> Term
    concTerm( Term* ) -> TermList    

    True 																-> Constraint
    False 																-> Constraint
    LessThan(objectToCompare:Term, objectToCompareTo:Term)				-> Constraint
    GreaterThan(objectToCompare:Term, objectToCompareTo:Term)			-> Constraint
    InList(objectToCompare:Term, list:TermList)							-> Constraint
    Neg(c:Constraint) 													-> Constraint
    Match(pattern:Term, subject:Term) 									-> Constraint
    And(cl:ConstraintList) 												-> Constraint
    Or(cl:ConstraintList) 												-> Constraint
    concConstraint( Constraint* ) 										-> ConstraintList
